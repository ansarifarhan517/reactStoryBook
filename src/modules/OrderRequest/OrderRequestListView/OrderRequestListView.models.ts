import { IClientProperty } from '../../common/ClientProperties/interfaces'

export interface IOrderRequestListViewRowData {
  awbNo: string
  bookingDate: number
  bookingDateTZ: string
  bookingId: number
  bookingReferenceId: string
  bookingStatus: string
  bookingTemplateType: string
  bookingType: string
  branchName: string
  createDeliverAddress: boolean
  createDeliverCustomer: boolean
  createPickupAddress: boolean
  createPickupCustomer: boolean
  customerName: string
  declaredValue: number
  deliverAccountName: string
  destination: string
  destinationCity: string
  destinationPincode: string
  destinationState: string
  isActiveFl: boolean
  isAutoGeneratedDeliverAddrCode: boolean
  isAutoGeneratedPickupAddrCode: boolean
  isCustomerAddressDataPresent: boolean
  notes: string
  orderNo: string
  orderStatus: string
  origin: string
  originCity: string
  originPincode: string
  originState: string
  paymentType: string
  pickupAccountCode: string
  pickupAccountName: string
  pickupAddress: string
  pickupAddressCd: string
  pickupAddressId: number
  pickupAddressTimezone: string
  pickupApartment: string
  pickupBranchId: number
  pickupBranchName: string
  pickupBy: number
  pickupCity: string
  pickupCountry: string
  pickupCustomerId: number
  pickupEmail: string
  pickupEndTimeWindow: number
  pickupEndTimeWindowTZ: string
  pickupLandmark: string
  pickupLatitude: number
  pickupLocality: string
  pickupLongitude: number
  pickupNotes: string
  pickupPinCode: string
  pickupServiceTime: number
  pickupStartTimeWindow: number
  pickupStartTimeWindowTZ: string
  pickupState: string
  pickupStreetName: string
  shipDate: number
  shipDateTZ: string
  subClient: string
  totalVolume: number
  totalWeight: number
}
export type tOrderRequestStatus = 'ALL' | 'PENDING' | 'CONFIRMED' | 'REJECTED' | 'CANCELLED'

export interface IOrderRequestViewDataPayload {
  clientBranchId?: number,
  otherCount?: number,
  totalCount: number,
  results: Array<IOrderRequestListViewRowData>,
  clientProperties?: Record<string, IClientProperty>
}

export interface ICustomField {
  type: string,
  field: string,
  value: any
}


export interface IDropdown {
  label: string
  value: number | string
  [key: string]: any
}

export type tOrderRequesttypeModes = 'listview'

export interface IPriorityList {
  clientRefMasterType: string
  clientRefMasterCd: string
  clientRefMasterDesc: string
  clientRefMasterId: number
  sequence: number
}

