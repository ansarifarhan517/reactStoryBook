{"ast":null,"code":"import _taggedTemplateLiteral from \"/Users/farhanansari/Code/ui-library/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/taggedTemplateLiteral\";\n\nvar _this = this,\n    _jsxFileName = \"/Users/farhanansari/Code/ui-library/src/utilities/components/GlobalStyled.tsx\";\n\nfunction _templateObject() {\n  var data = _taggedTemplateLiteral([\"\\n  \", \"/* \", \"; */\\n\"]);\n\n  _templateObject = function _templateObject() {\n    return data;\n  };\n\n  return data;\n}\n\nimport React from 'react';\nimport styled from 'styled-components';\nimport { tooltipMixin } from '../mixins';\nvar GlobalStyled = styled.div(_templateObject(), function (_ref) {\n  var _theme$typography, _theme$typography2;\n\n  var theme = _ref.theme;\n  return \"\\n    font-family: \".concat(theme === null || theme === void 0 ? void 0 : (_theme$typography = theme.typography) === null || _theme$typography === void 0 ? void 0 : _theme$typography.fontFamily, \";\\n    font-size: \").concat(theme === null || theme === void 0 ? void 0 : (_theme$typography2 = theme.typography) === null || _theme$typography2 === void 0 ? void 0 : _theme$typography2.fontSize, \"px;\\n\\n    .cursor{\\n      cursor: pointer;\\n    }\\n  \");\n}, tooltipMixin);\nexport var withGlobalStyled = function withGlobalStyled(Component) {\n  return function (props) {\n    return /*#__PURE__*/React.createElement(GlobalStyled, {\n      __self: _this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 21,\n        columnNumber: 5\n      }\n    }, /*#__PURE__*/React.createElement(Component, Object.assign({}, props, {\n      __self: _this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 22,\n        columnNumber: 7\n      }\n    })));\n  };\n};\nexport default GlobalStyled;","map":{"version":3,"sources":["/Users/farhanansari/Code/ui-library/src/utilities/components/GlobalStyled.tsx"],"names":["React","styled","tooltipMixin","GlobalStyled","div","theme","typography","fontFamily","fontSize","withGlobalStyled","Component","props"],"mappings":";;;;;;;;;;;;;;;AAAA,OAAOA,KAAP,MAAqC,OAArC;AAEA,OAAOC,MAAP,MAAmB,mBAAnB;AACA,SAASC,YAAT,QAA6B,WAA7B;AAEA,IAAMC,YAAY,GAAGF,MAAM,CAACG,GAAV,oBACd;AAAA;;AAAA,MAAGC,KAAH,QAAGA,KAAH;AAAA,sCACeA,KADf,aACeA,KADf,4CACeA,KAAK,CAAEC,UADtB,sDACe,kBAAmBC,UADlC,+BAEaF,KAFb,aAEaA,KAFb,6CAEaA,KAAK,CAAEC,UAFpB,uDAEa,mBAAmBE,QAFhC;AAAA,CADc,EAQTN,YARS,CAAlB;AAWA,OAAO,IAAMO,gBAAgB,GAAG,SAAnBA,gBAAmB,CAC9BC,SAD8B;AAAA,SAE3B,UAACC,KAAD,EAAc;AACjB,wBACE,oBAAC,YAAD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,oBACE,oBAAC,SAAD,oBAAeA,KAAf;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,OADF,CADF;AAKD,GAR+B;AAAA,CAAzB;AASP,eAAeR,YAAf","sourcesContent":["import React, { ComponentType } from 'react'\n\nimport styled from 'styled-components'\nimport { tooltipMixin } from '../mixins'\n\nconst GlobalStyled = styled.div`\n  ${({ theme }) => `\n    font-family: ${theme?.typography?.fontFamily};\n    font-size: ${theme?.typography?.fontSize}px;\n\n    .cursor{\n      cursor: pointer;\n    }\n  `}/* ${tooltipMixin}; */\n`\n\nexport const withGlobalStyled = <P extends object = {}>(\n  Component: ComponentType<P>\n) => (props: P) => {\n  return (\n    <GlobalStyled>\n      <Component {...props} />\n    </GlobalStyled>\n  )\n}\nexport default GlobalStyled\n"]},"metadata":{},"sourceType":"module"}