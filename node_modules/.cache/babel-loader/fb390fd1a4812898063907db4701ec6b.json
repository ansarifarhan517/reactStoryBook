{"ast":null,"code":"import _defineProperty from \"/Users/farhanansari/Desktop/CODE/PrxProject/untitled folder/reactStoryBook/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/defineProperty\";\n\nvar _parameters;\n\n/* eslint-disable */\n// @ts-nocheck\n// @ts-ignore\nvar withSourceLoader = require('@storybook/source-loader/preview').withSource; // @ts-ignore\n\n\nvar addSourceDecorator = require(\"@storybook/source-loader/preview\").addSource; // @ts-ignore\n\n\nvar __SOURCE_PREFIX__ = \"/Users/farhanansari/Desktop/CODE/PrxProject/untitled folder/reactStoryBook/src/components/molecules/Accordian\"; // @ts-ignore\n\nvar __STORY__ = \"\\n\\n// @ts-nocheck\\n// @ts-ignore\\nvar withSourceLoader = require('@storybook/source-loader/preview').withSource;\\n// @ts-ignore\\nvar addSourceDecorator = require(\\\"@storybook/source-loader/preview\\\").addSource;\\n// @ts-ignore\\nvar __SOURCE_PREFIX__ = \\\"/Users/farhanansari/Desktop/CODE/PrxProject/untitled folder/reactStoryBook/src/components/molecules/Accordian\\\";\\n// @ts-ignore\\nvar __STORY__ = \\\"\\\\n\\\\n// @ts-nocheck\\\\n// @ts-ignore\\\\nvar withSourceLoader = require('@storybook/source-loader/preview').withSource;\\\\n// @ts-ignore\\\\nvar addSourceDecorator = require(\\\\\\\"@storybook/source-loader/preview\\\\\\\").addSource;\\\\n// @ts-ignore\\\\nvar __SOURCE_PREFIX__ = \\\\\\\"/Users/farhanansari/Desktop/CODE/PrxProject/untitled folder/reactStoryBook/src/components/molecules/Accordian\\\\\\\";\\\\n// @ts-ignore\\\\nvar __STORY__ = \\\\\\\"import React from 'react'\\\\\\\\nimport { withKnobs } from '@storybook/addon-knobs'\\\\\\\\nimport Accordian from '.'\\\\\\\\n\\\\\\\\nimport Box from '../../atoms/Box'\\\\\\\\n\\\\\\\\nimport { path } from '..'\\\\\\\\nimport ThemeWrapper from '../../../utilities/components/ThemeWrapper'\\\\\\\\nimport {\\\\\\\\n  AccordionHeaderTitle,\\\\\\\\n  AccordionHeaderSubTitle,\\\\\\\\n  AccordionContent\\\\\\\\n} from './styles'\\\\\\\\n\\\\\\\\nexport default {\\\\\\\\n  title: `${path}/Accordian`,\\\\\\\\n  decorators: [withKnobs],\\\\\\\\n  component: Accordian\\\\\\\\n}\\\\\\\\n\\\\\\\\nconst AccordionComponent = () => {\\\\\\\\n  const [expanded, setExpanded] = React.useState('1')\\\\\\\\n  const handleToggle = (accordianId: string, isExpanded?: boolean) => {\\\\\\\\n    setExpanded(isExpanded ? accordianId : '')\\\\\\\\n  }\\\\\\\\n\\\\\\\\n  const handleToggleChange = (e: any) => {\\\\\\\\n    console.log(\\\\\\\\\\\\\\\"toggledata\\\\\\\\\\\\\\\", e)\\\\\\\\n  }\\\\\\\\n\\\\\\\\n  const tooltipProps={\\\\\\\\n    messagePlacement:'end',\\\\\\\\n    arrowPlacement:'center',\\\\\\\\n    tooltipDirection:'bottom'\\\\\\\\n  }\\\\\\\\n\\\\\\\\n  return (\\\\\\\\n    <>\\\\\\\\n       <Accordian id='1' expanded={expanded === '1'} onToggle={handleToggle} onToggleSwitch={handleToggleChange} switchTooltipMessage=\\\\\\\\\\\\\\\"Activate / Deactivate this setting\\\\\\\\\\\\\\\" switchTooltipProps={tooltipProps} showToggleSwitch={true} toggleSwitchStyle={{paddingRight:\\\\\\\\\\\\\\\"15px\\\\\\\\\\\\\\\"}}>\\\\\\\\n        {{\\\\\\\\n          header: (\\\\\\\\n            <>\\\\\\\\n              <AccordionHeaderTitle>\\\\\\\\n                Minimum Capacity Utilization\\\\\\\\n              </AccordionHeaderTitle>\\\\\\\\n              <AccordionHeaderSubTitle>\\\\\\\\n                Helps you manage Fleet utilization\\\\\\\\n              </AccordionHeaderSubTitle>\\\\\\\\n            </>\\\\\\\\n          ),\\\\\\\\n          content: (\\\\\\\\n            <AccordionContent>\\\\\\\\n              {Array(10)\\\\\\\\n                .fill(0)\\\\\\\\n                .map((_, i) => (\\\\\\\\n                  <div key={i}>Line {i + 1} </div>\\\\\\\\n                ))}\\\\\\\\n            </AccordionContent>\\\\\\\\n          )\\\\\\\\n        }}\\\\\\\\n      </Accordian>\\\\\\\\n      <Accordian id='2' expanded={expanded === '2'} onToggle={handleToggle} onToggleSwitch={handleToggleChange} showToggleSwitch={true} toggleSwitchDisable={true} isToggleChecked={true}>\\\\\\\\n        {{\\\\\\\\n          header: (\\\\\\\\n            <>\\\\\\\\n              <AccordionHeaderTitle>Send Activation Link</AccordionHeaderTitle>\\\\\\\\n              <AccordionHeaderSubTitle>\\\\\\\\n                Send an activation link to the mobile number of a newly created\\\\\\\\n                Delivery Associate.\\\\\\\\n              </AccordionHeaderSubTitle>\\\\\\\\n            </>\\\\\\\\n          ),\\\\\\\\n          content: (\\\\\\\\n            <AccordionContent>\\\\\\\\n              {Array(5)\\\\\\\\n                .fill(0)\\\\\\\\n                .map((_, i) => (\\\\\\\\n                  <div key={i}>Line {i + 1} </div>\\\\\\\\n                ))}\\\\\\\\n            </AccordionContent>\\\\\\\\n          )\\\\\\\\n        }}\\\\\\\\n      </Accordian>\\\\\\\\n      <Accordian id='3' expanded={expanded === '3'} onToggle={handleToggle} onToggleSwitch={handleToggleChange}>\\\\\\\\n        {{\\\\\\\\n          header: (\\\\\\\\n            <>\\\\\\\\n              <AccordionHeaderTitle>\\\\\\\\n                Delivery Associates Skill-sets configuration\\\\\\\\n              </AccordionHeaderTitle>\\\\\\\\n              <AccordionHeaderSubTitle>\\\\\\\\n                Select specific skills while adding a Delivery Associate.\\\\\\\\n                LogiNext Route planning will automatically assign the Shipments\\\\\\\\n                that a Delivery Associate is skilled to perform.\\\\\\\\n              </AccordionHeaderSubTitle>\\\\\\\\n            </>\\\\\\\\n          ),\\\\\\\\n          content: (\\\\\\\\n            <AccordionContent>\\\\\\\\n              {Array(15)\\\\\\\\n                .fill(0)\\\\\\\\n                .map((_, i) => (\\\\\\\\n                  <div key={i}>Line {i + 1} </div>\\\\\\\\n                ))}\\\\\\\\n            </AccordionContent>\\\\\\\\n          )\\\\\\\\n        }}\\\\\\\\n      </Accordian>\\\\\\\\n    </>\\\\\\\\n  )\\\\\\\\n}\\\\\\\\nexport const Default = () => {\\\\\\\\n  return (\\\\\\\\n    <ThemeWrapper>\\\\\\\\n      <Box p='1em' bgColor='grey.50'>\\\\\\\\n        <AccordionComponent />\\\\\\\\n      </Box>\\\\\\\\n    </ThemeWrapper>\\\\\\\\n  )\\\\\\\\n}\\\\\\\\n\\\\\\\";\\\\n// @ts-ignore\\\\nvar __ADDS_MAP__ = {};\\\\n// @ts-ignore\\\\nvar __MAIN_FILE_LOCATION__ = \\\\\\\"/Accordian.stories.tsx\\\\\\\";\\\\n// @ts-ignore\\\\nvar __MODULE_DEPENDENCIES__ = [];\\\\n// @ts-ignore\\\\nvar __LOCAL_DEPENDENCIES__ = {};\\\\n// @ts-ignore\\\\nvar __IDS_TO_FRAMEWORKS__ = {};\\\\n        \\\\nimport React from 'react'\\\\nimport { withKnobs } from '@storybook/addon-knobs'\\\\nimport Accordian from '.'\\\\n\\\\nimport Box from '../../atoms/Box'\\\\n\\\\nimport { path } from '..'\\\\nimport ThemeWrapper from '../../../utilities/components/ThemeWrapper'\\\\nimport {\\\\n  AccordionHeaderTitle,\\\\n  AccordionHeaderSubTitle,\\\\n  AccordionContent\\\\n} from './styles'\\\\n\\\\nexport default {parameters: {\\\\\\\"storySource\\\\\\\":{\\\\\\\"source\\\\\\\":\\\\\\\"import React from 'react'\\\\\\\\nimport { withKnobs } from '@storybook/addon-knobs'\\\\\\\\nimport Accordian from '.'\\\\\\\\n\\\\\\\\nimport Box from '../../atoms/Box'\\\\\\\\n\\\\\\\\nimport { path } from '..'\\\\\\\\nimport ThemeWrapper from '../../../utilities/components/ThemeWrapper'\\\\\\\\nimport {\\\\\\\\n  AccordionHeaderTitle,\\\\\\\\n  AccordionHeaderSubTitle,\\\\\\\\n  AccordionContent\\\\\\\\n} from './styles'\\\\\\\\n\\\\\\\\nexport default {\\\\\\\\n  title: `${path}/Accordian`,\\\\\\\\n  decorators: [withKnobs],\\\\\\\\n  component: Accordian\\\\\\\\n}\\\\\\\\n\\\\\\\\nconst AccordionComponent = () => {\\\\\\\\n  const [expanded, setExpanded] = React.useState('1')\\\\\\\\n  const handleToggle = (accordianId: string, isExpanded?: boolean) => {\\\\\\\\n    setExpanded(isExpanded ? accordianId : '')\\\\\\\\n  }\\\\\\\\n\\\\\\\\n  const handleToggleChange = (e: any) => {\\\\\\\\n    console.log(\\\\\\\\\\\\\\\"toggledata\\\\\\\\\\\\\\\", e)\\\\\\\\n  }\\\\\\\\n\\\\\\\\n  const tooltipProps={\\\\\\\\n    messagePlacement:'end',\\\\\\\\n    arrowPlacement:'center',\\\\\\\\n    tooltipDirection:'bottom'\\\\\\\\n  }\\\\\\\\n\\\\\\\\n  return (\\\\\\\\n    <>\\\\\\\\n       <Accordian id='1' expanded={expanded === '1'} onToggle={handleToggle} onToggleSwitch={handleToggleChange} switchTooltipMessage=\\\\\\\\\\\\\\\"Activate / Deactivate this setting\\\\\\\\\\\\\\\" switchTooltipProps={tooltipProps} showToggleSwitch={true} toggleSwitchStyle={{paddingRight:\\\\\\\\\\\\\\\"15px\\\\\\\\\\\\\\\"}}>\\\\\\\\n        {{\\\\\\\\n          header: (\\\\\\\\n            <>\\\\\\\\n              <AccordionHeaderTitle>\\\\\\\\n                Minimum Capacity Utilization\\\\\\\\n              </AccordionHeaderTitle>\\\\\\\\n              <AccordionHeaderSubTitle>\\\\\\\\n                Helps you manage Fleet utilization\\\\\\\\n              </AccordionHeaderSubTitle>\\\\\\\\n            </>\\\\\\\\n          ),\\\\\\\\n          content: (\\\\\\\\n            <AccordionContent>\\\\\\\\n              {Array(10)\\\\\\\\n                .fill(0)\\\\\\\\n                .map((_, i) => (\\\\\\\\n                  <div key={i}>Line {i + 1} </div>\\\\\\\\n                ))}\\\\\\\\n            </AccordionContent>\\\\\\\\n          )\\\\\\\\n        }}\\\\\\\\n      </Accordian>\\\\\\\\n      <Accordian id='2' expanded={expanded === '2'} onToggle={handleToggle} onToggleSwitch={handleToggleChange} showToggleSwitch={true} toggleSwitchDisable={true} isToggleChecked={true}>\\\\\\\\n        {{\\\\\\\\n          header: (\\\\\\\\n            <>\\\\\\\\n              <AccordionHeaderTitle>Send Activation Link</AccordionHeaderTitle>\\\\\\\\n              <AccordionHeaderSubTitle>\\\\\\\\n                Send an activation link to the mobile number of a newly created\\\\\\\\n                Delivery Associate.\\\\\\\\n              </AccordionHeaderSubTitle>\\\\\\\\n            </>\\\\\\\\n          ),\\\\\\\\n          content: (\\\\\\\\n            <AccordionContent>\\\\\\\\n              {Array(5)\\\\\\\\n                .fill(0)\\\\\\\\n                .map((_, i) => (\\\\\\\\n                  <div key={i}>Line {i + 1} </div>\\\\\\\\n                ))}\\\\\\\\n            </AccordionContent>\\\\\\\\n          )\\\\\\\\n        }}\\\\\\\\n      </Accordian>\\\\\\\\n      <Accordian id='3' expanded={expanded === '3'} onToggle={handleToggle} onToggleSwitch={handleToggleChange}>\\\\\\\\n        {{\\\\\\\\n          header: (\\\\\\\\n            <>\\\\\\\\n              <AccordionHeaderTitle>\\\\\\\\n                Delivery Associates Skill-sets configuration\\\\\\\\n              </AccordionHeaderTitle>\\\\\\\\n              <AccordionHeaderSubTitle>\\\\\\\\n                Select specific skills while adding a Delivery Associate.\\\\\\\\n                LogiNext Route planning will automatically assign the Shipments\\\\\\\\n                that a Delivery Associate is skilled to perform.\\\\\\\\n              </AccordionHeaderSubTitle>\\\\\\\\n            </>\\\\\\\\n          ),\\\\\\\\n          content: (\\\\\\\\n            <AccordionContent>\\\\\\\\n              {Array(15)\\\\\\\\n                .fill(0)\\\\\\\\n                .map((_, i) => (\\\\\\\\n                  <div key={i}>Line {i + 1} </div>\\\\\\\\n                ))}\\\\\\\\n            </AccordionContent>\\\\\\\\n          )\\\\\\\\n        }}\\\\\\\\n      </Accordian>\\\\\\\\n    </>\\\\\\\\n  )\\\\\\\\n}\\\\\\\\nexport const Default = () => {\\\\\\\\n  return (\\\\\\\\n    <ThemeWrapper>\\\\\\\\n      <Box p='1em' bgColor='grey.50'>\\\\\\\\n        <AccordionComponent />\\\\\\\\n      </Box>\\\\\\\\n    </ThemeWrapper>\\\\\\\\n  )\\\\\\\\n}\\\\\\\\n\\\\\\\",\\\\\\\"locationsMap\\\\\\\":{}},},\\\\n  title: `${path}/Accordian`,\\\\n  decorators: [withKnobs],\\\\n  component: Accordian\\\\n}\\\\n\\\\nconst AccordionComponent = () => {\\\\n  const [expanded, setExpanded] = React.useState('1')\\\\n  const handleToggle = (accordianId: string, isExpanded?: boolean) => {\\\\n    setExpanded(isExpanded ? accordianId : '')\\\\n  }\\\\n\\\\n  const handleToggleChange = (e: any) => {\\\\n    console.log(\\\\\\\"toggledata\\\\\\\", e)\\\\n  }\\\\n\\\\n  const tooltipProps={\\\\n    messagePlacement:'end',\\\\n    arrowPlacement:'center',\\\\n    tooltipDirection:'bottom'\\\\n  }\\\\n\\\\n  return (\\\\n    <>\\\\n       <Accordian id='1' expanded={expanded === '1'} onToggle={handleToggle} onToggleSwitch={handleToggleChange} switchTooltipMessage=\\\\\\\"Activate / Deactivate this setting\\\\\\\" switchTooltipProps={tooltipProps} showToggleSwitch={true} toggleSwitchStyle={{paddingRight:\\\\\\\"15px\\\\\\\"}}>\\\\n        {{\\\\n          header: (\\\\n            <>\\\\n              <AccordionHeaderTitle>\\\\n                Minimum Capacity Utilization\\\\n              </AccordionHeaderTitle>\\\\n              <AccordionHeaderSubTitle>\\\\n                Helps you manage Fleet utilization\\\\n              </AccordionHeaderSubTitle>\\\\n            </>\\\\n          ),\\\\n          content: (\\\\n            <AccordionContent>\\\\n              {Array(10)\\\\n                .fill(0)\\\\n                .map((_, i) => (\\\\n                  <div key={i}>Line {i + 1} </div>\\\\n                ))}\\\\n            </AccordionContent>\\\\n          )\\\\n        }}\\\\n      </Accordian>\\\\n      <Accordian id='2' expanded={expanded === '2'} onToggle={handleToggle} onToggleSwitch={handleToggleChange} showToggleSwitch={true} toggleSwitchDisable={true} isToggleChecked={true}>\\\\n        {{\\\\n          header: (\\\\n            <>\\\\n              <AccordionHeaderTitle>Send Activation Link</AccordionHeaderTitle>\\\\n              <AccordionHeaderSubTitle>\\\\n                Send an activation link to the mobile number of a newly created\\\\n                Delivery Associate.\\\\n              </AccordionHeaderSubTitle>\\\\n            </>\\\\n          ),\\\\n          content: (\\\\n            <AccordionContent>\\\\n              {Array(5)\\\\n                .fill(0)\\\\n                .map((_, i) => (\\\\n                  <div key={i}>Line {i + 1} </div>\\\\n                ))}\\\\n            </AccordionContent>\\\\n          )\\\\n        }}\\\\n      </Accordian>\\\\n      <Accordian id='3' expanded={expanded === '3'} onToggle={handleToggle} onToggleSwitch={handleToggleChange}>\\\\n        {{\\\\n          header: (\\\\n            <>\\\\n              <AccordionHeaderTitle>\\\\n                Delivery Associates Skill-sets configuration\\\\n              </AccordionHeaderTitle>\\\\n              <AccordionHeaderSubTitle>\\\\n                Select specific skills while adding a Delivery Associate.\\\\n                LogiNext Route planning will automatically assign the Shipments\\\\n                that a Delivery Associate is skilled to perform.\\\\n              </AccordionHeaderSubTitle>\\\\n            </>\\\\n          ),\\\\n          content: (\\\\n            <AccordionContent>\\\\n              {Array(15)\\\\n                .fill(0)\\\\n                .map((_, i) => (\\\\n                  <div key={i}>Line {i + 1} </div>\\\\n                ))}\\\\n            </AccordionContent>\\\\n          )\\\\n        }}\\\\n      </Accordian>\\\\n    </>\\\\n  )\\\\n}\\\\nexport const Default = addSourceDecorator(() => {\\\\n  return (\\\\n    <ThemeWrapper>\\\\n      <Box p='1em' bgColor='grey.50'>\\\\n        <AccordionComponent />\\\\n      </Box>\\\\n    </ThemeWrapper>\\\\n  )\\\\n}, {__STORY__, __ADDS_MAP__,__MAIN_FILE_LOCATION__,__MODULE_DEPENDENCIES__,__LOCAL_DEPENDENCIES__,__SOURCE_PREFIX__,__IDS_TO_FRAMEWORKS__});\\\";\\n// @ts-ignore\\nvar __ADDS_MAP__ = {};\\n// @ts-ignore\\nvar __MAIN_FILE_LOCATION__ = \\\"/Accordian.stories.tsx\\\";\\n// @ts-ignore\\nvar __MODULE_DEPENDENCIES__ = [];\\n// @ts-ignore\\nvar __LOCAL_DEPENDENCIES__ = {};\\n// @ts-ignore\\nvar __IDS_TO_FRAMEWORKS__ = {};\\n        \\n\\n\\n// @ts-nocheck\\n// @ts-ignore\\nvar withSourceLoader = require('@storybook/source-loader/preview').withSource;\\n// @ts-ignore\\nvar addSourceDecorator = require(\\\"@storybook/source-loader/preview\\\").addSource;\\n// @ts-ignore\\nvar __SOURCE_PREFIX__ = \\\"/Users/farhanansari/Desktop/CODE/PrxProject/untitled folder/reactStoryBook/src/components/molecules/Accordian\\\";\\n// @ts-ignore\\nvar __STORY__ = \\\"import React from 'react'\\\\nimport { withKnobs } from '@storybook/addon-knobs'\\\\nimport Accordian from '.'\\\\n\\\\nimport Box from '../../atoms/Box'\\\\n\\\\nimport { path } from '..'\\\\nimport ThemeWrapper from '../../../utilities/components/ThemeWrapper'\\\\nimport {\\\\n  AccordionHeaderTitle,\\\\n  AccordionHeaderSubTitle,\\\\n  AccordionContent\\\\n} from './styles'\\\\n\\\\nexport default {\\\\n  title: `${path}/Accordian`,\\\\n  decorators: [withKnobs],\\\\n  component: Accordian\\\\n}\\\\n\\\\nconst AccordionComponent = () => {\\\\n  const [expanded, setExpanded] = React.useState('1')\\\\n  const handleToggle = (accordianId: string, isExpanded?: boolean) => {\\\\n    setExpanded(isExpanded ? accordianId : '')\\\\n  }\\\\n\\\\n  const handleToggleChange = (e: any) => {\\\\n    console.log(\\\\\\\"toggledata\\\\\\\", e)\\\\n  }\\\\n\\\\n  const tooltipProps={\\\\n    messagePlacement:'end',\\\\n    arrowPlacement:'center',\\\\n    tooltipDirection:'bottom'\\\\n  }\\\\n\\\\n  return (\\\\n    <>\\\\n       <Accordian id='1' expanded={expanded === '1'} onToggle={handleToggle} onToggleSwitch={handleToggleChange} switchTooltipMessage=\\\\\\\"Activate / Deactivate this setting\\\\\\\" switchTooltipProps={tooltipProps} showToggleSwitch={true} toggleSwitchStyle={{paddingRight:\\\\\\\"15px\\\\\\\"}}>\\\\n        {{\\\\n          header: (\\\\n            <>\\\\n              <AccordionHeaderTitle>\\\\n                Minimum Capacity Utilization\\\\n              </AccordionHeaderTitle>\\\\n              <AccordionHeaderSubTitle>\\\\n                Helps you manage Fleet utilization\\\\n              </AccordionHeaderSubTitle>\\\\n            </>\\\\n          ),\\\\n          content: (\\\\n            <AccordionContent>\\\\n              {Array(10)\\\\n                .fill(0)\\\\n                .map((_, i) => (\\\\n                  <div key={i}>Line {i + 1} </div>\\\\n                ))}\\\\n            </AccordionContent>\\\\n          )\\\\n        }}\\\\n      </Accordian>\\\\n      <Accordian id='2' expanded={expanded === '2'} onToggle={handleToggle} onToggleSwitch={handleToggleChange} showToggleSwitch={true} toggleSwitchDisable={true} isToggleChecked={true}>\\\\n        {{\\\\n          header: (\\\\n            <>\\\\n              <AccordionHeaderTitle>Send Activation Link</AccordionHeaderTitle>\\\\n              <AccordionHeaderSubTitle>\\\\n                Send an activation link to the mobile number of a newly created\\\\n                Delivery Associate.\\\\n              </AccordionHeaderSubTitle>\\\\n            </>\\\\n          ),\\\\n          content: (\\\\n            <AccordionContent>\\\\n              {Array(5)\\\\n                .fill(0)\\\\n                .map((_, i) => (\\\\n                  <div key={i}>Line {i + 1} </div>\\\\n                ))}\\\\n            </AccordionContent>\\\\n          )\\\\n        }}\\\\n      </Accordian>\\\\n      <Accordian id='3' expanded={expanded === '3'} onToggle={handleToggle} onToggleSwitch={handleToggleChange}>\\\\n        {{\\\\n          header: (\\\\n            <>\\\\n              <AccordionHeaderTitle>\\\\n                Delivery Associates Skill-sets configuration\\\\n              </AccordionHeaderTitle>\\\\n              <AccordionHeaderSubTitle>\\\\n                Select specific skills while adding a Delivery Associate.\\\\n                LogiNext Route planning will automatically assign the Shipments\\\\n                that a Delivery Associate is skilled to perform.\\\\n              </AccordionHeaderSubTitle>\\\\n            </>\\\\n          ),\\\\n          content: (\\\\n            <AccordionContent>\\\\n              {Array(15)\\\\n                .fill(0)\\\\n                .map((_, i) => (\\\\n                  <div key={i}>Line {i + 1} </div>\\\\n                ))}\\\\n            </AccordionContent>\\\\n          )\\\\n        }}\\\\n      </Accordian>\\\\n    </>\\\\n  )\\\\n}\\\\nexport const Default = () => {\\\\n  return (\\\\n    <ThemeWrapper>\\\\n      <Box p='1em' bgColor='grey.50'>\\\\n        <AccordionComponent />\\\\n      </Box>\\\\n    </ThemeWrapper>\\\\n  )\\\\n}\\\\n\\\";\\n// @ts-ignore\\nvar __ADDS_MAP__ = {};\\n// @ts-ignore\\nvar __MAIN_FILE_LOCATION__ = \\\"/Accordian.stories.tsx\\\";\\n// @ts-ignore\\nvar __MODULE_DEPENDENCIES__ = [];\\n// @ts-ignore\\nvar __LOCAL_DEPENDENCIES__ = {};\\n// @ts-ignore\\nvar __IDS_TO_FRAMEWORKS__ = {};\\n        \\nimport React from 'react'\\nimport { withKnobs } from '@storybook/addon-knobs'\\nimport Accordian from '.'\\n\\nimport Box from '../../atoms/Box'\\n\\nimport { path } from '..'\\nimport ThemeWrapper from '../../../utilities/components/ThemeWrapper'\\nimport {\\n  AccordionHeaderTitle,\\n  AccordionHeaderSubTitle,\\n  AccordionContent\\n} from './styles'\\n\\nexport default {parameters: {\\\"storySource\\\":{\\\"source\\\":\\\"\\\\n\\\\n// @ts-nocheck\\\\n// @ts-ignore\\\\nvar withSourceLoader = require('@storybook/source-loader/preview').withSource;\\\\n// @ts-ignore\\\\nvar addSourceDecorator = require(\\\\\\\"@storybook/source-loader/preview\\\\\\\").addSource;\\\\n// @ts-ignore\\\\nvar __SOURCE_PREFIX__ = \\\\\\\"/Users/farhanansari/Desktop/CODE/PrxProject/untitled folder/reactStoryBook/src/components/molecules/Accordian\\\\\\\";\\\\n// @ts-ignore\\\\nvar __STORY__ = \\\\\\\"import React from 'react'\\\\\\\\nimport { withKnobs } from '@storybook/addon-knobs'\\\\\\\\nimport Accordian from '.'\\\\\\\\n\\\\\\\\nimport Box from '../../atoms/Box'\\\\\\\\n\\\\\\\\nimport { path } from '..'\\\\\\\\nimport ThemeWrapper from '../../../utilities/components/ThemeWrapper'\\\\\\\\nimport {\\\\\\\\n  AccordionHeaderTitle,\\\\\\\\n  AccordionHeaderSubTitle,\\\\\\\\n  AccordionContent\\\\\\\\n} from './styles'\\\\\\\\n\\\\\\\\nexport default {\\\\\\\\n  title: `${path}/Accordian`,\\\\\\\\n  decorators: [withKnobs],\\\\\\\\n  component: Accordian\\\\\\\\n}\\\\\\\\n\\\\\\\\nconst AccordionComponent = () => {\\\\\\\\n  const [expanded, setExpanded] = React.useState('1')\\\\\\\\n  const handleToggle = (accordianId: string, isExpanded?: boolean) => {\\\\\\\\n    setExpanded(isExpanded ? accordianId : '')\\\\\\\\n  }\\\\\\\\n\\\\\\\\n  const handleToggleChange = (e: any) => {\\\\\\\\n    console.log(\\\\\\\\\\\\\\\"toggledata\\\\\\\\\\\\\\\", e)\\\\\\\\n  }\\\\\\\\n\\\\\\\\n  const tooltipProps={\\\\\\\\n    messagePlacement:'end',\\\\\\\\n    arrowPlacement:'center',\\\\\\\\n    tooltipDirection:'bottom'\\\\\\\\n  }\\\\\\\\n\\\\\\\\n  return (\\\\\\\\n    <>\\\\\\\\n       <Accordian id='1' expanded={expanded === '1'} onToggle={handleToggle} onToggleSwitch={handleToggleChange} switchTooltipMessage=\\\\\\\\\\\\\\\"Activate / Deactivate this setting\\\\\\\\\\\\\\\" switchTooltipProps={tooltipProps} showToggleSwitch={true} toggleSwitchStyle={{paddingRight:\\\\\\\\\\\\\\\"15px\\\\\\\\\\\\\\\"}}>\\\\\\\\n        {{\\\\\\\\n          header: (\\\\\\\\n            <>\\\\\\\\n              <AccordionHeaderTitle>\\\\\\\\n                Minimum Capacity Utilization\\\\\\\\n              </AccordionHeaderTitle>\\\\\\\\n              <AccordionHeaderSubTitle>\\\\\\\\n                Helps you manage Fleet utilization\\\\\\\\n              </AccordionHeaderSubTitle>\\\\\\\\n            </>\\\\\\\\n          ),\\\\\\\\n          content: (\\\\\\\\n            <AccordionContent>\\\\\\\\n              {Array(10)\\\\\\\\n                .fill(0)\\\\\\\\n                .map((_, i) => (\\\\\\\\n                  <div key={i}>Line {i + 1} </div>\\\\\\\\n                ))}\\\\\\\\n            </AccordionContent>\\\\\\\\n          )\\\\\\\\n        }}\\\\\\\\n      </Accordian>\\\\\\\\n      <Accordian id='2' expanded={expanded === '2'} onToggle={handleToggle} onToggleSwitch={handleToggleChange} showToggleSwitch={true} toggleSwitchDisable={true} isToggleChecked={true}>\\\\\\\\n        {{\\\\\\\\n          header: (\\\\\\\\n            <>\\\\\\\\n              <AccordionHeaderTitle>Send Activation Link</AccordionHeaderTitle>\\\\\\\\n              <AccordionHeaderSubTitle>\\\\\\\\n                Send an activation link to the mobile number of a newly created\\\\\\\\n                Delivery Associate.\\\\\\\\n              </AccordionHeaderSubTitle>\\\\\\\\n            </>\\\\\\\\n          ),\\\\\\\\n          content: (\\\\\\\\n            <AccordionContent>\\\\\\\\n              {Array(5)\\\\\\\\n                .fill(0)\\\\\\\\n                .map((_, i) => (\\\\\\\\n                  <div key={i}>Line {i + 1} </div>\\\\\\\\n                ))}\\\\\\\\n            </AccordionContent>\\\\\\\\n          )\\\\\\\\n        }}\\\\\\\\n      </Accordian>\\\\\\\\n      <Accordian id='3' expanded={expanded === '3'} onToggle={handleToggle} onToggleSwitch={handleToggleChange}>\\\\\\\\n        {{\\\\\\\\n          header: (\\\\\\\\n            <>\\\\\\\\n              <AccordionHeaderTitle>\\\\\\\\n                Delivery Associates Skill-sets configuration\\\\\\\\n              </AccordionHeaderTitle>\\\\\\\\n              <AccordionHeaderSubTitle>\\\\\\\\n                Select specific skills while adding a Delivery Associate.\\\\\\\\n                LogiNext Route planning will automatically assign the Shipments\\\\\\\\n                that a Delivery Associate is skilled to perform.\\\\\\\\n              </AccordionHeaderSubTitle>\\\\\\\\n            </>\\\\\\\\n          ),\\\\\\\\n          content: (\\\\\\\\n            <AccordionContent>\\\\\\\\n              {Array(15)\\\\\\\\n                .fill(0)\\\\\\\\n                .map((_, i) => (\\\\\\\\n                  <div key={i}>Line {i + 1} </div>\\\\\\\\n                ))}\\\\\\\\n            </AccordionContent>\\\\\\\\n          )\\\\\\\\n        }}\\\\\\\\n      </Accordian>\\\\\\\\n    </>\\\\\\\\n  )\\\\\\\\n}\\\\\\\\nexport const Default = () => {\\\\\\\\n  return (\\\\\\\\n    <ThemeWrapper>\\\\\\\\n      <Box p='1em' bgColor='grey.50'>\\\\\\\\n        <AccordionComponent />\\\\\\\\n      </Box>\\\\\\\\n    </ThemeWrapper>\\\\\\\\n  )\\\\\\\\n}\\\\\\\\n\\\\\\\";\\\\n// @ts-ignore\\\\nvar __ADDS_MAP__ = {};\\\\n// @ts-ignore\\\\nvar __MAIN_FILE_LOCATION__ = \\\\\\\"/Accordian.stories.tsx\\\\\\\";\\\\n// @ts-ignore\\\\nvar __MODULE_DEPENDENCIES__ = [];\\\\n// @ts-ignore\\\\nvar __LOCAL_DEPENDENCIES__ = {};\\\\n// @ts-ignore\\\\nvar __IDS_TO_FRAMEWORKS__ = {};\\\\n        \\\\nimport React from 'react'\\\\nimport { withKnobs } from '@storybook/addon-knobs'\\\\nimport Accordian from '.'\\\\n\\\\nimport Box from '../../atoms/Box'\\\\n\\\\nimport { path } from '..'\\\\nimport ThemeWrapper from '../../../utilities/components/ThemeWrapper'\\\\nimport {\\\\n  AccordionHeaderTitle,\\\\n  AccordionHeaderSubTitle,\\\\n  AccordionContent\\\\n} from './styles'\\\\n\\\\nexport default {parameters: {\\\\\\\"storySource\\\\\\\":{\\\\\\\"source\\\\\\\":\\\\\\\"import React from 'react'\\\\\\\\nimport { withKnobs } from '@storybook/addon-knobs'\\\\\\\\nimport Accordian from '.'\\\\\\\\n\\\\\\\\nimport Box from '../../atoms/Box'\\\\\\\\n\\\\\\\\nimport { path } from '..'\\\\\\\\nimport ThemeWrapper from '../../../utilities/components/ThemeWrapper'\\\\\\\\nimport {\\\\\\\\n  AccordionHeaderTitle,\\\\\\\\n  AccordionHeaderSubTitle,\\\\\\\\n  AccordionContent\\\\\\\\n} from './styles'\\\\\\\\n\\\\\\\\nexport default {\\\\\\\\n  title: `${path}/Accordian`,\\\\\\\\n  decorators: [withKnobs],\\\\\\\\n  component: Accordian\\\\\\\\n}\\\\\\\\n\\\\\\\\nconst AccordionComponent = () => {\\\\\\\\n  const [expanded, setExpanded] = React.useState('1')\\\\\\\\n  const handleToggle = (accordianId: string, isExpanded?: boolean) => {\\\\\\\\n    setExpanded(isExpanded ? accordianId : '')\\\\\\\\n  }\\\\\\\\n\\\\\\\\n  const handleToggleChange = (e: any) => {\\\\\\\\n    console.log(\\\\\\\\\\\\\\\"toggledata\\\\\\\\\\\\\\\", e)\\\\\\\\n  }\\\\\\\\n\\\\\\\\n  const tooltipProps={\\\\\\\\n    messagePlacement:'end',\\\\\\\\n    arrowPlacement:'center',\\\\\\\\n    tooltipDirection:'bottom'\\\\\\\\n  }\\\\\\\\n\\\\\\\\n  return (\\\\\\\\n    <>\\\\\\\\n       <Accordian id='1' expanded={expanded === '1'} onToggle={handleToggle} onToggleSwitch={handleToggleChange} switchTooltipMessage=\\\\\\\\\\\\\\\"Activate / Deactivate this setting\\\\\\\\\\\\\\\" switchTooltipProps={tooltipProps} showToggleSwitch={true} toggleSwitchStyle={{paddingRight:\\\\\\\\\\\\\\\"15px\\\\\\\\\\\\\\\"}}>\\\\\\\\n        {{\\\\\\\\n          header: (\\\\\\\\n            <>\\\\\\\\n              <AccordionHeaderTitle>\\\\\\\\n                Minimum Capacity Utilization\\\\\\\\n              </AccordionHeaderTitle>\\\\\\\\n              <AccordionHeaderSubTitle>\\\\\\\\n                Helps you manage Fleet utilization\\\\\\\\n              </AccordionHeaderSubTitle>\\\\\\\\n            </>\\\\\\\\n          ),\\\\\\\\n          content: (\\\\\\\\n            <AccordionContent>\\\\\\\\n              {Array(10)\\\\\\\\n                .fill(0)\\\\\\\\n                .map((_, i) => (\\\\\\\\n                  <div key={i}>Line {i + 1} </div>\\\\\\\\n                ))}\\\\\\\\n            </AccordionContent>\\\\\\\\n          )\\\\\\\\n        }}\\\\\\\\n      </Accordian>\\\\\\\\n      <Accordian id='2' expanded={expanded === '2'} onToggle={handleToggle} onToggleSwitch={handleToggleChange} showToggleSwitch={true} toggleSwitchDisable={true} isToggleChecked={true}>\\\\\\\\n        {{\\\\\\\\n          header: (\\\\\\\\n            <>\\\\\\\\n              <AccordionHeaderTitle>Send Activation Link</AccordionHeaderTitle>\\\\\\\\n              <AccordionHeaderSubTitle>\\\\\\\\n                Send an activation link to the mobile number of a newly created\\\\\\\\n                Delivery Associate.\\\\\\\\n              </AccordionHeaderSubTitle>\\\\\\\\n            </>\\\\\\\\n          ),\\\\\\\\n          content: (\\\\\\\\n            <AccordionContent>\\\\\\\\n              {Array(5)\\\\\\\\n                .fill(0)\\\\\\\\n                .map((_, i) => (\\\\\\\\n                  <div key={i}>Line {i + 1} </div>\\\\\\\\n                ))}\\\\\\\\n            </AccordionContent>\\\\\\\\n          )\\\\\\\\n        }}\\\\\\\\n      </Accordian>\\\\\\\\n      <Accordian id='3' expanded={expanded === '3'} onToggle={handleToggle} onToggleSwitch={handleToggleChange}>\\\\\\\\n        {{\\\\\\\\n          header: (\\\\\\\\n            <>\\\\\\\\n              <AccordionHeaderTitle>\\\\\\\\n                Delivery Associates Skill-sets configuration\\\\\\\\n              </AccordionHeaderTitle>\\\\\\\\n              <AccordionHeaderSubTitle>\\\\\\\\n                Select specific skills while adding a Delivery Associate.\\\\\\\\n                LogiNext Route planning will automatically assign the Shipments\\\\\\\\n                that a Delivery Associate is skilled to perform.\\\\\\\\n              </AccordionHeaderSubTitle>\\\\\\\\n            </>\\\\\\\\n          ),\\\\\\\\n          content: (\\\\\\\\n            <AccordionContent>\\\\\\\\n              {Array(15)\\\\\\\\n                .fill(0)\\\\\\\\n                .map((_, i) => (\\\\\\\\n                  <div key={i}>Line {i + 1} </div>\\\\\\\\n                ))}\\\\\\\\n            </AccordionContent>\\\\\\\\n          )\\\\\\\\n        }}\\\\\\\\n      </Accordian>\\\\\\\\n    </>\\\\\\\\n  )\\\\\\\\n}\\\\\\\\nexport const Default = () => {\\\\\\\\n  return (\\\\\\\\n    <ThemeWrapper>\\\\\\\\n      <Box p='1em' bgColor='grey.50'>\\\\\\\\n        <AccordionComponent />\\\\\\\\n      </Box>\\\\\\\\n    </ThemeWrapper>\\\\\\\\n  )\\\\\\\\n}\\\\\\\\n\\\\\\\",\\\\\\\"locationsMap\\\\\\\":{}},},\\\\n  title: `${path}/Accordian`,\\\\n  decorators: [withKnobs],\\\\n  component: Accordian\\\\n}\\\\n\\\\nconst AccordionComponent = () => {\\\\n  const [expanded, setExpanded] = React.useState('1')\\\\n  const handleToggle = (accordianId: string, isExpanded?: boolean) => {\\\\n    setExpanded(isExpanded ? accordianId : '')\\\\n  }\\\\n\\\\n  const handleToggleChange = (e: any) => {\\\\n    console.log(\\\\\\\"toggledata\\\\\\\", e)\\\\n  }\\\\n\\\\n  const tooltipProps={\\\\n    messagePlacement:'end',\\\\n    arrowPlacement:'center',\\\\n    tooltipDirection:'bottom'\\\\n  }\\\\n\\\\n  return (\\\\n    <>\\\\n       <Accordian id='1' expanded={expanded === '1'} onToggle={handleToggle} onToggleSwitch={handleToggleChange} switchTooltipMessage=\\\\\\\"Activate / Deactivate this setting\\\\\\\" switchTooltipProps={tooltipProps} showToggleSwitch={true} toggleSwitchStyle={{paddingRight:\\\\\\\"15px\\\\\\\"}}>\\\\n        {{\\\\n          header: (\\\\n            <>\\\\n              <AccordionHeaderTitle>\\\\n                Minimum Capacity Utilization\\\\n              </AccordionHeaderTitle>\\\\n              <AccordionHeaderSubTitle>\\\\n                Helps you manage Fleet utilization\\\\n              </AccordionHeaderSubTitle>\\\\n            </>\\\\n          ),\\\\n          content: (\\\\n            <AccordionContent>\\\\n              {Array(10)\\\\n                .fill(0)\\\\n                .map((_, i) => (\\\\n                  <div key={i}>Line {i + 1} </div>\\\\n                ))}\\\\n            </AccordionContent>\\\\n          )\\\\n        }}\\\\n      </Accordian>\\\\n      <Accordian id='2' expanded={expanded === '2'} onToggle={handleToggle} onToggleSwitch={handleToggleChange} showToggleSwitch={true} toggleSwitchDisable={true} isToggleChecked={true}>\\\\n        {{\\\\n          header: (\\\\n            <>\\\\n              <AccordionHeaderTitle>Send Activation Link</AccordionHeaderTitle>\\\\n              <AccordionHeaderSubTitle>\\\\n                Send an activation link to the mobile number of a newly created\\\\n                Delivery Associate.\\\\n              </AccordionHeaderSubTitle>\\\\n            </>\\\\n          ),\\\\n          content: (\\\\n            <AccordionContent>\\\\n              {Array(5)\\\\n                .fill(0)\\\\n                .map((_, i) => (\\\\n                  <div key={i}>Line {i + 1} </div>\\\\n                ))}\\\\n            </AccordionContent>\\\\n          )\\\\n        }}\\\\n      </Accordian>\\\\n      <Accordian id='3' expanded={expanded === '3'} onToggle={handleToggle} onToggleSwitch={handleToggleChange}>\\\\n        {{\\\\n          header: (\\\\n            <>\\\\n              <AccordionHeaderTitle>\\\\n                Delivery Associates Skill-sets configuration\\\\n              </AccordionHeaderTitle>\\\\n              <AccordionHeaderSubTitle>\\\\n                Select specific skills while adding a Delivery Associate.\\\\n                LogiNext Route planning will automatically assign the Shipments\\\\n                that a Delivery Associate is skilled to perform.\\\\n              </AccordionHeaderSubTitle>\\\\n            </>\\\\n          ),\\\\n          content: (\\\\n            <AccordionContent>\\\\n              {Array(15)\\\\n                .fill(0)\\\\n                .map((_, i) => (\\\\n                  <div key={i}>Line {i + 1} </div>\\\\n                ))}\\\\n            </AccordionContent>\\\\n          )\\\\n        }}\\\\n      </Accordian>\\\\n    </>\\\\n  )\\\\n}\\\\nexport const Default = addSourceDecorator(() => {\\\\n  return (\\\\n    <ThemeWrapper>\\\\n      <Box p='1em' bgColor='grey.50'>\\\\n        <AccordionComponent />\\\\n      </Box>\\\\n    </ThemeWrapper>\\\\n  )\\\\n}, {__STORY__, __ADDS_MAP__,__MAIN_FILE_LOCATION__,__MODULE_DEPENDENCIES__,__LOCAL_DEPENDENCIES__,__SOURCE_PREFIX__,__IDS_TO_FRAMEWORKS__});\\\",\\\"locationsMap\\\":{}},\\\"storySource\\\":{\\\"source\\\":\\\"import React from 'react'\\\\nimport { withKnobs } from '@storybook/addon-knobs'\\\\nimport Accordian from '.'\\\\n\\\\nimport Box from '../../atoms/Box'\\\\n\\\\nimport { path } from '..'\\\\nimport ThemeWrapper from '../../../utilities/components/ThemeWrapper'\\\\nimport {\\\\n  AccordionHeaderTitle,\\\\n  AccordionHeaderSubTitle,\\\\n  AccordionContent\\\\n} from './styles'\\\\n\\\\nexport default {\\\\n  title: `${path}/Accordian`,\\\\n  decorators: [withKnobs],\\\\n  component: Accordian\\\\n}\\\\n\\\\nconst AccordionComponent = () => {\\\\n  const [expanded, setExpanded] = React.useState('1')\\\\n  const handleToggle = (accordianId: string, isExpanded?: boolean) => {\\\\n    setExpanded(isExpanded ? accordianId : '')\\\\n  }\\\\n\\\\n  const handleToggleChange = (e: any) => {\\\\n    console.log(\\\\\\\"toggledata\\\\\\\", e)\\\\n  }\\\\n\\\\n  const tooltipProps={\\\\n    messagePlacement:'end',\\\\n    arrowPlacement:'center',\\\\n    tooltipDirection:'bottom'\\\\n  }\\\\n\\\\n  return (\\\\n    <>\\\\n       <Accordian id='1' expanded={expanded === '1'} onToggle={handleToggle} onToggleSwitch={handleToggleChange} switchTooltipMessage=\\\\\\\"Activate / Deactivate this setting\\\\\\\" switchTooltipProps={tooltipProps} showToggleSwitch={true} toggleSwitchStyle={{paddingRight:\\\\\\\"15px\\\\\\\"}}>\\\\n        {{\\\\n          header: (\\\\n            <>\\\\n              <AccordionHeaderTitle>\\\\n                Minimum Capacity Utilization\\\\n              </AccordionHeaderTitle>\\\\n              <AccordionHeaderSubTitle>\\\\n                Helps you manage Fleet utilization\\\\n              </AccordionHeaderSubTitle>\\\\n            </>\\\\n          ),\\\\n          content: (\\\\n            <AccordionContent>\\\\n              {Array(10)\\\\n                .fill(0)\\\\n                .map((_, i) => (\\\\n                  <div key={i}>Line {i + 1} </div>\\\\n                ))}\\\\n            </AccordionContent>\\\\n          )\\\\n        }}\\\\n      </Accordian>\\\\n      <Accordian id='2' expanded={expanded === '2'} onToggle={handleToggle} onToggleSwitch={handleToggleChange} showToggleSwitch={true} toggleSwitchDisable={true} isToggleChecked={true}>\\\\n        {{\\\\n          header: (\\\\n            <>\\\\n              <AccordionHeaderTitle>Send Activation Link</AccordionHeaderTitle>\\\\n              <AccordionHeaderSubTitle>\\\\n                Send an activation link to the mobile number of a newly created\\\\n                Delivery Associate.\\\\n              </AccordionHeaderSubTitle>\\\\n            </>\\\\n          ),\\\\n          content: (\\\\n            <AccordionContent>\\\\n              {Array(5)\\\\n                .fill(0)\\\\n                .map((_, i) => (\\\\n                  <div key={i}>Line {i + 1} </div>\\\\n                ))}\\\\n            </AccordionContent>\\\\n          )\\\\n        }}\\\\n      </Accordian>\\\\n      <Accordian id='3' expanded={expanded === '3'} onToggle={handleToggle} onToggleSwitch={handleToggleChange}>\\\\n        {{\\\\n          header: (\\\\n            <>\\\\n              <AccordionHeaderTitle>\\\\n                Delivery Associates Skill-sets configuration\\\\n              </AccordionHeaderTitle>\\\\n              <AccordionHeaderSubTitle>\\\\n                Select specific skills while adding a Delivery Associate.\\\\n                LogiNext Route planning will automatically assign the Shipments\\\\n                that a Delivery Associate is skilled to perform.\\\\n              </AccordionHeaderSubTitle>\\\\n            </>\\\\n          ),\\\\n          content: (\\\\n            <AccordionContent>\\\\n              {Array(15)\\\\n                .fill(0)\\\\n                .map((_, i) => (\\\\n                  <div key={i}>Line {i + 1} </div>\\\\n                ))}\\\\n            </AccordionContent>\\\\n          )\\\\n        }}\\\\n      </Accordian>\\\\n    </>\\\\n  )\\\\n}\\\\nexport const Default = () => {\\\\n  return (\\\\n    <ThemeWrapper>\\\\n      <Box p='1em' bgColor='grey.50'>\\\\n        <AccordionComponent />\\\\n      </Box>\\\\n    </ThemeWrapper>\\\\n  )\\\\n}\\\\n\\\",\\\"locationsMap\\\":{}},},\\n  title: `${path}/Accordian`,\\n  decorators: [withKnobs],\\n  component: Accordian\\n}\\n\\nconst AccordionComponent = () => {\\n  const [expanded, setExpanded] = React.useState('1')\\n  const handleToggle = (accordianId: string, isExpanded?: boolean) => {\\n    setExpanded(isExpanded ? accordianId : '')\\n  }\\n\\n  const handleToggleChange = (e: any) => {\\n    console.log(\\\"toggledata\\\", e)\\n  }\\n\\n  const tooltipProps={\\n    messagePlacement:'end',\\n    arrowPlacement:'center',\\n    tooltipDirection:'bottom'\\n  }\\n\\n  return (\\n    <>\\n       <Accordian id='1' expanded={expanded === '1'} onToggle={handleToggle} onToggleSwitch={handleToggleChange} switchTooltipMessage=\\\"Activate / Deactivate this setting\\\" switchTooltipProps={tooltipProps} showToggleSwitch={true} toggleSwitchStyle={{paddingRight:\\\"15px\\\"}}>\\n        {{\\n          header: (\\n            <>\\n              <AccordionHeaderTitle>\\n                Minimum Capacity Utilization\\n              </AccordionHeaderTitle>\\n              <AccordionHeaderSubTitle>\\n                Helps you manage Fleet utilization\\n              </AccordionHeaderSubTitle>\\n            </>\\n          ),\\n          content: (\\n            <AccordionContent>\\n              {Array(10)\\n                .fill(0)\\n                .map((_, i) => (\\n                  <div key={i}>Line {i + 1} </div>\\n                ))}\\n            </AccordionContent>\\n          )\\n        }}\\n      </Accordian>\\n      <Accordian id='2' expanded={expanded === '2'} onToggle={handleToggle} onToggleSwitch={handleToggleChange} showToggleSwitch={true} toggleSwitchDisable={true} isToggleChecked={true}>\\n        {{\\n          header: (\\n            <>\\n              <AccordionHeaderTitle>Send Activation Link</AccordionHeaderTitle>\\n              <AccordionHeaderSubTitle>\\n                Send an activation link to the mobile number of a newly created\\n                Delivery Associate.\\n              </AccordionHeaderSubTitle>\\n            </>\\n          ),\\n          content: (\\n            <AccordionContent>\\n              {Array(5)\\n                .fill(0)\\n                .map((_, i) => (\\n                  <div key={i}>Line {i + 1} </div>\\n                ))}\\n            </AccordionContent>\\n          )\\n        }}\\n      </Accordian>\\n      <Accordian id='3' expanded={expanded === '3'} onToggle={handleToggle} onToggleSwitch={handleToggleChange}>\\n        {{\\n          header: (\\n            <>\\n              <AccordionHeaderTitle>\\n                Delivery Associates Skill-sets configuration\\n              </AccordionHeaderTitle>\\n              <AccordionHeaderSubTitle>\\n                Select specific skills while adding a Delivery Associate.\\n                LogiNext Route planning will automatically assign the Shipments\\n                that a Delivery Associate is skilled to perform.\\n              </AccordionHeaderSubTitle>\\n            </>\\n          ),\\n          content: (\\n            <AccordionContent>\\n              {Array(15)\\n                .fill(0)\\n                .map((_, i) => (\\n                  <div key={i}>Line {i + 1} </div>\\n                ))}\\n            </AccordionContent>\\n          )\\n        }}\\n      </Accordian>\\n    </>\\n  )\\n}\\nexport const Default = addSourceDecorator(addSourceDecorator(() => {\\n  return (\\n    <ThemeWrapper>\\n      <Box p='1em' bgColor='grey.50'>\\n        <AccordionComponent />\\n      </Box>\\n    </ThemeWrapper>\\n  )\\n}, {__STORY__, __ADDS_MAP__,__MAIN_FILE_LOCATION__,__MODULE_DEPENDENCIES__,__LOCAL_DEPENDENCIES__,__SOURCE_PREFIX__,__IDS_TO_FRAMEWORKS__}), {__STORY__, __ADDS_MAP__,__MAIN_FILE_LOCATION__,__MODULE_DEPENDENCIES__,__LOCAL_DEPENDENCIES__,__SOURCE_PREFIX__,__IDS_TO_FRAMEWORKS__});\"; // @ts-ignore\n\nvar __ADDS_MAP__ = {}; // @ts-ignore\n\nvar __MAIN_FILE_LOCATION__ = \"/Accordian.stories.tsx\"; // @ts-ignore\n\nvar __MODULE_DEPENDENCIES__ = []; // @ts-ignore\n\nvar __LOCAL_DEPENDENCIES__ = {}; // @ts-ignore\n\nvar __IDS_TO_FRAMEWORKS__ = {};\n/* eslint-disable */\n// @ts-nocheck\n// @ts-ignore\n\nvar withSourceLoader = require('@storybook/source-loader/preview').withSource; // @ts-ignore\n\n\nvar addSourceDecorator = require(\"@storybook/source-loader/preview\").addSource; // @ts-ignore\n\n\nvar __SOURCE_PREFIX__ = \"/Users/farhanansari/Desktop/CODE/PrxProject/untitled folder/reactStoryBook/src/components/molecules/Accordian\"; // @ts-ignore\n\nvar __STORY__ = \"\\n\\n// @ts-nocheck\\n// @ts-ignore\\nvar withSourceLoader = require('@storybook/source-loader/preview').withSource;\\n// @ts-ignore\\nvar addSourceDecorator = require(\\\"@storybook/source-loader/preview\\\").addSource;\\n// @ts-ignore\\nvar __SOURCE_PREFIX__ = \\\"/Users/farhanansari/Desktop/CODE/PrxProject/untitled folder/reactStoryBook/src/components/molecules/Accordian\\\";\\n// @ts-ignore\\nvar __STORY__ = \\\"import React from 'react'\\\\nimport { withKnobs } from '@storybook/addon-knobs'\\\\nimport Accordian from '.'\\\\n\\\\nimport Box from '../../atoms/Box'\\\\n\\\\nimport { path } from '..'\\\\nimport ThemeWrapper from '../../../utilities/components/ThemeWrapper'\\\\nimport {\\\\n  AccordionHeaderTitle,\\\\n  AccordionHeaderSubTitle,\\\\n  AccordionContent\\\\n} from './styles'\\\\n\\\\nexport default {\\\\n  title: `${path}/Accordian`,\\\\n  decorators: [withKnobs],\\\\n  component: Accordian\\\\n}\\\\n\\\\nconst AccordionComponent = () => {\\\\n  const [expanded, setExpanded] = React.useState('1')\\\\n  const handleToggle = (accordianId: string, isExpanded?: boolean) => {\\\\n    setExpanded(isExpanded ? accordianId : '')\\\\n  }\\\\n\\\\n  const handleToggleChange = (e: any) => {\\\\n    console.log(\\\\\\\"toggledata\\\\\\\", e)\\\\n  }\\\\n\\\\n  const tooltipProps={\\\\n    messagePlacement:'end',\\\\n    arrowPlacement:'center',\\\\n    tooltipDirection:'bottom'\\\\n  }\\\\n\\\\n  return (\\\\n    <>\\\\n       <Accordian id='1' expanded={expanded === '1'} onToggle={handleToggle} onToggleSwitch={handleToggleChange} switchTooltipMessage=\\\\\\\"Activate / Deactivate this setting\\\\\\\" switchTooltipProps={tooltipProps} showToggleSwitch={true} toggleSwitchStyle={{paddingRight:\\\\\\\"15px\\\\\\\"}}>\\\\n        {{\\\\n          header: (\\\\n            <>\\\\n              <AccordionHeaderTitle>\\\\n                Minimum Capacity Utilization\\\\n              </AccordionHeaderTitle>\\\\n              <AccordionHeaderSubTitle>\\\\n                Helps you manage Fleet utilization\\\\n              </AccordionHeaderSubTitle>\\\\n            </>\\\\n          ),\\\\n          content: (\\\\n            <AccordionContent>\\\\n              {Array(10)\\\\n                .fill(0)\\\\n                .map((_, i) => (\\\\n                  <div key={i}>Line {i + 1} </div>\\\\n                ))}\\\\n            </AccordionContent>\\\\n          )\\\\n        }}\\\\n      </Accordian>\\\\n      <Accordian id='2' expanded={expanded === '2'} onToggle={handleToggle} onToggleSwitch={handleToggleChange} showToggleSwitch={true} toggleSwitchDisable={true} isToggleChecked={true}>\\\\n        {{\\\\n          header: (\\\\n            <>\\\\n              <AccordionHeaderTitle>Send Activation Link</AccordionHeaderTitle>\\\\n              <AccordionHeaderSubTitle>\\\\n                Send an activation link to the mobile number of a newly created\\\\n                Delivery Associate.\\\\n              </AccordionHeaderSubTitle>\\\\n            </>\\\\n          ),\\\\n          content: (\\\\n            <AccordionContent>\\\\n              {Array(5)\\\\n                .fill(0)\\\\n                .map((_, i) => (\\\\n                  <div key={i}>Line {i + 1} </div>\\\\n                ))}\\\\n            </AccordionContent>\\\\n          )\\\\n        }}\\\\n      </Accordian>\\\\n      <Accordian id='3' expanded={expanded === '3'} onToggle={handleToggle} onToggleSwitch={handleToggleChange}>\\\\n        {{\\\\n          header: (\\\\n            <>\\\\n              <AccordionHeaderTitle>\\\\n                Delivery Associates Skill-sets configuration\\\\n              </AccordionHeaderTitle>\\\\n              <AccordionHeaderSubTitle>\\\\n                Select specific skills while adding a Delivery Associate.\\\\n                LogiNext Route planning will automatically assign the Shipments\\\\n                that a Delivery Associate is skilled to perform.\\\\n              </AccordionHeaderSubTitle>\\\\n            </>\\\\n          ),\\\\n          content: (\\\\n            <AccordionContent>\\\\n              {Array(15)\\\\n                .fill(0)\\\\n                .map((_, i) => (\\\\n                  <div key={i}>Line {i + 1} </div>\\\\n                ))}\\\\n            </AccordionContent>\\\\n          )\\\\n        }}\\\\n      </Accordian>\\\\n    </>\\\\n  )\\\\n}\\\\nexport const Default = () => {\\\\n  return (\\\\n    <ThemeWrapper>\\\\n      <Box p='1em' bgColor='grey.50'>\\\\n        <AccordionComponent />\\\\n      </Box>\\\\n    </ThemeWrapper>\\\\n  )\\\\n}\\\\n\\\";\\n// @ts-ignore\\nvar __ADDS_MAP__ = {};\\n// @ts-ignore\\nvar __MAIN_FILE_LOCATION__ = \\\"/Accordian.stories.tsx\\\";\\n// @ts-ignore\\nvar __MODULE_DEPENDENCIES__ = [];\\n// @ts-ignore\\nvar __LOCAL_DEPENDENCIES__ = {};\\n// @ts-ignore\\nvar __IDS_TO_FRAMEWORKS__ = {};\\n        \\nimport React from 'react'\\nimport { withKnobs } from '@storybook/addon-knobs'\\nimport Accordian from '.'\\n\\nimport Box from '../../atoms/Box'\\n\\nimport { path } from '..'\\nimport ThemeWrapper from '../../../utilities/components/ThemeWrapper'\\nimport {\\n  AccordionHeaderTitle,\\n  AccordionHeaderSubTitle,\\n  AccordionContent\\n} from './styles'\\n\\nexport default {parameters: {\\\"storySource\\\":{\\\"source\\\":\\\"import React from 'react'\\\\nimport { withKnobs } from '@storybook/addon-knobs'\\\\nimport Accordian from '.'\\\\n\\\\nimport Box from '../../atoms/Box'\\\\n\\\\nimport { path } from '..'\\\\nimport ThemeWrapper from '../../../utilities/components/ThemeWrapper'\\\\nimport {\\\\n  AccordionHeaderTitle,\\\\n  AccordionHeaderSubTitle,\\\\n  AccordionContent\\\\n} from './styles'\\\\n\\\\nexport default {\\\\n  title: `${path}/Accordian`,\\\\n  decorators: [withKnobs],\\\\n  component: Accordian\\\\n}\\\\n\\\\nconst AccordionComponent = () => {\\\\n  const [expanded, setExpanded] = React.useState('1')\\\\n  const handleToggle = (accordianId: string, isExpanded?: boolean) => {\\\\n    setExpanded(isExpanded ? accordianId : '')\\\\n  }\\\\n\\\\n  const handleToggleChange = (e: any) => {\\\\n    console.log(\\\\\\\"toggledata\\\\\\\", e)\\\\n  }\\\\n\\\\n  const tooltipProps={\\\\n    messagePlacement:'end',\\\\n    arrowPlacement:'center',\\\\n    tooltipDirection:'bottom'\\\\n  }\\\\n\\\\n  return (\\\\n    <>\\\\n       <Accordian id='1' expanded={expanded === '1'} onToggle={handleToggle} onToggleSwitch={handleToggleChange} switchTooltipMessage=\\\\\\\"Activate / Deactivate this setting\\\\\\\" switchTooltipProps={tooltipProps} showToggleSwitch={true} toggleSwitchStyle={{paddingRight:\\\\\\\"15px\\\\\\\"}}>\\\\n        {{\\\\n          header: (\\\\n            <>\\\\n              <AccordionHeaderTitle>\\\\n                Minimum Capacity Utilization\\\\n              </AccordionHeaderTitle>\\\\n              <AccordionHeaderSubTitle>\\\\n                Helps you manage Fleet utilization\\\\n              </AccordionHeaderSubTitle>\\\\n            </>\\\\n          ),\\\\n          content: (\\\\n            <AccordionContent>\\\\n              {Array(10)\\\\n                .fill(0)\\\\n                .map((_, i) => (\\\\n                  <div key={i}>Line {i + 1} </div>\\\\n                ))}\\\\n            </AccordionContent>\\\\n          )\\\\n        }}\\\\n      </Accordian>\\\\n      <Accordian id='2' expanded={expanded === '2'} onToggle={handleToggle} onToggleSwitch={handleToggleChange} showToggleSwitch={true} toggleSwitchDisable={true} isToggleChecked={true}>\\\\n        {{\\\\n          header: (\\\\n            <>\\\\n              <AccordionHeaderTitle>Send Activation Link</AccordionHeaderTitle>\\\\n              <AccordionHeaderSubTitle>\\\\n                Send an activation link to the mobile number of a newly created\\\\n                Delivery Associate.\\\\n              </AccordionHeaderSubTitle>\\\\n            </>\\\\n          ),\\\\n          content: (\\\\n            <AccordionContent>\\\\n              {Array(5)\\\\n                .fill(0)\\\\n                .map((_, i) => (\\\\n                  <div key={i}>Line {i + 1} </div>\\\\n                ))}\\\\n            </AccordionContent>\\\\n          )\\\\n        }}\\\\n      </Accordian>\\\\n      <Accordian id='3' expanded={expanded === '3'} onToggle={handleToggle} onToggleSwitch={handleToggleChange}>\\\\n        {{\\\\n          header: (\\\\n            <>\\\\n              <AccordionHeaderTitle>\\\\n                Delivery Associates Skill-sets configuration\\\\n              </AccordionHeaderTitle>\\\\n              <AccordionHeaderSubTitle>\\\\n                Select specific skills while adding a Delivery Associate.\\\\n                LogiNext Route planning will automatically assign the Shipments\\\\n                that a Delivery Associate is skilled to perform.\\\\n              </AccordionHeaderSubTitle>\\\\n            </>\\\\n          ),\\\\n          content: (\\\\n            <AccordionContent>\\\\n              {Array(15)\\\\n                .fill(0)\\\\n                .map((_, i) => (\\\\n                  <div key={i}>Line {i + 1} </div>\\\\n                ))}\\\\n            </AccordionContent>\\\\n          )\\\\n        }}\\\\n      </Accordian>\\\\n    </>\\\\n  )\\\\n}\\\\nexport const Default = () => {\\\\n  return (\\\\n    <ThemeWrapper>\\\\n      <Box p='1em' bgColor='grey.50'>\\\\n        <AccordionComponent />\\\\n      </Box>\\\\n    </ThemeWrapper>\\\\n  )\\\\n}\\\\n\\\",\\\"locationsMap\\\":{}},},\\n  title: `${path}/Accordian`,\\n  decorators: [withKnobs],\\n  component: Accordian\\n}\\n\\nconst AccordionComponent = () => {\\n  const [expanded, setExpanded] = React.useState('1')\\n  const handleToggle = (accordianId: string, isExpanded?: boolean) => {\\n    setExpanded(isExpanded ? accordianId : '')\\n  }\\n\\n  const handleToggleChange = (e: any) => {\\n    console.log(\\\"toggledata\\\", e)\\n  }\\n\\n  const tooltipProps={\\n    messagePlacement:'end',\\n    arrowPlacement:'center',\\n    tooltipDirection:'bottom'\\n  }\\n\\n  return (\\n    <>\\n       <Accordian id='1' expanded={expanded === '1'} onToggle={handleToggle} onToggleSwitch={handleToggleChange} switchTooltipMessage=\\\"Activate / Deactivate this setting\\\" switchTooltipProps={tooltipProps} showToggleSwitch={true} toggleSwitchStyle={{paddingRight:\\\"15px\\\"}}>\\n        {{\\n          header: (\\n            <>\\n              <AccordionHeaderTitle>\\n                Minimum Capacity Utilization\\n              </AccordionHeaderTitle>\\n              <AccordionHeaderSubTitle>\\n                Helps you manage Fleet utilization\\n              </AccordionHeaderSubTitle>\\n            </>\\n          ),\\n          content: (\\n            <AccordionContent>\\n              {Array(10)\\n                .fill(0)\\n                .map((_, i) => (\\n                  <div key={i}>Line {i + 1} </div>\\n                ))}\\n            </AccordionContent>\\n          )\\n        }}\\n      </Accordian>\\n      <Accordian id='2' expanded={expanded === '2'} onToggle={handleToggle} onToggleSwitch={handleToggleChange} showToggleSwitch={true} toggleSwitchDisable={true} isToggleChecked={true}>\\n        {{\\n          header: (\\n            <>\\n              <AccordionHeaderTitle>Send Activation Link</AccordionHeaderTitle>\\n              <AccordionHeaderSubTitle>\\n                Send an activation link to the mobile number of a newly created\\n                Delivery Associate.\\n              </AccordionHeaderSubTitle>\\n            </>\\n          ),\\n          content: (\\n            <AccordionContent>\\n              {Array(5)\\n                .fill(0)\\n                .map((_, i) => (\\n                  <div key={i}>Line {i + 1} </div>\\n                ))}\\n            </AccordionContent>\\n          )\\n        }}\\n      </Accordian>\\n      <Accordian id='3' expanded={expanded === '3'} onToggle={handleToggle} onToggleSwitch={handleToggleChange}>\\n        {{\\n          header: (\\n            <>\\n              <AccordionHeaderTitle>\\n                Delivery Associates Skill-sets configuration\\n              </AccordionHeaderTitle>\\n              <AccordionHeaderSubTitle>\\n                Select specific skills while adding a Delivery Associate.\\n                LogiNext Route planning will automatically assign the Shipments\\n                that a Delivery Associate is skilled to perform.\\n              </AccordionHeaderSubTitle>\\n            </>\\n          ),\\n          content: (\\n            <AccordionContent>\\n              {Array(15)\\n                .fill(0)\\n                .map((_, i) => (\\n                  <div key={i}>Line {i + 1} </div>\\n                ))}\\n            </AccordionContent>\\n          )\\n        }}\\n      </Accordian>\\n    </>\\n  )\\n}\\nexport const Default = addSourceDecorator(() => {\\n  return (\\n    <ThemeWrapper>\\n      <Box p='1em' bgColor='grey.50'>\\n        <AccordionComponent />\\n      </Box>\\n    </ThemeWrapper>\\n  )\\n}, {__STORY__, __ADDS_MAP__,__MAIN_FILE_LOCATION__,__MODULE_DEPENDENCIES__,__LOCAL_DEPENDENCIES__,__SOURCE_PREFIX__,__IDS_TO_FRAMEWORKS__});\"; // @ts-ignore\n\nvar __ADDS_MAP__ = {}; // @ts-ignore\n\nvar __MAIN_FILE_LOCATION__ = \"/Accordian.stories.tsx\"; // @ts-ignore\n\nvar __MODULE_DEPENDENCIES__ = []; // @ts-ignore\n\nvar __LOCAL_DEPENDENCIES__ = {}; // @ts-ignore\n\nvar __IDS_TO_FRAMEWORKS__ = {};\n/* eslint-disable */\n// @ts-nocheck\n// @ts-ignore\n\nvar withSourceLoader = require('@storybook/source-loader/preview').withSource; // @ts-ignore\n\n\nvar addSourceDecorator = require(\"@storybook/source-loader/preview\").addSource; // @ts-ignore\n\n\nvar __SOURCE_PREFIX__ = \"/Users/farhanansari/Desktop/CODE/PrxProject/untitled folder/reactStoryBook/src/components/molecules/Accordian\"; // @ts-ignore\n\nvar __STORY__ = \"import React from 'react'\\nimport { withKnobs } from '@storybook/addon-knobs'\\nimport Accordian from '.'\\n\\nimport Box from '../../atoms/Box'\\n\\nimport { path } from '..'\\nimport ThemeWrapper from '../../../utilities/components/ThemeWrapper'\\nimport {\\n  AccordionHeaderTitle,\\n  AccordionHeaderSubTitle,\\n  AccordionContent\\n} from './styles'\\n\\nexport default {\\n  title: `${path}/Accordian`,\\n  decorators: [withKnobs],\\n  component: Accordian\\n}\\n\\nconst AccordionComponent = () => {\\n  const [expanded, setExpanded] = React.useState('1')\\n  const handleToggle = (accordianId: string, isExpanded?: boolean) => {\\n    setExpanded(isExpanded ? accordianId : '')\\n  }\\n\\n  const handleToggleChange = (e: any) => {\\n    console.log(\\\"toggledata\\\", e)\\n  }\\n\\n  const tooltipProps={\\n    messagePlacement:'end',\\n    arrowPlacement:'center',\\n    tooltipDirection:'bottom'\\n  }\\n\\n  return (\\n    <>\\n       <Accordian id='1' expanded={expanded === '1'} onToggle={handleToggle} onToggleSwitch={handleToggleChange} switchTooltipMessage=\\\"Activate / Deactivate this setting\\\" switchTooltipProps={tooltipProps} showToggleSwitch={true} toggleSwitchStyle={{paddingRight:\\\"15px\\\"}}>\\n        {{\\n          header: (\\n            <>\\n              <AccordionHeaderTitle>\\n                Minimum Capacity Utilization\\n              </AccordionHeaderTitle>\\n              <AccordionHeaderSubTitle>\\n                Helps you manage Fleet utilization\\n              </AccordionHeaderSubTitle>\\n            </>\\n          ),\\n          content: (\\n            <AccordionContent>\\n              {Array(10)\\n                .fill(0)\\n                .map((_, i) => (\\n                  <div key={i}>Line {i + 1} </div>\\n                ))}\\n            </AccordionContent>\\n          )\\n        }}\\n      </Accordian>\\n      <Accordian id='2' expanded={expanded === '2'} onToggle={handleToggle} onToggleSwitch={handleToggleChange} showToggleSwitch={true} toggleSwitchDisable={true} isToggleChecked={true}>\\n        {{\\n          header: (\\n            <>\\n              <AccordionHeaderTitle>Send Activation Link</AccordionHeaderTitle>\\n              <AccordionHeaderSubTitle>\\n                Send an activation link to the mobile number of a newly created\\n                Delivery Associate.\\n              </AccordionHeaderSubTitle>\\n            </>\\n          ),\\n          content: (\\n            <AccordionContent>\\n              {Array(5)\\n                .fill(0)\\n                .map((_, i) => (\\n                  <div key={i}>Line {i + 1} </div>\\n                ))}\\n            </AccordionContent>\\n          )\\n        }}\\n      </Accordian>\\n      <Accordian id='3' expanded={expanded === '3'} onToggle={handleToggle} onToggleSwitch={handleToggleChange}>\\n        {{\\n          header: (\\n            <>\\n              <AccordionHeaderTitle>\\n                Delivery Associates Skill-sets configuration\\n              </AccordionHeaderTitle>\\n              <AccordionHeaderSubTitle>\\n                Select specific skills while adding a Delivery Associate.\\n                LogiNext Route planning will automatically assign the Shipments\\n                that a Delivery Associate is skilled to perform.\\n              </AccordionHeaderSubTitle>\\n            </>\\n          ),\\n          content: (\\n            <AccordionContent>\\n              {Array(15)\\n                .fill(0)\\n                .map((_, i) => (\\n                  <div key={i}>Line {i + 1} </div>\\n                ))}\\n            </AccordionContent>\\n          )\\n        }}\\n      </Accordian>\\n    </>\\n  )\\n}\\nexport const Default = () => {\\n  return (\\n    <ThemeWrapper>\\n      <Box p='1em' bgColor='grey.50'>\\n        <AccordionComponent />\\n      </Box>\\n    </ThemeWrapper>\\n  )\\n}\\n\"; // @ts-ignore\n\nvar __ADDS_MAP__ = {}; // @ts-ignore\n\nvar __MAIN_FILE_LOCATION__ = \"/Accordian.stories.tsx\"; // @ts-ignore\n\nvar __MODULE_DEPENDENCIES__ = []; // @ts-ignore\n\nvar __LOCAL_DEPENDENCIES__ = {}; // @ts-ignore\n\nvar __IDS_TO_FRAMEWORKS__ = {};\nimport React from 'react';\nimport { withKnobs } from '@storybook/addon-knobs';\nimport Accordian from '.';\nimport Box from '../../atoms/Box';\nimport { path } from '..';\nimport ThemeWrapper from '../../../utilities/components/ThemeWrapper';\nimport { AccordionHeaderTitle, AccordionHeaderSubTitle, AccordionContent } from './styles';\nexport default {\n  parameters: (_parameters = {\n    \"storySource\": {\n      \"source\": \"\\n\\n// @ts-nocheck\\n// @ts-ignore\\nvar withSourceLoader = require('@storybook/source-loader/preview').withSource;\\n// @ts-ignore\\nvar addSourceDecorator = require(\\\"@storybook/source-loader/preview\\\").addSource;\\n// @ts-ignore\\nvar __SOURCE_PREFIX__ = \\\"/Users/farhanansari/Desktop/CODE/PrxProject/untitled folder/reactStoryBook/src/components/molecules/Accordian\\\";\\n// @ts-ignore\\nvar __STORY__ = \\\"\\\\n\\\\n// @ts-nocheck\\\\n// @ts-ignore\\\\nvar withSourceLoader = require('@storybook/source-loader/preview').withSource;\\\\n// @ts-ignore\\\\nvar addSourceDecorator = require(\\\\\\\"@storybook/source-loader/preview\\\\\\\").addSource;\\\\n// @ts-ignore\\\\nvar __SOURCE_PREFIX__ = \\\\\\\"/Users/farhanansari/Desktop/CODE/PrxProject/untitled folder/reactStoryBook/src/components/molecules/Accordian\\\\\\\";\\\\n// @ts-ignore\\\\nvar __STORY__ = \\\\\\\"import React from 'react'\\\\\\\\nimport { withKnobs } from '@storybook/addon-knobs'\\\\\\\\nimport Accordian from '.'\\\\\\\\n\\\\\\\\nimport Box from '../../atoms/Box'\\\\\\\\n\\\\\\\\nimport { path } from '..'\\\\\\\\nimport ThemeWrapper from '../../../utilities/components/ThemeWrapper'\\\\\\\\nimport {\\\\\\\\n  AccordionHeaderTitle,\\\\\\\\n  AccordionHeaderSubTitle,\\\\\\\\n  AccordionContent\\\\\\\\n} from './styles'\\\\\\\\n\\\\\\\\nexport default {\\\\\\\\n  title: `${path}/Accordian`,\\\\\\\\n  decorators: [withKnobs],\\\\\\\\n  component: Accordian\\\\\\\\n}\\\\\\\\n\\\\\\\\nconst AccordionComponent = () => {\\\\\\\\n  const [expanded, setExpanded] = React.useState('1')\\\\\\\\n  const handleToggle = (accordianId: string, isExpanded?: boolean) => {\\\\\\\\n    setExpanded(isExpanded ? accordianId : '')\\\\\\\\n  }\\\\\\\\n\\\\\\\\n  const handleToggleChange = (e: any) => {\\\\\\\\n    console.log(\\\\\\\\\\\\\\\"toggledata\\\\\\\\\\\\\\\", e)\\\\\\\\n  }\\\\\\\\n\\\\\\\\n  const tooltipProps={\\\\\\\\n    messagePlacement:'end',\\\\\\\\n    arrowPlacement:'center',\\\\\\\\n    tooltipDirection:'bottom'\\\\\\\\n  }\\\\\\\\n\\\\\\\\n  return (\\\\\\\\n    <>\\\\\\\\n       <Accordian id='1' expanded={expanded === '1'} onToggle={handleToggle} onToggleSwitch={handleToggleChange} switchTooltipMessage=\\\\\\\\\\\\\\\"Activate / Deactivate this setting\\\\\\\\\\\\\\\" switchTooltipProps={tooltipProps} showToggleSwitch={true} toggleSwitchStyle={{paddingRight:\\\\\\\\\\\\\\\"15px\\\\\\\\\\\\\\\"}}>\\\\\\\\n        {{\\\\\\\\n          header: (\\\\\\\\n            <>\\\\\\\\n              <AccordionHeaderTitle>\\\\\\\\n                Minimum Capacity Utilization\\\\\\\\n              </AccordionHeaderTitle>\\\\\\\\n              <AccordionHeaderSubTitle>\\\\\\\\n                Helps you manage Fleet utilization\\\\\\\\n              </AccordionHeaderSubTitle>\\\\\\\\n            </>\\\\\\\\n          ),\\\\\\\\n          content: (\\\\\\\\n            <AccordionContent>\\\\\\\\n              {Array(10)\\\\\\\\n                .fill(0)\\\\\\\\n                .map((_, i) => (\\\\\\\\n                  <div key={i}>Line {i + 1} </div>\\\\\\\\n                ))}\\\\\\\\n            </AccordionContent>\\\\\\\\n          )\\\\\\\\n        }}\\\\\\\\n      </Accordian>\\\\\\\\n      <Accordian id='2' expanded={expanded === '2'} onToggle={handleToggle} onToggleSwitch={handleToggleChange} showToggleSwitch={true} toggleSwitchDisable={true} isToggleChecked={true}>\\\\\\\\n        {{\\\\\\\\n          header: (\\\\\\\\n            <>\\\\\\\\n              <AccordionHeaderTitle>Send Activation Link</AccordionHeaderTitle>\\\\\\\\n              <AccordionHeaderSubTitle>\\\\\\\\n                Send an activation link to the mobile number of a newly created\\\\\\\\n                Delivery Associate.\\\\\\\\n              </AccordionHeaderSubTitle>\\\\\\\\n            </>\\\\\\\\n          ),\\\\\\\\n          content: (\\\\\\\\n            <AccordionContent>\\\\\\\\n              {Array(5)\\\\\\\\n                .fill(0)\\\\\\\\n                .map((_, i) => (\\\\\\\\n                  <div key={i}>Line {i + 1} </div>\\\\\\\\n                ))}\\\\\\\\n            </AccordionContent>\\\\\\\\n          )\\\\\\\\n        }}\\\\\\\\n      </Accordian>\\\\\\\\n      <Accordian id='3' expanded={expanded === '3'} onToggle={handleToggle} onToggleSwitch={handleToggleChange}>\\\\\\\\n        {{\\\\\\\\n          header: (\\\\\\\\n            <>\\\\\\\\n              <AccordionHeaderTitle>\\\\\\\\n                Delivery Associates Skill-sets configuration\\\\\\\\n              </AccordionHeaderTitle>\\\\\\\\n              <AccordionHeaderSubTitle>\\\\\\\\n                Select specific skills while adding a Delivery Associate.\\\\\\\\n                LogiNext Route planning will automatically assign the Shipments\\\\\\\\n                that a Delivery Associate is skilled to perform.\\\\\\\\n              </AccordionHeaderSubTitle>\\\\\\\\n            </>\\\\\\\\n          ),\\\\\\\\n          content: (\\\\\\\\n            <AccordionContent>\\\\\\\\n              {Array(15)\\\\\\\\n                .fill(0)\\\\\\\\n                .map((_, i) => (\\\\\\\\n                  <div key={i}>Line {i + 1} </div>\\\\\\\\n                ))}\\\\\\\\n            </AccordionContent>\\\\\\\\n          )\\\\\\\\n        }}\\\\\\\\n      </Accordian>\\\\\\\\n    </>\\\\\\\\n  )\\\\\\\\n}\\\\\\\\nexport const Default = () => {\\\\\\\\n  return (\\\\\\\\n    <ThemeWrapper>\\\\\\\\n      <Box p='1em' bgColor='grey.50'>\\\\\\\\n        <AccordionComponent />\\\\\\\\n      </Box>\\\\\\\\n    </ThemeWrapper>\\\\\\\\n  )\\\\\\\\n}\\\\\\\\n\\\\\\\";\\\\n// @ts-ignore\\\\nvar __ADDS_MAP__ = {};\\\\n// @ts-ignore\\\\nvar __MAIN_FILE_LOCATION__ = \\\\\\\"/Accordian.stories.tsx\\\\\\\";\\\\n// @ts-ignore\\\\nvar __MODULE_DEPENDENCIES__ = [];\\\\n// @ts-ignore\\\\nvar __LOCAL_DEPENDENCIES__ = {};\\\\n// @ts-ignore\\\\nvar __IDS_TO_FRAMEWORKS__ = {};\\\\n        \\\\nimport React from 'react'\\\\nimport { withKnobs } from '@storybook/addon-knobs'\\\\nimport Accordian from '.'\\\\n\\\\nimport Box from '../../atoms/Box'\\\\n\\\\nimport { path } from '..'\\\\nimport ThemeWrapper from '../../../utilities/components/ThemeWrapper'\\\\nimport {\\\\n  AccordionHeaderTitle,\\\\n  AccordionHeaderSubTitle,\\\\n  AccordionContent\\\\n} from './styles'\\\\n\\\\nexport default {parameters: {\\\\\\\"storySource\\\\\\\":{\\\\\\\"source\\\\\\\":\\\\\\\"import React from 'react'\\\\\\\\nimport { withKnobs } from '@storybook/addon-knobs'\\\\\\\\nimport Accordian from '.'\\\\\\\\n\\\\\\\\nimport Box from '../../atoms/Box'\\\\\\\\n\\\\\\\\nimport { path } from '..'\\\\\\\\nimport ThemeWrapper from '../../../utilities/components/ThemeWrapper'\\\\\\\\nimport {\\\\\\\\n  AccordionHeaderTitle,\\\\\\\\n  AccordionHeaderSubTitle,\\\\\\\\n  AccordionContent\\\\\\\\n} from './styles'\\\\\\\\n\\\\\\\\nexport default {\\\\\\\\n  title: `${path}/Accordian`,\\\\\\\\n  decorators: [withKnobs],\\\\\\\\n  component: Accordian\\\\\\\\n}\\\\\\\\n\\\\\\\\nconst AccordionComponent = () => {\\\\\\\\n  const [expanded, setExpanded] = React.useState('1')\\\\\\\\n  const handleToggle = (accordianId: string, isExpanded?: boolean) => {\\\\\\\\n    setExpanded(isExpanded ? accordianId : '')\\\\\\\\n  }\\\\\\\\n\\\\\\\\n  const handleToggleChange = (e: any) => {\\\\\\\\n    console.log(\\\\\\\\\\\\\\\"toggledata\\\\\\\\\\\\\\\", e)\\\\\\\\n  }\\\\\\\\n\\\\\\\\n  const tooltipProps={\\\\\\\\n    messagePlacement:'end',\\\\\\\\n    arrowPlacement:'center',\\\\\\\\n    tooltipDirection:'bottom'\\\\\\\\n  }\\\\\\\\n\\\\\\\\n  return (\\\\\\\\n    <>\\\\\\\\n       <Accordian id='1' expanded={expanded === '1'} onToggle={handleToggle} onToggleSwitch={handleToggleChange} switchTooltipMessage=\\\\\\\\\\\\\\\"Activate / Deactivate this setting\\\\\\\\\\\\\\\" switchTooltipProps={tooltipProps} showToggleSwitch={true} toggleSwitchStyle={{paddingRight:\\\\\\\\\\\\\\\"15px\\\\\\\\\\\\\\\"}}>\\\\\\\\n        {{\\\\\\\\n          header: (\\\\\\\\n            <>\\\\\\\\n              <AccordionHeaderTitle>\\\\\\\\n                Minimum Capacity Utilization\\\\\\\\n              </AccordionHeaderTitle>\\\\\\\\n              <AccordionHeaderSubTitle>\\\\\\\\n                Helps you manage Fleet utilization\\\\\\\\n              </AccordionHeaderSubTitle>\\\\\\\\n            </>\\\\\\\\n          ),\\\\\\\\n          content: (\\\\\\\\n            <AccordionContent>\\\\\\\\n              {Array(10)\\\\\\\\n                .fill(0)\\\\\\\\n                .map((_, i) => (\\\\\\\\n                  <div key={i}>Line {i + 1} </div>\\\\\\\\n                ))}\\\\\\\\n            </AccordionContent>\\\\\\\\n          )\\\\\\\\n        }}\\\\\\\\n      </Accordian>\\\\\\\\n      <Accordian id='2' expanded={expanded === '2'} onToggle={handleToggle} onToggleSwitch={handleToggleChange} showToggleSwitch={true} toggleSwitchDisable={true} isToggleChecked={true}>\\\\\\\\n        {{\\\\\\\\n          header: (\\\\\\\\n            <>\\\\\\\\n              <AccordionHeaderTitle>Send Activation Link</AccordionHeaderTitle>\\\\\\\\n              <AccordionHeaderSubTitle>\\\\\\\\n                Send an activation link to the mobile number of a newly created\\\\\\\\n                Delivery Associate.\\\\\\\\n              </AccordionHeaderSubTitle>\\\\\\\\n            </>\\\\\\\\n          ),\\\\\\\\n          content: (\\\\\\\\n            <AccordionContent>\\\\\\\\n              {Array(5)\\\\\\\\n                .fill(0)\\\\\\\\n                .map((_, i) => (\\\\\\\\n                  <div key={i}>Line {i + 1} </div>\\\\\\\\n                ))}\\\\\\\\n            </AccordionContent>\\\\\\\\n          )\\\\\\\\n        }}\\\\\\\\n      </Accordian>\\\\\\\\n      <Accordian id='3' expanded={expanded === '3'} onToggle={handleToggle} onToggleSwitch={handleToggleChange}>\\\\\\\\n        {{\\\\\\\\n          header: (\\\\\\\\n            <>\\\\\\\\n              <AccordionHeaderTitle>\\\\\\\\n                Delivery Associates Skill-sets configuration\\\\\\\\n              </AccordionHeaderTitle>\\\\\\\\n              <AccordionHeaderSubTitle>\\\\\\\\n                Select specific skills while adding a Delivery Associate.\\\\\\\\n                LogiNext Route planning will automatically assign the Shipments\\\\\\\\n                that a Delivery Associate is skilled to perform.\\\\\\\\n              </AccordionHeaderSubTitle>\\\\\\\\n            </>\\\\\\\\n          ),\\\\\\\\n          content: (\\\\\\\\n            <AccordionContent>\\\\\\\\n              {Array(15)\\\\\\\\n                .fill(0)\\\\\\\\n                .map((_, i) => (\\\\\\\\n                  <div key={i}>Line {i + 1} </div>\\\\\\\\n                ))}\\\\\\\\n            </AccordionContent>\\\\\\\\n          )\\\\\\\\n        }}\\\\\\\\n      </Accordian>\\\\\\\\n    </>\\\\\\\\n  )\\\\\\\\n}\\\\\\\\nexport const Default = () => {\\\\\\\\n  return (\\\\\\\\n    <ThemeWrapper>\\\\\\\\n      <Box p='1em' bgColor='grey.50'>\\\\\\\\n        <AccordionComponent />\\\\\\\\n      </Box>\\\\\\\\n    </ThemeWrapper>\\\\\\\\n  )\\\\\\\\n}\\\\\\\\n\\\\\\\",\\\\\\\"locationsMap\\\\\\\":{}},},\\\\n  title: `${path}/Accordian`,\\\\n  decorators: [withKnobs],\\\\n  component: Accordian\\\\n}\\\\n\\\\nconst AccordionComponent = () => {\\\\n  const [expanded, setExpanded] = React.useState('1')\\\\n  const handleToggle = (accordianId: string, isExpanded?: boolean) => {\\\\n    setExpanded(isExpanded ? accordianId : '')\\\\n  }\\\\n\\\\n  const handleToggleChange = (e: any) => {\\\\n    console.log(\\\\\\\"toggledata\\\\\\\", e)\\\\n  }\\\\n\\\\n  const tooltipProps={\\\\n    messagePlacement:'end',\\\\n    arrowPlacement:'center',\\\\n    tooltipDirection:'bottom'\\\\n  }\\\\n\\\\n  return (\\\\n    <>\\\\n       <Accordian id='1' expanded={expanded === '1'} onToggle={handleToggle} onToggleSwitch={handleToggleChange} switchTooltipMessage=\\\\\\\"Activate / Deactivate this setting\\\\\\\" switchTooltipProps={tooltipProps} showToggleSwitch={true} toggleSwitchStyle={{paddingRight:\\\\\\\"15px\\\\\\\"}}>\\\\n        {{\\\\n          header: (\\\\n            <>\\\\n              <AccordionHeaderTitle>\\\\n                Minimum Capacity Utilization\\\\n              </AccordionHeaderTitle>\\\\n              <AccordionHeaderSubTitle>\\\\n                Helps you manage Fleet utilization\\\\n              </AccordionHeaderSubTitle>\\\\n            </>\\\\n          ),\\\\n          content: (\\\\n            <AccordionContent>\\\\n              {Array(10)\\\\n                .fill(0)\\\\n                .map((_, i) => (\\\\n                  <div key={i}>Line {i + 1} </div>\\\\n                ))}\\\\n            </AccordionContent>\\\\n          )\\\\n        }}\\\\n      </Accordian>\\\\n      <Accordian id='2' expanded={expanded === '2'} onToggle={handleToggle} onToggleSwitch={handleToggleChange} showToggleSwitch={true} toggleSwitchDisable={true} isToggleChecked={true}>\\\\n        {{\\\\n          header: (\\\\n            <>\\\\n              <AccordionHeaderTitle>Send Activation Link</AccordionHeaderTitle>\\\\n              <AccordionHeaderSubTitle>\\\\n                Send an activation link to the mobile number of a newly created\\\\n                Delivery Associate.\\\\n              </AccordionHeaderSubTitle>\\\\n            </>\\\\n          ),\\\\n          content: (\\\\n            <AccordionContent>\\\\n              {Array(5)\\\\n                .fill(0)\\\\n                .map((_, i) => (\\\\n                  <div key={i}>Line {i + 1} </div>\\\\n                ))}\\\\n            </AccordionContent>\\\\n          )\\\\n        }}\\\\n      </Accordian>\\\\n      <Accordian id='3' expanded={expanded === '3'} onToggle={handleToggle} onToggleSwitch={handleToggleChange}>\\\\n        {{\\\\n          header: (\\\\n            <>\\\\n              <AccordionHeaderTitle>\\\\n                Delivery Associates Skill-sets configuration\\\\n              </AccordionHeaderTitle>\\\\n              <AccordionHeaderSubTitle>\\\\n                Select specific skills while adding a Delivery Associate.\\\\n                LogiNext Route planning will automatically assign the Shipments\\\\n                that a Delivery Associate is skilled to perform.\\\\n              </AccordionHeaderSubTitle>\\\\n            </>\\\\n          ),\\\\n          content: (\\\\n            <AccordionContent>\\\\n              {Array(15)\\\\n                .fill(0)\\\\n                .map((_, i) => (\\\\n                  <div key={i}>Line {i + 1} </div>\\\\n                ))}\\\\n            </AccordionContent>\\\\n          )\\\\n        }}\\\\n      </Accordian>\\\\n    </>\\\\n  )\\\\n}\\\\nexport const Default = addSourceDecorator(() => {\\\\n  return (\\\\n    <ThemeWrapper>\\\\n      <Box p='1em' bgColor='grey.50'>\\\\n        <AccordionComponent />\\\\n      </Box>\\\\n    </ThemeWrapper>\\\\n  )\\\\n}, {__STORY__, __ADDS_MAP__,__MAIN_FILE_LOCATION__,__MODULE_DEPENDENCIES__,__LOCAL_DEPENDENCIES__,__SOURCE_PREFIX__,__IDS_TO_FRAMEWORKS__});\\\";\\n// @ts-ignore\\nvar __ADDS_MAP__ = {};\\n// @ts-ignore\\nvar __MAIN_FILE_LOCATION__ = \\\"/Accordian.stories.tsx\\\";\\n// @ts-ignore\\nvar __MODULE_DEPENDENCIES__ = [];\\n// @ts-ignore\\nvar __LOCAL_DEPENDENCIES__ = {};\\n// @ts-ignore\\nvar __IDS_TO_FRAMEWORKS__ = {};\\n        \\n\\n\\n// @ts-nocheck\\n// @ts-ignore\\nvar withSourceLoader = require('@storybook/source-loader/preview').withSource;\\n// @ts-ignore\\nvar addSourceDecorator = require(\\\"@storybook/source-loader/preview\\\").addSource;\\n// @ts-ignore\\nvar __SOURCE_PREFIX__ = \\\"/Users/farhanansari/Desktop/CODE/PrxProject/untitled folder/reactStoryBook/src/components/molecules/Accordian\\\";\\n// @ts-ignore\\nvar __STORY__ = \\\"import React from 'react'\\\\nimport { withKnobs } from '@storybook/addon-knobs'\\\\nimport Accordian from '.'\\\\n\\\\nimport Box from '../../atoms/Box'\\\\n\\\\nimport { path } from '..'\\\\nimport ThemeWrapper from '../../../utilities/components/ThemeWrapper'\\\\nimport {\\\\n  AccordionHeaderTitle,\\\\n  AccordionHeaderSubTitle,\\\\n  AccordionContent\\\\n} from './styles'\\\\n\\\\nexport default {\\\\n  title: `${path}/Accordian`,\\\\n  decorators: [withKnobs],\\\\n  component: Accordian\\\\n}\\\\n\\\\nconst AccordionComponent = () => {\\\\n  const [expanded, setExpanded] = React.useState('1')\\\\n  const handleToggle = (accordianId: string, isExpanded?: boolean) => {\\\\n    setExpanded(isExpanded ? accordianId : '')\\\\n  }\\\\n\\\\n  const handleToggleChange = (e: any) => {\\\\n    console.log(\\\\\\\"toggledata\\\\\\\", e)\\\\n  }\\\\n\\\\n  const tooltipProps={\\\\n    messagePlacement:'end',\\\\n    arrowPlacement:'center',\\\\n    tooltipDirection:'bottom'\\\\n  }\\\\n\\\\n  return (\\\\n    <>\\\\n       <Accordian id='1' expanded={expanded === '1'} onToggle={handleToggle} onToggleSwitch={handleToggleChange} switchTooltipMessage=\\\\\\\"Activate / Deactivate this setting\\\\\\\" switchTooltipProps={tooltipProps} showToggleSwitch={true} toggleSwitchStyle={{paddingRight:\\\\\\\"15px\\\\\\\"}}>\\\\n        {{\\\\n          header: (\\\\n            <>\\\\n              <AccordionHeaderTitle>\\\\n                Minimum Capacity Utilization\\\\n              </AccordionHeaderTitle>\\\\n              <AccordionHeaderSubTitle>\\\\n                Helps you manage Fleet utilization\\\\n              </AccordionHeaderSubTitle>\\\\n            </>\\\\n          ),\\\\n          content: (\\\\n            <AccordionContent>\\\\n              {Array(10)\\\\n                .fill(0)\\\\n                .map((_, i) => (\\\\n                  <div key={i}>Line {i + 1} </div>\\\\n                ))}\\\\n            </AccordionContent>\\\\n          )\\\\n        }}\\\\n      </Accordian>\\\\n      <Accordian id='2' expanded={expanded === '2'} onToggle={handleToggle} onToggleSwitch={handleToggleChange} showToggleSwitch={true} toggleSwitchDisable={true} isToggleChecked={true}>\\\\n        {{\\\\n          header: (\\\\n            <>\\\\n              <AccordionHeaderTitle>Send Activation Link</AccordionHeaderTitle>\\\\n              <AccordionHeaderSubTitle>\\\\n                Send an activation link to the mobile number of a newly created\\\\n                Delivery Associate.\\\\n              </AccordionHeaderSubTitle>\\\\n            </>\\\\n          ),\\\\n          content: (\\\\n            <AccordionContent>\\\\n              {Array(5)\\\\n                .fill(0)\\\\n                .map((_, i) => (\\\\n                  <div key={i}>Line {i + 1} </div>\\\\n                ))}\\\\n            </AccordionContent>\\\\n          )\\\\n        }}\\\\n      </Accordian>\\\\n      <Accordian id='3' expanded={expanded === '3'} onToggle={handleToggle} onToggleSwitch={handleToggleChange}>\\\\n        {{\\\\n          header: (\\\\n            <>\\\\n              <AccordionHeaderTitle>\\\\n                Delivery Associates Skill-sets configuration\\\\n              </AccordionHeaderTitle>\\\\n              <AccordionHeaderSubTitle>\\\\n                Select specific skills while adding a Delivery Associate.\\\\n                LogiNext Route planning will automatically assign the Shipments\\\\n                that a Delivery Associate is skilled to perform.\\\\n              </AccordionHeaderSubTitle>\\\\n            </>\\\\n          ),\\\\n          content: (\\\\n            <AccordionContent>\\\\n              {Array(15)\\\\n                .fill(0)\\\\n                .map((_, i) => (\\\\n                  <div key={i}>Line {i + 1} </div>\\\\n                ))}\\\\n            </AccordionContent>\\\\n          )\\\\n        }}\\\\n      </Accordian>\\\\n    </>\\\\n  )\\\\n}\\\\nexport const Default = () => {\\\\n  return (\\\\n    <ThemeWrapper>\\\\n      <Box p='1em' bgColor='grey.50'>\\\\n        <AccordionComponent />\\\\n      </Box>\\\\n    </ThemeWrapper>\\\\n  )\\\\n}\\\\n\\\";\\n// @ts-ignore\\nvar __ADDS_MAP__ = {};\\n// @ts-ignore\\nvar __MAIN_FILE_LOCATION__ = \\\"/Accordian.stories.tsx\\\";\\n// @ts-ignore\\nvar __MODULE_DEPENDENCIES__ = [];\\n// @ts-ignore\\nvar __LOCAL_DEPENDENCIES__ = {};\\n// @ts-ignore\\nvar __IDS_TO_FRAMEWORKS__ = {};\\n        \\nimport React from 'react'\\nimport { withKnobs } from '@storybook/addon-knobs'\\nimport Accordian from '.'\\n\\nimport Box from '../../atoms/Box'\\n\\nimport { path } from '..'\\nimport ThemeWrapper from '../../../utilities/components/ThemeWrapper'\\nimport {\\n  AccordionHeaderTitle,\\n  AccordionHeaderSubTitle,\\n  AccordionContent\\n} from './styles'\\n\\nexport default {parameters: {\\\"storySource\\\":{\\\"source\\\":\\\"\\\\n\\\\n// @ts-nocheck\\\\n// @ts-ignore\\\\nvar withSourceLoader = require('@storybook/source-loader/preview').withSource;\\\\n// @ts-ignore\\\\nvar addSourceDecorator = require(\\\\\\\"@storybook/source-loader/preview\\\\\\\").addSource;\\\\n// @ts-ignore\\\\nvar __SOURCE_PREFIX__ = \\\\\\\"/Users/farhanansari/Desktop/CODE/PrxProject/untitled folder/reactStoryBook/src/components/molecules/Accordian\\\\\\\";\\\\n// @ts-ignore\\\\nvar __STORY__ = \\\\\\\"import React from 'react'\\\\\\\\nimport { withKnobs } from '@storybook/addon-knobs'\\\\\\\\nimport Accordian from '.'\\\\\\\\n\\\\\\\\nimport Box from '../../atoms/Box'\\\\\\\\n\\\\\\\\nimport { path } from '..'\\\\\\\\nimport ThemeWrapper from '../../../utilities/components/ThemeWrapper'\\\\\\\\nimport {\\\\\\\\n  AccordionHeaderTitle,\\\\\\\\n  AccordionHeaderSubTitle,\\\\\\\\n  AccordionContent\\\\\\\\n} from './styles'\\\\\\\\n\\\\\\\\nexport default {\\\\\\\\n  title: `${path}/Accordian`,\\\\\\\\n  decorators: [withKnobs],\\\\\\\\n  component: Accordian\\\\\\\\n}\\\\\\\\n\\\\\\\\nconst AccordionComponent = () => {\\\\\\\\n  const [expanded, setExpanded] = React.useState('1')\\\\\\\\n  const handleToggle = (accordianId: string, isExpanded?: boolean) => {\\\\\\\\n    setExpanded(isExpanded ? accordianId : '')\\\\\\\\n  }\\\\\\\\n\\\\\\\\n  const handleToggleChange = (e: any) => {\\\\\\\\n    console.log(\\\\\\\\\\\\\\\"toggledata\\\\\\\\\\\\\\\", e)\\\\\\\\n  }\\\\\\\\n\\\\\\\\n  const tooltipProps={\\\\\\\\n    messagePlacement:'end',\\\\\\\\n    arrowPlacement:'center',\\\\\\\\n    tooltipDirection:'bottom'\\\\\\\\n  }\\\\\\\\n\\\\\\\\n  return (\\\\\\\\n    <>\\\\\\\\n       <Accordian id='1' expanded={expanded === '1'} onToggle={handleToggle} onToggleSwitch={handleToggleChange} switchTooltipMessage=\\\\\\\\\\\\\\\"Activate / Deactivate this setting\\\\\\\\\\\\\\\" switchTooltipProps={tooltipProps} showToggleSwitch={true} toggleSwitchStyle={{paddingRight:\\\\\\\\\\\\\\\"15px\\\\\\\\\\\\\\\"}}>\\\\\\\\n        {{\\\\\\\\n          header: (\\\\\\\\n            <>\\\\\\\\n              <AccordionHeaderTitle>\\\\\\\\n                Minimum Capacity Utilization\\\\\\\\n              </AccordionHeaderTitle>\\\\\\\\n              <AccordionHeaderSubTitle>\\\\\\\\n                Helps you manage Fleet utilization\\\\\\\\n              </AccordionHeaderSubTitle>\\\\\\\\n            </>\\\\\\\\n          ),\\\\\\\\n          content: (\\\\\\\\n            <AccordionContent>\\\\\\\\n              {Array(10)\\\\\\\\n                .fill(0)\\\\\\\\n                .map((_, i) => (\\\\\\\\n                  <div key={i}>Line {i + 1} </div>\\\\\\\\n                ))}\\\\\\\\n            </AccordionContent>\\\\\\\\n          )\\\\\\\\n        }}\\\\\\\\n      </Accordian>\\\\\\\\n      <Accordian id='2' expanded={expanded === '2'} onToggle={handleToggle} onToggleSwitch={handleToggleChange} showToggleSwitch={true} toggleSwitchDisable={true} isToggleChecked={true}>\\\\\\\\n        {{\\\\\\\\n          header: (\\\\\\\\n            <>\\\\\\\\n              <AccordionHeaderTitle>Send Activation Link</AccordionHeaderTitle>\\\\\\\\n              <AccordionHeaderSubTitle>\\\\\\\\n                Send an activation link to the mobile number of a newly created\\\\\\\\n                Delivery Associate.\\\\\\\\n              </AccordionHeaderSubTitle>\\\\\\\\n            </>\\\\\\\\n          ),\\\\\\\\n          content: (\\\\\\\\n            <AccordionContent>\\\\\\\\n              {Array(5)\\\\\\\\n                .fill(0)\\\\\\\\n                .map((_, i) => (\\\\\\\\n                  <div key={i}>Line {i + 1} </div>\\\\\\\\n                ))}\\\\\\\\n            </AccordionContent>\\\\\\\\n          )\\\\\\\\n        }}\\\\\\\\n      </Accordian>\\\\\\\\n      <Accordian id='3' expanded={expanded === '3'} onToggle={handleToggle} onToggleSwitch={handleToggleChange}>\\\\\\\\n        {{\\\\\\\\n          header: (\\\\\\\\n            <>\\\\\\\\n              <AccordionHeaderTitle>\\\\\\\\n                Delivery Associates Skill-sets configuration\\\\\\\\n              </AccordionHeaderTitle>\\\\\\\\n              <AccordionHeaderSubTitle>\\\\\\\\n                Select specific skills while adding a Delivery Associate.\\\\\\\\n                LogiNext Route planning will automatically assign the Shipments\\\\\\\\n                that a Delivery Associate is skilled to perform.\\\\\\\\n              </AccordionHeaderSubTitle>\\\\\\\\n            </>\\\\\\\\n          ),\\\\\\\\n          content: (\\\\\\\\n            <AccordionContent>\\\\\\\\n              {Array(15)\\\\\\\\n                .fill(0)\\\\\\\\n                .map((_, i) => (\\\\\\\\n                  <div key={i}>Line {i + 1} </div>\\\\\\\\n                ))}\\\\\\\\n            </AccordionContent>\\\\\\\\n          )\\\\\\\\n        }}\\\\\\\\n      </Accordian>\\\\\\\\n    </>\\\\\\\\n  )\\\\\\\\n}\\\\\\\\nexport const Default = () => {\\\\\\\\n  return (\\\\\\\\n    <ThemeWrapper>\\\\\\\\n      <Box p='1em' bgColor='grey.50'>\\\\\\\\n        <AccordionComponent />\\\\\\\\n      </Box>\\\\\\\\n    </ThemeWrapper>\\\\\\\\n  )\\\\\\\\n}\\\\\\\\n\\\\\\\";\\\\n// @ts-ignore\\\\nvar __ADDS_MAP__ = {};\\\\n// @ts-ignore\\\\nvar __MAIN_FILE_LOCATION__ = \\\\\\\"/Accordian.stories.tsx\\\\\\\";\\\\n// @ts-ignore\\\\nvar __MODULE_DEPENDENCIES__ = [];\\\\n// @ts-ignore\\\\nvar __LOCAL_DEPENDENCIES__ = {};\\\\n// @ts-ignore\\\\nvar __IDS_TO_FRAMEWORKS__ = {};\\\\n        \\\\nimport React from 'react'\\\\nimport { withKnobs } from '@storybook/addon-knobs'\\\\nimport Accordian from '.'\\\\n\\\\nimport Box from '../../atoms/Box'\\\\n\\\\nimport { path } from '..'\\\\nimport ThemeWrapper from '../../../utilities/components/ThemeWrapper'\\\\nimport {\\\\n  AccordionHeaderTitle,\\\\n  AccordionHeaderSubTitle,\\\\n  AccordionContent\\\\n} from './styles'\\\\n\\\\nexport default {parameters: {\\\\\\\"storySource\\\\\\\":{\\\\\\\"source\\\\\\\":\\\\\\\"import React from 'react'\\\\\\\\nimport { withKnobs } from '@storybook/addon-knobs'\\\\\\\\nimport Accordian from '.'\\\\\\\\n\\\\\\\\nimport Box from '../../atoms/Box'\\\\\\\\n\\\\\\\\nimport { path } from '..'\\\\\\\\nimport ThemeWrapper from '../../../utilities/components/ThemeWrapper'\\\\\\\\nimport {\\\\\\\\n  AccordionHeaderTitle,\\\\\\\\n  AccordionHeaderSubTitle,\\\\\\\\n  AccordionContent\\\\\\\\n} from './styles'\\\\\\\\n\\\\\\\\nexport default {\\\\\\\\n  title: `${path}/Accordian`,\\\\\\\\n  decorators: [withKnobs],\\\\\\\\n  component: Accordian\\\\\\\\n}\\\\\\\\n\\\\\\\\nconst AccordionComponent = () => {\\\\\\\\n  const [expanded, setExpanded] = React.useState('1')\\\\\\\\n  const handleToggle = (accordianId: string, isExpanded?: boolean) => {\\\\\\\\n    setExpanded(isExpanded ? accordianId : '')\\\\\\\\n  }\\\\\\\\n\\\\\\\\n  const handleToggleChange = (e: any) => {\\\\\\\\n    console.log(\\\\\\\\\\\\\\\"toggledata\\\\\\\\\\\\\\\", e)\\\\\\\\n  }\\\\\\\\n\\\\\\\\n  const tooltipProps={\\\\\\\\n    messagePlacement:'end',\\\\\\\\n    arrowPlacement:'center',\\\\\\\\n    tooltipDirection:'bottom'\\\\\\\\n  }\\\\\\\\n\\\\\\\\n  return (\\\\\\\\n    <>\\\\\\\\n       <Accordian id='1' expanded={expanded === '1'} onToggle={handleToggle} onToggleSwitch={handleToggleChange} switchTooltipMessage=\\\\\\\\\\\\\\\"Activate / Deactivate this setting\\\\\\\\\\\\\\\" switchTooltipProps={tooltipProps} showToggleSwitch={true} toggleSwitchStyle={{paddingRight:\\\\\\\\\\\\\\\"15px\\\\\\\\\\\\\\\"}}>\\\\\\\\n        {{\\\\\\\\n          header: (\\\\\\\\n            <>\\\\\\\\n              <AccordionHeaderTitle>\\\\\\\\n                Minimum Capacity Utilization\\\\\\\\n              </AccordionHeaderTitle>\\\\\\\\n              <AccordionHeaderSubTitle>\\\\\\\\n                Helps you manage Fleet utilization\\\\\\\\n              </AccordionHeaderSubTitle>\\\\\\\\n            </>\\\\\\\\n          ),\\\\\\\\n          content: (\\\\\\\\n            <AccordionContent>\\\\\\\\n              {Array(10)\\\\\\\\n                .fill(0)\\\\\\\\n                .map((_, i) => (\\\\\\\\n                  <div key={i}>Line {i + 1} </div>\\\\\\\\n                ))}\\\\\\\\n            </AccordionContent>\\\\\\\\n          )\\\\\\\\n        }}\\\\\\\\n      </Accordian>\\\\\\\\n      <Accordian id='2' expanded={expanded === '2'} onToggle={handleToggle} onToggleSwitch={handleToggleChange} showToggleSwitch={true} toggleSwitchDisable={true} isToggleChecked={true}>\\\\\\\\n        {{\\\\\\\\n          header: (\\\\\\\\n            <>\\\\\\\\n              <AccordionHeaderTitle>Send Activation Link</AccordionHeaderTitle>\\\\\\\\n              <AccordionHeaderSubTitle>\\\\\\\\n                Send an activation link to the mobile number of a newly created\\\\\\\\n                Delivery Associate.\\\\\\\\n              </AccordionHeaderSubTitle>\\\\\\\\n            </>\\\\\\\\n          ),\\\\\\\\n          content: (\\\\\\\\n            <AccordionContent>\\\\\\\\n              {Array(5)\\\\\\\\n                .fill(0)\\\\\\\\n                .map((_, i) => (\\\\\\\\n                  <div key={i}>Line {i + 1} </div>\\\\\\\\n                ))}\\\\\\\\n            </AccordionContent>\\\\\\\\n          )\\\\\\\\n        }}\\\\\\\\n      </Accordian>\\\\\\\\n      <Accordian id='3' expanded={expanded === '3'} onToggle={handleToggle} onToggleSwitch={handleToggleChange}>\\\\\\\\n        {{\\\\\\\\n          header: (\\\\\\\\n            <>\\\\\\\\n              <AccordionHeaderTitle>\\\\\\\\n                Delivery Associates Skill-sets configuration\\\\\\\\n              </AccordionHeaderTitle>\\\\\\\\n              <AccordionHeaderSubTitle>\\\\\\\\n                Select specific skills while adding a Delivery Associate.\\\\\\\\n                LogiNext Route planning will automatically assign the Shipments\\\\\\\\n                that a Delivery Associate is skilled to perform.\\\\\\\\n              </AccordionHeaderSubTitle>\\\\\\\\n            </>\\\\\\\\n          ),\\\\\\\\n          content: (\\\\\\\\n            <AccordionContent>\\\\\\\\n              {Array(15)\\\\\\\\n                .fill(0)\\\\\\\\n                .map((_, i) => (\\\\\\\\n                  <div key={i}>Line {i + 1} </div>\\\\\\\\n                ))}\\\\\\\\n            </AccordionContent>\\\\\\\\n          )\\\\\\\\n        }}\\\\\\\\n      </Accordian>\\\\\\\\n    </>\\\\\\\\n  )\\\\\\\\n}\\\\\\\\nexport const Default = () => {\\\\\\\\n  return (\\\\\\\\n    <ThemeWrapper>\\\\\\\\n      <Box p='1em' bgColor='grey.50'>\\\\\\\\n        <AccordionComponent />\\\\\\\\n      </Box>\\\\\\\\n    </ThemeWrapper>\\\\\\\\n  )\\\\\\\\n}\\\\\\\\n\\\\\\\",\\\\\\\"locationsMap\\\\\\\":{}},},\\\\n  title: `${path}/Accordian`,\\\\n  decorators: [withKnobs],\\\\n  component: Accordian\\\\n}\\\\n\\\\nconst AccordionComponent = () => {\\\\n  const [expanded, setExpanded] = React.useState('1')\\\\n  const handleToggle = (accordianId: string, isExpanded?: boolean) => {\\\\n    setExpanded(isExpanded ? accordianId : '')\\\\n  }\\\\n\\\\n  const handleToggleChange = (e: any) => {\\\\n    console.log(\\\\\\\"toggledata\\\\\\\", e)\\\\n  }\\\\n\\\\n  const tooltipProps={\\\\n    messagePlacement:'end',\\\\n    arrowPlacement:'center',\\\\n    tooltipDirection:'bottom'\\\\n  }\\\\n\\\\n  return (\\\\n    <>\\\\n       <Accordian id='1' expanded={expanded === '1'} onToggle={handleToggle} onToggleSwitch={handleToggleChange} switchTooltipMessage=\\\\\\\"Activate / Deactivate this setting\\\\\\\" switchTooltipProps={tooltipProps} showToggleSwitch={true} toggleSwitchStyle={{paddingRight:\\\\\\\"15px\\\\\\\"}}>\\\\n        {{\\\\n          header: (\\\\n            <>\\\\n              <AccordionHeaderTitle>\\\\n                Minimum Capacity Utilization\\\\n              </AccordionHeaderTitle>\\\\n              <AccordionHeaderSubTitle>\\\\n                Helps you manage Fleet utilization\\\\n              </AccordionHeaderSubTitle>\\\\n            </>\\\\n          ),\\\\n          content: (\\\\n            <AccordionContent>\\\\n              {Array(10)\\\\n                .fill(0)\\\\n                .map((_, i) => (\\\\n                  <div key={i}>Line {i + 1} </div>\\\\n                ))}\\\\n            </AccordionContent>\\\\n          )\\\\n        }}\\\\n      </Accordian>\\\\n      <Accordian id='2' expanded={expanded === '2'} onToggle={handleToggle} onToggleSwitch={handleToggleChange} showToggleSwitch={true} toggleSwitchDisable={true} isToggleChecked={true}>\\\\n        {{\\\\n          header: (\\\\n            <>\\\\n              <AccordionHeaderTitle>Send Activation Link</AccordionHeaderTitle>\\\\n              <AccordionHeaderSubTitle>\\\\n                Send an activation link to the mobile number of a newly created\\\\n                Delivery Associate.\\\\n              </AccordionHeaderSubTitle>\\\\n            </>\\\\n          ),\\\\n          content: (\\\\n            <AccordionContent>\\\\n              {Array(5)\\\\n                .fill(0)\\\\n                .map((_, i) => (\\\\n                  <div key={i}>Line {i + 1} </div>\\\\n                ))}\\\\n            </AccordionContent>\\\\n          )\\\\n        }}\\\\n      </Accordian>\\\\n      <Accordian id='3' expanded={expanded === '3'} onToggle={handleToggle} onToggleSwitch={handleToggleChange}>\\\\n        {{\\\\n          header: (\\\\n            <>\\\\n              <AccordionHeaderTitle>\\\\n                Delivery Associates Skill-sets configuration\\\\n              </AccordionHeaderTitle>\\\\n              <AccordionHeaderSubTitle>\\\\n                Select specific skills while adding a Delivery Associate.\\\\n                LogiNext Route planning will automatically assign the Shipments\\\\n                that a Delivery Associate is skilled to perform.\\\\n              </AccordionHeaderSubTitle>\\\\n            </>\\\\n          ),\\\\n          content: (\\\\n            <AccordionContent>\\\\n              {Array(15)\\\\n                .fill(0)\\\\n                .map((_, i) => (\\\\n                  <div key={i}>Line {i + 1} </div>\\\\n                ))}\\\\n            </AccordionContent>\\\\n          )\\\\n        }}\\\\n      </Accordian>\\\\n    </>\\\\n  )\\\\n}\\\\nexport const Default = addSourceDecorator(() => {\\\\n  return (\\\\n    <ThemeWrapper>\\\\n      <Box p='1em' bgColor='grey.50'>\\\\n        <AccordionComponent />\\\\n      </Box>\\\\n    </ThemeWrapper>\\\\n  )\\\\n}, {__STORY__, __ADDS_MAP__,__MAIN_FILE_LOCATION__,__MODULE_DEPENDENCIES__,__LOCAL_DEPENDENCIES__,__SOURCE_PREFIX__,__IDS_TO_FRAMEWORKS__});\\\",\\\"locationsMap\\\":{}},\\\"storySource\\\":{\\\"source\\\":\\\"import React from 'react'\\\\nimport { withKnobs } from '@storybook/addon-knobs'\\\\nimport Accordian from '.'\\\\n\\\\nimport Box from '../../atoms/Box'\\\\n\\\\nimport { path } from '..'\\\\nimport ThemeWrapper from '../../../utilities/components/ThemeWrapper'\\\\nimport {\\\\n  AccordionHeaderTitle,\\\\n  AccordionHeaderSubTitle,\\\\n  AccordionContent\\\\n} from './styles'\\\\n\\\\nexport default {\\\\n  title: `${path}/Accordian`,\\\\n  decorators: [withKnobs],\\\\n  component: Accordian\\\\n}\\\\n\\\\nconst AccordionComponent = () => {\\\\n  const [expanded, setExpanded] = React.useState('1')\\\\n  const handleToggle = (accordianId: string, isExpanded?: boolean) => {\\\\n    setExpanded(isExpanded ? accordianId : '')\\\\n  }\\\\n\\\\n  const handleToggleChange = (e: any) => {\\\\n    console.log(\\\\\\\"toggledata\\\\\\\", e)\\\\n  }\\\\n\\\\n  const tooltipProps={\\\\n    messagePlacement:'end',\\\\n    arrowPlacement:'center',\\\\n    tooltipDirection:'bottom'\\\\n  }\\\\n\\\\n  return (\\\\n    <>\\\\n       <Accordian id='1' expanded={expanded === '1'} onToggle={handleToggle} onToggleSwitch={handleToggleChange} switchTooltipMessage=\\\\\\\"Activate / Deactivate this setting\\\\\\\" switchTooltipProps={tooltipProps} showToggleSwitch={true} toggleSwitchStyle={{paddingRight:\\\\\\\"15px\\\\\\\"}}>\\\\n        {{\\\\n          header: (\\\\n            <>\\\\n              <AccordionHeaderTitle>\\\\n                Minimum Capacity Utilization\\\\n              </AccordionHeaderTitle>\\\\n              <AccordionHeaderSubTitle>\\\\n                Helps you manage Fleet utilization\\\\n              </AccordionHeaderSubTitle>\\\\n            </>\\\\n          ),\\\\n          content: (\\\\n            <AccordionContent>\\\\n              {Array(10)\\\\n                .fill(0)\\\\n                .map((_, i) => (\\\\n                  <div key={i}>Line {i + 1} </div>\\\\n                ))}\\\\n            </AccordionContent>\\\\n          )\\\\n        }}\\\\n      </Accordian>\\\\n      <Accordian id='2' expanded={expanded === '2'} onToggle={handleToggle} onToggleSwitch={handleToggleChange} showToggleSwitch={true} toggleSwitchDisable={true} isToggleChecked={true}>\\\\n        {{\\\\n          header: (\\\\n            <>\\\\n              <AccordionHeaderTitle>Send Activation Link</AccordionHeaderTitle>\\\\n              <AccordionHeaderSubTitle>\\\\n                Send an activation link to the mobile number of a newly created\\\\n                Delivery Associate.\\\\n              </AccordionHeaderSubTitle>\\\\n            </>\\\\n          ),\\\\n          content: (\\\\n            <AccordionContent>\\\\n              {Array(5)\\\\n                .fill(0)\\\\n                .map((_, i) => (\\\\n                  <div key={i}>Line {i + 1} </div>\\\\n                ))}\\\\n            </AccordionContent>\\\\n          )\\\\n        }}\\\\n      </Accordian>\\\\n      <Accordian id='3' expanded={expanded === '3'} onToggle={handleToggle} onToggleSwitch={handleToggleChange}>\\\\n        {{\\\\n          header: (\\\\n            <>\\\\n              <AccordionHeaderTitle>\\\\n                Delivery Associates Skill-sets configuration\\\\n              </AccordionHeaderTitle>\\\\n              <AccordionHeaderSubTitle>\\\\n                Select specific skills while adding a Delivery Associate.\\\\n                LogiNext Route planning will automatically assign the Shipments\\\\n                that a Delivery Associate is skilled to perform.\\\\n              </AccordionHeaderSubTitle>\\\\n            </>\\\\n          ),\\\\n          content: (\\\\n            <AccordionContent>\\\\n              {Array(15)\\\\n                .fill(0)\\\\n                .map((_, i) => (\\\\n                  <div key={i}>Line {i + 1} </div>\\\\n                ))}\\\\n            </AccordionContent>\\\\n          )\\\\n        }}\\\\n      </Accordian>\\\\n    </>\\\\n  )\\\\n}\\\\nexport const Default = () => {\\\\n  return (\\\\n    <ThemeWrapper>\\\\n      <Box p='1em' bgColor='grey.50'>\\\\n        <AccordionComponent />\\\\n      </Box>\\\\n    </ThemeWrapper>\\\\n  )\\\\n}\\\\n\\\",\\\"locationsMap\\\":{}},},\\n  title: `${path}/Accordian`,\\n  decorators: [withKnobs],\\n  component: Accordian\\n}\\n\\nconst AccordionComponent = () => {\\n  const [expanded, setExpanded] = React.useState('1')\\n  const handleToggle = (accordianId: string, isExpanded?: boolean) => {\\n    setExpanded(isExpanded ? accordianId : '')\\n  }\\n\\n  const handleToggleChange = (e: any) => {\\n    console.log(\\\"toggledata\\\", e)\\n  }\\n\\n  const tooltipProps={\\n    messagePlacement:'end',\\n    arrowPlacement:'center',\\n    tooltipDirection:'bottom'\\n  }\\n\\n  return (\\n    <>\\n       <Accordian id='1' expanded={expanded === '1'} onToggle={handleToggle} onToggleSwitch={handleToggleChange} switchTooltipMessage=\\\"Activate / Deactivate this setting\\\" switchTooltipProps={tooltipProps} showToggleSwitch={true} toggleSwitchStyle={{paddingRight:\\\"15px\\\"}}>\\n        {{\\n          header: (\\n            <>\\n              <AccordionHeaderTitle>\\n                Minimum Capacity Utilization\\n              </AccordionHeaderTitle>\\n              <AccordionHeaderSubTitle>\\n                Helps you manage Fleet utilization\\n              </AccordionHeaderSubTitle>\\n            </>\\n          ),\\n          content: (\\n            <AccordionContent>\\n              {Array(10)\\n                .fill(0)\\n                .map((_, i) => (\\n                  <div key={i}>Line {i + 1} </div>\\n                ))}\\n            </AccordionContent>\\n          )\\n        }}\\n      </Accordian>\\n      <Accordian id='2' expanded={expanded === '2'} onToggle={handleToggle} onToggleSwitch={handleToggleChange} showToggleSwitch={true} toggleSwitchDisable={true} isToggleChecked={true}>\\n        {{\\n          header: (\\n            <>\\n              <AccordionHeaderTitle>Send Activation Link</AccordionHeaderTitle>\\n              <AccordionHeaderSubTitle>\\n                Send an activation link to the mobile number of a newly created\\n                Delivery Associate.\\n              </AccordionHeaderSubTitle>\\n            </>\\n          ),\\n          content: (\\n            <AccordionContent>\\n              {Array(5)\\n                .fill(0)\\n                .map((_, i) => (\\n                  <div key={i}>Line {i + 1} </div>\\n                ))}\\n            </AccordionContent>\\n          )\\n        }}\\n      </Accordian>\\n      <Accordian id='3' expanded={expanded === '3'} onToggle={handleToggle} onToggleSwitch={handleToggleChange}>\\n        {{\\n          header: (\\n            <>\\n              <AccordionHeaderTitle>\\n                Delivery Associates Skill-sets configuration\\n              </AccordionHeaderTitle>\\n              <AccordionHeaderSubTitle>\\n                Select specific skills while adding a Delivery Associate.\\n                LogiNext Route planning will automatically assign the Shipments\\n                that a Delivery Associate is skilled to perform.\\n              </AccordionHeaderSubTitle>\\n            </>\\n          ),\\n          content: (\\n            <AccordionContent>\\n              {Array(15)\\n                .fill(0)\\n                .map((_, i) => (\\n                  <div key={i}>Line {i + 1} </div>\\n                ))}\\n            </AccordionContent>\\n          )\\n        }}\\n      </Accordian>\\n    </>\\n  )\\n}\\nexport const Default = addSourceDecorator(addSourceDecorator(() => {\\n  return (\\n    <ThemeWrapper>\\n      <Box p='1em' bgColor='grey.50'>\\n        <AccordionComponent />\\n      </Box>\\n    </ThemeWrapper>\\n  )\\n}, {__STORY__, __ADDS_MAP__,__MAIN_FILE_LOCATION__,__MODULE_DEPENDENCIES__,__LOCAL_DEPENDENCIES__,__SOURCE_PREFIX__,__IDS_TO_FRAMEWORKS__}), {__STORY__, __ADDS_MAP__,__MAIN_FILE_LOCATION__,__MODULE_DEPENDENCIES__,__LOCAL_DEPENDENCIES__,__SOURCE_PREFIX__,__IDS_TO_FRAMEWORKS__});\",\n      \"locationsMap\": {}\n    }\n  }, _defineProperty(_parameters, \"storySource\", {\n    \"source\": \"\\n\\n// @ts-nocheck\\n// @ts-ignore\\nvar withSourceLoader = require('@storybook/source-loader/preview').withSource;\\n// @ts-ignore\\nvar addSourceDecorator = require(\\\"@storybook/source-loader/preview\\\").addSource;\\n// @ts-ignore\\nvar __SOURCE_PREFIX__ = \\\"/Users/farhanansari/Desktop/CODE/PrxProject/untitled folder/reactStoryBook/src/components/molecules/Accordian\\\";\\n// @ts-ignore\\nvar __STORY__ = \\\"import React from 'react'\\\\nimport { withKnobs } from '@storybook/addon-knobs'\\\\nimport Accordian from '.'\\\\n\\\\nimport Box from '../../atoms/Box'\\\\n\\\\nimport { path } from '..'\\\\nimport ThemeWrapper from '../../../utilities/components/ThemeWrapper'\\\\nimport {\\\\n  AccordionHeaderTitle,\\\\n  AccordionHeaderSubTitle,\\\\n  AccordionContent\\\\n} from './styles'\\\\n\\\\nexport default {\\\\n  title: `${path}/Accordian`,\\\\n  decorators: [withKnobs],\\\\n  component: Accordian\\\\n}\\\\n\\\\nconst AccordionComponent = () => {\\\\n  const [expanded, setExpanded] = React.useState('1')\\\\n  const handleToggle = (accordianId: string, isExpanded?: boolean) => {\\\\n    setExpanded(isExpanded ? accordianId : '')\\\\n  }\\\\n\\\\n  const handleToggleChange = (e: any) => {\\\\n    console.log(\\\\\\\"toggledata\\\\\\\", e)\\\\n  }\\\\n\\\\n  const tooltipProps={\\\\n    messagePlacement:'end',\\\\n    arrowPlacement:'center',\\\\n    tooltipDirection:'bottom'\\\\n  }\\\\n\\\\n  return (\\\\n    <>\\\\n       <Accordian id='1' expanded={expanded === '1'} onToggle={handleToggle} onToggleSwitch={handleToggleChange} switchTooltipMessage=\\\\\\\"Activate / Deactivate this setting\\\\\\\" switchTooltipProps={tooltipProps} showToggleSwitch={true} toggleSwitchStyle={{paddingRight:\\\\\\\"15px\\\\\\\"}}>\\\\n        {{\\\\n          header: (\\\\n            <>\\\\n              <AccordionHeaderTitle>\\\\n                Minimum Capacity Utilization\\\\n              </AccordionHeaderTitle>\\\\n              <AccordionHeaderSubTitle>\\\\n                Helps you manage Fleet utilization\\\\n              </AccordionHeaderSubTitle>\\\\n            </>\\\\n          ),\\\\n          content: (\\\\n            <AccordionContent>\\\\n              {Array(10)\\\\n                .fill(0)\\\\n                .map((_, i) => (\\\\n                  <div key={i}>Line {i + 1} </div>\\\\n                ))}\\\\n            </AccordionContent>\\\\n          )\\\\n        }}\\\\n      </Accordian>\\\\n      <Accordian id='2' expanded={expanded === '2'} onToggle={handleToggle} onToggleSwitch={handleToggleChange} showToggleSwitch={true} toggleSwitchDisable={true} isToggleChecked={true}>\\\\n        {{\\\\n          header: (\\\\n            <>\\\\n              <AccordionHeaderTitle>Send Activation Link</AccordionHeaderTitle>\\\\n              <AccordionHeaderSubTitle>\\\\n                Send an activation link to the mobile number of a newly created\\\\n                Delivery Associate.\\\\n              </AccordionHeaderSubTitle>\\\\n            </>\\\\n          ),\\\\n          content: (\\\\n            <AccordionContent>\\\\n              {Array(5)\\\\n                .fill(0)\\\\n                .map((_, i) => (\\\\n                  <div key={i}>Line {i + 1} </div>\\\\n                ))}\\\\n            </AccordionContent>\\\\n          )\\\\n        }}\\\\n      </Accordian>\\\\n      <Accordian id='3' expanded={expanded === '3'} onToggle={handleToggle} onToggleSwitch={handleToggleChange}>\\\\n        {{\\\\n          header: (\\\\n            <>\\\\n              <AccordionHeaderTitle>\\\\n                Delivery Associates Skill-sets configuration\\\\n              </AccordionHeaderTitle>\\\\n              <AccordionHeaderSubTitle>\\\\n                Select specific skills while adding a Delivery Associate.\\\\n                LogiNext Route planning will automatically assign the Shipments\\\\n                that a Delivery Associate is skilled to perform.\\\\n              </AccordionHeaderSubTitle>\\\\n            </>\\\\n          ),\\\\n          content: (\\\\n            <AccordionContent>\\\\n              {Array(15)\\\\n                .fill(0)\\\\n                .map((_, i) => (\\\\n                  <div key={i}>Line {i + 1} </div>\\\\n                ))}\\\\n            </AccordionContent>\\\\n          )\\\\n        }}\\\\n      </Accordian>\\\\n    </>\\\\n  )\\\\n}\\\\nexport const Default = () => {\\\\n  return (\\\\n    <ThemeWrapper>\\\\n      <Box p='1em' bgColor='grey.50'>\\\\n        <AccordionComponent />\\\\n      </Box>\\\\n    </ThemeWrapper>\\\\n  )\\\\n}\\\\n\\\";\\n// @ts-ignore\\nvar __ADDS_MAP__ = {};\\n// @ts-ignore\\nvar __MAIN_FILE_LOCATION__ = \\\"/Accordian.stories.tsx\\\";\\n// @ts-ignore\\nvar __MODULE_DEPENDENCIES__ = [];\\n// @ts-ignore\\nvar __LOCAL_DEPENDENCIES__ = {};\\n// @ts-ignore\\nvar __IDS_TO_FRAMEWORKS__ = {};\\n        \\nimport React from 'react'\\nimport { withKnobs } from '@storybook/addon-knobs'\\nimport Accordian from '.'\\n\\nimport Box from '../../atoms/Box'\\n\\nimport { path } from '..'\\nimport ThemeWrapper from '../../../utilities/components/ThemeWrapper'\\nimport {\\n  AccordionHeaderTitle,\\n  AccordionHeaderSubTitle,\\n  AccordionContent\\n} from './styles'\\n\\nexport default {parameters: {\\\"storySource\\\":{\\\"source\\\":\\\"import React from 'react'\\\\nimport { withKnobs } from '@storybook/addon-knobs'\\\\nimport Accordian from '.'\\\\n\\\\nimport Box from '../../atoms/Box'\\\\n\\\\nimport { path } from '..'\\\\nimport ThemeWrapper from '../../../utilities/components/ThemeWrapper'\\\\nimport {\\\\n  AccordionHeaderTitle,\\\\n  AccordionHeaderSubTitle,\\\\n  AccordionContent\\\\n} from './styles'\\\\n\\\\nexport default {\\\\n  title: `${path}/Accordian`,\\\\n  decorators: [withKnobs],\\\\n  component: Accordian\\\\n}\\\\n\\\\nconst AccordionComponent = () => {\\\\n  const [expanded, setExpanded] = React.useState('1')\\\\n  const handleToggle = (accordianId: string, isExpanded?: boolean) => {\\\\n    setExpanded(isExpanded ? accordianId : '')\\\\n  }\\\\n\\\\n  const handleToggleChange = (e: any) => {\\\\n    console.log(\\\\\\\"toggledata\\\\\\\", e)\\\\n  }\\\\n\\\\n  const tooltipProps={\\\\n    messagePlacement:'end',\\\\n    arrowPlacement:'center',\\\\n    tooltipDirection:'bottom'\\\\n  }\\\\n\\\\n  return (\\\\n    <>\\\\n       <Accordian id='1' expanded={expanded === '1'} onToggle={handleToggle} onToggleSwitch={handleToggleChange} switchTooltipMessage=\\\\\\\"Activate / Deactivate this setting\\\\\\\" switchTooltipProps={tooltipProps} showToggleSwitch={true} toggleSwitchStyle={{paddingRight:\\\\\\\"15px\\\\\\\"}}>\\\\n        {{\\\\n          header: (\\\\n            <>\\\\n              <AccordionHeaderTitle>\\\\n                Minimum Capacity Utilization\\\\n              </AccordionHeaderTitle>\\\\n              <AccordionHeaderSubTitle>\\\\n                Helps you manage Fleet utilization\\\\n              </AccordionHeaderSubTitle>\\\\n            </>\\\\n          ),\\\\n          content: (\\\\n            <AccordionContent>\\\\n              {Array(10)\\\\n                .fill(0)\\\\n                .map((_, i) => (\\\\n                  <div key={i}>Line {i + 1} </div>\\\\n                ))}\\\\n            </AccordionContent>\\\\n          )\\\\n        }}\\\\n      </Accordian>\\\\n      <Accordian id='2' expanded={expanded === '2'} onToggle={handleToggle} onToggleSwitch={handleToggleChange} showToggleSwitch={true} toggleSwitchDisable={true} isToggleChecked={true}>\\\\n        {{\\\\n          header: (\\\\n            <>\\\\n              <AccordionHeaderTitle>Send Activation Link</AccordionHeaderTitle>\\\\n              <AccordionHeaderSubTitle>\\\\n                Send an activation link to the mobile number of a newly created\\\\n                Delivery Associate.\\\\n              </AccordionHeaderSubTitle>\\\\n            </>\\\\n          ),\\\\n          content: (\\\\n            <AccordionContent>\\\\n              {Array(5)\\\\n                .fill(0)\\\\n                .map((_, i) => (\\\\n                  <div key={i}>Line {i + 1} </div>\\\\n                ))}\\\\n            </AccordionContent>\\\\n          )\\\\n        }}\\\\n      </Accordian>\\\\n      <Accordian id='3' expanded={expanded === '3'} onToggle={handleToggle} onToggleSwitch={handleToggleChange}>\\\\n        {{\\\\n          header: (\\\\n            <>\\\\n              <AccordionHeaderTitle>\\\\n                Delivery Associates Skill-sets configuration\\\\n              </AccordionHeaderTitle>\\\\n              <AccordionHeaderSubTitle>\\\\n                Select specific skills while adding a Delivery Associate.\\\\n                LogiNext Route planning will automatically assign the Shipments\\\\n                that a Delivery Associate is skilled to perform.\\\\n              </AccordionHeaderSubTitle>\\\\n            </>\\\\n          ),\\\\n          content: (\\\\n            <AccordionContent>\\\\n              {Array(15)\\\\n                .fill(0)\\\\n                .map((_, i) => (\\\\n                  <div key={i}>Line {i + 1} </div>\\\\n                ))}\\\\n            </AccordionContent>\\\\n          )\\\\n        }}\\\\n      </Accordian>\\\\n    </>\\\\n  )\\\\n}\\\\nexport const Default = () => {\\\\n  return (\\\\n    <ThemeWrapper>\\\\n      <Box p='1em' bgColor='grey.50'>\\\\n        <AccordionComponent />\\\\n      </Box>\\\\n    </ThemeWrapper>\\\\n  )\\\\n}\\\\n\\\",\\\"locationsMap\\\":{}},},\\n  title: `${path}/Accordian`,\\n  decorators: [withKnobs],\\n  component: Accordian\\n}\\n\\nconst AccordionComponent = () => {\\n  const [expanded, setExpanded] = React.useState('1')\\n  const handleToggle = (accordianId: string, isExpanded?: boolean) => {\\n    setExpanded(isExpanded ? accordianId : '')\\n  }\\n\\n  const handleToggleChange = (e: any) => {\\n    console.log(\\\"toggledata\\\", e)\\n  }\\n\\n  const tooltipProps={\\n    messagePlacement:'end',\\n    arrowPlacement:'center',\\n    tooltipDirection:'bottom'\\n  }\\n\\n  return (\\n    <>\\n       <Accordian id='1' expanded={expanded === '1'} onToggle={handleToggle} onToggleSwitch={handleToggleChange} switchTooltipMessage=\\\"Activate / Deactivate this setting\\\" switchTooltipProps={tooltipProps} showToggleSwitch={true} toggleSwitchStyle={{paddingRight:\\\"15px\\\"}}>\\n        {{\\n          header: (\\n            <>\\n              <AccordionHeaderTitle>\\n                Minimum Capacity Utilization\\n              </AccordionHeaderTitle>\\n              <AccordionHeaderSubTitle>\\n                Helps you manage Fleet utilization\\n              </AccordionHeaderSubTitle>\\n            </>\\n          ),\\n          content: (\\n            <AccordionContent>\\n              {Array(10)\\n                .fill(0)\\n                .map((_, i) => (\\n                  <div key={i}>Line {i + 1} </div>\\n                ))}\\n            </AccordionContent>\\n          )\\n        }}\\n      </Accordian>\\n      <Accordian id='2' expanded={expanded === '2'} onToggle={handleToggle} onToggleSwitch={handleToggleChange} showToggleSwitch={true} toggleSwitchDisable={true} isToggleChecked={true}>\\n        {{\\n          header: (\\n            <>\\n              <AccordionHeaderTitle>Send Activation Link</AccordionHeaderTitle>\\n              <AccordionHeaderSubTitle>\\n                Send an activation link to the mobile number of a newly created\\n                Delivery Associate.\\n              </AccordionHeaderSubTitle>\\n            </>\\n          ),\\n          content: (\\n            <AccordionContent>\\n              {Array(5)\\n                .fill(0)\\n                .map((_, i) => (\\n                  <div key={i}>Line {i + 1} </div>\\n                ))}\\n            </AccordionContent>\\n          )\\n        }}\\n      </Accordian>\\n      <Accordian id='3' expanded={expanded === '3'} onToggle={handleToggle} onToggleSwitch={handleToggleChange}>\\n        {{\\n          header: (\\n            <>\\n              <AccordionHeaderTitle>\\n                Delivery Associates Skill-sets configuration\\n              </AccordionHeaderTitle>\\n              <AccordionHeaderSubTitle>\\n                Select specific skills while adding a Delivery Associate.\\n                LogiNext Route planning will automatically assign the Shipments\\n                that a Delivery Associate is skilled to perform.\\n              </AccordionHeaderSubTitle>\\n            </>\\n          ),\\n          content: (\\n            <AccordionContent>\\n              {Array(15)\\n                .fill(0)\\n                .map((_, i) => (\\n                  <div key={i}>Line {i + 1} </div>\\n                ))}\\n            </AccordionContent>\\n          )\\n        }}\\n      </Accordian>\\n    </>\\n  )\\n}\\nexport const Default = addSourceDecorator(() => {\\n  return (\\n    <ThemeWrapper>\\n      <Box p='1em' bgColor='grey.50'>\\n        <AccordionComponent />\\n      </Box>\\n    </ThemeWrapper>\\n  )\\n}, {__STORY__, __ADDS_MAP__,__MAIN_FILE_LOCATION__,__MODULE_DEPENDENCIES__,__LOCAL_DEPENDENCIES__,__SOURCE_PREFIX__,__IDS_TO_FRAMEWORKS__});\",\n    \"locationsMap\": {}\n  }), _defineProperty(_parameters, \"storySource\", {\n    \"source\": \"import React from 'react'\\nimport { withKnobs } from '@storybook/addon-knobs'\\nimport Accordian from '.'\\n\\nimport Box from '../../atoms/Box'\\n\\nimport { path } from '..'\\nimport ThemeWrapper from '../../../utilities/components/ThemeWrapper'\\nimport {\\n  AccordionHeaderTitle,\\n  AccordionHeaderSubTitle,\\n  AccordionContent\\n} from './styles'\\n\\nexport default {\\n  title: `${path}/Accordian`,\\n  decorators: [withKnobs],\\n  component: Accordian\\n}\\n\\nconst AccordionComponent = () => {\\n  const [expanded, setExpanded] = React.useState('1')\\n  const handleToggle = (accordianId: string, isExpanded?: boolean) => {\\n    setExpanded(isExpanded ? accordianId : '')\\n  }\\n\\n  const handleToggleChange = (e: any) => {\\n    console.log(\\\"toggledata\\\", e)\\n  }\\n\\n  const tooltipProps={\\n    messagePlacement:'end',\\n    arrowPlacement:'center',\\n    tooltipDirection:'bottom'\\n  }\\n\\n  return (\\n    <>\\n       <Accordian id='1' expanded={expanded === '1'} onToggle={handleToggle} onToggleSwitch={handleToggleChange} switchTooltipMessage=\\\"Activate / Deactivate this setting\\\" switchTooltipProps={tooltipProps} showToggleSwitch={true} toggleSwitchStyle={{paddingRight:\\\"15px\\\"}}>\\n        {{\\n          header: (\\n            <>\\n              <AccordionHeaderTitle>\\n                Minimum Capacity Utilization\\n              </AccordionHeaderTitle>\\n              <AccordionHeaderSubTitle>\\n                Helps you manage Fleet utilization\\n              </AccordionHeaderSubTitle>\\n            </>\\n          ),\\n          content: (\\n            <AccordionContent>\\n              {Array(10)\\n                .fill(0)\\n                .map((_, i) => (\\n                  <div key={i}>Line {i + 1} </div>\\n                ))}\\n            </AccordionContent>\\n          )\\n        }}\\n      </Accordian>\\n      <Accordian id='2' expanded={expanded === '2'} onToggle={handleToggle} onToggleSwitch={handleToggleChange} showToggleSwitch={true} toggleSwitchDisable={true} isToggleChecked={true}>\\n        {{\\n          header: (\\n            <>\\n              <AccordionHeaderTitle>Send Activation Link</AccordionHeaderTitle>\\n              <AccordionHeaderSubTitle>\\n                Send an activation link to the mobile number of a newly created\\n                Delivery Associate.\\n              </AccordionHeaderSubTitle>\\n            </>\\n          ),\\n          content: (\\n            <AccordionContent>\\n              {Array(5)\\n                .fill(0)\\n                .map((_, i) => (\\n                  <div key={i}>Line {i + 1} </div>\\n                ))}\\n            </AccordionContent>\\n          )\\n        }}\\n      </Accordian>\\n      <Accordian id='3' expanded={expanded === '3'} onToggle={handleToggle} onToggleSwitch={handleToggleChange}>\\n        {{\\n          header: (\\n            <>\\n              <AccordionHeaderTitle>\\n                Delivery Associates Skill-sets configuration\\n              </AccordionHeaderTitle>\\n              <AccordionHeaderSubTitle>\\n                Select specific skills while adding a Delivery Associate.\\n                LogiNext Route planning will automatically assign the Shipments\\n                that a Delivery Associate is skilled to perform.\\n              </AccordionHeaderSubTitle>\\n            </>\\n          ),\\n          content: (\\n            <AccordionContent>\\n              {Array(15)\\n                .fill(0)\\n                .map((_, i) => (\\n                  <div key={i}>Line {i + 1} </div>\\n                ))}\\n            </AccordionContent>\\n          )\\n        }}\\n      </Accordian>\\n    </>\\n  )\\n}\\nexport const Default = () => {\\n  return (\\n    <ThemeWrapper>\\n      <Box p='1em' bgColor='grey.50'>\\n        <AccordionComponent />\\n      </Box>\\n    </ThemeWrapper>\\n  )\\n}\\n\",\n    \"locationsMap\": {}\n  }), _parameters),\n  title: path + \"/Accordian\",\n  decorators: [withKnobs],\n  component: Accordian\n};\n\nvar AccordionComponent = function AccordionComponent() {\n  var _a = React.useState('1'),\n      expanded = _a[0],\n      setExpanded = _a[1];\n\n  var handleToggle = function handleToggle(accordianId, isExpanded) {\n    setExpanded(isExpanded ? accordianId : '');\n  };\n\n  var handleToggleChange = function handleToggleChange(e) {\n    console.log(\"toggledata\", e);\n  };\n\n  var tooltipProps = {\n    messagePlacement: 'end',\n    arrowPlacement: 'center',\n    tooltipDirection: 'bottom'\n  };\n  return React.createElement(React.Fragment, null, React.createElement(Accordian, {\n    id: '1',\n    expanded: expanded === '1',\n    onToggle: handleToggle,\n    onToggleSwitch: handleToggleChange,\n    switchTooltipMessage: \"Activate / Deactivate this setting\",\n    switchTooltipProps: tooltipProps,\n    showToggleSwitch: true,\n    toggleSwitchStyle: {\n      paddingRight: \"15px\"\n    }\n  }, {\n    header: React.createElement(React.Fragment, null, React.createElement(AccordionHeaderTitle, null, \"Minimum Capacity Utilization\"), React.createElement(AccordionHeaderSubTitle, null, \"Helps you manage Fleet utilization\")),\n    content: React.createElement(AccordionContent, null, Array(10).fill(0).map(function (_, i) {\n      return React.createElement(\"div\", {\n        key: i\n      }, \"Line \", i + 1, \" \");\n    }))\n  }), React.createElement(Accordian, {\n    id: '2',\n    expanded: expanded === '2',\n    onToggle: handleToggle,\n    onToggleSwitch: handleToggleChange,\n    showToggleSwitch: true,\n    toggleSwitchDisable: true,\n    isToggleChecked: true\n  }, {\n    header: React.createElement(React.Fragment, null, React.createElement(AccordionHeaderTitle, null, \"Send Activation Link\"), React.createElement(AccordionHeaderSubTitle, null, \"Send an activation link to the mobile number of a newly created Delivery Associate.\")),\n    content: React.createElement(AccordionContent, null, Array(5).fill(0).map(function (_, i) {\n      return React.createElement(\"div\", {\n        key: i\n      }, \"Line \", i + 1, \" \");\n    }))\n  }), React.createElement(Accordian, {\n    id: '3',\n    expanded: expanded === '3',\n    onToggle: handleToggle,\n    onToggleSwitch: handleToggleChange\n  }, {\n    header: React.createElement(React.Fragment, null, React.createElement(AccordionHeaderTitle, null, \"Delivery Associates Skill-sets configuration\"), React.createElement(AccordionHeaderSubTitle, null, \"Select specific skills while adding a Delivery Associate. LogiNext Route planning will automatically assign the Shipments that a Delivery Associate is skilled to perform.\")),\n    content: React.createElement(AccordionContent, null, Array(15).fill(0).map(function (_, i) {\n      return React.createElement(\"div\", {\n        key: i\n      }, \"Line \", i + 1, \" \");\n    }))\n  }));\n};\n\nexport var Default = addSourceDecorator(addSourceDecorator(addSourceDecorator(function () {\n  return React.createElement(ThemeWrapper, null, React.createElement(Box, {\n    p: '1em',\n    bgColor: 'grey.50'\n  }, React.createElement(AccordionComponent, null)));\n}, {\n  __STORY__: __STORY__,\n  __ADDS_MAP__: __ADDS_MAP__,\n  __MAIN_FILE_LOCATION__: __MAIN_FILE_LOCATION__,\n  __MODULE_DEPENDENCIES__: __MODULE_DEPENDENCIES__,\n  __LOCAL_DEPENDENCIES__: __LOCAL_DEPENDENCIES__,\n  __SOURCE_PREFIX__: __SOURCE_PREFIX__,\n  __IDS_TO_FRAMEWORKS__: __IDS_TO_FRAMEWORKS__\n}), {\n  __STORY__: __STORY__,\n  __ADDS_MAP__: __ADDS_MAP__,\n  __MAIN_FILE_LOCATION__: __MAIN_FILE_LOCATION__,\n  __MODULE_DEPENDENCIES__: __MODULE_DEPENDENCIES__,\n  __LOCAL_DEPENDENCIES__: __LOCAL_DEPENDENCIES__,\n  __SOURCE_PREFIX__: __SOURCE_PREFIX__,\n  __IDS_TO_FRAMEWORKS__: __IDS_TO_FRAMEWORKS__\n}), {\n  __STORY__: __STORY__,\n  __ADDS_MAP__: __ADDS_MAP__,\n  __MAIN_FILE_LOCATION__: __MAIN_FILE_LOCATION__,\n  __MODULE_DEPENDENCIES__: __MODULE_DEPENDENCIES__,\n  __LOCAL_DEPENDENCIES__: __LOCAL_DEPENDENCIES__,\n  __SOURCE_PREFIX__: __SOURCE_PREFIX__,\n  __IDS_TO_FRAMEWORKS__: __IDS_TO_FRAMEWORKS__\n});","map":{"version":3,"sources":["/Users/farhanansari/Desktop/CODE/PrxProject/untitled folder/reactStoryBook/node_modules/react-docgen-typescript-loader/dist/index.js!/Users/farhanansari/Desktop/CODE/PrxProject/untitled folder/reactStoryBook/node_modules/eslint-loader/dist/cjs.js??ref--6-0!/Users/farhanansari/Desktop/CODE/PrxProject/untitled folder/reactStoryBook/node_modules/@storybook/source-loader/dist/server/index.js??ref--11!/Users/farhanansari/Desktop/CODE/PrxProject/untitled folder/reactStoryBook/node_modules/@storybook/source-loader/dist/server/index.js!/Users/farhanansari/Desktop/CODE/PrxProject/untitled folder/reactStoryBook/node_modules/@storybook/source-loader/dist/server/index.js!/Users/farhanansari/Desktop/CODE/PrxProject/untitled folder/reactStoryBook/src/components/molecules/Accordian/Accordian.stories.tsx"],"names":[],"mappings":";;;;AACA;AACA;AACA;AACA,IAAI,gBAAgB,GAAG,OAAO,CAAC,kCAAD,CAAP,CAA4C,UAAnE,C,CACA;;;AACA,IAAI,kBAAkB,GAAG,OAAO,CAAC,kCAAD,CAAP,CAA4C,SAArE,C,CACA;;;AACA,IAAI,iBAAiB,GAAG,+GAAxB,C,CACA;;AACA,IAAI,SAAS,GAAG,wztCAAhB,C,CACA;;AACA,IAAI,YAAY,GAAG,EAAnB,C,CACA;;AACA,IAAI,sBAAsB,GAAG,wBAA7B,C,CACA;;AACA,IAAI,uBAAuB,GAAG,EAA9B,C,CACA;;AACA,IAAI,sBAAsB,GAAG,EAA7B,C,CACA;;AACA,IAAI,qBAAqB,GAAG,EAA5B;AAGA;AACA;AACA;;AACA,IAAI,gBAAgB,GAAG,OAAO,CAAC,kCAAD,CAAP,CAA4C,UAAnE,C,CACA;;;AACA,IAAI,kBAAkB,GAAG,OAAO,CAAC,kCAAD,CAAP,CAA4C,SAArE,C,CACA;;;AACA,IAAI,iBAAiB,GAAG,+GAAxB,C,CACA;;AACA,IAAI,SAAS,GAAG,4rYAAhB,C,CACA;;AACA,IAAI,YAAY,GAAG,EAAnB,C,CACA;;AACA,IAAI,sBAAsB,GAAG,wBAA7B,C,CACA;;AACA,IAAI,uBAAuB,GAAG,EAA9B,C,CACA;;AACA,IAAI,sBAAsB,GAAG,EAA7B,C,CACA;;AACA,IAAI,qBAAqB,GAAG,EAA5B;AAGA;AACA;AACA;;AACA,IAAI,gBAAgB,GAAG,OAAO,CAAC,kCAAD,CAAP,CAA4C,UAAnE,C,CACA;;;AACA,IAAI,kBAAkB,GAAG,OAAO,CAAC,kCAAD,CAAP,CAA4C,SAArE,C,CACA;;;AACA,IAAI,iBAAiB,GAAG,+GAAxB,C,CACA;;AACA,IAAI,SAAS,GAAG,4rHAAhB,C,CACA;;AACA,IAAI,YAAY,GAAG,EAAnB,C,CACA;;AACA,IAAI,sBAAsB,GAAG,wBAA7B,C,CACA;;AACA,IAAI,uBAAuB,GAAG,EAA9B,C,CACA;;AACA,IAAI,sBAAsB,GAAG,EAA7B,C,CACA;;AACA,IAAI,qBAAqB,GAAG,EAA5B;AAEA,OAAO,KAAP,MAAkB,OAAlB;AACA,SAAS,SAAT,QAA0B,wBAA1B;AACA,OAAO,SAAP,MAAsB,GAAtB;AAEA,OAAO,GAAP,MAAgB,iBAAhB;AAEA,SAAS,IAAT,QAAqB,IAArB;AACA,OAAO,YAAP,MAAyB,4CAAzB;AACA,SACE,oBADF,EAEE,uBAFF,EAGE,gBAHF,QAIO,UAJP;AAMA,eAAe;AAAC,EAAA,UAAU;AAAG,mBAAc;AAAC,gBAAS,wztCAAV;AAAm0tC,sBAAe;AAAl1tC;AAAjB,iDAAq3tC;AAAC,cAAS,4rYAAV;AAAusY,oBAAe;AAAttY,GAAr3tC,+CAA6lmD;AAAC,cAAS,4rHAAV;AAAusH,oBAAe;AAAttH,GAA7lmD,eAAX;AACb,EAAA,KAAK,EAAK,IAAI,GAAA,YADD;AAEb,EAAA,UAAU,EAAE,CAAC,SAAD,CAFC;AAGb,EAAA,SAAS,EAAE;AAHE,CAAf;;AAMA,IAAM,kBAAkB,GAAG,SAArB,kBAAqB,GAAA;AACnB,MAAA,EAAA,GAA0B,KAAK,CAAC,QAAN,CAAe,GAAf,CAA1B;AAAA,MAAC,QAAQ,GAAA,EAAA,CAAA,CAAA,CAAT;AAAA,MAAW,WAAW,GAAA,EAAA,CAAA,CAAA,CAAtB;;AACN,MAAM,YAAY,GAAG,SAAf,YAAe,CAAC,WAAD,EAAsB,UAAtB,EAA0C;AAC7D,IAAA,WAAW,CAAC,UAAU,GAAG,WAAH,GAAiB,EAA5B,CAAX;AACD,GAFD;;AAIA,MAAM,kBAAkB,GAAG,SAArB,kBAAqB,CAAC,CAAD,EAAO;AAChC,IAAA,OAAO,CAAC,GAAR,CAAY,YAAZ,EAA0B,CAA1B;AACD,GAFD;;AAIA,MAAM,YAAY,GAAC;AACjB,IAAA,gBAAgB,EAAC,KADA;AAEjB,IAAA,cAAc,EAAC,QAFE;AAGjB,IAAA,gBAAgB,EAAC;AAHA,GAAnB;AAMA,SACE,KAAA,CAAA,aAAA,CAAA,KAAA,CAAA,QAAA,EAAA,IAAA,EACG,KAAA,CAAA,aAAA,CAAC,SAAD,EAAU;AAAC,IAAA,EAAE,EAAC,GAAJ;AAAQ,IAAA,QAAQ,EAAE,QAAQ,KAAK,GAA/B;AAAoC,IAAA,QAAQ,EAAE,YAA9C;AAA4D,IAAA,cAAc,EAAE,kBAA5E;AAAgG,IAAA,oBAAoB,EAAC,oCAArH;AAA0J,IAAA,kBAAkB,EAAE,YAA9K;AAA4L,IAAA,gBAAgB,EAAE,IAA9M;AAAoN,IAAA,iBAAiB,EAAE;AAAC,MAAA,YAAY,EAAC;AAAd;AAAvO,GAAV,EACE;AACC,IAAA,MAAM,EACJ,KAAA,CAAA,aAAA,CAAA,KAAA,CAAA,QAAA,EAAA,IAAA,EACE,KAAA,CAAA,aAAA,CAAC,oBAAD,EAAqB,IAArB,EAAqB,8BAArB,CADF,EAIE,KAAA,CAAA,aAAA,CAAC,uBAAD,EAAwB,IAAxB,EAAwB,oCAAxB,CAJF,CAFH;AAWC,IAAA,OAAO,EACL,KAAA,CAAA,aAAA,CAAC,gBAAD,EAAiB,IAAjB,EACG,KAAK,CAAC,EAAD,CAAL,CACE,IADF,CACO,CADP,EAEE,GAFF,CAEM,UAAC,CAAD,EAAI,CAAJ,EAAK;AAAK,aACb,KAAA,CAAA,aAAA,CAAA,KAAA,EAAA;AAAK,QAAA,GAAG,EAAE;AAAV,OAAA,E,OAAA,EAAmB,CAAC,GAAG,CAAvB,EADa,GACb,CADa;AAEd,KAJF,CADH;AAZH,GADF,CADH,EAwBE,KAAA,CAAA,aAAA,CAAC,SAAD,EAAU;AAAC,IAAA,EAAE,EAAC,GAAJ;AAAQ,IAAA,QAAQ,EAAE,QAAQ,KAAK,GAA/B;AAAoC,IAAA,QAAQ,EAAE,YAA9C;AAA4D,IAAA,cAAc,EAAE,kBAA5E;AAAgG,IAAA,gBAAgB,EAAE,IAAlH;AAAwH,IAAA,mBAAmB,EAAE,IAA7I;AAAmJ,IAAA,eAAe,EAAE;AAApK,GAAV,EACG;AACC,IAAA,MAAM,EACJ,KAAA,CAAA,aAAA,CAAA,KAAA,CAAA,QAAA,EAAA,IAAA,EACE,KAAA,CAAA,aAAA,CAAC,oBAAD,EAAqB,IAArB,EAAqB,sBAArB,CADF,EAEE,KAAA,CAAA,aAAA,CAAC,uBAAD,EAAwB,IAAxB,EAAwB,qFAAxB,CAFF,CAFH;AAUC,IAAA,OAAO,EACL,KAAA,CAAA,aAAA,CAAC,gBAAD,EAAiB,IAAjB,EACG,KAAK,CAAC,CAAD,CAAL,CACE,IADF,CACO,CADP,EAEE,GAFF,CAEM,UAAC,CAAD,EAAI,CAAJ,EAAK;AAAK,aACb,KAAA,CAAA,aAAA,CAAA,KAAA,EAAA;AAAK,QAAA,GAAG,EAAE;AAAV,OAAA,E,OAAA,EAAmB,CAAC,GAAG,CAAvB,EADa,GACb,CADa;AAEd,KAJF,CADH;AAXH,GADH,CAxBF,EA8CE,KAAA,CAAA,aAAA,CAAC,SAAD,EAAU;AAAC,IAAA,EAAE,EAAC,GAAJ;AAAQ,IAAA,QAAQ,EAAE,QAAQ,KAAK,GAA/B;AAAoC,IAAA,QAAQ,EAAE,YAA9C;AAA4D,IAAA,cAAc,EAAE;AAA5E,GAAV,EACG;AACC,IAAA,MAAM,EACJ,KAAA,CAAA,aAAA,CAAA,KAAA,CAAA,QAAA,EAAA,IAAA,EACE,KAAA,CAAA,aAAA,CAAC,oBAAD,EAAqB,IAArB,EAAqB,8CAArB,CADF,EAIE,KAAA,CAAA,aAAA,CAAC,uBAAD,EAAwB,IAAxB,EAAwB,4KAAxB,CAJF,CAFH;AAaC,IAAA,OAAO,EACL,KAAA,CAAA,aAAA,CAAC,gBAAD,EAAiB,IAAjB,EACG,KAAK,CAAC,EAAD,CAAL,CACE,IADF,CACO,CADP,EAEE,GAFF,CAEM,UAAC,CAAD,EAAI,CAAJ,EAAK;AAAK,aACb,KAAA,CAAA,aAAA,CAAA,KAAA,EAAA;AAAK,QAAA,GAAG,EAAE;AAAV,OAAA,E,OAAA,EAAmB,CAAC,GAAG,CAAvB,EADa,GACb,CADa;AAEd,KAJF,CADH;AAdH,GADH,CA9CF,CADF;AA0ED,CA1FD;;AA2FA,OAAO,IAAM,OAAO,GAAG,kBAAkB,CAAC,kBAAkB,CAAC,kBAAkB,CAAC,YAAA;AAC9E,SACE,KAAA,CAAA,aAAA,CAAC,YAAD,EAAa,IAAb,EACE,KAAA,CAAA,aAAA,CAAC,GAAD,EAAI;AAAC,IAAA,CAAC,EAAC,KAAH;AAAS,IAAA,OAAO,EAAC;AAAjB,GAAJ,EACE,KAAA,CAAA,aAAA,CAAC,kBAAD,EAAmB,IAAnB,CADF,CADF,CADF;AAOD,CAR8E,EAQ5E;AAAC,EAAA,SAAS,EAAA,SAAV;AAAY,EAAA,YAAY,EAAA,YAAxB;AAAyB,EAAA,sBAAsB,EAAA,sBAA/C;AAAgD,EAAA,uBAAuB,EAAA,uBAAvE;AAAwE,EAAA,sBAAsB,EAAA,sBAA9F;AAA+F,EAAA,iBAAiB,EAAA,iBAAhH;AAAiH,EAAA,qBAAqB,EAAA;AAAtI,CAR4E,CAAnB,EAQiF;AAAC,EAAA,SAAS,EAAA,SAAV;AAAY,EAAA,YAAY,EAAA,YAAxB;AAAyB,EAAA,sBAAsB,EAAA,sBAA/C;AAAgD,EAAA,uBAAuB,EAAA,uBAAvE;AAAwE,EAAA,sBAAsB,EAAA,sBAA9F;AAA+F,EAAA,iBAAiB,EAAA,iBAAhH;AAAiH,EAAA,qBAAqB,EAAA;AAAtI,CARjF,CAAnB,EAQ8O;AAAC,EAAA,SAAS,EAAA,SAAV;AAAY,EAAA,YAAY,EAAA,YAAxB;AAAyB,EAAA,sBAAsB,EAAA,sBAA/C;AAAgD,EAAA,uBAAuB,EAAA,uBAAvE;AAAwE,EAAA,sBAAsB,EAAA,sBAA9F;AAA+F,EAAA,iBAAiB,EAAA,iBAAhH;AAAiH,EAAA,qBAAqB,EAAA;AAAtI,CAR9O,CAAlC","sourcesContent":["\n/* eslint-disable */\n// @ts-nocheck\n// @ts-ignore\nvar withSourceLoader = require('@storybook/source-loader/preview').withSource;\n// @ts-ignore\nvar addSourceDecorator = require(\"@storybook/source-loader/preview\").addSource;\n// @ts-ignore\nvar __SOURCE_PREFIX__ = \"/Users/farhanansari/Desktop/CODE/PrxProject/untitled folder/reactStoryBook/src/components/molecules/Accordian\";\n// @ts-ignore\nvar __STORY__ = \"\\n\\n// @ts-nocheck\\n// @ts-ignore\\nvar withSourceLoader = require('@storybook/source-loader/preview').withSource;\\n// @ts-ignore\\nvar addSourceDecorator = require(\\\"@storybook/source-loader/preview\\\").addSource;\\n// @ts-ignore\\nvar __SOURCE_PREFIX__ = \\\"/Users/farhanansari/Desktop/CODE/PrxProject/untitled folder/reactStoryBook/src/components/molecules/Accordian\\\";\\n// @ts-ignore\\nvar __STORY__ = \\\"\\\\n\\\\n// @ts-nocheck\\\\n// @ts-ignore\\\\nvar withSourceLoader = require('@storybook/source-loader/preview').withSource;\\\\n// @ts-ignore\\\\nvar addSourceDecorator = require(\\\\\\\"@storybook/source-loader/preview\\\\\\\").addSource;\\\\n// @ts-ignore\\\\nvar __SOURCE_PREFIX__ = \\\\\\\"/Users/farhanansari/Desktop/CODE/PrxProject/untitled folder/reactStoryBook/src/components/molecules/Accordian\\\\\\\";\\\\n// @ts-ignore\\\\nvar __STORY__ = \\\\\\\"import React from 'react'\\\\\\\\nimport { withKnobs } from '@storybook/addon-knobs'\\\\\\\\nimport Accordian from '.'\\\\\\\\n\\\\\\\\nimport Box from '../../atoms/Box'\\\\\\\\n\\\\\\\\nimport { path } from '..'\\\\\\\\nimport ThemeWrapper from '../../../utilities/components/ThemeWrapper'\\\\\\\\nimport {\\\\\\\\n  AccordionHeaderTitle,\\\\\\\\n  AccordionHeaderSubTitle,\\\\\\\\n  AccordionContent\\\\\\\\n} from './styles'\\\\\\\\n\\\\\\\\nexport default {\\\\\\\\n  title: `${path}/Accordian`,\\\\\\\\n  decorators: [withKnobs],\\\\\\\\n  component: Accordian\\\\\\\\n}\\\\\\\\n\\\\\\\\nconst AccordionComponent = () => {\\\\\\\\n  const [expanded, setExpanded] = React.useState('1')\\\\\\\\n  const handleToggle = (accordianId: string, isExpanded?: boolean) => {\\\\\\\\n    setExpanded(isExpanded ? accordianId : '')\\\\\\\\n  }\\\\\\\\n\\\\\\\\n  const handleToggleChange = (e: any) => {\\\\\\\\n    console.log(\\\\\\\\\\\\\\\"toggledata\\\\\\\\\\\\\\\", e)\\\\\\\\n  }\\\\\\\\n\\\\\\\\n  const tooltipProps={\\\\\\\\n    messagePlacement:'end',\\\\\\\\n    arrowPlacement:'center',\\\\\\\\n    tooltipDirection:'bottom'\\\\\\\\n  }\\\\\\\\n\\\\\\\\n  return (\\\\\\\\n    <>\\\\\\\\n       <Accordian id='1' expanded={expanded === '1'} onToggle={handleToggle} onToggleSwitch={handleToggleChange} switchTooltipMessage=\\\\\\\\\\\\\\\"Activate / Deactivate this setting\\\\\\\\\\\\\\\" switchTooltipProps={tooltipProps} showToggleSwitch={true} toggleSwitchStyle={{paddingRight:\\\\\\\\\\\\\\\"15px\\\\\\\\\\\\\\\"}}>\\\\\\\\n        {{\\\\\\\\n          header: (\\\\\\\\n            <>\\\\\\\\n              <AccordionHeaderTitle>\\\\\\\\n                Minimum Capacity Utilization\\\\\\\\n              </AccordionHeaderTitle>\\\\\\\\n              <AccordionHeaderSubTitle>\\\\\\\\n                Helps you manage Fleet utilization\\\\\\\\n              </AccordionHeaderSubTitle>\\\\\\\\n            </>\\\\\\\\n          ),\\\\\\\\n          content: (\\\\\\\\n            <AccordionContent>\\\\\\\\n              {Array(10)\\\\\\\\n                .fill(0)\\\\\\\\n                .map((_, i) => (\\\\\\\\n                  <div key={i}>Line {i + 1} </div>\\\\\\\\n                ))}\\\\\\\\n            </AccordionContent>\\\\\\\\n          )\\\\\\\\n        }}\\\\\\\\n      </Accordian>\\\\\\\\n      <Accordian id='2' expanded={expanded === '2'} onToggle={handleToggle} onToggleSwitch={handleToggleChange} showToggleSwitch={true} toggleSwitchDisable={true} isToggleChecked={true}>\\\\\\\\n        {{\\\\\\\\n          header: (\\\\\\\\n            <>\\\\\\\\n              <AccordionHeaderTitle>Send Activation Link</AccordionHeaderTitle>\\\\\\\\n              <AccordionHeaderSubTitle>\\\\\\\\n                Send an activation link to the mobile number of a newly created\\\\\\\\n                Delivery Associate.\\\\\\\\n              </AccordionHeaderSubTitle>\\\\\\\\n            </>\\\\\\\\n          ),\\\\\\\\n          content: (\\\\\\\\n            <AccordionContent>\\\\\\\\n              {Array(5)\\\\\\\\n                .fill(0)\\\\\\\\n                .map((_, i) => (\\\\\\\\n                  <div key={i}>Line {i + 1} </div>\\\\\\\\n                ))}\\\\\\\\n            </AccordionContent>\\\\\\\\n          )\\\\\\\\n        }}\\\\\\\\n      </Accordian>\\\\\\\\n      <Accordian id='3' expanded={expanded === '3'} onToggle={handleToggle} onToggleSwitch={handleToggleChange}>\\\\\\\\n        {{\\\\\\\\n          header: (\\\\\\\\n            <>\\\\\\\\n              <AccordionHeaderTitle>\\\\\\\\n                Delivery Associates Skill-sets configuration\\\\\\\\n              </AccordionHeaderTitle>\\\\\\\\n              <AccordionHeaderSubTitle>\\\\\\\\n                Select specific skills while adding a Delivery Associate.\\\\\\\\n                LogiNext Route planning will automatically assign the Shipments\\\\\\\\n                that a Delivery Associate is skilled to perform.\\\\\\\\n              </AccordionHeaderSubTitle>\\\\\\\\n            </>\\\\\\\\n          ),\\\\\\\\n          content: (\\\\\\\\n            <AccordionContent>\\\\\\\\n              {Array(15)\\\\\\\\n                .fill(0)\\\\\\\\n                .map((_, i) => (\\\\\\\\n                  <div key={i}>Line {i + 1} </div>\\\\\\\\n                ))}\\\\\\\\n            </AccordionContent>\\\\\\\\n          )\\\\\\\\n        }}\\\\\\\\n      </Accordian>\\\\\\\\n    </>\\\\\\\\n  )\\\\\\\\n}\\\\\\\\nexport const Default = () => {\\\\\\\\n  return (\\\\\\\\n    <ThemeWrapper>\\\\\\\\n      <Box p='1em' bgColor='grey.50'>\\\\\\\\n        <AccordionComponent />\\\\\\\\n      </Box>\\\\\\\\n    </ThemeWrapper>\\\\\\\\n  )\\\\\\\\n}\\\\\\\\n\\\\\\\";\\\\n// @ts-ignore\\\\nvar __ADDS_MAP__ = {};\\\\n// @ts-ignore\\\\nvar __MAIN_FILE_LOCATION__ = \\\\\\\"/Accordian.stories.tsx\\\\\\\";\\\\n// @ts-ignore\\\\nvar __MODULE_DEPENDENCIES__ = [];\\\\n// @ts-ignore\\\\nvar __LOCAL_DEPENDENCIES__ = {};\\\\n// @ts-ignore\\\\nvar __IDS_TO_FRAMEWORKS__ = {};\\\\n        \\\\nimport React from 'react'\\\\nimport { withKnobs } from '@storybook/addon-knobs'\\\\nimport Accordian from '.'\\\\n\\\\nimport Box from '../../atoms/Box'\\\\n\\\\nimport { path } from '..'\\\\nimport ThemeWrapper from '../../../utilities/components/ThemeWrapper'\\\\nimport {\\\\n  AccordionHeaderTitle,\\\\n  AccordionHeaderSubTitle,\\\\n  AccordionContent\\\\n} from './styles'\\\\n\\\\nexport default {parameters: {\\\\\\\"storySource\\\\\\\":{\\\\\\\"source\\\\\\\":\\\\\\\"import React from 'react'\\\\\\\\nimport { withKnobs } from '@storybook/addon-knobs'\\\\\\\\nimport Accordian from '.'\\\\\\\\n\\\\\\\\nimport Box from '../../atoms/Box'\\\\\\\\n\\\\\\\\nimport { path } from '..'\\\\\\\\nimport ThemeWrapper from '../../../utilities/components/ThemeWrapper'\\\\\\\\nimport {\\\\\\\\n  AccordionHeaderTitle,\\\\\\\\n  AccordionHeaderSubTitle,\\\\\\\\n  AccordionContent\\\\\\\\n} from './styles'\\\\\\\\n\\\\\\\\nexport default {\\\\\\\\n  title: `${path}/Accordian`,\\\\\\\\n  decorators: [withKnobs],\\\\\\\\n  component: Accordian\\\\\\\\n}\\\\\\\\n\\\\\\\\nconst AccordionComponent = () => {\\\\\\\\n  const [expanded, setExpanded] = React.useState('1')\\\\\\\\n  const handleToggle = (accordianId: string, isExpanded?: boolean) => {\\\\\\\\n    setExpanded(isExpanded ? accordianId : '')\\\\\\\\n  }\\\\\\\\n\\\\\\\\n  const handleToggleChange = (e: any) => {\\\\\\\\n    console.log(\\\\\\\\\\\\\\\"toggledata\\\\\\\\\\\\\\\", e)\\\\\\\\n  }\\\\\\\\n\\\\\\\\n  const tooltipProps={\\\\\\\\n    messagePlacement:'end',\\\\\\\\n    arrowPlacement:'center',\\\\\\\\n    tooltipDirection:'bottom'\\\\\\\\n  }\\\\\\\\n\\\\\\\\n  return (\\\\\\\\n    <>\\\\\\\\n       <Accordian id='1' expanded={expanded === '1'} onToggle={handleToggle} onToggleSwitch={handleToggleChange} switchTooltipMessage=\\\\\\\\\\\\\\\"Activate / Deactivate this setting\\\\\\\\\\\\\\\" switchTooltipProps={tooltipProps} showToggleSwitch={true} toggleSwitchStyle={{paddingRight:\\\\\\\\\\\\\\\"15px\\\\\\\\\\\\\\\"}}>\\\\\\\\n        {{\\\\\\\\n          header: (\\\\\\\\n            <>\\\\\\\\n              <AccordionHeaderTitle>\\\\\\\\n                Minimum Capacity Utilization\\\\\\\\n              </AccordionHeaderTitle>\\\\\\\\n              <AccordionHeaderSubTitle>\\\\\\\\n                Helps you manage Fleet utilization\\\\\\\\n              </AccordionHeaderSubTitle>\\\\\\\\n            </>\\\\\\\\n          ),\\\\\\\\n          content: (\\\\\\\\n            <AccordionContent>\\\\\\\\n              {Array(10)\\\\\\\\n                .fill(0)\\\\\\\\n                .map((_, i) => (\\\\\\\\n                  <div key={i}>Line {i + 1} </div>\\\\\\\\n                ))}\\\\\\\\n            </AccordionContent>\\\\\\\\n          )\\\\\\\\n        }}\\\\\\\\n      </Accordian>\\\\\\\\n      <Accordian id='2' expanded={expanded === '2'} onToggle={handleToggle} onToggleSwitch={handleToggleChange} showToggleSwitch={true} toggleSwitchDisable={true} isToggleChecked={true}>\\\\\\\\n        {{\\\\\\\\n          header: (\\\\\\\\n            <>\\\\\\\\n              <AccordionHeaderTitle>Send Activation Link</AccordionHeaderTitle>\\\\\\\\n              <AccordionHeaderSubTitle>\\\\\\\\n                Send an activation link to the mobile number of a newly created\\\\\\\\n                Delivery Associate.\\\\\\\\n              </AccordionHeaderSubTitle>\\\\\\\\n            </>\\\\\\\\n          ),\\\\\\\\n          content: (\\\\\\\\n            <AccordionContent>\\\\\\\\n              {Array(5)\\\\\\\\n                .fill(0)\\\\\\\\n                .map((_, i) => (\\\\\\\\n                  <div key={i}>Line {i + 1} </div>\\\\\\\\n                ))}\\\\\\\\n            </AccordionContent>\\\\\\\\n          )\\\\\\\\n        }}\\\\\\\\n      </Accordian>\\\\\\\\n      <Accordian id='3' expanded={expanded === '3'} onToggle={handleToggle} onToggleSwitch={handleToggleChange}>\\\\\\\\n        {{\\\\\\\\n          header: (\\\\\\\\n            <>\\\\\\\\n              <AccordionHeaderTitle>\\\\\\\\n                Delivery Associates Skill-sets configuration\\\\\\\\n              </AccordionHeaderTitle>\\\\\\\\n              <AccordionHeaderSubTitle>\\\\\\\\n                Select specific skills while adding a Delivery Associate.\\\\\\\\n                LogiNext Route planning will automatically assign the Shipments\\\\\\\\n                that a Delivery Associate is skilled to perform.\\\\\\\\n              </AccordionHeaderSubTitle>\\\\\\\\n            </>\\\\\\\\n          ),\\\\\\\\n          content: (\\\\\\\\n            <AccordionContent>\\\\\\\\n              {Array(15)\\\\\\\\n                .fill(0)\\\\\\\\n                .map((_, i) => (\\\\\\\\n                  <div key={i}>Line {i + 1} </div>\\\\\\\\n                ))}\\\\\\\\n            </AccordionContent>\\\\\\\\n          )\\\\\\\\n        }}\\\\\\\\n      </Accordian>\\\\\\\\n    </>\\\\\\\\n  )\\\\\\\\n}\\\\\\\\nexport const Default = () => {\\\\\\\\n  return (\\\\\\\\n    <ThemeWrapper>\\\\\\\\n      <Box p='1em' bgColor='grey.50'>\\\\\\\\n        <AccordionComponent />\\\\\\\\n      </Box>\\\\\\\\n    </ThemeWrapper>\\\\\\\\n  )\\\\\\\\n}\\\\\\\\n\\\\\\\",\\\\\\\"locationsMap\\\\\\\":{}},},\\\\n  title: `${path}/Accordian`,\\\\n  decorators: [withKnobs],\\\\n  component: Accordian\\\\n}\\\\n\\\\nconst AccordionComponent = () => {\\\\n  const [expanded, setExpanded] = React.useState('1')\\\\n  const handleToggle = (accordianId: string, isExpanded?: boolean) => {\\\\n    setExpanded(isExpanded ? accordianId : '')\\\\n  }\\\\n\\\\n  const handleToggleChange = (e: any) => {\\\\n    console.log(\\\\\\\"toggledata\\\\\\\", e)\\\\n  }\\\\n\\\\n  const tooltipProps={\\\\n    messagePlacement:'end',\\\\n    arrowPlacement:'center',\\\\n    tooltipDirection:'bottom'\\\\n  }\\\\n\\\\n  return (\\\\n    <>\\\\n       <Accordian id='1' expanded={expanded === '1'} onToggle={handleToggle} onToggleSwitch={handleToggleChange} switchTooltipMessage=\\\\\\\"Activate / Deactivate this setting\\\\\\\" switchTooltipProps={tooltipProps} showToggleSwitch={true} toggleSwitchStyle={{paddingRight:\\\\\\\"15px\\\\\\\"}}>\\\\n        {{\\\\n          header: (\\\\n            <>\\\\n              <AccordionHeaderTitle>\\\\n                Minimum Capacity Utilization\\\\n              </AccordionHeaderTitle>\\\\n              <AccordionHeaderSubTitle>\\\\n                Helps you manage Fleet utilization\\\\n              </AccordionHeaderSubTitle>\\\\n            </>\\\\n          ),\\\\n          content: (\\\\n            <AccordionContent>\\\\n              {Array(10)\\\\n                .fill(0)\\\\n                .map((_, i) => (\\\\n                  <div key={i}>Line {i + 1} </div>\\\\n                ))}\\\\n            </AccordionContent>\\\\n          )\\\\n        }}\\\\n      </Accordian>\\\\n      <Accordian id='2' expanded={expanded === '2'} onToggle={handleToggle} onToggleSwitch={handleToggleChange} showToggleSwitch={true} toggleSwitchDisable={true} isToggleChecked={true}>\\\\n        {{\\\\n          header: (\\\\n            <>\\\\n              <AccordionHeaderTitle>Send Activation Link</AccordionHeaderTitle>\\\\n              <AccordionHeaderSubTitle>\\\\n                Send an activation link to the mobile number of a newly created\\\\n                Delivery Associate.\\\\n              </AccordionHeaderSubTitle>\\\\n            </>\\\\n          ),\\\\n          content: (\\\\n            <AccordionContent>\\\\n              {Array(5)\\\\n                .fill(0)\\\\n                .map((_, i) => (\\\\n                  <div key={i}>Line {i + 1} </div>\\\\n                ))}\\\\n            </AccordionContent>\\\\n          )\\\\n        }}\\\\n      </Accordian>\\\\n      <Accordian id='3' expanded={expanded === '3'} onToggle={handleToggle} onToggleSwitch={handleToggleChange}>\\\\n        {{\\\\n          header: (\\\\n            <>\\\\n              <AccordionHeaderTitle>\\\\n                Delivery Associates Skill-sets configuration\\\\n              </AccordionHeaderTitle>\\\\n              <AccordionHeaderSubTitle>\\\\n                Select specific skills while adding a Delivery Associate.\\\\n                LogiNext Route planning will automatically assign the Shipments\\\\n                that a Delivery Associate is skilled to perform.\\\\n              </AccordionHeaderSubTitle>\\\\n            </>\\\\n          ),\\\\n          content: (\\\\n            <AccordionContent>\\\\n              {Array(15)\\\\n                .fill(0)\\\\n                .map((_, i) => (\\\\n                  <div key={i}>Line {i + 1} </div>\\\\n                ))}\\\\n            </AccordionContent>\\\\n          )\\\\n        }}\\\\n      </Accordian>\\\\n    </>\\\\n  )\\\\n}\\\\nexport const Default = addSourceDecorator(() => {\\\\n  return (\\\\n    <ThemeWrapper>\\\\n      <Box p='1em' bgColor='grey.50'>\\\\n        <AccordionComponent />\\\\n      </Box>\\\\n    </ThemeWrapper>\\\\n  )\\\\n}, {__STORY__, __ADDS_MAP__,__MAIN_FILE_LOCATION__,__MODULE_DEPENDENCIES__,__LOCAL_DEPENDENCIES__,__SOURCE_PREFIX__,__IDS_TO_FRAMEWORKS__});\\\";\\n// @ts-ignore\\nvar __ADDS_MAP__ = {};\\n// @ts-ignore\\nvar __MAIN_FILE_LOCATION__ = \\\"/Accordian.stories.tsx\\\";\\n// @ts-ignore\\nvar __MODULE_DEPENDENCIES__ = [];\\n// @ts-ignore\\nvar __LOCAL_DEPENDENCIES__ = {};\\n// @ts-ignore\\nvar __IDS_TO_FRAMEWORKS__ = {};\\n        \\n\\n\\n// @ts-nocheck\\n// @ts-ignore\\nvar withSourceLoader = require('@storybook/source-loader/preview').withSource;\\n// @ts-ignore\\nvar addSourceDecorator = require(\\\"@storybook/source-loader/preview\\\").addSource;\\n// @ts-ignore\\nvar __SOURCE_PREFIX__ = \\\"/Users/farhanansari/Desktop/CODE/PrxProject/untitled folder/reactStoryBook/src/components/molecules/Accordian\\\";\\n// @ts-ignore\\nvar __STORY__ = \\\"import React from 'react'\\\\nimport { withKnobs } from '@storybook/addon-knobs'\\\\nimport Accordian from '.'\\\\n\\\\nimport Box from '../../atoms/Box'\\\\n\\\\nimport { path } from '..'\\\\nimport ThemeWrapper from '../../../utilities/components/ThemeWrapper'\\\\nimport {\\\\n  AccordionHeaderTitle,\\\\n  AccordionHeaderSubTitle,\\\\n  AccordionContent\\\\n} from './styles'\\\\n\\\\nexport default {\\\\n  title: `${path}/Accordian`,\\\\n  decorators: [withKnobs],\\\\n  component: Accordian\\\\n}\\\\n\\\\nconst AccordionComponent = () => {\\\\n  const [expanded, setExpanded] = React.useState('1')\\\\n  const handleToggle = (accordianId: string, isExpanded?: boolean) => {\\\\n    setExpanded(isExpanded ? accordianId : '')\\\\n  }\\\\n\\\\n  const handleToggleChange = (e: any) => {\\\\n    console.log(\\\\\\\"toggledata\\\\\\\", e)\\\\n  }\\\\n\\\\n  const tooltipProps={\\\\n    messagePlacement:'end',\\\\n    arrowPlacement:'center',\\\\n    tooltipDirection:'bottom'\\\\n  }\\\\n\\\\n  return (\\\\n    <>\\\\n       <Accordian id='1' expanded={expanded === '1'} onToggle={handleToggle} onToggleSwitch={handleToggleChange} switchTooltipMessage=\\\\\\\"Activate / Deactivate this setting\\\\\\\" switchTooltipProps={tooltipProps} showToggleSwitch={true} toggleSwitchStyle={{paddingRight:\\\\\\\"15px\\\\\\\"}}>\\\\n        {{\\\\n          header: (\\\\n            <>\\\\n              <AccordionHeaderTitle>\\\\n                Minimum Capacity Utilization\\\\n              </AccordionHeaderTitle>\\\\n              <AccordionHeaderSubTitle>\\\\n                Helps you manage Fleet utilization\\\\n              </AccordionHeaderSubTitle>\\\\n            </>\\\\n          ),\\\\n          content: (\\\\n            <AccordionContent>\\\\n              {Array(10)\\\\n                .fill(0)\\\\n                .map((_, i) => (\\\\n                  <div key={i}>Line {i + 1} </div>\\\\n                ))}\\\\n            </AccordionContent>\\\\n          )\\\\n        }}\\\\n      </Accordian>\\\\n      <Accordian id='2' expanded={expanded === '2'} onToggle={handleToggle} onToggleSwitch={handleToggleChange} showToggleSwitch={true} toggleSwitchDisable={true} isToggleChecked={true}>\\\\n        {{\\\\n          header: (\\\\n            <>\\\\n              <AccordionHeaderTitle>Send Activation Link</AccordionHeaderTitle>\\\\n              <AccordionHeaderSubTitle>\\\\n                Send an activation link to the mobile number of a newly created\\\\n                Delivery Associate.\\\\n              </AccordionHeaderSubTitle>\\\\n            </>\\\\n          ),\\\\n          content: (\\\\n            <AccordionContent>\\\\n              {Array(5)\\\\n                .fill(0)\\\\n                .map((_, i) => (\\\\n                  <div key={i}>Line {i + 1} </div>\\\\n                ))}\\\\n            </AccordionContent>\\\\n          )\\\\n        }}\\\\n      </Accordian>\\\\n      <Accordian id='3' expanded={expanded === '3'} onToggle={handleToggle} onToggleSwitch={handleToggleChange}>\\\\n        {{\\\\n          header: (\\\\n            <>\\\\n              <AccordionHeaderTitle>\\\\n                Delivery Associates Skill-sets configuration\\\\n              </AccordionHeaderTitle>\\\\n              <AccordionHeaderSubTitle>\\\\n                Select specific skills while adding a Delivery Associate.\\\\n                LogiNext Route planning will automatically assign the Shipments\\\\n                that a Delivery Associate is skilled to perform.\\\\n              </AccordionHeaderSubTitle>\\\\n            </>\\\\n          ),\\\\n          content: (\\\\n            <AccordionContent>\\\\n              {Array(15)\\\\n                .fill(0)\\\\n                .map((_, i) => (\\\\n                  <div key={i}>Line {i + 1} </div>\\\\n                ))}\\\\n            </AccordionContent>\\\\n          )\\\\n        }}\\\\n      </Accordian>\\\\n    </>\\\\n  )\\\\n}\\\\nexport const Default = () => {\\\\n  return (\\\\n    <ThemeWrapper>\\\\n      <Box p='1em' bgColor='grey.50'>\\\\n        <AccordionComponent />\\\\n      </Box>\\\\n    </ThemeWrapper>\\\\n  )\\\\n}\\\\n\\\";\\n// @ts-ignore\\nvar __ADDS_MAP__ = {};\\n// @ts-ignore\\nvar __MAIN_FILE_LOCATION__ = \\\"/Accordian.stories.tsx\\\";\\n// @ts-ignore\\nvar __MODULE_DEPENDENCIES__ = [];\\n// @ts-ignore\\nvar __LOCAL_DEPENDENCIES__ = {};\\n// @ts-ignore\\nvar __IDS_TO_FRAMEWORKS__ = {};\\n        \\nimport React from 'react'\\nimport { withKnobs } from '@storybook/addon-knobs'\\nimport Accordian from '.'\\n\\nimport Box from '../../atoms/Box'\\n\\nimport { path } from '..'\\nimport ThemeWrapper from '../../../utilities/components/ThemeWrapper'\\nimport {\\n  AccordionHeaderTitle,\\n  AccordionHeaderSubTitle,\\n  AccordionContent\\n} from './styles'\\n\\nexport default {parameters: {\\\"storySource\\\":{\\\"source\\\":\\\"\\\\n\\\\n// @ts-nocheck\\\\n// @ts-ignore\\\\nvar withSourceLoader = require('@storybook/source-loader/preview').withSource;\\\\n// @ts-ignore\\\\nvar addSourceDecorator = require(\\\\\\\"@storybook/source-loader/preview\\\\\\\").addSource;\\\\n// @ts-ignore\\\\nvar __SOURCE_PREFIX__ = \\\\\\\"/Users/farhanansari/Desktop/CODE/PrxProject/untitled folder/reactStoryBook/src/components/molecules/Accordian\\\\\\\";\\\\n// @ts-ignore\\\\nvar __STORY__ = \\\\\\\"import React from 'react'\\\\\\\\nimport { withKnobs } from '@storybook/addon-knobs'\\\\\\\\nimport Accordian from '.'\\\\\\\\n\\\\\\\\nimport Box from '../../atoms/Box'\\\\\\\\n\\\\\\\\nimport { path } from '..'\\\\\\\\nimport ThemeWrapper from '../../../utilities/components/ThemeWrapper'\\\\\\\\nimport {\\\\\\\\n  AccordionHeaderTitle,\\\\\\\\n  AccordionHeaderSubTitle,\\\\\\\\n  AccordionContent\\\\\\\\n} from './styles'\\\\\\\\n\\\\\\\\nexport default {\\\\\\\\n  title: `${path}/Accordian`,\\\\\\\\n  decorators: [withKnobs],\\\\\\\\n  component: Accordian\\\\\\\\n}\\\\\\\\n\\\\\\\\nconst AccordionComponent = () => {\\\\\\\\n  const [expanded, setExpanded] = React.useState('1')\\\\\\\\n  const handleToggle = (accordianId: string, isExpanded?: boolean) => {\\\\\\\\n    setExpanded(isExpanded ? accordianId : '')\\\\\\\\n  }\\\\\\\\n\\\\\\\\n  const handleToggleChange = (e: any) => {\\\\\\\\n    console.log(\\\\\\\\\\\\\\\"toggledata\\\\\\\\\\\\\\\", e)\\\\\\\\n  }\\\\\\\\n\\\\\\\\n  const tooltipProps={\\\\\\\\n    messagePlacement:'end',\\\\\\\\n    arrowPlacement:'center',\\\\\\\\n    tooltipDirection:'bottom'\\\\\\\\n  }\\\\\\\\n\\\\\\\\n  return (\\\\\\\\n    <>\\\\\\\\n       <Accordian id='1' expanded={expanded === '1'} onToggle={handleToggle} onToggleSwitch={handleToggleChange} switchTooltipMessage=\\\\\\\\\\\\\\\"Activate / Deactivate this setting\\\\\\\\\\\\\\\" switchTooltipProps={tooltipProps} showToggleSwitch={true} toggleSwitchStyle={{paddingRight:\\\\\\\\\\\\\\\"15px\\\\\\\\\\\\\\\"}}>\\\\\\\\n        {{\\\\\\\\n          header: (\\\\\\\\n            <>\\\\\\\\n              <AccordionHeaderTitle>\\\\\\\\n                Minimum Capacity Utilization\\\\\\\\n              </AccordionHeaderTitle>\\\\\\\\n              <AccordionHeaderSubTitle>\\\\\\\\n                Helps you manage Fleet utilization\\\\\\\\n              </AccordionHeaderSubTitle>\\\\\\\\n            </>\\\\\\\\n          ),\\\\\\\\n          content: (\\\\\\\\n            <AccordionContent>\\\\\\\\n              {Array(10)\\\\\\\\n                .fill(0)\\\\\\\\n                .map((_, i) => (\\\\\\\\n                  <div key={i}>Line {i + 1} </div>\\\\\\\\n                ))}\\\\\\\\n            </AccordionContent>\\\\\\\\n          )\\\\\\\\n        }}\\\\\\\\n      </Accordian>\\\\\\\\n      <Accordian id='2' expanded={expanded === '2'} onToggle={handleToggle} onToggleSwitch={handleToggleChange} showToggleSwitch={true} toggleSwitchDisable={true} isToggleChecked={true}>\\\\\\\\n        {{\\\\\\\\n          header: (\\\\\\\\n            <>\\\\\\\\n              <AccordionHeaderTitle>Send Activation Link</AccordionHeaderTitle>\\\\\\\\n              <AccordionHeaderSubTitle>\\\\\\\\n                Send an activation link to the mobile number of a newly created\\\\\\\\n                Delivery Associate.\\\\\\\\n              </AccordionHeaderSubTitle>\\\\\\\\n            </>\\\\\\\\n          ),\\\\\\\\n          content: (\\\\\\\\n            <AccordionContent>\\\\\\\\n              {Array(5)\\\\\\\\n                .fill(0)\\\\\\\\n                .map((_, i) => (\\\\\\\\n                  <div key={i}>Line {i + 1} </div>\\\\\\\\n                ))}\\\\\\\\n            </AccordionContent>\\\\\\\\n          )\\\\\\\\n        }}\\\\\\\\n      </Accordian>\\\\\\\\n      <Accordian id='3' expanded={expanded === '3'} onToggle={handleToggle} onToggleSwitch={handleToggleChange}>\\\\\\\\n        {{\\\\\\\\n          header: (\\\\\\\\n            <>\\\\\\\\n              <AccordionHeaderTitle>\\\\\\\\n                Delivery Associates Skill-sets configuration\\\\\\\\n              </AccordionHeaderTitle>\\\\\\\\n              <AccordionHeaderSubTitle>\\\\\\\\n                Select specific skills while adding a Delivery Associate.\\\\\\\\n                LogiNext Route planning will automatically assign the Shipments\\\\\\\\n                that a Delivery Associate is skilled to perform.\\\\\\\\n              </AccordionHeaderSubTitle>\\\\\\\\n            </>\\\\\\\\n          ),\\\\\\\\n          content: (\\\\\\\\n            <AccordionContent>\\\\\\\\n              {Array(15)\\\\\\\\n                .fill(0)\\\\\\\\n                .map((_, i) => (\\\\\\\\n                  <div key={i}>Line {i + 1} </div>\\\\\\\\n                ))}\\\\\\\\n            </AccordionContent>\\\\\\\\n          )\\\\\\\\n        }}\\\\\\\\n      </Accordian>\\\\\\\\n    </>\\\\\\\\n  )\\\\\\\\n}\\\\\\\\nexport const Default = () => {\\\\\\\\n  return (\\\\\\\\n    <ThemeWrapper>\\\\\\\\n      <Box p='1em' bgColor='grey.50'>\\\\\\\\n        <AccordionComponent />\\\\\\\\n      </Box>\\\\\\\\n    </ThemeWrapper>\\\\\\\\n  )\\\\\\\\n}\\\\\\\\n\\\\\\\";\\\\n// @ts-ignore\\\\nvar __ADDS_MAP__ = {};\\\\n// @ts-ignore\\\\nvar __MAIN_FILE_LOCATION__ = \\\\\\\"/Accordian.stories.tsx\\\\\\\";\\\\n// @ts-ignore\\\\nvar __MODULE_DEPENDENCIES__ = [];\\\\n// @ts-ignore\\\\nvar __LOCAL_DEPENDENCIES__ = {};\\\\n// @ts-ignore\\\\nvar __IDS_TO_FRAMEWORKS__ = {};\\\\n        \\\\nimport React from 'react'\\\\nimport { withKnobs } from '@storybook/addon-knobs'\\\\nimport Accordian from '.'\\\\n\\\\nimport Box from '../../atoms/Box'\\\\n\\\\nimport { path } from '..'\\\\nimport ThemeWrapper from '../../../utilities/components/ThemeWrapper'\\\\nimport {\\\\n  AccordionHeaderTitle,\\\\n  AccordionHeaderSubTitle,\\\\n  AccordionContent\\\\n} from './styles'\\\\n\\\\nexport default {parameters: {\\\\\\\"storySource\\\\\\\":{\\\\\\\"source\\\\\\\":\\\\\\\"import React from 'react'\\\\\\\\nimport { withKnobs } from '@storybook/addon-knobs'\\\\\\\\nimport Accordian from '.'\\\\\\\\n\\\\\\\\nimport Box from '../../atoms/Box'\\\\\\\\n\\\\\\\\nimport { path } from '..'\\\\\\\\nimport ThemeWrapper from '../../../utilities/components/ThemeWrapper'\\\\\\\\nimport {\\\\\\\\n  AccordionHeaderTitle,\\\\\\\\n  AccordionHeaderSubTitle,\\\\\\\\n  AccordionContent\\\\\\\\n} from './styles'\\\\\\\\n\\\\\\\\nexport default {\\\\\\\\n  title: `${path}/Accordian`,\\\\\\\\n  decorators: [withKnobs],\\\\\\\\n  component: Accordian\\\\\\\\n}\\\\\\\\n\\\\\\\\nconst AccordionComponent = () => {\\\\\\\\n  const [expanded, setExpanded] = React.useState('1')\\\\\\\\n  const handleToggle = (accordianId: string, isExpanded?: boolean) => {\\\\\\\\n    setExpanded(isExpanded ? accordianId : '')\\\\\\\\n  }\\\\\\\\n\\\\\\\\n  const handleToggleChange = (e: any) => {\\\\\\\\n    console.log(\\\\\\\\\\\\\\\"toggledata\\\\\\\\\\\\\\\", e)\\\\\\\\n  }\\\\\\\\n\\\\\\\\n  const tooltipProps={\\\\\\\\n    messagePlacement:'end',\\\\\\\\n    arrowPlacement:'center',\\\\\\\\n    tooltipDirection:'bottom'\\\\\\\\n  }\\\\\\\\n\\\\\\\\n  return (\\\\\\\\n    <>\\\\\\\\n       <Accordian id='1' expanded={expanded === '1'} onToggle={handleToggle} onToggleSwitch={handleToggleChange} switchTooltipMessage=\\\\\\\\\\\\\\\"Activate / Deactivate this setting\\\\\\\\\\\\\\\" switchTooltipProps={tooltipProps} showToggleSwitch={true} toggleSwitchStyle={{paddingRight:\\\\\\\\\\\\\\\"15px\\\\\\\\\\\\\\\"}}>\\\\\\\\n        {{\\\\\\\\n          header: (\\\\\\\\n            <>\\\\\\\\n              <AccordionHeaderTitle>\\\\\\\\n                Minimum Capacity Utilization\\\\\\\\n              </AccordionHeaderTitle>\\\\\\\\n              <AccordionHeaderSubTitle>\\\\\\\\n                Helps you manage Fleet utilization\\\\\\\\n              </AccordionHeaderSubTitle>\\\\\\\\n            </>\\\\\\\\n          ),\\\\\\\\n          content: (\\\\\\\\n            <AccordionContent>\\\\\\\\n              {Array(10)\\\\\\\\n                .fill(0)\\\\\\\\n                .map((_, i) => (\\\\\\\\n                  <div key={i}>Line {i + 1} </div>\\\\\\\\n                ))}\\\\\\\\n            </AccordionContent>\\\\\\\\n          )\\\\\\\\n        }}\\\\\\\\n      </Accordian>\\\\\\\\n      <Accordian id='2' expanded={expanded === '2'} onToggle={handleToggle} onToggleSwitch={handleToggleChange} showToggleSwitch={true} toggleSwitchDisable={true} isToggleChecked={true}>\\\\\\\\n        {{\\\\\\\\n          header: (\\\\\\\\n            <>\\\\\\\\n              <AccordionHeaderTitle>Send Activation Link</AccordionHeaderTitle>\\\\\\\\n              <AccordionHeaderSubTitle>\\\\\\\\n                Send an activation link to the mobile number of a newly created\\\\\\\\n                Delivery Associate.\\\\\\\\n              </AccordionHeaderSubTitle>\\\\\\\\n            </>\\\\\\\\n          ),\\\\\\\\n          content: (\\\\\\\\n            <AccordionContent>\\\\\\\\n              {Array(5)\\\\\\\\n                .fill(0)\\\\\\\\n                .map((_, i) => (\\\\\\\\n                  <div key={i}>Line {i + 1} </div>\\\\\\\\n                ))}\\\\\\\\n            </AccordionContent>\\\\\\\\n          )\\\\\\\\n        }}\\\\\\\\n      </Accordian>\\\\\\\\n      <Accordian id='3' expanded={expanded === '3'} onToggle={handleToggle} onToggleSwitch={handleToggleChange}>\\\\\\\\n        {{\\\\\\\\n          header: (\\\\\\\\n            <>\\\\\\\\n              <AccordionHeaderTitle>\\\\\\\\n                Delivery Associates Skill-sets configuration\\\\\\\\n              </AccordionHeaderTitle>\\\\\\\\n              <AccordionHeaderSubTitle>\\\\\\\\n                Select specific skills while adding a Delivery Associate.\\\\\\\\n                LogiNext Route planning will automatically assign the Shipments\\\\\\\\n                that a Delivery Associate is skilled to perform.\\\\\\\\n              </AccordionHeaderSubTitle>\\\\\\\\n            </>\\\\\\\\n          ),\\\\\\\\n          content: (\\\\\\\\n            <AccordionContent>\\\\\\\\n              {Array(15)\\\\\\\\n                .fill(0)\\\\\\\\n                .map((_, i) => (\\\\\\\\n                  <div key={i}>Line {i + 1} </div>\\\\\\\\n                ))}\\\\\\\\n            </AccordionContent>\\\\\\\\n          )\\\\\\\\n        }}\\\\\\\\n      </Accordian>\\\\\\\\n    </>\\\\\\\\n  )\\\\\\\\n}\\\\\\\\nexport const Default = () => {\\\\\\\\n  return (\\\\\\\\n    <ThemeWrapper>\\\\\\\\n      <Box p='1em' bgColor='grey.50'>\\\\\\\\n        <AccordionComponent />\\\\\\\\n      </Box>\\\\\\\\n    </ThemeWrapper>\\\\\\\\n  )\\\\\\\\n}\\\\\\\\n\\\\\\\",\\\\\\\"locationsMap\\\\\\\":{}},},\\\\n  title: `${path}/Accordian`,\\\\n  decorators: [withKnobs],\\\\n  component: Accordian\\\\n}\\\\n\\\\nconst AccordionComponent = () => {\\\\n  const [expanded, setExpanded] = React.useState('1')\\\\n  const handleToggle = (accordianId: string, isExpanded?: boolean) => {\\\\n    setExpanded(isExpanded ? accordianId : '')\\\\n  }\\\\n\\\\n  const handleToggleChange = (e: any) => {\\\\n    console.log(\\\\\\\"toggledata\\\\\\\", e)\\\\n  }\\\\n\\\\n  const tooltipProps={\\\\n    messagePlacement:'end',\\\\n    arrowPlacement:'center',\\\\n    tooltipDirection:'bottom'\\\\n  }\\\\n\\\\n  return (\\\\n    <>\\\\n       <Accordian id='1' expanded={expanded === '1'} onToggle={handleToggle} onToggleSwitch={handleToggleChange} switchTooltipMessage=\\\\\\\"Activate / Deactivate this setting\\\\\\\" switchTooltipProps={tooltipProps} showToggleSwitch={true} toggleSwitchStyle={{paddingRight:\\\\\\\"15px\\\\\\\"}}>\\\\n        {{\\\\n          header: (\\\\n            <>\\\\n              <AccordionHeaderTitle>\\\\n                Minimum Capacity Utilization\\\\n              </AccordionHeaderTitle>\\\\n              <AccordionHeaderSubTitle>\\\\n                Helps you manage Fleet utilization\\\\n              </AccordionHeaderSubTitle>\\\\n            </>\\\\n          ),\\\\n          content: (\\\\n            <AccordionContent>\\\\n              {Array(10)\\\\n                .fill(0)\\\\n                .map((_, i) => (\\\\n                  <div key={i}>Line {i + 1} </div>\\\\n                ))}\\\\n            </AccordionContent>\\\\n          )\\\\n        }}\\\\n      </Accordian>\\\\n      <Accordian id='2' expanded={expanded === '2'} onToggle={handleToggle} onToggleSwitch={handleToggleChange} showToggleSwitch={true} toggleSwitchDisable={true} isToggleChecked={true}>\\\\n        {{\\\\n          header: (\\\\n            <>\\\\n              <AccordionHeaderTitle>Send Activation Link</AccordionHeaderTitle>\\\\n              <AccordionHeaderSubTitle>\\\\n                Send an activation link to the mobile number of a newly created\\\\n                Delivery Associate.\\\\n              </AccordionHeaderSubTitle>\\\\n            </>\\\\n          ),\\\\n          content: (\\\\n            <AccordionContent>\\\\n              {Array(5)\\\\n                .fill(0)\\\\n                .map((_, i) => (\\\\n                  <div key={i}>Line {i + 1} </div>\\\\n                ))}\\\\n            </AccordionContent>\\\\n          )\\\\n        }}\\\\n      </Accordian>\\\\n      <Accordian id='3' expanded={expanded === '3'} onToggle={handleToggle} onToggleSwitch={handleToggleChange}>\\\\n        {{\\\\n          header: (\\\\n            <>\\\\n              <AccordionHeaderTitle>\\\\n                Delivery Associates Skill-sets configuration\\\\n              </AccordionHeaderTitle>\\\\n              <AccordionHeaderSubTitle>\\\\n                Select specific skills while adding a Delivery Associate.\\\\n                LogiNext Route planning will automatically assign the Shipments\\\\n                that a Delivery Associate is skilled to perform.\\\\n              </AccordionHeaderSubTitle>\\\\n            </>\\\\n          ),\\\\n          content: (\\\\n            <AccordionContent>\\\\n              {Array(15)\\\\n                .fill(0)\\\\n                .map((_, i) => (\\\\n                  <div key={i}>Line {i + 1} </div>\\\\n                ))}\\\\n            </AccordionContent>\\\\n          )\\\\n        }}\\\\n      </Accordian>\\\\n    </>\\\\n  )\\\\n}\\\\nexport const Default = addSourceDecorator(() => {\\\\n  return (\\\\n    <ThemeWrapper>\\\\n      <Box p='1em' bgColor='grey.50'>\\\\n        <AccordionComponent />\\\\n      </Box>\\\\n    </ThemeWrapper>\\\\n  )\\\\n}, {__STORY__, __ADDS_MAP__,__MAIN_FILE_LOCATION__,__MODULE_DEPENDENCIES__,__LOCAL_DEPENDENCIES__,__SOURCE_PREFIX__,__IDS_TO_FRAMEWORKS__});\\\",\\\"locationsMap\\\":{}},\\\"storySource\\\":{\\\"source\\\":\\\"import React from 'react'\\\\nimport { withKnobs } from '@storybook/addon-knobs'\\\\nimport Accordian from '.'\\\\n\\\\nimport Box from '../../atoms/Box'\\\\n\\\\nimport { path } from '..'\\\\nimport ThemeWrapper from '../../../utilities/components/ThemeWrapper'\\\\nimport {\\\\n  AccordionHeaderTitle,\\\\n  AccordionHeaderSubTitle,\\\\n  AccordionContent\\\\n} from './styles'\\\\n\\\\nexport default {\\\\n  title: `${path}/Accordian`,\\\\n  decorators: [withKnobs],\\\\n  component: Accordian\\\\n}\\\\n\\\\nconst AccordionComponent = () => {\\\\n  const [expanded, setExpanded] = React.useState('1')\\\\n  const handleToggle = (accordianId: string, isExpanded?: boolean) => {\\\\n    setExpanded(isExpanded ? accordianId : '')\\\\n  }\\\\n\\\\n  const handleToggleChange = (e: any) => {\\\\n    console.log(\\\\\\\"toggledata\\\\\\\", e)\\\\n  }\\\\n\\\\n  const tooltipProps={\\\\n    messagePlacement:'end',\\\\n    arrowPlacement:'center',\\\\n    tooltipDirection:'bottom'\\\\n  }\\\\n\\\\n  return (\\\\n    <>\\\\n       <Accordian id='1' expanded={expanded === '1'} onToggle={handleToggle} onToggleSwitch={handleToggleChange} switchTooltipMessage=\\\\\\\"Activate / Deactivate this setting\\\\\\\" switchTooltipProps={tooltipProps} showToggleSwitch={true} toggleSwitchStyle={{paddingRight:\\\\\\\"15px\\\\\\\"}}>\\\\n        {{\\\\n          header: (\\\\n            <>\\\\n              <AccordionHeaderTitle>\\\\n                Minimum Capacity Utilization\\\\n              </AccordionHeaderTitle>\\\\n              <AccordionHeaderSubTitle>\\\\n                Helps you manage Fleet utilization\\\\n              </AccordionHeaderSubTitle>\\\\n            </>\\\\n          ),\\\\n          content: (\\\\n            <AccordionContent>\\\\n              {Array(10)\\\\n                .fill(0)\\\\n                .map((_, i) => (\\\\n                  <div key={i}>Line {i + 1} </div>\\\\n                ))}\\\\n            </AccordionContent>\\\\n          )\\\\n        }}\\\\n      </Accordian>\\\\n      <Accordian id='2' expanded={expanded === '2'} onToggle={handleToggle} onToggleSwitch={handleToggleChange} showToggleSwitch={true} toggleSwitchDisable={true} isToggleChecked={true}>\\\\n        {{\\\\n          header: (\\\\n            <>\\\\n              <AccordionHeaderTitle>Send Activation Link</AccordionHeaderTitle>\\\\n              <AccordionHeaderSubTitle>\\\\n                Send an activation link to the mobile number of a newly created\\\\n                Delivery Associate.\\\\n              </AccordionHeaderSubTitle>\\\\n            </>\\\\n          ),\\\\n          content: (\\\\n            <AccordionContent>\\\\n              {Array(5)\\\\n                .fill(0)\\\\n                .map((_, i) => (\\\\n                  <div key={i}>Line {i + 1} </div>\\\\n                ))}\\\\n            </AccordionContent>\\\\n          )\\\\n        }}\\\\n      </Accordian>\\\\n      <Accordian id='3' expanded={expanded === '3'} onToggle={handleToggle} onToggleSwitch={handleToggleChange}>\\\\n        {{\\\\n          header: (\\\\n            <>\\\\n              <AccordionHeaderTitle>\\\\n                Delivery Associates Skill-sets configuration\\\\n              </AccordionHeaderTitle>\\\\n              <AccordionHeaderSubTitle>\\\\n                Select specific skills while adding a Delivery Associate.\\\\n                LogiNext Route planning will automatically assign the Shipments\\\\n                that a Delivery Associate is skilled to perform.\\\\n              </AccordionHeaderSubTitle>\\\\n            </>\\\\n          ),\\\\n          content: (\\\\n            <AccordionContent>\\\\n              {Array(15)\\\\n                .fill(0)\\\\n                .map((_, i) => (\\\\n                  <div key={i}>Line {i + 1} </div>\\\\n                ))}\\\\n            </AccordionContent>\\\\n          )\\\\n        }}\\\\n      </Accordian>\\\\n    </>\\\\n  )\\\\n}\\\\nexport const Default = () => {\\\\n  return (\\\\n    <ThemeWrapper>\\\\n      <Box p='1em' bgColor='grey.50'>\\\\n        <AccordionComponent />\\\\n      </Box>\\\\n    </ThemeWrapper>\\\\n  )\\\\n}\\\\n\\\",\\\"locationsMap\\\":{}},},\\n  title: `${path}/Accordian`,\\n  decorators: [withKnobs],\\n  component: Accordian\\n}\\n\\nconst AccordionComponent = () => {\\n  const [expanded, setExpanded] = React.useState('1')\\n  const handleToggle = (accordianId: string, isExpanded?: boolean) => {\\n    setExpanded(isExpanded ? accordianId : '')\\n  }\\n\\n  const handleToggleChange = (e: any) => {\\n    console.log(\\\"toggledata\\\", e)\\n  }\\n\\n  const tooltipProps={\\n    messagePlacement:'end',\\n    arrowPlacement:'center',\\n    tooltipDirection:'bottom'\\n  }\\n\\n  return (\\n    <>\\n       <Accordian id='1' expanded={expanded === '1'} onToggle={handleToggle} onToggleSwitch={handleToggleChange} switchTooltipMessage=\\\"Activate / Deactivate this setting\\\" switchTooltipProps={tooltipProps} showToggleSwitch={true} toggleSwitchStyle={{paddingRight:\\\"15px\\\"}}>\\n        {{\\n          header: (\\n            <>\\n              <AccordionHeaderTitle>\\n                Minimum Capacity Utilization\\n              </AccordionHeaderTitle>\\n              <AccordionHeaderSubTitle>\\n                Helps you manage Fleet utilization\\n              </AccordionHeaderSubTitle>\\n            </>\\n          ),\\n          content: (\\n            <AccordionContent>\\n              {Array(10)\\n                .fill(0)\\n                .map((_, i) => (\\n                  <div key={i}>Line {i + 1} </div>\\n                ))}\\n            </AccordionContent>\\n          )\\n        }}\\n      </Accordian>\\n      <Accordian id='2' expanded={expanded === '2'} onToggle={handleToggle} onToggleSwitch={handleToggleChange} showToggleSwitch={true} toggleSwitchDisable={true} isToggleChecked={true}>\\n        {{\\n          header: (\\n            <>\\n              <AccordionHeaderTitle>Send Activation Link</AccordionHeaderTitle>\\n              <AccordionHeaderSubTitle>\\n                Send an activation link to the mobile number of a newly created\\n                Delivery Associate.\\n              </AccordionHeaderSubTitle>\\n            </>\\n          ),\\n          content: (\\n            <AccordionContent>\\n              {Array(5)\\n                .fill(0)\\n                .map((_, i) => (\\n                  <div key={i}>Line {i + 1} </div>\\n                ))}\\n            </AccordionContent>\\n          )\\n        }}\\n      </Accordian>\\n      <Accordian id='3' expanded={expanded === '3'} onToggle={handleToggle} onToggleSwitch={handleToggleChange}>\\n        {{\\n          header: (\\n            <>\\n              <AccordionHeaderTitle>\\n                Delivery Associates Skill-sets configuration\\n              </AccordionHeaderTitle>\\n              <AccordionHeaderSubTitle>\\n                Select specific skills while adding a Delivery Associate.\\n                LogiNext Route planning will automatically assign the Shipments\\n                that a Delivery Associate is skilled to perform.\\n              </AccordionHeaderSubTitle>\\n            </>\\n          ),\\n          content: (\\n            <AccordionContent>\\n              {Array(15)\\n                .fill(0)\\n                .map((_, i) => (\\n                  <div key={i}>Line {i + 1} </div>\\n                ))}\\n            </AccordionContent>\\n          )\\n        }}\\n      </Accordian>\\n    </>\\n  )\\n}\\nexport const Default = addSourceDecorator(addSourceDecorator(() => {\\n  return (\\n    <ThemeWrapper>\\n      <Box p='1em' bgColor='grey.50'>\\n        <AccordionComponent />\\n      </Box>\\n    </ThemeWrapper>\\n  )\\n}, {__STORY__, __ADDS_MAP__,__MAIN_FILE_LOCATION__,__MODULE_DEPENDENCIES__,__LOCAL_DEPENDENCIES__,__SOURCE_PREFIX__,__IDS_TO_FRAMEWORKS__}), {__STORY__, __ADDS_MAP__,__MAIN_FILE_LOCATION__,__MODULE_DEPENDENCIES__,__LOCAL_DEPENDENCIES__,__SOURCE_PREFIX__,__IDS_TO_FRAMEWORKS__});\";\n// @ts-ignore\nvar __ADDS_MAP__ = {};\n// @ts-ignore\nvar __MAIN_FILE_LOCATION__ = \"/Accordian.stories.tsx\";\n// @ts-ignore\nvar __MODULE_DEPENDENCIES__ = [];\n// @ts-ignore\nvar __LOCAL_DEPENDENCIES__ = {};\n// @ts-ignore\nvar __IDS_TO_FRAMEWORKS__ = {};\n        \n\n/* eslint-disable */\n// @ts-nocheck\n// @ts-ignore\nvar withSourceLoader = require('@storybook/source-loader/preview').withSource;\n// @ts-ignore\nvar addSourceDecorator = require(\"@storybook/source-loader/preview\").addSource;\n// @ts-ignore\nvar __SOURCE_PREFIX__ = \"/Users/farhanansari/Desktop/CODE/PrxProject/untitled folder/reactStoryBook/src/components/molecules/Accordian\";\n// @ts-ignore\nvar __STORY__ = \"\\n\\n// @ts-nocheck\\n// @ts-ignore\\nvar withSourceLoader = require('@storybook/source-loader/preview').withSource;\\n// @ts-ignore\\nvar addSourceDecorator = require(\\\"@storybook/source-loader/preview\\\").addSource;\\n// @ts-ignore\\nvar __SOURCE_PREFIX__ = \\\"/Users/farhanansari/Desktop/CODE/PrxProject/untitled folder/reactStoryBook/src/components/molecules/Accordian\\\";\\n// @ts-ignore\\nvar __STORY__ = \\\"import React from 'react'\\\\nimport { withKnobs } from '@storybook/addon-knobs'\\\\nimport Accordian from '.'\\\\n\\\\nimport Box from '../../atoms/Box'\\\\n\\\\nimport { path } from '..'\\\\nimport ThemeWrapper from '../../../utilities/components/ThemeWrapper'\\\\nimport {\\\\n  AccordionHeaderTitle,\\\\n  AccordionHeaderSubTitle,\\\\n  AccordionContent\\\\n} from './styles'\\\\n\\\\nexport default {\\\\n  title: `${path}/Accordian`,\\\\n  decorators: [withKnobs],\\\\n  component: Accordian\\\\n}\\\\n\\\\nconst AccordionComponent = () => {\\\\n  const [expanded, setExpanded] = React.useState('1')\\\\n  const handleToggle = (accordianId: string, isExpanded?: boolean) => {\\\\n    setExpanded(isExpanded ? accordianId : '')\\\\n  }\\\\n\\\\n  const handleToggleChange = (e: any) => {\\\\n    console.log(\\\\\\\"toggledata\\\\\\\", e)\\\\n  }\\\\n\\\\n  const tooltipProps={\\\\n    messagePlacement:'end',\\\\n    arrowPlacement:'center',\\\\n    tooltipDirection:'bottom'\\\\n  }\\\\n\\\\n  return (\\\\n    <>\\\\n       <Accordian id='1' expanded={expanded === '1'} onToggle={handleToggle} onToggleSwitch={handleToggleChange} switchTooltipMessage=\\\\\\\"Activate / Deactivate this setting\\\\\\\" switchTooltipProps={tooltipProps} showToggleSwitch={true} toggleSwitchStyle={{paddingRight:\\\\\\\"15px\\\\\\\"}}>\\\\n        {{\\\\n          header: (\\\\n            <>\\\\n              <AccordionHeaderTitle>\\\\n                Minimum Capacity Utilization\\\\n              </AccordionHeaderTitle>\\\\n              <AccordionHeaderSubTitle>\\\\n                Helps you manage Fleet utilization\\\\n              </AccordionHeaderSubTitle>\\\\n            </>\\\\n          ),\\\\n          content: (\\\\n            <AccordionContent>\\\\n              {Array(10)\\\\n                .fill(0)\\\\n                .map((_, i) => (\\\\n                  <div key={i}>Line {i + 1} </div>\\\\n                ))}\\\\n            </AccordionContent>\\\\n          )\\\\n        }}\\\\n      </Accordian>\\\\n      <Accordian id='2' expanded={expanded === '2'} onToggle={handleToggle} onToggleSwitch={handleToggleChange} showToggleSwitch={true} toggleSwitchDisable={true} isToggleChecked={true}>\\\\n        {{\\\\n          header: (\\\\n            <>\\\\n              <AccordionHeaderTitle>Send Activation Link</AccordionHeaderTitle>\\\\n              <AccordionHeaderSubTitle>\\\\n                Send an activation link to the mobile number of a newly created\\\\n                Delivery Associate.\\\\n              </AccordionHeaderSubTitle>\\\\n            </>\\\\n          ),\\\\n          content: (\\\\n            <AccordionContent>\\\\n              {Array(5)\\\\n                .fill(0)\\\\n                .map((_, i) => (\\\\n                  <div key={i}>Line {i + 1} </div>\\\\n                ))}\\\\n            </AccordionContent>\\\\n          )\\\\n        }}\\\\n      </Accordian>\\\\n      <Accordian id='3' expanded={expanded === '3'} onToggle={handleToggle} onToggleSwitch={handleToggleChange}>\\\\n        {{\\\\n          header: (\\\\n            <>\\\\n              <AccordionHeaderTitle>\\\\n                Delivery Associates Skill-sets configuration\\\\n              </AccordionHeaderTitle>\\\\n              <AccordionHeaderSubTitle>\\\\n                Select specific skills while adding a Delivery Associate.\\\\n                LogiNext Route planning will automatically assign the Shipments\\\\n                that a Delivery Associate is skilled to perform.\\\\n              </AccordionHeaderSubTitle>\\\\n            </>\\\\n          ),\\\\n          content: (\\\\n            <AccordionContent>\\\\n              {Array(15)\\\\n                .fill(0)\\\\n                .map((_, i) => (\\\\n                  <div key={i}>Line {i + 1} </div>\\\\n                ))}\\\\n            </AccordionContent>\\\\n          )\\\\n        }}\\\\n      </Accordian>\\\\n    </>\\\\n  )\\\\n}\\\\nexport const Default = () => {\\\\n  return (\\\\n    <ThemeWrapper>\\\\n      <Box p='1em' bgColor='grey.50'>\\\\n        <AccordionComponent />\\\\n      </Box>\\\\n    </ThemeWrapper>\\\\n  )\\\\n}\\\\n\\\";\\n// @ts-ignore\\nvar __ADDS_MAP__ = {};\\n// @ts-ignore\\nvar __MAIN_FILE_LOCATION__ = \\\"/Accordian.stories.tsx\\\";\\n// @ts-ignore\\nvar __MODULE_DEPENDENCIES__ = [];\\n// @ts-ignore\\nvar __LOCAL_DEPENDENCIES__ = {};\\n// @ts-ignore\\nvar __IDS_TO_FRAMEWORKS__ = {};\\n        \\nimport React from 'react'\\nimport { withKnobs } from '@storybook/addon-knobs'\\nimport Accordian from '.'\\n\\nimport Box from '../../atoms/Box'\\n\\nimport { path } from '..'\\nimport ThemeWrapper from '../../../utilities/components/ThemeWrapper'\\nimport {\\n  AccordionHeaderTitle,\\n  AccordionHeaderSubTitle,\\n  AccordionContent\\n} from './styles'\\n\\nexport default {parameters: {\\\"storySource\\\":{\\\"source\\\":\\\"import React from 'react'\\\\nimport { withKnobs } from '@storybook/addon-knobs'\\\\nimport Accordian from '.'\\\\n\\\\nimport Box from '../../atoms/Box'\\\\n\\\\nimport { path } from '..'\\\\nimport ThemeWrapper from '../../../utilities/components/ThemeWrapper'\\\\nimport {\\\\n  AccordionHeaderTitle,\\\\n  AccordionHeaderSubTitle,\\\\n  AccordionContent\\\\n} from './styles'\\\\n\\\\nexport default {\\\\n  title: `${path}/Accordian`,\\\\n  decorators: [withKnobs],\\\\n  component: Accordian\\\\n}\\\\n\\\\nconst AccordionComponent = () => {\\\\n  const [expanded, setExpanded] = React.useState('1')\\\\n  const handleToggle = (accordianId: string, isExpanded?: boolean) => {\\\\n    setExpanded(isExpanded ? accordianId : '')\\\\n  }\\\\n\\\\n  const handleToggleChange = (e: any) => {\\\\n    console.log(\\\\\\\"toggledata\\\\\\\", e)\\\\n  }\\\\n\\\\n  const tooltipProps={\\\\n    messagePlacement:'end',\\\\n    arrowPlacement:'center',\\\\n    tooltipDirection:'bottom'\\\\n  }\\\\n\\\\n  return (\\\\n    <>\\\\n       <Accordian id='1' expanded={expanded === '1'} onToggle={handleToggle} onToggleSwitch={handleToggleChange} switchTooltipMessage=\\\\\\\"Activate / Deactivate this setting\\\\\\\" switchTooltipProps={tooltipProps} showToggleSwitch={true} toggleSwitchStyle={{paddingRight:\\\\\\\"15px\\\\\\\"}}>\\\\n        {{\\\\n          header: (\\\\n            <>\\\\n              <AccordionHeaderTitle>\\\\n                Minimum Capacity Utilization\\\\n              </AccordionHeaderTitle>\\\\n              <AccordionHeaderSubTitle>\\\\n                Helps you manage Fleet utilization\\\\n              </AccordionHeaderSubTitle>\\\\n            </>\\\\n          ),\\\\n          content: (\\\\n            <AccordionContent>\\\\n              {Array(10)\\\\n                .fill(0)\\\\n                .map((_, i) => (\\\\n                  <div key={i}>Line {i + 1} </div>\\\\n                ))}\\\\n            </AccordionContent>\\\\n          )\\\\n        }}\\\\n      </Accordian>\\\\n      <Accordian id='2' expanded={expanded === '2'} onToggle={handleToggle} onToggleSwitch={handleToggleChange} showToggleSwitch={true} toggleSwitchDisable={true} isToggleChecked={true}>\\\\n        {{\\\\n          header: (\\\\n            <>\\\\n              <AccordionHeaderTitle>Send Activation Link</AccordionHeaderTitle>\\\\n              <AccordionHeaderSubTitle>\\\\n                Send an activation link to the mobile number of a newly created\\\\n                Delivery Associate.\\\\n              </AccordionHeaderSubTitle>\\\\n            </>\\\\n          ),\\\\n          content: (\\\\n            <AccordionContent>\\\\n              {Array(5)\\\\n                .fill(0)\\\\n                .map((_, i) => (\\\\n                  <div key={i}>Line {i + 1} </div>\\\\n                ))}\\\\n            </AccordionContent>\\\\n          )\\\\n        }}\\\\n      </Accordian>\\\\n      <Accordian id='3' expanded={expanded === '3'} onToggle={handleToggle} onToggleSwitch={handleToggleChange}>\\\\n        {{\\\\n          header: (\\\\n            <>\\\\n              <AccordionHeaderTitle>\\\\n                Delivery Associates Skill-sets configuration\\\\n              </AccordionHeaderTitle>\\\\n              <AccordionHeaderSubTitle>\\\\n                Select specific skills while adding a Delivery Associate.\\\\n                LogiNext Route planning will automatically assign the Shipments\\\\n                that a Delivery Associate is skilled to perform.\\\\n              </AccordionHeaderSubTitle>\\\\n            </>\\\\n          ),\\\\n          content: (\\\\n            <AccordionContent>\\\\n              {Array(15)\\\\n                .fill(0)\\\\n                .map((_, i) => (\\\\n                  <div key={i}>Line {i + 1} </div>\\\\n                ))}\\\\n            </AccordionContent>\\\\n          )\\\\n        }}\\\\n      </Accordian>\\\\n    </>\\\\n  )\\\\n}\\\\nexport const Default = () => {\\\\n  return (\\\\n    <ThemeWrapper>\\\\n      <Box p='1em' bgColor='grey.50'>\\\\n        <AccordionComponent />\\\\n      </Box>\\\\n    </ThemeWrapper>\\\\n  )\\\\n}\\\\n\\\",\\\"locationsMap\\\":{}},},\\n  title: `${path}/Accordian`,\\n  decorators: [withKnobs],\\n  component: Accordian\\n}\\n\\nconst AccordionComponent = () => {\\n  const [expanded, setExpanded] = React.useState('1')\\n  const handleToggle = (accordianId: string, isExpanded?: boolean) => {\\n    setExpanded(isExpanded ? accordianId : '')\\n  }\\n\\n  const handleToggleChange = (e: any) => {\\n    console.log(\\\"toggledata\\\", e)\\n  }\\n\\n  const tooltipProps={\\n    messagePlacement:'end',\\n    arrowPlacement:'center',\\n    tooltipDirection:'bottom'\\n  }\\n\\n  return (\\n    <>\\n       <Accordian id='1' expanded={expanded === '1'} onToggle={handleToggle} onToggleSwitch={handleToggleChange} switchTooltipMessage=\\\"Activate / Deactivate this setting\\\" switchTooltipProps={tooltipProps} showToggleSwitch={true} toggleSwitchStyle={{paddingRight:\\\"15px\\\"}}>\\n        {{\\n          header: (\\n            <>\\n              <AccordionHeaderTitle>\\n                Minimum Capacity Utilization\\n              </AccordionHeaderTitle>\\n              <AccordionHeaderSubTitle>\\n                Helps you manage Fleet utilization\\n              </AccordionHeaderSubTitle>\\n            </>\\n          ),\\n          content: (\\n            <AccordionContent>\\n              {Array(10)\\n                .fill(0)\\n                .map((_, i) => (\\n                  <div key={i}>Line {i + 1} </div>\\n                ))}\\n            </AccordionContent>\\n          )\\n        }}\\n      </Accordian>\\n      <Accordian id='2' expanded={expanded === '2'} onToggle={handleToggle} onToggleSwitch={handleToggleChange} showToggleSwitch={true} toggleSwitchDisable={true} isToggleChecked={true}>\\n        {{\\n          header: (\\n            <>\\n              <AccordionHeaderTitle>Send Activation Link</AccordionHeaderTitle>\\n              <AccordionHeaderSubTitle>\\n                Send an activation link to the mobile number of a newly created\\n                Delivery Associate.\\n              </AccordionHeaderSubTitle>\\n            </>\\n          ),\\n          content: (\\n            <AccordionContent>\\n              {Array(5)\\n                .fill(0)\\n                .map((_, i) => (\\n                  <div key={i}>Line {i + 1} </div>\\n                ))}\\n            </AccordionContent>\\n          )\\n        }}\\n      </Accordian>\\n      <Accordian id='3' expanded={expanded === '3'} onToggle={handleToggle} onToggleSwitch={handleToggleChange}>\\n        {{\\n          header: (\\n            <>\\n              <AccordionHeaderTitle>\\n                Delivery Associates Skill-sets configuration\\n              </AccordionHeaderTitle>\\n              <AccordionHeaderSubTitle>\\n                Select specific skills while adding a Delivery Associate.\\n                LogiNext Route planning will automatically assign the Shipments\\n                that a Delivery Associate is skilled to perform.\\n              </AccordionHeaderSubTitle>\\n            </>\\n          ),\\n          content: (\\n            <AccordionContent>\\n              {Array(15)\\n                .fill(0)\\n                .map((_, i) => (\\n                  <div key={i}>Line {i + 1} </div>\\n                ))}\\n            </AccordionContent>\\n          )\\n        }}\\n      </Accordian>\\n    </>\\n  )\\n}\\nexport const Default = addSourceDecorator(() => {\\n  return (\\n    <ThemeWrapper>\\n      <Box p='1em' bgColor='grey.50'>\\n        <AccordionComponent />\\n      </Box>\\n    </ThemeWrapper>\\n  )\\n}, {__STORY__, __ADDS_MAP__,__MAIN_FILE_LOCATION__,__MODULE_DEPENDENCIES__,__LOCAL_DEPENDENCIES__,__SOURCE_PREFIX__,__IDS_TO_FRAMEWORKS__});\";\n// @ts-ignore\nvar __ADDS_MAP__ = {};\n// @ts-ignore\nvar __MAIN_FILE_LOCATION__ = \"/Accordian.stories.tsx\";\n// @ts-ignore\nvar __MODULE_DEPENDENCIES__ = [];\n// @ts-ignore\nvar __LOCAL_DEPENDENCIES__ = {};\n// @ts-ignore\nvar __IDS_TO_FRAMEWORKS__ = {};\n        \n\n/* eslint-disable */\n// @ts-nocheck\n// @ts-ignore\nvar withSourceLoader = require('@storybook/source-loader/preview').withSource;\n// @ts-ignore\nvar addSourceDecorator = require(\"@storybook/source-loader/preview\").addSource;\n// @ts-ignore\nvar __SOURCE_PREFIX__ = \"/Users/farhanansari/Desktop/CODE/PrxProject/untitled folder/reactStoryBook/src/components/molecules/Accordian\";\n// @ts-ignore\nvar __STORY__ = \"import React from 'react'\\nimport { withKnobs } from '@storybook/addon-knobs'\\nimport Accordian from '.'\\n\\nimport Box from '../../atoms/Box'\\n\\nimport { path } from '..'\\nimport ThemeWrapper from '../../../utilities/components/ThemeWrapper'\\nimport {\\n  AccordionHeaderTitle,\\n  AccordionHeaderSubTitle,\\n  AccordionContent\\n} from './styles'\\n\\nexport default {\\n  title: `${path}/Accordian`,\\n  decorators: [withKnobs],\\n  component: Accordian\\n}\\n\\nconst AccordionComponent = () => {\\n  const [expanded, setExpanded] = React.useState('1')\\n  const handleToggle = (accordianId: string, isExpanded?: boolean) => {\\n    setExpanded(isExpanded ? accordianId : '')\\n  }\\n\\n  const handleToggleChange = (e: any) => {\\n    console.log(\\\"toggledata\\\", e)\\n  }\\n\\n  const tooltipProps={\\n    messagePlacement:'end',\\n    arrowPlacement:'center',\\n    tooltipDirection:'bottom'\\n  }\\n\\n  return (\\n    <>\\n       <Accordian id='1' expanded={expanded === '1'} onToggle={handleToggle} onToggleSwitch={handleToggleChange} switchTooltipMessage=\\\"Activate / Deactivate this setting\\\" switchTooltipProps={tooltipProps} showToggleSwitch={true} toggleSwitchStyle={{paddingRight:\\\"15px\\\"}}>\\n        {{\\n          header: (\\n            <>\\n              <AccordionHeaderTitle>\\n                Minimum Capacity Utilization\\n              </AccordionHeaderTitle>\\n              <AccordionHeaderSubTitle>\\n                Helps you manage Fleet utilization\\n              </AccordionHeaderSubTitle>\\n            </>\\n          ),\\n          content: (\\n            <AccordionContent>\\n              {Array(10)\\n                .fill(0)\\n                .map((_, i) => (\\n                  <div key={i}>Line {i + 1} </div>\\n                ))}\\n            </AccordionContent>\\n          )\\n        }}\\n      </Accordian>\\n      <Accordian id='2' expanded={expanded === '2'} onToggle={handleToggle} onToggleSwitch={handleToggleChange} showToggleSwitch={true} toggleSwitchDisable={true} isToggleChecked={true}>\\n        {{\\n          header: (\\n            <>\\n              <AccordionHeaderTitle>Send Activation Link</AccordionHeaderTitle>\\n              <AccordionHeaderSubTitle>\\n                Send an activation link to the mobile number of a newly created\\n                Delivery Associate.\\n              </AccordionHeaderSubTitle>\\n            </>\\n          ),\\n          content: (\\n            <AccordionContent>\\n              {Array(5)\\n                .fill(0)\\n                .map((_, i) => (\\n                  <div key={i}>Line {i + 1} </div>\\n                ))}\\n            </AccordionContent>\\n          )\\n        }}\\n      </Accordian>\\n      <Accordian id='3' expanded={expanded === '3'} onToggle={handleToggle} onToggleSwitch={handleToggleChange}>\\n        {{\\n          header: (\\n            <>\\n              <AccordionHeaderTitle>\\n                Delivery Associates Skill-sets configuration\\n              </AccordionHeaderTitle>\\n              <AccordionHeaderSubTitle>\\n                Select specific skills while adding a Delivery Associate.\\n                LogiNext Route planning will automatically assign the Shipments\\n                that a Delivery Associate is skilled to perform.\\n              </AccordionHeaderSubTitle>\\n            </>\\n          ),\\n          content: (\\n            <AccordionContent>\\n              {Array(15)\\n                .fill(0)\\n                .map((_, i) => (\\n                  <div key={i}>Line {i + 1} </div>\\n                ))}\\n            </AccordionContent>\\n          )\\n        }}\\n      </Accordian>\\n    </>\\n  )\\n}\\nexport const Default = () => {\\n  return (\\n    <ThemeWrapper>\\n      <Box p='1em' bgColor='grey.50'>\\n        <AccordionComponent />\\n      </Box>\\n    </ThemeWrapper>\\n  )\\n}\\n\";\n// @ts-ignore\nvar __ADDS_MAP__ = {};\n// @ts-ignore\nvar __MAIN_FILE_LOCATION__ = \"/Accordian.stories.tsx\";\n// @ts-ignore\nvar __MODULE_DEPENDENCIES__ = [];\n// @ts-ignore\nvar __LOCAL_DEPENDENCIES__ = {};\n// @ts-ignore\nvar __IDS_TO_FRAMEWORKS__ = {};\n        \nimport React from 'react'\nimport { withKnobs } from '@storybook/addon-knobs'\nimport Accordian from '.'\n\nimport Box from '../../atoms/Box'\n\nimport { path } from '..'\nimport ThemeWrapper from '../../../utilities/components/ThemeWrapper'\nimport {\n  AccordionHeaderTitle,\n  AccordionHeaderSubTitle,\n  AccordionContent\n} from './styles'\n\nexport default {parameters: {\"storySource\":{\"source\":\"\\n\\n// @ts-nocheck\\n// @ts-ignore\\nvar withSourceLoader = require('@storybook/source-loader/preview').withSource;\\n// @ts-ignore\\nvar addSourceDecorator = require(\\\"@storybook/source-loader/preview\\\").addSource;\\n// @ts-ignore\\nvar __SOURCE_PREFIX__ = \\\"/Users/farhanansari/Desktop/CODE/PrxProject/untitled folder/reactStoryBook/src/components/molecules/Accordian\\\";\\n// @ts-ignore\\nvar __STORY__ = \\\"\\\\n\\\\n// @ts-nocheck\\\\n// @ts-ignore\\\\nvar withSourceLoader = require('@storybook/source-loader/preview').withSource;\\\\n// @ts-ignore\\\\nvar addSourceDecorator = require(\\\\\\\"@storybook/source-loader/preview\\\\\\\").addSource;\\\\n// @ts-ignore\\\\nvar __SOURCE_PREFIX__ = \\\\\\\"/Users/farhanansari/Desktop/CODE/PrxProject/untitled folder/reactStoryBook/src/components/molecules/Accordian\\\\\\\";\\\\n// @ts-ignore\\\\nvar __STORY__ = \\\\\\\"import React from 'react'\\\\\\\\nimport { withKnobs } from '@storybook/addon-knobs'\\\\\\\\nimport Accordian from '.'\\\\\\\\n\\\\\\\\nimport Box from '../../atoms/Box'\\\\\\\\n\\\\\\\\nimport { path } from '..'\\\\\\\\nimport ThemeWrapper from '../../../utilities/components/ThemeWrapper'\\\\\\\\nimport {\\\\\\\\n  AccordionHeaderTitle,\\\\\\\\n  AccordionHeaderSubTitle,\\\\\\\\n  AccordionContent\\\\\\\\n} from './styles'\\\\\\\\n\\\\\\\\nexport default {\\\\\\\\n  title: `${path}/Accordian`,\\\\\\\\n  decorators: [withKnobs],\\\\\\\\n  component: Accordian\\\\\\\\n}\\\\\\\\n\\\\\\\\nconst AccordionComponent = () => {\\\\\\\\n  const [expanded, setExpanded] = React.useState('1')\\\\\\\\n  const handleToggle = (accordianId: string, isExpanded?: boolean) => {\\\\\\\\n    setExpanded(isExpanded ? accordianId : '')\\\\\\\\n  }\\\\\\\\n\\\\\\\\n  const handleToggleChange = (e: any) => {\\\\\\\\n    console.log(\\\\\\\\\\\\\\\"toggledata\\\\\\\\\\\\\\\", e)\\\\\\\\n  }\\\\\\\\n\\\\\\\\n  const tooltipProps={\\\\\\\\n    messagePlacement:'end',\\\\\\\\n    arrowPlacement:'center',\\\\\\\\n    tooltipDirection:'bottom'\\\\\\\\n  }\\\\\\\\n\\\\\\\\n  return (\\\\\\\\n    <>\\\\\\\\n       <Accordian id='1' expanded={expanded === '1'} onToggle={handleToggle} onToggleSwitch={handleToggleChange} switchTooltipMessage=\\\\\\\\\\\\\\\"Activate / Deactivate this setting\\\\\\\\\\\\\\\" switchTooltipProps={tooltipProps} showToggleSwitch={true} toggleSwitchStyle={{paddingRight:\\\\\\\\\\\\\\\"15px\\\\\\\\\\\\\\\"}}>\\\\\\\\n        {{\\\\\\\\n          header: (\\\\\\\\n            <>\\\\\\\\n              <AccordionHeaderTitle>\\\\\\\\n                Minimum Capacity Utilization\\\\\\\\n              </AccordionHeaderTitle>\\\\\\\\n              <AccordionHeaderSubTitle>\\\\\\\\n                Helps you manage Fleet utilization\\\\\\\\n              </AccordionHeaderSubTitle>\\\\\\\\n            </>\\\\\\\\n          ),\\\\\\\\n          content: (\\\\\\\\n            <AccordionContent>\\\\\\\\n              {Array(10)\\\\\\\\n                .fill(0)\\\\\\\\n                .map((_, i) => (\\\\\\\\n                  <div key={i}>Line {i + 1} </div>\\\\\\\\n                ))}\\\\\\\\n            </AccordionContent>\\\\\\\\n          )\\\\\\\\n        }}\\\\\\\\n      </Accordian>\\\\\\\\n      <Accordian id='2' expanded={expanded === '2'} onToggle={handleToggle} onToggleSwitch={handleToggleChange} showToggleSwitch={true} toggleSwitchDisable={true} isToggleChecked={true}>\\\\\\\\n        {{\\\\\\\\n          header: (\\\\\\\\n            <>\\\\\\\\n              <AccordionHeaderTitle>Send Activation Link</AccordionHeaderTitle>\\\\\\\\n              <AccordionHeaderSubTitle>\\\\\\\\n                Send an activation link to the mobile number of a newly created\\\\\\\\n                Delivery Associate.\\\\\\\\n              </AccordionHeaderSubTitle>\\\\\\\\n            </>\\\\\\\\n          ),\\\\\\\\n          content: (\\\\\\\\n            <AccordionContent>\\\\\\\\n              {Array(5)\\\\\\\\n                .fill(0)\\\\\\\\n                .map((_, i) => (\\\\\\\\n                  <div key={i}>Line {i + 1} </div>\\\\\\\\n                ))}\\\\\\\\n            </AccordionContent>\\\\\\\\n          )\\\\\\\\n        }}\\\\\\\\n      </Accordian>\\\\\\\\n      <Accordian id='3' expanded={expanded === '3'} onToggle={handleToggle} onToggleSwitch={handleToggleChange}>\\\\\\\\n        {{\\\\\\\\n          header: (\\\\\\\\n            <>\\\\\\\\n              <AccordionHeaderTitle>\\\\\\\\n                Delivery Associates Skill-sets configuration\\\\\\\\n              </AccordionHeaderTitle>\\\\\\\\n              <AccordionHeaderSubTitle>\\\\\\\\n                Select specific skills while adding a Delivery Associate.\\\\\\\\n                LogiNext Route planning will automatically assign the Shipments\\\\\\\\n                that a Delivery Associate is skilled to perform.\\\\\\\\n              </AccordionHeaderSubTitle>\\\\\\\\n            </>\\\\\\\\n          ),\\\\\\\\n          content: (\\\\\\\\n            <AccordionContent>\\\\\\\\n              {Array(15)\\\\\\\\n                .fill(0)\\\\\\\\n                .map((_, i) => (\\\\\\\\n                  <div key={i}>Line {i + 1} </div>\\\\\\\\n                ))}\\\\\\\\n            </AccordionContent>\\\\\\\\n          )\\\\\\\\n        }}\\\\\\\\n      </Accordian>\\\\\\\\n    </>\\\\\\\\n  )\\\\\\\\n}\\\\\\\\nexport const Default = () => {\\\\\\\\n  return (\\\\\\\\n    <ThemeWrapper>\\\\\\\\n      <Box p='1em' bgColor='grey.50'>\\\\\\\\n        <AccordionComponent />\\\\\\\\n      </Box>\\\\\\\\n    </ThemeWrapper>\\\\\\\\n  )\\\\\\\\n}\\\\\\\\n\\\\\\\";\\\\n// @ts-ignore\\\\nvar __ADDS_MAP__ = {};\\\\n// @ts-ignore\\\\nvar __MAIN_FILE_LOCATION__ = \\\\\\\"/Accordian.stories.tsx\\\\\\\";\\\\n// @ts-ignore\\\\nvar __MODULE_DEPENDENCIES__ = [];\\\\n// @ts-ignore\\\\nvar __LOCAL_DEPENDENCIES__ = {};\\\\n// @ts-ignore\\\\nvar __IDS_TO_FRAMEWORKS__ = {};\\\\n        \\\\nimport React from 'react'\\\\nimport { withKnobs } from '@storybook/addon-knobs'\\\\nimport Accordian from '.'\\\\n\\\\nimport Box from '../../atoms/Box'\\\\n\\\\nimport { path } from '..'\\\\nimport ThemeWrapper from '../../../utilities/components/ThemeWrapper'\\\\nimport {\\\\n  AccordionHeaderTitle,\\\\n  AccordionHeaderSubTitle,\\\\n  AccordionContent\\\\n} from './styles'\\\\n\\\\nexport default {parameters: {\\\\\\\"storySource\\\\\\\":{\\\\\\\"source\\\\\\\":\\\\\\\"import React from 'react'\\\\\\\\nimport { withKnobs } from '@storybook/addon-knobs'\\\\\\\\nimport Accordian from '.'\\\\\\\\n\\\\\\\\nimport Box from '../../atoms/Box'\\\\\\\\n\\\\\\\\nimport { path } from '..'\\\\\\\\nimport ThemeWrapper from '../../../utilities/components/ThemeWrapper'\\\\\\\\nimport {\\\\\\\\n  AccordionHeaderTitle,\\\\\\\\n  AccordionHeaderSubTitle,\\\\\\\\n  AccordionContent\\\\\\\\n} from './styles'\\\\\\\\n\\\\\\\\nexport default {\\\\\\\\n  title: `${path}/Accordian`,\\\\\\\\n  decorators: [withKnobs],\\\\\\\\n  component: Accordian\\\\\\\\n}\\\\\\\\n\\\\\\\\nconst AccordionComponent = () => {\\\\\\\\n  const [expanded, setExpanded] = React.useState('1')\\\\\\\\n  const handleToggle = (accordianId: string, isExpanded?: boolean) => {\\\\\\\\n    setExpanded(isExpanded ? accordianId : '')\\\\\\\\n  }\\\\\\\\n\\\\\\\\n  const handleToggleChange = (e: any) => {\\\\\\\\n    console.log(\\\\\\\\\\\\\\\"toggledata\\\\\\\\\\\\\\\", e)\\\\\\\\n  }\\\\\\\\n\\\\\\\\n  const tooltipProps={\\\\\\\\n    messagePlacement:'end',\\\\\\\\n    arrowPlacement:'center',\\\\\\\\n    tooltipDirection:'bottom'\\\\\\\\n  }\\\\\\\\n\\\\\\\\n  return (\\\\\\\\n    <>\\\\\\\\n       <Accordian id='1' expanded={expanded === '1'} onToggle={handleToggle} onToggleSwitch={handleToggleChange} switchTooltipMessage=\\\\\\\\\\\\\\\"Activate / Deactivate this setting\\\\\\\\\\\\\\\" switchTooltipProps={tooltipProps} showToggleSwitch={true} toggleSwitchStyle={{paddingRight:\\\\\\\\\\\\\\\"15px\\\\\\\\\\\\\\\"}}>\\\\\\\\n        {{\\\\\\\\n          header: (\\\\\\\\n            <>\\\\\\\\n              <AccordionHeaderTitle>\\\\\\\\n                Minimum Capacity Utilization\\\\\\\\n              </AccordionHeaderTitle>\\\\\\\\n              <AccordionHeaderSubTitle>\\\\\\\\n                Helps you manage Fleet utilization\\\\\\\\n              </AccordionHeaderSubTitle>\\\\\\\\n            </>\\\\\\\\n          ),\\\\\\\\n          content: (\\\\\\\\n            <AccordionContent>\\\\\\\\n              {Array(10)\\\\\\\\n                .fill(0)\\\\\\\\n                .map((_, i) => (\\\\\\\\n                  <div key={i}>Line {i + 1} </div>\\\\\\\\n                ))}\\\\\\\\n            </AccordionContent>\\\\\\\\n          )\\\\\\\\n        }}\\\\\\\\n      </Accordian>\\\\\\\\n      <Accordian id='2' expanded={expanded === '2'} onToggle={handleToggle} onToggleSwitch={handleToggleChange} showToggleSwitch={true} toggleSwitchDisable={true} isToggleChecked={true}>\\\\\\\\n        {{\\\\\\\\n          header: (\\\\\\\\n            <>\\\\\\\\n              <AccordionHeaderTitle>Send Activation Link</AccordionHeaderTitle>\\\\\\\\n              <AccordionHeaderSubTitle>\\\\\\\\n                Send an activation link to the mobile number of a newly created\\\\\\\\n                Delivery Associate.\\\\\\\\n              </AccordionHeaderSubTitle>\\\\\\\\n            </>\\\\\\\\n          ),\\\\\\\\n          content: (\\\\\\\\n            <AccordionContent>\\\\\\\\n              {Array(5)\\\\\\\\n                .fill(0)\\\\\\\\n                .map((_, i) => (\\\\\\\\n                  <div key={i}>Line {i + 1} </div>\\\\\\\\n                ))}\\\\\\\\n            </AccordionContent>\\\\\\\\n          )\\\\\\\\n        }}\\\\\\\\n      </Accordian>\\\\\\\\n      <Accordian id='3' expanded={expanded === '3'} onToggle={handleToggle} onToggleSwitch={handleToggleChange}>\\\\\\\\n        {{\\\\\\\\n          header: (\\\\\\\\n            <>\\\\\\\\n              <AccordionHeaderTitle>\\\\\\\\n                Delivery Associates Skill-sets configuration\\\\\\\\n              </AccordionHeaderTitle>\\\\\\\\n              <AccordionHeaderSubTitle>\\\\\\\\n                Select specific skills while adding a Delivery Associate.\\\\\\\\n                LogiNext Route planning will automatically assign the Shipments\\\\\\\\n                that a Delivery Associate is skilled to perform.\\\\\\\\n              </AccordionHeaderSubTitle>\\\\\\\\n            </>\\\\\\\\n          ),\\\\\\\\n          content: (\\\\\\\\n            <AccordionContent>\\\\\\\\n              {Array(15)\\\\\\\\n                .fill(0)\\\\\\\\n                .map((_, i) => (\\\\\\\\n                  <div key={i}>Line {i + 1} </div>\\\\\\\\n                ))}\\\\\\\\n            </AccordionContent>\\\\\\\\n          )\\\\\\\\n        }}\\\\\\\\n      </Accordian>\\\\\\\\n    </>\\\\\\\\n  )\\\\\\\\n}\\\\\\\\nexport const Default = () => {\\\\\\\\n  return (\\\\\\\\n    <ThemeWrapper>\\\\\\\\n      <Box p='1em' bgColor='grey.50'>\\\\\\\\n        <AccordionComponent />\\\\\\\\n      </Box>\\\\\\\\n    </ThemeWrapper>\\\\\\\\n  )\\\\\\\\n}\\\\\\\\n\\\\\\\",\\\\\\\"locationsMap\\\\\\\":{}},},\\\\n  title: `${path}/Accordian`,\\\\n  decorators: [withKnobs],\\\\n  component: Accordian\\\\n}\\\\n\\\\nconst AccordionComponent = () => {\\\\n  const [expanded, setExpanded] = React.useState('1')\\\\n  const handleToggle = (accordianId: string, isExpanded?: boolean) => {\\\\n    setExpanded(isExpanded ? accordianId : '')\\\\n  }\\\\n\\\\n  const handleToggleChange = (e: any) => {\\\\n    console.log(\\\\\\\"toggledata\\\\\\\", e)\\\\n  }\\\\n\\\\n  const tooltipProps={\\\\n    messagePlacement:'end',\\\\n    arrowPlacement:'center',\\\\n    tooltipDirection:'bottom'\\\\n  }\\\\n\\\\n  return (\\\\n    <>\\\\n       <Accordian id='1' expanded={expanded === '1'} onToggle={handleToggle} onToggleSwitch={handleToggleChange} switchTooltipMessage=\\\\\\\"Activate / Deactivate this setting\\\\\\\" switchTooltipProps={tooltipProps} showToggleSwitch={true} toggleSwitchStyle={{paddingRight:\\\\\\\"15px\\\\\\\"}}>\\\\n        {{\\\\n          header: (\\\\n            <>\\\\n              <AccordionHeaderTitle>\\\\n                Minimum Capacity Utilization\\\\n              </AccordionHeaderTitle>\\\\n              <AccordionHeaderSubTitle>\\\\n                Helps you manage Fleet utilization\\\\n              </AccordionHeaderSubTitle>\\\\n            </>\\\\n          ),\\\\n          content: (\\\\n            <AccordionContent>\\\\n              {Array(10)\\\\n                .fill(0)\\\\n                .map((_, i) => (\\\\n                  <div key={i}>Line {i + 1} </div>\\\\n                ))}\\\\n            </AccordionContent>\\\\n          )\\\\n        }}\\\\n      </Accordian>\\\\n      <Accordian id='2' expanded={expanded === '2'} onToggle={handleToggle} onToggleSwitch={handleToggleChange} showToggleSwitch={true} toggleSwitchDisable={true} isToggleChecked={true}>\\\\n        {{\\\\n          header: (\\\\n            <>\\\\n              <AccordionHeaderTitle>Send Activation Link</AccordionHeaderTitle>\\\\n              <AccordionHeaderSubTitle>\\\\n                Send an activation link to the mobile number of a newly created\\\\n                Delivery Associate.\\\\n              </AccordionHeaderSubTitle>\\\\n            </>\\\\n          ),\\\\n          content: (\\\\n            <AccordionContent>\\\\n              {Array(5)\\\\n                .fill(0)\\\\n                .map((_, i) => (\\\\n                  <div key={i}>Line {i + 1} </div>\\\\n                ))}\\\\n            </AccordionContent>\\\\n          )\\\\n        }}\\\\n      </Accordian>\\\\n      <Accordian id='3' expanded={expanded === '3'} onToggle={handleToggle} onToggleSwitch={handleToggleChange}>\\\\n        {{\\\\n          header: (\\\\n            <>\\\\n              <AccordionHeaderTitle>\\\\n                Delivery Associates Skill-sets configuration\\\\n              </AccordionHeaderTitle>\\\\n              <AccordionHeaderSubTitle>\\\\n                Select specific skills while adding a Delivery Associate.\\\\n                LogiNext Route planning will automatically assign the Shipments\\\\n                that a Delivery Associate is skilled to perform.\\\\n              </AccordionHeaderSubTitle>\\\\n            </>\\\\n          ),\\\\n          content: (\\\\n            <AccordionContent>\\\\n              {Array(15)\\\\n                .fill(0)\\\\n                .map((_, i) => (\\\\n                  <div key={i}>Line {i + 1} </div>\\\\n                ))}\\\\n            </AccordionContent>\\\\n          )\\\\n        }}\\\\n      </Accordian>\\\\n    </>\\\\n  )\\\\n}\\\\nexport const Default = addSourceDecorator(() => {\\\\n  return (\\\\n    <ThemeWrapper>\\\\n      <Box p='1em' bgColor='grey.50'>\\\\n        <AccordionComponent />\\\\n      </Box>\\\\n    </ThemeWrapper>\\\\n  )\\\\n}, {__STORY__, __ADDS_MAP__,__MAIN_FILE_LOCATION__,__MODULE_DEPENDENCIES__,__LOCAL_DEPENDENCIES__,__SOURCE_PREFIX__,__IDS_TO_FRAMEWORKS__});\\\";\\n// @ts-ignore\\nvar __ADDS_MAP__ = {};\\n// @ts-ignore\\nvar __MAIN_FILE_LOCATION__ = \\\"/Accordian.stories.tsx\\\";\\n// @ts-ignore\\nvar __MODULE_DEPENDENCIES__ = [];\\n// @ts-ignore\\nvar __LOCAL_DEPENDENCIES__ = {};\\n// @ts-ignore\\nvar __IDS_TO_FRAMEWORKS__ = {};\\n        \\n\\n\\n// @ts-nocheck\\n// @ts-ignore\\nvar withSourceLoader = require('@storybook/source-loader/preview').withSource;\\n// @ts-ignore\\nvar addSourceDecorator = require(\\\"@storybook/source-loader/preview\\\").addSource;\\n// @ts-ignore\\nvar __SOURCE_PREFIX__ = \\\"/Users/farhanansari/Desktop/CODE/PrxProject/untitled folder/reactStoryBook/src/components/molecules/Accordian\\\";\\n// @ts-ignore\\nvar __STORY__ = \\\"import React from 'react'\\\\nimport { withKnobs } from '@storybook/addon-knobs'\\\\nimport Accordian from '.'\\\\n\\\\nimport Box from '../../atoms/Box'\\\\n\\\\nimport { path } from '..'\\\\nimport ThemeWrapper from '../../../utilities/components/ThemeWrapper'\\\\nimport {\\\\n  AccordionHeaderTitle,\\\\n  AccordionHeaderSubTitle,\\\\n  AccordionContent\\\\n} from './styles'\\\\n\\\\nexport default {\\\\n  title: `${path}/Accordian`,\\\\n  decorators: [withKnobs],\\\\n  component: Accordian\\\\n}\\\\n\\\\nconst AccordionComponent = () => {\\\\n  const [expanded, setExpanded] = React.useState('1')\\\\n  const handleToggle = (accordianId: string, isExpanded?: boolean) => {\\\\n    setExpanded(isExpanded ? accordianId : '')\\\\n  }\\\\n\\\\n  const handleToggleChange = (e: any) => {\\\\n    console.log(\\\\\\\"toggledata\\\\\\\", e)\\\\n  }\\\\n\\\\n  const tooltipProps={\\\\n    messagePlacement:'end',\\\\n    arrowPlacement:'center',\\\\n    tooltipDirection:'bottom'\\\\n  }\\\\n\\\\n  return (\\\\n    <>\\\\n       <Accordian id='1' expanded={expanded === '1'} onToggle={handleToggle} onToggleSwitch={handleToggleChange} switchTooltipMessage=\\\\\\\"Activate / Deactivate this setting\\\\\\\" switchTooltipProps={tooltipProps} showToggleSwitch={true} toggleSwitchStyle={{paddingRight:\\\\\\\"15px\\\\\\\"}}>\\\\n        {{\\\\n          header: (\\\\n            <>\\\\n              <AccordionHeaderTitle>\\\\n                Minimum Capacity Utilization\\\\n              </AccordionHeaderTitle>\\\\n              <AccordionHeaderSubTitle>\\\\n                Helps you manage Fleet utilization\\\\n              </AccordionHeaderSubTitle>\\\\n            </>\\\\n          ),\\\\n          content: (\\\\n            <AccordionContent>\\\\n              {Array(10)\\\\n                .fill(0)\\\\n                .map((_, i) => (\\\\n                  <div key={i}>Line {i + 1} </div>\\\\n                ))}\\\\n            </AccordionContent>\\\\n          )\\\\n        }}\\\\n      </Accordian>\\\\n      <Accordian id='2' expanded={expanded === '2'} onToggle={handleToggle} onToggleSwitch={handleToggleChange} showToggleSwitch={true} toggleSwitchDisable={true} isToggleChecked={true}>\\\\n        {{\\\\n          header: (\\\\n            <>\\\\n              <AccordionHeaderTitle>Send Activation Link</AccordionHeaderTitle>\\\\n              <AccordionHeaderSubTitle>\\\\n                Send an activation link to the mobile number of a newly created\\\\n                Delivery Associate.\\\\n              </AccordionHeaderSubTitle>\\\\n            </>\\\\n          ),\\\\n          content: (\\\\n            <AccordionContent>\\\\n              {Array(5)\\\\n                .fill(0)\\\\n                .map((_, i) => (\\\\n                  <div key={i}>Line {i + 1} </div>\\\\n                ))}\\\\n            </AccordionContent>\\\\n          )\\\\n        }}\\\\n      </Accordian>\\\\n      <Accordian id='3' expanded={expanded === '3'} onToggle={handleToggle} onToggleSwitch={handleToggleChange}>\\\\n        {{\\\\n          header: (\\\\n            <>\\\\n              <AccordionHeaderTitle>\\\\n                Delivery Associates Skill-sets configuration\\\\n              </AccordionHeaderTitle>\\\\n              <AccordionHeaderSubTitle>\\\\n                Select specific skills while adding a Delivery Associate.\\\\n                LogiNext Route planning will automatically assign the Shipments\\\\n                that a Delivery Associate is skilled to perform.\\\\n              </AccordionHeaderSubTitle>\\\\n            </>\\\\n          ),\\\\n          content: (\\\\n            <AccordionContent>\\\\n              {Array(15)\\\\n                .fill(0)\\\\n                .map((_, i) => (\\\\n                  <div key={i}>Line {i + 1} </div>\\\\n                ))}\\\\n            </AccordionContent>\\\\n          )\\\\n        }}\\\\n      </Accordian>\\\\n    </>\\\\n  )\\\\n}\\\\nexport const Default = () => {\\\\n  return (\\\\n    <ThemeWrapper>\\\\n      <Box p='1em' bgColor='grey.50'>\\\\n        <AccordionComponent />\\\\n      </Box>\\\\n    </ThemeWrapper>\\\\n  )\\\\n}\\\\n\\\";\\n// @ts-ignore\\nvar __ADDS_MAP__ = {};\\n// @ts-ignore\\nvar __MAIN_FILE_LOCATION__ = \\\"/Accordian.stories.tsx\\\";\\n// @ts-ignore\\nvar __MODULE_DEPENDENCIES__ = [];\\n// @ts-ignore\\nvar __LOCAL_DEPENDENCIES__ = {};\\n// @ts-ignore\\nvar __IDS_TO_FRAMEWORKS__ = {};\\n        \\nimport React from 'react'\\nimport { withKnobs } from '@storybook/addon-knobs'\\nimport Accordian from '.'\\n\\nimport Box from '../../atoms/Box'\\n\\nimport { path } from '..'\\nimport ThemeWrapper from '../../../utilities/components/ThemeWrapper'\\nimport {\\n  AccordionHeaderTitle,\\n  AccordionHeaderSubTitle,\\n  AccordionContent\\n} from './styles'\\n\\nexport default {parameters: {\\\"storySource\\\":{\\\"source\\\":\\\"\\\\n\\\\n// @ts-nocheck\\\\n// @ts-ignore\\\\nvar withSourceLoader = require('@storybook/source-loader/preview').withSource;\\\\n// @ts-ignore\\\\nvar addSourceDecorator = require(\\\\\\\"@storybook/source-loader/preview\\\\\\\").addSource;\\\\n// @ts-ignore\\\\nvar __SOURCE_PREFIX__ = \\\\\\\"/Users/farhanansari/Desktop/CODE/PrxProject/untitled folder/reactStoryBook/src/components/molecules/Accordian\\\\\\\";\\\\n// @ts-ignore\\\\nvar __STORY__ = \\\\\\\"import React from 'react'\\\\\\\\nimport { withKnobs } from '@storybook/addon-knobs'\\\\\\\\nimport Accordian from '.'\\\\\\\\n\\\\\\\\nimport Box from '../../atoms/Box'\\\\\\\\n\\\\\\\\nimport { path } from '..'\\\\\\\\nimport ThemeWrapper from '../../../utilities/components/ThemeWrapper'\\\\\\\\nimport {\\\\\\\\n  AccordionHeaderTitle,\\\\\\\\n  AccordionHeaderSubTitle,\\\\\\\\n  AccordionContent\\\\\\\\n} from './styles'\\\\\\\\n\\\\\\\\nexport default {\\\\\\\\n  title: `${path}/Accordian`,\\\\\\\\n  decorators: [withKnobs],\\\\\\\\n  component: Accordian\\\\\\\\n}\\\\\\\\n\\\\\\\\nconst AccordionComponent = () => {\\\\\\\\n  const [expanded, setExpanded] = React.useState('1')\\\\\\\\n  const handleToggle = (accordianId: string, isExpanded?: boolean) => {\\\\\\\\n    setExpanded(isExpanded ? accordianId : '')\\\\\\\\n  }\\\\\\\\n\\\\\\\\n  const handleToggleChange = (e: any) => {\\\\\\\\n    console.log(\\\\\\\\\\\\\\\"toggledata\\\\\\\\\\\\\\\", e)\\\\\\\\n  }\\\\\\\\n\\\\\\\\n  const tooltipProps={\\\\\\\\n    messagePlacement:'end',\\\\\\\\n    arrowPlacement:'center',\\\\\\\\n    tooltipDirection:'bottom'\\\\\\\\n  }\\\\\\\\n\\\\\\\\n  return (\\\\\\\\n    <>\\\\\\\\n       <Accordian id='1' expanded={expanded === '1'} onToggle={handleToggle} onToggleSwitch={handleToggleChange} switchTooltipMessage=\\\\\\\\\\\\\\\"Activate / Deactivate this setting\\\\\\\\\\\\\\\" switchTooltipProps={tooltipProps} showToggleSwitch={true} toggleSwitchStyle={{paddingRight:\\\\\\\\\\\\\\\"15px\\\\\\\\\\\\\\\"}}>\\\\\\\\n        {{\\\\\\\\n          header: (\\\\\\\\n            <>\\\\\\\\n              <AccordionHeaderTitle>\\\\\\\\n                Minimum Capacity Utilization\\\\\\\\n              </AccordionHeaderTitle>\\\\\\\\n              <AccordionHeaderSubTitle>\\\\\\\\n                Helps you manage Fleet utilization\\\\\\\\n              </AccordionHeaderSubTitle>\\\\\\\\n            </>\\\\\\\\n          ),\\\\\\\\n          content: (\\\\\\\\n            <AccordionContent>\\\\\\\\n              {Array(10)\\\\\\\\n                .fill(0)\\\\\\\\n                .map((_, i) => (\\\\\\\\n                  <div key={i}>Line {i + 1} </div>\\\\\\\\n                ))}\\\\\\\\n            </AccordionContent>\\\\\\\\n          )\\\\\\\\n        }}\\\\\\\\n      </Accordian>\\\\\\\\n      <Accordian id='2' expanded={expanded === '2'} onToggle={handleToggle} onToggleSwitch={handleToggleChange} showToggleSwitch={true} toggleSwitchDisable={true} isToggleChecked={true}>\\\\\\\\n        {{\\\\\\\\n          header: (\\\\\\\\n            <>\\\\\\\\n              <AccordionHeaderTitle>Send Activation Link</AccordionHeaderTitle>\\\\\\\\n              <AccordionHeaderSubTitle>\\\\\\\\n                Send an activation link to the mobile number of a newly created\\\\\\\\n                Delivery Associate.\\\\\\\\n              </AccordionHeaderSubTitle>\\\\\\\\n            </>\\\\\\\\n          ),\\\\\\\\n          content: (\\\\\\\\n            <AccordionContent>\\\\\\\\n              {Array(5)\\\\\\\\n                .fill(0)\\\\\\\\n                .map((_, i) => (\\\\\\\\n                  <div key={i}>Line {i + 1} </div>\\\\\\\\n                ))}\\\\\\\\n            </AccordionContent>\\\\\\\\n          )\\\\\\\\n        }}\\\\\\\\n      </Accordian>\\\\\\\\n      <Accordian id='3' expanded={expanded === '3'} onToggle={handleToggle} onToggleSwitch={handleToggleChange}>\\\\\\\\n        {{\\\\\\\\n          header: (\\\\\\\\n            <>\\\\\\\\n              <AccordionHeaderTitle>\\\\\\\\n                Delivery Associates Skill-sets configuration\\\\\\\\n              </AccordionHeaderTitle>\\\\\\\\n              <AccordionHeaderSubTitle>\\\\\\\\n                Select specific skills while adding a Delivery Associate.\\\\\\\\n                LogiNext Route planning will automatically assign the Shipments\\\\\\\\n                that a Delivery Associate is skilled to perform.\\\\\\\\n              </AccordionHeaderSubTitle>\\\\\\\\n            </>\\\\\\\\n          ),\\\\\\\\n          content: (\\\\\\\\n            <AccordionContent>\\\\\\\\n              {Array(15)\\\\\\\\n                .fill(0)\\\\\\\\n                .map((_, i) => (\\\\\\\\n                  <div key={i}>Line {i + 1} </div>\\\\\\\\n                ))}\\\\\\\\n            </AccordionContent>\\\\\\\\n          )\\\\\\\\n        }}\\\\\\\\n      </Accordian>\\\\\\\\n    </>\\\\\\\\n  )\\\\\\\\n}\\\\\\\\nexport const Default = () => {\\\\\\\\n  return (\\\\\\\\n    <ThemeWrapper>\\\\\\\\n      <Box p='1em' bgColor='grey.50'>\\\\\\\\n        <AccordionComponent />\\\\\\\\n      </Box>\\\\\\\\n    </ThemeWrapper>\\\\\\\\n  )\\\\\\\\n}\\\\\\\\n\\\\\\\";\\\\n// @ts-ignore\\\\nvar __ADDS_MAP__ = {};\\\\n// @ts-ignore\\\\nvar __MAIN_FILE_LOCATION__ = \\\\\\\"/Accordian.stories.tsx\\\\\\\";\\\\n// @ts-ignore\\\\nvar __MODULE_DEPENDENCIES__ = [];\\\\n// @ts-ignore\\\\nvar __LOCAL_DEPENDENCIES__ = {};\\\\n// @ts-ignore\\\\nvar __IDS_TO_FRAMEWORKS__ = {};\\\\n        \\\\nimport React from 'react'\\\\nimport { withKnobs } from '@storybook/addon-knobs'\\\\nimport Accordian from '.'\\\\n\\\\nimport Box from '../../atoms/Box'\\\\n\\\\nimport { path } from '..'\\\\nimport ThemeWrapper from '../../../utilities/components/ThemeWrapper'\\\\nimport {\\\\n  AccordionHeaderTitle,\\\\n  AccordionHeaderSubTitle,\\\\n  AccordionContent\\\\n} from './styles'\\\\n\\\\nexport default {parameters: {\\\\\\\"storySource\\\\\\\":{\\\\\\\"source\\\\\\\":\\\\\\\"import React from 'react'\\\\\\\\nimport { withKnobs } from '@storybook/addon-knobs'\\\\\\\\nimport Accordian from '.'\\\\\\\\n\\\\\\\\nimport Box from '../../atoms/Box'\\\\\\\\n\\\\\\\\nimport { path } from '..'\\\\\\\\nimport ThemeWrapper from '../../../utilities/components/ThemeWrapper'\\\\\\\\nimport {\\\\\\\\n  AccordionHeaderTitle,\\\\\\\\n  AccordionHeaderSubTitle,\\\\\\\\n  AccordionContent\\\\\\\\n} from './styles'\\\\\\\\n\\\\\\\\nexport default {\\\\\\\\n  title: `${path}/Accordian`,\\\\\\\\n  decorators: [withKnobs],\\\\\\\\n  component: Accordian\\\\\\\\n}\\\\\\\\n\\\\\\\\nconst AccordionComponent = () => {\\\\\\\\n  const [expanded, setExpanded] = React.useState('1')\\\\\\\\n  const handleToggle = (accordianId: string, isExpanded?: boolean) => {\\\\\\\\n    setExpanded(isExpanded ? accordianId : '')\\\\\\\\n  }\\\\\\\\n\\\\\\\\n  const handleToggleChange = (e: any) => {\\\\\\\\n    console.log(\\\\\\\\\\\\\\\"toggledata\\\\\\\\\\\\\\\", e)\\\\\\\\n  }\\\\\\\\n\\\\\\\\n  const tooltipProps={\\\\\\\\n    messagePlacement:'end',\\\\\\\\n    arrowPlacement:'center',\\\\\\\\n    tooltipDirection:'bottom'\\\\\\\\n  }\\\\\\\\n\\\\\\\\n  return (\\\\\\\\n    <>\\\\\\\\n       <Accordian id='1' expanded={expanded === '1'} onToggle={handleToggle} onToggleSwitch={handleToggleChange} switchTooltipMessage=\\\\\\\\\\\\\\\"Activate / Deactivate this setting\\\\\\\\\\\\\\\" switchTooltipProps={tooltipProps} showToggleSwitch={true} toggleSwitchStyle={{paddingRight:\\\\\\\\\\\\\\\"15px\\\\\\\\\\\\\\\"}}>\\\\\\\\n        {{\\\\\\\\n          header: (\\\\\\\\n            <>\\\\\\\\n              <AccordionHeaderTitle>\\\\\\\\n                Minimum Capacity Utilization\\\\\\\\n              </AccordionHeaderTitle>\\\\\\\\n              <AccordionHeaderSubTitle>\\\\\\\\n                Helps you manage Fleet utilization\\\\\\\\n              </AccordionHeaderSubTitle>\\\\\\\\n            </>\\\\\\\\n          ),\\\\\\\\n          content: (\\\\\\\\n            <AccordionContent>\\\\\\\\n              {Array(10)\\\\\\\\n                .fill(0)\\\\\\\\n                .map((_, i) => (\\\\\\\\n                  <div key={i}>Line {i + 1} </div>\\\\\\\\n                ))}\\\\\\\\n            </AccordionContent>\\\\\\\\n          )\\\\\\\\n        }}\\\\\\\\n      </Accordian>\\\\\\\\n      <Accordian id='2' expanded={expanded === '2'} onToggle={handleToggle} onToggleSwitch={handleToggleChange} showToggleSwitch={true} toggleSwitchDisable={true} isToggleChecked={true}>\\\\\\\\n        {{\\\\\\\\n          header: (\\\\\\\\n            <>\\\\\\\\n              <AccordionHeaderTitle>Send Activation Link</AccordionHeaderTitle>\\\\\\\\n              <AccordionHeaderSubTitle>\\\\\\\\n                Send an activation link to the mobile number of a newly created\\\\\\\\n                Delivery Associate.\\\\\\\\n              </AccordionHeaderSubTitle>\\\\\\\\n            </>\\\\\\\\n          ),\\\\\\\\n          content: (\\\\\\\\n            <AccordionContent>\\\\\\\\n              {Array(5)\\\\\\\\n                .fill(0)\\\\\\\\n                .map((_, i) => (\\\\\\\\n                  <div key={i}>Line {i + 1} </div>\\\\\\\\n                ))}\\\\\\\\n            </AccordionContent>\\\\\\\\n          )\\\\\\\\n        }}\\\\\\\\n      </Accordian>\\\\\\\\n      <Accordian id='3' expanded={expanded === '3'} onToggle={handleToggle} onToggleSwitch={handleToggleChange}>\\\\\\\\n        {{\\\\\\\\n          header: (\\\\\\\\n            <>\\\\\\\\n              <AccordionHeaderTitle>\\\\\\\\n                Delivery Associates Skill-sets configuration\\\\\\\\n              </AccordionHeaderTitle>\\\\\\\\n              <AccordionHeaderSubTitle>\\\\\\\\n                Select specific skills while adding a Delivery Associate.\\\\\\\\n                LogiNext Route planning will automatically assign the Shipments\\\\\\\\n                that a Delivery Associate is skilled to perform.\\\\\\\\n              </AccordionHeaderSubTitle>\\\\\\\\n            </>\\\\\\\\n          ),\\\\\\\\n          content: (\\\\\\\\n            <AccordionContent>\\\\\\\\n              {Array(15)\\\\\\\\n                .fill(0)\\\\\\\\n                .map((_, i) => (\\\\\\\\n                  <div key={i}>Line {i + 1} </div>\\\\\\\\n                ))}\\\\\\\\n            </AccordionContent>\\\\\\\\n          )\\\\\\\\n        }}\\\\\\\\n      </Accordian>\\\\\\\\n    </>\\\\\\\\n  )\\\\\\\\n}\\\\\\\\nexport const Default = () => {\\\\\\\\n  return (\\\\\\\\n    <ThemeWrapper>\\\\\\\\n      <Box p='1em' bgColor='grey.50'>\\\\\\\\n        <AccordionComponent />\\\\\\\\n      </Box>\\\\\\\\n    </ThemeWrapper>\\\\\\\\n  )\\\\\\\\n}\\\\\\\\n\\\\\\\",\\\\\\\"locationsMap\\\\\\\":{}},},\\\\n  title: `${path}/Accordian`,\\\\n  decorators: [withKnobs],\\\\n  component: Accordian\\\\n}\\\\n\\\\nconst AccordionComponent = () => {\\\\n  const [expanded, setExpanded] = React.useState('1')\\\\n  const handleToggle = (accordianId: string, isExpanded?: boolean) => {\\\\n    setExpanded(isExpanded ? accordianId : '')\\\\n  }\\\\n\\\\n  const handleToggleChange = (e: any) => {\\\\n    console.log(\\\\\\\"toggledata\\\\\\\", e)\\\\n  }\\\\n\\\\n  const tooltipProps={\\\\n    messagePlacement:'end',\\\\n    arrowPlacement:'center',\\\\n    tooltipDirection:'bottom'\\\\n  }\\\\n\\\\n  return (\\\\n    <>\\\\n       <Accordian id='1' expanded={expanded === '1'} onToggle={handleToggle} onToggleSwitch={handleToggleChange} switchTooltipMessage=\\\\\\\"Activate / Deactivate this setting\\\\\\\" switchTooltipProps={tooltipProps} showToggleSwitch={true} toggleSwitchStyle={{paddingRight:\\\\\\\"15px\\\\\\\"}}>\\\\n        {{\\\\n          header: (\\\\n            <>\\\\n              <AccordionHeaderTitle>\\\\n                Minimum Capacity Utilization\\\\n              </AccordionHeaderTitle>\\\\n              <AccordionHeaderSubTitle>\\\\n                Helps you manage Fleet utilization\\\\n              </AccordionHeaderSubTitle>\\\\n            </>\\\\n          ),\\\\n          content: (\\\\n            <AccordionContent>\\\\n              {Array(10)\\\\n                .fill(0)\\\\n                .map((_, i) => (\\\\n                  <div key={i}>Line {i + 1} </div>\\\\n                ))}\\\\n            </AccordionContent>\\\\n          )\\\\n        }}\\\\n      </Accordian>\\\\n      <Accordian id='2' expanded={expanded === '2'} onToggle={handleToggle} onToggleSwitch={handleToggleChange} showToggleSwitch={true} toggleSwitchDisable={true} isToggleChecked={true}>\\\\n        {{\\\\n          header: (\\\\n            <>\\\\n              <AccordionHeaderTitle>Send Activation Link</AccordionHeaderTitle>\\\\n              <AccordionHeaderSubTitle>\\\\n                Send an activation link to the mobile number of a newly created\\\\n                Delivery Associate.\\\\n              </AccordionHeaderSubTitle>\\\\n            </>\\\\n          ),\\\\n          content: (\\\\n            <AccordionContent>\\\\n              {Array(5)\\\\n                .fill(0)\\\\n                .map((_, i) => (\\\\n                  <div key={i}>Line {i + 1} </div>\\\\n                ))}\\\\n            </AccordionContent>\\\\n          )\\\\n        }}\\\\n      </Accordian>\\\\n      <Accordian id='3' expanded={expanded === '3'} onToggle={handleToggle} onToggleSwitch={handleToggleChange}>\\\\n        {{\\\\n          header: (\\\\n            <>\\\\n              <AccordionHeaderTitle>\\\\n                Delivery Associates Skill-sets configuration\\\\n              </AccordionHeaderTitle>\\\\n              <AccordionHeaderSubTitle>\\\\n                Select specific skills while adding a Delivery Associate.\\\\n                LogiNext Route planning will automatically assign the Shipments\\\\n                that a Delivery Associate is skilled to perform.\\\\n              </AccordionHeaderSubTitle>\\\\n            </>\\\\n          ),\\\\n          content: (\\\\n            <AccordionContent>\\\\n              {Array(15)\\\\n                .fill(0)\\\\n                .map((_, i) => (\\\\n                  <div key={i}>Line {i + 1} </div>\\\\n                ))}\\\\n            </AccordionContent>\\\\n          )\\\\n        }}\\\\n      </Accordian>\\\\n    </>\\\\n  )\\\\n}\\\\nexport const Default = addSourceDecorator(() => {\\\\n  return (\\\\n    <ThemeWrapper>\\\\n      <Box p='1em' bgColor='grey.50'>\\\\n        <AccordionComponent />\\\\n      </Box>\\\\n    </ThemeWrapper>\\\\n  )\\\\n}, {__STORY__, __ADDS_MAP__,__MAIN_FILE_LOCATION__,__MODULE_DEPENDENCIES__,__LOCAL_DEPENDENCIES__,__SOURCE_PREFIX__,__IDS_TO_FRAMEWORKS__});\\\",\\\"locationsMap\\\":{}},\\\"storySource\\\":{\\\"source\\\":\\\"import React from 'react'\\\\nimport { withKnobs } from '@storybook/addon-knobs'\\\\nimport Accordian from '.'\\\\n\\\\nimport Box from '../../atoms/Box'\\\\n\\\\nimport { path } from '..'\\\\nimport ThemeWrapper from '../../../utilities/components/ThemeWrapper'\\\\nimport {\\\\n  AccordionHeaderTitle,\\\\n  AccordionHeaderSubTitle,\\\\n  AccordionContent\\\\n} from './styles'\\\\n\\\\nexport default {\\\\n  title: `${path}/Accordian`,\\\\n  decorators: [withKnobs],\\\\n  component: Accordian\\\\n}\\\\n\\\\nconst AccordionComponent = () => {\\\\n  const [expanded, setExpanded] = React.useState('1')\\\\n  const handleToggle = (accordianId: string, isExpanded?: boolean) => {\\\\n    setExpanded(isExpanded ? accordianId : '')\\\\n  }\\\\n\\\\n  const handleToggleChange = (e: any) => {\\\\n    console.log(\\\\\\\"toggledata\\\\\\\", e)\\\\n  }\\\\n\\\\n  const tooltipProps={\\\\n    messagePlacement:'end',\\\\n    arrowPlacement:'center',\\\\n    tooltipDirection:'bottom'\\\\n  }\\\\n\\\\n  return (\\\\n    <>\\\\n       <Accordian id='1' expanded={expanded === '1'} onToggle={handleToggle} onToggleSwitch={handleToggleChange} switchTooltipMessage=\\\\\\\"Activate / Deactivate this setting\\\\\\\" switchTooltipProps={tooltipProps} showToggleSwitch={true} toggleSwitchStyle={{paddingRight:\\\\\\\"15px\\\\\\\"}}>\\\\n        {{\\\\n          header: (\\\\n            <>\\\\n              <AccordionHeaderTitle>\\\\n                Minimum Capacity Utilization\\\\n              </AccordionHeaderTitle>\\\\n              <AccordionHeaderSubTitle>\\\\n                Helps you manage Fleet utilization\\\\n              </AccordionHeaderSubTitle>\\\\n            </>\\\\n          ),\\\\n          content: (\\\\n            <AccordionContent>\\\\n              {Array(10)\\\\n                .fill(0)\\\\n                .map((_, i) => (\\\\n                  <div key={i}>Line {i + 1} </div>\\\\n                ))}\\\\n            </AccordionContent>\\\\n          )\\\\n        }}\\\\n      </Accordian>\\\\n      <Accordian id='2' expanded={expanded === '2'} onToggle={handleToggle} onToggleSwitch={handleToggleChange} showToggleSwitch={true} toggleSwitchDisable={true} isToggleChecked={true}>\\\\n        {{\\\\n          header: (\\\\n            <>\\\\n              <AccordionHeaderTitle>Send Activation Link</AccordionHeaderTitle>\\\\n              <AccordionHeaderSubTitle>\\\\n                Send an activation link to the mobile number of a newly created\\\\n                Delivery Associate.\\\\n              </AccordionHeaderSubTitle>\\\\n            </>\\\\n          ),\\\\n          content: (\\\\n            <AccordionContent>\\\\n              {Array(5)\\\\n                .fill(0)\\\\n                .map((_, i) => (\\\\n                  <div key={i}>Line {i + 1} </div>\\\\n                ))}\\\\n            </AccordionContent>\\\\n          )\\\\n        }}\\\\n      </Accordian>\\\\n      <Accordian id='3' expanded={expanded === '3'} onToggle={handleToggle} onToggleSwitch={handleToggleChange}>\\\\n        {{\\\\n          header: (\\\\n            <>\\\\n              <AccordionHeaderTitle>\\\\n                Delivery Associates Skill-sets configuration\\\\n              </AccordionHeaderTitle>\\\\n              <AccordionHeaderSubTitle>\\\\n                Select specific skills while adding a Delivery Associate.\\\\n                LogiNext Route planning will automatically assign the Shipments\\\\n                that a Delivery Associate is skilled to perform.\\\\n              </AccordionHeaderSubTitle>\\\\n            </>\\\\n          ),\\\\n          content: (\\\\n            <AccordionContent>\\\\n              {Array(15)\\\\n                .fill(0)\\\\n                .map((_, i) => (\\\\n                  <div key={i}>Line {i + 1} </div>\\\\n                ))}\\\\n            </AccordionContent>\\\\n          )\\\\n        }}\\\\n      </Accordian>\\\\n    </>\\\\n  )\\\\n}\\\\nexport const Default = () => {\\\\n  return (\\\\n    <ThemeWrapper>\\\\n      <Box p='1em' bgColor='grey.50'>\\\\n        <AccordionComponent />\\\\n      </Box>\\\\n    </ThemeWrapper>\\\\n  )\\\\n}\\\\n\\\",\\\"locationsMap\\\":{}},},\\n  title: `${path}/Accordian`,\\n  decorators: [withKnobs],\\n  component: Accordian\\n}\\n\\nconst AccordionComponent = () => {\\n  const [expanded, setExpanded] = React.useState('1')\\n  const handleToggle = (accordianId: string, isExpanded?: boolean) => {\\n    setExpanded(isExpanded ? accordianId : '')\\n  }\\n\\n  const handleToggleChange = (e: any) => {\\n    console.log(\\\"toggledata\\\", e)\\n  }\\n\\n  const tooltipProps={\\n    messagePlacement:'end',\\n    arrowPlacement:'center',\\n    tooltipDirection:'bottom'\\n  }\\n\\n  return (\\n    <>\\n       <Accordian id='1' expanded={expanded === '1'} onToggle={handleToggle} onToggleSwitch={handleToggleChange} switchTooltipMessage=\\\"Activate / Deactivate this setting\\\" switchTooltipProps={tooltipProps} showToggleSwitch={true} toggleSwitchStyle={{paddingRight:\\\"15px\\\"}}>\\n        {{\\n          header: (\\n            <>\\n              <AccordionHeaderTitle>\\n                Minimum Capacity Utilization\\n              </AccordionHeaderTitle>\\n              <AccordionHeaderSubTitle>\\n                Helps you manage Fleet utilization\\n              </AccordionHeaderSubTitle>\\n            </>\\n          ),\\n          content: (\\n            <AccordionContent>\\n              {Array(10)\\n                .fill(0)\\n                .map((_, i) => (\\n                  <div key={i}>Line {i + 1} </div>\\n                ))}\\n            </AccordionContent>\\n          )\\n        }}\\n      </Accordian>\\n      <Accordian id='2' expanded={expanded === '2'} onToggle={handleToggle} onToggleSwitch={handleToggleChange} showToggleSwitch={true} toggleSwitchDisable={true} isToggleChecked={true}>\\n        {{\\n          header: (\\n            <>\\n              <AccordionHeaderTitle>Send Activation Link</AccordionHeaderTitle>\\n              <AccordionHeaderSubTitle>\\n                Send an activation link to the mobile number of a newly created\\n                Delivery Associate.\\n              </AccordionHeaderSubTitle>\\n            </>\\n          ),\\n          content: (\\n            <AccordionContent>\\n              {Array(5)\\n                .fill(0)\\n                .map((_, i) => (\\n                  <div key={i}>Line {i + 1} </div>\\n                ))}\\n            </AccordionContent>\\n          )\\n        }}\\n      </Accordian>\\n      <Accordian id='3' expanded={expanded === '3'} onToggle={handleToggle} onToggleSwitch={handleToggleChange}>\\n        {{\\n          header: (\\n            <>\\n              <AccordionHeaderTitle>\\n                Delivery Associates Skill-sets configuration\\n              </AccordionHeaderTitle>\\n              <AccordionHeaderSubTitle>\\n                Select specific skills while adding a Delivery Associate.\\n                LogiNext Route planning will automatically assign the Shipments\\n                that a Delivery Associate is skilled to perform.\\n              </AccordionHeaderSubTitle>\\n            </>\\n          ),\\n          content: (\\n            <AccordionContent>\\n              {Array(15)\\n                .fill(0)\\n                .map((_, i) => (\\n                  <div key={i}>Line {i + 1} </div>\\n                ))}\\n            </AccordionContent>\\n          )\\n        }}\\n      </Accordian>\\n    </>\\n  )\\n}\\nexport const Default = addSourceDecorator(addSourceDecorator(() => {\\n  return (\\n    <ThemeWrapper>\\n      <Box p='1em' bgColor='grey.50'>\\n        <AccordionComponent />\\n      </Box>\\n    </ThemeWrapper>\\n  )\\n}, {__STORY__, __ADDS_MAP__,__MAIN_FILE_LOCATION__,__MODULE_DEPENDENCIES__,__LOCAL_DEPENDENCIES__,__SOURCE_PREFIX__,__IDS_TO_FRAMEWORKS__}), {__STORY__, __ADDS_MAP__,__MAIN_FILE_LOCATION__,__MODULE_DEPENDENCIES__,__LOCAL_DEPENDENCIES__,__SOURCE_PREFIX__,__IDS_TO_FRAMEWORKS__});\",\"locationsMap\":{}},\"storySource\":{\"source\":\"\\n\\n// @ts-nocheck\\n// @ts-ignore\\nvar withSourceLoader = require('@storybook/source-loader/preview').withSource;\\n// @ts-ignore\\nvar addSourceDecorator = require(\\\"@storybook/source-loader/preview\\\").addSource;\\n// @ts-ignore\\nvar __SOURCE_PREFIX__ = \\\"/Users/farhanansari/Desktop/CODE/PrxProject/untitled folder/reactStoryBook/src/components/molecules/Accordian\\\";\\n// @ts-ignore\\nvar __STORY__ = \\\"import React from 'react'\\\\nimport { withKnobs } from '@storybook/addon-knobs'\\\\nimport Accordian from '.'\\\\n\\\\nimport Box from '../../atoms/Box'\\\\n\\\\nimport { path } from '..'\\\\nimport ThemeWrapper from '../../../utilities/components/ThemeWrapper'\\\\nimport {\\\\n  AccordionHeaderTitle,\\\\n  AccordionHeaderSubTitle,\\\\n  AccordionContent\\\\n} from './styles'\\\\n\\\\nexport default {\\\\n  title: `${path}/Accordian`,\\\\n  decorators: [withKnobs],\\\\n  component: Accordian\\\\n}\\\\n\\\\nconst AccordionComponent = () => {\\\\n  const [expanded, setExpanded] = React.useState('1')\\\\n  const handleToggle = (accordianId: string, isExpanded?: boolean) => {\\\\n    setExpanded(isExpanded ? accordianId : '')\\\\n  }\\\\n\\\\n  const handleToggleChange = (e: any) => {\\\\n    console.log(\\\\\\\"toggledata\\\\\\\", e)\\\\n  }\\\\n\\\\n  const tooltipProps={\\\\n    messagePlacement:'end',\\\\n    arrowPlacement:'center',\\\\n    tooltipDirection:'bottom'\\\\n  }\\\\n\\\\n  return (\\\\n    <>\\\\n       <Accordian id='1' expanded={expanded === '1'} onToggle={handleToggle} onToggleSwitch={handleToggleChange} switchTooltipMessage=\\\\\\\"Activate / Deactivate this setting\\\\\\\" switchTooltipProps={tooltipProps} showToggleSwitch={true} toggleSwitchStyle={{paddingRight:\\\\\\\"15px\\\\\\\"}}>\\\\n        {{\\\\n          header: (\\\\n            <>\\\\n              <AccordionHeaderTitle>\\\\n                Minimum Capacity Utilization\\\\n              </AccordionHeaderTitle>\\\\n              <AccordionHeaderSubTitle>\\\\n                Helps you manage Fleet utilization\\\\n              </AccordionHeaderSubTitle>\\\\n            </>\\\\n          ),\\\\n          content: (\\\\n            <AccordionContent>\\\\n              {Array(10)\\\\n                .fill(0)\\\\n                .map((_, i) => (\\\\n                  <div key={i}>Line {i + 1} </div>\\\\n                ))}\\\\n            </AccordionContent>\\\\n          )\\\\n        }}\\\\n      </Accordian>\\\\n      <Accordian id='2' expanded={expanded === '2'} onToggle={handleToggle} onToggleSwitch={handleToggleChange} showToggleSwitch={true} toggleSwitchDisable={true} isToggleChecked={true}>\\\\n        {{\\\\n          header: (\\\\n            <>\\\\n              <AccordionHeaderTitle>Send Activation Link</AccordionHeaderTitle>\\\\n              <AccordionHeaderSubTitle>\\\\n                Send an activation link to the mobile number of a newly created\\\\n                Delivery Associate.\\\\n              </AccordionHeaderSubTitle>\\\\n            </>\\\\n          ),\\\\n          content: (\\\\n            <AccordionContent>\\\\n              {Array(5)\\\\n                .fill(0)\\\\n                .map((_, i) => (\\\\n                  <div key={i}>Line {i + 1} </div>\\\\n                ))}\\\\n            </AccordionContent>\\\\n          )\\\\n        }}\\\\n      </Accordian>\\\\n      <Accordian id='3' expanded={expanded === '3'} onToggle={handleToggle} onToggleSwitch={handleToggleChange}>\\\\n        {{\\\\n          header: (\\\\n            <>\\\\n              <AccordionHeaderTitle>\\\\n                Delivery Associates Skill-sets configuration\\\\n              </AccordionHeaderTitle>\\\\n              <AccordionHeaderSubTitle>\\\\n                Select specific skills while adding a Delivery Associate.\\\\n                LogiNext Route planning will automatically assign the Shipments\\\\n                that a Delivery Associate is skilled to perform.\\\\n              </AccordionHeaderSubTitle>\\\\n            </>\\\\n          ),\\\\n          content: (\\\\n            <AccordionContent>\\\\n              {Array(15)\\\\n                .fill(0)\\\\n                .map((_, i) => (\\\\n                  <div key={i}>Line {i + 1} </div>\\\\n                ))}\\\\n            </AccordionContent>\\\\n          )\\\\n        }}\\\\n      </Accordian>\\\\n    </>\\\\n  )\\\\n}\\\\nexport const Default = () => {\\\\n  return (\\\\n    <ThemeWrapper>\\\\n      <Box p='1em' bgColor='grey.50'>\\\\n        <AccordionComponent />\\\\n      </Box>\\\\n    </ThemeWrapper>\\\\n  )\\\\n}\\\\n\\\";\\n// @ts-ignore\\nvar __ADDS_MAP__ = {};\\n// @ts-ignore\\nvar __MAIN_FILE_LOCATION__ = \\\"/Accordian.stories.tsx\\\";\\n// @ts-ignore\\nvar __MODULE_DEPENDENCIES__ = [];\\n// @ts-ignore\\nvar __LOCAL_DEPENDENCIES__ = {};\\n// @ts-ignore\\nvar __IDS_TO_FRAMEWORKS__ = {};\\n        \\nimport React from 'react'\\nimport { withKnobs } from '@storybook/addon-knobs'\\nimport Accordian from '.'\\n\\nimport Box from '../../atoms/Box'\\n\\nimport { path } from '..'\\nimport ThemeWrapper from '../../../utilities/components/ThemeWrapper'\\nimport {\\n  AccordionHeaderTitle,\\n  AccordionHeaderSubTitle,\\n  AccordionContent\\n} from './styles'\\n\\nexport default {parameters: {\\\"storySource\\\":{\\\"source\\\":\\\"import React from 'react'\\\\nimport { withKnobs } from '@storybook/addon-knobs'\\\\nimport Accordian from '.'\\\\n\\\\nimport Box from '../../atoms/Box'\\\\n\\\\nimport { path } from '..'\\\\nimport ThemeWrapper from '../../../utilities/components/ThemeWrapper'\\\\nimport {\\\\n  AccordionHeaderTitle,\\\\n  AccordionHeaderSubTitle,\\\\n  AccordionContent\\\\n} from './styles'\\\\n\\\\nexport default {\\\\n  title: `${path}/Accordian`,\\\\n  decorators: [withKnobs],\\\\n  component: Accordian\\\\n}\\\\n\\\\nconst AccordionComponent = () => {\\\\n  const [expanded, setExpanded] = React.useState('1')\\\\n  const handleToggle = (accordianId: string, isExpanded?: boolean) => {\\\\n    setExpanded(isExpanded ? accordianId : '')\\\\n  }\\\\n\\\\n  const handleToggleChange = (e: any) => {\\\\n    console.log(\\\\\\\"toggledata\\\\\\\", e)\\\\n  }\\\\n\\\\n  const tooltipProps={\\\\n    messagePlacement:'end',\\\\n    arrowPlacement:'center',\\\\n    tooltipDirection:'bottom'\\\\n  }\\\\n\\\\n  return (\\\\n    <>\\\\n       <Accordian id='1' expanded={expanded === '1'} onToggle={handleToggle} onToggleSwitch={handleToggleChange} switchTooltipMessage=\\\\\\\"Activate / Deactivate this setting\\\\\\\" switchTooltipProps={tooltipProps} showToggleSwitch={true} toggleSwitchStyle={{paddingRight:\\\\\\\"15px\\\\\\\"}}>\\\\n        {{\\\\n          header: (\\\\n            <>\\\\n              <AccordionHeaderTitle>\\\\n                Minimum Capacity Utilization\\\\n              </AccordionHeaderTitle>\\\\n              <AccordionHeaderSubTitle>\\\\n                Helps you manage Fleet utilization\\\\n              </AccordionHeaderSubTitle>\\\\n            </>\\\\n          ),\\\\n          content: (\\\\n            <AccordionContent>\\\\n              {Array(10)\\\\n                .fill(0)\\\\n                .map((_, i) => (\\\\n                  <div key={i}>Line {i + 1} </div>\\\\n                ))}\\\\n            </AccordionContent>\\\\n          )\\\\n        }}\\\\n      </Accordian>\\\\n      <Accordian id='2' expanded={expanded === '2'} onToggle={handleToggle} onToggleSwitch={handleToggleChange} showToggleSwitch={true} toggleSwitchDisable={true} isToggleChecked={true}>\\\\n        {{\\\\n          header: (\\\\n            <>\\\\n              <AccordionHeaderTitle>Send Activation Link</AccordionHeaderTitle>\\\\n              <AccordionHeaderSubTitle>\\\\n                Send an activation link to the mobile number of a newly created\\\\n                Delivery Associate.\\\\n              </AccordionHeaderSubTitle>\\\\n            </>\\\\n          ),\\\\n          content: (\\\\n            <AccordionContent>\\\\n              {Array(5)\\\\n                .fill(0)\\\\n                .map((_, i) => (\\\\n                  <div key={i}>Line {i + 1} </div>\\\\n                ))}\\\\n            </AccordionContent>\\\\n          )\\\\n        }}\\\\n      </Accordian>\\\\n      <Accordian id='3' expanded={expanded === '3'} onToggle={handleToggle} onToggleSwitch={handleToggleChange}>\\\\n        {{\\\\n          header: (\\\\n            <>\\\\n              <AccordionHeaderTitle>\\\\n                Delivery Associates Skill-sets configuration\\\\n              </AccordionHeaderTitle>\\\\n              <AccordionHeaderSubTitle>\\\\n                Select specific skills while adding a Delivery Associate.\\\\n                LogiNext Route planning will automatically assign the Shipments\\\\n                that a Delivery Associate is skilled to perform.\\\\n              </AccordionHeaderSubTitle>\\\\n            </>\\\\n          ),\\\\n          content: (\\\\n            <AccordionContent>\\\\n              {Array(15)\\\\n                .fill(0)\\\\n                .map((_, i) => (\\\\n                  <div key={i}>Line {i + 1} </div>\\\\n                ))}\\\\n            </AccordionContent>\\\\n          )\\\\n        }}\\\\n      </Accordian>\\\\n    </>\\\\n  )\\\\n}\\\\nexport const Default = () => {\\\\n  return (\\\\n    <ThemeWrapper>\\\\n      <Box p='1em' bgColor='grey.50'>\\\\n        <AccordionComponent />\\\\n      </Box>\\\\n    </ThemeWrapper>\\\\n  )\\\\n}\\\\n\\\",\\\"locationsMap\\\":{}},},\\n  title: `${path}/Accordian`,\\n  decorators: [withKnobs],\\n  component: Accordian\\n}\\n\\nconst AccordionComponent = () => {\\n  const [expanded, setExpanded] = React.useState('1')\\n  const handleToggle = (accordianId: string, isExpanded?: boolean) => {\\n    setExpanded(isExpanded ? accordianId : '')\\n  }\\n\\n  const handleToggleChange = (e: any) => {\\n    console.log(\\\"toggledata\\\", e)\\n  }\\n\\n  const tooltipProps={\\n    messagePlacement:'end',\\n    arrowPlacement:'center',\\n    tooltipDirection:'bottom'\\n  }\\n\\n  return (\\n    <>\\n       <Accordian id='1' expanded={expanded === '1'} onToggle={handleToggle} onToggleSwitch={handleToggleChange} switchTooltipMessage=\\\"Activate / Deactivate this setting\\\" switchTooltipProps={tooltipProps} showToggleSwitch={true} toggleSwitchStyle={{paddingRight:\\\"15px\\\"}}>\\n        {{\\n          header: (\\n            <>\\n              <AccordionHeaderTitle>\\n                Minimum Capacity Utilization\\n              </AccordionHeaderTitle>\\n              <AccordionHeaderSubTitle>\\n                Helps you manage Fleet utilization\\n              </AccordionHeaderSubTitle>\\n            </>\\n          ),\\n          content: (\\n            <AccordionContent>\\n              {Array(10)\\n                .fill(0)\\n                .map((_, i) => (\\n                  <div key={i}>Line {i + 1} </div>\\n                ))}\\n            </AccordionContent>\\n          )\\n        }}\\n      </Accordian>\\n      <Accordian id='2' expanded={expanded === '2'} onToggle={handleToggle} onToggleSwitch={handleToggleChange} showToggleSwitch={true} toggleSwitchDisable={true} isToggleChecked={true}>\\n        {{\\n          header: (\\n            <>\\n              <AccordionHeaderTitle>Send Activation Link</AccordionHeaderTitle>\\n              <AccordionHeaderSubTitle>\\n                Send an activation link to the mobile number of a newly created\\n                Delivery Associate.\\n              </AccordionHeaderSubTitle>\\n            </>\\n          ),\\n          content: (\\n            <AccordionContent>\\n              {Array(5)\\n                .fill(0)\\n                .map((_, i) => (\\n                  <div key={i}>Line {i + 1} </div>\\n                ))}\\n            </AccordionContent>\\n          )\\n        }}\\n      </Accordian>\\n      <Accordian id='3' expanded={expanded === '3'} onToggle={handleToggle} onToggleSwitch={handleToggleChange}>\\n        {{\\n          header: (\\n            <>\\n              <AccordionHeaderTitle>\\n                Delivery Associates Skill-sets configuration\\n              </AccordionHeaderTitle>\\n              <AccordionHeaderSubTitle>\\n                Select specific skills while adding a Delivery Associate.\\n                LogiNext Route planning will automatically assign the Shipments\\n                that a Delivery Associate is skilled to perform.\\n              </AccordionHeaderSubTitle>\\n            </>\\n          ),\\n          content: (\\n            <AccordionContent>\\n              {Array(15)\\n                .fill(0)\\n                .map((_, i) => (\\n                  <div key={i}>Line {i + 1} </div>\\n                ))}\\n            </AccordionContent>\\n          )\\n        }}\\n      </Accordian>\\n    </>\\n  )\\n}\\nexport const Default = addSourceDecorator(() => {\\n  return (\\n    <ThemeWrapper>\\n      <Box p='1em' bgColor='grey.50'>\\n        <AccordionComponent />\\n      </Box>\\n    </ThemeWrapper>\\n  )\\n}, {__STORY__, __ADDS_MAP__,__MAIN_FILE_LOCATION__,__MODULE_DEPENDENCIES__,__LOCAL_DEPENDENCIES__,__SOURCE_PREFIX__,__IDS_TO_FRAMEWORKS__});\",\"locationsMap\":{}},\"storySource\":{\"source\":\"import React from 'react'\\nimport { withKnobs } from '@storybook/addon-knobs'\\nimport Accordian from '.'\\n\\nimport Box from '../../atoms/Box'\\n\\nimport { path } from '..'\\nimport ThemeWrapper from '../../../utilities/components/ThemeWrapper'\\nimport {\\n  AccordionHeaderTitle,\\n  AccordionHeaderSubTitle,\\n  AccordionContent\\n} from './styles'\\n\\nexport default {\\n  title: `${path}/Accordian`,\\n  decorators: [withKnobs],\\n  component: Accordian\\n}\\n\\nconst AccordionComponent = () => {\\n  const [expanded, setExpanded] = React.useState('1')\\n  const handleToggle = (accordianId: string, isExpanded?: boolean) => {\\n    setExpanded(isExpanded ? accordianId : '')\\n  }\\n\\n  const handleToggleChange = (e: any) => {\\n    console.log(\\\"toggledata\\\", e)\\n  }\\n\\n  const tooltipProps={\\n    messagePlacement:'end',\\n    arrowPlacement:'center',\\n    tooltipDirection:'bottom'\\n  }\\n\\n  return (\\n    <>\\n       <Accordian id='1' expanded={expanded === '1'} onToggle={handleToggle} onToggleSwitch={handleToggleChange} switchTooltipMessage=\\\"Activate / Deactivate this setting\\\" switchTooltipProps={tooltipProps} showToggleSwitch={true} toggleSwitchStyle={{paddingRight:\\\"15px\\\"}}>\\n        {{\\n          header: (\\n            <>\\n              <AccordionHeaderTitle>\\n                Minimum Capacity Utilization\\n              </AccordionHeaderTitle>\\n              <AccordionHeaderSubTitle>\\n                Helps you manage Fleet utilization\\n              </AccordionHeaderSubTitle>\\n            </>\\n          ),\\n          content: (\\n            <AccordionContent>\\n              {Array(10)\\n                .fill(0)\\n                .map((_, i) => (\\n                  <div key={i}>Line {i + 1} </div>\\n                ))}\\n            </AccordionContent>\\n          )\\n        }}\\n      </Accordian>\\n      <Accordian id='2' expanded={expanded === '2'} onToggle={handleToggle} onToggleSwitch={handleToggleChange} showToggleSwitch={true} toggleSwitchDisable={true} isToggleChecked={true}>\\n        {{\\n          header: (\\n            <>\\n              <AccordionHeaderTitle>Send Activation Link</AccordionHeaderTitle>\\n              <AccordionHeaderSubTitle>\\n                Send an activation link to the mobile number of a newly created\\n                Delivery Associate.\\n              </AccordionHeaderSubTitle>\\n            </>\\n          ),\\n          content: (\\n            <AccordionContent>\\n              {Array(5)\\n                .fill(0)\\n                .map((_, i) => (\\n                  <div key={i}>Line {i + 1} </div>\\n                ))}\\n            </AccordionContent>\\n          )\\n        }}\\n      </Accordian>\\n      <Accordian id='3' expanded={expanded === '3'} onToggle={handleToggle} onToggleSwitch={handleToggleChange}>\\n        {{\\n          header: (\\n            <>\\n              <AccordionHeaderTitle>\\n                Delivery Associates Skill-sets configuration\\n              </AccordionHeaderTitle>\\n              <AccordionHeaderSubTitle>\\n                Select specific skills while adding a Delivery Associate.\\n                LogiNext Route planning will automatically assign the Shipments\\n                that a Delivery Associate is skilled to perform.\\n              </AccordionHeaderSubTitle>\\n            </>\\n          ),\\n          content: (\\n            <AccordionContent>\\n              {Array(15)\\n                .fill(0)\\n                .map((_, i) => (\\n                  <div key={i}>Line {i + 1} </div>\\n                ))}\\n            </AccordionContent>\\n          )\\n        }}\\n      </Accordian>\\n    </>\\n  )\\n}\\nexport const Default = () => {\\n  return (\\n    <ThemeWrapper>\\n      <Box p='1em' bgColor='grey.50'>\\n        <AccordionComponent />\\n      </Box>\\n    </ThemeWrapper>\\n  )\\n}\\n\",\"locationsMap\":{}},},\n  title: `${path}/Accordian`,\n  decorators: [withKnobs],\n  component: Accordian\n}\n\nconst AccordionComponent = () => {\n  const [expanded, setExpanded] = React.useState('1')\n  const handleToggle = (accordianId: string, isExpanded?: boolean) => {\n    setExpanded(isExpanded ? accordianId : '')\n  }\n\n  const handleToggleChange = (e: any) => {\n    console.log(\"toggledata\", e)\n  }\n\n  const tooltipProps={\n    messagePlacement:'end',\n    arrowPlacement:'center',\n    tooltipDirection:'bottom'\n  }\n\n  return (\n    <>\n       <Accordian id='1' expanded={expanded === '1'} onToggle={handleToggle} onToggleSwitch={handleToggleChange} switchTooltipMessage=\"Activate / Deactivate this setting\" switchTooltipProps={tooltipProps} showToggleSwitch={true} toggleSwitchStyle={{paddingRight:\"15px\"}}>\n        {{\n          header: (\n            <>\n              <AccordionHeaderTitle>\n                Minimum Capacity Utilization\n              </AccordionHeaderTitle>\n              <AccordionHeaderSubTitle>\n                Helps you manage Fleet utilization\n              </AccordionHeaderSubTitle>\n            </>\n          ),\n          content: (\n            <AccordionContent>\n              {Array(10)\n                .fill(0)\n                .map((_, i) => (\n                  <div key={i}>Line {i + 1} </div>\n                ))}\n            </AccordionContent>\n          )\n        }}\n      </Accordian>\n      <Accordian id='2' expanded={expanded === '2'} onToggle={handleToggle} onToggleSwitch={handleToggleChange} showToggleSwitch={true} toggleSwitchDisable={true} isToggleChecked={true}>\n        {{\n          header: (\n            <>\n              <AccordionHeaderTitle>Send Activation Link</AccordionHeaderTitle>\n              <AccordionHeaderSubTitle>\n                Send an activation link to the mobile number of a newly created\n                Delivery Associate.\n              </AccordionHeaderSubTitle>\n            </>\n          ),\n          content: (\n            <AccordionContent>\n              {Array(5)\n                .fill(0)\n                .map((_, i) => (\n                  <div key={i}>Line {i + 1} </div>\n                ))}\n            </AccordionContent>\n          )\n        }}\n      </Accordian>\n      <Accordian id='3' expanded={expanded === '3'} onToggle={handleToggle} onToggleSwitch={handleToggleChange}>\n        {{\n          header: (\n            <>\n              <AccordionHeaderTitle>\n                Delivery Associates Skill-sets configuration\n              </AccordionHeaderTitle>\n              <AccordionHeaderSubTitle>\n                Select specific skills while adding a Delivery Associate.\n                LogiNext Route planning will automatically assign the Shipments\n                that a Delivery Associate is skilled to perform.\n              </AccordionHeaderSubTitle>\n            </>\n          ),\n          content: (\n            <AccordionContent>\n              {Array(15)\n                .fill(0)\n                .map((_, i) => (\n                  <div key={i}>Line {i + 1} </div>\n                ))}\n            </AccordionContent>\n          )\n        }}\n      </Accordian>\n    </>\n  )\n}\nexport const Default = addSourceDecorator(addSourceDecorator(addSourceDecorator(() => {\n  return (\n    <ThemeWrapper>\n      <Box p='1em' bgColor='grey.50'>\n        <AccordionComponent />\n      </Box>\n    </ThemeWrapper>\n  )\n}, {__STORY__, __ADDS_MAP__,__MAIN_FILE_LOCATION__,__MODULE_DEPENDENCIES__,__LOCAL_DEPENDENCIES__,__SOURCE_PREFIX__,__IDS_TO_FRAMEWORKS__}), {__STORY__, __ADDS_MAP__,__MAIN_FILE_LOCATION__,__MODULE_DEPENDENCIES__,__LOCAL_DEPENDENCIES__,__SOURCE_PREFIX__,__IDS_TO_FRAMEWORKS__}), {__STORY__, __ADDS_MAP__,__MAIN_FILE_LOCATION__,__MODULE_DEPENDENCIES__,__LOCAL_DEPENDENCIES__,__SOURCE_PREFIX__,__IDS_TO_FRAMEWORKS__});"],"sourceRoot":""},"metadata":{},"sourceType":"module"}