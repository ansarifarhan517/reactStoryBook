{"ast":null,"code":"var _this = this,\n    _jsxFileName = \"/Users/farhanansari/Code/ui-library/src/components/molecules/MultiSelect/components/CheckboxOptions/index.tsx\";\n\nimport React from 'react';\nimport makeAnimated from 'react-select/animated';\nimport { components } from 'react-select';\nimport Checkbox from '../../../../atoms/Checkbox';\nimport { StyledCheckBoxlabel, OptionCheckboxStyled } from '../../MutiSelect.styled';\n\nvar shouldBeDisabled = function shouldBeDisabled(optionSelected, maximumSelected, value) {\n  return optionSelected.length >= maximumSelected && !optionSelected.find(function (a) {\n    return a.value === value;\n  });\n};\n\nexport var Option = function Option(props) {\n  return /*#__PURE__*/React.createElement(OptionCheckboxStyled, {\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 22,\n      columnNumber: 5\n    }\n  }, /*#__PURE__*/React.createElement(components.Option, Object.assign({}, props, {\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 23,\n      columnNumber: 7\n    }\n  }), /*#__PURE__*/React.createElement(Checkbox, {\n    id: 'id-' + props.value,\n    disabled: React.useMemo(function () {\n      return shouldBeDisabled(props.optionSelected, props.maximumSelected, props.value);\n    }, [props.optionSelected, props.maximumSelected, props.value]),\n    type: \"checkbox\",\n    checked: props.isSelected,\n    onChange: function onChange() {\n      return null;\n    },\n    checkboxSize: \"md\",\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 24,\n      columnNumber: 9\n    }\n  }), ' ', /*#__PURE__*/React.createElement(StyledCheckBoxlabel, {\n    title: props.label,\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 40,\n      columnNumber: 9\n    }\n  }, props.label)));\n};\nexport var AnimatedComponents = makeAnimated();\nOption.__docgenInfo = {\n  \"description\": \"\",\n  \"methods\": [],\n  \"displayName\": \"Option\"\n};\n\nif (typeof STORYBOOK_REACT_CLASSES !== \"undefined\") {\n  STORYBOOK_REACT_CLASSES[\"src/components/molecules/MultiSelect/components/CheckboxOptions/index.tsx\"] = {\n    name: \"Option\",\n    docgenInfo: Option.__docgenInfo,\n    path: \"src/components/molecules/MultiSelect/components/CheckboxOptions/index.tsx\"\n  };\n}","map":{"version":3,"sources":["/Users/farhanansari/Code/ui-library/src/components/molecules/MultiSelect/components/CheckboxOptions/index.tsx"],"names":["React","makeAnimated","components","Checkbox","StyledCheckBoxlabel","OptionCheckboxStyled","shouldBeDisabled","optionSelected","maximumSelected","value","length","find","a","Option","props","useMemo","isSelected","label","AnimatedComponents"],"mappings":";;;AAAA,OAAOA,KAAP,MAAkB,OAAlB;AACA,OAAOC,YAAP,MAAyB,uBAAzB;AACA,SAASC,UAAT,QAA2B,cAA3B;AACA,OAAOC,QAAP,MAAqB,4BAArB;AAGA,SACEC,mBADF,EAEEC,oBAFF,QAGO,yBAHP;;AAKA,IAAMC,gBAAgB,GAAG,SAAnBA,gBAAmB,CACvBC,cADuB,EAEvBC,eAFuB,EAGvBC,KAHuB;AAAA,SAKvBF,cAAc,CAACG,MAAf,IAAyBF,eAAzB,IACA,CAACD,cAAc,CAACI,IAAf,CAAoB,UAACC,CAAD;AAAA,WAA4BA,CAAC,CAACH,KAAF,KAAYA,KAAxC;AAAA,GAApB,CANsB;AAAA,CAAzB;;AAQA,OAAO,IAAMI,MAAM,GAAG,SAATA,MAAS,CAACC,KAAD,EAAgB;AACpC,sBACE,oBAAC,oBAAD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,kBACE,oBAAC,UAAD,CAAY,MAAZ,oBAAuBA,KAAvB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,mBACE,oBAAC,QAAD;AACE,IAAA,EAAE,EAAE,QAAQA,KAAK,CAACL,KADpB;AAEE,IAAA,QAAQ,EAAET,KAAK,CAACe,OAAN,CACR;AAAA,aACET,gBAAgB,CACdQ,KAAK,CAACP,cADQ,EAEdO,KAAK,CAACN,eAFQ,EAGdM,KAAK,CAACL,KAHQ,CADlB;AAAA,KADQ,EAOR,CAACK,KAAK,CAACP,cAAP,EAAuBO,KAAK,CAACN,eAA7B,EAA8CM,KAAK,CAACL,KAApD,CAPQ,CAFZ;AAWE,IAAA,IAAI,EAAC,UAXP;AAYE,IAAA,OAAO,EAAEK,KAAK,CAACE,UAZjB;AAaE,IAAA,QAAQ,EAAE;AAAA,aAAM,IAAN;AAAA,KAbZ;AAcE,IAAA,YAAY,EAAC,IAdf;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,IADF,EAgBK,GAhBL,eAiBE,oBAAC,mBAAD;AAAqB,IAAA,KAAK,EAAEF,KAAK,CAACG,KAAlC;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KACGH,KAAK,CAACG,KADT,CAjBF,CADF,CADF;AAyBD,CA1BM;AA4BP,OAAO,IAAMC,kBAAkB,GAAGjB,YAAY,EAAvC","sourcesContent":["import React from 'react'\nimport makeAnimated from 'react-select/animated'\nimport { components } from 'react-select'\nimport Checkbox from '../../../../atoms/Checkbox'\nimport { IMultiSelectOptions } from '../../interfaces'\n\nimport {\n  StyledCheckBoxlabel,\n  OptionCheckboxStyled\n} from '../../MutiSelect.styled'\n\nconst shouldBeDisabled = (\n  optionSelected: IMultiSelectOptions[],\n  maximumSelected: number,\n  value: string\n) =>\n  optionSelected.length >= maximumSelected &&\n  !optionSelected.find((a: IMultiSelectOptions) => a.value === value)\n\nexport const Option = (props: any) => {\n  return (\n    <OptionCheckboxStyled>\n      <components.Option {...props}>\n        <Checkbox\n          id={'id-' + props.value}\n          disabled={React.useMemo(\n            () =>\n              shouldBeDisabled(\n                props.optionSelected,\n                props.maximumSelected,\n                props.value\n              ),\n            [props.optionSelected, props.maximumSelected, props.value]\n          )}\n          type='checkbox'\n          checked={props.isSelected}\n          onChange={() => null}\n          checkboxSize='md'\n        />{' '}\n        <StyledCheckBoxlabel title={props.label}>\n          {props.label}\n        </StyledCheckBoxlabel>\n      </components.Option>\n    </OptionCheckboxStyled>\n  )\n}\n\nexport const AnimatedComponents = makeAnimated()\n"]},"metadata":{},"sourceType":"module"}