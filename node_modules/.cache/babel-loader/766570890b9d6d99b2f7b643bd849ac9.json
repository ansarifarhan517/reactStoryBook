{"ast":null,"code":"var _this = this,\n    _jsxFileName = \"/Users/farhanansari/Code/ui-library/src/components/organisms/AdvancedFilter/components/CardHeader/index.tsx\";\n\nimport React from 'react';\nimport { FilterCardHeaderStyled, IconWrappers, TextInputStyled } from './styled';\nimport IconButton from '../../../../atoms/IconButton';\nimport FontIcon from '../../../../atoms/FontIcon';\nimport TextInput from '../../../../molecules/TextInput';\n\nvar CardHeader = function CardHeader(_ref) {\n  var id = _ref.id,\n      label = _ref.label,\n      name = _ref.name,\n      setName = _ref.setName,\n      save = _ref.save,\n      saveTooltip = _ref.saveTooltip,\n      duplicateTooltip = _ref.duplicateTooltip,\n      cancelTooltip = _ref.cancelTooltip,\n      favouriteTooltip = _ref.favouriteTooltip,\n      duplicate = _ref.duplicate,\n      favourite = _ref.favourite,\n      isFavourite = _ref.isFavourite,\n      allowFavourites = _ref.allowFavourites,\n      close = _ref.close;\n  return /*#__PURE__*/React.createElement(FilterCardHeaderStyled, {\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 25,\n      columnNumber: 5\n    }\n  }, /*#__PURE__*/React.createElement(\"span\", {\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 26,\n      columnNumber: 7\n    }\n  }, label, /*#__PURE__*/React.createElement(FontIcon, {\n    variant: \"angle-right-thin\",\n    color: \"white\",\n    size: 10,\n    style: {\n      padding: '0px 5px'\n    },\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 28,\n      columnNumber: 9\n    }\n  }), /*#__PURE__*/React.createElement(TextInputStyled, {\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 35,\n      columnNumber: 9\n    }\n  }, /*#__PURE__*/React.createElement(TextInput, {\n    id: \"filterName\",\n    name: \"filterName\",\n    className: \"filterNameClassName\",\n    placeholder: \"Enter Name ...\",\n    onChange: function onChange(e) {\n      return setName && setName(e.target.value);\n    },\n    variant: \"inline-edit\",\n    value: name,\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 36,\n      columnNumber: 11\n    }\n  }))), /*#__PURE__*/React.createElement(IconWrappers, {\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 47,\n      columnNumber: 7\n    }\n  }, /*#__PURE__*/React.createElement(IconButton, {\n    id: \"save-filter-button\",\n    title: saveTooltip,\n    onClick: save,\n    onlyIcon: true,\n    iconVariant: \"icomoon-save\",\n    iconSize: 15,\n    color: \"white\",\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 48,\n      columnNumber: 9\n    }\n  }), allowFavourites && id && isFavourite ? /*#__PURE__*/React.createElement(IconButton, {\n    id: \"favorite-filter-button\",\n    title: favouriteTooltip,\n    onClick: favourite,\n    onlyIcon: true,\n    iconVariant: \"star-filled\",\n    iconSize: 15,\n    color: \"white\",\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 58,\n      columnNumber: 11\n    }\n  }) : allowFavourites && id && /*#__PURE__*/React.createElement(IconButton, {\n    id: \"favorite-filter-button\",\n    title: favouriteTooltip,\n    onClick: favourite,\n    onlyIcon: true,\n    iconVariant: \"star-empty\",\n    iconSize: 15,\n    color: \"white\",\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 70,\n      columnNumber: 13\n    }\n  }), id && /*#__PURE__*/React.createElement(IconButton, {\n    id: \"copy-filter-button\",\n    title: duplicateTooltip,\n    onClick: duplicate,\n    onlyIcon: true,\n    iconVariant: \"copy-empty\",\n    iconSize: 15,\n    color: \"white\",\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 82,\n      columnNumber: 11\n    }\n  }), /*#__PURE__*/React.createElement(IconButton, {\n    id: \"close-filter-button\",\n    title: cancelTooltip,\n    onClick: close,\n    onlyIcon: true,\n    iconVariant: \"close\",\n    iconSize: 12,\n    color: \"white\",\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 93,\n      columnNumber: 9\n    }\n  })));\n};\n\nCardHeader.__docgenInfo = {\n  \"description\": \"\",\n  \"methods\": [],\n  \"displayName\": \"CardHeader\"\n};\nexport default CardHeader;\n\nif (typeof STORYBOOK_REACT_CLASSES !== \"undefined\") {\n  STORYBOOK_REACT_CLASSES[\"src/components/organisms/AdvancedFilter/components/CardHeader/index.tsx\"] = {\n    name: \"CardHeader\",\n    docgenInfo: CardHeader.__docgenInfo,\n    path: \"src/components/organisms/AdvancedFilter/components/CardHeader/index.tsx\"\n  };\n}","map":{"version":3,"sources":["/Users/farhanansari/Code/ui-library/src/components/organisms/AdvancedFilter/components/CardHeader/index.tsx"],"names":["React","FilterCardHeaderStyled","IconWrappers","TextInputStyled","IconButton","FontIcon","TextInput","CardHeader","id","label","name","setName","save","saveTooltip","duplicateTooltip","cancelTooltip","favouriteTooltip","duplicate","favourite","isFavourite","allowFavourites","close","padding","e","target","value"],"mappings":"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","sourcesContent":["import React from 'react'\nimport { FilterCardHeaderStyled, IconWrappers, TextInputStyled } from './styled'\nimport IconButton from '../../../../atoms/IconButton'\nimport FontIcon from '../../../../atoms/FontIcon'\nimport TextInput from '../../../../molecules/TextInput'\nimport { IAdvancedFilterCardHeader } from '../../interfaces'\n\nconst CardHeader = ({\n  id,\n  label,\n  name,\n  setName,\n  save,\n  saveTooltip,\n  duplicateTooltip,\n  cancelTooltip,\n  favouriteTooltip,\n  duplicate,\n  favourite,\n  isFavourite,\n  allowFavourites,\n  close\n}: IAdvancedFilterCardHeader) => {\n  return (\n    <FilterCardHeaderStyled>\n      <span>\n        {label}\n        <FontIcon\n          variant='angle-right-thin'\n          color='white'\n          size={10}\n          style={{ padding: '0px 5px' }}\n        />\n\n        <TextInputStyled>\n          <TextInput\n            id='filterName'\n            name='filterName'\n            className='filterNameClassName'\n            placeholder='Enter Name ...'\n            onChange={(e) => setName && setName(e.target.value)}\n            variant='inline-edit'\n            value={name}\n          />\n        </TextInputStyled>\n      </span>\n      <IconWrappers>\n        <IconButton\n          id='save-filter-button'\n          title={saveTooltip}\n          onClick={save}\n          onlyIcon\n          iconVariant='icomoon-save'\n          iconSize={15}\n          color='white'\n        />\n        {allowFavourites && id && isFavourite ? (\n          <IconButton\n            id='favorite-filter-button'\n            title={favouriteTooltip}\n            onClick={favourite}\n            onlyIcon\n            iconVariant='star-filled'\n            iconSize={15}\n            color='white'\n          />\n        ) : (\n          allowFavourites &&\n          id && (\n            <IconButton\n              id='favorite-filter-button'\n              title={favouriteTooltip}\n              onClick={favourite}\n              onlyIcon\n              iconVariant='star-empty'\n              iconSize={15}\n              color='white'\n            />\n          )\n        )}\n        {id && (\n          <IconButton\n            id='copy-filter-button'\n            title={duplicateTooltip}\n            onClick={duplicate}\n            onlyIcon\n            iconVariant='copy-empty'\n            iconSize={15}\n            color='white'\n          />\n        )}\n\n        <IconButton\n          id='close-filter-button'\n          title={cancelTooltip}\n          onClick={close}\n          onlyIcon\n          iconVariant='close'\n          iconSize={12}\n          color='white'\n        />\n      </IconWrappers>\n    </FilterCardHeaderStyled>\n  )\n}\nexport default CardHeader\n"]},"metadata":{},"sourceType":"module"}