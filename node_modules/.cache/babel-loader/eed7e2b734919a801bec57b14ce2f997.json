{"ast":null,"code":"import _objectWithoutProperties from \"/Users/farhanansari/Desktop/CODE/PrxProject/untitled folder/reactStoryBook/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/objectWithoutProperties\";\nimport _objectSpread from \"/Users/farhanansari/Desktop/CODE/PrxProject/untitled folder/reactStoryBook/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/objectSpread2\";\nimport _slicedToArray from \"/Users/farhanansari/Desktop/CODE/PrxProject/untitled folder/reactStoryBook/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/slicedToArray\";\n\nvar _this = this,\n    _jsxFileName = \"/Users/farhanansari/Desktop/CODE/PrxProject/untitled folder/reactStoryBook/src/components/atoms/SettingBox/Type/CheckboxOption.tsx\";\n\nimport React, { Fragment, useEffect, useState } from 'react';\nimport Checkbox from '../../Checkbox';\nimport { CheckBoxLabel, StyledColorCircle } from '../../Checkbox/Checkbox.styled';\nimport { StyledSettingOption } from '../StyledSettingBox';\n\nvar CheckboxOption = function CheckboxOption(_ref) {\n  var settingOption = _ref.settingOption,\n      onChange = _ref.onChange,\n      settingConfig = _ref.settingConfig,\n      checkboxSubOption = _ref.checkboxSubOption,\n      heatMap = _ref.heatMap;\n\n  var _useState = useState(settingOption),\n      _useState2 = _slicedToArray(_useState, 2),\n      settings = _useState2[0],\n      setSettingOptions = _useState2[1];\n\n  var _useState3 = useState(checkboxSubOption || (settingOption === null || settingOption === void 0 ? void 0 : settingOption.option)),\n      _useState4 = _slicedToArray(_useState3, 2),\n      options = _useState4[0],\n      setOptions = _useState4[1]; // for hatmap and marker- map mode , if both the values  dont have permission,dont show section or else show whatever have permission\n\n\n  var _settings$permission = settings.permission,\n      permission = _settings$permission === void 0 ? true : _settings$permission;\n  useEffect(function () {\n    setSettingOptions(settingOption);\n    setOptions(checkboxSubOption);\n  }, [settingOption, checkboxSubOption]);\n\n  var handleChange = function handleChange(isChecked, entry) {\n    // once we change the parent we have to change whole data and send to parent settingbody\n    // update parent radio selection in object\n    var newOption = options.map(function (option) {\n      option.checked = option.id === entry.id ? isChecked : !!option.checked;\n      return option;\n    });\n    setOptions(newOption);\n\n    var toggleOption = _objectSpread(_objectSpread({}, settings), {}, {\n      option: newOption\n    });\n\n    setSettingOptions(_objectSpread(_objectSpread({}, settings), {}, {\n      option: newOption\n    })); // new option group will be updated in setting config to pass it to map\n\n    var newSetting = settingConfig.map(function (option) {\n      return option.title === toggleOption.title ? toggleOption : option;\n    }); // updated data config will be sent to body to send it to map component\n\n    onChange(newSetting);\n  };\n\n  return settings.title && permission ? /*#__PURE__*/React.createElement(StyledSettingOption, {\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 49,\n      columnNumber: 5\n    }\n  }, /*#__PURE__*/React.createElement(\"div\", {\n    className: \"title\",\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 50,\n      columnNumber: 7\n    }\n  }, settings.label || settings.title), /*#__PURE__*/React.createElement(\"div\", {\n    style: {\n      marginTop: '25px'\n    },\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 51,\n      columnNumber: 7\n    }\n  }, options.map(function (_ref2) {\n    var image = _ref2.image,\n        _ref2$permission = _ref2.permission,\n        permission = _ref2$permission === void 0 ? true : _ref2$permission,\n        entry = _objectWithoutProperties(_ref2, [\"image\", \"permission\"]);\n\n    return permission ? /*#__PURE__*/React.createElement(\"div\", {\n      key: \"\".concat(entry === null || entry === void 0 ? void 0 : entry.value, \"-\").concat(entry === null || entry === void 0 ? void 0 : entry.color, \"-\").concat(entry === null || entry === void 0 ? void 0 : entry.id),\n      style: {\n        marginLeft: '0.5em',\n        marginBottom: '0.5em',\n        marginTop: '0.5em'\n      },\n      __self: _this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 54,\n        columnNumber: 13\n      }\n    }, /*#__PURE__*/React.createElement(Checkbox, {\n      id: entry.id,\n      onChange: function onChange(_e) {\n        handleChange(!entry.checked, entry);\n      },\n      disabled: !!entry.disabled,\n      checked: !!entry.checked,\n      label: \"\",\n      checkboxSize: 12,\n      color: heatMap ? '#979797' : entry === null || entry === void 0 ? void 0 : entry.color,\n      customStyle: \"border-radius:2px;\",\n      labelComponent: /*#__PURE__*/React.createElement(Fragment, {\n        __self: _this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 74,\n          columnNumber: 19\n        }\n      }, /*#__PURE__*/React.createElement(StyledColorCircle, {\n        color: entry === null || entry === void 0 ? void 0 : entry.color,\n        disabled: !!entry.disabled,\n        checkboxSize: \"md\",\n        checked: !!entry.checked,\n        __self: _this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 75,\n          columnNumber: 21\n        }\n      }), /*#__PURE__*/React.createElement(CheckBoxLabel, {\n        style: {\n          fontSize: '13px',\n          marginBottom: '0.5em'\n        },\n        htmlFor: entry.id,\n        __self: _this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 81,\n          columnNumber: 21\n        }\n      }, \"\".concat(entry.value, \" \\n                      \").concat((entry === null || entry === void 0 ? void 0 : entry.extraInfo) ? \"(\".concat(entry === null || entry === void 0 ? void 0 : entry.extraInfo, \")\") : ''))),\n      __self: _this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 62,\n        columnNumber: 15\n      }\n    })) : null;\n  }))) : null;\n};\n\nexport default CheckboxOption;","map":{"version":3,"sources":["/Users/farhanansari/Desktop/CODE/PrxProject/untitled folder/reactStoryBook/src/components/atoms/SettingBox/Type/CheckboxOption.tsx"],"names":["React","Fragment","useEffect","useState","Checkbox","CheckBoxLabel","StyledColorCircle","StyledSettingOption","CheckboxOption","settingOption","onChange","settingConfig","checkboxSubOption","heatMap","settings","setSettingOptions","option","options","setOptions","permission","handleChange","isChecked","entry","newOption","map","checked","id","toggleOption","newSetting","title","label","marginTop","image","value","color","marginLeft","marginBottom","_e","disabled","fontSize","extraInfo"],"mappings":"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","sourcesContent":["import React, { Fragment, useEffect, useState } from 'react'\nimport Checkbox from '../../Checkbox'\nimport {\n  CheckBoxLabel,\n  StyledColorCircle\n} from '../../Checkbox/Checkbox.styled'\nimport { IOption, ISettingOption, ISubComponent } from '../interface'\nimport { StyledSettingOption } from '../StyledSettingBox'\n\nconst CheckboxOption = ({\n  settingOption,\n  onChange,\n  settingConfig,\n  checkboxSubOption,\n  heatMap\n}: ISubComponent) => {\n  const [settings, setSettingOptions] = useState<ISettingOption>(settingOption)\n  const [options, setOptions] = useState(\n    checkboxSubOption || settingOption?.option\n  )\n  // for hatmap and marker- map mode , if both the values  dont have permission,dont show section or else show whatever have permission\n  const { permission = true } = settings\n\n  useEffect(() => {\n    setSettingOptions(settingOption)\n    setOptions(checkboxSubOption)\n  }, [settingOption, checkboxSubOption])\n\n  const handleChange = (isChecked: boolean, entry: IOption) => {\n    // once we change the parent we have to change whole data and send to parent settingbody\n    // update parent radio selection in object\n    const newOption = options.map((option: IOption) => {\n      option.checked = option.id === entry.id ? isChecked : !!option.checked\n      return option\n    })\n    setOptions(newOption)\n    const toggleOption = { ...settings, option: newOption }\n    setSettingOptions({ ...settings, option: newOption })\n    // new option group will be updated in setting config to pass it to map\n    const newSetting = settingConfig.map((option: ISettingOption) =>\n      option.title === toggleOption.title ? toggleOption : option\n    )\n\n    // updated data config will be sent to body to send it to map component\n    onChange(newSetting)\n  }\n\n  return settings.title && permission ? (\n    <StyledSettingOption>\n      <div className='title'>{settings.label || settings.title}</div>\n      <div style={{ marginTop: '25px' }}>\n        {options.map(({ image, permission = true, ...entry }: IOption) => {\n          return permission ? (\n            <div\n              key={`${entry?.value}-${entry?.color}-${entry?.id}`}\n              style={{\n                marginLeft: '0.5em',\n                marginBottom: '0.5em',\n                marginTop: '0.5em'\n              }}\n            >\n              <Checkbox\n                id={entry.id}\n                onChange={(_e) => {\n                  handleChange(!entry.checked, entry)\n                }}\n                disabled={!!entry.disabled}\n                checked={!!entry.checked}\n                label=''\n                checkboxSize={12}\n                color={heatMap ? '#979797' : entry?.color}\n                customStyle='border-radius:2px;'\n                labelComponent={\n                  <Fragment>\n                    <StyledColorCircle\n                      color={entry?.color}\n                      disabled={!!entry.disabled}\n                      checkboxSize='md'\n                      checked={!!entry.checked}\n                    />\n                    <CheckBoxLabel\n                      style={{ fontSize: '13px', marginBottom: '0.5em' }}\n                      htmlFor={entry.id}\n                    >\n                      {`${entry.value} \n                      ${entry?.extraInfo ? `(${entry?.extraInfo})` : ''}`}\n                    </CheckBoxLabel>\n                  </Fragment>\n                }\n              />\n            </div>\n          ) : null\n        })}\n      </div>\n    </StyledSettingOption>\n  ) : null\n}\nexport default CheckboxOption\n"]},"metadata":{},"sourceType":"module"}