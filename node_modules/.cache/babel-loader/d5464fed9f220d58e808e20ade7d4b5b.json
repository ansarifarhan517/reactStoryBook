{"ast":null,"code":"import _toConsumableArray from \"/Users/farhanansari/Desktop/CODE/PrxProject/untitled folder/reactStoryBook/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/toConsumableArray\";\nimport _objectSpread from \"/Users/farhanansari/Desktop/CODE/PrxProject/untitled folder/reactStoryBook/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/objectSpread2\";\nimport _slicedToArray from \"/Users/farhanansari/Desktop/CODE/PrxProject/untitled folder/reactStoryBook/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/slicedToArray\";\nimport _objectWithoutProperties from \"/Users/farhanansari/Desktop/CODE/PrxProject/untitled folder/reactStoryBook/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/objectWithoutProperties\";\n\nvar _this = this,\n    _jsxFileName = \"/Users/farhanansari/Desktop/CODE/PrxProject/untitled folder/reactStoryBook/src/components/molecules/ShiftTimings/index.tsx\";\n\nimport React, { useState } from 'react'; // import IconButton from '../../atoms/IconButton'\n\nimport TimePicker from './components/TimePicker';\nimport Position from '../../molecules/Position';\nimport { ShiftTimingSetStyled, ShiftTimingsContainer, IconButtonStyled } from './styled';\nimport Grid from '../../atoms/Grid';\nimport InputLabel from '../InputLabel';\nvar defaultArray = [{\n  id: new Date().getTime().toString(),\n  fromValue: undefined,\n  toValue: undefined\n}];\n\nvar ShiftTimings = function ShiftTimings(_ref) {\n  var fromLabel = _ref.fromLabel,\n      toLabel = _ref.toLabel,\n      fromError = _ref.fromError,\n      toError = _ref.toError,\n      fromErrorMessage = _ref.fromErrorMessage,\n      toErrorMessage = _ref.toErrorMessage,\n      _ref$timeFormat = _ref.timeFormat,\n      timeFormat = _ref$timeFormat === void 0 ? 24 : _ref$timeFormat,\n      _ref$timeInterval = _ref.timeInterval,\n      timeInterval = _ref$timeInterval === void 0 ? 15 : _ref$timeInterval,\n      _ref$onFromChange = _ref.onFromChange,\n      onFromChange = _ref$onFromChange === void 0 ? function () {} : _ref$onFromChange,\n      _ref$onToChange = _ref.onToChange,\n      onToChange = _ref$onToChange === void 0 ? function () {} : _ref$onToChange,\n      _ref$onRemove = _ref.onRemove,\n      onRemove = _ref$onRemove === void 0 ? function () {} : _ref$onRemove,\n      _ref$onAdd = _ref.onAdd,\n      onAdd = _ref$onAdd === void 0 ? function () {} : _ref$onAdd,\n      _ref$onChange = _ref.onChange,\n      onChange = _ref$onChange === void 0 ? function () {} : _ref$onChange,\n      _ref$selected = _ref.selected,\n      selected = _ref$selected === void 0 ? defaultArray : _ref$selected,\n      stringToTime = _ref.stringToTime,\n      timeToString = _ref.timeToString,\n      _ref$label = _ref.label,\n      label = _ref$label === void 0 ? '' : _ref$label,\n      labelColor = _ref.labelColor,\n      _ref$required = _ref.required,\n      required = _ref$required === void 0 ? false : _ref$required,\n      _ref$id = _ref.id,\n      id = _ref$id === void 0 ? '' : _ref$id,\n      rest = _objectWithoutProperties(_ref, [\"fromLabel\", \"toLabel\", \"fromError\", \"toError\", \"fromErrorMessage\", \"toErrorMessage\", \"timeFormat\", \"timeInterval\", \"onFromChange\", \"onToChange\", \"onRemove\", \"onAdd\", \"onChange\", \"selected\", \"stringToTime\", \"timeToString\", \"label\", \"labelColor\", \"required\", \"id\"]);\n\n  var _useState = useState({\n    shiftTimingArray: selected,\n    id: '',\n    time: undefined\n  }),\n      _useState2 = _slicedToArray(_useState, 2),\n      shiftTimings = _useState2[0],\n      setShiftTimings = _useState2[1];\n\n  React.useEffect(function () {\n    setShiftTimings(_objectSpread(_objectSpread({}, shiftTimings), {}, {\n      shiftTimingArray: selected || defaultArray\n    }));\n  }, [selected]);\n  React.useEffect(function () {\n    onChange('event', shiftTimings.id, shiftTimings.time, shiftTimings.shiftTimingArray);\n  }, [shiftTimings]);\n\n  var handleTimeChange = function handleTimeChange(id, date) {\n    var time = Array.isArray(date) ? date[0] : date === null ? undefined : date;\n    var from = id.substring(0, 4) === 'From';\n    var shiftTimingsId = id.substring(0, 4) === 'From' ? id.slice(4, id.length) : id.slice(2, id.length);\n    setShiftTimings({\n      id: id,\n      time: time,\n      shiftTimingArray: shiftTimings.shiftTimingArray.map(function (item) {\n        return item.id === shiftTimingsId ? {\n          id: item.id,\n          fromValue: from ? time : item.fromValue,\n          toValue: !from ? time : item.toValue\n        } : _objectSpread({}, item);\n      })\n    });\n  };\n\n  var handleRemove = function handleRemove(id) {\n    shiftTimings.shiftTimingArray.length > 1 && setShiftTimings(_objectSpread(_objectSpread({}, shiftTimings), {}, {\n      shiftTimingArray: shiftTimings.shiftTimingArray.filter(function (item) {\n        return item.id !== id ? item : null;\n      })\n    }));\n  };\n\n  var handleAdd = function handleAdd() {\n    var temp = {\n      id: new Date().getTime().toString(),\n      fromValue: undefined,\n      toValue: undefined\n    };\n    setShiftTimings(_objectSpread(_objectSpread({}, shiftTimings), {}, {\n      shiftTimingArray: [].concat(_toConsumableArray(shiftTimings.shiftTimingArray), [temp])\n    }));\n  };\n\n  return /*#__PURE__*/React.createElement(Position, Object.assign({\n    type: \"relative\",\n    display: \"block\"\n  }, rest, {\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 116,\n      columnNumber: 5\n    }\n  }), /*#__PURE__*/React.createElement(ShiftTimingsContainer, {\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 117,\n      columnNumber: 7\n    }\n  }, shiftTimings.shiftTimingArray.map(function (_ref2, index) {\n    var id = _ref2.id,\n        fromValue = _ref2.fromValue,\n        toValue = _ref2.toValue;\n    return /*#__PURE__*/React.createElement(ShiftTimingSetStyled, {\n      key: id,\n      __self: _this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 121,\n        columnNumber: 15\n      }\n    }, /*#__PURE__*/React.createElement(Grid, {\n      container: true // spacing='5px'\n      ,\n      style: {\n        display: 'flex',\n        alignItems: 'center'\n      },\n      className: \"gridContainer\",\n      __self: _this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 122,\n        columnNumber: 17\n      }\n    }, /*#__PURE__*/React.createElement(Grid, {\n      item: true,\n      xs: 5,\n      __self: _this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 128,\n        columnNumber: 19\n      }\n    }, /*#__PURE__*/React.createElement(TimePicker, {\n      label: fromLabel,\n      error: fromError,\n      errorMessage: fromErrorMessage,\n      placeholder: \"From\" // textInputWidth={textInputWidth}\n      ,\n      timeFormat: timeFormat,\n      timeInterval: timeInterval,\n      id: 'From' + id,\n      time: fromValue || undefined,\n      onChange: function onChange(id, time) {\n        handleTimeChange(id, time);\n      },\n      stringToTime: stringToTime,\n      timeToString: timeToString,\n      __self: _this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 129,\n        columnNumber: 21\n      }\n    })), /*#__PURE__*/React.createElement(Grid, {\n      item: true,\n      xs: 5,\n      __self: _this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 146,\n        columnNumber: 19\n      }\n    }, /*#__PURE__*/React.createElement(TimePicker, {\n      label: toLabel,\n      error: toError,\n      errorMessage: toErrorMessage,\n      placeholder: \"To\" // textInputWidth={textInputWidth}\n      ,\n      timeFormat: timeFormat,\n      timeInterval: timeInterval,\n      id: 'To' + id,\n      time: toValue || undefined,\n      onChange: function onChange(id, time) {\n        handleTimeChange(id, time);\n      },\n      stringToTime: stringToTime,\n      timeToString: timeToString,\n      __self: _this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 147,\n        columnNumber: 21\n      }\n    })), shiftTimings.shiftTimingArray.length > 1 && /*#__PURE__*/React.createElement(Grid, {\n      item: true,\n      xs: 1,\n      __self: _this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 165,\n        columnNumber: 21\n      }\n    }, /*#__PURE__*/React.createElement(IconButtonStyled, {\n      onClick: function onClick() {\n        handleRemove(id || new Date().getTime().toString());\n        onRemove('remove-' + id);\n      },\n      onlyIcon: true,\n      iconVariant: \"close\",\n      iconSize: 10,\n      hoverFeedback: false,\n      color: \"error.main\",\n      id: 'remove' + id,\n      __self: _this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 166,\n        columnNumber: 23\n      }\n    })), shiftTimings.shiftTimingArray.length - 1 === index && /*#__PURE__*/React.createElement(Grid, {\n      item: true,\n      xs: 1,\n      __self: _this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 181,\n        columnNumber: 21\n      }\n    }, /*#__PURE__*/React.createElement(IconButtonStyled, {\n      onClick: function onClick() {\n        handleAdd();\n        onAdd('add-' + id);\n      },\n      hoverFeedback: false,\n      onlyIcon: true,\n      iconVariant: \"add\",\n      iconSize: 10,\n      color: \"primary.main\",\n      id: 'add' + id,\n      __self: _this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 182,\n        columnNumber: 23\n      }\n    }))));\n  })), /*#__PURE__*/React.createElement(Position, {\n    type: \"absolute\",\n    top: \"-8px\",\n    left: \"10px\",\n    style: {\n      maxWidth: 'calc(100% - 20px)'\n    },\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 202,\n      columnNumber: 7\n    }\n  }, /*#__PURE__*/React.createElement(InputLabel, {\n    required: required,\n    color: labelColor,\n    id: \"\".concat(id, \"-label\") // className={`${className}-label`}\n    ,\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 208,\n      columnNumber: 9\n    }\n  }, label)));\n};\n\nShiftTimings.__docgenInfo = {\n  \"description\": \"\",\n  \"methods\": [],\n  \"displayName\": \"ShiftTimings\",\n  \"props\": {\n    \"timeFormat\": {\n      \"defaultValue\": {\n        \"value\": \"24\",\n        \"computed\": false\n      },\n      \"required\": false\n    },\n    \"timeInterval\": {\n      \"defaultValue\": {\n        \"value\": \"15\",\n        \"computed\": false\n      },\n      \"required\": false\n    },\n    \"onFromChange\": {\n      \"defaultValue\": {\n        \"value\": \"() => {}\",\n        \"computed\": false\n      },\n      \"required\": false\n    },\n    \"onToChange\": {\n      \"defaultValue\": {\n        \"value\": \"() => {}\",\n        \"computed\": false\n      },\n      \"required\": false\n    },\n    \"onRemove\": {\n      \"defaultValue\": {\n        \"value\": \"() => {}\",\n        \"computed\": false\n      },\n      \"required\": false\n    },\n    \"onAdd\": {\n      \"defaultValue\": {\n        \"value\": \"() => {}\",\n        \"computed\": false\n      },\n      \"required\": false\n    },\n    \"onChange\": {\n      \"defaultValue\": {\n        \"value\": \"() => {}\",\n        \"computed\": false\n      },\n      \"required\": false\n    },\n    \"selected\": {\n      \"defaultValue\": {\n        \"value\": \"[\\n  {\\n    id: new Date().getTime().toString(),\\n    fromValue: undefined,\\n    toValue: undefined\\n  }\\n]\",\n        \"computed\": false\n      },\n      \"required\": false\n    },\n    \"label\": {\n      \"defaultValue\": {\n        \"value\": \"''\",\n        \"computed\": false\n      },\n      \"required\": false\n    },\n    \"required\": {\n      \"defaultValue\": {\n        \"value\": \"false\",\n        \"computed\": false\n      },\n      \"required\": false\n    },\n    \"id\": {\n      \"defaultValue\": {\n        \"value\": \"''\",\n        \"computed\": false\n      },\n      \"required\": false\n    }\n  }\n};\nexport default ShiftTimings;\n\nif (typeof STORYBOOK_REACT_CLASSES !== \"undefined\") {\n  STORYBOOK_REACT_CLASSES[\"src/components/molecules/ShiftTimings/index.tsx\"] = {\n    name: \"ShiftTimings\",\n    docgenInfo: ShiftTimings.__docgenInfo,\n    path: \"src/components/molecules/ShiftTimings/index.tsx\"\n  };\n}","map":{"version":3,"sources":["/Users/farhanansari/Desktop/CODE/PrxProject/untitled folder/reactStoryBook/src/components/molecules/ShiftTimings/index.tsx"],"names":["React","useState","TimePicker","Position","ShiftTimingSetStyled","ShiftTimingsContainer","IconButtonStyled","Grid","InputLabel","defaultArray","id","Date","getTime","toString","fromValue","undefined","toValue","ShiftTimings","fromLabel","toLabel","fromError","toError","fromErrorMessage","toErrorMessage","timeFormat","timeInterval","onFromChange","onToChange","onRemove","onAdd","onChange","selected","stringToTime","timeToString","label","labelColor","required","rest","shiftTimingArray","time","shiftTimings","setShiftTimings","useEffect","handleTimeChange","date","Array","isArray","from","substring","shiftTimingsId","slice","length","map","item","handleRemove","filter","handleAdd","temp","index","display","alignItems","maxWidth"],"mappings":"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","sourcesContent":["import React, { useState } from 'react'\n// import IconButton from '../../atoms/IconButton'\nimport TimePicker from './components/TimePicker'\nimport { IShiftTimingsProps, IShiftTimingStateInterface } from './interfaces'\nimport Position from '../../molecules/Position'\nimport {\n  ShiftTimingSetStyled,\n  ShiftTimingsContainer,\n  IconButtonStyled\n} from './styled'\nimport Grid from '../../atoms/Grid'\nimport InputLabel from '../InputLabel'\n\nconst defaultArray = [\n  {\n    id: new Date().getTime().toString(),\n    fromValue: undefined,\n    toValue: undefined\n  }\n]\n\nconst ShiftTimings = ({\n  fromLabel,\n  toLabel,\n  fromError,\n  toError,\n  fromErrorMessage,\n  toErrorMessage,\n  timeFormat = 24,\n  timeInterval = 15,\n  onFromChange = () => {},\n  onToChange = () => {},\n  onRemove = () => {},\n  onAdd = () => {},\n  onChange = () => {},\n  selected = defaultArray,\n  stringToTime,\n  timeToString,\n  label = '',\n  labelColor,\n  required = false,\n  id = '',\n  ...rest\n}: IShiftTimingsProps) => {\n  const [shiftTimings, setShiftTimings] = useState<IShiftTimingStateInterface>({\n    shiftTimingArray: selected,\n    id: '',\n    time: undefined\n  })\n\n  React.useEffect(() => {\n    setShiftTimings({\n      ...shiftTimings,\n      shiftTimingArray: selected || defaultArray\n    })\n  }, [selected])\n\n  React.useEffect(() => {\n    onChange(\n      'event',\n      shiftTimings.id,\n      shiftTimings.time,\n      shiftTimings.shiftTimingArray\n    )\n  }, [shiftTimings])\n\n  const handleTimeChange = (\n    id: string,\n    date: Date | [Date, Date] | undefined\n  ) => {\n    const time = Array.isArray(date)\n      ? date[0]\n      : date === null\n      ? undefined\n      : date\n    const from = id.substring(0, 4) === 'From'\n    const shiftTimingsId =\n      id.substring(0, 4) === 'From'\n        ? id.slice(4, id.length)\n        : id.slice(2, id.length)\n    setShiftTimings({\n      id: id,\n      time: time,\n      shiftTimingArray: shiftTimings.shiftTimingArray.map((item) =>\n        item.id === shiftTimingsId\n          ? {\n              id: item.id,\n              fromValue: from ? time : item.fromValue,\n              toValue: !from ? time : item.toValue\n            }\n          : { ...item }\n      )\n    })\n  }\n  const handleRemove = (id: string) => {\n    shiftTimings.shiftTimingArray.length > 1 &&\n      setShiftTimings({\n        ...shiftTimings,\n        shiftTimingArray: shiftTimings.shiftTimingArray.filter((item) => {\n          return item.id !== id ? item : null\n        })\n      })\n  }\n  const handleAdd = () => {\n    const temp = {\n      id: new Date().getTime().toString(),\n      fromValue: undefined,\n      toValue: undefined\n    }\n    setShiftTimings({\n      ...shiftTimings,\n      shiftTimingArray: [...shiftTimings.shiftTimingArray, temp]\n    })\n  }\n  return (\n    <Position type='relative' display='block' {...rest}>\n      <ShiftTimingsContainer>\n        {shiftTimings.shiftTimingArray.map(\n          ({ id, fromValue, toValue }, index) => {\n            return (\n              <ShiftTimingSetStyled key={id}>\n                <Grid\n                  container\n                  // spacing='5px'\n                  style={{ display: 'flex', alignItems: 'center' }}\n                  className='gridContainer'\n                >\n                  <Grid item xs={5}>\n                    <TimePicker\n                      label={fromLabel}\n                      error={fromError}\n                      errorMessage={fromErrorMessage}\n                      placeholder='From'\n                      // textInputWidth={textInputWidth}\n                      timeFormat={timeFormat}\n                      timeInterval={timeInterval}\n                      id={'From' + id}\n                      time={fromValue || undefined}\n                      onChange={(id, time) => {\n                        handleTimeChange(id, time)\n                      }}\n                      stringToTime={stringToTime}\n                      timeToString={timeToString}\n                    />\n                  </Grid>\n                  <Grid item xs={5}>\n                    <TimePicker\n                      label={toLabel}\n                      error={toError}\n                      errorMessage={toErrorMessage}\n                      placeholder='To'\n                      // textInputWidth={textInputWidth}\n                      timeFormat={timeFormat}\n                      timeInterval={timeInterval}\n                      id={'To' + id}\n                      time={toValue || undefined}\n                      onChange={(id, time) => {\n                        handleTimeChange(id, time)\n                      }}\n                      stringToTime={stringToTime}\n                      timeToString={timeToString}\n                    />\n                  </Grid>\n                  {shiftTimings.shiftTimingArray.length > 1 && (\n                    <Grid item xs={1}>\n                      <IconButtonStyled\n                        onClick={() => {\n                          handleRemove(id || new Date().getTime().toString())\n                          onRemove('remove-' + id)\n                        }}\n                        onlyIcon\n                        iconVariant='close'\n                        iconSize={10}\n                        hoverFeedback={false}\n                        color='error.main'\n                        id={'remove' + id}\n                      />\n                    </Grid>\n                  )}\n                  {shiftTimings.shiftTimingArray.length - 1 === index && (\n                    <Grid item xs={1}>\n                      <IconButtonStyled\n                        onClick={() => {\n                          handleAdd()\n                          onAdd('add-' + id)\n                        }}\n                        hoverFeedback={false}\n                        onlyIcon\n                        iconVariant='add'\n                        iconSize={10}\n                        color='primary.main'\n                        id={'add' + id}\n                      />\n                    </Grid>\n                  )}\n                </Grid>\n              </ShiftTimingSetStyled>\n            )\n          }\n        )}\n      </ShiftTimingsContainer>\n      <Position\n        type='absolute'\n        top='-8px'\n        left='10px'\n        style={{ maxWidth: 'calc(100% - 20px)' }}\n      >\n        <InputLabel\n          required={required}\n          color={labelColor}\n          id={`${id}-label`}\n          // className={`${className}-label`}\n        >\n          {label}\n        </InputLabel>\n      </Position>\n    </Position>\n  )\n}\n\nexport default ShiftTimings\n"]},"metadata":{},"sourceType":"module"}