{"ast":null,"code":"import _slicedToArray from \"/Users/farhanansari/Desktop/CODE/PrxProject/untitled folder/reactStoryBook/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/slicedToArray\";\nimport _taggedTemplateLiteral from \"/Users/farhanansari/Desktop/CODE/PrxProject/untitled folder/reactStoryBook/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/taggedTemplateLiteral\";\n\nvar _this = this,\n    _jsxFileName = \"/Users/farhanansari/Desktop/CODE/PrxProject/untitled folder/reactStoryBook/src/components/molecules/ShowHideColumnPopup/index.tsx\";\n\nfunction _templateObject7() {\n  var data = _taggedTemplateLiteral([\"\\n  position: relative;\\n\"]);\n\n  _templateObject7 = function _templateObject7() {\n    return data;\n  };\n\n  return data;\n}\n\nfunction _templateObject6() {\n  var data = _taggedTemplateLiteral([\"\\n  /*  \\n    margin: 0px 5px;\\n    line-height: 40px;\\n    max-height: 40px;\\n    padding: 10px 15px;\\n  */\\n\\n  span {\\n    text-transform: Capitalize;\\n    letter-spacing: 0.6px;\\n    font-size: 13px;\\n  }\\n\\n  /*\\n    i {\\n      margin-right: 5px;\\n      font-size: 19px;\\n    }\\n  */\\n\"]);\n\n  _templateObject6 = function _templateObject6() {\n    return data;\n  };\n\n  return data;\n}\n\nfunction _templateObject5() {\n  var data = _taggedTemplateLiteral([\"\\n  display: flex;\\n  justify-content: flex-end;\\n  padding: 15px;\\n\"]);\n\n  _templateObject5 = function _templateObject5() {\n    return data;\n  };\n\n  return data;\n}\n\nfunction _templateObject4() {\n  var data = _taggedTemplateLiteral([\"\\n  /* column-count: 2;\\n  font-size: 13px;\\n  color: \", \"; */\\n  max-height: 195px;\\n  overflow-y: scroll;\\n  width: calc(100% + 15px);\\n\"]);\n\n  _templateObject4 = function _templateObject4() {\n    return data;\n  };\n\n  return data;\n}\n\nfunction _templateObject3() {\n  var data = _taggedTemplateLiteral([\"\\n  h4 {\\n    font-weight: \", \";\\n    justify-content: center;\\n    & ~ span {\\n      display: none;\\n    }\\n  }\\n\"]);\n\n  _templateObject3 = function _templateObject3() {\n    return data;\n  };\n\n  return data;\n}\n\nfunction _templateObject2() {\n  var data = _taggedTemplateLiteral([\"\\n  min-width: 350px;\\n  max-width: 600px;\\n  margin-left: auto;\\n  box-shadow: \", \";\\n  label {\\n    display: inline-block;\\n  }\\n  animation: 500ms \", \";\\n  position: absolute;\\n  right: 5px;\\n  z-index: \", \";\\n\\n  & > div {\\n    position: relative;\\n    top: auto;\\n  }\\n\"]);\n\n  _templateObject2 = function _templateObject2() {\n    return data;\n  };\n\n  return data;\n}\n\nfunction _templateObject() {\n  var data = _taggedTemplateLiteral([\"\\n0% {\\n  opacity:0;\\n}\\n100% {\\n  opacity:1;\\n}\\n\"]);\n\n  _templateObject = function _templateObject() {\n    return data;\n  };\n\n  return data;\n}\n\nimport React, { useState } from 'react'; // import Style\n\nimport styled, { keyframes } from 'styled-components'; // import { tVariant } from '../../atoms/Button'\n\nimport CheckboxGroup from '../../atoms/CheckboxGroup';\nimport IconButton from '../../atoms/IconButton'; // import Position from '../../molecules/Position'\n\nimport Modal from '../Modal/ModalWrapper'; // import Helper Components\n\nimport Header from '../ModalHeader';\nimport Tooltip from '../Tooltip';\nimport Box from '../../atoms/Box'; // import Checkbox from '../../atoms/Checkbox'\n\n/**********************************/\n\n/*          MODAL STYLES          */\n\n/**********************************/\nvar FadeIn = keyframes(_templateObject());\nvar ModalWrapper = styled.div(_templateObject2(), function (_ref) {\n  var _theme$shadows;\n\n  var theme = _ref.theme;\n  return \"\".concat(theme === null || theme === void 0 ? void 0 : (_theme$shadows = theme.shadows) === null || _theme$shadows === void 0 ? void 0 : _theme$shadows[\"default\"]);\n}, FadeIn, function (_ref2) {\n  var _theme$zIndex;\n\n  var theme = _ref2.theme;\n  return theme === null || theme === void 0 ? void 0 : (_theme$zIndex = theme.zIndex) === null || _theme$zIndex === void 0 ? void 0 : _theme$zIndex.modal;\n});\nvar ModalHeaderStyled = styled.div(_templateObject3(), function (_ref3) {\n  var _theme$typography;\n\n  var theme = _ref3.theme;\n  return \"\".concat(theme === null || theme === void 0 ? void 0 : (_theme$typography = theme.typography) === null || _theme$typography === void 0 ? void 0 : _theme$typography.fontWeightRegular);\n});\nvar ModalBodyStyled = styled.div(_templateObject4(), function (_ref4) {\n  var _theme$colors, _theme$colors$grey;\n\n  var theme = _ref4.theme;\n  return theme === null || theme === void 0 ? void 0 : (_theme$colors = theme.colors) === null || _theme$colors === void 0 ? void 0 : (_theme$colors$grey = _theme$colors.grey) === null || _theme$colors$grey === void 0 ? void 0 : _theme$colors$grey['800'];\n});\nvar ButtonWrapper = styled.div(_templateObject5());\nvar IconButtonStyled = styled(IconButton)(_templateObject6());\nvar ShowHideWrapper = styled.div(_templateObject7());\n/**********************************/\n\n/*          MODAL COMPONENTS       */\n\n/**********************************/\n\nvar ModalHeader = function ModalHeader() {\n  return /*#__PURE__*/React.createElement(ModalHeaderStyled, {\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 111,\n      columnNumber: 3\n    }\n  }, /*#__PURE__*/React.createElement(Header, {\n    headerTitle: \"Column Settings\",\n    width: \"100%\",\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 112,\n      columnNumber: 5\n    }\n  }));\n};\n\nvar ModalBody = function ModalBody(_ref5) {\n  var _ref5$checkBoxGroupAr = _ref5.checkBoxGroupArray,\n      checkBoxGroupArray = _ref5$checkBoxGroupAr === void 0 ? [] : _ref5$checkBoxGroupAr,\n      _ref5$onCheckBoxChang = _ref5.onCheckBoxChange,\n      onCheckBoxChange = _ref5$onCheckBoxChang === void 0 ? function () {} : _ref5$onCheckBoxChang;\n\n  var _useState = useState(checkBoxGroupArray),\n      _useState2 = _slicedToArray(_useState, 2),\n      checkOptions = _useState2[0],\n      setCheckOptions = _useState2[1];\n\n  React.useEffect(function () {\n    if (checkBoxGroupArray) {\n      setCheckOptions(checkBoxGroupArray);\n    }\n  }, [checkBoxGroupArray]);\n  var handleCheckBoxChange = React.useCallback(function (id, checked) {\n    // const checkedCount =\n    //   checkOptions.filter((option: IOptionType) => option.checked).length +\n    //   (checked ? 1 : -1)\n    // let newCheckboxState = checkOptions.map((option: IOptionType) =>\n    //   option.id === id ? { ...option, checked } : option\n    // )\n    // console.log(checkedCount)\n    // if (checkedCount <= 3) {\n    //   newCheckboxState = newCheckboxState.map((option: IOptionType) =>\n    //     option.checked ? { ...option, disabled: true } : option\n    //   )\n    // } else {\n    //   newCheckboxState = newCheckboxState.map((option: IOptionType) => ({\n    //     ...option,\n    //     disabled: false\n    //   }))\n    // }\n    // console.log(newCheckboxState)\n    onCheckBoxChange(id, checked);\n  }, [onCheckBoxChange, checkOptions]);\n  return /*#__PURE__*/React.createElement(ModalBodyStyled, {\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 158,\n      columnNumber: 5\n    }\n  }, /*#__PURE__*/React.createElement(CheckboxGroup, {\n    orientation: true,\n    spacing: 10,\n    onChange: handleCheckBoxChange,\n    checkOptions: checkOptions,\n    checkboxSize: \"md\",\n    style: {\n      columnCount: 2,\n      columnGap: '5px',\n      maxHeight: '1000px'\n    },\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 159,\n      columnNumber: 7\n    }\n  }));\n};\n\nexport var ButtonList = function ButtonList(_ref6) {\n  var listOfButtons = _ref6.listOfButtons;\n  return /*#__PURE__*/React.createElement(ButtonWrapper, {\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 177,\n      columnNumber: 5\n    }\n  }, listOfButtons.map(function (button, index) {\n    return /*#__PURE__*/React.createElement(IconButtonStyled, Object.assign({\n      key: index\n    }, button, {\n      iconSize: 19,\n      __self: _this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 179,\n        columnNumber: 16\n      }\n    }));\n  }));\n};\n/**********************************/\n\n/*     SHOW HIDE COLUMN MODAL     */\n\n/**********************************/\n\nvar defaultCallback = function defaultCallback() {};\n\nvar ShowHideColumnPopup = function ShowHideColumnPopup(_ref7) {\n  var _triggerElementRef$cu, _triggerElementRef$cu2;\n\n  var _ref7$checkBoxGroupAr = _ref7.checkBoxGroupArray,\n      checkBoxGroupArray = _ref7$checkBoxGroupAr === void 0 ? [] : _ref7$checkBoxGroupAr,\n      _ref7$onCheckBoxChang = _ref7.onCheckBoxChange,\n      onCheckBoxChange = _ref7$onCheckBoxChang === void 0 ? defaultCallback : _ref7$onCheckBoxChang,\n      _ref7$onApply = _ref7.onApply,\n      onApply = _ref7$onApply === void 0 ? defaultCallback : _ref7$onApply,\n      _ref7$onOpen = _ref7.onOpen,\n      onOpen = _ref7$onOpen === void 0 ? defaultCallback : _ref7$onOpen,\n      _ref7$onClickCancel = _ref7.onClickCancel,\n      onClickCancel = _ref7$onClickCancel === void 0 ? defaultCallback : _ref7$onClickCancel,\n      _ref7$selectedCount = _ref7.selectedCount,\n      selectedCount = _ref7$selectedCount === void 0 ? 0 : _ref7$selectedCount;\n  var node = React.useRef(null);\n  var triggerElementRef = React.useRef(null);\n  var refWidth = ((_triggerElementRef$cu = triggerElementRef.current) === null || _triggerElementRef$cu === void 0 ? void 0 : (_triggerElementRef$cu2 = _triggerElementRef$cu.getBoundingClientRect()) === null || _triggerElementRef$cu2 === void 0 ? void 0 : _triggerElementRef$cu2.left) || 600;\n  var modalWidth = refWidth > 600 ? 600 : refWidth;\n\n  var _useState3 = useState(false),\n      _useState4 = _slicedToArray(_useState3, 2),\n      showModal = _useState4[0],\n      setShowModal = _useState4[1];\n\n  var handleOutsideClick = function handleOutsideClick(e) {\n    var n = node.current;\n    if (n.contains(e.target)) return;\n    setShowModal(false);\n  };\n\n  React.useEffect(function () {\n    document.addEventListener('mousedown', handleOutsideClick);\n    return function () {\n      document.removeEventListener('mousedown', handleOutsideClick);\n    };\n  }, []); // const [selectAllChecked, setSelectAllChecked] = useState<boolean>(\n  //   selectedCount === checkBoxGroupArray.length\n  // )\n  // React.useEffect(() => {\n  //   setSelectAllChecked(selectedCount === checkBoxGroupArray.length)\n  // }, [selectedCount, checkBoxGroupArray])\n\n  var handleShowModal = function handleShowModal() {\n    setShowModal(!showModal);\n    onOpen();\n  }; // const handleSelectAll = (e: React.ChangeEvent<HTMLInputElement>) => {\n  //   const isSelectAll = e?.target?.checked\n  //   setSelectAllChecked(isSelectAll)\n  //   onSelectAll(isSelectAll)\n  // }\n\n\n  return /*#__PURE__*/React.createElement(ShowHideWrapper, {\n    ref: node,\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 238,\n      columnNumber: 5\n    }\n  }, /*#__PURE__*/React.createElement(Tooltip, {\n    hide: showModal,\n    messagePlacement: \"end\",\n    tooltipDirection: \"bottom\",\n    hover: true,\n    message: \"Customize your view by adding/removing columns. For the best view, a display of 8 columns is recommended.\",\n    isWordWrap: true,\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 239,\n      columnNumber: 7\n    }\n  }, /*#__PURE__*/React.createElement(\"div\", {\n    ref: triggerElementRef,\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 247,\n      columnNumber: 9\n    }\n  }, /*#__PURE__*/React.createElement(IconButton, {\n    id: \"columns-Setting-listview\",\n    onClick: handleShowModal,\n    onlyIcon: true,\n    circle: true,\n    iconVariant: \"icomoon-options-vertical\",\n    iconSize: 15,\n    color: \"grey.A1000\",\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 248,\n      columnNumber: 11\n    }\n  }))), showModal ? /*#__PURE__*/React.createElement(ModalWrapper, {\n    style: {\n      width: \"\".concat(modalWidth, \"px\")\n    },\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 260,\n      columnNumber: 9\n    }\n  }, /*#__PURE__*/React.createElement(Modal, {\n    width: \"\".concat(modalWidth, \"px\"),\n    header: /*#__PURE__*/React.createElement(ModalHeader, {\n      __self: _this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 263,\n        columnNumber: 21\n      }\n    }),\n    content: /*#__PURE__*/React.createElement(Box, {\n      color: \"black\",\n      mb: \"-15px\",\n      mt: \"-5px\",\n      __self: _this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 265,\n        columnNumber: 15\n      }\n    }, /*#__PURE__*/React.createElement(ModalBody, {\n      checkBoxGroupArray: checkBoxGroupArray,\n      onCheckBoxChange: onCheckBoxChange,\n      __self: _this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 266,\n        columnNumber: 17\n      }\n    })),\n    footer: /*#__PURE__*/React.createElement(Box, {\n      display: \"flex\",\n      color: \"black\",\n      style: {\n        boxShadow: '0 -1px 9px 0 #00000021'\n      },\n      __self: _this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 273,\n        columnNumber: 15\n      }\n    }, /*#__PURE__*/React.createElement(Box, {\n      display: \"flex\",\n      justifyContent: \"flex-end\",\n      fullWidth: true,\n      horizontalSpacing: \"10px\",\n      p: \"15px\" // pt='0px'\n      ,\n      __self: _this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 278,\n        columnNumber: 17\n      }\n    }, /*#__PURE__*/React.createElement(Box, {\n      color: \"grey.150\",\n      flexGrow: 1,\n      __self: _this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 286,\n        columnNumber: 19\n      }\n    }, selectedCount, \" column(s) selected\"), /*#__PURE__*/React.createElement(IconButtonStyled, {\n      id: \"SaveNApply-listview-ColumnModal\",\n      iconVariant: \"icomoon-save\",\n      primary: true,\n      onClick: function onClick() {\n        onApply(function () {\n          setShowModal(false);\n        }, true);\n      },\n      __self: _this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 289,\n        columnNumber: 19\n      }\n    }, \"Save & Apply\"), /*#__PURE__*/React.createElement(IconButtonStyled, {\n      id: \"Save-listview-modal\",\n      iconVariant: \"icomoon-tick-circled\",\n      primary: true,\n      onClick: function onClick() {\n        onApply(function () {\n          setShowModal(false);\n        });\n      },\n      __self: _this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 301,\n        columnNumber: 19\n      }\n    }, \"Apply\"), /*#__PURE__*/React.createElement(IconButtonStyled, {\n      id: \"Cancel-listview-ColumnModal\",\n      iconVariant: \"icomoon-close\" // iconSize={19}\n      ,\n      onClick: function onClick() {\n        onClickCancel();\n        setShowModal(false);\n      },\n      __self: _this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 313,\n        columnNumber: 19\n      }\n    }, \"Cancel\"))),\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 261,\n      columnNumber: 11\n    }\n  })) : null);\n};\n\nexport default ShowHideColumnPopup;","map":{"version":3,"sources":["/Users/farhanansari/Desktop/CODE/PrxProject/untitled folder/reactStoryBook/src/components/molecules/ShowHideColumnPopup/index.tsx"],"names":["React","useState","styled","keyframes","CheckboxGroup","IconButton","Modal","Header","Tooltip","Box","FadeIn","ModalWrapper","div","theme","shadows","zIndex","modal","ModalHeaderStyled","typography","fontWeightRegular","ModalBodyStyled","colors","grey","ButtonWrapper","IconButtonStyled","ShowHideWrapper","ModalHeader","ModalBody","checkBoxGroupArray","onCheckBoxChange","checkOptions","setCheckOptions","useEffect","handleCheckBoxChange","useCallback","id","checked","columnCount","columnGap","maxHeight","ButtonList","listOfButtons","map","button","index","defaultCallback","ShowHideColumnPopup","onApply","onOpen","onClickCancel","selectedCount","node","useRef","triggerElementRef","refWidth","current","getBoundingClientRect","left","modalWidth","showModal","setShowModal","handleOutsideClick","e","n","contains","target","document","addEventListener","removeEventListener","handleShowModal","width","boxShadow"],"mappings":";;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;AAAA,OAAOA,KAAP,IAAgBC,QAAhB,QAAgC,OAAhC,C,CACA;;AACA,OAAOC,MAAP,IAAiBC,SAAjB,QAAkC,mBAAlC,C,CACA;;AACA,OAAOC,aAAP,MAA2C,2BAA3C;AACA,OAAOC,UAAP,MAAuB,wBAAvB,C,CACA;;AACA,OAAOC,KAAP,MAAkB,uBAAlB,C,CACA;;AACA,OAAOC,MAAP,MAAmB,gBAAnB;AACA,OAAOC,OAAP,MAAoB,YAApB;AACA,OAAOC,GAAP,MAAgB,iBAAhB,C,CACA;;AAgBA;;AACA;;AACA;AACA,IAAMC,MAAM,GAAGP,SAAH,mBAAZ;AASA,IAAMQ,YAAY,GAAGT,MAAM,CAACU,GAAV,qBAIF;AAAA;;AAAA,MAAGC,KAAH,QAAGA,KAAH;AAAA,mBAAkBA,KAAlB,aAAkBA,KAAlB,yCAAkBA,KAAK,CAAEC,OAAzB,mDAAkB,yBAAlB;AAAA,CAJE,EAQGJ,MARH,EAWL;AAAA;;AAAA,MAAGG,KAAH,SAAGA,KAAH;AAAA,SAAeA,KAAf,aAAeA,KAAf,wCAAeA,KAAK,CAAEE,MAAtB,kDAAe,cAAeC,KAA9B;AAAA,CAXK,CAAlB;AAkBA,IAAMC,iBAAiB,GAAGf,MAAM,CAACU,GAAV,qBAEJ;AAAA;;AAAA,MAAGC,KAAH,SAAGA,KAAH;AAAA,mBAAkBA,KAAlB,aAAkBA,KAAlB,4CAAkBA,KAAK,CAAEK,UAAzB,sDAAkB,kBAAmBC,iBAArC;AAAA,CAFI,CAAvB;AASA,IAAMC,eAAe,GAAGlB,MAAM,CAACU,GAAV,qBAGV;AAAA;;AAAA,MAAGC,KAAH,SAAGA,KAAH;AAAA,SAAeA,KAAf,aAAeA,KAAf,wCAAeA,KAAK,CAAEQ,MAAtB,wEAAe,cAAeC,IAA9B,uDAAe,mBAAsB,KAAtB,CAAf;AAAA,CAHU,CAArB;AASA,IAAMC,aAAa,GAAGrB,MAAM,CAACU,GAAV,oBAAnB;AAKA,IAAMY,gBAAgB,GAAGtB,MAAM,CAACG,UAAD,CAAT,oBAAtB;AAqBA,IAAMoB,eAAe,GAAGvB,MAAM,CAACU,GAAV,oBAArB;AAGA;;AACA;;AACA;;AAEA,IAAMc,WAAW,GAAG,SAAdA,WAAc;AAAA,sBAClB,oBAAC,iBAAD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,kBACE,oBAAC,MAAD;AAAQ,IAAA,WAAW,EAAC,iBAApB;AAAsC,IAAA,KAAK,EAAC,MAA5C;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,IADF,CADkB;AAAA,CAApB;;AAMA,IAAMC,SAAS,GAAG,SAAZA,SAAY,QAGc;AAAA,oCAF9BC,kBAE8B;AAAA,MAF9BA,kBAE8B,sCAFT,EAES;AAAA,oCAD9BC,gBAC8B;AAAA,MAD9BA,gBAC8B,sCADX,YAAM,CAAE,CACG;;AAAA,kBACU5B,QAAQ,CAC9C2B,kBAD8C,CADlB;AAAA;AAAA,MACvBE,YADuB;AAAA,MACTC,eADS;;AAK9B/B,EAAAA,KAAK,CAACgC,SAAN,CAAgB,YAAM;AACpB,QAAIJ,kBAAJ,EAAwB;AACtBG,MAAAA,eAAe,CAACH,kBAAD,CAAf;AACD;AACF,GAJD,EAIG,CAACA,kBAAD,CAJH;AAMA,MAAMK,oBAAoB,GAAGjC,KAAK,CAACkC,WAAN,CAC3B,UAACC,EAAD,EAAKC,OAAL,EAAiB;AACf;AACA;AACA;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AAEA;AACAP,IAAAA,gBAAgB,CAACM,EAAD,EAAKC,OAAL,CAAhB;AACD,GAvB0B,EAwB3B,CAACP,gBAAD,EAAmBC,YAAnB,CAxB2B,CAA7B;AA2BA,sBACE,oBAAC,eAAD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,kBACE,oBAAC,aAAD;AACE,IAAA,WAAW,MADb;AAEE,IAAA,OAAO,EAAE,EAFX;AAGE,IAAA,QAAQ,EAAEG,oBAHZ;AAIE,IAAA,YAAY,EAAEH,YAJhB;AAKE,IAAA,YAAY,EAAC,IALf;AAME,IAAA,KAAK,EAAE;AACLO,MAAAA,WAAW,EAAE,CADR;AAELC,MAAAA,SAAS,EAAE,KAFN;AAGLC,MAAAA,SAAS,EAAE;AAHN,KANT;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,IADF,CADF;AAgBD,CAzDD;;AA2DA,OAAO,IAAMC,UAAU,GAAG,SAAbA,UAAa,QAA4B;AAAA,MAAzBC,aAAyB,SAAzBA,aAAyB;AACpD,sBACE,oBAAC,aAAD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KACGA,aAAa,CAACC,GAAd,CAAkB,UAACC,MAAD,EAAcC,KAAd,EAAgC;AACjD,wBAAO,oBAAC,gBAAD;AAAkB,MAAA,GAAG,EAAEA;AAAvB,OAAkCD,MAAlC;AAA0C,MAAA,QAAQ,EAAE,EAApD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,OAAP;AACD,GAFA,CADH,CADF;AAOD,CARM;AAUP;;AACA;;AACA;;AAEA,IAAME,eAAe,GAAG,SAAlBA,eAAkB,GAAM,CAAE,CAAhC;;AACA,IAAMC,mBAAmB,GAAG,SAAtBA,mBAAsB,QAQI;AAAA;;AAAA,oCAP9BlB,kBAO8B;AAAA,MAP9BA,kBAO8B,sCAPT,EAOS;AAAA,oCAN9BC,gBAM8B;AAAA,MAN9BA,gBAM8B,sCANXgB,eAMW;AAAA,4BAL9BE,OAK8B;AAAA,MAL9BA,OAK8B,8BALpBF,eAKoB;AAAA,2BAJ9BG,MAI8B;AAAA,MAJ9BA,MAI8B,6BAJrBH,eAIqB;AAAA,kCAH9BI,aAG8B;AAAA,MAH9BA,aAG8B,oCAHdJ,eAGc;AAAA,kCAD9BK,aAC8B;AAAA,MAD9BA,aAC8B,oCADd,CACc;AAC9B,MAAMC,IAAI,GAAGnD,KAAK,CAACoD,MAAN,CAAa,IAAb,CAAb;AACA,MAAMC,iBAAiB,GAAGrD,KAAK,CAACoD,MAAN,CAA6B,IAA7B,CAA1B;AACA,MAAME,QAAQ,GACZ,0BAAAD,iBAAiB,CAACE,OAAlB,0GAA2BC,qBAA3B,oFAAoDC,IAApD,KAA4D,GAD9D;AAEA,MAAMC,UAAU,GAAGJ,QAAQ,GAAG,GAAX,GAAiB,GAAjB,GAAuBA,QAA1C;;AAL8B,mBAOIrD,QAAQ,CAAU,KAAV,CAPZ;AAAA;AAAA,MAOvB0D,SAPuB;AAAA,MAOZC,YAPY;;AAS9B,MAAMC,kBAAkB,GAAG,SAArBA,kBAAqB,CAACC,CAAD,EAAY;AACrC,QAAMC,CAAC,GAAIZ,IAAI,CAACI,OAAhB;AACA,QAAIQ,CAAC,CAACC,QAAF,CAAWF,CAAC,CAACG,MAAb,CAAJ,EAA0B;AAC1BL,IAAAA,YAAY,CAAC,KAAD,CAAZ;AACD,GAJD;;AAKA5D,EAAAA,KAAK,CAACgC,SAAN,CAAgB,YAAM;AACpBkC,IAAAA,QAAQ,CAACC,gBAAT,CAA0B,WAA1B,EAAuCN,kBAAvC;AACA,WAAO,YAAM;AACXK,MAAAA,QAAQ,CAACE,mBAAT,CAA6B,WAA7B,EAA0CP,kBAA1C;AACD,KAFD;AAGD,GALD,EAKG,EALH,EAd8B,CAoB9B;AACA;AACA;AAEA;AACA;AACA;;AAEA,MAAMQ,eAAe,GAAG,SAAlBA,eAAkB,GAAM;AAC5BT,IAAAA,YAAY,CAAC,CAACD,SAAF,CAAZ;AACAX,IAAAA,MAAM;AACP,GAHD,CA5B8B,CAiC9B;AACA;AACA;AACA;AACA;;;AAEA,sBACE,oBAAC,eAAD;AAAiB,IAAA,GAAG,EAAEG,IAAtB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,kBACE,oBAAC,OAAD;AACE,IAAA,IAAI,EAAEQ,SADR;AAEE,IAAA,gBAAgB,EAAC,KAFnB;AAGE,IAAA,gBAAgB,EAAC,QAHnB;AAIE,IAAA,KAAK,MAJP;AAKE,IAAA,OAAO,EAAC,2GALV;AAME,IAAA,UAAU,EAAE,IANd;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,kBAQE;AAAK,IAAA,GAAG,EAAEN,iBAAV;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,kBACE,oBAAC,UAAD;AACE,IAAA,EAAE,EAAC,0BADL;AAEE,IAAA,OAAO,EAAEgB,eAFX;AAGE,IAAA,QAAQ,MAHV;AAIE,IAAA,MAAM,MAJR;AAKE,IAAA,WAAW,EAAC,0BALd;AAME,IAAA,QAAQ,EAAE,EANZ;AAOE,IAAA,KAAK,EAAC,YAPR;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,IADF,CARF,CADF,EAqBGV,SAAS,gBACR,oBAAC,YAAD;AAAc,IAAA,KAAK,EAAE;AAAEW,MAAAA,KAAK,YAAKZ,UAAL;AAAP,KAArB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,kBACE,oBAAC,KAAD;AACE,IAAA,KAAK,YAAKA,UAAL,OADP;AAEE,IAAA,MAAM,eAAE,oBAAC,WAAD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,MAFV;AAGE,IAAA,OAAO,eACL,oBAAC,GAAD;AAAK,MAAA,KAAK,EAAC,OAAX;AAAmB,MAAA,EAAE,EAAC,OAAtB;AAA8B,MAAA,EAAE,EAAC,MAAjC;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,oBACE,oBAAC,SAAD;AACE,MAAA,kBAAkB,EAAE9B,kBADtB;AAEE,MAAA,gBAAgB,EAAEC,gBAFpB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,MADF,CAJJ;AAWE,IAAA,MAAM,eACJ,oBAAC,GAAD;AACE,MAAA,OAAO,EAAC,MADV;AAEE,MAAA,KAAK,EAAC,OAFR;AAGE,MAAA,KAAK,EAAE;AAAE0C,QAAAA,SAAS,EAAE;AAAb,OAHT;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,oBAKE,oBAAC,GAAD;AACE,MAAA,OAAO,EAAC,MADV;AAEE,MAAA,cAAc,EAAC,UAFjB;AAGE,MAAA,SAAS,MAHX;AAIE,MAAA,iBAAiB,EAAC,MAJpB;AAKE,MAAA,CAAC,EAAC,MALJ,CAME;AANF;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,oBAQE,oBAAC,GAAD;AAAK,MAAA,KAAK,EAAC,UAAX;AAAsB,MAAA,QAAQ,EAAE,CAAhC;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,OACGrB,aADH,wBARF,eAWE,oBAAC,gBAAD;AACE,MAAA,EAAE,EAAC,iCADL;AAEE,MAAA,WAAW,EAAC,cAFd;AAGE,MAAA,OAAO,MAHT;AAIE,MAAA,OAAO,EAAE,mBAAM;AACbH,QAAAA,OAAO,CAAC,YAAM;AACZa,UAAAA,YAAY,CAAC,KAAD,CAAZ;AACD,SAFM,EAEJ,IAFI,CAAP;AAGD,OARH;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,sBAXF,eAuBE,oBAAC,gBAAD;AACE,MAAA,EAAE,EAAC,qBADL;AAEE,MAAA,WAAW,EAAC,sBAFd;AAGE,MAAA,OAAO,MAHT;AAIE,MAAA,OAAO,EAAE,mBAAM;AACbb,QAAAA,OAAO,CAAC,YAAM;AACZa,UAAAA,YAAY,CAAC,KAAD,CAAZ;AACD,SAFM,CAAP;AAGD,OARH;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,eAvBF,eAmCE,oBAAC,gBAAD;AACE,MAAA,EAAE,EAAC,6BADL;AAEE,MAAA,WAAW,EAAC,eAFd,CAGE;AAHF;AAIE,MAAA,OAAO,EAAE,mBAAM;AACbX,QAAAA,aAAa;AACbW,QAAAA,YAAY,CAAC,KAAD,CAAZ;AACD,OAPH;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,gBAnCF,CALF,CAZJ;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,IADF,CADQ,GAsEN,IA3FN,CADF;AA+FD,CA9ID;;AAgJA,eAAed,mBAAf","sourcesContent":["import React, { useState } from 'react'\n// import Style\nimport styled, { keyframes } from 'styled-components'\n// import { tVariant } from '../../atoms/Button'\nimport CheckboxGroup, { IOptionType } from '../../atoms/CheckboxGroup'\nimport IconButton from '../../atoms/IconButton'\n// import Position from '../../molecules/Position'\nimport Modal from '../Modal/ModalWrapper'\n// import Helper Components\nimport Header from '../ModalHeader'\nimport Tooltip from '../Tooltip'\nimport Box from '../../atoms/Box'\n// import Checkbox from '../../atoms/Checkbox'\n\nexport interface ShowHideColumnPopupProps {\n  checkBoxGroupArray: IOptionType[]\n  selectedCount?: number\n  onCheckBoxChange?: (\n    id: string,\n    checked: boolean\n    // checkBoxArray?: IOptionType[]\n  ) => void\n  onApply?: (closeModal: () => void, withSave?: boolean) => void\n  onClickCancel?: () => void\n  onSelectAll?: (checked?: boolean) => void\n  onOpen?: () => void\n}\n\n/**********************************/\n/*          MODAL STYLES          */\n/**********************************/\nconst FadeIn = keyframes`\n0% {\n  opacity:0;\n}\n100% {\n  opacity:1;\n}\n`\n\nconst ModalWrapper = styled.div`\n  min-width: 350px;\n  max-width: 600px;\n  margin-left: auto;\n  box-shadow: ${({ theme }) => `${theme?.shadows?.default}`};\n  label {\n    display: inline-block;\n  }\n  animation: 500ms ${FadeIn};\n  position: absolute;\n  right: 5px;\n  z-index: ${({ theme }) => theme?.zIndex?.modal};\n\n  & > div {\n    position: relative;\n    top: auto;\n  }\n`\nconst ModalHeaderStyled = styled.div`\n  h4 {\n    font-weight: ${({ theme }) => `${theme?.typography?.fontWeightRegular}`};\n    justify-content: center;\n    & ~ span {\n      display: none;\n    }\n  }\n`\nconst ModalBodyStyled = styled.div`\n  /* column-count: 2;\n  font-size: 13px;\n  color: ${({ theme }) => theme?.colors?.grey?.['800']}; */\n  max-height: 195px;\n  overflow-y: scroll;\n  width: calc(100% + 15px);\n`\n\nconst ButtonWrapper = styled.div`\n  display: flex;\n  justify-content: flex-end;\n  padding: 15px;\n`\nconst IconButtonStyled = styled(IconButton)`\n  /*  \n    margin: 0px 5px;\n    line-height: 40px;\n    max-height: 40px;\n    padding: 10px 15px;\n  */\n\n  span {\n    text-transform: Capitalize;\n    letter-spacing: 0.6px;\n    font-size: 13px;\n  }\n\n  /*\n    i {\n      margin-right: 5px;\n      font-size: 19px;\n    }\n  */\n`\nconst ShowHideWrapper = styled.div`\n  position: relative;\n`\n/**********************************/\n/*          MODAL COMPONENTS       */\n/**********************************/\n\nconst ModalHeader = () => (\n  <ModalHeaderStyled>\n    <Header headerTitle='Column Settings' width='100%' />\n  </ModalHeaderStyled>\n)\n\nconst ModalBody = ({\n  checkBoxGroupArray = [],\n  onCheckBoxChange = () => {}\n}: ShowHideColumnPopupProps) => {\n  const [checkOptions, setCheckOptions] = useState<IOptionType[]>(\n    checkBoxGroupArray\n  )\n\n  React.useEffect(() => {\n    if (checkBoxGroupArray) {\n      setCheckOptions(checkBoxGroupArray)\n    }\n  }, [checkBoxGroupArray])\n\n  const handleCheckBoxChange = React.useCallback(\n    (id, checked) => {\n      // const checkedCount =\n      //   checkOptions.filter((option: IOptionType) => option.checked).length +\n      //   (checked ? 1 : -1)\n\n      // let newCheckboxState = checkOptions.map((option: IOptionType) =>\n      //   option.id === id ? { ...option, checked } : option\n      // )\n      // console.log(checkedCount)\n      // if (checkedCount <= 3) {\n      //   newCheckboxState = newCheckboxState.map((option: IOptionType) =>\n      //     option.checked ? { ...option, disabled: true } : option\n      //   )\n      // } else {\n      //   newCheckboxState = newCheckboxState.map((option: IOptionType) => ({\n      //     ...option,\n      //     disabled: false\n      //   }))\n      // }\n\n      // console.log(newCheckboxState)\n      onCheckBoxChange(id, checked)\n    },\n    [onCheckBoxChange, checkOptions]\n  )\n\n  return (\n    <ModalBodyStyled>\n      <CheckboxGroup\n        orientation\n        spacing={10}\n        onChange={handleCheckBoxChange}\n        checkOptions={checkOptions}\n        checkboxSize='md'\n        style={{\n          columnCount: 2,\n          columnGap: '5px',\n          maxHeight: '1000px'\n        }}\n      />\n    </ModalBodyStyled>\n  )\n}\n\nexport const ButtonList = ({ listOfButtons }: any) => {\n  return (\n    <ButtonWrapper>\n      {listOfButtons.map((button: any, index: number) => {\n        return <IconButtonStyled key={index} {...button} iconSize={19} />\n      })}\n    </ButtonWrapper>\n  )\n}\n\n/**********************************/\n/*     SHOW HIDE COLUMN MODAL     */\n/**********************************/\n\nconst defaultCallback = () => {}\nconst ShowHideColumnPopup = ({\n  checkBoxGroupArray = [],\n  onCheckBoxChange = defaultCallback,\n  onApply = defaultCallback,\n  onOpen = defaultCallback,\n  onClickCancel = defaultCallback,\n  // onSelectAll = defaultCallback,\n  selectedCount = 0\n}: ShowHideColumnPopupProps) => {\n  const node = React.useRef(null)\n  const triggerElementRef = React.useRef<HTMLDivElement>(null)\n  const refWidth =\n    triggerElementRef.current?.getBoundingClientRect()?.left || 600\n  const modalWidth = refWidth > 600 ? 600 : refWidth\n\n  const [showModal, setShowModal] = useState<boolean>(false)\n\n  const handleOutsideClick = (e: any) => {\n    const n = (node.current as unknown) as Node\n    if (n.contains(e.target)) return\n    setShowModal(false)\n  }\n  React.useEffect(() => {\n    document.addEventListener('mousedown', handleOutsideClick)\n    return () => {\n      document.removeEventListener('mousedown', handleOutsideClick)\n    }\n  }, [])\n  // const [selectAllChecked, setSelectAllChecked] = useState<boolean>(\n  //   selectedCount === checkBoxGroupArray.length\n  // )\n\n  // React.useEffect(() => {\n  //   setSelectAllChecked(selectedCount === checkBoxGroupArray.length)\n  // }, [selectedCount, checkBoxGroupArray])\n\n  const handleShowModal = () => {\n    setShowModal(!showModal)\n    onOpen()\n  }\n\n  // const handleSelectAll = (e: React.ChangeEvent<HTMLInputElement>) => {\n  //   const isSelectAll = e?.target?.checked\n  //   setSelectAllChecked(isSelectAll)\n  //   onSelectAll(isSelectAll)\n  // }\n\n  return (\n    <ShowHideWrapper ref={node}>\n      <Tooltip\n        hide={showModal}\n        messagePlacement='end'\n        tooltipDirection='bottom'\n        hover\n        message='Customize your view by adding/removing columns. For the best view, a display of 8 columns is recommended.'\n        isWordWrap={true}\n      >\n        <div ref={triggerElementRef}>\n          <IconButton\n            id='columns-Setting-listview'\n            onClick={handleShowModal}\n            onlyIcon\n            circle\n            iconVariant='icomoon-options-vertical'\n            iconSize={15}\n            color='grey.A1000'\n          />\n        </div>\n      </Tooltip>\n      {showModal ? (\n        <ModalWrapper style={{ width: `${modalWidth}px` }}>\n          <Modal\n            width={`${modalWidth}px`}\n            header={<ModalHeader />}\n            content={\n              <Box color='black' mb='-15px' mt='-5px'>\n                <ModalBody\n                  checkBoxGroupArray={checkBoxGroupArray}\n                  onCheckBoxChange={onCheckBoxChange}\n                />\n              </Box>\n            }\n            footer={\n              <Box\n                display='flex'\n                color='black'\n                style={{ boxShadow: '0 -1px 9px 0 #00000021' }}\n              >\n                <Box\n                  display='flex'\n                  justifyContent='flex-end'\n                  fullWidth\n                  horizontalSpacing='10px'\n                  p='15px'\n                  // pt='0px'\n                >\n                  <Box color='grey.150' flexGrow={1}>\n                    {selectedCount} column(s) selected\n                  </Box>\n                  <IconButtonStyled\n                    id='SaveNApply-listview-ColumnModal'\n                    iconVariant='icomoon-save'\n                    primary\n                    onClick={() => {\n                      onApply(() => {\n                        setShowModal(false)\n                      }, true)\n                    }}\n                  >\n                    Save & Apply\n                  </IconButtonStyled>\n                  <IconButtonStyled\n                    id='Save-listview-modal'\n                    iconVariant='icomoon-tick-circled'\n                    primary\n                    onClick={() => {\n                      onApply(() => {\n                        setShowModal(false)\n                      })\n                    }}\n                  >\n                    Apply\n                  </IconButtonStyled>\n                  <IconButtonStyled\n                    id='Cancel-listview-ColumnModal'\n                    iconVariant='icomoon-close'\n                    // iconSize={19}\n                    onClick={() => {\n                      onClickCancel()\n                      setShowModal(false)\n                    }}\n                  >\n                    Cancel\n                  </IconButtonStyled>\n                </Box>\n              </Box>\n            }\n          />\n        </ModalWrapper>\n      ) : null}\n    </ShowHideWrapper>\n  )\n}\n\nexport default ShowHideColumnPopup\n"]},"metadata":{},"sourceType":"module"}