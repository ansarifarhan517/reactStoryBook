{"ast":null,"code":"import _defineProperty from \"/Users/farhanansari/Code/ui-library/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/defineProperty\";\n\nvar _parameters;\n\n/* eslint-disable */\n// @ts-nocheck\n// @ts-ignore\nvar withSourceLoader = require('@storybook/source-loader/preview').withSource; // @ts-ignore\n\n\nvar addSourceDecorator = require(\"@storybook/source-loader/preview\").addSource; // @ts-ignore\n\n\nvar __SOURCE_PREFIX__ = \"/Users/farhanansari/Code/ui-library/src/components/molecules/NumberInput\"; // @ts-ignore\n\nvar __STORY__ = \"\\n\\n// @ts-nocheck\\n// @ts-ignore\\nvar withSourceLoader = require('@storybook/source-loader/preview').withSource;\\n// @ts-ignore\\nvar addSourceDecorator = require(\\\"@storybook/source-loader/preview\\\").addSource;\\n// @ts-ignore\\nvar __SOURCE_PREFIX__ = \\\"/Users/farhanansari/Code/ui-library/src/components/molecules/NumberInput\\\";\\n// @ts-ignore\\nvar __STORY__ = \\\"\\\\n\\\\n// @ts-nocheck\\\\n// @ts-ignore\\\\nvar withSourceLoader = require('@storybook/source-loader/preview').withSource;\\\\n// @ts-ignore\\\\nvar addSourceDecorator = require(\\\\\\\"@storybook/source-loader/preview\\\\\\\").addSource;\\\\n// @ts-ignore\\\\nvar __SOURCE_PREFIX__ = \\\\\\\"/Users/farhanansari/Code/ui-library/src/components/molecules/NumberInput\\\\\\\";\\\\n// @ts-ignore\\\\nvar __STORY__ = \\\\\\\"import React from 'react'\\\\\\\\nimport NumberInput from '.'\\\\\\\\nimport Box from '../../atoms/Box'\\\\\\\\nimport { path } from '..'\\\\\\\\n\\\\\\\\nimport { action } from '@storybook/addon-actions'\\\\\\\\nimport { boolean, number, text } from '@storybook/addon-knobs'\\\\\\\\nimport ThemeWrapper from '../../../utilities/components/ThemeWrapper'\\\\\\\\n\\\\\\\\nexport default {\\\\\\\\n  title: `${path}/NumberInput`,\\\\\\\\n  component: NumberInput\\\\\\\\n}\\\\\\\\n\\\\\\\\nexport const DefaultField = () => (\\\\\\\\n  <ThemeWrapper>\\\\\\\\n    <Box p='1em'>\\\\\\\\n      <NumberInput\\\\\\\\n        id='someId'\\\\\\\\n        name='someName'\\\\\\\\n        className='someClassName'\\\\\\\\n        label={text('label', 'Number Input')}\\\\\\\\n        labelColor={text('labelColor', 'text.inputLabel.default')}\\\\\\\\n        placeholder={text('placeholder', 'Enter number here...')}\\\\\\\\n        maxLength={number('maxLength', 10)}\\\\\\\\n        error={boolean('error', false)}\\\\\\\\n        errorMessage={text('errorMessage', '')}\\\\\\\\n        required={boolean('required', false)}\\\\\\\\n        fullWidth={boolean('fullWidth', false)}\\\\\\\\n        onChange={action('Triggered: onChange')}\\\\\\\\n        allowDecimal={boolean('allowDecimal', false)}\\\\\\\\n        roundingoffDigit={number('roundingoffDigit', 3)}\\\\\\\\n      />\\\\\\\\n    </Box>\\\\\\\\n  </ThemeWrapper>\\\\\\\\n)\\\\\\\\n\\\\\\\\nexport const DefaultFieldWithInitialValue = () => (\\\\\\\\n  <ThemeWrapper>\\\\\\\\n    <Box p='1em'>\\\\\\\\n      <NumberInput\\\\\\\\n        id='someId'\\\\\\\\n        name='someName'\\\\\\\\n        className='someClassName'\\\\\\\\n        label={text('label', 'Number Input')}\\\\\\\\n        labelColor={text('labelColor', 'text.inputLabel.default')}\\\\\\\\n        placeholder={text('placeholder', 'Enter number here...')}\\\\\\\\n        initialValue={number('initialValue', 25)}\\\\\\\\n        maxLength={number('maxLength', 10)}\\\\\\\\n        error={boolean('error', false)}\\\\\\\\n        errorMessage={text('errorMessage', '')}\\\\\\\\n        required={boolean('required', false)}\\\\\\\\n        fullWidth={boolean('fullWidth', false)}\\\\\\\\n        onChange={action('Triggered: onChange')}\\\\\\\\n        allowDecimal={boolean('allowDecimal', false)}\\\\\\\\n      />\\\\\\\\n    </Box>\\\\\\\\n  </ThemeWrapper>\\\\\\\\n)\\\\\\\\n\\\\\\\\nexport const DecimalField = () => (\\\\\\\\n  <ThemeWrapper>\\\\\\\\n    <Box p='1em'>\\\\\\\\n      <NumberInput\\\\\\\\n        id='someId'\\\\\\\\n        name='someName'\\\\\\\\n        className='someClassName'\\\\\\\\n        label={text('label', 'Number Input')}\\\\\\\\n        labelColor={text('labelColor', 'text.inputLabel.default')}\\\\\\\\n        placeholder={text('placeholder', 'Enter number here...')}\\\\\\\\n        maxLength={number('maxLength', 10)}\\\\\\\\n        error={boolean('error', false)}\\\\\\\\n        errorMessage={text('errorMessage', '')}\\\\\\\\n        required={boolean('required', false)}\\\\\\\\n        fullWidth={boolean('fullWidth', false)}\\\\\\\\n        onChange={action('Triggered: onChange')}\\\\\\\\n        allowDecimal={boolean('allowDecimal', true)}\\\\\\\\n        roundingoffDigit={number('roundingoffDigit', 3)}\\\\\\\\n      />\\\\\\\\n    </Box>\\\\\\\\n  </ThemeWrapper>\\\\\\\\n)\\\\\\\\n\\\\\\\\nexport const RequiredField = () => (\\\\\\\\n  <ThemeWrapper>\\\\\\\\n    <Box p='1em'>\\\\\\\\n      <NumberInput\\\\\\\\n        id='someId'\\\\\\\\n        name='someName'\\\\\\\\n        className='someClassName'\\\\\\\\n        label={text('label', 'Number Input')}\\\\\\\\n        labelColor={text('labelColor', 'text.inputLabel.default')}\\\\\\\\n        placeholder={text('placeholder', 'Enter number here...')}\\\\\\\\n        maxLength={number('maxLength', 10)}\\\\\\\\n        error={boolean('error', false)}\\\\\\\\n        errorMessage={text('errorMessage', '')}\\\\\\\\n        required={boolean('required', true)}\\\\\\\\n        fullWidth={boolean('fullWidth', false)}\\\\\\\\n        onChange={action('Triggered: onChange')}\\\\\\\\n      />\\\\\\\\n    </Box>\\\\\\\\n  </ThemeWrapper>\\\\\\\\n)\\\\\\\\n\\\\\\\\nexport const ErrorField = () => (\\\\\\\\n  <ThemeWrapper>\\\\\\\\n    <Box p='1em'>\\\\\\\\n      <NumberInput\\\\\\\\n        id='someId'\\\\\\\\n        name='someName'\\\\\\\\n        className='someClassName'\\\\\\\\n        label={text('label', 'Number Input')}\\\\\\\\n        labelColor={text('labelColor', 'text.inputLabel.default')}\\\\\\\\n        placeholder={text('placeholder', 'Enter number here...')}\\\\\\\\n        maxLength={number('maxLength', 10)}\\\\\\\\n        error={boolean('error', true)}\\\\\\\\n        errorMessage={text('errorMessage', 'Some Field Error')}\\\\\\\\n        required={boolean('required', false)}\\\\\\\\n        fullWidth={boolean('fullWidth', true)}\\\\\\\\n        onChange={action('Triggered: onChange')}\\\\\\\\n      />\\\\\\\\n    </Box>\\\\\\\\n  </ThemeWrapper>\\\\\\\\n)\\\\\\\\n\\\\\\\\nexport const WithOutBorder = () => (\\\\\\\\n  <ThemeWrapper>\\\\\\\\n    <Box bgColor='grey.100' p='2em'>\\\\\\\\n      <NumberInput\\\\\\\\n        id='someId'\\\\\\\\n        name='someName'\\\\\\\\n        className='someClassName'\\\\\\\\n        maxLength={number('maxLength', 10)}\\\\\\\\n        error={boolean('error', false)}\\\\\\\\n        onChange={action('Triggered: onChange')}\\\\\\\\n        variant='inline-edit'\\\\\\\\n      />\\\\\\\\n    </Box>\\\\\\\\n  </ThemeWrapper>\\\\\\\\n)\\\\\\\\n\\\\\\\";\\\\n// @ts-ignore\\\\nvar __ADDS_MAP__ = {};\\\\n// @ts-ignore\\\\nvar __MAIN_FILE_LOCATION__ = \\\\\\\"/NumberInput.stories.tsx\\\\\\\";\\\\n// @ts-ignore\\\\nvar __MODULE_DEPENDENCIES__ = [];\\\\n// @ts-ignore\\\\nvar __LOCAL_DEPENDENCIES__ = {};\\\\n// @ts-ignore\\\\nvar __IDS_TO_FRAMEWORKS__ = {};\\\\n        \\\\nimport React from 'react'\\\\nimport NumberInput from '.'\\\\nimport Box from '../../atoms/Box'\\\\nimport { path } from '..'\\\\n\\\\nimport { action } from '@storybook/addon-actions'\\\\nimport { boolean, number, text } from '@storybook/addon-knobs'\\\\nimport ThemeWrapper from '../../../utilities/components/ThemeWrapper'\\\\n\\\\nexport default {parameters: {\\\\\\\"storySource\\\\\\\":{\\\\\\\"source\\\\\\\":\\\\\\\"import React from 'react'\\\\\\\\nimport NumberInput from '.'\\\\\\\\nimport Box from '../../atoms/Box'\\\\\\\\nimport { path } from '..'\\\\\\\\n\\\\\\\\nimport { action } from '@storybook/addon-actions'\\\\\\\\nimport { boolean, number, text } from '@storybook/addon-knobs'\\\\\\\\nimport ThemeWrapper from '../../../utilities/components/ThemeWrapper'\\\\\\\\n\\\\\\\\nexport default {\\\\\\\\n  title: `${path}/NumberInput`,\\\\\\\\n  component: NumberInput\\\\\\\\n}\\\\\\\\n\\\\\\\\nexport const DefaultField = () => (\\\\\\\\n  <ThemeWrapper>\\\\\\\\n    <Box p='1em'>\\\\\\\\n      <NumberInput\\\\\\\\n        id='someId'\\\\\\\\n        name='someName'\\\\\\\\n        className='someClassName'\\\\\\\\n        label={text('label', 'Number Input')}\\\\\\\\n        labelColor={text('labelColor', 'text.inputLabel.default')}\\\\\\\\n        placeholder={text('placeholder', 'Enter number here...')}\\\\\\\\n        maxLength={number('maxLength', 10)}\\\\\\\\n        error={boolean('error', false)}\\\\\\\\n        errorMessage={text('errorMessage', '')}\\\\\\\\n        required={boolean('required', false)}\\\\\\\\n        fullWidth={boolean('fullWidth', false)}\\\\\\\\n        onChange={action('Triggered: onChange')}\\\\\\\\n        allowDecimal={boolean('allowDecimal', false)}\\\\\\\\n        roundingoffDigit={number('roundingoffDigit', 3)}\\\\\\\\n      />\\\\\\\\n    </Box>\\\\\\\\n  </ThemeWrapper>\\\\\\\\n)\\\\\\\\n\\\\\\\\nexport const DefaultFieldWithInitialValue = () => (\\\\\\\\n  <ThemeWrapper>\\\\\\\\n    <Box p='1em'>\\\\\\\\n      <NumberInput\\\\\\\\n        id='someId'\\\\\\\\n        name='someName'\\\\\\\\n        className='someClassName'\\\\\\\\n        label={text('label', 'Number Input')}\\\\\\\\n        labelColor={text('labelColor', 'text.inputLabel.default')}\\\\\\\\n        placeholder={text('placeholder', 'Enter number here...')}\\\\\\\\n        initialValue={number('initialValue', 25)}\\\\\\\\n        maxLength={number('maxLength', 10)}\\\\\\\\n        error={boolean('error', false)}\\\\\\\\n        errorMessage={text('errorMessage', '')}\\\\\\\\n        required={boolean('required', false)}\\\\\\\\n        fullWidth={boolean('fullWidth', false)}\\\\\\\\n        onChange={action('Triggered: onChange')}\\\\\\\\n        allowDecimal={boolean('allowDecimal', false)}\\\\\\\\n      />\\\\\\\\n    </Box>\\\\\\\\n  </ThemeWrapper>\\\\\\\\n)\\\\\\\\n\\\\\\\\nexport const DecimalField = () => (\\\\\\\\n  <ThemeWrapper>\\\\\\\\n    <Box p='1em'>\\\\\\\\n      <NumberInput\\\\\\\\n        id='someId'\\\\\\\\n        name='someName'\\\\\\\\n        className='someClassName'\\\\\\\\n        label={text('label', 'Number Input')}\\\\\\\\n        labelColor={text('labelColor', 'text.inputLabel.default')}\\\\\\\\n        placeholder={text('placeholder', 'Enter number here...')}\\\\\\\\n        maxLength={number('maxLength', 10)}\\\\\\\\n        error={boolean('error', false)}\\\\\\\\n        errorMessage={text('errorMessage', '')}\\\\\\\\n        required={boolean('required', false)}\\\\\\\\n        fullWidth={boolean('fullWidth', false)}\\\\\\\\n        onChange={action('Triggered: onChange')}\\\\\\\\n        allowDecimal={boolean('allowDecimal', true)}\\\\\\\\n        roundingoffDigit={number('roundingoffDigit', 3)}\\\\\\\\n      />\\\\\\\\n    </Box>\\\\\\\\n  </ThemeWrapper>\\\\\\\\n)\\\\\\\\n\\\\\\\\nexport const RequiredField = () => (\\\\\\\\n  <ThemeWrapper>\\\\\\\\n    <Box p='1em'>\\\\\\\\n      <NumberInput\\\\\\\\n        id='someId'\\\\\\\\n        name='someName'\\\\\\\\n        className='someClassName'\\\\\\\\n        label={text('label', 'Number Input')}\\\\\\\\n        labelColor={text('labelColor', 'text.inputLabel.default')}\\\\\\\\n        placeholder={text('placeholder', 'Enter number here...')}\\\\\\\\n        maxLength={number('maxLength', 10)}\\\\\\\\n        error={boolean('error', false)}\\\\\\\\n        errorMessage={text('errorMessage', '')}\\\\\\\\n        required={boolean('required', true)}\\\\\\\\n        fullWidth={boolean('fullWidth', false)}\\\\\\\\n        onChange={action('Triggered: onChange')}\\\\\\\\n      />\\\\\\\\n    </Box>\\\\\\\\n  </ThemeWrapper>\\\\\\\\n)\\\\\\\\n\\\\\\\\nexport const ErrorField = () => (\\\\\\\\n  <ThemeWrapper>\\\\\\\\n    <Box p='1em'>\\\\\\\\n      <NumberInput\\\\\\\\n        id='someId'\\\\\\\\n        name='someName'\\\\\\\\n        className='someClassName'\\\\\\\\n        label={text('label', 'Number Input')}\\\\\\\\n        labelColor={text('labelColor', 'text.inputLabel.default')}\\\\\\\\n        placeholder={text('placeholder', 'Enter number here...')}\\\\\\\\n        maxLength={number('maxLength', 10)}\\\\\\\\n        error={boolean('error', true)}\\\\\\\\n        errorMessage={text('errorMessage', 'Some Field Error')}\\\\\\\\n        required={boolean('required', false)}\\\\\\\\n        fullWidth={boolean('fullWidth', true)}\\\\\\\\n        onChange={action('Triggered: onChange')}\\\\\\\\n      />\\\\\\\\n    </Box>\\\\\\\\n  </ThemeWrapper>\\\\\\\\n)\\\\\\\\n\\\\\\\\nexport const WithOutBorder = () => (\\\\\\\\n  <ThemeWrapper>\\\\\\\\n    <Box bgColor='grey.100' p='2em'>\\\\\\\\n      <NumberInput\\\\\\\\n        id='someId'\\\\\\\\n        name='someName'\\\\\\\\n        className='someClassName'\\\\\\\\n        maxLength={number('maxLength', 10)}\\\\\\\\n        error={boolean('error', false)}\\\\\\\\n        onChange={action('Triggered: onChange')}\\\\\\\\n        variant='inline-edit'\\\\\\\\n      />\\\\\\\\n    </Box>\\\\\\\\n  </ThemeWrapper>\\\\\\\\n)\\\\\\\\n\\\\\\\",\\\\\\\"locationsMap\\\\\\\":{}},},\\\\n  title: `${path}/NumberInput`,\\\\n  component: NumberInput\\\\n}\\\\n\\\\nexport const DefaultField = addSourceDecorator(() => (\\\\n  <ThemeWrapper>\\\\n    <Box p='1em'>\\\\n      <NumberInput\\\\n        id='someId'\\\\n        name='someName'\\\\n        className='someClassName'\\\\n        label={text('label', 'Number Input')}\\\\n        labelColor={text('labelColor', 'text.inputLabel.default')}\\\\n        placeholder={text('placeholder', 'Enter number here...')}\\\\n        maxLength={number('maxLength', 10)}\\\\n        error={boolean('error', false)}\\\\n        errorMessage={text('errorMessage', '')}\\\\n        required={boolean('required', false)}\\\\n        fullWidth={boolean('fullWidth', false)}\\\\n        onChange={action('Triggered: onChange')}\\\\n        allowDecimal={boolean('allowDecimal', false)}\\\\n        roundingoffDigit={number('roundingoffDigit', 3)}\\\\n      />\\\\n    </Box>\\\\n  </ThemeWrapper>\\\\n), {__STORY__, __ADDS_MAP__,__MAIN_FILE_LOCATION__,__MODULE_DEPENDENCIES__,__LOCAL_DEPENDENCIES__,__SOURCE_PREFIX__,__IDS_TO_FRAMEWORKS__});\\\\n\\\\nexport const DefaultFieldWithInitialValue = addSourceDecorator(() => (\\\\n  <ThemeWrapper>\\\\n    <Box p='1em'>\\\\n      <NumberInput\\\\n        id='someId'\\\\n        name='someName'\\\\n        className='someClassName'\\\\n        label={text('label', 'Number Input')}\\\\n        labelColor={text('labelColor', 'text.inputLabel.default')}\\\\n        placeholder={text('placeholder', 'Enter number here...')}\\\\n        initialValue={number('initialValue', 25)}\\\\n        maxLength={number('maxLength', 10)}\\\\n        error={boolean('error', false)}\\\\n        errorMessage={text('errorMessage', '')}\\\\n        required={boolean('required', false)}\\\\n        fullWidth={boolean('fullWidth', false)}\\\\n        onChange={action('Triggered: onChange')}\\\\n        allowDecimal={boolean('allowDecimal', false)}\\\\n      />\\\\n    </Box>\\\\n  </ThemeWrapper>\\\\n), {__STORY__, __ADDS_MAP__,__MAIN_FILE_LOCATION__,__MODULE_DEPENDENCIES__,__LOCAL_DEPENDENCIES__,__SOURCE_PREFIX__,__IDS_TO_FRAMEWORKS__});\\\\n\\\\nexport const DecimalField = addSourceDecorator(() => (\\\\n  <ThemeWrapper>\\\\n    <Box p='1em'>\\\\n      <NumberInput\\\\n        id='someId'\\\\n        name='someName'\\\\n        className='someClassName'\\\\n        label={text('label', 'Number Input')}\\\\n        labelColor={text('labelColor', 'text.inputLabel.default')}\\\\n        placeholder={text('placeholder', 'Enter number here...')}\\\\n        maxLength={number('maxLength', 10)}\\\\n        error={boolean('error', false)}\\\\n        errorMessage={text('errorMessage', '')}\\\\n        required={boolean('required', false)}\\\\n        fullWidth={boolean('fullWidth', false)}\\\\n        onChange={action('Triggered: onChange')}\\\\n        allowDecimal={boolean('allowDecimal', true)}\\\\n        roundingoffDigit={number('roundingoffDigit', 3)}\\\\n      />\\\\n    </Box>\\\\n  </ThemeWrapper>\\\\n), {__STORY__, __ADDS_MAP__,__MAIN_FILE_LOCATION__,__MODULE_DEPENDENCIES__,__LOCAL_DEPENDENCIES__,__SOURCE_PREFIX__,__IDS_TO_FRAMEWORKS__});\\\\n\\\\nexport const RequiredField = addSourceDecorator(() => (\\\\n  <ThemeWrapper>\\\\n    <Box p='1em'>\\\\n      <NumberInput\\\\n        id='someId'\\\\n        name='someName'\\\\n        className='someClassName'\\\\n        label={text('label', 'Number Input')}\\\\n        labelColor={text('labelColor', 'text.inputLabel.default')}\\\\n        placeholder={text('placeholder', 'Enter number here...')}\\\\n        maxLength={number('maxLength', 10)}\\\\n        error={boolean('error', false)}\\\\n        errorMessage={text('errorMessage', '')}\\\\n        required={boolean('required', true)}\\\\n        fullWidth={boolean('fullWidth', false)}\\\\n        onChange={action('Triggered: onChange')}\\\\n      />\\\\n    </Box>\\\\n  </ThemeWrapper>\\\\n), {__STORY__, __ADDS_MAP__,__MAIN_FILE_LOCATION__,__MODULE_DEPENDENCIES__,__LOCAL_DEPENDENCIES__,__SOURCE_PREFIX__,__IDS_TO_FRAMEWORKS__});\\\\n\\\\nexport const ErrorField = addSourceDecorator(() => (\\\\n  <ThemeWrapper>\\\\n    <Box p='1em'>\\\\n      <NumberInput\\\\n        id='someId'\\\\n        name='someName'\\\\n        className='someClassName'\\\\n        label={text('label', 'Number Input')}\\\\n        labelColor={text('labelColor', 'text.inputLabel.default')}\\\\n        placeholder={text('placeholder', 'Enter number here...')}\\\\n        maxLength={number('maxLength', 10)}\\\\n        error={boolean('error', true)}\\\\n        errorMessage={text('errorMessage', 'Some Field Error')}\\\\n        required={boolean('required', false)}\\\\n        fullWidth={boolean('fullWidth', true)}\\\\n        onChange={action('Triggered: onChange')}\\\\n      />\\\\n    </Box>\\\\n  </ThemeWrapper>\\\\n), {__STORY__, __ADDS_MAP__,__MAIN_FILE_LOCATION__,__MODULE_DEPENDENCIES__,__LOCAL_DEPENDENCIES__,__SOURCE_PREFIX__,__IDS_TO_FRAMEWORKS__});\\\\n\\\\nexport const WithOutBorder = addSourceDecorator(() => (\\\\n  <ThemeWrapper>\\\\n    <Box bgColor='grey.100' p='2em'>\\\\n      <NumberInput\\\\n        id='someId'\\\\n        name='someName'\\\\n        className='someClassName'\\\\n        maxLength={number('maxLength', 10)}\\\\n        error={boolean('error', false)}\\\\n        onChange={action('Triggered: onChange')}\\\\n        variant='inline-edit'\\\\n      />\\\\n    </Box>\\\\n  </ThemeWrapper>\\\\n), {__STORY__, __ADDS_MAP__,__MAIN_FILE_LOCATION__,__MODULE_DEPENDENCIES__,__LOCAL_DEPENDENCIES__,__SOURCE_PREFIX__,__IDS_TO_FRAMEWORKS__});\\\";\\n// @ts-ignore\\nvar __ADDS_MAP__ = {};\\n// @ts-ignore\\nvar __MAIN_FILE_LOCATION__ = \\\"/NumberInput.stories.tsx\\\";\\n// @ts-ignore\\nvar __MODULE_DEPENDENCIES__ = [];\\n// @ts-ignore\\nvar __LOCAL_DEPENDENCIES__ = {};\\n// @ts-ignore\\nvar __IDS_TO_FRAMEWORKS__ = {};\\n        \\n\\n\\n// @ts-nocheck\\n// @ts-ignore\\nvar withSourceLoader = require('@storybook/source-loader/preview').withSource;\\n// @ts-ignore\\nvar addSourceDecorator = require(\\\"@storybook/source-loader/preview\\\").addSource;\\n// @ts-ignore\\nvar __SOURCE_PREFIX__ = \\\"/Users/farhanansari/Code/ui-library/src/components/molecules/NumberInput\\\";\\n// @ts-ignore\\nvar __STORY__ = \\\"import React from 'react'\\\\nimport NumberInput from '.'\\\\nimport Box from '../../atoms/Box'\\\\nimport { path } from '..'\\\\n\\\\nimport { action } from '@storybook/addon-actions'\\\\nimport { boolean, number, text } from '@storybook/addon-knobs'\\\\nimport ThemeWrapper from '../../../utilities/components/ThemeWrapper'\\\\n\\\\nexport default {\\\\n  title: `${path}/NumberInput`,\\\\n  component: NumberInput\\\\n}\\\\n\\\\nexport const DefaultField = () => (\\\\n  <ThemeWrapper>\\\\n    <Box p='1em'>\\\\n      <NumberInput\\\\n        id='someId'\\\\n        name='someName'\\\\n        className='someClassName'\\\\n        label={text('label', 'Number Input')}\\\\n        labelColor={text('labelColor', 'text.inputLabel.default')}\\\\n        placeholder={text('placeholder', 'Enter number here...')}\\\\n        maxLength={number('maxLength', 10)}\\\\n        error={boolean('error', false)}\\\\n        errorMessage={text('errorMessage', '')}\\\\n        required={boolean('required', false)}\\\\n        fullWidth={boolean('fullWidth', false)}\\\\n        onChange={action('Triggered: onChange')}\\\\n        allowDecimal={boolean('allowDecimal', false)}\\\\n        roundingoffDigit={number('roundingoffDigit', 3)}\\\\n      />\\\\n    </Box>\\\\n  </ThemeWrapper>\\\\n)\\\\n\\\\nexport const DefaultFieldWithInitialValue = () => (\\\\n  <ThemeWrapper>\\\\n    <Box p='1em'>\\\\n      <NumberInput\\\\n        id='someId'\\\\n        name='someName'\\\\n        className='someClassName'\\\\n        label={text('label', 'Number Input')}\\\\n        labelColor={text('labelColor', 'text.inputLabel.default')}\\\\n        placeholder={text('placeholder', 'Enter number here...')}\\\\n        initialValue={number('initialValue', 25)}\\\\n        maxLength={number('maxLength', 10)}\\\\n        error={boolean('error', false)}\\\\n        errorMessage={text('errorMessage', '')}\\\\n        required={boolean('required', false)}\\\\n        fullWidth={boolean('fullWidth', false)}\\\\n        onChange={action('Triggered: onChange')}\\\\n        allowDecimal={boolean('allowDecimal', false)}\\\\n      />\\\\n    </Box>\\\\n  </ThemeWrapper>\\\\n)\\\\n\\\\nexport const DecimalField = () => (\\\\n  <ThemeWrapper>\\\\n    <Box p='1em'>\\\\n      <NumberInput\\\\n        id='someId'\\\\n        name='someName'\\\\n        className='someClassName'\\\\n        label={text('label', 'Number Input')}\\\\n        labelColor={text('labelColor', 'text.inputLabel.default')}\\\\n        placeholder={text('placeholder', 'Enter number here...')}\\\\n        maxLength={number('maxLength', 10)}\\\\n        error={boolean('error', false)}\\\\n        errorMessage={text('errorMessage', '')}\\\\n        required={boolean('required', false)}\\\\n        fullWidth={boolean('fullWidth', false)}\\\\n        onChange={action('Triggered: onChange')}\\\\n        allowDecimal={boolean('allowDecimal', true)}\\\\n        roundingoffDigit={number('roundingoffDigit', 3)}\\\\n      />\\\\n    </Box>\\\\n  </ThemeWrapper>\\\\n)\\\\n\\\\nexport const RequiredField = () => (\\\\n  <ThemeWrapper>\\\\n    <Box p='1em'>\\\\n      <NumberInput\\\\n        id='someId'\\\\n        name='someName'\\\\n        className='someClassName'\\\\n        label={text('label', 'Number Input')}\\\\n        labelColor={text('labelColor', 'text.inputLabel.default')}\\\\n        placeholder={text('placeholder', 'Enter number here...')}\\\\n        maxLength={number('maxLength', 10)}\\\\n        error={boolean('error', false)}\\\\n        errorMessage={text('errorMessage', '')}\\\\n        required={boolean('required', true)}\\\\n        fullWidth={boolean('fullWidth', false)}\\\\n        onChange={action('Triggered: onChange')}\\\\n      />\\\\n    </Box>\\\\n  </ThemeWrapper>\\\\n)\\\\n\\\\nexport const ErrorField = () => (\\\\n  <ThemeWrapper>\\\\n    <Box p='1em'>\\\\n      <NumberInput\\\\n        id='someId'\\\\n        name='someName'\\\\n        className='someClassName'\\\\n        label={text('label', 'Number Input')}\\\\n        labelColor={text('labelColor', 'text.inputLabel.default')}\\\\n        placeholder={text('placeholder', 'Enter number here...')}\\\\n        maxLength={number('maxLength', 10)}\\\\n        error={boolean('error', true)}\\\\n        errorMessage={text('errorMessage', 'Some Field Error')}\\\\n        required={boolean('required', false)}\\\\n        fullWidth={boolean('fullWidth', true)}\\\\n        onChange={action('Triggered: onChange')}\\\\n      />\\\\n    </Box>\\\\n  </ThemeWrapper>\\\\n)\\\\n\\\\nexport const WithOutBorder = () => (\\\\n  <ThemeWrapper>\\\\n    <Box bgColor='grey.100' p='2em'>\\\\n      <NumberInput\\\\n        id='someId'\\\\n        name='someName'\\\\n        className='someClassName'\\\\n        maxLength={number('maxLength', 10)}\\\\n        error={boolean('error', false)}\\\\n        onChange={action('Triggered: onChange')}\\\\n        variant='inline-edit'\\\\n      />\\\\n    </Box>\\\\n  </ThemeWrapper>\\\\n)\\\\n\\\";\\n// @ts-ignore\\nvar __ADDS_MAP__ = {};\\n// @ts-ignore\\nvar __MAIN_FILE_LOCATION__ = \\\"/NumberInput.stories.tsx\\\";\\n// @ts-ignore\\nvar __MODULE_DEPENDENCIES__ = [];\\n// @ts-ignore\\nvar __LOCAL_DEPENDENCIES__ = {};\\n// @ts-ignore\\nvar __IDS_TO_FRAMEWORKS__ = {};\\n        \\nimport React from 'react'\\nimport NumberInput from '.'\\nimport Box from '../../atoms/Box'\\nimport { path } from '..'\\n\\nimport { action } from '@storybook/addon-actions'\\nimport { boolean, number, text } from '@storybook/addon-knobs'\\nimport ThemeWrapper from '../../../utilities/components/ThemeWrapper'\\n\\nexport default {parameters: {\\\"storySource\\\":{\\\"source\\\":\\\"\\\\n\\\\n// @ts-nocheck\\\\n// @ts-ignore\\\\nvar withSourceLoader = require('@storybook/source-loader/preview').withSource;\\\\n// @ts-ignore\\\\nvar addSourceDecorator = require(\\\\\\\"@storybook/source-loader/preview\\\\\\\").addSource;\\\\n// @ts-ignore\\\\nvar __SOURCE_PREFIX__ = \\\\\\\"/Users/farhanansari/Code/ui-library/src/components/molecules/NumberInput\\\\\\\";\\\\n// @ts-ignore\\\\nvar __STORY__ = \\\\\\\"import React from 'react'\\\\\\\\nimport NumberInput from '.'\\\\\\\\nimport Box from '../../atoms/Box'\\\\\\\\nimport { path } from '..'\\\\\\\\n\\\\\\\\nimport { action } from '@storybook/addon-actions'\\\\\\\\nimport { boolean, number, text } from '@storybook/addon-knobs'\\\\\\\\nimport ThemeWrapper from '../../../utilities/components/ThemeWrapper'\\\\\\\\n\\\\\\\\nexport default {\\\\\\\\n  title: `${path}/NumberInput`,\\\\\\\\n  component: NumberInput\\\\\\\\n}\\\\\\\\n\\\\\\\\nexport const DefaultField = () => (\\\\\\\\n  <ThemeWrapper>\\\\\\\\n    <Box p='1em'>\\\\\\\\n      <NumberInput\\\\\\\\n        id='someId'\\\\\\\\n        name='someName'\\\\\\\\n        className='someClassName'\\\\\\\\n        label={text('label', 'Number Input')}\\\\\\\\n        labelColor={text('labelColor', 'text.inputLabel.default')}\\\\\\\\n        placeholder={text('placeholder', 'Enter number here...')}\\\\\\\\n        maxLength={number('maxLength', 10)}\\\\\\\\n        error={boolean('error', false)}\\\\\\\\n        errorMessage={text('errorMessage', '')}\\\\\\\\n        required={boolean('required', false)}\\\\\\\\n        fullWidth={boolean('fullWidth', false)}\\\\\\\\n        onChange={action('Triggered: onChange')}\\\\\\\\n        allowDecimal={boolean('allowDecimal', false)}\\\\\\\\n        roundingoffDigit={number('roundingoffDigit', 3)}\\\\\\\\n      />\\\\\\\\n    </Box>\\\\\\\\n  </ThemeWrapper>\\\\\\\\n)\\\\\\\\n\\\\\\\\nexport const DefaultFieldWithInitialValue = () => (\\\\\\\\n  <ThemeWrapper>\\\\\\\\n    <Box p='1em'>\\\\\\\\n      <NumberInput\\\\\\\\n        id='someId'\\\\\\\\n        name='someName'\\\\\\\\n        className='someClassName'\\\\\\\\n        label={text('label', 'Number Input')}\\\\\\\\n        labelColor={text('labelColor', 'text.inputLabel.default')}\\\\\\\\n        placeholder={text('placeholder', 'Enter number here...')}\\\\\\\\n        initialValue={number('initialValue', 25)}\\\\\\\\n        maxLength={number('maxLength', 10)}\\\\\\\\n        error={boolean('error', false)}\\\\\\\\n        errorMessage={text('errorMessage', '')}\\\\\\\\n        required={boolean('required', false)}\\\\\\\\n        fullWidth={boolean('fullWidth', false)}\\\\\\\\n        onChange={action('Triggered: onChange')}\\\\\\\\n        allowDecimal={boolean('allowDecimal', false)}\\\\\\\\n      />\\\\\\\\n    </Box>\\\\\\\\n  </ThemeWrapper>\\\\\\\\n)\\\\\\\\n\\\\\\\\nexport const DecimalField = () => (\\\\\\\\n  <ThemeWrapper>\\\\\\\\n    <Box p='1em'>\\\\\\\\n      <NumberInput\\\\\\\\n        id='someId'\\\\\\\\n        name='someName'\\\\\\\\n        className='someClassName'\\\\\\\\n        label={text('label', 'Number Input')}\\\\\\\\n        labelColor={text('labelColor', 'text.inputLabel.default')}\\\\\\\\n        placeholder={text('placeholder', 'Enter number here...')}\\\\\\\\n        maxLength={number('maxLength', 10)}\\\\\\\\n        error={boolean('error', false)}\\\\\\\\n        errorMessage={text('errorMessage', '')}\\\\\\\\n        required={boolean('required', false)}\\\\\\\\n        fullWidth={boolean('fullWidth', false)}\\\\\\\\n        onChange={action('Triggered: onChange')}\\\\\\\\n        allowDecimal={boolean('allowDecimal', true)}\\\\\\\\n        roundingoffDigit={number('roundingoffDigit', 3)}\\\\\\\\n      />\\\\\\\\n    </Box>\\\\\\\\n  </ThemeWrapper>\\\\\\\\n)\\\\\\\\n\\\\\\\\nexport const RequiredField = () => (\\\\\\\\n  <ThemeWrapper>\\\\\\\\n    <Box p='1em'>\\\\\\\\n      <NumberInput\\\\\\\\n        id='someId'\\\\\\\\n        name='someName'\\\\\\\\n        className='someClassName'\\\\\\\\n        label={text('label', 'Number Input')}\\\\\\\\n        labelColor={text('labelColor', 'text.inputLabel.default')}\\\\\\\\n        placeholder={text('placeholder', 'Enter number here...')}\\\\\\\\n        maxLength={number('maxLength', 10)}\\\\\\\\n        error={boolean('error', false)}\\\\\\\\n        errorMessage={text('errorMessage', '')}\\\\\\\\n        required={boolean('required', true)}\\\\\\\\n        fullWidth={boolean('fullWidth', false)}\\\\\\\\n        onChange={action('Triggered: onChange')}\\\\\\\\n      />\\\\\\\\n    </Box>\\\\\\\\n  </ThemeWrapper>\\\\\\\\n)\\\\\\\\n\\\\\\\\nexport const ErrorField = () => (\\\\\\\\n  <ThemeWrapper>\\\\\\\\n    <Box p='1em'>\\\\\\\\n      <NumberInput\\\\\\\\n        id='someId'\\\\\\\\n        name='someName'\\\\\\\\n        className='someClassName'\\\\\\\\n        label={text('label', 'Number Input')}\\\\\\\\n        labelColor={text('labelColor', 'text.inputLabel.default')}\\\\\\\\n        placeholder={text('placeholder', 'Enter number here...')}\\\\\\\\n        maxLength={number('maxLength', 10)}\\\\\\\\n        error={boolean('error', true)}\\\\\\\\n        errorMessage={text('errorMessage', 'Some Field Error')}\\\\\\\\n        required={boolean('required', false)}\\\\\\\\n        fullWidth={boolean('fullWidth', true)}\\\\\\\\n        onChange={action('Triggered: onChange')}\\\\\\\\n      />\\\\\\\\n    </Box>\\\\\\\\n  </ThemeWrapper>\\\\\\\\n)\\\\\\\\n\\\\\\\\nexport const WithOutBorder = () => (\\\\\\\\n  <ThemeWrapper>\\\\\\\\n    <Box bgColor='grey.100' p='2em'>\\\\\\\\n      <NumberInput\\\\\\\\n        id='someId'\\\\\\\\n        name='someName'\\\\\\\\n        className='someClassName'\\\\\\\\n        maxLength={number('maxLength', 10)}\\\\\\\\n        error={boolean('error', false)}\\\\\\\\n        onChange={action('Triggered: onChange')}\\\\\\\\n        variant='inline-edit'\\\\\\\\n      />\\\\\\\\n    </Box>\\\\\\\\n  </ThemeWrapper>\\\\\\\\n)\\\\\\\\n\\\\\\\";\\\\n// @ts-ignore\\\\nvar __ADDS_MAP__ = {};\\\\n// @ts-ignore\\\\nvar __MAIN_FILE_LOCATION__ = \\\\\\\"/NumberInput.stories.tsx\\\\\\\";\\\\n// @ts-ignore\\\\nvar __MODULE_DEPENDENCIES__ = [];\\\\n// @ts-ignore\\\\nvar __LOCAL_DEPENDENCIES__ = {};\\\\n// @ts-ignore\\\\nvar __IDS_TO_FRAMEWORKS__ = {};\\\\n        \\\\nimport React from 'react'\\\\nimport NumberInput from '.'\\\\nimport Box from '../../atoms/Box'\\\\nimport { path } from '..'\\\\n\\\\nimport { action } from '@storybook/addon-actions'\\\\nimport { boolean, number, text } from '@storybook/addon-knobs'\\\\nimport ThemeWrapper from '../../../utilities/components/ThemeWrapper'\\\\n\\\\nexport default {parameters: {\\\\\\\"storySource\\\\\\\":{\\\\\\\"source\\\\\\\":\\\\\\\"import React from 'react'\\\\\\\\nimport NumberInput from '.'\\\\\\\\nimport Box from '../../atoms/Box'\\\\\\\\nimport { path } from '..'\\\\\\\\n\\\\\\\\nimport { action } from '@storybook/addon-actions'\\\\\\\\nimport { boolean, number, text } from '@storybook/addon-knobs'\\\\\\\\nimport ThemeWrapper from '../../../utilities/components/ThemeWrapper'\\\\\\\\n\\\\\\\\nexport default {\\\\\\\\n  title: `${path}/NumberInput`,\\\\\\\\n  component: NumberInput\\\\\\\\n}\\\\\\\\n\\\\\\\\nexport const DefaultField = () => (\\\\\\\\n  <ThemeWrapper>\\\\\\\\n    <Box p='1em'>\\\\\\\\n      <NumberInput\\\\\\\\n        id='someId'\\\\\\\\n        name='someName'\\\\\\\\n        className='someClassName'\\\\\\\\n        label={text('label', 'Number Input')}\\\\\\\\n        labelColor={text('labelColor', 'text.inputLabel.default')}\\\\\\\\n        placeholder={text('placeholder', 'Enter number here...')}\\\\\\\\n        maxLength={number('maxLength', 10)}\\\\\\\\n        error={boolean('error', false)}\\\\\\\\n        errorMessage={text('errorMessage', '')}\\\\\\\\n        required={boolean('required', false)}\\\\\\\\n        fullWidth={boolean('fullWidth', false)}\\\\\\\\n        onChange={action('Triggered: onChange')}\\\\\\\\n        allowDecimal={boolean('allowDecimal', false)}\\\\\\\\n        roundingoffDigit={number('roundingoffDigit', 3)}\\\\\\\\n      />\\\\\\\\n    </Box>\\\\\\\\n  </ThemeWrapper>\\\\\\\\n)\\\\\\\\n\\\\\\\\nexport const DefaultFieldWithInitialValue = () => (\\\\\\\\n  <ThemeWrapper>\\\\\\\\n    <Box p='1em'>\\\\\\\\n      <NumberInput\\\\\\\\n        id='someId'\\\\\\\\n        name='someName'\\\\\\\\n        className='someClassName'\\\\\\\\n        label={text('label', 'Number Input')}\\\\\\\\n        labelColor={text('labelColor', 'text.inputLabel.default')}\\\\\\\\n        placeholder={text('placeholder', 'Enter number here...')}\\\\\\\\n        initialValue={number('initialValue', 25)}\\\\\\\\n        maxLength={number('maxLength', 10)}\\\\\\\\n        error={boolean('error', false)}\\\\\\\\n        errorMessage={text('errorMessage', '')}\\\\\\\\n        required={boolean('required', false)}\\\\\\\\n        fullWidth={boolean('fullWidth', false)}\\\\\\\\n        onChange={action('Triggered: onChange')}\\\\\\\\n        allowDecimal={boolean('allowDecimal', false)}\\\\\\\\n      />\\\\\\\\n    </Box>\\\\\\\\n  </ThemeWrapper>\\\\\\\\n)\\\\\\\\n\\\\\\\\nexport const DecimalField = () => (\\\\\\\\n  <ThemeWrapper>\\\\\\\\n    <Box p='1em'>\\\\\\\\n      <NumberInput\\\\\\\\n        id='someId'\\\\\\\\n        name='someName'\\\\\\\\n        className='someClassName'\\\\\\\\n        label={text('label', 'Number Input')}\\\\\\\\n        labelColor={text('labelColor', 'text.inputLabel.default')}\\\\\\\\n        placeholder={text('placeholder', 'Enter number here...')}\\\\\\\\n        maxLength={number('maxLength', 10)}\\\\\\\\n        error={boolean('error', false)}\\\\\\\\n        errorMessage={text('errorMessage', '')}\\\\\\\\n        required={boolean('required', false)}\\\\\\\\n        fullWidth={boolean('fullWidth', false)}\\\\\\\\n        onChange={action('Triggered: onChange')}\\\\\\\\n        allowDecimal={boolean('allowDecimal', true)}\\\\\\\\n        roundingoffDigit={number('roundingoffDigit', 3)}\\\\\\\\n      />\\\\\\\\n    </Box>\\\\\\\\n  </ThemeWrapper>\\\\\\\\n)\\\\\\\\n\\\\\\\\nexport const RequiredField = () => (\\\\\\\\n  <ThemeWrapper>\\\\\\\\n    <Box p='1em'>\\\\\\\\n      <NumberInput\\\\\\\\n        id='someId'\\\\\\\\n        name='someName'\\\\\\\\n        className='someClassName'\\\\\\\\n        label={text('label', 'Number Input')}\\\\\\\\n        labelColor={text('labelColor', 'text.inputLabel.default')}\\\\\\\\n        placeholder={text('placeholder', 'Enter number here...')}\\\\\\\\n        maxLength={number('maxLength', 10)}\\\\\\\\n        error={boolean('error', false)}\\\\\\\\n        errorMessage={text('errorMessage', '')}\\\\\\\\n        required={boolean('required', true)}\\\\\\\\n        fullWidth={boolean('fullWidth', false)}\\\\\\\\n        onChange={action('Triggered: onChange')}\\\\\\\\n      />\\\\\\\\n    </Box>\\\\\\\\n  </ThemeWrapper>\\\\\\\\n)\\\\\\\\n\\\\\\\\nexport const ErrorField = () => (\\\\\\\\n  <ThemeWrapper>\\\\\\\\n    <Box p='1em'>\\\\\\\\n      <NumberInput\\\\\\\\n        id='someId'\\\\\\\\n        name='someName'\\\\\\\\n        className='someClassName'\\\\\\\\n        label={text('label', 'Number Input')}\\\\\\\\n        labelColor={text('labelColor', 'text.inputLabel.default')}\\\\\\\\n        placeholder={text('placeholder', 'Enter number here...')}\\\\\\\\n        maxLength={number('maxLength', 10)}\\\\\\\\n        error={boolean('error', true)}\\\\\\\\n        errorMessage={text('errorMessage', 'Some Field Error')}\\\\\\\\n        required={boolean('required', false)}\\\\\\\\n        fullWidth={boolean('fullWidth', true)}\\\\\\\\n        onChange={action('Triggered: onChange')}\\\\\\\\n      />\\\\\\\\n    </Box>\\\\\\\\n  </ThemeWrapper>\\\\\\\\n)\\\\\\\\n\\\\\\\\nexport const WithOutBorder = () => (\\\\\\\\n  <ThemeWrapper>\\\\\\\\n    <Box bgColor='grey.100' p='2em'>\\\\\\\\n      <NumberInput\\\\\\\\n        id='someId'\\\\\\\\n        name='someName'\\\\\\\\n        className='someClassName'\\\\\\\\n        maxLength={number('maxLength', 10)}\\\\\\\\n        error={boolean('error', false)}\\\\\\\\n        onChange={action('Triggered: onChange')}\\\\\\\\n        variant='inline-edit'\\\\\\\\n      />\\\\\\\\n    </Box>\\\\\\\\n  </ThemeWrapper>\\\\\\\\n)\\\\\\\\n\\\\\\\",\\\\\\\"locationsMap\\\\\\\":{}},},\\\\n  title: `${path}/NumberInput`,\\\\n  component: NumberInput\\\\n}\\\\n\\\\nexport const DefaultField = addSourceDecorator(() => (\\\\n  <ThemeWrapper>\\\\n    <Box p='1em'>\\\\n      <NumberInput\\\\n        id='someId'\\\\n        name='someName'\\\\n        className='someClassName'\\\\n        label={text('label', 'Number Input')}\\\\n        labelColor={text('labelColor', 'text.inputLabel.default')}\\\\n        placeholder={text('placeholder', 'Enter number here...')}\\\\n        maxLength={number('maxLength', 10)}\\\\n        error={boolean('error', false)}\\\\n        errorMessage={text('errorMessage', '')}\\\\n        required={boolean('required', false)}\\\\n        fullWidth={boolean('fullWidth', false)}\\\\n        onChange={action('Triggered: onChange')}\\\\n        allowDecimal={boolean('allowDecimal', false)}\\\\n        roundingoffDigit={number('roundingoffDigit', 3)}\\\\n      />\\\\n    </Box>\\\\n  </ThemeWrapper>\\\\n), {__STORY__, __ADDS_MAP__,__MAIN_FILE_LOCATION__,__MODULE_DEPENDENCIES__,__LOCAL_DEPENDENCIES__,__SOURCE_PREFIX__,__IDS_TO_FRAMEWORKS__});\\\\n\\\\nexport const DefaultFieldWithInitialValue = addSourceDecorator(() => (\\\\n  <ThemeWrapper>\\\\n    <Box p='1em'>\\\\n      <NumberInput\\\\n        id='someId'\\\\n        name='someName'\\\\n        className='someClassName'\\\\n        label={text('label', 'Number Input')}\\\\n        labelColor={text('labelColor', 'text.inputLabel.default')}\\\\n        placeholder={text('placeholder', 'Enter number here...')}\\\\n        initialValue={number('initialValue', 25)}\\\\n        maxLength={number('maxLength', 10)}\\\\n        error={boolean('error', false)}\\\\n        errorMessage={text('errorMessage', '')}\\\\n        required={boolean('required', false)}\\\\n        fullWidth={boolean('fullWidth', false)}\\\\n        onChange={action('Triggered: onChange')}\\\\n        allowDecimal={boolean('allowDecimal', false)}\\\\n      />\\\\n    </Box>\\\\n  </ThemeWrapper>\\\\n), {__STORY__, __ADDS_MAP__,__MAIN_FILE_LOCATION__,__MODULE_DEPENDENCIES__,__LOCAL_DEPENDENCIES__,__SOURCE_PREFIX__,__IDS_TO_FRAMEWORKS__});\\\\n\\\\nexport const DecimalField = addSourceDecorator(() => (\\\\n  <ThemeWrapper>\\\\n    <Box p='1em'>\\\\n      <NumberInput\\\\n        id='someId'\\\\n        name='someName'\\\\n        className='someClassName'\\\\n        label={text('label', 'Number Input')}\\\\n        labelColor={text('labelColor', 'text.inputLabel.default')}\\\\n        placeholder={text('placeholder', 'Enter number here...')}\\\\n        maxLength={number('maxLength', 10)}\\\\n        error={boolean('error', false)}\\\\n        errorMessage={text('errorMessage', '')}\\\\n        required={boolean('required', false)}\\\\n        fullWidth={boolean('fullWidth', false)}\\\\n        onChange={action('Triggered: onChange')}\\\\n        allowDecimal={boolean('allowDecimal', true)}\\\\n        roundingoffDigit={number('roundingoffDigit', 3)}\\\\n      />\\\\n    </Box>\\\\n  </ThemeWrapper>\\\\n), {__STORY__, __ADDS_MAP__,__MAIN_FILE_LOCATION__,__MODULE_DEPENDENCIES__,__LOCAL_DEPENDENCIES__,__SOURCE_PREFIX__,__IDS_TO_FRAMEWORKS__});\\\\n\\\\nexport const RequiredField = addSourceDecorator(() => (\\\\n  <ThemeWrapper>\\\\n    <Box p='1em'>\\\\n      <NumberInput\\\\n        id='someId'\\\\n        name='someName'\\\\n        className='someClassName'\\\\n        label={text('label', 'Number Input')}\\\\n        labelColor={text('labelColor', 'text.inputLabel.default')}\\\\n        placeholder={text('placeholder', 'Enter number here...')}\\\\n        maxLength={number('maxLength', 10)}\\\\n        error={boolean('error', false)}\\\\n        errorMessage={text('errorMessage', '')}\\\\n        required={boolean('required', true)}\\\\n        fullWidth={boolean('fullWidth', false)}\\\\n        onChange={action('Triggered: onChange')}\\\\n      />\\\\n    </Box>\\\\n  </ThemeWrapper>\\\\n), {__STORY__, __ADDS_MAP__,__MAIN_FILE_LOCATION__,__MODULE_DEPENDENCIES__,__LOCAL_DEPENDENCIES__,__SOURCE_PREFIX__,__IDS_TO_FRAMEWORKS__});\\\\n\\\\nexport const ErrorField = addSourceDecorator(() => (\\\\n  <ThemeWrapper>\\\\n    <Box p='1em'>\\\\n      <NumberInput\\\\n        id='someId'\\\\n        name='someName'\\\\n        className='someClassName'\\\\n        label={text('label', 'Number Input')}\\\\n        labelColor={text('labelColor', 'text.inputLabel.default')}\\\\n        placeholder={text('placeholder', 'Enter number here...')}\\\\n        maxLength={number('maxLength', 10)}\\\\n        error={boolean('error', true)}\\\\n        errorMessage={text('errorMessage', 'Some Field Error')}\\\\n        required={boolean('required', false)}\\\\n        fullWidth={boolean('fullWidth', true)}\\\\n        onChange={action('Triggered: onChange')}\\\\n      />\\\\n    </Box>\\\\n  </ThemeWrapper>\\\\n), {__STORY__, __ADDS_MAP__,__MAIN_FILE_LOCATION__,__MODULE_DEPENDENCIES__,__LOCAL_DEPENDENCIES__,__SOURCE_PREFIX__,__IDS_TO_FRAMEWORKS__});\\\\n\\\\nexport const WithOutBorder = addSourceDecorator(() => (\\\\n  <ThemeWrapper>\\\\n    <Box bgColor='grey.100' p='2em'>\\\\n      <NumberInput\\\\n        id='someId'\\\\n        name='someName'\\\\n        className='someClassName'\\\\n        maxLength={number('maxLength', 10)}\\\\n        error={boolean('error', false)}\\\\n        onChange={action('Triggered: onChange')}\\\\n        variant='inline-edit'\\\\n      />\\\\n    </Box>\\\\n  </ThemeWrapper>\\\\n), {__STORY__, __ADDS_MAP__,__MAIN_FILE_LOCATION__,__MODULE_DEPENDENCIES__,__LOCAL_DEPENDENCIES__,__SOURCE_PREFIX__,__IDS_TO_FRAMEWORKS__});\\\",\\\"locationsMap\\\":{}},\\\"storySource\\\":{\\\"source\\\":\\\"import React from 'react'\\\\nimport NumberInput from '.'\\\\nimport Box from '../../atoms/Box'\\\\nimport { path } from '..'\\\\n\\\\nimport { action } from '@storybook/addon-actions'\\\\nimport { boolean, number, text } from '@storybook/addon-knobs'\\\\nimport ThemeWrapper from '../../../utilities/components/ThemeWrapper'\\\\n\\\\nexport default {\\\\n  title: `${path}/NumberInput`,\\\\n  component: NumberInput\\\\n}\\\\n\\\\nexport const DefaultField = () => (\\\\n  <ThemeWrapper>\\\\n    <Box p='1em'>\\\\n      <NumberInput\\\\n        id='someId'\\\\n        name='someName'\\\\n        className='someClassName'\\\\n        label={text('label', 'Number Input')}\\\\n        labelColor={text('labelColor', 'text.inputLabel.default')}\\\\n        placeholder={text('placeholder', 'Enter number here...')}\\\\n        maxLength={number('maxLength', 10)}\\\\n        error={boolean('error', false)}\\\\n        errorMessage={text('errorMessage', '')}\\\\n        required={boolean('required', false)}\\\\n        fullWidth={boolean('fullWidth', false)}\\\\n        onChange={action('Triggered: onChange')}\\\\n        allowDecimal={boolean('allowDecimal', false)}\\\\n        roundingoffDigit={number('roundingoffDigit', 3)}\\\\n      />\\\\n    </Box>\\\\n  </ThemeWrapper>\\\\n)\\\\n\\\\nexport const DefaultFieldWithInitialValue = () => (\\\\n  <ThemeWrapper>\\\\n    <Box p='1em'>\\\\n      <NumberInput\\\\n        id='someId'\\\\n        name='someName'\\\\n        className='someClassName'\\\\n        label={text('label', 'Number Input')}\\\\n        labelColor={text('labelColor', 'text.inputLabel.default')}\\\\n        placeholder={text('placeholder', 'Enter number here...')}\\\\n        initialValue={number('initialValue', 25)}\\\\n        maxLength={number('maxLength', 10)}\\\\n        error={boolean('error', false)}\\\\n        errorMessage={text('errorMessage', '')}\\\\n        required={boolean('required', false)}\\\\n        fullWidth={boolean('fullWidth', false)}\\\\n        onChange={action('Triggered: onChange')}\\\\n        allowDecimal={boolean('allowDecimal', false)}\\\\n      />\\\\n    </Box>\\\\n  </ThemeWrapper>\\\\n)\\\\n\\\\nexport const DecimalField = () => (\\\\n  <ThemeWrapper>\\\\n    <Box p='1em'>\\\\n      <NumberInput\\\\n        id='someId'\\\\n        name='someName'\\\\n        className='someClassName'\\\\n        label={text('label', 'Number Input')}\\\\n        labelColor={text('labelColor', 'text.inputLabel.default')}\\\\n        placeholder={text('placeholder', 'Enter number here...')}\\\\n        maxLength={number('maxLength', 10)}\\\\n        error={boolean('error', false)}\\\\n        errorMessage={text('errorMessage', '')}\\\\n        required={boolean('required', false)}\\\\n        fullWidth={boolean('fullWidth', false)}\\\\n        onChange={action('Triggered: onChange')}\\\\n        allowDecimal={boolean('allowDecimal', true)}\\\\n        roundingoffDigit={number('roundingoffDigit', 3)}\\\\n      />\\\\n    </Box>\\\\n  </ThemeWrapper>\\\\n)\\\\n\\\\nexport const RequiredField = () => (\\\\n  <ThemeWrapper>\\\\n    <Box p='1em'>\\\\n      <NumberInput\\\\n        id='someId'\\\\n        name='someName'\\\\n        className='someClassName'\\\\n        label={text('label', 'Number Input')}\\\\n        labelColor={text('labelColor', 'text.inputLabel.default')}\\\\n        placeholder={text('placeholder', 'Enter number here...')}\\\\n        maxLength={number('maxLength', 10)}\\\\n        error={boolean('error', false)}\\\\n        errorMessage={text('errorMessage', '')}\\\\n        required={boolean('required', true)}\\\\n        fullWidth={boolean('fullWidth', false)}\\\\n        onChange={action('Triggered: onChange')}\\\\n      />\\\\n    </Box>\\\\n  </ThemeWrapper>\\\\n)\\\\n\\\\nexport const ErrorField = () => (\\\\n  <ThemeWrapper>\\\\n    <Box p='1em'>\\\\n      <NumberInput\\\\n        id='someId'\\\\n        name='someName'\\\\n        className='someClassName'\\\\n        label={text('label', 'Number Input')}\\\\n        labelColor={text('labelColor', 'text.inputLabel.default')}\\\\n        placeholder={text('placeholder', 'Enter number here...')}\\\\n        maxLength={number('maxLength', 10)}\\\\n        error={boolean('error', true)}\\\\n        errorMessage={text('errorMessage', 'Some Field Error')}\\\\n        required={boolean('required', false)}\\\\n        fullWidth={boolean('fullWidth', true)}\\\\n        onChange={action('Triggered: onChange')}\\\\n      />\\\\n    </Box>\\\\n  </ThemeWrapper>\\\\n)\\\\n\\\\nexport const WithOutBorder = () => (\\\\n  <ThemeWrapper>\\\\n    <Box bgColor='grey.100' p='2em'>\\\\n      <NumberInput\\\\n        id='someId'\\\\n        name='someName'\\\\n        className='someClassName'\\\\n        maxLength={number('maxLength', 10)}\\\\n        error={boolean('error', false)}\\\\n        onChange={action('Triggered: onChange')}\\\\n        variant='inline-edit'\\\\n      />\\\\n    </Box>\\\\n  </ThemeWrapper>\\\\n)\\\\n\\\",\\\"locationsMap\\\":{}},},\\n  title: `${path}/NumberInput`,\\n  component: NumberInput\\n}\\n\\nexport const DefaultField = addSourceDecorator(addSourceDecorator(() => (\\n  <ThemeWrapper>\\n    <Box p='1em'>\\n      <NumberInput\\n        id='someId'\\n        name='someName'\\n        className='someClassName'\\n        label={text('label', 'Number Input')}\\n        labelColor={text('labelColor', 'text.inputLabel.default')}\\n        placeholder={text('placeholder', 'Enter number here...')}\\n        maxLength={number('maxLength', 10)}\\n        error={boolean('error', false)}\\n        errorMessage={text('errorMessage', '')}\\n        required={boolean('required', false)}\\n        fullWidth={boolean('fullWidth', false)}\\n        onChange={action('Triggered: onChange')}\\n        allowDecimal={boolean('allowDecimal', false)}\\n        roundingoffDigit={number('roundingoffDigit', 3)}\\n      />\\n    </Box>\\n  </ThemeWrapper>\\n), {__STORY__, __ADDS_MAP__,__MAIN_FILE_LOCATION__,__MODULE_DEPENDENCIES__,__LOCAL_DEPENDENCIES__,__SOURCE_PREFIX__,__IDS_TO_FRAMEWORKS__}), {__STORY__, __ADDS_MAP__,__MAIN_FILE_LOCATION__,__MODULE_DEPENDENCIES__,__LOCAL_DEPENDENCIES__,__SOURCE_PREFIX__,__IDS_TO_FRAMEWORKS__});;\\n\\nexport const DefaultFieldWithInitialValue = addSourceDecorator(addSourceDecorator(() => (\\n  <ThemeWrapper>\\n    <Box p='1em'>\\n      <NumberInput\\n        id='someId'\\n        name='someName'\\n        className='someClassName'\\n        label={text('label', 'Number Input')}\\n        labelColor={text('labelColor', 'text.inputLabel.default')}\\n        placeholder={text('placeholder', 'Enter number here...')}\\n        initialValue={number('initialValue', 25)}\\n        maxLength={number('maxLength', 10)}\\n        error={boolean('error', false)}\\n        errorMessage={text('errorMessage', '')}\\n        required={boolean('required', false)}\\n        fullWidth={boolean('fullWidth', false)}\\n        onChange={action('Triggered: onChange')}\\n        allowDecimal={boolean('allowDecimal', false)}\\n      />\\n    </Box>\\n  </ThemeWrapper>\\n), {__STORY__, __ADDS_MAP__,__MAIN_FILE_LOCATION__,__MODULE_DEPENDENCIES__,__LOCAL_DEPENDENCIES__,__SOURCE_PREFIX__,__IDS_TO_FRAMEWORKS__}), {__STORY__, __ADDS_MAP__,__MAIN_FILE_LOCATION__,__MODULE_DEPENDENCIES__,__LOCAL_DEPENDENCIES__,__SOURCE_PREFIX__,__IDS_TO_FRAMEWORKS__});;\\n\\nexport const DecimalField = addSourceDecorator(addSourceDecorator(() => (\\n  <ThemeWrapper>\\n    <Box p='1em'>\\n      <NumberInput\\n        id='someId'\\n        name='someName'\\n        className='someClassName'\\n        label={text('label', 'Number Input')}\\n        labelColor={text('labelColor', 'text.inputLabel.default')}\\n        placeholder={text('placeholder', 'Enter number here...')}\\n        maxLength={number('maxLength', 10)}\\n        error={boolean('error', false)}\\n        errorMessage={text('errorMessage', '')}\\n        required={boolean('required', false)}\\n        fullWidth={boolean('fullWidth', false)}\\n        onChange={action('Triggered: onChange')}\\n        allowDecimal={boolean('allowDecimal', true)}\\n        roundingoffDigit={number('roundingoffDigit', 3)}\\n      />\\n    </Box>\\n  </ThemeWrapper>\\n), {__STORY__, __ADDS_MAP__,__MAIN_FILE_LOCATION__,__MODULE_DEPENDENCIES__,__LOCAL_DEPENDENCIES__,__SOURCE_PREFIX__,__IDS_TO_FRAMEWORKS__}), {__STORY__, __ADDS_MAP__,__MAIN_FILE_LOCATION__,__MODULE_DEPENDENCIES__,__LOCAL_DEPENDENCIES__,__SOURCE_PREFIX__,__IDS_TO_FRAMEWORKS__});;\\n\\nexport const RequiredField = addSourceDecorator(addSourceDecorator(() => (\\n  <ThemeWrapper>\\n    <Box p='1em'>\\n      <NumberInput\\n        id='someId'\\n        name='someName'\\n        className='someClassName'\\n        label={text('label', 'Number Input')}\\n        labelColor={text('labelColor', 'text.inputLabel.default')}\\n        placeholder={text('placeholder', 'Enter number here...')}\\n        maxLength={number('maxLength', 10)}\\n        error={boolean('error', false)}\\n        errorMessage={text('errorMessage', '')}\\n        required={boolean('required', true)}\\n        fullWidth={boolean('fullWidth', false)}\\n        onChange={action('Triggered: onChange')}\\n      />\\n    </Box>\\n  </ThemeWrapper>\\n), {__STORY__, __ADDS_MAP__,__MAIN_FILE_LOCATION__,__MODULE_DEPENDENCIES__,__LOCAL_DEPENDENCIES__,__SOURCE_PREFIX__,__IDS_TO_FRAMEWORKS__}), {__STORY__, __ADDS_MAP__,__MAIN_FILE_LOCATION__,__MODULE_DEPENDENCIES__,__LOCAL_DEPENDENCIES__,__SOURCE_PREFIX__,__IDS_TO_FRAMEWORKS__});;\\n\\nexport const ErrorField = addSourceDecorator(addSourceDecorator(() => (\\n  <ThemeWrapper>\\n    <Box p='1em'>\\n      <NumberInput\\n        id='someId'\\n        name='someName'\\n        className='someClassName'\\n        label={text('label', 'Number Input')}\\n        labelColor={text('labelColor', 'text.inputLabel.default')}\\n        placeholder={text('placeholder', 'Enter number here...')}\\n        maxLength={number('maxLength', 10)}\\n        error={boolean('error', true)}\\n        errorMessage={text('errorMessage', 'Some Field Error')}\\n        required={boolean('required', false)}\\n        fullWidth={boolean('fullWidth', true)}\\n        onChange={action('Triggered: onChange')}\\n      />\\n    </Box>\\n  </ThemeWrapper>\\n), {__STORY__, __ADDS_MAP__,__MAIN_FILE_LOCATION__,__MODULE_DEPENDENCIES__,__LOCAL_DEPENDENCIES__,__SOURCE_PREFIX__,__IDS_TO_FRAMEWORKS__}), {__STORY__, __ADDS_MAP__,__MAIN_FILE_LOCATION__,__MODULE_DEPENDENCIES__,__LOCAL_DEPENDENCIES__,__SOURCE_PREFIX__,__IDS_TO_FRAMEWORKS__});;\\n\\nexport const WithOutBorder = addSourceDecorator(addSourceDecorator(() => (\\n  <ThemeWrapper>\\n    <Box bgColor='grey.100' p='2em'>\\n      <NumberInput\\n        id='someId'\\n        name='someName'\\n        className='someClassName'\\n        maxLength={number('maxLength', 10)}\\n        error={boolean('error', false)}\\n        onChange={action('Triggered: onChange')}\\n        variant='inline-edit'\\n      />\\n    </Box>\\n  </ThemeWrapper>\\n), {__STORY__, __ADDS_MAP__,__MAIN_FILE_LOCATION__,__MODULE_DEPENDENCIES__,__LOCAL_DEPENDENCIES__,__SOURCE_PREFIX__,__IDS_TO_FRAMEWORKS__}), {__STORY__, __ADDS_MAP__,__MAIN_FILE_LOCATION__,__MODULE_DEPENDENCIES__,__LOCAL_DEPENDENCIES__,__SOURCE_PREFIX__,__IDS_TO_FRAMEWORKS__});\"; // @ts-ignore\n\nvar __ADDS_MAP__ = {}; // @ts-ignore\n\nvar __MAIN_FILE_LOCATION__ = \"/NumberInput.stories.tsx\"; // @ts-ignore\n\nvar __MODULE_DEPENDENCIES__ = []; // @ts-ignore\n\nvar __LOCAL_DEPENDENCIES__ = {}; // @ts-ignore\n\nvar __IDS_TO_FRAMEWORKS__ = {};\n/* eslint-disable */\n// @ts-nocheck\n// @ts-ignore\n\nvar withSourceLoader = require('@storybook/source-loader/preview').withSource; // @ts-ignore\n\n\nvar addSourceDecorator = require(\"@storybook/source-loader/preview\").addSource; // @ts-ignore\n\n\nvar __SOURCE_PREFIX__ = \"/Users/farhanansari/Code/ui-library/src/components/molecules/NumberInput\"; // @ts-ignore\n\nvar __STORY__ = \"\\n\\n// @ts-nocheck\\n// @ts-ignore\\nvar withSourceLoader = require('@storybook/source-loader/preview').withSource;\\n// @ts-ignore\\nvar addSourceDecorator = require(\\\"@storybook/source-loader/preview\\\").addSource;\\n// @ts-ignore\\nvar __SOURCE_PREFIX__ = \\\"/Users/farhanansari/Code/ui-library/src/components/molecules/NumberInput\\\";\\n// @ts-ignore\\nvar __STORY__ = \\\"import React from 'react'\\\\nimport NumberInput from '.'\\\\nimport Box from '../../atoms/Box'\\\\nimport { path } from '..'\\\\n\\\\nimport { action } from '@storybook/addon-actions'\\\\nimport { boolean, number, text } from '@storybook/addon-knobs'\\\\nimport ThemeWrapper from '../../../utilities/components/ThemeWrapper'\\\\n\\\\nexport default {\\\\n  title: `${path}/NumberInput`,\\\\n  component: NumberInput\\\\n}\\\\n\\\\nexport const DefaultField = () => (\\\\n  <ThemeWrapper>\\\\n    <Box p='1em'>\\\\n      <NumberInput\\\\n        id='someId'\\\\n        name='someName'\\\\n        className='someClassName'\\\\n        label={text('label', 'Number Input')}\\\\n        labelColor={text('labelColor', 'text.inputLabel.default')}\\\\n        placeholder={text('placeholder', 'Enter number here...')}\\\\n        maxLength={number('maxLength', 10)}\\\\n        error={boolean('error', false)}\\\\n        errorMessage={text('errorMessage', '')}\\\\n        required={boolean('required', false)}\\\\n        fullWidth={boolean('fullWidth', false)}\\\\n        onChange={action('Triggered: onChange')}\\\\n        allowDecimal={boolean('allowDecimal', false)}\\\\n        roundingoffDigit={number('roundingoffDigit', 3)}\\\\n      />\\\\n    </Box>\\\\n  </ThemeWrapper>\\\\n)\\\\n\\\\nexport const DefaultFieldWithInitialValue = () => (\\\\n  <ThemeWrapper>\\\\n    <Box p='1em'>\\\\n      <NumberInput\\\\n        id='someId'\\\\n        name='someName'\\\\n        className='someClassName'\\\\n        label={text('label', 'Number Input')}\\\\n        labelColor={text('labelColor', 'text.inputLabel.default')}\\\\n        placeholder={text('placeholder', 'Enter number here...')}\\\\n        initialValue={number('initialValue', 25)}\\\\n        maxLength={number('maxLength', 10)}\\\\n        error={boolean('error', false)}\\\\n        errorMessage={text('errorMessage', '')}\\\\n        required={boolean('required', false)}\\\\n        fullWidth={boolean('fullWidth', false)}\\\\n        onChange={action('Triggered: onChange')}\\\\n        allowDecimal={boolean('allowDecimal', false)}\\\\n      />\\\\n    </Box>\\\\n  </ThemeWrapper>\\\\n)\\\\n\\\\nexport const DecimalField = () => (\\\\n  <ThemeWrapper>\\\\n    <Box p='1em'>\\\\n      <NumberInput\\\\n        id='someId'\\\\n        name='someName'\\\\n        className='someClassName'\\\\n        label={text('label', 'Number Input')}\\\\n        labelColor={text('labelColor', 'text.inputLabel.default')}\\\\n        placeholder={text('placeholder', 'Enter number here...')}\\\\n        maxLength={number('maxLength', 10)}\\\\n        error={boolean('error', false)}\\\\n        errorMessage={text('errorMessage', '')}\\\\n        required={boolean('required', false)}\\\\n        fullWidth={boolean('fullWidth', false)}\\\\n        onChange={action('Triggered: onChange')}\\\\n        allowDecimal={boolean('allowDecimal', true)}\\\\n        roundingoffDigit={number('roundingoffDigit', 3)}\\\\n      />\\\\n    </Box>\\\\n  </ThemeWrapper>\\\\n)\\\\n\\\\nexport const RequiredField = () => (\\\\n  <ThemeWrapper>\\\\n    <Box p='1em'>\\\\n      <NumberInput\\\\n        id='someId'\\\\n        name='someName'\\\\n        className='someClassName'\\\\n        label={text('label', 'Number Input')}\\\\n        labelColor={text('labelColor', 'text.inputLabel.default')}\\\\n        placeholder={text('placeholder', 'Enter number here...')}\\\\n        maxLength={number('maxLength', 10)}\\\\n        error={boolean('error', false)}\\\\n        errorMessage={text('errorMessage', '')}\\\\n        required={boolean('required', true)}\\\\n        fullWidth={boolean('fullWidth', false)}\\\\n        onChange={action('Triggered: onChange')}\\\\n      />\\\\n    </Box>\\\\n  </ThemeWrapper>\\\\n)\\\\n\\\\nexport const ErrorField = () => (\\\\n  <ThemeWrapper>\\\\n    <Box p='1em'>\\\\n      <NumberInput\\\\n        id='someId'\\\\n        name='someName'\\\\n        className='someClassName'\\\\n        label={text('label', 'Number Input')}\\\\n        labelColor={text('labelColor', 'text.inputLabel.default')}\\\\n        placeholder={text('placeholder', 'Enter number here...')}\\\\n        maxLength={number('maxLength', 10)}\\\\n        error={boolean('error', true)}\\\\n        errorMessage={text('errorMessage', 'Some Field Error')}\\\\n        required={boolean('required', false)}\\\\n        fullWidth={boolean('fullWidth', true)}\\\\n        onChange={action('Triggered: onChange')}\\\\n      />\\\\n    </Box>\\\\n  </ThemeWrapper>\\\\n)\\\\n\\\\nexport const WithOutBorder = () => (\\\\n  <ThemeWrapper>\\\\n    <Box bgColor='grey.100' p='2em'>\\\\n      <NumberInput\\\\n        id='someId'\\\\n        name='someName'\\\\n        className='someClassName'\\\\n        maxLength={number('maxLength', 10)}\\\\n        error={boolean('error', false)}\\\\n        onChange={action('Triggered: onChange')}\\\\n        variant='inline-edit'\\\\n      />\\\\n    </Box>\\\\n  </ThemeWrapper>\\\\n)\\\\n\\\";\\n// @ts-ignore\\nvar __ADDS_MAP__ = {};\\n// @ts-ignore\\nvar __MAIN_FILE_LOCATION__ = \\\"/NumberInput.stories.tsx\\\";\\n// @ts-ignore\\nvar __MODULE_DEPENDENCIES__ = [];\\n// @ts-ignore\\nvar __LOCAL_DEPENDENCIES__ = {};\\n// @ts-ignore\\nvar __IDS_TO_FRAMEWORKS__ = {};\\n        \\nimport React from 'react'\\nimport NumberInput from '.'\\nimport Box from '../../atoms/Box'\\nimport { path } from '..'\\n\\nimport { action } from '@storybook/addon-actions'\\nimport { boolean, number, text } from '@storybook/addon-knobs'\\nimport ThemeWrapper from '../../../utilities/components/ThemeWrapper'\\n\\nexport default {parameters: {\\\"storySource\\\":{\\\"source\\\":\\\"import React from 'react'\\\\nimport NumberInput from '.'\\\\nimport Box from '../../atoms/Box'\\\\nimport { path } from '..'\\\\n\\\\nimport { action } from '@storybook/addon-actions'\\\\nimport { boolean, number, text } from '@storybook/addon-knobs'\\\\nimport ThemeWrapper from '../../../utilities/components/ThemeWrapper'\\\\n\\\\nexport default {\\\\n  title: `${path}/NumberInput`,\\\\n  component: NumberInput\\\\n}\\\\n\\\\nexport const DefaultField = () => (\\\\n  <ThemeWrapper>\\\\n    <Box p='1em'>\\\\n      <NumberInput\\\\n        id='someId'\\\\n        name='someName'\\\\n        className='someClassName'\\\\n        label={text('label', 'Number Input')}\\\\n        labelColor={text('labelColor', 'text.inputLabel.default')}\\\\n        placeholder={text('placeholder', 'Enter number here...')}\\\\n        maxLength={number('maxLength', 10)}\\\\n        error={boolean('error', false)}\\\\n        errorMessage={text('errorMessage', '')}\\\\n        required={boolean('required', false)}\\\\n        fullWidth={boolean('fullWidth', false)}\\\\n        onChange={action('Triggered: onChange')}\\\\n        allowDecimal={boolean('allowDecimal', false)}\\\\n        roundingoffDigit={number('roundingoffDigit', 3)}\\\\n      />\\\\n    </Box>\\\\n  </ThemeWrapper>\\\\n)\\\\n\\\\nexport const DefaultFieldWithInitialValue = () => (\\\\n  <ThemeWrapper>\\\\n    <Box p='1em'>\\\\n      <NumberInput\\\\n        id='someId'\\\\n        name='someName'\\\\n        className='someClassName'\\\\n        label={text('label', 'Number Input')}\\\\n        labelColor={text('labelColor', 'text.inputLabel.default')}\\\\n        placeholder={text('placeholder', 'Enter number here...')}\\\\n        initialValue={number('initialValue', 25)}\\\\n        maxLength={number('maxLength', 10)}\\\\n        error={boolean('error', false)}\\\\n        errorMessage={text('errorMessage', '')}\\\\n        required={boolean('required', false)}\\\\n        fullWidth={boolean('fullWidth', false)}\\\\n        onChange={action('Triggered: onChange')}\\\\n        allowDecimal={boolean('allowDecimal', false)}\\\\n      />\\\\n    </Box>\\\\n  </ThemeWrapper>\\\\n)\\\\n\\\\nexport const DecimalField = () => (\\\\n  <ThemeWrapper>\\\\n    <Box p='1em'>\\\\n      <NumberInput\\\\n        id='someId'\\\\n        name='someName'\\\\n        className='someClassName'\\\\n        label={text('label', 'Number Input')}\\\\n        labelColor={text('labelColor', 'text.inputLabel.default')}\\\\n        placeholder={text('placeholder', 'Enter number here...')}\\\\n        maxLength={number('maxLength', 10)}\\\\n        error={boolean('error', false)}\\\\n        errorMessage={text('errorMessage', '')}\\\\n        required={boolean('required', false)}\\\\n        fullWidth={boolean('fullWidth', false)}\\\\n        onChange={action('Triggered: onChange')}\\\\n        allowDecimal={boolean('allowDecimal', true)}\\\\n        roundingoffDigit={number('roundingoffDigit', 3)}\\\\n      />\\\\n    </Box>\\\\n  </ThemeWrapper>\\\\n)\\\\n\\\\nexport const RequiredField = () => (\\\\n  <ThemeWrapper>\\\\n    <Box p='1em'>\\\\n      <NumberInput\\\\n        id='someId'\\\\n        name='someName'\\\\n        className='someClassName'\\\\n        label={text('label', 'Number Input')}\\\\n        labelColor={text('labelColor', 'text.inputLabel.default')}\\\\n        placeholder={text('placeholder', 'Enter number here...')}\\\\n        maxLength={number('maxLength', 10)}\\\\n        error={boolean('error', false)}\\\\n        errorMessage={text('errorMessage', '')}\\\\n        required={boolean('required', true)}\\\\n        fullWidth={boolean('fullWidth', false)}\\\\n        onChange={action('Triggered: onChange')}\\\\n      />\\\\n    </Box>\\\\n  </ThemeWrapper>\\\\n)\\\\n\\\\nexport const ErrorField = () => (\\\\n  <ThemeWrapper>\\\\n    <Box p='1em'>\\\\n      <NumberInput\\\\n        id='someId'\\\\n        name='someName'\\\\n        className='someClassName'\\\\n        label={text('label', 'Number Input')}\\\\n        labelColor={text('labelColor', 'text.inputLabel.default')}\\\\n        placeholder={text('placeholder', 'Enter number here...')}\\\\n        maxLength={number('maxLength', 10)}\\\\n        error={boolean('error', true)}\\\\n        errorMessage={text('errorMessage', 'Some Field Error')}\\\\n        required={boolean('required', false)}\\\\n        fullWidth={boolean('fullWidth', true)}\\\\n        onChange={action('Triggered: onChange')}\\\\n      />\\\\n    </Box>\\\\n  </ThemeWrapper>\\\\n)\\\\n\\\\nexport const WithOutBorder = () => (\\\\n  <ThemeWrapper>\\\\n    <Box bgColor='grey.100' p='2em'>\\\\n      <NumberInput\\\\n        id='someId'\\\\n        name='someName'\\\\n        className='someClassName'\\\\n        maxLength={number('maxLength', 10)}\\\\n        error={boolean('error', false)}\\\\n        onChange={action('Triggered: onChange')}\\\\n        variant='inline-edit'\\\\n      />\\\\n    </Box>\\\\n  </ThemeWrapper>\\\\n)\\\\n\\\",\\\"locationsMap\\\":{}},},\\n  title: `${path}/NumberInput`,\\n  component: NumberInput\\n}\\n\\nexport const DefaultField = addSourceDecorator(() => (\\n  <ThemeWrapper>\\n    <Box p='1em'>\\n      <NumberInput\\n        id='someId'\\n        name='someName'\\n        className='someClassName'\\n        label={text('label', 'Number Input')}\\n        labelColor={text('labelColor', 'text.inputLabel.default')}\\n        placeholder={text('placeholder', 'Enter number here...')}\\n        maxLength={number('maxLength', 10)}\\n        error={boolean('error', false)}\\n        errorMessage={text('errorMessage', '')}\\n        required={boolean('required', false)}\\n        fullWidth={boolean('fullWidth', false)}\\n        onChange={action('Triggered: onChange')}\\n        allowDecimal={boolean('allowDecimal', false)}\\n        roundingoffDigit={number('roundingoffDigit', 3)}\\n      />\\n    </Box>\\n  </ThemeWrapper>\\n), {__STORY__, __ADDS_MAP__,__MAIN_FILE_LOCATION__,__MODULE_DEPENDENCIES__,__LOCAL_DEPENDENCIES__,__SOURCE_PREFIX__,__IDS_TO_FRAMEWORKS__});\\n\\nexport const DefaultFieldWithInitialValue = addSourceDecorator(() => (\\n  <ThemeWrapper>\\n    <Box p='1em'>\\n      <NumberInput\\n        id='someId'\\n        name='someName'\\n        className='someClassName'\\n        label={text('label', 'Number Input')}\\n        labelColor={text('labelColor', 'text.inputLabel.default')}\\n        placeholder={text('placeholder', 'Enter number here...')}\\n        initialValue={number('initialValue', 25)}\\n        maxLength={number('maxLength', 10)}\\n        error={boolean('error', false)}\\n        errorMessage={text('errorMessage', '')}\\n        required={boolean('required', false)}\\n        fullWidth={boolean('fullWidth', false)}\\n        onChange={action('Triggered: onChange')}\\n        allowDecimal={boolean('allowDecimal', false)}\\n      />\\n    </Box>\\n  </ThemeWrapper>\\n), {__STORY__, __ADDS_MAP__,__MAIN_FILE_LOCATION__,__MODULE_DEPENDENCIES__,__LOCAL_DEPENDENCIES__,__SOURCE_PREFIX__,__IDS_TO_FRAMEWORKS__});\\n\\nexport const DecimalField = addSourceDecorator(() => (\\n  <ThemeWrapper>\\n    <Box p='1em'>\\n      <NumberInput\\n        id='someId'\\n        name='someName'\\n        className='someClassName'\\n        label={text('label', 'Number Input')}\\n        labelColor={text('labelColor', 'text.inputLabel.default')}\\n        placeholder={text('placeholder', 'Enter number here...')}\\n        maxLength={number('maxLength', 10)}\\n        error={boolean('error', false)}\\n        errorMessage={text('errorMessage', '')}\\n        required={boolean('required', false)}\\n        fullWidth={boolean('fullWidth', false)}\\n        onChange={action('Triggered: onChange')}\\n        allowDecimal={boolean('allowDecimal', true)}\\n        roundingoffDigit={number('roundingoffDigit', 3)}\\n      />\\n    </Box>\\n  </ThemeWrapper>\\n), {__STORY__, __ADDS_MAP__,__MAIN_FILE_LOCATION__,__MODULE_DEPENDENCIES__,__LOCAL_DEPENDENCIES__,__SOURCE_PREFIX__,__IDS_TO_FRAMEWORKS__});\\n\\nexport const RequiredField = addSourceDecorator(() => (\\n  <ThemeWrapper>\\n    <Box p='1em'>\\n      <NumberInput\\n        id='someId'\\n        name='someName'\\n        className='someClassName'\\n        label={text('label', 'Number Input')}\\n        labelColor={text('labelColor', 'text.inputLabel.default')}\\n        placeholder={text('placeholder', 'Enter number here...')}\\n        maxLength={number('maxLength', 10)}\\n        error={boolean('error', false)}\\n        errorMessage={text('errorMessage', '')}\\n        required={boolean('required', true)}\\n        fullWidth={boolean('fullWidth', false)}\\n        onChange={action('Triggered: onChange')}\\n      />\\n    </Box>\\n  </ThemeWrapper>\\n), {__STORY__, __ADDS_MAP__,__MAIN_FILE_LOCATION__,__MODULE_DEPENDENCIES__,__LOCAL_DEPENDENCIES__,__SOURCE_PREFIX__,__IDS_TO_FRAMEWORKS__});\\n\\nexport const ErrorField = addSourceDecorator(() => (\\n  <ThemeWrapper>\\n    <Box p='1em'>\\n      <NumberInput\\n        id='someId'\\n        name='someName'\\n        className='someClassName'\\n        label={text('label', 'Number Input')}\\n        labelColor={text('labelColor', 'text.inputLabel.default')}\\n        placeholder={text('placeholder', 'Enter number here...')}\\n        maxLength={number('maxLength', 10)}\\n        error={boolean('error', true)}\\n        errorMessage={text('errorMessage', 'Some Field Error')}\\n        required={boolean('required', false)}\\n        fullWidth={boolean('fullWidth', true)}\\n        onChange={action('Triggered: onChange')}\\n      />\\n    </Box>\\n  </ThemeWrapper>\\n), {__STORY__, __ADDS_MAP__,__MAIN_FILE_LOCATION__,__MODULE_DEPENDENCIES__,__LOCAL_DEPENDENCIES__,__SOURCE_PREFIX__,__IDS_TO_FRAMEWORKS__});\\n\\nexport const WithOutBorder = addSourceDecorator(() => (\\n  <ThemeWrapper>\\n    <Box bgColor='grey.100' p='2em'>\\n      <NumberInput\\n        id='someId'\\n        name='someName'\\n        className='someClassName'\\n        maxLength={number('maxLength', 10)}\\n        error={boolean('error', false)}\\n        onChange={action('Triggered: onChange')}\\n        variant='inline-edit'\\n      />\\n    </Box>\\n  </ThemeWrapper>\\n), {__STORY__, __ADDS_MAP__,__MAIN_FILE_LOCATION__,__MODULE_DEPENDENCIES__,__LOCAL_DEPENDENCIES__,__SOURCE_PREFIX__,__IDS_TO_FRAMEWORKS__});\"; // @ts-ignore\n\nvar __ADDS_MAP__ = {}; // @ts-ignore\n\nvar __MAIN_FILE_LOCATION__ = \"/NumberInput.stories.tsx\"; // @ts-ignore\n\nvar __MODULE_DEPENDENCIES__ = []; // @ts-ignore\n\nvar __LOCAL_DEPENDENCIES__ = {}; // @ts-ignore\n\nvar __IDS_TO_FRAMEWORKS__ = {};\n/* eslint-disable */\n// @ts-nocheck\n// @ts-ignore\n\nvar withSourceLoader = require('@storybook/source-loader/preview').withSource; // @ts-ignore\n\n\nvar addSourceDecorator = require(\"@storybook/source-loader/preview\").addSource; // @ts-ignore\n\n\nvar __SOURCE_PREFIX__ = \"/Users/farhanansari/Code/ui-library/src/components/molecules/NumberInput\"; // @ts-ignore\n\nvar __STORY__ = \"import React from 'react'\\nimport NumberInput from '.'\\nimport Box from '../../atoms/Box'\\nimport { path } from '..'\\n\\nimport { action } from '@storybook/addon-actions'\\nimport { boolean, number, text } from '@storybook/addon-knobs'\\nimport ThemeWrapper from '../../../utilities/components/ThemeWrapper'\\n\\nexport default {\\n  title: `${path}/NumberInput`,\\n  component: NumberInput\\n}\\n\\nexport const DefaultField = () => (\\n  <ThemeWrapper>\\n    <Box p='1em'>\\n      <NumberInput\\n        id='someId'\\n        name='someName'\\n        className='someClassName'\\n        label={text('label', 'Number Input')}\\n        labelColor={text('labelColor', 'text.inputLabel.default')}\\n        placeholder={text('placeholder', 'Enter number here...')}\\n        maxLength={number('maxLength', 10)}\\n        error={boolean('error', false)}\\n        errorMessage={text('errorMessage', '')}\\n        required={boolean('required', false)}\\n        fullWidth={boolean('fullWidth', false)}\\n        onChange={action('Triggered: onChange')}\\n        allowDecimal={boolean('allowDecimal', false)}\\n        roundingoffDigit={number('roundingoffDigit', 3)}\\n      />\\n    </Box>\\n  </ThemeWrapper>\\n)\\n\\nexport const DefaultFieldWithInitialValue = () => (\\n  <ThemeWrapper>\\n    <Box p='1em'>\\n      <NumberInput\\n        id='someId'\\n        name='someName'\\n        className='someClassName'\\n        label={text('label', 'Number Input')}\\n        labelColor={text('labelColor', 'text.inputLabel.default')}\\n        placeholder={text('placeholder', 'Enter number here...')}\\n        initialValue={number('initialValue', 25)}\\n        maxLength={number('maxLength', 10)}\\n        error={boolean('error', false)}\\n        errorMessage={text('errorMessage', '')}\\n        required={boolean('required', false)}\\n        fullWidth={boolean('fullWidth', false)}\\n        onChange={action('Triggered: onChange')}\\n        allowDecimal={boolean('allowDecimal', false)}\\n      />\\n    </Box>\\n  </ThemeWrapper>\\n)\\n\\nexport const DecimalField = () => (\\n  <ThemeWrapper>\\n    <Box p='1em'>\\n      <NumberInput\\n        id='someId'\\n        name='someName'\\n        className='someClassName'\\n        label={text('label', 'Number Input')}\\n        labelColor={text('labelColor', 'text.inputLabel.default')}\\n        placeholder={text('placeholder', 'Enter number here...')}\\n        maxLength={number('maxLength', 10)}\\n        error={boolean('error', false)}\\n        errorMessage={text('errorMessage', '')}\\n        required={boolean('required', false)}\\n        fullWidth={boolean('fullWidth', false)}\\n        onChange={action('Triggered: onChange')}\\n        allowDecimal={boolean('allowDecimal', true)}\\n        roundingoffDigit={number('roundingoffDigit', 3)}\\n      />\\n    </Box>\\n  </ThemeWrapper>\\n)\\n\\nexport const RequiredField = () => (\\n  <ThemeWrapper>\\n    <Box p='1em'>\\n      <NumberInput\\n        id='someId'\\n        name='someName'\\n        className='someClassName'\\n        label={text('label', 'Number Input')}\\n        labelColor={text('labelColor', 'text.inputLabel.default')}\\n        placeholder={text('placeholder', 'Enter number here...')}\\n        maxLength={number('maxLength', 10)}\\n        error={boolean('error', false)}\\n        errorMessage={text('errorMessage', '')}\\n        required={boolean('required', true)}\\n        fullWidth={boolean('fullWidth', false)}\\n        onChange={action('Triggered: onChange')}\\n      />\\n    </Box>\\n  </ThemeWrapper>\\n)\\n\\nexport const ErrorField = () => (\\n  <ThemeWrapper>\\n    <Box p='1em'>\\n      <NumberInput\\n        id='someId'\\n        name='someName'\\n        className='someClassName'\\n        label={text('label', 'Number Input')}\\n        labelColor={text('labelColor', 'text.inputLabel.default')}\\n        placeholder={text('placeholder', 'Enter number here...')}\\n        maxLength={number('maxLength', 10)}\\n        error={boolean('error', true)}\\n        errorMessage={text('errorMessage', 'Some Field Error')}\\n        required={boolean('required', false)}\\n        fullWidth={boolean('fullWidth', true)}\\n        onChange={action('Triggered: onChange')}\\n      />\\n    </Box>\\n  </ThemeWrapper>\\n)\\n\\nexport const WithOutBorder = () => (\\n  <ThemeWrapper>\\n    <Box bgColor='grey.100' p='2em'>\\n      <NumberInput\\n        id='someId'\\n        name='someName'\\n        className='someClassName'\\n        maxLength={number('maxLength', 10)}\\n        error={boolean('error', false)}\\n        onChange={action('Triggered: onChange')}\\n        variant='inline-edit'\\n      />\\n    </Box>\\n  </ThemeWrapper>\\n)\\n\"; // @ts-ignore\n\nvar __ADDS_MAP__ = {}; // @ts-ignore\n\nvar __MAIN_FILE_LOCATION__ = \"/NumberInput.stories.tsx\"; // @ts-ignore\n\nvar __MODULE_DEPENDENCIES__ = []; // @ts-ignore\n\nvar __LOCAL_DEPENDENCIES__ = {}; // @ts-ignore\n\nvar __IDS_TO_FRAMEWORKS__ = {};\nimport React from 'react';\nimport NumberInput from '.';\nimport Box from '../../atoms/Box';\nimport { path } from '..';\nimport { action } from '@storybook/addon-actions';\nimport { boolean as _boolean, number, text } from '@storybook/addon-knobs';\nimport ThemeWrapper from '../../../utilities/components/ThemeWrapper';\nexport default {\n  parameters: (_parameters = {\n    \"storySource\": {\n      \"source\": \"\\n\\n// @ts-nocheck\\n// @ts-ignore\\nvar withSourceLoader = require('@storybook/source-loader/preview').withSource;\\n// @ts-ignore\\nvar addSourceDecorator = require(\\\"@storybook/source-loader/preview\\\").addSource;\\n// @ts-ignore\\nvar __SOURCE_PREFIX__ = \\\"/Users/farhanansari/Code/ui-library/src/components/molecules/NumberInput\\\";\\n// @ts-ignore\\nvar __STORY__ = \\\"\\\\n\\\\n// @ts-nocheck\\\\n// @ts-ignore\\\\nvar withSourceLoader = require('@storybook/source-loader/preview').withSource;\\\\n// @ts-ignore\\\\nvar addSourceDecorator = require(\\\\\\\"@storybook/source-loader/preview\\\\\\\").addSource;\\\\n// @ts-ignore\\\\nvar __SOURCE_PREFIX__ = \\\\\\\"/Users/farhanansari/Code/ui-library/src/components/molecules/NumberInput\\\\\\\";\\\\n// @ts-ignore\\\\nvar __STORY__ = \\\\\\\"import React from 'react'\\\\\\\\nimport NumberInput from '.'\\\\\\\\nimport Box from '../../atoms/Box'\\\\\\\\nimport { path } from '..'\\\\\\\\n\\\\\\\\nimport { action } from '@storybook/addon-actions'\\\\\\\\nimport { boolean, number, text } from '@storybook/addon-knobs'\\\\\\\\nimport ThemeWrapper from '../../../utilities/components/ThemeWrapper'\\\\\\\\n\\\\\\\\nexport default {\\\\\\\\n  title: `${path}/NumberInput`,\\\\\\\\n  component: NumberInput\\\\\\\\n}\\\\\\\\n\\\\\\\\nexport const DefaultField = () => (\\\\\\\\n  <ThemeWrapper>\\\\\\\\n    <Box p='1em'>\\\\\\\\n      <NumberInput\\\\\\\\n        id='someId'\\\\\\\\n        name='someName'\\\\\\\\n        className='someClassName'\\\\\\\\n        label={text('label', 'Number Input')}\\\\\\\\n        labelColor={text('labelColor', 'text.inputLabel.default')}\\\\\\\\n        placeholder={text('placeholder', 'Enter number here...')}\\\\\\\\n        maxLength={number('maxLength', 10)}\\\\\\\\n        error={boolean('error', false)}\\\\\\\\n        errorMessage={text('errorMessage', '')}\\\\\\\\n        required={boolean('required', false)}\\\\\\\\n        fullWidth={boolean('fullWidth', false)}\\\\\\\\n        onChange={action('Triggered: onChange')}\\\\\\\\n        allowDecimal={boolean('allowDecimal', false)}\\\\\\\\n        roundingoffDigit={number('roundingoffDigit', 3)}\\\\\\\\n      />\\\\\\\\n    </Box>\\\\\\\\n  </ThemeWrapper>\\\\\\\\n)\\\\\\\\n\\\\\\\\nexport const DefaultFieldWithInitialValue = () => (\\\\\\\\n  <ThemeWrapper>\\\\\\\\n    <Box p='1em'>\\\\\\\\n      <NumberInput\\\\\\\\n        id='someId'\\\\\\\\n        name='someName'\\\\\\\\n        className='someClassName'\\\\\\\\n        label={text('label', 'Number Input')}\\\\\\\\n        labelColor={text('labelColor', 'text.inputLabel.default')}\\\\\\\\n        placeholder={text('placeholder', 'Enter number here...')}\\\\\\\\n        initialValue={number('initialValue', 25)}\\\\\\\\n        maxLength={number('maxLength', 10)}\\\\\\\\n        error={boolean('error', false)}\\\\\\\\n        errorMessage={text('errorMessage', '')}\\\\\\\\n        required={boolean('required', false)}\\\\\\\\n        fullWidth={boolean('fullWidth', false)}\\\\\\\\n        onChange={action('Triggered: onChange')}\\\\\\\\n        allowDecimal={boolean('allowDecimal', false)}\\\\\\\\n      />\\\\\\\\n    </Box>\\\\\\\\n  </ThemeWrapper>\\\\\\\\n)\\\\\\\\n\\\\\\\\nexport const DecimalField = () => (\\\\\\\\n  <ThemeWrapper>\\\\\\\\n    <Box p='1em'>\\\\\\\\n      <NumberInput\\\\\\\\n        id='someId'\\\\\\\\n        name='someName'\\\\\\\\n        className='someClassName'\\\\\\\\n        label={text('label', 'Number Input')}\\\\\\\\n        labelColor={text('labelColor', 'text.inputLabel.default')}\\\\\\\\n        placeholder={text('placeholder', 'Enter number here...')}\\\\\\\\n        maxLength={number('maxLength', 10)}\\\\\\\\n        error={boolean('error', false)}\\\\\\\\n        errorMessage={text('errorMessage', '')}\\\\\\\\n        required={boolean('required', false)}\\\\\\\\n        fullWidth={boolean('fullWidth', false)}\\\\\\\\n        onChange={action('Triggered: onChange')}\\\\\\\\n        allowDecimal={boolean('allowDecimal', true)}\\\\\\\\n        roundingoffDigit={number('roundingoffDigit', 3)}\\\\\\\\n      />\\\\\\\\n    </Box>\\\\\\\\n  </ThemeWrapper>\\\\\\\\n)\\\\\\\\n\\\\\\\\nexport const RequiredField = () => (\\\\\\\\n  <ThemeWrapper>\\\\\\\\n    <Box p='1em'>\\\\\\\\n      <NumberInput\\\\\\\\n        id='someId'\\\\\\\\n        name='someName'\\\\\\\\n        className='someClassName'\\\\\\\\n        label={text('label', 'Number Input')}\\\\\\\\n        labelColor={text('labelColor', 'text.inputLabel.default')}\\\\\\\\n        placeholder={text('placeholder', 'Enter number here...')}\\\\\\\\n        maxLength={number('maxLength', 10)}\\\\\\\\n        error={boolean('error', false)}\\\\\\\\n        errorMessage={text('errorMessage', '')}\\\\\\\\n        required={boolean('required', true)}\\\\\\\\n        fullWidth={boolean('fullWidth', false)}\\\\\\\\n        onChange={action('Triggered: onChange')}\\\\\\\\n      />\\\\\\\\n    </Box>\\\\\\\\n  </ThemeWrapper>\\\\\\\\n)\\\\\\\\n\\\\\\\\nexport const ErrorField = () => (\\\\\\\\n  <ThemeWrapper>\\\\\\\\n    <Box p='1em'>\\\\\\\\n      <NumberInput\\\\\\\\n        id='someId'\\\\\\\\n        name='someName'\\\\\\\\n        className='someClassName'\\\\\\\\n        label={text('label', 'Number Input')}\\\\\\\\n        labelColor={text('labelColor', 'text.inputLabel.default')}\\\\\\\\n        placeholder={text('placeholder', 'Enter number here...')}\\\\\\\\n        maxLength={number('maxLength', 10)}\\\\\\\\n        error={boolean('error', true)}\\\\\\\\n        errorMessage={text('errorMessage', 'Some Field Error')}\\\\\\\\n        required={boolean('required', false)}\\\\\\\\n        fullWidth={boolean('fullWidth', true)}\\\\\\\\n        onChange={action('Triggered: onChange')}\\\\\\\\n      />\\\\\\\\n    </Box>\\\\\\\\n  </ThemeWrapper>\\\\\\\\n)\\\\\\\\n\\\\\\\\nexport const WithOutBorder = () => (\\\\\\\\n  <ThemeWrapper>\\\\\\\\n    <Box bgColor='grey.100' p='2em'>\\\\\\\\n      <NumberInput\\\\\\\\n        id='someId'\\\\\\\\n        name='someName'\\\\\\\\n        className='someClassName'\\\\\\\\n        maxLength={number('maxLength', 10)}\\\\\\\\n        error={boolean('error', false)}\\\\\\\\n        onChange={action('Triggered: onChange')}\\\\\\\\n        variant='inline-edit'\\\\\\\\n      />\\\\\\\\n    </Box>\\\\\\\\n  </ThemeWrapper>\\\\\\\\n)\\\\\\\\n\\\\\\\";\\\\n// @ts-ignore\\\\nvar __ADDS_MAP__ = {};\\\\n// @ts-ignore\\\\nvar __MAIN_FILE_LOCATION__ = \\\\\\\"/NumberInput.stories.tsx\\\\\\\";\\\\n// @ts-ignore\\\\nvar __MODULE_DEPENDENCIES__ = [];\\\\n// @ts-ignore\\\\nvar __LOCAL_DEPENDENCIES__ = {};\\\\n// @ts-ignore\\\\nvar __IDS_TO_FRAMEWORKS__ = {};\\\\n        \\\\nimport React from 'react'\\\\nimport NumberInput from '.'\\\\nimport Box from '../../atoms/Box'\\\\nimport { path } from '..'\\\\n\\\\nimport { action } from '@storybook/addon-actions'\\\\nimport { boolean, number, text } from '@storybook/addon-knobs'\\\\nimport ThemeWrapper from '../../../utilities/components/ThemeWrapper'\\\\n\\\\nexport default {parameters: {\\\\\\\"storySource\\\\\\\":{\\\\\\\"source\\\\\\\":\\\\\\\"import React from 'react'\\\\\\\\nimport NumberInput from '.'\\\\\\\\nimport Box from '../../atoms/Box'\\\\\\\\nimport { path } from '..'\\\\\\\\n\\\\\\\\nimport { action } from '@storybook/addon-actions'\\\\\\\\nimport { boolean, number, text } from '@storybook/addon-knobs'\\\\\\\\nimport ThemeWrapper from '../../../utilities/components/ThemeWrapper'\\\\\\\\n\\\\\\\\nexport default {\\\\\\\\n  title: `${path}/NumberInput`,\\\\\\\\n  component: NumberInput\\\\\\\\n}\\\\\\\\n\\\\\\\\nexport const DefaultField = () => (\\\\\\\\n  <ThemeWrapper>\\\\\\\\n    <Box p='1em'>\\\\\\\\n      <NumberInput\\\\\\\\n        id='someId'\\\\\\\\n        name='someName'\\\\\\\\n        className='someClassName'\\\\\\\\n        label={text('label', 'Number Input')}\\\\\\\\n        labelColor={text('labelColor', 'text.inputLabel.default')}\\\\\\\\n        placeholder={text('placeholder', 'Enter number here...')}\\\\\\\\n        maxLength={number('maxLength', 10)}\\\\\\\\n        error={boolean('error', false)}\\\\\\\\n        errorMessage={text('errorMessage', '')}\\\\\\\\n        required={boolean('required', false)}\\\\\\\\n        fullWidth={boolean('fullWidth', false)}\\\\\\\\n        onChange={action('Triggered: onChange')}\\\\\\\\n        allowDecimal={boolean('allowDecimal', false)}\\\\\\\\n        roundingoffDigit={number('roundingoffDigit', 3)}\\\\\\\\n      />\\\\\\\\n    </Box>\\\\\\\\n  </ThemeWrapper>\\\\\\\\n)\\\\\\\\n\\\\\\\\nexport const DefaultFieldWithInitialValue = () => (\\\\\\\\n  <ThemeWrapper>\\\\\\\\n    <Box p='1em'>\\\\\\\\n      <NumberInput\\\\\\\\n        id='someId'\\\\\\\\n        name='someName'\\\\\\\\n        className='someClassName'\\\\\\\\n        label={text('label', 'Number Input')}\\\\\\\\n        labelColor={text('labelColor', 'text.inputLabel.default')}\\\\\\\\n        placeholder={text('placeholder', 'Enter number here...')}\\\\\\\\n        initialValue={number('initialValue', 25)}\\\\\\\\n        maxLength={number('maxLength', 10)}\\\\\\\\n        error={boolean('error', false)}\\\\\\\\n        errorMessage={text('errorMessage', '')}\\\\\\\\n        required={boolean('required', false)}\\\\\\\\n        fullWidth={boolean('fullWidth', false)}\\\\\\\\n        onChange={action('Triggered: onChange')}\\\\\\\\n        allowDecimal={boolean('allowDecimal', false)}\\\\\\\\n      />\\\\\\\\n    </Box>\\\\\\\\n  </ThemeWrapper>\\\\\\\\n)\\\\\\\\n\\\\\\\\nexport const DecimalField = () => (\\\\\\\\n  <ThemeWrapper>\\\\\\\\n    <Box p='1em'>\\\\\\\\n      <NumberInput\\\\\\\\n        id='someId'\\\\\\\\n        name='someName'\\\\\\\\n        className='someClassName'\\\\\\\\n        label={text('label', 'Number Input')}\\\\\\\\n        labelColor={text('labelColor', 'text.inputLabel.default')}\\\\\\\\n        placeholder={text('placeholder', 'Enter number here...')}\\\\\\\\n        maxLength={number('maxLength', 10)}\\\\\\\\n        error={boolean('error', false)}\\\\\\\\n        errorMessage={text('errorMessage', '')}\\\\\\\\n        required={boolean('required', false)}\\\\\\\\n        fullWidth={boolean('fullWidth', false)}\\\\\\\\n        onChange={action('Triggered: onChange')}\\\\\\\\n        allowDecimal={boolean('allowDecimal', true)}\\\\\\\\n        roundingoffDigit={number('roundingoffDigit', 3)}\\\\\\\\n      />\\\\\\\\n    </Box>\\\\\\\\n  </ThemeWrapper>\\\\\\\\n)\\\\\\\\n\\\\\\\\nexport const RequiredField = () => (\\\\\\\\n  <ThemeWrapper>\\\\\\\\n    <Box p='1em'>\\\\\\\\n      <NumberInput\\\\\\\\n        id='someId'\\\\\\\\n        name='someName'\\\\\\\\n        className='someClassName'\\\\\\\\n        label={text('label', 'Number Input')}\\\\\\\\n        labelColor={text('labelColor', 'text.inputLabel.default')}\\\\\\\\n        placeholder={text('placeholder', 'Enter number here...')}\\\\\\\\n        maxLength={number('maxLength', 10)}\\\\\\\\n        error={boolean('error', false)}\\\\\\\\n        errorMessage={text('errorMessage', '')}\\\\\\\\n        required={boolean('required', true)}\\\\\\\\n        fullWidth={boolean('fullWidth', false)}\\\\\\\\n        onChange={action('Triggered: onChange')}\\\\\\\\n      />\\\\\\\\n    </Box>\\\\\\\\n  </ThemeWrapper>\\\\\\\\n)\\\\\\\\n\\\\\\\\nexport const ErrorField = () => (\\\\\\\\n  <ThemeWrapper>\\\\\\\\n    <Box p='1em'>\\\\\\\\n      <NumberInput\\\\\\\\n        id='someId'\\\\\\\\n        name='someName'\\\\\\\\n        className='someClassName'\\\\\\\\n        label={text('label', 'Number Input')}\\\\\\\\n        labelColor={text('labelColor', 'text.inputLabel.default')}\\\\\\\\n        placeholder={text('placeholder', 'Enter number here...')}\\\\\\\\n        maxLength={number('maxLength', 10)}\\\\\\\\n        error={boolean('error', true)}\\\\\\\\n        errorMessage={text('errorMessage', 'Some Field Error')}\\\\\\\\n        required={boolean('required', false)}\\\\\\\\n        fullWidth={boolean('fullWidth', true)}\\\\\\\\n        onChange={action('Triggered: onChange')}\\\\\\\\n      />\\\\\\\\n    </Box>\\\\\\\\n  </ThemeWrapper>\\\\\\\\n)\\\\\\\\n\\\\\\\\nexport const WithOutBorder = () => (\\\\\\\\n  <ThemeWrapper>\\\\\\\\n    <Box bgColor='grey.100' p='2em'>\\\\\\\\n      <NumberInput\\\\\\\\n        id='someId'\\\\\\\\n        name='someName'\\\\\\\\n        className='someClassName'\\\\\\\\n        maxLength={number('maxLength', 10)}\\\\\\\\n        error={boolean('error', false)}\\\\\\\\n        onChange={action('Triggered: onChange')}\\\\\\\\n        variant='inline-edit'\\\\\\\\n      />\\\\\\\\n    </Box>\\\\\\\\n  </ThemeWrapper>\\\\\\\\n)\\\\\\\\n\\\\\\\",\\\\\\\"locationsMap\\\\\\\":{}},},\\\\n  title: `${path}/NumberInput`,\\\\n  component: NumberInput\\\\n}\\\\n\\\\nexport const DefaultField = addSourceDecorator(() => (\\\\n  <ThemeWrapper>\\\\n    <Box p='1em'>\\\\n      <NumberInput\\\\n        id='someId'\\\\n        name='someName'\\\\n        className='someClassName'\\\\n        label={text('label', 'Number Input')}\\\\n        labelColor={text('labelColor', 'text.inputLabel.default')}\\\\n        placeholder={text('placeholder', 'Enter number here...')}\\\\n        maxLength={number('maxLength', 10)}\\\\n        error={boolean('error', false)}\\\\n        errorMessage={text('errorMessage', '')}\\\\n        required={boolean('required', false)}\\\\n        fullWidth={boolean('fullWidth', false)}\\\\n        onChange={action('Triggered: onChange')}\\\\n        allowDecimal={boolean('allowDecimal', false)}\\\\n        roundingoffDigit={number('roundingoffDigit', 3)}\\\\n      />\\\\n    </Box>\\\\n  </ThemeWrapper>\\\\n), {__STORY__, __ADDS_MAP__,__MAIN_FILE_LOCATION__,__MODULE_DEPENDENCIES__,__LOCAL_DEPENDENCIES__,__SOURCE_PREFIX__,__IDS_TO_FRAMEWORKS__});\\\\n\\\\nexport const DefaultFieldWithInitialValue = addSourceDecorator(() => (\\\\n  <ThemeWrapper>\\\\n    <Box p='1em'>\\\\n      <NumberInput\\\\n        id='someId'\\\\n        name='someName'\\\\n        className='someClassName'\\\\n        label={text('label', 'Number Input')}\\\\n        labelColor={text('labelColor', 'text.inputLabel.default')}\\\\n        placeholder={text('placeholder', 'Enter number here...')}\\\\n        initialValue={number('initialValue', 25)}\\\\n        maxLength={number('maxLength', 10)}\\\\n        error={boolean('error', false)}\\\\n        errorMessage={text('errorMessage', '')}\\\\n        required={boolean('required', false)}\\\\n        fullWidth={boolean('fullWidth', false)}\\\\n        onChange={action('Triggered: onChange')}\\\\n        allowDecimal={boolean('allowDecimal', false)}\\\\n      />\\\\n    </Box>\\\\n  </ThemeWrapper>\\\\n), {__STORY__, __ADDS_MAP__,__MAIN_FILE_LOCATION__,__MODULE_DEPENDENCIES__,__LOCAL_DEPENDENCIES__,__SOURCE_PREFIX__,__IDS_TO_FRAMEWORKS__});\\\\n\\\\nexport const DecimalField = addSourceDecorator(() => (\\\\n  <ThemeWrapper>\\\\n    <Box p='1em'>\\\\n      <NumberInput\\\\n        id='someId'\\\\n        name='someName'\\\\n        className='someClassName'\\\\n        label={text('label', 'Number Input')}\\\\n        labelColor={text('labelColor', 'text.inputLabel.default')}\\\\n        placeholder={text('placeholder', 'Enter number here...')}\\\\n        maxLength={number('maxLength', 10)}\\\\n        error={boolean('error', false)}\\\\n        errorMessage={text('errorMessage', '')}\\\\n        required={boolean('required', false)}\\\\n        fullWidth={boolean('fullWidth', false)}\\\\n        onChange={action('Triggered: onChange')}\\\\n        allowDecimal={boolean('allowDecimal', true)}\\\\n        roundingoffDigit={number('roundingoffDigit', 3)}\\\\n      />\\\\n    </Box>\\\\n  </ThemeWrapper>\\\\n), {__STORY__, __ADDS_MAP__,__MAIN_FILE_LOCATION__,__MODULE_DEPENDENCIES__,__LOCAL_DEPENDENCIES__,__SOURCE_PREFIX__,__IDS_TO_FRAMEWORKS__});\\\\n\\\\nexport const RequiredField = addSourceDecorator(() => (\\\\n  <ThemeWrapper>\\\\n    <Box p='1em'>\\\\n      <NumberInput\\\\n        id='someId'\\\\n        name='someName'\\\\n        className='someClassName'\\\\n        label={text('label', 'Number Input')}\\\\n        labelColor={text('labelColor', 'text.inputLabel.default')}\\\\n        placeholder={text('placeholder', 'Enter number here...')}\\\\n        maxLength={number('maxLength', 10)}\\\\n        error={boolean('error', false)}\\\\n        errorMessage={text('errorMessage', '')}\\\\n        required={boolean('required', true)}\\\\n        fullWidth={boolean('fullWidth', false)}\\\\n        onChange={action('Triggered: onChange')}\\\\n      />\\\\n    </Box>\\\\n  </ThemeWrapper>\\\\n), {__STORY__, __ADDS_MAP__,__MAIN_FILE_LOCATION__,__MODULE_DEPENDENCIES__,__LOCAL_DEPENDENCIES__,__SOURCE_PREFIX__,__IDS_TO_FRAMEWORKS__});\\\\n\\\\nexport const ErrorField = addSourceDecorator(() => (\\\\n  <ThemeWrapper>\\\\n    <Box p='1em'>\\\\n      <NumberInput\\\\n        id='someId'\\\\n        name='someName'\\\\n        className='someClassName'\\\\n        label={text('label', 'Number Input')}\\\\n        labelColor={text('labelColor', 'text.inputLabel.default')}\\\\n        placeholder={text('placeholder', 'Enter number here...')}\\\\n        maxLength={number('maxLength', 10)}\\\\n        error={boolean('error', true)}\\\\n        errorMessage={text('errorMessage', 'Some Field Error')}\\\\n        required={boolean('required', false)}\\\\n        fullWidth={boolean('fullWidth', true)}\\\\n        onChange={action('Triggered: onChange')}\\\\n      />\\\\n    </Box>\\\\n  </ThemeWrapper>\\\\n), {__STORY__, __ADDS_MAP__,__MAIN_FILE_LOCATION__,__MODULE_DEPENDENCIES__,__LOCAL_DEPENDENCIES__,__SOURCE_PREFIX__,__IDS_TO_FRAMEWORKS__});\\\\n\\\\nexport const WithOutBorder = addSourceDecorator(() => (\\\\n  <ThemeWrapper>\\\\n    <Box bgColor='grey.100' p='2em'>\\\\n      <NumberInput\\\\n        id='someId'\\\\n        name='someName'\\\\n        className='someClassName'\\\\n        maxLength={number('maxLength', 10)}\\\\n        error={boolean('error', false)}\\\\n        onChange={action('Triggered: onChange')}\\\\n        variant='inline-edit'\\\\n      />\\\\n    </Box>\\\\n  </ThemeWrapper>\\\\n), {__STORY__, __ADDS_MAP__,__MAIN_FILE_LOCATION__,__MODULE_DEPENDENCIES__,__LOCAL_DEPENDENCIES__,__SOURCE_PREFIX__,__IDS_TO_FRAMEWORKS__});\\\";\\n// @ts-ignore\\nvar __ADDS_MAP__ = {};\\n// @ts-ignore\\nvar __MAIN_FILE_LOCATION__ = \\\"/NumberInput.stories.tsx\\\";\\n// @ts-ignore\\nvar __MODULE_DEPENDENCIES__ = [];\\n// @ts-ignore\\nvar __LOCAL_DEPENDENCIES__ = {};\\n// @ts-ignore\\nvar __IDS_TO_FRAMEWORKS__ = {};\\n        \\n\\n\\n// @ts-nocheck\\n// @ts-ignore\\nvar withSourceLoader = require('@storybook/source-loader/preview').withSource;\\n// @ts-ignore\\nvar addSourceDecorator = require(\\\"@storybook/source-loader/preview\\\").addSource;\\n// @ts-ignore\\nvar __SOURCE_PREFIX__ = \\\"/Users/farhanansari/Code/ui-library/src/components/molecules/NumberInput\\\";\\n// @ts-ignore\\nvar __STORY__ = \\\"import React from 'react'\\\\nimport NumberInput from '.'\\\\nimport Box from '../../atoms/Box'\\\\nimport { path } from '..'\\\\n\\\\nimport { action } from '@storybook/addon-actions'\\\\nimport { boolean, number, text } from '@storybook/addon-knobs'\\\\nimport ThemeWrapper from '../../../utilities/components/ThemeWrapper'\\\\n\\\\nexport default {\\\\n  title: `${path}/NumberInput`,\\\\n  component: NumberInput\\\\n}\\\\n\\\\nexport const DefaultField = () => (\\\\n  <ThemeWrapper>\\\\n    <Box p='1em'>\\\\n      <NumberInput\\\\n        id='someId'\\\\n        name='someName'\\\\n        className='someClassName'\\\\n        label={text('label', 'Number Input')}\\\\n        labelColor={text('labelColor', 'text.inputLabel.default')}\\\\n        placeholder={text('placeholder', 'Enter number here...')}\\\\n        maxLength={number('maxLength', 10)}\\\\n        error={boolean('error', false)}\\\\n        errorMessage={text('errorMessage', '')}\\\\n        required={boolean('required', false)}\\\\n        fullWidth={boolean('fullWidth', false)}\\\\n        onChange={action('Triggered: onChange')}\\\\n        allowDecimal={boolean('allowDecimal', false)}\\\\n        roundingoffDigit={number('roundingoffDigit', 3)}\\\\n      />\\\\n    </Box>\\\\n  </ThemeWrapper>\\\\n)\\\\n\\\\nexport const DefaultFieldWithInitialValue = () => (\\\\n  <ThemeWrapper>\\\\n    <Box p='1em'>\\\\n      <NumberInput\\\\n        id='someId'\\\\n        name='someName'\\\\n        className='someClassName'\\\\n        label={text('label', 'Number Input')}\\\\n        labelColor={text('labelColor', 'text.inputLabel.default')}\\\\n        placeholder={text('placeholder', 'Enter number here...')}\\\\n        initialValue={number('initialValue', 25)}\\\\n        maxLength={number('maxLength', 10)}\\\\n        error={boolean('error', false)}\\\\n        errorMessage={text('errorMessage', '')}\\\\n        required={boolean('required', false)}\\\\n        fullWidth={boolean('fullWidth', false)}\\\\n        onChange={action('Triggered: onChange')}\\\\n        allowDecimal={boolean('allowDecimal', false)}\\\\n      />\\\\n    </Box>\\\\n  </ThemeWrapper>\\\\n)\\\\n\\\\nexport const DecimalField = () => (\\\\n  <ThemeWrapper>\\\\n    <Box p='1em'>\\\\n      <NumberInput\\\\n        id='someId'\\\\n        name='someName'\\\\n        className='someClassName'\\\\n        label={text('label', 'Number Input')}\\\\n        labelColor={text('labelColor', 'text.inputLabel.default')}\\\\n        placeholder={text('placeholder', 'Enter number here...')}\\\\n        maxLength={number('maxLength', 10)}\\\\n        error={boolean('error', false)}\\\\n        errorMessage={text('errorMessage', '')}\\\\n        required={boolean('required', false)}\\\\n        fullWidth={boolean('fullWidth', false)}\\\\n        onChange={action('Triggered: onChange')}\\\\n        allowDecimal={boolean('allowDecimal', true)}\\\\n        roundingoffDigit={number('roundingoffDigit', 3)}\\\\n      />\\\\n    </Box>\\\\n  </ThemeWrapper>\\\\n)\\\\n\\\\nexport const RequiredField = () => (\\\\n  <ThemeWrapper>\\\\n    <Box p='1em'>\\\\n      <NumberInput\\\\n        id='someId'\\\\n        name='someName'\\\\n        className='someClassName'\\\\n        label={text('label', 'Number Input')}\\\\n        labelColor={text('labelColor', 'text.inputLabel.default')}\\\\n        placeholder={text('placeholder', 'Enter number here...')}\\\\n        maxLength={number('maxLength', 10)}\\\\n        error={boolean('error', false)}\\\\n        errorMessage={text('errorMessage', '')}\\\\n        required={boolean('required', true)}\\\\n        fullWidth={boolean('fullWidth', false)}\\\\n        onChange={action('Triggered: onChange')}\\\\n      />\\\\n    </Box>\\\\n  </ThemeWrapper>\\\\n)\\\\n\\\\nexport const ErrorField = () => (\\\\n  <ThemeWrapper>\\\\n    <Box p='1em'>\\\\n      <NumberInput\\\\n        id='someId'\\\\n        name='someName'\\\\n        className='someClassName'\\\\n        label={text('label', 'Number Input')}\\\\n        labelColor={text('labelColor', 'text.inputLabel.default')}\\\\n        placeholder={text('placeholder', 'Enter number here...')}\\\\n        maxLength={number('maxLength', 10)}\\\\n        error={boolean('error', true)}\\\\n        errorMessage={text('errorMessage', 'Some Field Error')}\\\\n        required={boolean('required', false)}\\\\n        fullWidth={boolean('fullWidth', true)}\\\\n        onChange={action('Triggered: onChange')}\\\\n      />\\\\n    </Box>\\\\n  </ThemeWrapper>\\\\n)\\\\n\\\\nexport const WithOutBorder = () => (\\\\n  <ThemeWrapper>\\\\n    <Box bgColor='grey.100' p='2em'>\\\\n      <NumberInput\\\\n        id='someId'\\\\n        name='someName'\\\\n        className='someClassName'\\\\n        maxLength={number('maxLength', 10)}\\\\n        error={boolean('error', false)}\\\\n        onChange={action('Triggered: onChange')}\\\\n        variant='inline-edit'\\\\n      />\\\\n    </Box>\\\\n  </ThemeWrapper>\\\\n)\\\\n\\\";\\n// @ts-ignore\\nvar __ADDS_MAP__ = {};\\n// @ts-ignore\\nvar __MAIN_FILE_LOCATION__ = \\\"/NumberInput.stories.tsx\\\";\\n// @ts-ignore\\nvar __MODULE_DEPENDENCIES__ = [];\\n// @ts-ignore\\nvar __LOCAL_DEPENDENCIES__ = {};\\n// @ts-ignore\\nvar __IDS_TO_FRAMEWORKS__ = {};\\n        \\nimport React from 'react'\\nimport NumberInput from '.'\\nimport Box from '../../atoms/Box'\\nimport { path } from '..'\\n\\nimport { action } from '@storybook/addon-actions'\\nimport { boolean, number, text } from '@storybook/addon-knobs'\\nimport ThemeWrapper from '../../../utilities/components/ThemeWrapper'\\n\\nexport default {parameters: {\\\"storySource\\\":{\\\"source\\\":\\\"\\\\n\\\\n// @ts-nocheck\\\\n// @ts-ignore\\\\nvar withSourceLoader = require('@storybook/source-loader/preview').withSource;\\\\n// @ts-ignore\\\\nvar addSourceDecorator = require(\\\\\\\"@storybook/source-loader/preview\\\\\\\").addSource;\\\\n// @ts-ignore\\\\nvar __SOURCE_PREFIX__ = \\\\\\\"/Users/farhanansari/Code/ui-library/src/components/molecules/NumberInput\\\\\\\";\\\\n// @ts-ignore\\\\nvar __STORY__ = \\\\\\\"import React from 'react'\\\\\\\\nimport NumberInput from '.'\\\\\\\\nimport Box from '../../atoms/Box'\\\\\\\\nimport { path } from '..'\\\\\\\\n\\\\\\\\nimport { action } from '@storybook/addon-actions'\\\\\\\\nimport { boolean, number, text } from '@storybook/addon-knobs'\\\\\\\\nimport ThemeWrapper from '../../../utilities/components/ThemeWrapper'\\\\\\\\n\\\\\\\\nexport default {\\\\\\\\n  title: `${path}/NumberInput`,\\\\\\\\n  component: NumberInput\\\\\\\\n}\\\\\\\\n\\\\\\\\nexport const DefaultField = () => (\\\\\\\\n  <ThemeWrapper>\\\\\\\\n    <Box p='1em'>\\\\\\\\n      <NumberInput\\\\\\\\n        id='someId'\\\\\\\\n        name='someName'\\\\\\\\n        className='someClassName'\\\\\\\\n        label={text('label', 'Number Input')}\\\\\\\\n        labelColor={text('labelColor', 'text.inputLabel.default')}\\\\\\\\n        placeholder={text('placeholder', 'Enter number here...')}\\\\\\\\n        maxLength={number('maxLength', 10)}\\\\\\\\n        error={boolean('error', false)}\\\\\\\\n        errorMessage={text('errorMessage', '')}\\\\\\\\n        required={boolean('required', false)}\\\\\\\\n        fullWidth={boolean('fullWidth', false)}\\\\\\\\n        onChange={action('Triggered: onChange')}\\\\\\\\n        allowDecimal={boolean('allowDecimal', false)}\\\\\\\\n        roundingoffDigit={number('roundingoffDigit', 3)}\\\\\\\\n      />\\\\\\\\n    </Box>\\\\\\\\n  </ThemeWrapper>\\\\\\\\n)\\\\\\\\n\\\\\\\\nexport const DefaultFieldWithInitialValue = () => (\\\\\\\\n  <ThemeWrapper>\\\\\\\\n    <Box p='1em'>\\\\\\\\n      <NumberInput\\\\\\\\n        id='someId'\\\\\\\\n        name='someName'\\\\\\\\n        className='someClassName'\\\\\\\\n        label={text('label', 'Number Input')}\\\\\\\\n        labelColor={text('labelColor', 'text.inputLabel.default')}\\\\\\\\n        placeholder={text('placeholder', 'Enter number here...')}\\\\\\\\n        initialValue={number('initialValue', 25)}\\\\\\\\n        maxLength={number('maxLength', 10)}\\\\\\\\n        error={boolean('error', false)}\\\\\\\\n        errorMessage={text('errorMessage', '')}\\\\\\\\n        required={boolean('required', false)}\\\\\\\\n        fullWidth={boolean('fullWidth', false)}\\\\\\\\n        onChange={action('Triggered: onChange')}\\\\\\\\n        allowDecimal={boolean('allowDecimal', false)}\\\\\\\\n      />\\\\\\\\n    </Box>\\\\\\\\n  </ThemeWrapper>\\\\\\\\n)\\\\\\\\n\\\\\\\\nexport const DecimalField = () => (\\\\\\\\n  <ThemeWrapper>\\\\\\\\n    <Box p='1em'>\\\\\\\\n      <NumberInput\\\\\\\\n        id='someId'\\\\\\\\n        name='someName'\\\\\\\\n        className='someClassName'\\\\\\\\n        label={text('label', 'Number Input')}\\\\\\\\n        labelColor={text('labelColor', 'text.inputLabel.default')}\\\\\\\\n        placeholder={text('placeholder', 'Enter number here...')}\\\\\\\\n        maxLength={number('maxLength', 10)}\\\\\\\\n        error={boolean('error', false)}\\\\\\\\n        errorMessage={text('errorMessage', '')}\\\\\\\\n        required={boolean('required', false)}\\\\\\\\n        fullWidth={boolean('fullWidth', false)}\\\\\\\\n        onChange={action('Triggered: onChange')}\\\\\\\\n        allowDecimal={boolean('allowDecimal', true)}\\\\\\\\n        roundingoffDigit={number('roundingoffDigit', 3)}\\\\\\\\n      />\\\\\\\\n    </Box>\\\\\\\\n  </ThemeWrapper>\\\\\\\\n)\\\\\\\\n\\\\\\\\nexport const RequiredField = () => (\\\\\\\\n  <ThemeWrapper>\\\\\\\\n    <Box p='1em'>\\\\\\\\n      <NumberInput\\\\\\\\n        id='someId'\\\\\\\\n        name='someName'\\\\\\\\n        className='someClassName'\\\\\\\\n        label={text('label', 'Number Input')}\\\\\\\\n        labelColor={text('labelColor', 'text.inputLabel.default')}\\\\\\\\n        placeholder={text('placeholder', 'Enter number here...')}\\\\\\\\n        maxLength={number('maxLength', 10)}\\\\\\\\n        error={boolean('error', false)}\\\\\\\\n        errorMessage={text('errorMessage', '')}\\\\\\\\n        required={boolean('required', true)}\\\\\\\\n        fullWidth={boolean('fullWidth', false)}\\\\\\\\n        onChange={action('Triggered: onChange')}\\\\\\\\n      />\\\\\\\\n    </Box>\\\\\\\\n  </ThemeWrapper>\\\\\\\\n)\\\\\\\\n\\\\\\\\nexport const ErrorField = () => (\\\\\\\\n  <ThemeWrapper>\\\\\\\\n    <Box p='1em'>\\\\\\\\n      <NumberInput\\\\\\\\n        id='someId'\\\\\\\\n        name='someName'\\\\\\\\n        className='someClassName'\\\\\\\\n        label={text('label', 'Number Input')}\\\\\\\\n        labelColor={text('labelColor', 'text.inputLabel.default')}\\\\\\\\n        placeholder={text('placeholder', 'Enter number here...')}\\\\\\\\n        maxLength={number('maxLength', 10)}\\\\\\\\n        error={boolean('error', true)}\\\\\\\\n        errorMessage={text('errorMessage', 'Some Field Error')}\\\\\\\\n        required={boolean('required', false)}\\\\\\\\n        fullWidth={boolean('fullWidth', true)}\\\\\\\\n        onChange={action('Triggered: onChange')}\\\\\\\\n      />\\\\\\\\n    </Box>\\\\\\\\n  </ThemeWrapper>\\\\\\\\n)\\\\\\\\n\\\\\\\\nexport const WithOutBorder = () => (\\\\\\\\n  <ThemeWrapper>\\\\\\\\n    <Box bgColor='grey.100' p='2em'>\\\\\\\\n      <NumberInput\\\\\\\\n        id='someId'\\\\\\\\n        name='someName'\\\\\\\\n        className='someClassName'\\\\\\\\n        maxLength={number('maxLength', 10)}\\\\\\\\n        error={boolean('error', false)}\\\\\\\\n        onChange={action('Triggered: onChange')}\\\\\\\\n        variant='inline-edit'\\\\\\\\n      />\\\\\\\\n    </Box>\\\\\\\\n  </ThemeWrapper>\\\\\\\\n)\\\\\\\\n\\\\\\\";\\\\n// @ts-ignore\\\\nvar __ADDS_MAP__ = {};\\\\n// @ts-ignore\\\\nvar __MAIN_FILE_LOCATION__ = \\\\\\\"/NumberInput.stories.tsx\\\\\\\";\\\\n// @ts-ignore\\\\nvar __MODULE_DEPENDENCIES__ = [];\\\\n// @ts-ignore\\\\nvar __LOCAL_DEPENDENCIES__ = {};\\\\n// @ts-ignore\\\\nvar __IDS_TO_FRAMEWORKS__ = {};\\\\n        \\\\nimport React from 'react'\\\\nimport NumberInput from '.'\\\\nimport Box from '../../atoms/Box'\\\\nimport { path } from '..'\\\\n\\\\nimport { action } from '@storybook/addon-actions'\\\\nimport { boolean, number, text } from '@storybook/addon-knobs'\\\\nimport ThemeWrapper from '../../../utilities/components/ThemeWrapper'\\\\n\\\\nexport default {parameters: {\\\\\\\"storySource\\\\\\\":{\\\\\\\"source\\\\\\\":\\\\\\\"import React from 'react'\\\\\\\\nimport NumberInput from '.'\\\\\\\\nimport Box from '../../atoms/Box'\\\\\\\\nimport { path } from '..'\\\\\\\\n\\\\\\\\nimport { action } from '@storybook/addon-actions'\\\\\\\\nimport { boolean, number, text } from '@storybook/addon-knobs'\\\\\\\\nimport ThemeWrapper from '../../../utilities/components/ThemeWrapper'\\\\\\\\n\\\\\\\\nexport default {\\\\\\\\n  title: `${path}/NumberInput`,\\\\\\\\n  component: NumberInput\\\\\\\\n}\\\\\\\\n\\\\\\\\nexport const DefaultField = () => (\\\\\\\\n  <ThemeWrapper>\\\\\\\\n    <Box p='1em'>\\\\\\\\n      <NumberInput\\\\\\\\n        id='someId'\\\\\\\\n        name='someName'\\\\\\\\n        className='someClassName'\\\\\\\\n        label={text('label', 'Number Input')}\\\\\\\\n        labelColor={text('labelColor', 'text.inputLabel.default')}\\\\\\\\n        placeholder={text('placeholder', 'Enter number here...')}\\\\\\\\n        maxLength={number('maxLength', 10)}\\\\\\\\n        error={boolean('error', false)}\\\\\\\\n        errorMessage={text('errorMessage', '')}\\\\\\\\n        required={boolean('required', false)}\\\\\\\\n        fullWidth={boolean('fullWidth', false)}\\\\\\\\n        onChange={action('Triggered: onChange')}\\\\\\\\n        allowDecimal={boolean('allowDecimal', false)}\\\\\\\\n        roundingoffDigit={number('roundingoffDigit', 3)}\\\\\\\\n      />\\\\\\\\n    </Box>\\\\\\\\n  </ThemeWrapper>\\\\\\\\n)\\\\\\\\n\\\\\\\\nexport const DefaultFieldWithInitialValue = () => (\\\\\\\\n  <ThemeWrapper>\\\\\\\\n    <Box p='1em'>\\\\\\\\n      <NumberInput\\\\\\\\n        id='someId'\\\\\\\\n        name='someName'\\\\\\\\n        className='someClassName'\\\\\\\\n        label={text('label', 'Number Input')}\\\\\\\\n        labelColor={text('labelColor', 'text.inputLabel.default')}\\\\\\\\n        placeholder={text('placeholder', 'Enter number here...')}\\\\\\\\n        initialValue={number('initialValue', 25)}\\\\\\\\n        maxLength={number('maxLength', 10)}\\\\\\\\n        error={boolean('error', false)}\\\\\\\\n        errorMessage={text('errorMessage', '')}\\\\\\\\n        required={boolean('required', false)}\\\\\\\\n        fullWidth={boolean('fullWidth', false)}\\\\\\\\n        onChange={action('Triggered: onChange')}\\\\\\\\n        allowDecimal={boolean('allowDecimal', false)}\\\\\\\\n      />\\\\\\\\n    </Box>\\\\\\\\n  </ThemeWrapper>\\\\\\\\n)\\\\\\\\n\\\\\\\\nexport const DecimalField = () => (\\\\\\\\n  <ThemeWrapper>\\\\\\\\n    <Box p='1em'>\\\\\\\\n      <NumberInput\\\\\\\\n        id='someId'\\\\\\\\n        name='someName'\\\\\\\\n        className='someClassName'\\\\\\\\n        label={text('label', 'Number Input')}\\\\\\\\n        labelColor={text('labelColor', 'text.inputLabel.default')}\\\\\\\\n        placeholder={text('placeholder', 'Enter number here...')}\\\\\\\\n        maxLength={number('maxLength', 10)}\\\\\\\\n        error={boolean('error', false)}\\\\\\\\n        errorMessage={text('errorMessage', '')}\\\\\\\\n        required={boolean('required', false)}\\\\\\\\n        fullWidth={boolean('fullWidth', false)}\\\\\\\\n        onChange={action('Triggered: onChange')}\\\\\\\\n        allowDecimal={boolean('allowDecimal', true)}\\\\\\\\n        roundingoffDigit={number('roundingoffDigit', 3)}\\\\\\\\n      />\\\\\\\\n    </Box>\\\\\\\\n  </ThemeWrapper>\\\\\\\\n)\\\\\\\\n\\\\\\\\nexport const RequiredField = () => (\\\\\\\\n  <ThemeWrapper>\\\\\\\\n    <Box p='1em'>\\\\\\\\n      <NumberInput\\\\\\\\n        id='someId'\\\\\\\\n        name='someName'\\\\\\\\n        className='someClassName'\\\\\\\\n        label={text('label', 'Number Input')}\\\\\\\\n        labelColor={text('labelColor', 'text.inputLabel.default')}\\\\\\\\n        placeholder={text('placeholder', 'Enter number here...')}\\\\\\\\n        maxLength={number('maxLength', 10)}\\\\\\\\n        error={boolean('error', false)}\\\\\\\\n        errorMessage={text('errorMessage', '')}\\\\\\\\n        required={boolean('required', true)}\\\\\\\\n        fullWidth={boolean('fullWidth', false)}\\\\\\\\n        onChange={action('Triggered: onChange')}\\\\\\\\n      />\\\\\\\\n    </Box>\\\\\\\\n  </ThemeWrapper>\\\\\\\\n)\\\\\\\\n\\\\\\\\nexport const ErrorField = () => (\\\\\\\\n  <ThemeWrapper>\\\\\\\\n    <Box p='1em'>\\\\\\\\n      <NumberInput\\\\\\\\n        id='someId'\\\\\\\\n        name='someName'\\\\\\\\n        className='someClassName'\\\\\\\\n        label={text('label', 'Number Input')}\\\\\\\\n        labelColor={text('labelColor', 'text.inputLabel.default')}\\\\\\\\n        placeholder={text('placeholder', 'Enter number here...')}\\\\\\\\n        maxLength={number('maxLength', 10)}\\\\\\\\n        error={boolean('error', true)}\\\\\\\\n        errorMessage={text('errorMessage', 'Some Field Error')}\\\\\\\\n        required={boolean('required', false)}\\\\\\\\n        fullWidth={boolean('fullWidth', true)}\\\\\\\\n        onChange={action('Triggered: onChange')}\\\\\\\\n      />\\\\\\\\n    </Box>\\\\\\\\n  </ThemeWrapper>\\\\\\\\n)\\\\\\\\n\\\\\\\\nexport const WithOutBorder = () => (\\\\\\\\n  <ThemeWrapper>\\\\\\\\n    <Box bgColor='grey.100' p='2em'>\\\\\\\\n      <NumberInput\\\\\\\\n        id='someId'\\\\\\\\n        name='someName'\\\\\\\\n        className='someClassName'\\\\\\\\n        maxLength={number('maxLength', 10)}\\\\\\\\n        error={boolean('error', false)}\\\\\\\\n        onChange={action('Triggered: onChange')}\\\\\\\\n        variant='inline-edit'\\\\\\\\n      />\\\\\\\\n    </Box>\\\\\\\\n  </ThemeWrapper>\\\\\\\\n)\\\\\\\\n\\\\\\\",\\\\\\\"locationsMap\\\\\\\":{}},},\\\\n  title: `${path}/NumberInput`,\\\\n  component: NumberInput\\\\n}\\\\n\\\\nexport const DefaultField = addSourceDecorator(() => (\\\\n  <ThemeWrapper>\\\\n    <Box p='1em'>\\\\n      <NumberInput\\\\n        id='someId'\\\\n        name='someName'\\\\n        className='someClassName'\\\\n        label={text('label', 'Number Input')}\\\\n        labelColor={text('labelColor', 'text.inputLabel.default')}\\\\n        placeholder={text('placeholder', 'Enter number here...')}\\\\n        maxLength={number('maxLength', 10)}\\\\n        error={boolean('error', false)}\\\\n        errorMessage={text('errorMessage', '')}\\\\n        required={boolean('required', false)}\\\\n        fullWidth={boolean('fullWidth', false)}\\\\n        onChange={action('Triggered: onChange')}\\\\n        allowDecimal={boolean('allowDecimal', false)}\\\\n        roundingoffDigit={number('roundingoffDigit', 3)}\\\\n      />\\\\n    </Box>\\\\n  </ThemeWrapper>\\\\n), {__STORY__, __ADDS_MAP__,__MAIN_FILE_LOCATION__,__MODULE_DEPENDENCIES__,__LOCAL_DEPENDENCIES__,__SOURCE_PREFIX__,__IDS_TO_FRAMEWORKS__});\\\\n\\\\nexport const DefaultFieldWithInitialValue = addSourceDecorator(() => (\\\\n  <ThemeWrapper>\\\\n    <Box p='1em'>\\\\n      <NumberInput\\\\n        id='someId'\\\\n        name='someName'\\\\n        className='someClassName'\\\\n        label={text('label', 'Number Input')}\\\\n        labelColor={text('labelColor', 'text.inputLabel.default')}\\\\n        placeholder={text('placeholder', 'Enter number here...')}\\\\n        initialValue={number('initialValue', 25)}\\\\n        maxLength={number('maxLength', 10)}\\\\n        error={boolean('error', false)}\\\\n        errorMessage={text('errorMessage', '')}\\\\n        required={boolean('required', false)}\\\\n        fullWidth={boolean('fullWidth', false)}\\\\n        onChange={action('Triggered: onChange')}\\\\n        allowDecimal={boolean('allowDecimal', false)}\\\\n      />\\\\n    </Box>\\\\n  </ThemeWrapper>\\\\n), {__STORY__, __ADDS_MAP__,__MAIN_FILE_LOCATION__,__MODULE_DEPENDENCIES__,__LOCAL_DEPENDENCIES__,__SOURCE_PREFIX__,__IDS_TO_FRAMEWORKS__});\\\\n\\\\nexport const DecimalField = addSourceDecorator(() => (\\\\n  <ThemeWrapper>\\\\n    <Box p='1em'>\\\\n      <NumberInput\\\\n        id='someId'\\\\n        name='someName'\\\\n        className='someClassName'\\\\n        label={text('label', 'Number Input')}\\\\n        labelColor={text('labelColor', 'text.inputLabel.default')}\\\\n        placeholder={text('placeholder', 'Enter number here...')}\\\\n        maxLength={number('maxLength', 10)}\\\\n        error={boolean('error', false)}\\\\n        errorMessage={text('errorMessage', '')}\\\\n        required={boolean('required', false)}\\\\n        fullWidth={boolean('fullWidth', false)}\\\\n        onChange={action('Triggered: onChange')}\\\\n        allowDecimal={boolean('allowDecimal', true)}\\\\n        roundingoffDigit={number('roundingoffDigit', 3)}\\\\n      />\\\\n    </Box>\\\\n  </ThemeWrapper>\\\\n), {__STORY__, __ADDS_MAP__,__MAIN_FILE_LOCATION__,__MODULE_DEPENDENCIES__,__LOCAL_DEPENDENCIES__,__SOURCE_PREFIX__,__IDS_TO_FRAMEWORKS__});\\\\n\\\\nexport const RequiredField = addSourceDecorator(() => (\\\\n  <ThemeWrapper>\\\\n    <Box p='1em'>\\\\n      <NumberInput\\\\n        id='someId'\\\\n        name='someName'\\\\n        className='someClassName'\\\\n        label={text('label', 'Number Input')}\\\\n        labelColor={text('labelColor', 'text.inputLabel.default')}\\\\n        placeholder={text('placeholder', 'Enter number here...')}\\\\n        maxLength={number('maxLength', 10)}\\\\n        error={boolean('error', false)}\\\\n        errorMessage={text('errorMessage', '')}\\\\n        required={boolean('required', true)}\\\\n        fullWidth={boolean('fullWidth', false)}\\\\n        onChange={action('Triggered: onChange')}\\\\n      />\\\\n    </Box>\\\\n  </ThemeWrapper>\\\\n), {__STORY__, __ADDS_MAP__,__MAIN_FILE_LOCATION__,__MODULE_DEPENDENCIES__,__LOCAL_DEPENDENCIES__,__SOURCE_PREFIX__,__IDS_TO_FRAMEWORKS__});\\\\n\\\\nexport const ErrorField = addSourceDecorator(() => (\\\\n  <ThemeWrapper>\\\\n    <Box p='1em'>\\\\n      <NumberInput\\\\n        id='someId'\\\\n        name='someName'\\\\n        className='someClassName'\\\\n        label={text('label', 'Number Input')}\\\\n        labelColor={text('labelColor', 'text.inputLabel.default')}\\\\n        placeholder={text('placeholder', 'Enter number here...')}\\\\n        maxLength={number('maxLength', 10)}\\\\n        error={boolean('error', true)}\\\\n        errorMessage={text('errorMessage', 'Some Field Error')}\\\\n        required={boolean('required', false)}\\\\n        fullWidth={boolean('fullWidth', true)}\\\\n        onChange={action('Triggered: onChange')}\\\\n      />\\\\n    </Box>\\\\n  </ThemeWrapper>\\\\n), {__STORY__, __ADDS_MAP__,__MAIN_FILE_LOCATION__,__MODULE_DEPENDENCIES__,__LOCAL_DEPENDENCIES__,__SOURCE_PREFIX__,__IDS_TO_FRAMEWORKS__});\\\\n\\\\nexport const WithOutBorder = addSourceDecorator(() => (\\\\n  <ThemeWrapper>\\\\n    <Box bgColor='grey.100' p='2em'>\\\\n      <NumberInput\\\\n        id='someId'\\\\n        name='someName'\\\\n        className='someClassName'\\\\n        maxLength={number('maxLength', 10)}\\\\n        error={boolean('error', false)}\\\\n        onChange={action('Triggered: onChange')}\\\\n        variant='inline-edit'\\\\n      />\\\\n    </Box>\\\\n  </ThemeWrapper>\\\\n), {__STORY__, __ADDS_MAP__,__MAIN_FILE_LOCATION__,__MODULE_DEPENDENCIES__,__LOCAL_DEPENDENCIES__,__SOURCE_PREFIX__,__IDS_TO_FRAMEWORKS__});\\\",\\\"locationsMap\\\":{}},\\\"storySource\\\":{\\\"source\\\":\\\"import React from 'react'\\\\nimport NumberInput from '.'\\\\nimport Box from '../../atoms/Box'\\\\nimport { path } from '..'\\\\n\\\\nimport { action } from '@storybook/addon-actions'\\\\nimport { boolean, number, text } from '@storybook/addon-knobs'\\\\nimport ThemeWrapper from '../../../utilities/components/ThemeWrapper'\\\\n\\\\nexport default {\\\\n  title: `${path}/NumberInput`,\\\\n  component: NumberInput\\\\n}\\\\n\\\\nexport const DefaultField = () => (\\\\n  <ThemeWrapper>\\\\n    <Box p='1em'>\\\\n      <NumberInput\\\\n        id='someId'\\\\n        name='someName'\\\\n        className='someClassName'\\\\n        label={text('label', 'Number Input')}\\\\n        labelColor={text('labelColor', 'text.inputLabel.default')}\\\\n        placeholder={text('placeholder', 'Enter number here...')}\\\\n        maxLength={number('maxLength', 10)}\\\\n        error={boolean('error', false)}\\\\n        errorMessage={text('errorMessage', '')}\\\\n        required={boolean('required', false)}\\\\n        fullWidth={boolean('fullWidth', false)}\\\\n        onChange={action('Triggered: onChange')}\\\\n        allowDecimal={boolean('allowDecimal', false)}\\\\n        roundingoffDigit={number('roundingoffDigit', 3)}\\\\n      />\\\\n    </Box>\\\\n  </ThemeWrapper>\\\\n)\\\\n\\\\nexport const DefaultFieldWithInitialValue = () => (\\\\n  <ThemeWrapper>\\\\n    <Box p='1em'>\\\\n      <NumberInput\\\\n        id='someId'\\\\n        name='someName'\\\\n        className='someClassName'\\\\n        label={text('label', 'Number Input')}\\\\n        labelColor={text('labelColor', 'text.inputLabel.default')}\\\\n        placeholder={text('placeholder', 'Enter number here...')}\\\\n        initialValue={number('initialValue', 25)}\\\\n        maxLength={number('maxLength', 10)}\\\\n        error={boolean('error', false)}\\\\n        errorMessage={text('errorMessage', '')}\\\\n        required={boolean('required', false)}\\\\n        fullWidth={boolean('fullWidth', false)}\\\\n        onChange={action('Triggered: onChange')}\\\\n        allowDecimal={boolean('allowDecimal', false)}\\\\n      />\\\\n    </Box>\\\\n  </ThemeWrapper>\\\\n)\\\\n\\\\nexport const DecimalField = () => (\\\\n  <ThemeWrapper>\\\\n    <Box p='1em'>\\\\n      <NumberInput\\\\n        id='someId'\\\\n        name='someName'\\\\n        className='someClassName'\\\\n        label={text('label', 'Number Input')}\\\\n        labelColor={text('labelColor', 'text.inputLabel.default')}\\\\n        placeholder={text('placeholder', 'Enter number here...')}\\\\n        maxLength={number('maxLength', 10)}\\\\n        error={boolean('error', false)}\\\\n        errorMessage={text('errorMessage', '')}\\\\n        required={boolean('required', false)}\\\\n        fullWidth={boolean('fullWidth', false)}\\\\n        onChange={action('Triggered: onChange')}\\\\n        allowDecimal={boolean('allowDecimal', true)}\\\\n        roundingoffDigit={number('roundingoffDigit', 3)}\\\\n      />\\\\n    </Box>\\\\n  </ThemeWrapper>\\\\n)\\\\n\\\\nexport const RequiredField = () => (\\\\n  <ThemeWrapper>\\\\n    <Box p='1em'>\\\\n      <NumberInput\\\\n        id='someId'\\\\n        name='someName'\\\\n        className='someClassName'\\\\n        label={text('label', 'Number Input')}\\\\n        labelColor={text('labelColor', 'text.inputLabel.default')}\\\\n        placeholder={text('placeholder', 'Enter number here...')}\\\\n        maxLength={number('maxLength', 10)}\\\\n        error={boolean('error', false)}\\\\n        errorMessage={text('errorMessage', '')}\\\\n        required={boolean('required', true)}\\\\n        fullWidth={boolean('fullWidth', false)}\\\\n        onChange={action('Triggered: onChange')}\\\\n      />\\\\n    </Box>\\\\n  </ThemeWrapper>\\\\n)\\\\n\\\\nexport const ErrorField = () => (\\\\n  <ThemeWrapper>\\\\n    <Box p='1em'>\\\\n      <NumberInput\\\\n        id='someId'\\\\n        name='someName'\\\\n        className='someClassName'\\\\n        label={text('label', 'Number Input')}\\\\n        labelColor={text('labelColor', 'text.inputLabel.default')}\\\\n        placeholder={text('placeholder', 'Enter number here...')}\\\\n        maxLength={number('maxLength', 10)}\\\\n        error={boolean('error', true)}\\\\n        errorMessage={text('errorMessage', 'Some Field Error')}\\\\n        required={boolean('required', false)}\\\\n        fullWidth={boolean('fullWidth', true)}\\\\n        onChange={action('Triggered: onChange')}\\\\n      />\\\\n    </Box>\\\\n  </ThemeWrapper>\\\\n)\\\\n\\\\nexport const WithOutBorder = () => (\\\\n  <ThemeWrapper>\\\\n    <Box bgColor='grey.100' p='2em'>\\\\n      <NumberInput\\\\n        id='someId'\\\\n        name='someName'\\\\n        className='someClassName'\\\\n        maxLength={number('maxLength', 10)}\\\\n        error={boolean('error', false)}\\\\n        onChange={action('Triggered: onChange')}\\\\n        variant='inline-edit'\\\\n      />\\\\n    </Box>\\\\n  </ThemeWrapper>\\\\n)\\\\n\\\",\\\"locationsMap\\\":{}},},\\n  title: `${path}/NumberInput`,\\n  component: NumberInput\\n}\\n\\nexport const DefaultField = addSourceDecorator(addSourceDecorator(() => (\\n  <ThemeWrapper>\\n    <Box p='1em'>\\n      <NumberInput\\n        id='someId'\\n        name='someName'\\n        className='someClassName'\\n        label={text('label', 'Number Input')}\\n        labelColor={text('labelColor', 'text.inputLabel.default')}\\n        placeholder={text('placeholder', 'Enter number here...')}\\n        maxLength={number('maxLength', 10)}\\n        error={boolean('error', false)}\\n        errorMessage={text('errorMessage', '')}\\n        required={boolean('required', false)}\\n        fullWidth={boolean('fullWidth', false)}\\n        onChange={action('Triggered: onChange')}\\n        allowDecimal={boolean('allowDecimal', false)}\\n        roundingoffDigit={number('roundingoffDigit', 3)}\\n      />\\n    </Box>\\n  </ThemeWrapper>\\n), {__STORY__, __ADDS_MAP__,__MAIN_FILE_LOCATION__,__MODULE_DEPENDENCIES__,__LOCAL_DEPENDENCIES__,__SOURCE_PREFIX__,__IDS_TO_FRAMEWORKS__}), {__STORY__, __ADDS_MAP__,__MAIN_FILE_LOCATION__,__MODULE_DEPENDENCIES__,__LOCAL_DEPENDENCIES__,__SOURCE_PREFIX__,__IDS_TO_FRAMEWORKS__});;\\n\\nexport const DefaultFieldWithInitialValue = addSourceDecorator(addSourceDecorator(() => (\\n  <ThemeWrapper>\\n    <Box p='1em'>\\n      <NumberInput\\n        id='someId'\\n        name='someName'\\n        className='someClassName'\\n        label={text('label', 'Number Input')}\\n        labelColor={text('labelColor', 'text.inputLabel.default')}\\n        placeholder={text('placeholder', 'Enter number here...')}\\n        initialValue={number('initialValue', 25)}\\n        maxLength={number('maxLength', 10)}\\n        error={boolean('error', false)}\\n        errorMessage={text('errorMessage', '')}\\n        required={boolean('required', false)}\\n        fullWidth={boolean('fullWidth', false)}\\n        onChange={action('Triggered: onChange')}\\n        allowDecimal={boolean('allowDecimal', false)}\\n      />\\n    </Box>\\n  </ThemeWrapper>\\n), {__STORY__, __ADDS_MAP__,__MAIN_FILE_LOCATION__,__MODULE_DEPENDENCIES__,__LOCAL_DEPENDENCIES__,__SOURCE_PREFIX__,__IDS_TO_FRAMEWORKS__}), {__STORY__, __ADDS_MAP__,__MAIN_FILE_LOCATION__,__MODULE_DEPENDENCIES__,__LOCAL_DEPENDENCIES__,__SOURCE_PREFIX__,__IDS_TO_FRAMEWORKS__});;\\n\\nexport const DecimalField = addSourceDecorator(addSourceDecorator(() => (\\n  <ThemeWrapper>\\n    <Box p='1em'>\\n      <NumberInput\\n        id='someId'\\n        name='someName'\\n        className='someClassName'\\n        label={text('label', 'Number Input')}\\n        labelColor={text('labelColor', 'text.inputLabel.default')}\\n        placeholder={text('placeholder', 'Enter number here...')}\\n        maxLength={number('maxLength', 10)}\\n        error={boolean('error', false)}\\n        errorMessage={text('errorMessage', '')}\\n        required={boolean('required', false)}\\n        fullWidth={boolean('fullWidth', false)}\\n        onChange={action('Triggered: onChange')}\\n        allowDecimal={boolean('allowDecimal', true)}\\n        roundingoffDigit={number('roundingoffDigit', 3)}\\n      />\\n    </Box>\\n  </ThemeWrapper>\\n), {__STORY__, __ADDS_MAP__,__MAIN_FILE_LOCATION__,__MODULE_DEPENDENCIES__,__LOCAL_DEPENDENCIES__,__SOURCE_PREFIX__,__IDS_TO_FRAMEWORKS__}), {__STORY__, __ADDS_MAP__,__MAIN_FILE_LOCATION__,__MODULE_DEPENDENCIES__,__LOCAL_DEPENDENCIES__,__SOURCE_PREFIX__,__IDS_TO_FRAMEWORKS__});;\\n\\nexport const RequiredField = addSourceDecorator(addSourceDecorator(() => (\\n  <ThemeWrapper>\\n    <Box p='1em'>\\n      <NumberInput\\n        id='someId'\\n        name='someName'\\n        className='someClassName'\\n        label={text('label', 'Number Input')}\\n        labelColor={text('labelColor', 'text.inputLabel.default')}\\n        placeholder={text('placeholder', 'Enter number here...')}\\n        maxLength={number('maxLength', 10)}\\n        error={boolean('error', false)}\\n        errorMessage={text('errorMessage', '')}\\n        required={boolean('required', true)}\\n        fullWidth={boolean('fullWidth', false)}\\n        onChange={action('Triggered: onChange')}\\n      />\\n    </Box>\\n  </ThemeWrapper>\\n), {__STORY__, __ADDS_MAP__,__MAIN_FILE_LOCATION__,__MODULE_DEPENDENCIES__,__LOCAL_DEPENDENCIES__,__SOURCE_PREFIX__,__IDS_TO_FRAMEWORKS__}), {__STORY__, __ADDS_MAP__,__MAIN_FILE_LOCATION__,__MODULE_DEPENDENCIES__,__LOCAL_DEPENDENCIES__,__SOURCE_PREFIX__,__IDS_TO_FRAMEWORKS__});;\\n\\nexport const ErrorField = addSourceDecorator(addSourceDecorator(() => (\\n  <ThemeWrapper>\\n    <Box p='1em'>\\n      <NumberInput\\n        id='someId'\\n        name='someName'\\n        className='someClassName'\\n        label={text('label', 'Number Input')}\\n        labelColor={text('labelColor', 'text.inputLabel.default')}\\n        placeholder={text('placeholder', 'Enter number here...')}\\n        maxLength={number('maxLength', 10)}\\n        error={boolean('error', true)}\\n        errorMessage={text('errorMessage', 'Some Field Error')}\\n        required={boolean('required', false)}\\n        fullWidth={boolean('fullWidth', true)}\\n        onChange={action('Triggered: onChange')}\\n      />\\n    </Box>\\n  </ThemeWrapper>\\n), {__STORY__, __ADDS_MAP__,__MAIN_FILE_LOCATION__,__MODULE_DEPENDENCIES__,__LOCAL_DEPENDENCIES__,__SOURCE_PREFIX__,__IDS_TO_FRAMEWORKS__}), {__STORY__, __ADDS_MAP__,__MAIN_FILE_LOCATION__,__MODULE_DEPENDENCIES__,__LOCAL_DEPENDENCIES__,__SOURCE_PREFIX__,__IDS_TO_FRAMEWORKS__});;\\n\\nexport const WithOutBorder = addSourceDecorator(addSourceDecorator(() => (\\n  <ThemeWrapper>\\n    <Box bgColor='grey.100' p='2em'>\\n      <NumberInput\\n        id='someId'\\n        name='someName'\\n        className='someClassName'\\n        maxLength={number('maxLength', 10)}\\n        error={boolean('error', false)}\\n        onChange={action('Triggered: onChange')}\\n        variant='inline-edit'\\n      />\\n    </Box>\\n  </ThemeWrapper>\\n), {__STORY__, __ADDS_MAP__,__MAIN_FILE_LOCATION__,__MODULE_DEPENDENCIES__,__LOCAL_DEPENDENCIES__,__SOURCE_PREFIX__,__IDS_TO_FRAMEWORKS__}), {__STORY__, __ADDS_MAP__,__MAIN_FILE_LOCATION__,__MODULE_DEPENDENCIES__,__LOCAL_DEPENDENCIES__,__SOURCE_PREFIX__,__IDS_TO_FRAMEWORKS__});\",\n      \"locationsMap\": {}\n    }\n  }, _defineProperty(_parameters, \"storySource\", {\n    \"source\": \"\\n\\n// @ts-nocheck\\n// @ts-ignore\\nvar withSourceLoader = require('@storybook/source-loader/preview').withSource;\\n// @ts-ignore\\nvar addSourceDecorator = require(\\\"@storybook/source-loader/preview\\\").addSource;\\n// @ts-ignore\\nvar __SOURCE_PREFIX__ = \\\"/Users/farhanansari/Code/ui-library/src/components/molecules/NumberInput\\\";\\n// @ts-ignore\\nvar __STORY__ = \\\"import React from 'react'\\\\nimport NumberInput from '.'\\\\nimport Box from '../../atoms/Box'\\\\nimport { path } from '..'\\\\n\\\\nimport { action } from '@storybook/addon-actions'\\\\nimport { boolean, number, text } from '@storybook/addon-knobs'\\\\nimport ThemeWrapper from '../../../utilities/components/ThemeWrapper'\\\\n\\\\nexport default {\\\\n  title: `${path}/NumberInput`,\\\\n  component: NumberInput\\\\n}\\\\n\\\\nexport const DefaultField = () => (\\\\n  <ThemeWrapper>\\\\n    <Box p='1em'>\\\\n      <NumberInput\\\\n        id='someId'\\\\n        name='someName'\\\\n        className='someClassName'\\\\n        label={text('label', 'Number Input')}\\\\n        labelColor={text('labelColor', 'text.inputLabel.default')}\\\\n        placeholder={text('placeholder', 'Enter number here...')}\\\\n        maxLength={number('maxLength', 10)}\\\\n        error={boolean('error', false)}\\\\n        errorMessage={text('errorMessage', '')}\\\\n        required={boolean('required', false)}\\\\n        fullWidth={boolean('fullWidth', false)}\\\\n        onChange={action('Triggered: onChange')}\\\\n        allowDecimal={boolean('allowDecimal', false)}\\\\n        roundingoffDigit={number('roundingoffDigit', 3)}\\\\n      />\\\\n    </Box>\\\\n  </ThemeWrapper>\\\\n)\\\\n\\\\nexport const DefaultFieldWithInitialValue = () => (\\\\n  <ThemeWrapper>\\\\n    <Box p='1em'>\\\\n      <NumberInput\\\\n        id='someId'\\\\n        name='someName'\\\\n        className='someClassName'\\\\n        label={text('label', 'Number Input')}\\\\n        labelColor={text('labelColor', 'text.inputLabel.default')}\\\\n        placeholder={text('placeholder', 'Enter number here...')}\\\\n        initialValue={number('initialValue', 25)}\\\\n        maxLength={number('maxLength', 10)}\\\\n        error={boolean('error', false)}\\\\n        errorMessage={text('errorMessage', '')}\\\\n        required={boolean('required', false)}\\\\n        fullWidth={boolean('fullWidth', false)}\\\\n        onChange={action('Triggered: onChange')}\\\\n        allowDecimal={boolean('allowDecimal', false)}\\\\n      />\\\\n    </Box>\\\\n  </ThemeWrapper>\\\\n)\\\\n\\\\nexport const DecimalField = () => (\\\\n  <ThemeWrapper>\\\\n    <Box p='1em'>\\\\n      <NumberInput\\\\n        id='someId'\\\\n        name='someName'\\\\n        className='someClassName'\\\\n        label={text('label', 'Number Input')}\\\\n        labelColor={text('labelColor', 'text.inputLabel.default')}\\\\n        placeholder={text('placeholder', 'Enter number here...')}\\\\n        maxLength={number('maxLength', 10)}\\\\n        error={boolean('error', false)}\\\\n        errorMessage={text('errorMessage', '')}\\\\n        required={boolean('required', false)}\\\\n        fullWidth={boolean('fullWidth', false)}\\\\n        onChange={action('Triggered: onChange')}\\\\n        allowDecimal={boolean('allowDecimal', true)}\\\\n        roundingoffDigit={number('roundingoffDigit', 3)}\\\\n      />\\\\n    </Box>\\\\n  </ThemeWrapper>\\\\n)\\\\n\\\\nexport const RequiredField = () => (\\\\n  <ThemeWrapper>\\\\n    <Box p='1em'>\\\\n      <NumberInput\\\\n        id='someId'\\\\n        name='someName'\\\\n        className='someClassName'\\\\n        label={text('label', 'Number Input')}\\\\n        labelColor={text('labelColor', 'text.inputLabel.default')}\\\\n        placeholder={text('placeholder', 'Enter number here...')}\\\\n        maxLength={number('maxLength', 10)}\\\\n        error={boolean('error', false)}\\\\n        errorMessage={text('errorMessage', '')}\\\\n        required={boolean('required', true)}\\\\n        fullWidth={boolean('fullWidth', false)}\\\\n        onChange={action('Triggered: onChange')}\\\\n      />\\\\n    </Box>\\\\n  </ThemeWrapper>\\\\n)\\\\n\\\\nexport const ErrorField = () => (\\\\n  <ThemeWrapper>\\\\n    <Box p='1em'>\\\\n      <NumberInput\\\\n        id='someId'\\\\n        name='someName'\\\\n        className='someClassName'\\\\n        label={text('label', 'Number Input')}\\\\n        labelColor={text('labelColor', 'text.inputLabel.default')}\\\\n        placeholder={text('placeholder', 'Enter number here...')}\\\\n        maxLength={number('maxLength', 10)}\\\\n        error={boolean('error', true)}\\\\n        errorMessage={text('errorMessage', 'Some Field Error')}\\\\n        required={boolean('required', false)}\\\\n        fullWidth={boolean('fullWidth', true)}\\\\n        onChange={action('Triggered: onChange')}\\\\n      />\\\\n    </Box>\\\\n  </ThemeWrapper>\\\\n)\\\\n\\\\nexport const WithOutBorder = () => (\\\\n  <ThemeWrapper>\\\\n    <Box bgColor='grey.100' p='2em'>\\\\n      <NumberInput\\\\n        id='someId'\\\\n        name='someName'\\\\n        className='someClassName'\\\\n        maxLength={number('maxLength', 10)}\\\\n        error={boolean('error', false)}\\\\n        onChange={action('Triggered: onChange')}\\\\n        variant='inline-edit'\\\\n      />\\\\n    </Box>\\\\n  </ThemeWrapper>\\\\n)\\\\n\\\";\\n// @ts-ignore\\nvar __ADDS_MAP__ = {};\\n// @ts-ignore\\nvar __MAIN_FILE_LOCATION__ = \\\"/NumberInput.stories.tsx\\\";\\n// @ts-ignore\\nvar __MODULE_DEPENDENCIES__ = [];\\n// @ts-ignore\\nvar __LOCAL_DEPENDENCIES__ = {};\\n// @ts-ignore\\nvar __IDS_TO_FRAMEWORKS__ = {};\\n        \\nimport React from 'react'\\nimport NumberInput from '.'\\nimport Box from '../../atoms/Box'\\nimport { path } from '..'\\n\\nimport { action } from '@storybook/addon-actions'\\nimport { boolean, number, text } from '@storybook/addon-knobs'\\nimport ThemeWrapper from '../../../utilities/components/ThemeWrapper'\\n\\nexport default {parameters: {\\\"storySource\\\":{\\\"source\\\":\\\"import React from 'react'\\\\nimport NumberInput from '.'\\\\nimport Box from '../../atoms/Box'\\\\nimport { path } from '..'\\\\n\\\\nimport { action } from '@storybook/addon-actions'\\\\nimport { boolean, number, text } from '@storybook/addon-knobs'\\\\nimport ThemeWrapper from '../../../utilities/components/ThemeWrapper'\\\\n\\\\nexport default {\\\\n  title: `${path}/NumberInput`,\\\\n  component: NumberInput\\\\n}\\\\n\\\\nexport const DefaultField = () => (\\\\n  <ThemeWrapper>\\\\n    <Box p='1em'>\\\\n      <NumberInput\\\\n        id='someId'\\\\n        name='someName'\\\\n        className='someClassName'\\\\n        label={text('label', 'Number Input')}\\\\n        labelColor={text('labelColor', 'text.inputLabel.default')}\\\\n        placeholder={text('placeholder', 'Enter number here...')}\\\\n        maxLength={number('maxLength', 10)}\\\\n        error={boolean('error', false)}\\\\n        errorMessage={text('errorMessage', '')}\\\\n        required={boolean('required', false)}\\\\n        fullWidth={boolean('fullWidth', false)}\\\\n        onChange={action('Triggered: onChange')}\\\\n        allowDecimal={boolean('allowDecimal', false)}\\\\n        roundingoffDigit={number('roundingoffDigit', 3)}\\\\n      />\\\\n    </Box>\\\\n  </ThemeWrapper>\\\\n)\\\\n\\\\nexport const DefaultFieldWithInitialValue = () => (\\\\n  <ThemeWrapper>\\\\n    <Box p='1em'>\\\\n      <NumberInput\\\\n        id='someId'\\\\n        name='someName'\\\\n        className='someClassName'\\\\n        label={text('label', 'Number Input')}\\\\n        labelColor={text('labelColor', 'text.inputLabel.default')}\\\\n        placeholder={text('placeholder', 'Enter number here...')}\\\\n        initialValue={number('initialValue', 25)}\\\\n        maxLength={number('maxLength', 10)}\\\\n        error={boolean('error', false)}\\\\n        errorMessage={text('errorMessage', '')}\\\\n        required={boolean('required', false)}\\\\n        fullWidth={boolean('fullWidth', false)}\\\\n        onChange={action('Triggered: onChange')}\\\\n        allowDecimal={boolean('allowDecimal', false)}\\\\n      />\\\\n    </Box>\\\\n  </ThemeWrapper>\\\\n)\\\\n\\\\nexport const DecimalField = () => (\\\\n  <ThemeWrapper>\\\\n    <Box p='1em'>\\\\n      <NumberInput\\\\n        id='someId'\\\\n        name='someName'\\\\n        className='someClassName'\\\\n        label={text('label', 'Number Input')}\\\\n        labelColor={text('labelColor', 'text.inputLabel.default')}\\\\n        placeholder={text('placeholder', 'Enter number here...')}\\\\n        maxLength={number('maxLength', 10)}\\\\n        error={boolean('error', false)}\\\\n        errorMessage={text('errorMessage', '')}\\\\n        required={boolean('required', false)}\\\\n        fullWidth={boolean('fullWidth', false)}\\\\n        onChange={action('Triggered: onChange')}\\\\n        allowDecimal={boolean('allowDecimal', true)}\\\\n        roundingoffDigit={number('roundingoffDigit', 3)}\\\\n      />\\\\n    </Box>\\\\n  </ThemeWrapper>\\\\n)\\\\n\\\\nexport const RequiredField = () => (\\\\n  <ThemeWrapper>\\\\n    <Box p='1em'>\\\\n      <NumberInput\\\\n        id='someId'\\\\n        name='someName'\\\\n        className='someClassName'\\\\n        label={text('label', 'Number Input')}\\\\n        labelColor={text('labelColor', 'text.inputLabel.default')}\\\\n        placeholder={text('placeholder', 'Enter number here...')}\\\\n        maxLength={number('maxLength', 10)}\\\\n        error={boolean('error', false)}\\\\n        errorMessage={text('errorMessage', '')}\\\\n        required={boolean('required', true)}\\\\n        fullWidth={boolean('fullWidth', false)}\\\\n        onChange={action('Triggered: onChange')}\\\\n      />\\\\n    </Box>\\\\n  </ThemeWrapper>\\\\n)\\\\n\\\\nexport const ErrorField = () => (\\\\n  <ThemeWrapper>\\\\n    <Box p='1em'>\\\\n      <NumberInput\\\\n        id='someId'\\\\n        name='someName'\\\\n        className='someClassName'\\\\n        label={text('label', 'Number Input')}\\\\n        labelColor={text('labelColor', 'text.inputLabel.default')}\\\\n        placeholder={text('placeholder', 'Enter number here...')}\\\\n        maxLength={number('maxLength', 10)}\\\\n        error={boolean('error', true)}\\\\n        errorMessage={text('errorMessage', 'Some Field Error')}\\\\n        required={boolean('required', false)}\\\\n        fullWidth={boolean('fullWidth', true)}\\\\n        onChange={action('Triggered: onChange')}\\\\n      />\\\\n    </Box>\\\\n  </ThemeWrapper>\\\\n)\\\\n\\\\nexport const WithOutBorder = () => (\\\\n  <ThemeWrapper>\\\\n    <Box bgColor='grey.100' p='2em'>\\\\n      <NumberInput\\\\n        id='someId'\\\\n        name='someName'\\\\n        className='someClassName'\\\\n        maxLength={number('maxLength', 10)}\\\\n        error={boolean('error', false)}\\\\n        onChange={action('Triggered: onChange')}\\\\n        variant='inline-edit'\\\\n      />\\\\n    </Box>\\\\n  </ThemeWrapper>\\\\n)\\\\n\\\",\\\"locationsMap\\\":{}},},\\n  title: `${path}/NumberInput`,\\n  component: NumberInput\\n}\\n\\nexport const DefaultField = addSourceDecorator(() => (\\n  <ThemeWrapper>\\n    <Box p='1em'>\\n      <NumberInput\\n        id='someId'\\n        name='someName'\\n        className='someClassName'\\n        label={text('label', 'Number Input')}\\n        labelColor={text('labelColor', 'text.inputLabel.default')}\\n        placeholder={text('placeholder', 'Enter number here...')}\\n        maxLength={number('maxLength', 10)}\\n        error={boolean('error', false)}\\n        errorMessage={text('errorMessage', '')}\\n        required={boolean('required', false)}\\n        fullWidth={boolean('fullWidth', false)}\\n        onChange={action('Triggered: onChange')}\\n        allowDecimal={boolean('allowDecimal', false)}\\n        roundingoffDigit={number('roundingoffDigit', 3)}\\n      />\\n    </Box>\\n  </ThemeWrapper>\\n), {__STORY__, __ADDS_MAP__,__MAIN_FILE_LOCATION__,__MODULE_DEPENDENCIES__,__LOCAL_DEPENDENCIES__,__SOURCE_PREFIX__,__IDS_TO_FRAMEWORKS__});\\n\\nexport const DefaultFieldWithInitialValue = addSourceDecorator(() => (\\n  <ThemeWrapper>\\n    <Box p='1em'>\\n      <NumberInput\\n        id='someId'\\n        name='someName'\\n        className='someClassName'\\n        label={text('label', 'Number Input')}\\n        labelColor={text('labelColor', 'text.inputLabel.default')}\\n        placeholder={text('placeholder', 'Enter number here...')}\\n        initialValue={number('initialValue', 25)}\\n        maxLength={number('maxLength', 10)}\\n        error={boolean('error', false)}\\n        errorMessage={text('errorMessage', '')}\\n        required={boolean('required', false)}\\n        fullWidth={boolean('fullWidth', false)}\\n        onChange={action('Triggered: onChange')}\\n        allowDecimal={boolean('allowDecimal', false)}\\n      />\\n    </Box>\\n  </ThemeWrapper>\\n), {__STORY__, __ADDS_MAP__,__MAIN_FILE_LOCATION__,__MODULE_DEPENDENCIES__,__LOCAL_DEPENDENCIES__,__SOURCE_PREFIX__,__IDS_TO_FRAMEWORKS__});\\n\\nexport const DecimalField = addSourceDecorator(() => (\\n  <ThemeWrapper>\\n    <Box p='1em'>\\n      <NumberInput\\n        id='someId'\\n        name='someName'\\n        className='someClassName'\\n        label={text('label', 'Number Input')}\\n        labelColor={text('labelColor', 'text.inputLabel.default')}\\n        placeholder={text('placeholder', 'Enter number here...')}\\n        maxLength={number('maxLength', 10)}\\n        error={boolean('error', false)}\\n        errorMessage={text('errorMessage', '')}\\n        required={boolean('required', false)}\\n        fullWidth={boolean('fullWidth', false)}\\n        onChange={action('Triggered: onChange')}\\n        allowDecimal={boolean('allowDecimal', true)}\\n        roundingoffDigit={number('roundingoffDigit', 3)}\\n      />\\n    </Box>\\n  </ThemeWrapper>\\n), {__STORY__, __ADDS_MAP__,__MAIN_FILE_LOCATION__,__MODULE_DEPENDENCIES__,__LOCAL_DEPENDENCIES__,__SOURCE_PREFIX__,__IDS_TO_FRAMEWORKS__});\\n\\nexport const RequiredField = addSourceDecorator(() => (\\n  <ThemeWrapper>\\n    <Box p='1em'>\\n      <NumberInput\\n        id='someId'\\n        name='someName'\\n        className='someClassName'\\n        label={text('label', 'Number Input')}\\n        labelColor={text('labelColor', 'text.inputLabel.default')}\\n        placeholder={text('placeholder', 'Enter number here...')}\\n        maxLength={number('maxLength', 10)}\\n        error={boolean('error', false)}\\n        errorMessage={text('errorMessage', '')}\\n        required={boolean('required', true)}\\n        fullWidth={boolean('fullWidth', false)}\\n        onChange={action('Triggered: onChange')}\\n      />\\n    </Box>\\n  </ThemeWrapper>\\n), {__STORY__, __ADDS_MAP__,__MAIN_FILE_LOCATION__,__MODULE_DEPENDENCIES__,__LOCAL_DEPENDENCIES__,__SOURCE_PREFIX__,__IDS_TO_FRAMEWORKS__});\\n\\nexport const ErrorField = addSourceDecorator(() => (\\n  <ThemeWrapper>\\n    <Box p='1em'>\\n      <NumberInput\\n        id='someId'\\n        name='someName'\\n        className='someClassName'\\n        label={text('label', 'Number Input')}\\n        labelColor={text('labelColor', 'text.inputLabel.default')}\\n        placeholder={text('placeholder', 'Enter number here...')}\\n        maxLength={number('maxLength', 10)}\\n        error={boolean('error', true)}\\n        errorMessage={text('errorMessage', 'Some Field Error')}\\n        required={boolean('required', false)}\\n        fullWidth={boolean('fullWidth', true)}\\n        onChange={action('Triggered: onChange')}\\n      />\\n    </Box>\\n  </ThemeWrapper>\\n), {__STORY__, __ADDS_MAP__,__MAIN_FILE_LOCATION__,__MODULE_DEPENDENCIES__,__LOCAL_DEPENDENCIES__,__SOURCE_PREFIX__,__IDS_TO_FRAMEWORKS__});\\n\\nexport const WithOutBorder = addSourceDecorator(() => (\\n  <ThemeWrapper>\\n    <Box bgColor='grey.100' p='2em'>\\n      <NumberInput\\n        id='someId'\\n        name='someName'\\n        className='someClassName'\\n        maxLength={number('maxLength', 10)}\\n        error={boolean('error', false)}\\n        onChange={action('Triggered: onChange')}\\n        variant='inline-edit'\\n      />\\n    </Box>\\n  </ThemeWrapper>\\n), {__STORY__, __ADDS_MAP__,__MAIN_FILE_LOCATION__,__MODULE_DEPENDENCIES__,__LOCAL_DEPENDENCIES__,__SOURCE_PREFIX__,__IDS_TO_FRAMEWORKS__});\",\n    \"locationsMap\": {}\n  }), _defineProperty(_parameters, \"storySource\", {\n    \"source\": \"import React from 'react'\\nimport NumberInput from '.'\\nimport Box from '../../atoms/Box'\\nimport { path } from '..'\\n\\nimport { action } from '@storybook/addon-actions'\\nimport { boolean, number, text } from '@storybook/addon-knobs'\\nimport ThemeWrapper from '../../../utilities/components/ThemeWrapper'\\n\\nexport default {\\n  title: `${path}/NumberInput`,\\n  component: NumberInput\\n}\\n\\nexport const DefaultField = () => (\\n  <ThemeWrapper>\\n    <Box p='1em'>\\n      <NumberInput\\n        id='someId'\\n        name='someName'\\n        className='someClassName'\\n        label={text('label', 'Number Input')}\\n        labelColor={text('labelColor', 'text.inputLabel.default')}\\n        placeholder={text('placeholder', 'Enter number here...')}\\n        maxLength={number('maxLength', 10)}\\n        error={boolean('error', false)}\\n        errorMessage={text('errorMessage', '')}\\n        required={boolean('required', false)}\\n        fullWidth={boolean('fullWidth', false)}\\n        onChange={action('Triggered: onChange')}\\n        allowDecimal={boolean('allowDecimal', false)}\\n        roundingoffDigit={number('roundingoffDigit', 3)}\\n      />\\n    </Box>\\n  </ThemeWrapper>\\n)\\n\\nexport const DefaultFieldWithInitialValue = () => (\\n  <ThemeWrapper>\\n    <Box p='1em'>\\n      <NumberInput\\n        id='someId'\\n        name='someName'\\n        className='someClassName'\\n        label={text('label', 'Number Input')}\\n        labelColor={text('labelColor', 'text.inputLabel.default')}\\n        placeholder={text('placeholder', 'Enter number here...')}\\n        initialValue={number('initialValue', 25)}\\n        maxLength={number('maxLength', 10)}\\n        error={boolean('error', false)}\\n        errorMessage={text('errorMessage', '')}\\n        required={boolean('required', false)}\\n        fullWidth={boolean('fullWidth', false)}\\n        onChange={action('Triggered: onChange')}\\n        allowDecimal={boolean('allowDecimal', false)}\\n      />\\n    </Box>\\n  </ThemeWrapper>\\n)\\n\\nexport const DecimalField = () => (\\n  <ThemeWrapper>\\n    <Box p='1em'>\\n      <NumberInput\\n        id='someId'\\n        name='someName'\\n        className='someClassName'\\n        label={text('label', 'Number Input')}\\n        labelColor={text('labelColor', 'text.inputLabel.default')}\\n        placeholder={text('placeholder', 'Enter number here...')}\\n        maxLength={number('maxLength', 10)}\\n        error={boolean('error', false)}\\n        errorMessage={text('errorMessage', '')}\\n        required={boolean('required', false)}\\n        fullWidth={boolean('fullWidth', false)}\\n        onChange={action('Triggered: onChange')}\\n        allowDecimal={boolean('allowDecimal', true)}\\n        roundingoffDigit={number('roundingoffDigit', 3)}\\n      />\\n    </Box>\\n  </ThemeWrapper>\\n)\\n\\nexport const RequiredField = () => (\\n  <ThemeWrapper>\\n    <Box p='1em'>\\n      <NumberInput\\n        id='someId'\\n        name='someName'\\n        className='someClassName'\\n        label={text('label', 'Number Input')}\\n        labelColor={text('labelColor', 'text.inputLabel.default')}\\n        placeholder={text('placeholder', 'Enter number here...')}\\n        maxLength={number('maxLength', 10)}\\n        error={boolean('error', false)}\\n        errorMessage={text('errorMessage', '')}\\n        required={boolean('required', true)}\\n        fullWidth={boolean('fullWidth', false)}\\n        onChange={action('Triggered: onChange')}\\n      />\\n    </Box>\\n  </ThemeWrapper>\\n)\\n\\nexport const ErrorField = () => (\\n  <ThemeWrapper>\\n    <Box p='1em'>\\n      <NumberInput\\n        id='someId'\\n        name='someName'\\n        className='someClassName'\\n        label={text('label', 'Number Input')}\\n        labelColor={text('labelColor', 'text.inputLabel.default')}\\n        placeholder={text('placeholder', 'Enter number here...')}\\n        maxLength={number('maxLength', 10)}\\n        error={boolean('error', true)}\\n        errorMessage={text('errorMessage', 'Some Field Error')}\\n        required={boolean('required', false)}\\n        fullWidth={boolean('fullWidth', true)}\\n        onChange={action('Triggered: onChange')}\\n      />\\n    </Box>\\n  </ThemeWrapper>\\n)\\n\\nexport const WithOutBorder = () => (\\n  <ThemeWrapper>\\n    <Box bgColor='grey.100' p='2em'>\\n      <NumberInput\\n        id='someId'\\n        name='someName'\\n        className='someClassName'\\n        maxLength={number('maxLength', 10)}\\n        error={boolean('error', false)}\\n        onChange={action('Triggered: onChange')}\\n        variant='inline-edit'\\n      />\\n    </Box>\\n  </ThemeWrapper>\\n)\\n\",\n    \"locationsMap\": {}\n  }), _parameters),\n  title: path + \"/NumberInput\",\n  component: NumberInput\n};\nexport var DefaultField = addSourceDecorator(addSourceDecorator(addSourceDecorator(function () {\n  return React.createElement(ThemeWrapper, null, React.createElement(Box, {\n    p: '1em'\n  }, React.createElement(NumberInput, {\n    id: 'someId',\n    name: 'someName',\n    className: 'someClassName',\n    label: text('label', 'Number Input'),\n    labelColor: text('labelColor', 'text.inputLabel.default'),\n    placeholder: text('placeholder', 'Enter number here...'),\n    maxLength: number('maxLength', 10),\n    error: _boolean('error', false),\n    errorMessage: text('errorMessage', ''),\n    required: _boolean('required', false),\n    fullWidth: _boolean('fullWidth', false),\n    onChange: action('Triggered: onChange'),\n    allowDecimal: _boolean('allowDecimal', false),\n    roundingoffDigit: number('roundingoffDigit', 3)\n  })));\n}, {\n  __STORY__: __STORY__,\n  __ADDS_MAP__: __ADDS_MAP__,\n  __MAIN_FILE_LOCATION__: __MAIN_FILE_LOCATION__,\n  __MODULE_DEPENDENCIES__: __MODULE_DEPENDENCIES__,\n  __LOCAL_DEPENDENCIES__: __LOCAL_DEPENDENCIES__,\n  __SOURCE_PREFIX__: __SOURCE_PREFIX__,\n  __IDS_TO_FRAMEWORKS__: __IDS_TO_FRAMEWORKS__\n}), {\n  __STORY__: __STORY__,\n  __ADDS_MAP__: __ADDS_MAP__,\n  __MAIN_FILE_LOCATION__: __MAIN_FILE_LOCATION__,\n  __MODULE_DEPENDENCIES__: __MODULE_DEPENDENCIES__,\n  __LOCAL_DEPENDENCIES__: __LOCAL_DEPENDENCIES__,\n  __SOURCE_PREFIX__: __SOURCE_PREFIX__,\n  __IDS_TO_FRAMEWORKS__: __IDS_TO_FRAMEWORKS__\n}), {\n  __STORY__: __STORY__,\n  __ADDS_MAP__: __ADDS_MAP__,\n  __MAIN_FILE_LOCATION__: __MAIN_FILE_LOCATION__,\n  __MODULE_DEPENDENCIES__: __MODULE_DEPENDENCIES__,\n  __LOCAL_DEPENDENCIES__: __LOCAL_DEPENDENCIES__,\n  __SOURCE_PREFIX__: __SOURCE_PREFIX__,\n  __IDS_TO_FRAMEWORKS__: __IDS_TO_FRAMEWORKS__\n});\n;\n;\nexport var DefaultFieldWithInitialValue = addSourceDecorator(addSourceDecorator(addSourceDecorator(function () {\n  return React.createElement(ThemeWrapper, null, React.createElement(Box, {\n    p: '1em'\n  }, React.createElement(NumberInput, {\n    id: 'someId',\n    name: 'someName',\n    className: 'someClassName',\n    label: text('label', 'Number Input'),\n    labelColor: text('labelColor', 'text.inputLabel.default'),\n    placeholder: text('placeholder', 'Enter number here...'),\n    initialValue: number('initialValue', 25),\n    maxLength: number('maxLength', 10),\n    error: _boolean('error', false),\n    errorMessage: text('errorMessage', ''),\n    required: _boolean('required', false),\n    fullWidth: _boolean('fullWidth', false),\n    onChange: action('Triggered: onChange'),\n    allowDecimal: _boolean('allowDecimal', false)\n  })));\n}, {\n  __STORY__: __STORY__,\n  __ADDS_MAP__: __ADDS_MAP__,\n  __MAIN_FILE_LOCATION__: __MAIN_FILE_LOCATION__,\n  __MODULE_DEPENDENCIES__: __MODULE_DEPENDENCIES__,\n  __LOCAL_DEPENDENCIES__: __LOCAL_DEPENDENCIES__,\n  __SOURCE_PREFIX__: __SOURCE_PREFIX__,\n  __IDS_TO_FRAMEWORKS__: __IDS_TO_FRAMEWORKS__\n}), {\n  __STORY__: __STORY__,\n  __ADDS_MAP__: __ADDS_MAP__,\n  __MAIN_FILE_LOCATION__: __MAIN_FILE_LOCATION__,\n  __MODULE_DEPENDENCIES__: __MODULE_DEPENDENCIES__,\n  __LOCAL_DEPENDENCIES__: __LOCAL_DEPENDENCIES__,\n  __SOURCE_PREFIX__: __SOURCE_PREFIX__,\n  __IDS_TO_FRAMEWORKS__: __IDS_TO_FRAMEWORKS__\n}), {\n  __STORY__: __STORY__,\n  __ADDS_MAP__: __ADDS_MAP__,\n  __MAIN_FILE_LOCATION__: __MAIN_FILE_LOCATION__,\n  __MODULE_DEPENDENCIES__: __MODULE_DEPENDENCIES__,\n  __LOCAL_DEPENDENCIES__: __LOCAL_DEPENDENCIES__,\n  __SOURCE_PREFIX__: __SOURCE_PREFIX__,\n  __IDS_TO_FRAMEWORKS__: __IDS_TO_FRAMEWORKS__\n});\n;\n;\nexport var DecimalField = addSourceDecorator(addSourceDecorator(addSourceDecorator(function () {\n  return React.createElement(ThemeWrapper, null, React.createElement(Box, {\n    p: '1em'\n  }, React.createElement(NumberInput, {\n    id: 'someId',\n    name: 'someName',\n    className: 'someClassName',\n    label: text('label', 'Number Input'),\n    labelColor: text('labelColor', 'text.inputLabel.default'),\n    placeholder: text('placeholder', 'Enter number here...'),\n    maxLength: number('maxLength', 10),\n    error: _boolean('error', false),\n    errorMessage: text('errorMessage', ''),\n    required: _boolean('required', false),\n    fullWidth: _boolean('fullWidth', false),\n    onChange: action('Triggered: onChange'),\n    allowDecimal: _boolean('allowDecimal', true),\n    roundingoffDigit: number('roundingoffDigit', 3)\n  })));\n}, {\n  __STORY__: __STORY__,\n  __ADDS_MAP__: __ADDS_MAP__,\n  __MAIN_FILE_LOCATION__: __MAIN_FILE_LOCATION__,\n  __MODULE_DEPENDENCIES__: __MODULE_DEPENDENCIES__,\n  __LOCAL_DEPENDENCIES__: __LOCAL_DEPENDENCIES__,\n  __SOURCE_PREFIX__: __SOURCE_PREFIX__,\n  __IDS_TO_FRAMEWORKS__: __IDS_TO_FRAMEWORKS__\n}), {\n  __STORY__: __STORY__,\n  __ADDS_MAP__: __ADDS_MAP__,\n  __MAIN_FILE_LOCATION__: __MAIN_FILE_LOCATION__,\n  __MODULE_DEPENDENCIES__: __MODULE_DEPENDENCIES__,\n  __LOCAL_DEPENDENCIES__: __LOCAL_DEPENDENCIES__,\n  __SOURCE_PREFIX__: __SOURCE_PREFIX__,\n  __IDS_TO_FRAMEWORKS__: __IDS_TO_FRAMEWORKS__\n}), {\n  __STORY__: __STORY__,\n  __ADDS_MAP__: __ADDS_MAP__,\n  __MAIN_FILE_LOCATION__: __MAIN_FILE_LOCATION__,\n  __MODULE_DEPENDENCIES__: __MODULE_DEPENDENCIES__,\n  __LOCAL_DEPENDENCIES__: __LOCAL_DEPENDENCIES__,\n  __SOURCE_PREFIX__: __SOURCE_PREFIX__,\n  __IDS_TO_FRAMEWORKS__: __IDS_TO_FRAMEWORKS__\n});\n;\n;\nexport var RequiredField = addSourceDecorator(addSourceDecorator(addSourceDecorator(function () {\n  return React.createElement(ThemeWrapper, null, React.createElement(Box, {\n    p: '1em'\n  }, React.createElement(NumberInput, {\n    id: 'someId',\n    name: 'someName',\n    className: 'someClassName',\n    label: text('label', 'Number Input'),\n    labelColor: text('labelColor', 'text.inputLabel.default'),\n    placeholder: text('placeholder', 'Enter number here...'),\n    maxLength: number('maxLength', 10),\n    error: _boolean('error', false),\n    errorMessage: text('errorMessage', ''),\n    required: _boolean('required', true),\n    fullWidth: _boolean('fullWidth', false),\n    onChange: action('Triggered: onChange')\n  })));\n}, {\n  __STORY__: __STORY__,\n  __ADDS_MAP__: __ADDS_MAP__,\n  __MAIN_FILE_LOCATION__: __MAIN_FILE_LOCATION__,\n  __MODULE_DEPENDENCIES__: __MODULE_DEPENDENCIES__,\n  __LOCAL_DEPENDENCIES__: __LOCAL_DEPENDENCIES__,\n  __SOURCE_PREFIX__: __SOURCE_PREFIX__,\n  __IDS_TO_FRAMEWORKS__: __IDS_TO_FRAMEWORKS__\n}), {\n  __STORY__: __STORY__,\n  __ADDS_MAP__: __ADDS_MAP__,\n  __MAIN_FILE_LOCATION__: __MAIN_FILE_LOCATION__,\n  __MODULE_DEPENDENCIES__: __MODULE_DEPENDENCIES__,\n  __LOCAL_DEPENDENCIES__: __LOCAL_DEPENDENCIES__,\n  __SOURCE_PREFIX__: __SOURCE_PREFIX__,\n  __IDS_TO_FRAMEWORKS__: __IDS_TO_FRAMEWORKS__\n}), {\n  __STORY__: __STORY__,\n  __ADDS_MAP__: __ADDS_MAP__,\n  __MAIN_FILE_LOCATION__: __MAIN_FILE_LOCATION__,\n  __MODULE_DEPENDENCIES__: __MODULE_DEPENDENCIES__,\n  __LOCAL_DEPENDENCIES__: __LOCAL_DEPENDENCIES__,\n  __SOURCE_PREFIX__: __SOURCE_PREFIX__,\n  __IDS_TO_FRAMEWORKS__: __IDS_TO_FRAMEWORKS__\n});\n;\n;\nexport var ErrorField = addSourceDecorator(addSourceDecorator(addSourceDecorator(function () {\n  return React.createElement(ThemeWrapper, null, React.createElement(Box, {\n    p: '1em'\n  }, React.createElement(NumberInput, {\n    id: 'someId',\n    name: 'someName',\n    className: 'someClassName',\n    label: text('label', 'Number Input'),\n    labelColor: text('labelColor', 'text.inputLabel.default'),\n    placeholder: text('placeholder', 'Enter number here...'),\n    maxLength: number('maxLength', 10),\n    error: _boolean('error', true),\n    errorMessage: text('errorMessage', 'Some Field Error'),\n    required: _boolean('required', false),\n    fullWidth: _boolean('fullWidth', true),\n    onChange: action('Triggered: onChange')\n  })));\n}, {\n  __STORY__: __STORY__,\n  __ADDS_MAP__: __ADDS_MAP__,\n  __MAIN_FILE_LOCATION__: __MAIN_FILE_LOCATION__,\n  __MODULE_DEPENDENCIES__: __MODULE_DEPENDENCIES__,\n  __LOCAL_DEPENDENCIES__: __LOCAL_DEPENDENCIES__,\n  __SOURCE_PREFIX__: __SOURCE_PREFIX__,\n  __IDS_TO_FRAMEWORKS__: __IDS_TO_FRAMEWORKS__\n}), {\n  __STORY__: __STORY__,\n  __ADDS_MAP__: __ADDS_MAP__,\n  __MAIN_FILE_LOCATION__: __MAIN_FILE_LOCATION__,\n  __MODULE_DEPENDENCIES__: __MODULE_DEPENDENCIES__,\n  __LOCAL_DEPENDENCIES__: __LOCAL_DEPENDENCIES__,\n  __SOURCE_PREFIX__: __SOURCE_PREFIX__,\n  __IDS_TO_FRAMEWORKS__: __IDS_TO_FRAMEWORKS__\n}), {\n  __STORY__: __STORY__,\n  __ADDS_MAP__: __ADDS_MAP__,\n  __MAIN_FILE_LOCATION__: __MAIN_FILE_LOCATION__,\n  __MODULE_DEPENDENCIES__: __MODULE_DEPENDENCIES__,\n  __LOCAL_DEPENDENCIES__: __LOCAL_DEPENDENCIES__,\n  __SOURCE_PREFIX__: __SOURCE_PREFIX__,\n  __IDS_TO_FRAMEWORKS__: __IDS_TO_FRAMEWORKS__\n});\n;\n;\nexport var WithOutBorder = addSourceDecorator(addSourceDecorator(addSourceDecorator(function () {\n  return React.createElement(ThemeWrapper, null, React.createElement(Box, {\n    bgColor: 'grey.100',\n    p: '2em'\n  }, React.createElement(NumberInput, {\n    id: 'someId',\n    name: 'someName',\n    className: 'someClassName',\n    maxLength: number('maxLength', 10),\n    error: _boolean('error', false),\n    onChange: action('Triggered: onChange'),\n    variant: 'inline-edit'\n  })));\n}, {\n  __STORY__: __STORY__,\n  __ADDS_MAP__: __ADDS_MAP__,\n  __MAIN_FILE_LOCATION__: __MAIN_FILE_LOCATION__,\n  __MODULE_DEPENDENCIES__: __MODULE_DEPENDENCIES__,\n  __LOCAL_DEPENDENCIES__: __LOCAL_DEPENDENCIES__,\n  __SOURCE_PREFIX__: __SOURCE_PREFIX__,\n  __IDS_TO_FRAMEWORKS__: __IDS_TO_FRAMEWORKS__\n}), {\n  __STORY__: __STORY__,\n  __ADDS_MAP__: __ADDS_MAP__,\n  __MAIN_FILE_LOCATION__: __MAIN_FILE_LOCATION__,\n  __MODULE_DEPENDENCIES__: __MODULE_DEPENDENCIES__,\n  __LOCAL_DEPENDENCIES__: __LOCAL_DEPENDENCIES__,\n  __SOURCE_PREFIX__: __SOURCE_PREFIX__,\n  __IDS_TO_FRAMEWORKS__: __IDS_TO_FRAMEWORKS__\n}), {\n  __STORY__: __STORY__,\n  __ADDS_MAP__: __ADDS_MAP__,\n  __MAIN_FILE_LOCATION__: __MAIN_FILE_LOCATION__,\n  __MODULE_DEPENDENCIES__: __MODULE_DEPENDENCIES__,\n  __LOCAL_DEPENDENCIES__: __LOCAL_DEPENDENCIES__,\n  __SOURCE_PREFIX__: __SOURCE_PREFIX__,\n  __IDS_TO_FRAMEWORKS__: __IDS_TO_FRAMEWORKS__\n});","map":{"version":3,"sources":["/Users/farhanansari/Code/ui-library/node_modules/react-docgen-typescript-loader/dist/index.js!/Users/farhanansari/Code/ui-library/node_modules/eslint-loader/dist/cjs.js??ref--6-0!/Users/farhanansari/Code/ui-library/node_modules/@storybook/source-loader/dist/server/index.js??ref--11!/Users/farhanansari/Code/ui-library/node_modules/@storybook/source-loader/dist/server/index.js!/Users/farhanansari/Code/ui-library/node_modules/@storybook/source-loader/dist/server/index.js!/Users/farhanansari/Code/ui-library/src/components/molecules/NumberInput/NumberInput.stories.tsx"],"names":[],"mappings":";;;;AACA;AACA;AACA;AACA,IAAI,gBAAgB,GAAG,OAAO,CAAC,kCAAD,CAAP,CAA4C,UAAnE,C,CACA;;;AACA,IAAI,kBAAkB,GAAG,OAAO,CAAC,kCAAD,CAAP,CAA4C,SAArE,C,CACA;;;AACA,IAAI,iBAAiB,GAAG,0EAAxB,C,CACA;;AACA,IAAI,SAAS,GAAG,i9hDAAhB,C,CACA;;AACA,IAAI,YAAY,GAAG,EAAnB,C,CACA;;AACA,IAAI,sBAAsB,GAAG,0BAA7B,C,CACA;;AACA,IAAI,uBAAuB,GAAG,EAA9B,C,CACA;;AACA,IAAI,sBAAsB,GAAG,EAA7B,C,CACA;;AACA,IAAI,qBAAqB,GAAG,EAA5B;AAGA;AACA;AACA;;AACA,IAAI,gBAAgB,GAAG,OAAO,CAAC,kCAAD,CAAP,CAA4C,UAAnE,C,CACA;;;AACA,IAAI,kBAAkB,GAAG,OAAO,CAAC,kCAAD,CAAP,CAA4C,SAArE,C,CACA;;;AACA,IAAI,iBAAiB,GAAG,0EAAxB,C,CACA;;AACA,IAAI,SAAS,GAAG,8yeAAhB,C,CACA;;AACA,IAAI,YAAY,GAAG,EAAnB,C,CACA;;AACA,IAAI,sBAAsB,GAAG,0BAA7B,C,CACA;;AACA,IAAI,uBAAuB,GAAG,EAA9B,C,CACA;;AACA,IAAI,sBAAsB,GAAG,EAA7B,C,CACA;;AACA,IAAI,qBAAqB,GAAG,EAA5B;AAGA;AACA;AACA;;AACA,IAAI,gBAAgB,GAAG,OAAO,CAAC,kCAAD,CAAP,CAA4C,UAAnE,C,CACA;;;AACA,IAAI,kBAAkB,GAAG,OAAO,CAAC,kCAAD,CAAP,CAA4C,SAArE,C,CACA;;;AACA,IAAI,iBAAiB,GAAG,0EAAxB,C,CACA;;AACA,IAAI,SAAS,GAAG,i+IAAhB,C,CACA;;AACA,IAAI,YAAY,GAAG,EAAnB,C,CACA;;AACA,IAAI,sBAAsB,GAAG,0BAA7B,C,CACA;;AACA,IAAI,uBAAuB,GAAG,EAA9B,C,CACA;;AACA,IAAI,sBAAsB,GAAG,EAA7B,C,CACA;;AACA,IAAI,qBAAqB,GAAG,EAA5B;AAEA,OAAO,KAAP,MAAkB,OAAlB;AACA,OAAO,WAAP,MAAwB,GAAxB;AACA,OAAO,GAAP,MAAgB,iBAAhB;AACA,SAAS,IAAT,QAAqB,IAArB;AAEA,SAAS,MAAT,QAAuB,0BAAvB;AACA,SAAS,OAAO,IAAP,QAAT,EAAkB,MAAlB,EAA0B,IAA1B,QAAsC,wBAAtC;AACA,OAAO,YAAP,MAAyB,4CAAzB;AAEA,eAAe;AAAC,EAAA,UAAU;AAAG,mBAAc;AAAC,gBAAS,i9hDAAV;AAA49hD,sBAAe;AAA3+hD;AAAjB,iDAA8giD;AAAC,cAAS,8yeAAV;AAAyze,oBAAe;AAAx0e,GAA9giD,+CAAw2gE;AAAC,cAAS,i+IAAV;AAA4+I,oBAAe;AAA3/I,GAAx2gE,eAAX;AACb,EAAA,KAAK,EAAK,IAAI,GAAA,cADD;AAEb,EAAA,SAAS,EAAE;AAFE,CAAf;AAKA,OAAO,IAAM,YAAY,GAAG,kBAAkB,CAAC,kBAAkB,CAAC,kBAAkB,CAAC,YAAA;AAAM,SACzF,KAAA,CAAA,aAAA,CAAC,YAAD,EAAa,IAAb,EACE,KAAA,CAAA,aAAA,CAAC,GAAD,EAAI;AAAC,IAAA,CAAC,EAAC;AAAH,GAAJ,EACE,KAAA,CAAA,aAAA,CAAC,WAAD,EAAY;AACV,IAAA,EAAE,EAAC,QADO;AAEV,IAAA,IAAI,EAAC,UAFK;AAGV,IAAA,SAAS,EAAC,eAHA;AAIV,IAAA,KAAK,EAAE,IAAI,CAAC,OAAD,EAAU,cAAV,CAJD;AAKV,IAAA,UAAU,EAAE,IAAI,CAAC,YAAD,EAAe,yBAAf,CALN;AAMV,IAAA,WAAW,EAAE,IAAI,CAAC,aAAD,EAAgB,sBAAhB,CANP;AAOV,IAAA,SAAS,EAAE,MAAM,CAAC,WAAD,EAAc,EAAd,CAPP;AAQV,IAAA,KAAK,EAAE,QAAO,CAAC,OAAD,EAAU,KAAV,CARJ;AASV,IAAA,YAAY,EAAE,IAAI,CAAC,cAAD,EAAiB,EAAjB,CATR;AAUV,IAAA,QAAQ,EAAE,QAAO,CAAC,UAAD,EAAa,KAAb,CAVP;AAWV,IAAA,SAAS,EAAE,QAAO,CAAC,WAAD,EAAc,KAAd,CAXR;AAYV,IAAA,QAAQ,EAAE,MAAM,CAAC,qBAAD,CAZN;AAaV,IAAA,YAAY,EAAE,QAAO,CAAC,cAAD,EAAiB,KAAjB,CAbX;AAcV,IAAA,gBAAgB,EAAE,MAAM,CAAC,kBAAD,EAjB2D,CAiB3D;AAdd,GAAZ,CADF,CADF,CADyF;AAqB1F,CArBmF,EAqBjF;AAAC,EAAA,SAAS,EAAA,SAAV;AAAY,EAAA,YAAY,EAAA,YAAxB;AAAyB,EAAA,sBAAsB,EAAA,sBAA/C;AAAgD,EAAA,uBAAuB,EAAA,uBAAvE;AAAwE,EAAA,sBAAsB,EAAA,sBAA9F;AAA+F,EAAA,iBAAiB,EAAA,iBAAhH;AAAiH,EAAA,qBAAqB,EAAA;AAAtI,CArBiF,CAAnB,EAqB4E;AAAC,EAAA,SAAS,EAAA,SAAV;AAAY,EAAA,YAAY,EAAA,YAAxB;AAAyB,EAAA,sBAAsB,EAAA,sBAA/C;AAAgD,EAAA,uBAAuB,EAAA,uBAAvE;AAAwE,EAAA,sBAAsB,EAAA,sBAA9F;AAA+F,EAAA,iBAAiB,EAAA,iBAAhH;AAAiH,EAAA,qBAAqB,EAAA;AAAtI,CArB5E,CAAnB,EAqByO;AAAC,EAAA,SAAS,EAAA,SAAV;AAAY,EAAA,YAAY,EAAA,YAAxB;AAAyB,EAAA,sBAAsB,EAAA,sBAA/C;AAAgD,EAAA,uBAAuB,EAAA,uBAAvE;AAAwE,EAAA,sBAAsB,EAAA,sBAA9F;AAA+F,EAAA,iBAAiB,EAAA,iBAAhH;AAAiH,EAAA,qBAAqB,EAAA;AAAtI,CArBzO,CAAvC;AAqByZ;AAAC;AAEja,OAAO,IAAM,4BAA4B,GAAG,kBAAkB,CAAC,kBAAkB,CAAC,kBAAkB,CAAC,YAAA;AAAM,SACzG,KAAA,CAAA,aAAA,CAAC,YAAD,EAAa,IAAb,EACE,KAAA,CAAA,aAAA,CAAC,GAAD,EAAI;AAAC,IAAA,CAAC,EAAC;AAAH,GAAJ,EACE,KAAA,CAAA,aAAA,CAAC,WAAD,EAAY;AACV,IAAA,EAAE,EAAC,QADO;AAEV,IAAA,IAAI,EAAC,UAFK;AAGV,IAAA,SAAS,EAAC,eAHA;AAIV,IAAA,KAAK,EAAE,IAAI,CAAC,OAAD,EAAU,cAAV,CAJD;AAKV,IAAA,UAAU,EAAE,IAAI,CAAC,YAAD,EAAe,yBAAf,CALN;AAMV,IAAA,WAAW,EAAE,IAAI,CAAC,aAAD,EAAgB,sBAAhB,CANP;AAOV,IAAA,YAAY,EAAE,MAAM,CAAC,cAAD,EAAiB,EAAjB,CAPV;AAQV,IAAA,SAAS,EAAE,MAAM,CAAC,WAAD,EAAc,EAAd,CARP;AASV,IAAA,KAAK,EAAE,QAAO,CAAC,OAAD,EAAU,KAAV,CATJ;AAUV,IAAA,YAAY,EAAE,IAAI,CAAC,cAAD,EAAiB,EAAjB,CAVR;AAWV,IAAA,QAAQ,EAAE,QAAO,CAAC,UAAD,EAAa,KAAb,CAXP;AAYV,IAAA,SAAS,EAAE,QAAO,CAAC,WAAD,EAAc,KAAd,CAZR;AAaV,IAAA,QAAQ,EAAE,MAAM,CAAC,qBAAD,CAbN;AAcV,IAAA,YAAY,EAAE,QAAO,CAAC,cAAD,EAjB8E,KAiB9E;AAdX,GAAZ,CADF,CADF,CADyG;AAqB1G,CArBmG,EAqBjG;AAAC,EAAA,SAAS,EAAA,SAAV;AAAY,EAAA,YAAY,EAAA,YAAxB;AAAyB,EAAA,sBAAsB,EAAA,sBAA/C;AAAgD,EAAA,uBAAuB,EAAA,uBAAvE;AAAwE,EAAA,sBAAsB,EAAA,sBAA9F;AAA+F,EAAA,iBAAiB,EAAA,iBAAhH;AAAiH,EAAA,qBAAqB,EAAA;AAAtI,CArBiG,CAAnB,EAqB4D;AAAC,EAAA,SAAS,EAAA,SAAV;AAAY,EAAA,YAAY,EAAA,YAAxB;AAAyB,EAAA,sBAAsB,EAAA,sBAA/C;AAAgD,EAAA,uBAAuB,EAAA,uBAAvE;AAAwE,EAAA,sBAAsB,EAAA,sBAA9F;AAA+F,EAAA,iBAAiB,EAAA,iBAAhH;AAAiH,EAAA,qBAAqB,EAAA;AAAtI,CArB5D,CAAnB,EAqByN;AAAC,EAAA,SAAS,EAAA,SAAV;AAAY,EAAA,YAAY,EAAA,YAAxB;AAAyB,EAAA,sBAAsB,EAAA,sBAA/C;AAAgD,EAAA,uBAAuB,EAAA,uBAAvE;AAAwE,EAAA,sBAAsB,EAAA,sBAA9F;AAA+F,EAAA,iBAAiB,EAAA,iBAAhH;AAAiH,EAAA,qBAAqB,EAAA;AAAtI,CArBzN,CAAvD;AAqByZ;AAAC;AAEja,OAAO,IAAM,YAAY,GAAG,kBAAkB,CAAC,kBAAkB,CAAC,kBAAkB,CAAC,YAAA;AAAM,SACzF,KAAA,CAAA,aAAA,CAAC,YAAD,EAAa,IAAb,EACE,KAAA,CAAA,aAAA,CAAC,GAAD,EAAI;AAAC,IAAA,CAAC,EAAC;AAAH,GAAJ,EACE,KAAA,CAAA,aAAA,CAAC,WAAD,EAAY;AACV,IAAA,EAAE,EAAC,QADO;AAEV,IAAA,IAAI,EAAC,UAFK;AAGV,IAAA,SAAS,EAAC,eAHA;AAIV,IAAA,KAAK,EAAE,IAAI,CAAC,OAAD,EAAU,cAAV,CAJD;AAKV,IAAA,UAAU,EAAE,IAAI,CAAC,YAAD,EAAe,yBAAf,CALN;AAMV,IAAA,WAAW,EAAE,IAAI,CAAC,aAAD,EAAgB,sBAAhB,CANP;AAOV,IAAA,SAAS,EAAE,MAAM,CAAC,WAAD,EAAc,EAAd,CAPP;AAQV,IAAA,KAAK,EAAE,QAAO,CAAC,OAAD,EAAU,KAAV,CARJ;AASV,IAAA,YAAY,EAAE,IAAI,CAAC,cAAD,EAAiB,EAAjB,CATR;AAUV,IAAA,QAAQ,EAAE,QAAO,CAAC,UAAD,EAAa,KAAb,CAVP;AAWV,IAAA,SAAS,EAAE,QAAO,CAAC,WAAD,EAAc,KAAd,CAXR;AAYV,IAAA,QAAQ,EAAE,MAAM,CAAC,qBAAD,CAZN;AAaV,IAAA,YAAY,EAAE,QAAO,CAAC,cAAD,EAAiB,IAAjB,CAbX;AAcV,IAAA,gBAAgB,EAAE,MAAM,CAAC,kBAAD,EAjB2D,CAiB3D;AAdd,GAAZ,CADF,CADF,CADyF;AAqB1F,CArBmF,EAqBjF;AAAC,EAAA,SAAS,EAAA,SAAV;AAAY,EAAA,YAAY,EAAA,YAAxB;AAAyB,EAAA,sBAAsB,EAAA,sBAA/C;AAAgD,EAAA,uBAAuB,EAAA,uBAAvE;AAAwE,EAAA,sBAAsB,EAAA,sBAA9F;AAA+F,EAAA,iBAAiB,EAAA,iBAAhH;AAAiH,EAAA,qBAAqB,EAAA;AAAtI,CArBiF,CAAnB,EAqB4E;AAAC,EAAA,SAAS,EAAA,SAAV;AAAY,EAAA,YAAY,EAAA,YAAxB;AAAyB,EAAA,sBAAsB,EAAA,sBAA/C;AAAgD,EAAA,uBAAuB,EAAA,uBAAvE;AAAwE,EAAA,sBAAsB,EAAA,sBAA9F;AAA+F,EAAA,iBAAiB,EAAA,iBAAhH;AAAiH,EAAA,qBAAqB,EAAA;AAAtI,CArB5E,CAAnB,EAqByO;AAAC,EAAA,SAAS,EAAA,SAAV;AAAY,EAAA,YAAY,EAAA,YAAxB;AAAyB,EAAA,sBAAsB,EAAA,sBAA/C;AAAgD,EAAA,uBAAuB,EAAA,uBAAvE;AAAwE,EAAA,sBAAsB,EAAA,sBAA9F;AAA+F,EAAA,iBAAiB,EAAA,iBAAhH;AAAiH,EAAA,qBAAqB,EAAA;AAAtI,CArBzO,CAAvC;AAqByZ;AAAC;AAEja,OAAO,IAAM,aAAa,GAAG,kBAAkB,CAAC,kBAAkB,CAAC,kBAAkB,CAAC,YAAA;AAAM,SAC1F,KAAA,CAAA,aAAA,CAAC,YAAD,EAAa,IAAb,EACE,KAAA,CAAA,aAAA,CAAC,GAAD,EAAI;AAAC,IAAA,CAAC,EAAC;AAAH,GAAJ,EACE,KAAA,CAAA,aAAA,CAAC,WAAD,EAAY;AACV,IAAA,EAAE,EAAC,QADO;AAEV,IAAA,IAAI,EAAC,UAFK;AAGV,IAAA,SAAS,EAAC,eAHA;AAIV,IAAA,KAAK,EAAE,IAAI,CAAC,OAAD,EAAU,cAAV,CAJD;AAKV,IAAA,UAAU,EAAE,IAAI,CAAC,YAAD,EAAe,yBAAf,CALN;AAMV,IAAA,WAAW,EAAE,IAAI,CAAC,aAAD,EAAgB,sBAAhB,CANP;AAOV,IAAA,SAAS,EAAE,MAAM,CAAC,WAAD,EAAc,EAAd,CAPP;AAQV,IAAA,KAAK,EAAE,QAAO,CAAC,OAAD,EAAU,KAAV,CARJ;AASV,IAAA,YAAY,EAAE,IAAI,CAAC,cAAD,EAAiB,EAAjB,CATR;AAUV,IAAA,QAAQ,EAAE,QAAO,CAAC,UAAD,EAAa,IAAb,CAVP;AAWV,IAAA,SAAS,EAAE,QAAO,CAAC,WAAD,EAAc,KAAd,CAXR;AAYV,IAAA,QAAQ,EAAE,MAAM,CAfoE,qBAepE;AAZN,GAAZ,CADF,CADF,CAD0F;AAmB3F,CAnBoF,EAmBlF;AAAC,EAAA,SAAS,EAAA,SAAV;AAAY,EAAA,YAAY,EAAA,YAAxB;AAAyB,EAAA,sBAAsB,EAAA,sBAA/C;AAAgD,EAAA,uBAAuB,EAAA,uBAAvE;AAAwE,EAAA,sBAAsB,EAAA,sBAA9F;AAA+F,EAAA,iBAAiB,EAAA,iBAAhH;AAAiH,EAAA,qBAAqB,EAAA;AAAtI,CAnBkF,CAAnB,EAmB2E;AAAC,EAAA,SAAS,EAAA,SAAV;AAAY,EAAA,YAAY,EAAA,YAAxB;AAAyB,EAAA,sBAAsB,EAAA,sBAA/C;AAAgD,EAAA,uBAAuB,EAAA,uBAAvE;AAAwE,EAAA,sBAAsB,EAAA,sBAA9F;AAA+F,EAAA,iBAAiB,EAAA,iBAAhH;AAAiH,EAAA,qBAAqB,EAAA;AAAtI,CAnB3E,CAAnB,EAmBwO;AAAC,EAAA,SAAS,EAAA,SAAV;AAAY,EAAA,YAAY,EAAA,YAAxB;AAAyB,EAAA,sBAAsB,EAAA,sBAA/C;AAAgD,EAAA,uBAAuB,EAAA,uBAAvE;AAAwE,EAAA,sBAAsB,EAAA,sBAA9F;AAA+F,EAAA,iBAAiB,EAAA,iBAAhH;AAAiH,EAAA,qBAAqB,EAAA;AAAtI,CAnBxO,CAAxC;AAmByZ;AAAC;AAEja,OAAO,IAAM,UAAU,GAAG,kBAAkB,CAAC,kBAAkB,CAAC,kBAAkB,CAAC,YAAA;AAAM,SACvF,KAAA,CAAA,aAAA,CAAC,YAAD,EAAa,IAAb,EACE,KAAA,CAAA,aAAA,CAAC,GAAD,EAAI;AAAC,IAAA,CAAC,EAAC;AAAH,GAAJ,EACE,KAAA,CAAA,aAAA,CAAC,WAAD,EAAY;AACV,IAAA,EAAE,EAAC,QADO;AAEV,IAAA,IAAI,EAAC,UAFK;AAGV,IAAA,SAAS,EAAC,eAHA;AAIV,IAAA,KAAK,EAAE,IAAI,CAAC,OAAD,EAAU,cAAV,CAJD;AAKV,IAAA,UAAU,EAAE,IAAI,CAAC,YAAD,EAAe,yBAAf,CALN;AAMV,IAAA,WAAW,EAAE,IAAI,CAAC,aAAD,EAAgB,sBAAhB,CANP;AAOV,IAAA,SAAS,EAAE,MAAM,CAAC,WAAD,EAAc,EAAd,CAPP;AAQV,IAAA,KAAK,EAAE,QAAO,CAAC,OAAD,EAAU,IAAV,CARJ;AASV,IAAA,YAAY,EAAE,IAAI,CAAC,cAAD,EAAiB,kBAAjB,CATR;AAUV,IAAA,QAAQ,EAAE,QAAO,CAAC,UAAD,EAAa,KAAb,CAVP;AAWV,IAAA,SAAS,EAAE,QAAO,CAAC,WAAD,EAAc,IAAd,CAXR;AAYV,IAAA,QAAQ,EAAE,MAAM,CAfiE,qBAejE;AAZN,GAAZ,CADF,CADF,CADuF;AAmBxF,CAnBiF,EAmB/E;AAAC,EAAA,SAAS,EAAA,SAAV;AAAY,EAAA,YAAY,EAAA,YAAxB;AAAyB,EAAA,sBAAsB,EAAA,sBAA/C;AAAgD,EAAA,uBAAuB,EAAA,uBAAvE;AAAwE,EAAA,sBAAsB,EAAA,sBAA9F;AAA+F,EAAA,iBAAiB,EAAA,iBAAhH;AAAiH,EAAA,qBAAqB,EAAA;AAAtI,CAnB+E,CAAnB,EAmB8E;AAAC,EAAA,SAAS,EAAA,SAAV;AAAY,EAAA,YAAY,EAAA,YAAxB;AAAyB,EAAA,sBAAsB,EAAA,sBAA/C;AAAgD,EAAA,uBAAuB,EAAA,uBAAvE;AAAwE,EAAA,sBAAsB,EAAA,sBAA9F;AAA+F,EAAA,iBAAiB,EAAA,iBAAhH;AAAiH,EAAA,qBAAqB,EAAA;AAAtI,CAnB9E,CAAnB,EAmB2O;AAAC,EAAA,SAAS,EAAA,SAAV;AAAY,EAAA,YAAY,EAAA,YAAxB;AAAyB,EAAA,sBAAsB,EAAA,sBAA/C;AAAgD,EAAA,uBAAuB,EAAA,uBAAvE;AAAwE,EAAA,sBAAsB,EAAA,sBAA9F;AAA+F,EAAA,iBAAiB,EAAA,iBAAhH;AAAiH,EAAA,qBAAqB,EAAA;AAAtI,CAnB3O,CAArC;AAmByZ;AAAC;AAEja,OAAO,IAAM,aAAa,GAAG,kBAAkB,CAAC,kBAAkB,CAAC,kBAAkB,CAAC,YAAA;AAAM,SAC1F,KAAA,CAAA,aAAA,CAAC,YAAD,EAAa,IAAb,EACE,KAAA,CAAA,aAAA,CAAC,GAAD,EAAI;AAAC,IAAA,OAAO,EAAC,UAAT;AAAoB,IAAA,CAAC,EAAC;AAAtB,GAAJ,EACE,KAAA,CAAA,aAAA,CAAC,WAAD,EAAY;AACV,IAAA,EAAE,EAAC,QADO;AAEV,IAAA,IAAI,EAAC,UAFK;AAGV,IAAA,SAAS,EAAC,eAHA;AAIV,IAAA,SAAS,EAAE,MAAM,CAAC,WAAD,EAAc,EAAd,CAJP;AAKV,IAAA,KAAK,EAAE,QAAO,CAAC,OAAD,EAAU,KAAV,CALJ;AAMV,IAAA,QAAQ,EAAE,MAAM,CAAC,qBAAD,CANN;AAOV,IAAA,OAAO,EAV6E;AAG1E,GAAZ,CADF,CADF,CAD0F;AAc3F,CAdoF,EAclF;AAAC,EAAA,SAAS,EAAA,SAAV;AAAY,EAAA,YAAY,EAAA,YAAxB;AAAyB,EAAA,sBAAsB,EAAA,sBAA/C;AAAgD,EAAA,uBAAuB,EAAA,uBAAvE;AAAwE,EAAA,sBAAsB,EAAA,sBAA9F;AAA+F,EAAA,iBAAiB,EAAA,iBAAhH;AAAiH,EAAA,qBAAqB,EAAA;AAAtI,CAdkF,CAAnB,EAc2E;AAAC,EAAA,SAAS,EAAA,SAAV;AAAY,EAAA,YAAY,EAAA,YAAxB;AAAyB,EAAA,sBAAsB,EAAA,sBAA/C;AAAgD,EAAA,uBAAuB,EAAA,uBAAvE;AAAwE,EAAA,sBAAsB,EAAA,sBAA9F;AAA+F,EAAA,iBAAiB,EAAA,iBAAhH;AAAiH,EAAA,qBAAqB,EAAA;AAAtI,CAd3E,CAAnB,EAcwO;AAAC,EAAA,SAAS,EAAA,SAAV;AAAY,EAAA,YAAY,EAAA,YAAxB;AAAyB,EAAA,sBAAsB,EAAA,sBAA/C;AAAgD,EAAA,uBAAuB,EAAA,uBAAvE;AAAwE,EAAA,sBAAsB,EAAA,sBAA9F;AAA+F,EAAA,iBAAiB,EAAA,iBAAhH;AAAiH,EAAA,qBAAqB,EAAA;AAAtI,CAdxO,CAAxC","sourcesContent":["\n/* eslint-disable */\n// @ts-nocheck\n// @ts-ignore\nvar withSourceLoader = require('@storybook/source-loader/preview').withSource;\n// @ts-ignore\nvar addSourceDecorator = require(\"@storybook/source-loader/preview\").addSource;\n// @ts-ignore\nvar __SOURCE_PREFIX__ = \"/Users/farhanansari/Code/ui-library/src/components/molecules/NumberInput\";\n// @ts-ignore\nvar __STORY__ = \"\\n\\n// @ts-nocheck\\n// @ts-ignore\\nvar withSourceLoader = require('@storybook/source-loader/preview').withSource;\\n// @ts-ignore\\nvar addSourceDecorator = require(\\\"@storybook/source-loader/preview\\\").addSource;\\n// @ts-ignore\\nvar __SOURCE_PREFIX__ = \\\"/Users/farhanansari/Code/ui-library/src/components/molecules/NumberInput\\\";\\n// @ts-ignore\\nvar __STORY__ = \\\"\\\\n\\\\n// @ts-nocheck\\\\n// @ts-ignore\\\\nvar withSourceLoader = require('@storybook/source-loader/preview').withSource;\\\\n// @ts-ignore\\\\nvar addSourceDecorator = require(\\\\\\\"@storybook/source-loader/preview\\\\\\\").addSource;\\\\n// @ts-ignore\\\\nvar __SOURCE_PREFIX__ = \\\\\\\"/Users/farhanansari/Code/ui-library/src/components/molecules/NumberInput\\\\\\\";\\\\n// @ts-ignore\\\\nvar __STORY__ = \\\\\\\"import React from 'react'\\\\\\\\nimport NumberInput from '.'\\\\\\\\nimport Box from '../../atoms/Box'\\\\\\\\nimport { path } from '..'\\\\\\\\n\\\\\\\\nimport { action } from '@storybook/addon-actions'\\\\\\\\nimport { boolean, number, text } from '@storybook/addon-knobs'\\\\\\\\nimport ThemeWrapper from '../../../utilities/components/ThemeWrapper'\\\\\\\\n\\\\\\\\nexport default {\\\\\\\\n  title: `${path}/NumberInput`,\\\\\\\\n  component: NumberInput\\\\\\\\n}\\\\\\\\n\\\\\\\\nexport const DefaultField = () => (\\\\\\\\n  <ThemeWrapper>\\\\\\\\n    <Box p='1em'>\\\\\\\\n      <NumberInput\\\\\\\\n        id='someId'\\\\\\\\n        name='someName'\\\\\\\\n        className='someClassName'\\\\\\\\n        label={text('label', 'Number Input')}\\\\\\\\n        labelColor={text('labelColor', 'text.inputLabel.default')}\\\\\\\\n        placeholder={text('placeholder', 'Enter number here...')}\\\\\\\\n        maxLength={number('maxLength', 10)}\\\\\\\\n        error={boolean('error', false)}\\\\\\\\n        errorMessage={text('errorMessage', '')}\\\\\\\\n        required={boolean('required', false)}\\\\\\\\n        fullWidth={boolean('fullWidth', false)}\\\\\\\\n        onChange={action('Triggered: onChange')}\\\\\\\\n        allowDecimal={boolean('allowDecimal', false)}\\\\\\\\n        roundingoffDigit={number('roundingoffDigit', 3)}\\\\\\\\n      />\\\\\\\\n    </Box>\\\\\\\\n  </ThemeWrapper>\\\\\\\\n)\\\\\\\\n\\\\\\\\nexport const DefaultFieldWithInitialValue = () => (\\\\\\\\n  <ThemeWrapper>\\\\\\\\n    <Box p='1em'>\\\\\\\\n      <NumberInput\\\\\\\\n        id='someId'\\\\\\\\n        name='someName'\\\\\\\\n        className='someClassName'\\\\\\\\n        label={text('label', 'Number Input')}\\\\\\\\n        labelColor={text('labelColor', 'text.inputLabel.default')}\\\\\\\\n        placeholder={text('placeholder', 'Enter number here...')}\\\\\\\\n        initialValue={number('initialValue', 25)}\\\\\\\\n        maxLength={number('maxLength', 10)}\\\\\\\\n        error={boolean('error', false)}\\\\\\\\n        errorMessage={text('errorMessage', '')}\\\\\\\\n        required={boolean('required', false)}\\\\\\\\n        fullWidth={boolean('fullWidth', false)}\\\\\\\\n        onChange={action('Triggered: onChange')}\\\\\\\\n        allowDecimal={boolean('allowDecimal', false)}\\\\\\\\n      />\\\\\\\\n    </Box>\\\\\\\\n  </ThemeWrapper>\\\\\\\\n)\\\\\\\\n\\\\\\\\nexport const DecimalField = () => (\\\\\\\\n  <ThemeWrapper>\\\\\\\\n    <Box p='1em'>\\\\\\\\n      <NumberInput\\\\\\\\n        id='someId'\\\\\\\\n        name='someName'\\\\\\\\n        className='someClassName'\\\\\\\\n        label={text('label', 'Number Input')}\\\\\\\\n        labelColor={text('labelColor', 'text.inputLabel.default')}\\\\\\\\n        placeholder={text('placeholder', 'Enter number here...')}\\\\\\\\n        maxLength={number('maxLength', 10)}\\\\\\\\n        error={boolean('error', false)}\\\\\\\\n        errorMessage={text('errorMessage', '')}\\\\\\\\n        required={boolean('required', false)}\\\\\\\\n        fullWidth={boolean('fullWidth', false)}\\\\\\\\n        onChange={action('Triggered: onChange')}\\\\\\\\n        allowDecimal={boolean('allowDecimal', true)}\\\\\\\\n        roundingoffDigit={number('roundingoffDigit', 3)}\\\\\\\\n      />\\\\\\\\n    </Box>\\\\\\\\n  </ThemeWrapper>\\\\\\\\n)\\\\\\\\n\\\\\\\\nexport const RequiredField = () => (\\\\\\\\n  <ThemeWrapper>\\\\\\\\n    <Box p='1em'>\\\\\\\\n      <NumberInput\\\\\\\\n        id='someId'\\\\\\\\n        name='someName'\\\\\\\\n        className='someClassName'\\\\\\\\n        label={text('label', 'Number Input')}\\\\\\\\n        labelColor={text('labelColor', 'text.inputLabel.default')}\\\\\\\\n        placeholder={text('placeholder', 'Enter number here...')}\\\\\\\\n        maxLength={number('maxLength', 10)}\\\\\\\\n        error={boolean('error', false)}\\\\\\\\n        errorMessage={text('errorMessage', '')}\\\\\\\\n        required={boolean('required', true)}\\\\\\\\n        fullWidth={boolean('fullWidth', false)}\\\\\\\\n        onChange={action('Triggered: onChange')}\\\\\\\\n      />\\\\\\\\n    </Box>\\\\\\\\n  </ThemeWrapper>\\\\\\\\n)\\\\\\\\n\\\\\\\\nexport const ErrorField = () => (\\\\\\\\n  <ThemeWrapper>\\\\\\\\n    <Box p='1em'>\\\\\\\\n      <NumberInput\\\\\\\\n        id='someId'\\\\\\\\n        name='someName'\\\\\\\\n        className='someClassName'\\\\\\\\n        label={text('label', 'Number Input')}\\\\\\\\n        labelColor={text('labelColor', 'text.inputLabel.default')}\\\\\\\\n        placeholder={text('placeholder', 'Enter number here...')}\\\\\\\\n        maxLength={number('maxLength', 10)}\\\\\\\\n        error={boolean('error', true)}\\\\\\\\n        errorMessage={text('errorMessage', 'Some Field Error')}\\\\\\\\n        required={boolean('required', false)}\\\\\\\\n        fullWidth={boolean('fullWidth', true)}\\\\\\\\n        onChange={action('Triggered: onChange')}\\\\\\\\n      />\\\\\\\\n    </Box>\\\\\\\\n  </ThemeWrapper>\\\\\\\\n)\\\\\\\\n\\\\\\\\nexport const WithOutBorder = () => (\\\\\\\\n  <ThemeWrapper>\\\\\\\\n    <Box bgColor='grey.100' p='2em'>\\\\\\\\n      <NumberInput\\\\\\\\n        id='someId'\\\\\\\\n        name='someName'\\\\\\\\n        className='someClassName'\\\\\\\\n        maxLength={number('maxLength', 10)}\\\\\\\\n        error={boolean('error', false)}\\\\\\\\n        onChange={action('Triggered: onChange')}\\\\\\\\n        variant='inline-edit'\\\\\\\\n      />\\\\\\\\n    </Box>\\\\\\\\n  </ThemeWrapper>\\\\\\\\n)\\\\\\\\n\\\\\\\";\\\\n// @ts-ignore\\\\nvar __ADDS_MAP__ = {};\\\\n// @ts-ignore\\\\nvar __MAIN_FILE_LOCATION__ = \\\\\\\"/NumberInput.stories.tsx\\\\\\\";\\\\n// @ts-ignore\\\\nvar __MODULE_DEPENDENCIES__ = [];\\\\n// @ts-ignore\\\\nvar __LOCAL_DEPENDENCIES__ = {};\\\\n// @ts-ignore\\\\nvar __IDS_TO_FRAMEWORKS__ = {};\\\\n        \\\\nimport React from 'react'\\\\nimport NumberInput from '.'\\\\nimport Box from '../../atoms/Box'\\\\nimport { path } from '..'\\\\n\\\\nimport { action } from '@storybook/addon-actions'\\\\nimport { boolean, number, text } from '@storybook/addon-knobs'\\\\nimport ThemeWrapper from '../../../utilities/components/ThemeWrapper'\\\\n\\\\nexport default {parameters: {\\\\\\\"storySource\\\\\\\":{\\\\\\\"source\\\\\\\":\\\\\\\"import React from 'react'\\\\\\\\nimport NumberInput from '.'\\\\\\\\nimport Box from '../../atoms/Box'\\\\\\\\nimport { path } from '..'\\\\\\\\n\\\\\\\\nimport { action } from '@storybook/addon-actions'\\\\\\\\nimport { boolean, number, text } from '@storybook/addon-knobs'\\\\\\\\nimport ThemeWrapper from '../../../utilities/components/ThemeWrapper'\\\\\\\\n\\\\\\\\nexport default {\\\\\\\\n  title: `${path}/NumberInput`,\\\\\\\\n  component: NumberInput\\\\\\\\n}\\\\\\\\n\\\\\\\\nexport const DefaultField = () => (\\\\\\\\n  <ThemeWrapper>\\\\\\\\n    <Box p='1em'>\\\\\\\\n      <NumberInput\\\\\\\\n        id='someId'\\\\\\\\n        name='someName'\\\\\\\\n        className='someClassName'\\\\\\\\n        label={text('label', 'Number Input')}\\\\\\\\n        labelColor={text('labelColor', 'text.inputLabel.default')}\\\\\\\\n        placeholder={text('placeholder', 'Enter number here...')}\\\\\\\\n        maxLength={number('maxLength', 10)}\\\\\\\\n        error={boolean('error', false)}\\\\\\\\n        errorMessage={text('errorMessage', '')}\\\\\\\\n        required={boolean('required', false)}\\\\\\\\n        fullWidth={boolean('fullWidth', false)}\\\\\\\\n        onChange={action('Triggered: onChange')}\\\\\\\\n        allowDecimal={boolean('allowDecimal', false)}\\\\\\\\n        roundingoffDigit={number('roundingoffDigit', 3)}\\\\\\\\n      />\\\\\\\\n    </Box>\\\\\\\\n  </ThemeWrapper>\\\\\\\\n)\\\\\\\\n\\\\\\\\nexport const DefaultFieldWithInitialValue = () => (\\\\\\\\n  <ThemeWrapper>\\\\\\\\n    <Box p='1em'>\\\\\\\\n      <NumberInput\\\\\\\\n        id='someId'\\\\\\\\n        name='someName'\\\\\\\\n        className='someClassName'\\\\\\\\n        label={text('label', 'Number Input')}\\\\\\\\n        labelColor={text('labelColor', 'text.inputLabel.default')}\\\\\\\\n        placeholder={text('placeholder', 'Enter number here...')}\\\\\\\\n        initialValue={number('initialValue', 25)}\\\\\\\\n        maxLength={number('maxLength', 10)}\\\\\\\\n        error={boolean('error', false)}\\\\\\\\n        errorMessage={text('errorMessage', '')}\\\\\\\\n        required={boolean('required', false)}\\\\\\\\n        fullWidth={boolean('fullWidth', false)}\\\\\\\\n        onChange={action('Triggered: onChange')}\\\\\\\\n        allowDecimal={boolean('allowDecimal', false)}\\\\\\\\n      />\\\\\\\\n    </Box>\\\\\\\\n  </ThemeWrapper>\\\\\\\\n)\\\\\\\\n\\\\\\\\nexport const DecimalField = () => (\\\\\\\\n  <ThemeWrapper>\\\\\\\\n    <Box p='1em'>\\\\\\\\n      <NumberInput\\\\\\\\n        id='someId'\\\\\\\\n        name='someName'\\\\\\\\n        className='someClassName'\\\\\\\\n        label={text('label', 'Number Input')}\\\\\\\\n        labelColor={text('labelColor', 'text.inputLabel.default')}\\\\\\\\n        placeholder={text('placeholder', 'Enter number here...')}\\\\\\\\n        maxLength={number('maxLength', 10)}\\\\\\\\n        error={boolean('error', false)}\\\\\\\\n        errorMessage={text('errorMessage', '')}\\\\\\\\n        required={boolean('required', false)}\\\\\\\\n        fullWidth={boolean('fullWidth', false)}\\\\\\\\n        onChange={action('Triggered: onChange')}\\\\\\\\n        allowDecimal={boolean('allowDecimal', true)}\\\\\\\\n        roundingoffDigit={number('roundingoffDigit', 3)}\\\\\\\\n      />\\\\\\\\n    </Box>\\\\\\\\n  </ThemeWrapper>\\\\\\\\n)\\\\\\\\n\\\\\\\\nexport const RequiredField = () => (\\\\\\\\n  <ThemeWrapper>\\\\\\\\n    <Box p='1em'>\\\\\\\\n      <NumberInput\\\\\\\\n        id='someId'\\\\\\\\n        name='someName'\\\\\\\\n        className='someClassName'\\\\\\\\n        label={text('label', 'Number Input')}\\\\\\\\n        labelColor={text('labelColor', 'text.inputLabel.default')}\\\\\\\\n        placeholder={text('placeholder', 'Enter number here...')}\\\\\\\\n        maxLength={number('maxLength', 10)}\\\\\\\\n        error={boolean('error', false)}\\\\\\\\n        errorMessage={text('errorMessage', '')}\\\\\\\\n        required={boolean('required', true)}\\\\\\\\n        fullWidth={boolean('fullWidth', false)}\\\\\\\\n        onChange={action('Triggered: onChange')}\\\\\\\\n      />\\\\\\\\n    </Box>\\\\\\\\n  </ThemeWrapper>\\\\\\\\n)\\\\\\\\n\\\\\\\\nexport const ErrorField = () => (\\\\\\\\n  <ThemeWrapper>\\\\\\\\n    <Box p='1em'>\\\\\\\\n      <NumberInput\\\\\\\\n        id='someId'\\\\\\\\n        name='someName'\\\\\\\\n        className='someClassName'\\\\\\\\n        label={text('label', 'Number Input')}\\\\\\\\n        labelColor={text('labelColor', 'text.inputLabel.default')}\\\\\\\\n        placeholder={text('placeholder', 'Enter number here...')}\\\\\\\\n        maxLength={number('maxLength', 10)}\\\\\\\\n        error={boolean('error', true)}\\\\\\\\n        errorMessage={text('errorMessage', 'Some Field Error')}\\\\\\\\n        required={boolean('required', false)}\\\\\\\\n        fullWidth={boolean('fullWidth', true)}\\\\\\\\n        onChange={action('Triggered: onChange')}\\\\\\\\n      />\\\\\\\\n    </Box>\\\\\\\\n  </ThemeWrapper>\\\\\\\\n)\\\\\\\\n\\\\\\\\nexport const WithOutBorder = () => (\\\\\\\\n  <ThemeWrapper>\\\\\\\\n    <Box bgColor='grey.100' p='2em'>\\\\\\\\n      <NumberInput\\\\\\\\n        id='someId'\\\\\\\\n        name='someName'\\\\\\\\n        className='someClassName'\\\\\\\\n        maxLength={number('maxLength', 10)}\\\\\\\\n        error={boolean('error', false)}\\\\\\\\n        onChange={action('Triggered: onChange')}\\\\\\\\n        variant='inline-edit'\\\\\\\\n      />\\\\\\\\n    </Box>\\\\\\\\n  </ThemeWrapper>\\\\\\\\n)\\\\\\\\n\\\\\\\",\\\\\\\"locationsMap\\\\\\\":{}},},\\\\n  title: `${path}/NumberInput`,\\\\n  component: NumberInput\\\\n}\\\\n\\\\nexport const DefaultField = addSourceDecorator(() => (\\\\n  <ThemeWrapper>\\\\n    <Box p='1em'>\\\\n      <NumberInput\\\\n        id='someId'\\\\n        name='someName'\\\\n        className='someClassName'\\\\n        label={text('label', 'Number Input')}\\\\n        labelColor={text('labelColor', 'text.inputLabel.default')}\\\\n        placeholder={text('placeholder', 'Enter number here...')}\\\\n        maxLength={number('maxLength', 10)}\\\\n        error={boolean('error', false)}\\\\n        errorMessage={text('errorMessage', '')}\\\\n        required={boolean('required', false)}\\\\n        fullWidth={boolean('fullWidth', false)}\\\\n        onChange={action('Triggered: onChange')}\\\\n        allowDecimal={boolean('allowDecimal', false)}\\\\n        roundingoffDigit={number('roundingoffDigit', 3)}\\\\n      />\\\\n    </Box>\\\\n  </ThemeWrapper>\\\\n), {__STORY__, __ADDS_MAP__,__MAIN_FILE_LOCATION__,__MODULE_DEPENDENCIES__,__LOCAL_DEPENDENCIES__,__SOURCE_PREFIX__,__IDS_TO_FRAMEWORKS__});\\\\n\\\\nexport const DefaultFieldWithInitialValue = addSourceDecorator(() => (\\\\n  <ThemeWrapper>\\\\n    <Box p='1em'>\\\\n      <NumberInput\\\\n        id='someId'\\\\n        name='someName'\\\\n        className='someClassName'\\\\n        label={text('label', 'Number Input')}\\\\n        labelColor={text('labelColor', 'text.inputLabel.default')}\\\\n        placeholder={text('placeholder', 'Enter number here...')}\\\\n        initialValue={number('initialValue', 25)}\\\\n        maxLength={number('maxLength', 10)}\\\\n        error={boolean('error', false)}\\\\n        errorMessage={text('errorMessage', '')}\\\\n        required={boolean('required', false)}\\\\n        fullWidth={boolean('fullWidth', false)}\\\\n        onChange={action('Triggered: onChange')}\\\\n        allowDecimal={boolean('allowDecimal', false)}\\\\n      />\\\\n    </Box>\\\\n  </ThemeWrapper>\\\\n), {__STORY__, __ADDS_MAP__,__MAIN_FILE_LOCATION__,__MODULE_DEPENDENCIES__,__LOCAL_DEPENDENCIES__,__SOURCE_PREFIX__,__IDS_TO_FRAMEWORKS__});\\\\n\\\\nexport const DecimalField = addSourceDecorator(() => (\\\\n  <ThemeWrapper>\\\\n    <Box p='1em'>\\\\n      <NumberInput\\\\n        id='someId'\\\\n        name='someName'\\\\n        className='someClassName'\\\\n        label={text('label', 'Number Input')}\\\\n        labelColor={text('labelColor', 'text.inputLabel.default')}\\\\n        placeholder={text('placeholder', 'Enter number here...')}\\\\n        maxLength={number('maxLength', 10)}\\\\n        error={boolean('error', false)}\\\\n        errorMessage={text('errorMessage', '')}\\\\n        required={boolean('required', false)}\\\\n        fullWidth={boolean('fullWidth', false)}\\\\n        onChange={action('Triggered: onChange')}\\\\n        allowDecimal={boolean('allowDecimal', true)}\\\\n        roundingoffDigit={number('roundingoffDigit', 3)}\\\\n      />\\\\n    </Box>\\\\n  </ThemeWrapper>\\\\n), {__STORY__, __ADDS_MAP__,__MAIN_FILE_LOCATION__,__MODULE_DEPENDENCIES__,__LOCAL_DEPENDENCIES__,__SOURCE_PREFIX__,__IDS_TO_FRAMEWORKS__});\\\\n\\\\nexport const RequiredField = addSourceDecorator(() => (\\\\n  <ThemeWrapper>\\\\n    <Box p='1em'>\\\\n      <NumberInput\\\\n        id='someId'\\\\n        name='someName'\\\\n        className='someClassName'\\\\n        label={text('label', 'Number Input')}\\\\n        labelColor={text('labelColor', 'text.inputLabel.default')}\\\\n        placeholder={text('placeholder', 'Enter number here...')}\\\\n        maxLength={number('maxLength', 10)}\\\\n        error={boolean('error', false)}\\\\n        errorMessage={text('errorMessage', '')}\\\\n        required={boolean('required', true)}\\\\n        fullWidth={boolean('fullWidth', false)}\\\\n        onChange={action('Triggered: onChange')}\\\\n      />\\\\n    </Box>\\\\n  </ThemeWrapper>\\\\n), {__STORY__, __ADDS_MAP__,__MAIN_FILE_LOCATION__,__MODULE_DEPENDENCIES__,__LOCAL_DEPENDENCIES__,__SOURCE_PREFIX__,__IDS_TO_FRAMEWORKS__});\\\\n\\\\nexport const ErrorField = addSourceDecorator(() => (\\\\n  <ThemeWrapper>\\\\n    <Box p='1em'>\\\\n      <NumberInput\\\\n        id='someId'\\\\n        name='someName'\\\\n        className='someClassName'\\\\n        label={text('label', 'Number Input')}\\\\n        labelColor={text('labelColor', 'text.inputLabel.default')}\\\\n        placeholder={text('placeholder', 'Enter number here...')}\\\\n        maxLength={number('maxLength', 10)}\\\\n        error={boolean('error', true)}\\\\n        errorMessage={text('errorMessage', 'Some Field Error')}\\\\n        required={boolean('required', false)}\\\\n        fullWidth={boolean('fullWidth', true)}\\\\n        onChange={action('Triggered: onChange')}\\\\n      />\\\\n    </Box>\\\\n  </ThemeWrapper>\\\\n), {__STORY__, __ADDS_MAP__,__MAIN_FILE_LOCATION__,__MODULE_DEPENDENCIES__,__LOCAL_DEPENDENCIES__,__SOURCE_PREFIX__,__IDS_TO_FRAMEWORKS__});\\\\n\\\\nexport const WithOutBorder = addSourceDecorator(() => (\\\\n  <ThemeWrapper>\\\\n    <Box bgColor='grey.100' p='2em'>\\\\n      <NumberInput\\\\n        id='someId'\\\\n        name='someName'\\\\n        className='someClassName'\\\\n        maxLength={number('maxLength', 10)}\\\\n        error={boolean('error', false)}\\\\n        onChange={action('Triggered: onChange')}\\\\n        variant='inline-edit'\\\\n      />\\\\n    </Box>\\\\n  </ThemeWrapper>\\\\n), {__STORY__, __ADDS_MAP__,__MAIN_FILE_LOCATION__,__MODULE_DEPENDENCIES__,__LOCAL_DEPENDENCIES__,__SOURCE_PREFIX__,__IDS_TO_FRAMEWORKS__});\\\";\\n// @ts-ignore\\nvar __ADDS_MAP__ = {};\\n// @ts-ignore\\nvar __MAIN_FILE_LOCATION__ = \\\"/NumberInput.stories.tsx\\\";\\n// @ts-ignore\\nvar __MODULE_DEPENDENCIES__ = [];\\n// @ts-ignore\\nvar __LOCAL_DEPENDENCIES__ = {};\\n// @ts-ignore\\nvar __IDS_TO_FRAMEWORKS__ = {};\\n        \\n\\n\\n// @ts-nocheck\\n// @ts-ignore\\nvar withSourceLoader = require('@storybook/source-loader/preview').withSource;\\n// @ts-ignore\\nvar addSourceDecorator = require(\\\"@storybook/source-loader/preview\\\").addSource;\\n// @ts-ignore\\nvar __SOURCE_PREFIX__ = \\\"/Users/farhanansari/Code/ui-library/src/components/molecules/NumberInput\\\";\\n// @ts-ignore\\nvar __STORY__ = \\\"import React from 'react'\\\\nimport NumberInput from '.'\\\\nimport Box from '../../atoms/Box'\\\\nimport { path } from '..'\\\\n\\\\nimport { action } from '@storybook/addon-actions'\\\\nimport { boolean, number, text } from '@storybook/addon-knobs'\\\\nimport ThemeWrapper from '../../../utilities/components/ThemeWrapper'\\\\n\\\\nexport default {\\\\n  title: `${path}/NumberInput`,\\\\n  component: NumberInput\\\\n}\\\\n\\\\nexport const DefaultField = () => (\\\\n  <ThemeWrapper>\\\\n    <Box p='1em'>\\\\n      <NumberInput\\\\n        id='someId'\\\\n        name='someName'\\\\n        className='someClassName'\\\\n        label={text('label', 'Number Input')}\\\\n        labelColor={text('labelColor', 'text.inputLabel.default')}\\\\n        placeholder={text('placeholder', 'Enter number here...')}\\\\n        maxLength={number('maxLength', 10)}\\\\n        error={boolean('error', false)}\\\\n        errorMessage={text('errorMessage', '')}\\\\n        required={boolean('required', false)}\\\\n        fullWidth={boolean('fullWidth', false)}\\\\n        onChange={action('Triggered: onChange')}\\\\n        allowDecimal={boolean('allowDecimal', false)}\\\\n        roundingoffDigit={number('roundingoffDigit', 3)}\\\\n      />\\\\n    </Box>\\\\n  </ThemeWrapper>\\\\n)\\\\n\\\\nexport const DefaultFieldWithInitialValue = () => (\\\\n  <ThemeWrapper>\\\\n    <Box p='1em'>\\\\n      <NumberInput\\\\n        id='someId'\\\\n        name='someName'\\\\n        className='someClassName'\\\\n        label={text('label', 'Number Input')}\\\\n        labelColor={text('labelColor', 'text.inputLabel.default')}\\\\n        placeholder={text('placeholder', 'Enter number here...')}\\\\n        initialValue={number('initialValue', 25)}\\\\n        maxLength={number('maxLength', 10)}\\\\n        error={boolean('error', false)}\\\\n        errorMessage={text('errorMessage', '')}\\\\n        required={boolean('required', false)}\\\\n        fullWidth={boolean('fullWidth', false)}\\\\n        onChange={action('Triggered: onChange')}\\\\n        allowDecimal={boolean('allowDecimal', false)}\\\\n      />\\\\n    </Box>\\\\n  </ThemeWrapper>\\\\n)\\\\n\\\\nexport const DecimalField = () => (\\\\n  <ThemeWrapper>\\\\n    <Box p='1em'>\\\\n      <NumberInput\\\\n        id='someId'\\\\n        name='someName'\\\\n        className='someClassName'\\\\n        label={text('label', 'Number Input')}\\\\n        labelColor={text('labelColor', 'text.inputLabel.default')}\\\\n        placeholder={text('placeholder', 'Enter number here...')}\\\\n        maxLength={number('maxLength', 10)}\\\\n        error={boolean('error', false)}\\\\n        errorMessage={text('errorMessage', '')}\\\\n        required={boolean('required', false)}\\\\n        fullWidth={boolean('fullWidth', false)}\\\\n        onChange={action('Triggered: onChange')}\\\\n        allowDecimal={boolean('allowDecimal', true)}\\\\n        roundingoffDigit={number('roundingoffDigit', 3)}\\\\n      />\\\\n    </Box>\\\\n  </ThemeWrapper>\\\\n)\\\\n\\\\nexport const RequiredField = () => (\\\\n  <ThemeWrapper>\\\\n    <Box p='1em'>\\\\n      <NumberInput\\\\n        id='someId'\\\\n        name='someName'\\\\n        className='someClassName'\\\\n        label={text('label', 'Number Input')}\\\\n        labelColor={text('labelColor', 'text.inputLabel.default')}\\\\n        placeholder={text('placeholder', 'Enter number here...')}\\\\n        maxLength={number('maxLength', 10)}\\\\n        error={boolean('error', false)}\\\\n        errorMessage={text('errorMessage', '')}\\\\n        required={boolean('required', true)}\\\\n        fullWidth={boolean('fullWidth', false)}\\\\n        onChange={action('Triggered: onChange')}\\\\n      />\\\\n    </Box>\\\\n  </ThemeWrapper>\\\\n)\\\\n\\\\nexport const ErrorField = () => (\\\\n  <ThemeWrapper>\\\\n    <Box p='1em'>\\\\n      <NumberInput\\\\n        id='someId'\\\\n        name='someName'\\\\n        className='someClassName'\\\\n        label={text('label', 'Number Input')}\\\\n        labelColor={text('labelColor', 'text.inputLabel.default')}\\\\n        placeholder={text('placeholder', 'Enter number here...')}\\\\n        maxLength={number('maxLength', 10)}\\\\n        error={boolean('error', true)}\\\\n        errorMessage={text('errorMessage', 'Some Field Error')}\\\\n        required={boolean('required', false)}\\\\n        fullWidth={boolean('fullWidth', true)}\\\\n        onChange={action('Triggered: onChange')}\\\\n      />\\\\n    </Box>\\\\n  </ThemeWrapper>\\\\n)\\\\n\\\\nexport const WithOutBorder = () => (\\\\n  <ThemeWrapper>\\\\n    <Box bgColor='grey.100' p='2em'>\\\\n      <NumberInput\\\\n        id='someId'\\\\n        name='someName'\\\\n        className='someClassName'\\\\n        maxLength={number('maxLength', 10)}\\\\n        error={boolean('error', false)}\\\\n        onChange={action('Triggered: onChange')}\\\\n        variant='inline-edit'\\\\n      />\\\\n    </Box>\\\\n  </ThemeWrapper>\\\\n)\\\\n\\\";\\n// @ts-ignore\\nvar __ADDS_MAP__ = {};\\n// @ts-ignore\\nvar __MAIN_FILE_LOCATION__ = \\\"/NumberInput.stories.tsx\\\";\\n// @ts-ignore\\nvar __MODULE_DEPENDENCIES__ = [];\\n// @ts-ignore\\nvar __LOCAL_DEPENDENCIES__ = {};\\n// @ts-ignore\\nvar __IDS_TO_FRAMEWORKS__ = {};\\n        \\nimport React from 'react'\\nimport NumberInput from '.'\\nimport Box from '../../atoms/Box'\\nimport { path } from '..'\\n\\nimport { action } from '@storybook/addon-actions'\\nimport { boolean, number, text } from '@storybook/addon-knobs'\\nimport ThemeWrapper from '../../../utilities/components/ThemeWrapper'\\n\\nexport default {parameters: {\\\"storySource\\\":{\\\"source\\\":\\\"\\\\n\\\\n// @ts-nocheck\\\\n// @ts-ignore\\\\nvar withSourceLoader = require('@storybook/source-loader/preview').withSource;\\\\n// @ts-ignore\\\\nvar addSourceDecorator = require(\\\\\\\"@storybook/source-loader/preview\\\\\\\").addSource;\\\\n// @ts-ignore\\\\nvar __SOURCE_PREFIX__ = \\\\\\\"/Users/farhanansari/Code/ui-library/src/components/molecules/NumberInput\\\\\\\";\\\\n// @ts-ignore\\\\nvar __STORY__ = \\\\\\\"import React from 'react'\\\\\\\\nimport NumberInput from '.'\\\\\\\\nimport Box from '../../atoms/Box'\\\\\\\\nimport { path } from '..'\\\\\\\\n\\\\\\\\nimport { action } from '@storybook/addon-actions'\\\\\\\\nimport { boolean, number, text } from '@storybook/addon-knobs'\\\\\\\\nimport ThemeWrapper from '../../../utilities/components/ThemeWrapper'\\\\\\\\n\\\\\\\\nexport default {\\\\\\\\n  title: `${path}/NumberInput`,\\\\\\\\n  component: NumberInput\\\\\\\\n}\\\\\\\\n\\\\\\\\nexport const DefaultField = () => (\\\\\\\\n  <ThemeWrapper>\\\\\\\\n    <Box p='1em'>\\\\\\\\n      <NumberInput\\\\\\\\n        id='someId'\\\\\\\\n        name='someName'\\\\\\\\n        className='someClassName'\\\\\\\\n        label={text('label', 'Number Input')}\\\\\\\\n        labelColor={text('labelColor', 'text.inputLabel.default')}\\\\\\\\n        placeholder={text('placeholder', 'Enter number here...')}\\\\\\\\n        maxLength={number('maxLength', 10)}\\\\\\\\n        error={boolean('error', false)}\\\\\\\\n        errorMessage={text('errorMessage', '')}\\\\\\\\n        required={boolean('required', false)}\\\\\\\\n        fullWidth={boolean('fullWidth', false)}\\\\\\\\n        onChange={action('Triggered: onChange')}\\\\\\\\n        allowDecimal={boolean('allowDecimal', false)}\\\\\\\\n        roundingoffDigit={number('roundingoffDigit', 3)}\\\\\\\\n      />\\\\\\\\n    </Box>\\\\\\\\n  </ThemeWrapper>\\\\\\\\n)\\\\\\\\n\\\\\\\\nexport const DefaultFieldWithInitialValue = () => (\\\\\\\\n  <ThemeWrapper>\\\\\\\\n    <Box p='1em'>\\\\\\\\n      <NumberInput\\\\\\\\n        id='someId'\\\\\\\\n        name='someName'\\\\\\\\n        className='someClassName'\\\\\\\\n        label={text('label', 'Number Input')}\\\\\\\\n        labelColor={text('labelColor', 'text.inputLabel.default')}\\\\\\\\n        placeholder={text('placeholder', 'Enter number here...')}\\\\\\\\n        initialValue={number('initialValue', 25)}\\\\\\\\n        maxLength={number('maxLength', 10)}\\\\\\\\n        error={boolean('error', false)}\\\\\\\\n        errorMessage={text('errorMessage', '')}\\\\\\\\n        required={boolean('required', false)}\\\\\\\\n        fullWidth={boolean('fullWidth', false)}\\\\\\\\n        onChange={action('Triggered: onChange')}\\\\\\\\n        allowDecimal={boolean('allowDecimal', false)}\\\\\\\\n      />\\\\\\\\n    </Box>\\\\\\\\n  </ThemeWrapper>\\\\\\\\n)\\\\\\\\n\\\\\\\\nexport const DecimalField = () => (\\\\\\\\n  <ThemeWrapper>\\\\\\\\n    <Box p='1em'>\\\\\\\\n      <NumberInput\\\\\\\\n        id='someId'\\\\\\\\n        name='someName'\\\\\\\\n        className='someClassName'\\\\\\\\n        label={text('label', 'Number Input')}\\\\\\\\n        labelColor={text('labelColor', 'text.inputLabel.default')}\\\\\\\\n        placeholder={text('placeholder', 'Enter number here...')}\\\\\\\\n        maxLength={number('maxLength', 10)}\\\\\\\\n        error={boolean('error', false)}\\\\\\\\n        errorMessage={text('errorMessage', '')}\\\\\\\\n        required={boolean('required', false)}\\\\\\\\n        fullWidth={boolean('fullWidth', false)}\\\\\\\\n        onChange={action('Triggered: onChange')}\\\\\\\\n        allowDecimal={boolean('allowDecimal', true)}\\\\\\\\n        roundingoffDigit={number('roundingoffDigit', 3)}\\\\\\\\n      />\\\\\\\\n    </Box>\\\\\\\\n  </ThemeWrapper>\\\\\\\\n)\\\\\\\\n\\\\\\\\nexport const RequiredField = () => (\\\\\\\\n  <ThemeWrapper>\\\\\\\\n    <Box p='1em'>\\\\\\\\n      <NumberInput\\\\\\\\n        id='someId'\\\\\\\\n        name='someName'\\\\\\\\n        className='someClassName'\\\\\\\\n        label={text('label', 'Number Input')}\\\\\\\\n        labelColor={text('labelColor', 'text.inputLabel.default')}\\\\\\\\n        placeholder={text('placeholder', 'Enter number here...')}\\\\\\\\n        maxLength={number('maxLength', 10)}\\\\\\\\n        error={boolean('error', false)}\\\\\\\\n        errorMessage={text('errorMessage', '')}\\\\\\\\n        required={boolean('required', true)}\\\\\\\\n        fullWidth={boolean('fullWidth', false)}\\\\\\\\n        onChange={action('Triggered: onChange')}\\\\\\\\n      />\\\\\\\\n    </Box>\\\\\\\\n  </ThemeWrapper>\\\\\\\\n)\\\\\\\\n\\\\\\\\nexport const ErrorField = () => (\\\\\\\\n  <ThemeWrapper>\\\\\\\\n    <Box p='1em'>\\\\\\\\n      <NumberInput\\\\\\\\n        id='someId'\\\\\\\\n        name='someName'\\\\\\\\n        className='someClassName'\\\\\\\\n        label={text('label', 'Number Input')}\\\\\\\\n        labelColor={text('labelColor', 'text.inputLabel.default')}\\\\\\\\n        placeholder={text('placeholder', 'Enter number here...')}\\\\\\\\n        maxLength={number('maxLength', 10)}\\\\\\\\n        error={boolean('error', true)}\\\\\\\\n        errorMessage={text('errorMessage', 'Some Field Error')}\\\\\\\\n        required={boolean('required', false)}\\\\\\\\n        fullWidth={boolean('fullWidth', true)}\\\\\\\\n        onChange={action('Triggered: onChange')}\\\\\\\\n      />\\\\\\\\n    </Box>\\\\\\\\n  </ThemeWrapper>\\\\\\\\n)\\\\\\\\n\\\\\\\\nexport const WithOutBorder = () => (\\\\\\\\n  <ThemeWrapper>\\\\\\\\n    <Box bgColor='grey.100' p='2em'>\\\\\\\\n      <NumberInput\\\\\\\\n        id='someId'\\\\\\\\n        name='someName'\\\\\\\\n        className='someClassName'\\\\\\\\n        maxLength={number('maxLength', 10)}\\\\\\\\n        error={boolean('error', false)}\\\\\\\\n        onChange={action('Triggered: onChange')}\\\\\\\\n        variant='inline-edit'\\\\\\\\n      />\\\\\\\\n    </Box>\\\\\\\\n  </ThemeWrapper>\\\\\\\\n)\\\\\\\\n\\\\\\\";\\\\n// @ts-ignore\\\\nvar __ADDS_MAP__ = {};\\\\n// @ts-ignore\\\\nvar __MAIN_FILE_LOCATION__ = \\\\\\\"/NumberInput.stories.tsx\\\\\\\";\\\\n// @ts-ignore\\\\nvar __MODULE_DEPENDENCIES__ = [];\\\\n// @ts-ignore\\\\nvar __LOCAL_DEPENDENCIES__ = {};\\\\n// @ts-ignore\\\\nvar __IDS_TO_FRAMEWORKS__ = {};\\\\n        \\\\nimport React from 'react'\\\\nimport NumberInput from '.'\\\\nimport Box from '../../atoms/Box'\\\\nimport { path } from '..'\\\\n\\\\nimport { action } from '@storybook/addon-actions'\\\\nimport { boolean, number, text } from '@storybook/addon-knobs'\\\\nimport ThemeWrapper from '../../../utilities/components/ThemeWrapper'\\\\n\\\\nexport default {parameters: {\\\\\\\"storySource\\\\\\\":{\\\\\\\"source\\\\\\\":\\\\\\\"import React from 'react'\\\\\\\\nimport NumberInput from '.'\\\\\\\\nimport Box from '../../atoms/Box'\\\\\\\\nimport { path } from '..'\\\\\\\\n\\\\\\\\nimport { action } from '@storybook/addon-actions'\\\\\\\\nimport { boolean, number, text } from '@storybook/addon-knobs'\\\\\\\\nimport ThemeWrapper from '../../../utilities/components/ThemeWrapper'\\\\\\\\n\\\\\\\\nexport default {\\\\\\\\n  title: `${path}/NumberInput`,\\\\\\\\n  component: NumberInput\\\\\\\\n}\\\\\\\\n\\\\\\\\nexport const DefaultField = () => (\\\\\\\\n  <ThemeWrapper>\\\\\\\\n    <Box p='1em'>\\\\\\\\n      <NumberInput\\\\\\\\n        id='someId'\\\\\\\\n        name='someName'\\\\\\\\n        className='someClassName'\\\\\\\\n        label={text('label', 'Number Input')}\\\\\\\\n        labelColor={text('labelColor', 'text.inputLabel.default')}\\\\\\\\n        placeholder={text('placeholder', 'Enter number here...')}\\\\\\\\n        maxLength={number('maxLength', 10)}\\\\\\\\n        error={boolean('error', false)}\\\\\\\\n        errorMessage={text('errorMessage', '')}\\\\\\\\n        required={boolean('required', false)}\\\\\\\\n        fullWidth={boolean('fullWidth', false)}\\\\\\\\n        onChange={action('Triggered: onChange')}\\\\\\\\n        allowDecimal={boolean('allowDecimal', false)}\\\\\\\\n        roundingoffDigit={number('roundingoffDigit', 3)}\\\\\\\\n      />\\\\\\\\n    </Box>\\\\\\\\n  </ThemeWrapper>\\\\\\\\n)\\\\\\\\n\\\\\\\\nexport const DefaultFieldWithInitialValue = () => (\\\\\\\\n  <ThemeWrapper>\\\\\\\\n    <Box p='1em'>\\\\\\\\n      <NumberInput\\\\\\\\n        id='someId'\\\\\\\\n        name='someName'\\\\\\\\n        className='someClassName'\\\\\\\\n        label={text('label', 'Number Input')}\\\\\\\\n        labelColor={text('labelColor', 'text.inputLabel.default')}\\\\\\\\n        placeholder={text('placeholder', 'Enter number here...')}\\\\\\\\n        initialValue={number('initialValue', 25)}\\\\\\\\n        maxLength={number('maxLength', 10)}\\\\\\\\n        error={boolean('error', false)}\\\\\\\\n        errorMessage={text('errorMessage', '')}\\\\\\\\n        required={boolean('required', false)}\\\\\\\\n        fullWidth={boolean('fullWidth', false)}\\\\\\\\n        onChange={action('Triggered: onChange')}\\\\\\\\n        allowDecimal={boolean('allowDecimal', false)}\\\\\\\\n      />\\\\\\\\n    </Box>\\\\\\\\n  </ThemeWrapper>\\\\\\\\n)\\\\\\\\n\\\\\\\\nexport const DecimalField = () => (\\\\\\\\n  <ThemeWrapper>\\\\\\\\n    <Box p='1em'>\\\\\\\\n      <NumberInput\\\\\\\\n        id='someId'\\\\\\\\n        name='someName'\\\\\\\\n        className='someClassName'\\\\\\\\n        label={text('label', 'Number Input')}\\\\\\\\n        labelColor={text('labelColor', 'text.inputLabel.default')}\\\\\\\\n        placeholder={text('placeholder', 'Enter number here...')}\\\\\\\\n        maxLength={number('maxLength', 10)}\\\\\\\\n        error={boolean('error', false)}\\\\\\\\n        errorMessage={text('errorMessage', '')}\\\\\\\\n        required={boolean('required', false)}\\\\\\\\n        fullWidth={boolean('fullWidth', false)}\\\\\\\\n        onChange={action('Triggered: onChange')}\\\\\\\\n        allowDecimal={boolean('allowDecimal', true)}\\\\\\\\n        roundingoffDigit={number('roundingoffDigit', 3)}\\\\\\\\n      />\\\\\\\\n    </Box>\\\\\\\\n  </ThemeWrapper>\\\\\\\\n)\\\\\\\\n\\\\\\\\nexport const RequiredField = () => (\\\\\\\\n  <ThemeWrapper>\\\\\\\\n    <Box p='1em'>\\\\\\\\n      <NumberInput\\\\\\\\n        id='someId'\\\\\\\\n        name='someName'\\\\\\\\n        className='someClassName'\\\\\\\\n        label={text('label', 'Number Input')}\\\\\\\\n        labelColor={text('labelColor', 'text.inputLabel.default')}\\\\\\\\n        placeholder={text('placeholder', 'Enter number here...')}\\\\\\\\n        maxLength={number('maxLength', 10)}\\\\\\\\n        error={boolean('error', false)}\\\\\\\\n        errorMessage={text('errorMessage', '')}\\\\\\\\n        required={boolean('required', true)}\\\\\\\\n        fullWidth={boolean('fullWidth', false)}\\\\\\\\n        onChange={action('Triggered: onChange')}\\\\\\\\n      />\\\\\\\\n    </Box>\\\\\\\\n  </ThemeWrapper>\\\\\\\\n)\\\\\\\\n\\\\\\\\nexport const ErrorField = () => (\\\\\\\\n  <ThemeWrapper>\\\\\\\\n    <Box p='1em'>\\\\\\\\n      <NumberInput\\\\\\\\n        id='someId'\\\\\\\\n        name='someName'\\\\\\\\n        className='someClassName'\\\\\\\\n        label={text('label', 'Number Input')}\\\\\\\\n        labelColor={text('labelColor', 'text.inputLabel.default')}\\\\\\\\n        placeholder={text('placeholder', 'Enter number here...')}\\\\\\\\n        maxLength={number('maxLength', 10)}\\\\\\\\n        error={boolean('error', true)}\\\\\\\\n        errorMessage={text('errorMessage', 'Some Field Error')}\\\\\\\\n        required={boolean('required', false)}\\\\\\\\n        fullWidth={boolean('fullWidth', true)}\\\\\\\\n        onChange={action('Triggered: onChange')}\\\\\\\\n      />\\\\\\\\n    </Box>\\\\\\\\n  </ThemeWrapper>\\\\\\\\n)\\\\\\\\n\\\\\\\\nexport const WithOutBorder = () => (\\\\\\\\n  <ThemeWrapper>\\\\\\\\n    <Box bgColor='grey.100' p='2em'>\\\\\\\\n      <NumberInput\\\\\\\\n        id='someId'\\\\\\\\n        name='someName'\\\\\\\\n        className='someClassName'\\\\\\\\n        maxLength={number('maxLength', 10)}\\\\\\\\n        error={boolean('error', false)}\\\\\\\\n        onChange={action('Triggered: onChange')}\\\\\\\\n        variant='inline-edit'\\\\\\\\n      />\\\\\\\\n    </Box>\\\\\\\\n  </ThemeWrapper>\\\\\\\\n)\\\\\\\\n\\\\\\\",\\\\\\\"locationsMap\\\\\\\":{}},},\\\\n  title: `${path}/NumberInput`,\\\\n  component: NumberInput\\\\n}\\\\n\\\\nexport const DefaultField = addSourceDecorator(() => (\\\\n  <ThemeWrapper>\\\\n    <Box p='1em'>\\\\n      <NumberInput\\\\n        id='someId'\\\\n        name='someName'\\\\n        className='someClassName'\\\\n        label={text('label', 'Number Input')}\\\\n        labelColor={text('labelColor', 'text.inputLabel.default')}\\\\n        placeholder={text('placeholder', 'Enter number here...')}\\\\n        maxLength={number('maxLength', 10)}\\\\n        error={boolean('error', false)}\\\\n        errorMessage={text('errorMessage', '')}\\\\n        required={boolean('required', false)}\\\\n        fullWidth={boolean('fullWidth', false)}\\\\n        onChange={action('Triggered: onChange')}\\\\n        allowDecimal={boolean('allowDecimal', false)}\\\\n        roundingoffDigit={number('roundingoffDigit', 3)}\\\\n      />\\\\n    </Box>\\\\n  </ThemeWrapper>\\\\n), {__STORY__, __ADDS_MAP__,__MAIN_FILE_LOCATION__,__MODULE_DEPENDENCIES__,__LOCAL_DEPENDENCIES__,__SOURCE_PREFIX__,__IDS_TO_FRAMEWORKS__});\\\\n\\\\nexport const DefaultFieldWithInitialValue = addSourceDecorator(() => (\\\\n  <ThemeWrapper>\\\\n    <Box p='1em'>\\\\n      <NumberInput\\\\n        id='someId'\\\\n        name='someName'\\\\n        className='someClassName'\\\\n        label={text('label', 'Number Input')}\\\\n        labelColor={text('labelColor', 'text.inputLabel.default')}\\\\n        placeholder={text('placeholder', 'Enter number here...')}\\\\n        initialValue={number('initialValue', 25)}\\\\n        maxLength={number('maxLength', 10)}\\\\n        error={boolean('error', false)}\\\\n        errorMessage={text('errorMessage', '')}\\\\n        required={boolean('required', false)}\\\\n        fullWidth={boolean('fullWidth', false)}\\\\n        onChange={action('Triggered: onChange')}\\\\n        allowDecimal={boolean('allowDecimal', false)}\\\\n      />\\\\n    </Box>\\\\n  </ThemeWrapper>\\\\n), {__STORY__, __ADDS_MAP__,__MAIN_FILE_LOCATION__,__MODULE_DEPENDENCIES__,__LOCAL_DEPENDENCIES__,__SOURCE_PREFIX__,__IDS_TO_FRAMEWORKS__});\\\\n\\\\nexport const DecimalField = addSourceDecorator(() => (\\\\n  <ThemeWrapper>\\\\n    <Box p='1em'>\\\\n      <NumberInput\\\\n        id='someId'\\\\n        name='someName'\\\\n        className='someClassName'\\\\n        label={text('label', 'Number Input')}\\\\n        labelColor={text('labelColor', 'text.inputLabel.default')}\\\\n        placeholder={text('placeholder', 'Enter number here...')}\\\\n        maxLength={number('maxLength', 10)}\\\\n        error={boolean('error', false)}\\\\n        errorMessage={text('errorMessage', '')}\\\\n        required={boolean('required', false)}\\\\n        fullWidth={boolean('fullWidth', false)}\\\\n        onChange={action('Triggered: onChange')}\\\\n        allowDecimal={boolean('allowDecimal', true)}\\\\n        roundingoffDigit={number('roundingoffDigit', 3)}\\\\n      />\\\\n    </Box>\\\\n  </ThemeWrapper>\\\\n), {__STORY__, __ADDS_MAP__,__MAIN_FILE_LOCATION__,__MODULE_DEPENDENCIES__,__LOCAL_DEPENDENCIES__,__SOURCE_PREFIX__,__IDS_TO_FRAMEWORKS__});\\\\n\\\\nexport const RequiredField = addSourceDecorator(() => (\\\\n  <ThemeWrapper>\\\\n    <Box p='1em'>\\\\n      <NumberInput\\\\n        id='someId'\\\\n        name='someName'\\\\n        className='someClassName'\\\\n        label={text('label', 'Number Input')}\\\\n        labelColor={text('labelColor', 'text.inputLabel.default')}\\\\n        placeholder={text('placeholder', 'Enter number here...')}\\\\n        maxLength={number('maxLength', 10)}\\\\n        error={boolean('error', false)}\\\\n        errorMessage={text('errorMessage', '')}\\\\n        required={boolean('required', true)}\\\\n        fullWidth={boolean('fullWidth', false)}\\\\n        onChange={action('Triggered: onChange')}\\\\n      />\\\\n    </Box>\\\\n  </ThemeWrapper>\\\\n), {__STORY__, __ADDS_MAP__,__MAIN_FILE_LOCATION__,__MODULE_DEPENDENCIES__,__LOCAL_DEPENDENCIES__,__SOURCE_PREFIX__,__IDS_TO_FRAMEWORKS__});\\\\n\\\\nexport const ErrorField = addSourceDecorator(() => (\\\\n  <ThemeWrapper>\\\\n    <Box p='1em'>\\\\n      <NumberInput\\\\n        id='someId'\\\\n        name='someName'\\\\n        className='someClassName'\\\\n        label={text('label', 'Number Input')}\\\\n        labelColor={text('labelColor', 'text.inputLabel.default')}\\\\n        placeholder={text('placeholder', 'Enter number here...')}\\\\n        maxLength={number('maxLength', 10)}\\\\n        error={boolean('error', true)}\\\\n        errorMessage={text('errorMessage', 'Some Field Error')}\\\\n        required={boolean('required', false)}\\\\n        fullWidth={boolean('fullWidth', true)}\\\\n        onChange={action('Triggered: onChange')}\\\\n      />\\\\n    </Box>\\\\n  </ThemeWrapper>\\\\n), {__STORY__, __ADDS_MAP__,__MAIN_FILE_LOCATION__,__MODULE_DEPENDENCIES__,__LOCAL_DEPENDENCIES__,__SOURCE_PREFIX__,__IDS_TO_FRAMEWORKS__});\\\\n\\\\nexport const WithOutBorder = addSourceDecorator(() => (\\\\n  <ThemeWrapper>\\\\n    <Box bgColor='grey.100' p='2em'>\\\\n      <NumberInput\\\\n        id='someId'\\\\n        name='someName'\\\\n        className='someClassName'\\\\n        maxLength={number('maxLength', 10)}\\\\n        error={boolean('error', false)}\\\\n        onChange={action('Triggered: onChange')}\\\\n        variant='inline-edit'\\\\n      />\\\\n    </Box>\\\\n  </ThemeWrapper>\\\\n), {__STORY__, __ADDS_MAP__,__MAIN_FILE_LOCATION__,__MODULE_DEPENDENCIES__,__LOCAL_DEPENDENCIES__,__SOURCE_PREFIX__,__IDS_TO_FRAMEWORKS__});\\\",\\\"locationsMap\\\":{}},\\\"storySource\\\":{\\\"source\\\":\\\"import React from 'react'\\\\nimport NumberInput from '.'\\\\nimport Box from '../../atoms/Box'\\\\nimport { path } from '..'\\\\n\\\\nimport { action } from '@storybook/addon-actions'\\\\nimport { boolean, number, text } from '@storybook/addon-knobs'\\\\nimport ThemeWrapper from '../../../utilities/components/ThemeWrapper'\\\\n\\\\nexport default {\\\\n  title: `${path}/NumberInput`,\\\\n  component: NumberInput\\\\n}\\\\n\\\\nexport const DefaultField = () => (\\\\n  <ThemeWrapper>\\\\n    <Box p='1em'>\\\\n      <NumberInput\\\\n        id='someId'\\\\n        name='someName'\\\\n        className='someClassName'\\\\n        label={text('label', 'Number Input')}\\\\n        labelColor={text('labelColor', 'text.inputLabel.default')}\\\\n        placeholder={text('placeholder', 'Enter number here...')}\\\\n        maxLength={number('maxLength', 10)}\\\\n        error={boolean('error', false)}\\\\n        errorMessage={text('errorMessage', '')}\\\\n        required={boolean('required', false)}\\\\n        fullWidth={boolean('fullWidth', false)}\\\\n        onChange={action('Triggered: onChange')}\\\\n        allowDecimal={boolean('allowDecimal', false)}\\\\n        roundingoffDigit={number('roundingoffDigit', 3)}\\\\n      />\\\\n    </Box>\\\\n  </ThemeWrapper>\\\\n)\\\\n\\\\nexport const DefaultFieldWithInitialValue = () => (\\\\n  <ThemeWrapper>\\\\n    <Box p='1em'>\\\\n      <NumberInput\\\\n        id='someId'\\\\n        name='someName'\\\\n        className='someClassName'\\\\n        label={text('label', 'Number Input')}\\\\n        labelColor={text('labelColor', 'text.inputLabel.default')}\\\\n        placeholder={text('placeholder', 'Enter number here...')}\\\\n        initialValue={number('initialValue', 25)}\\\\n        maxLength={number('maxLength', 10)}\\\\n        error={boolean('error', false)}\\\\n        errorMessage={text('errorMessage', '')}\\\\n        required={boolean('required', false)}\\\\n        fullWidth={boolean('fullWidth', false)}\\\\n        onChange={action('Triggered: onChange')}\\\\n        allowDecimal={boolean('allowDecimal', false)}\\\\n      />\\\\n    </Box>\\\\n  </ThemeWrapper>\\\\n)\\\\n\\\\nexport const DecimalField = () => (\\\\n  <ThemeWrapper>\\\\n    <Box p='1em'>\\\\n      <NumberInput\\\\n        id='someId'\\\\n        name='someName'\\\\n        className='someClassName'\\\\n        label={text('label', 'Number Input')}\\\\n        labelColor={text('labelColor', 'text.inputLabel.default')}\\\\n        placeholder={text('placeholder', 'Enter number here...')}\\\\n        maxLength={number('maxLength', 10)}\\\\n        error={boolean('error', false)}\\\\n        errorMessage={text('errorMessage', '')}\\\\n        required={boolean('required', false)}\\\\n        fullWidth={boolean('fullWidth', false)}\\\\n        onChange={action('Triggered: onChange')}\\\\n        allowDecimal={boolean('allowDecimal', true)}\\\\n        roundingoffDigit={number('roundingoffDigit', 3)}\\\\n      />\\\\n    </Box>\\\\n  </ThemeWrapper>\\\\n)\\\\n\\\\nexport const RequiredField = () => (\\\\n  <ThemeWrapper>\\\\n    <Box p='1em'>\\\\n      <NumberInput\\\\n        id='someId'\\\\n        name='someName'\\\\n        className='someClassName'\\\\n        label={text('label', 'Number Input')}\\\\n        labelColor={text('labelColor', 'text.inputLabel.default')}\\\\n        placeholder={text('placeholder', 'Enter number here...')}\\\\n        maxLength={number('maxLength', 10)}\\\\n        error={boolean('error', false)}\\\\n        errorMessage={text('errorMessage', '')}\\\\n        required={boolean('required', true)}\\\\n        fullWidth={boolean('fullWidth', false)}\\\\n        onChange={action('Triggered: onChange')}\\\\n      />\\\\n    </Box>\\\\n  </ThemeWrapper>\\\\n)\\\\n\\\\nexport const ErrorField = () => (\\\\n  <ThemeWrapper>\\\\n    <Box p='1em'>\\\\n      <NumberInput\\\\n        id='someId'\\\\n        name='someName'\\\\n        className='someClassName'\\\\n        label={text('label', 'Number Input')}\\\\n        labelColor={text('labelColor', 'text.inputLabel.default')}\\\\n        placeholder={text('placeholder', 'Enter number here...')}\\\\n        maxLength={number('maxLength', 10)}\\\\n        error={boolean('error', true)}\\\\n        errorMessage={text('errorMessage', 'Some Field Error')}\\\\n        required={boolean('required', false)}\\\\n        fullWidth={boolean('fullWidth', true)}\\\\n        onChange={action('Triggered: onChange')}\\\\n      />\\\\n    </Box>\\\\n  </ThemeWrapper>\\\\n)\\\\n\\\\nexport const WithOutBorder = () => (\\\\n  <ThemeWrapper>\\\\n    <Box bgColor='grey.100' p='2em'>\\\\n      <NumberInput\\\\n        id='someId'\\\\n        name='someName'\\\\n        className='someClassName'\\\\n        maxLength={number('maxLength', 10)}\\\\n        error={boolean('error', false)}\\\\n        onChange={action('Triggered: onChange')}\\\\n        variant='inline-edit'\\\\n      />\\\\n    </Box>\\\\n  </ThemeWrapper>\\\\n)\\\\n\\\",\\\"locationsMap\\\":{}},},\\n  title: `${path}/NumberInput`,\\n  component: NumberInput\\n}\\n\\nexport const DefaultField = addSourceDecorator(addSourceDecorator(() => (\\n  <ThemeWrapper>\\n    <Box p='1em'>\\n      <NumberInput\\n        id='someId'\\n        name='someName'\\n        className='someClassName'\\n        label={text('label', 'Number Input')}\\n        labelColor={text('labelColor', 'text.inputLabel.default')}\\n        placeholder={text('placeholder', 'Enter number here...')}\\n        maxLength={number('maxLength', 10)}\\n        error={boolean('error', false)}\\n        errorMessage={text('errorMessage', '')}\\n        required={boolean('required', false)}\\n        fullWidth={boolean('fullWidth', false)}\\n        onChange={action('Triggered: onChange')}\\n        allowDecimal={boolean('allowDecimal', false)}\\n        roundingoffDigit={number('roundingoffDigit', 3)}\\n      />\\n    </Box>\\n  </ThemeWrapper>\\n), {__STORY__, __ADDS_MAP__,__MAIN_FILE_LOCATION__,__MODULE_DEPENDENCIES__,__LOCAL_DEPENDENCIES__,__SOURCE_PREFIX__,__IDS_TO_FRAMEWORKS__}), {__STORY__, __ADDS_MAP__,__MAIN_FILE_LOCATION__,__MODULE_DEPENDENCIES__,__LOCAL_DEPENDENCIES__,__SOURCE_PREFIX__,__IDS_TO_FRAMEWORKS__});;\\n\\nexport const DefaultFieldWithInitialValue = addSourceDecorator(addSourceDecorator(() => (\\n  <ThemeWrapper>\\n    <Box p='1em'>\\n      <NumberInput\\n        id='someId'\\n        name='someName'\\n        className='someClassName'\\n        label={text('label', 'Number Input')}\\n        labelColor={text('labelColor', 'text.inputLabel.default')}\\n        placeholder={text('placeholder', 'Enter number here...')}\\n        initialValue={number('initialValue', 25)}\\n        maxLength={number('maxLength', 10)}\\n        error={boolean('error', false)}\\n        errorMessage={text('errorMessage', '')}\\n        required={boolean('required', false)}\\n        fullWidth={boolean('fullWidth', false)}\\n        onChange={action('Triggered: onChange')}\\n        allowDecimal={boolean('allowDecimal', false)}\\n      />\\n    </Box>\\n  </ThemeWrapper>\\n), {__STORY__, __ADDS_MAP__,__MAIN_FILE_LOCATION__,__MODULE_DEPENDENCIES__,__LOCAL_DEPENDENCIES__,__SOURCE_PREFIX__,__IDS_TO_FRAMEWORKS__}), {__STORY__, __ADDS_MAP__,__MAIN_FILE_LOCATION__,__MODULE_DEPENDENCIES__,__LOCAL_DEPENDENCIES__,__SOURCE_PREFIX__,__IDS_TO_FRAMEWORKS__});;\\n\\nexport const DecimalField = addSourceDecorator(addSourceDecorator(() => (\\n  <ThemeWrapper>\\n    <Box p='1em'>\\n      <NumberInput\\n        id='someId'\\n        name='someName'\\n        className='someClassName'\\n        label={text('label', 'Number Input')}\\n        labelColor={text('labelColor', 'text.inputLabel.default')}\\n        placeholder={text('placeholder', 'Enter number here...')}\\n        maxLength={number('maxLength', 10)}\\n        error={boolean('error', false)}\\n        errorMessage={text('errorMessage', '')}\\n        required={boolean('required', false)}\\n        fullWidth={boolean('fullWidth', false)}\\n        onChange={action('Triggered: onChange')}\\n        allowDecimal={boolean('allowDecimal', true)}\\n        roundingoffDigit={number('roundingoffDigit', 3)}\\n      />\\n    </Box>\\n  </ThemeWrapper>\\n), {__STORY__, __ADDS_MAP__,__MAIN_FILE_LOCATION__,__MODULE_DEPENDENCIES__,__LOCAL_DEPENDENCIES__,__SOURCE_PREFIX__,__IDS_TO_FRAMEWORKS__}), {__STORY__, __ADDS_MAP__,__MAIN_FILE_LOCATION__,__MODULE_DEPENDENCIES__,__LOCAL_DEPENDENCIES__,__SOURCE_PREFIX__,__IDS_TO_FRAMEWORKS__});;\\n\\nexport const RequiredField = addSourceDecorator(addSourceDecorator(() => (\\n  <ThemeWrapper>\\n    <Box p='1em'>\\n      <NumberInput\\n        id='someId'\\n        name='someName'\\n        className='someClassName'\\n        label={text('label', 'Number Input')}\\n        labelColor={text('labelColor', 'text.inputLabel.default')}\\n        placeholder={text('placeholder', 'Enter number here...')}\\n        maxLength={number('maxLength', 10)}\\n        error={boolean('error', false)}\\n        errorMessage={text('errorMessage', '')}\\n        required={boolean('required', true)}\\n        fullWidth={boolean('fullWidth', false)}\\n        onChange={action('Triggered: onChange')}\\n      />\\n    </Box>\\n  </ThemeWrapper>\\n), {__STORY__, __ADDS_MAP__,__MAIN_FILE_LOCATION__,__MODULE_DEPENDENCIES__,__LOCAL_DEPENDENCIES__,__SOURCE_PREFIX__,__IDS_TO_FRAMEWORKS__}), {__STORY__, __ADDS_MAP__,__MAIN_FILE_LOCATION__,__MODULE_DEPENDENCIES__,__LOCAL_DEPENDENCIES__,__SOURCE_PREFIX__,__IDS_TO_FRAMEWORKS__});;\\n\\nexport const ErrorField = addSourceDecorator(addSourceDecorator(() => (\\n  <ThemeWrapper>\\n    <Box p='1em'>\\n      <NumberInput\\n        id='someId'\\n        name='someName'\\n        className='someClassName'\\n        label={text('label', 'Number Input')}\\n        labelColor={text('labelColor', 'text.inputLabel.default')}\\n        placeholder={text('placeholder', 'Enter number here...')}\\n        maxLength={number('maxLength', 10)}\\n        error={boolean('error', true)}\\n        errorMessage={text('errorMessage', 'Some Field Error')}\\n        required={boolean('required', false)}\\n        fullWidth={boolean('fullWidth', true)}\\n        onChange={action('Triggered: onChange')}\\n      />\\n    </Box>\\n  </ThemeWrapper>\\n), {__STORY__, __ADDS_MAP__,__MAIN_FILE_LOCATION__,__MODULE_DEPENDENCIES__,__LOCAL_DEPENDENCIES__,__SOURCE_PREFIX__,__IDS_TO_FRAMEWORKS__}), {__STORY__, __ADDS_MAP__,__MAIN_FILE_LOCATION__,__MODULE_DEPENDENCIES__,__LOCAL_DEPENDENCIES__,__SOURCE_PREFIX__,__IDS_TO_FRAMEWORKS__});;\\n\\nexport const WithOutBorder = addSourceDecorator(addSourceDecorator(() => (\\n  <ThemeWrapper>\\n    <Box bgColor='grey.100' p='2em'>\\n      <NumberInput\\n        id='someId'\\n        name='someName'\\n        className='someClassName'\\n        maxLength={number('maxLength', 10)}\\n        error={boolean('error', false)}\\n        onChange={action('Triggered: onChange')}\\n        variant='inline-edit'\\n      />\\n    </Box>\\n  </ThemeWrapper>\\n), {__STORY__, __ADDS_MAP__,__MAIN_FILE_LOCATION__,__MODULE_DEPENDENCIES__,__LOCAL_DEPENDENCIES__,__SOURCE_PREFIX__,__IDS_TO_FRAMEWORKS__}), {__STORY__, __ADDS_MAP__,__MAIN_FILE_LOCATION__,__MODULE_DEPENDENCIES__,__LOCAL_DEPENDENCIES__,__SOURCE_PREFIX__,__IDS_TO_FRAMEWORKS__});\";\n// @ts-ignore\nvar __ADDS_MAP__ = {};\n// @ts-ignore\nvar __MAIN_FILE_LOCATION__ = \"/NumberInput.stories.tsx\";\n// @ts-ignore\nvar __MODULE_DEPENDENCIES__ = [];\n// @ts-ignore\nvar __LOCAL_DEPENDENCIES__ = {};\n// @ts-ignore\nvar __IDS_TO_FRAMEWORKS__ = {};\n        \n\n/* eslint-disable */\n// @ts-nocheck\n// @ts-ignore\nvar withSourceLoader = require('@storybook/source-loader/preview').withSource;\n// @ts-ignore\nvar addSourceDecorator = require(\"@storybook/source-loader/preview\").addSource;\n// @ts-ignore\nvar __SOURCE_PREFIX__ = \"/Users/farhanansari/Code/ui-library/src/components/molecules/NumberInput\";\n// @ts-ignore\nvar __STORY__ = \"\\n\\n// @ts-nocheck\\n// @ts-ignore\\nvar withSourceLoader = require('@storybook/source-loader/preview').withSource;\\n// @ts-ignore\\nvar addSourceDecorator = require(\\\"@storybook/source-loader/preview\\\").addSource;\\n// @ts-ignore\\nvar __SOURCE_PREFIX__ = \\\"/Users/farhanansari/Code/ui-library/src/components/molecules/NumberInput\\\";\\n// @ts-ignore\\nvar __STORY__ = \\\"import React from 'react'\\\\nimport NumberInput from '.'\\\\nimport Box from '../../atoms/Box'\\\\nimport { path } from '..'\\\\n\\\\nimport { action } from '@storybook/addon-actions'\\\\nimport { boolean, number, text } from '@storybook/addon-knobs'\\\\nimport ThemeWrapper from '../../../utilities/components/ThemeWrapper'\\\\n\\\\nexport default {\\\\n  title: `${path}/NumberInput`,\\\\n  component: NumberInput\\\\n}\\\\n\\\\nexport const DefaultField = () => (\\\\n  <ThemeWrapper>\\\\n    <Box p='1em'>\\\\n      <NumberInput\\\\n        id='someId'\\\\n        name='someName'\\\\n        className='someClassName'\\\\n        label={text('label', 'Number Input')}\\\\n        labelColor={text('labelColor', 'text.inputLabel.default')}\\\\n        placeholder={text('placeholder', 'Enter number here...')}\\\\n        maxLength={number('maxLength', 10)}\\\\n        error={boolean('error', false)}\\\\n        errorMessage={text('errorMessage', '')}\\\\n        required={boolean('required', false)}\\\\n        fullWidth={boolean('fullWidth', false)}\\\\n        onChange={action('Triggered: onChange')}\\\\n        allowDecimal={boolean('allowDecimal', false)}\\\\n        roundingoffDigit={number('roundingoffDigit', 3)}\\\\n      />\\\\n    </Box>\\\\n  </ThemeWrapper>\\\\n)\\\\n\\\\nexport const DefaultFieldWithInitialValue = () => (\\\\n  <ThemeWrapper>\\\\n    <Box p='1em'>\\\\n      <NumberInput\\\\n        id='someId'\\\\n        name='someName'\\\\n        className='someClassName'\\\\n        label={text('label', 'Number Input')}\\\\n        labelColor={text('labelColor', 'text.inputLabel.default')}\\\\n        placeholder={text('placeholder', 'Enter number here...')}\\\\n        initialValue={number('initialValue', 25)}\\\\n        maxLength={number('maxLength', 10)}\\\\n        error={boolean('error', false)}\\\\n        errorMessage={text('errorMessage', '')}\\\\n        required={boolean('required', false)}\\\\n        fullWidth={boolean('fullWidth', false)}\\\\n        onChange={action('Triggered: onChange')}\\\\n        allowDecimal={boolean('allowDecimal', false)}\\\\n      />\\\\n    </Box>\\\\n  </ThemeWrapper>\\\\n)\\\\n\\\\nexport const DecimalField = () => (\\\\n  <ThemeWrapper>\\\\n    <Box p='1em'>\\\\n      <NumberInput\\\\n        id='someId'\\\\n        name='someName'\\\\n        className='someClassName'\\\\n        label={text('label', 'Number Input')}\\\\n        labelColor={text('labelColor', 'text.inputLabel.default')}\\\\n        placeholder={text('placeholder', 'Enter number here...')}\\\\n        maxLength={number('maxLength', 10)}\\\\n        error={boolean('error', false)}\\\\n        errorMessage={text('errorMessage', '')}\\\\n        required={boolean('required', false)}\\\\n        fullWidth={boolean('fullWidth', false)}\\\\n        onChange={action('Triggered: onChange')}\\\\n        allowDecimal={boolean('allowDecimal', true)}\\\\n        roundingoffDigit={number('roundingoffDigit', 3)}\\\\n      />\\\\n    </Box>\\\\n  </ThemeWrapper>\\\\n)\\\\n\\\\nexport const RequiredField = () => (\\\\n  <ThemeWrapper>\\\\n    <Box p='1em'>\\\\n      <NumberInput\\\\n        id='someId'\\\\n        name='someName'\\\\n        className='someClassName'\\\\n        label={text('label', 'Number Input')}\\\\n        labelColor={text('labelColor', 'text.inputLabel.default')}\\\\n        placeholder={text('placeholder', 'Enter number here...')}\\\\n        maxLength={number('maxLength', 10)}\\\\n        error={boolean('error', false)}\\\\n        errorMessage={text('errorMessage', '')}\\\\n        required={boolean('required', true)}\\\\n        fullWidth={boolean('fullWidth', false)}\\\\n        onChange={action('Triggered: onChange')}\\\\n      />\\\\n    </Box>\\\\n  </ThemeWrapper>\\\\n)\\\\n\\\\nexport const ErrorField = () => (\\\\n  <ThemeWrapper>\\\\n    <Box p='1em'>\\\\n      <NumberInput\\\\n        id='someId'\\\\n        name='someName'\\\\n        className='someClassName'\\\\n        label={text('label', 'Number Input')}\\\\n        labelColor={text('labelColor', 'text.inputLabel.default')}\\\\n        placeholder={text('placeholder', 'Enter number here...')}\\\\n        maxLength={number('maxLength', 10)}\\\\n        error={boolean('error', true)}\\\\n        errorMessage={text('errorMessage', 'Some Field Error')}\\\\n        required={boolean('required', false)}\\\\n        fullWidth={boolean('fullWidth', true)}\\\\n        onChange={action('Triggered: onChange')}\\\\n      />\\\\n    </Box>\\\\n  </ThemeWrapper>\\\\n)\\\\n\\\\nexport const WithOutBorder = () => (\\\\n  <ThemeWrapper>\\\\n    <Box bgColor='grey.100' p='2em'>\\\\n      <NumberInput\\\\n        id='someId'\\\\n        name='someName'\\\\n        className='someClassName'\\\\n        maxLength={number('maxLength', 10)}\\\\n        error={boolean('error', false)}\\\\n        onChange={action('Triggered: onChange')}\\\\n        variant='inline-edit'\\\\n      />\\\\n    </Box>\\\\n  </ThemeWrapper>\\\\n)\\\\n\\\";\\n// @ts-ignore\\nvar __ADDS_MAP__ = {};\\n// @ts-ignore\\nvar __MAIN_FILE_LOCATION__ = \\\"/NumberInput.stories.tsx\\\";\\n// @ts-ignore\\nvar __MODULE_DEPENDENCIES__ = [];\\n// @ts-ignore\\nvar __LOCAL_DEPENDENCIES__ = {};\\n// @ts-ignore\\nvar __IDS_TO_FRAMEWORKS__ = {};\\n        \\nimport React from 'react'\\nimport NumberInput from '.'\\nimport Box from '../../atoms/Box'\\nimport { path } from '..'\\n\\nimport { action } from '@storybook/addon-actions'\\nimport { boolean, number, text } from '@storybook/addon-knobs'\\nimport ThemeWrapper from '../../../utilities/components/ThemeWrapper'\\n\\nexport default {parameters: {\\\"storySource\\\":{\\\"source\\\":\\\"import React from 'react'\\\\nimport NumberInput from '.'\\\\nimport Box from '../../atoms/Box'\\\\nimport { path } from '..'\\\\n\\\\nimport { action } from '@storybook/addon-actions'\\\\nimport { boolean, number, text } from '@storybook/addon-knobs'\\\\nimport ThemeWrapper from '../../../utilities/components/ThemeWrapper'\\\\n\\\\nexport default {\\\\n  title: `${path}/NumberInput`,\\\\n  component: NumberInput\\\\n}\\\\n\\\\nexport const DefaultField = () => (\\\\n  <ThemeWrapper>\\\\n    <Box p='1em'>\\\\n      <NumberInput\\\\n        id='someId'\\\\n        name='someName'\\\\n        className='someClassName'\\\\n        label={text('label', 'Number Input')}\\\\n        labelColor={text('labelColor', 'text.inputLabel.default')}\\\\n        placeholder={text('placeholder', 'Enter number here...')}\\\\n        maxLength={number('maxLength', 10)}\\\\n        error={boolean('error', false)}\\\\n        errorMessage={text('errorMessage', '')}\\\\n        required={boolean('required', false)}\\\\n        fullWidth={boolean('fullWidth', false)}\\\\n        onChange={action('Triggered: onChange')}\\\\n        allowDecimal={boolean('allowDecimal', false)}\\\\n        roundingoffDigit={number('roundingoffDigit', 3)}\\\\n      />\\\\n    </Box>\\\\n  </ThemeWrapper>\\\\n)\\\\n\\\\nexport const DefaultFieldWithInitialValue = () => (\\\\n  <ThemeWrapper>\\\\n    <Box p='1em'>\\\\n      <NumberInput\\\\n        id='someId'\\\\n        name='someName'\\\\n        className='someClassName'\\\\n        label={text('label', 'Number Input')}\\\\n        labelColor={text('labelColor', 'text.inputLabel.default')}\\\\n        placeholder={text('placeholder', 'Enter number here...')}\\\\n        initialValue={number('initialValue', 25)}\\\\n        maxLength={number('maxLength', 10)}\\\\n        error={boolean('error', false)}\\\\n        errorMessage={text('errorMessage', '')}\\\\n        required={boolean('required', false)}\\\\n        fullWidth={boolean('fullWidth', false)}\\\\n        onChange={action('Triggered: onChange')}\\\\n        allowDecimal={boolean('allowDecimal', false)}\\\\n      />\\\\n    </Box>\\\\n  </ThemeWrapper>\\\\n)\\\\n\\\\nexport const DecimalField = () => (\\\\n  <ThemeWrapper>\\\\n    <Box p='1em'>\\\\n      <NumberInput\\\\n        id='someId'\\\\n        name='someName'\\\\n        className='someClassName'\\\\n        label={text('label', 'Number Input')}\\\\n        labelColor={text('labelColor', 'text.inputLabel.default')}\\\\n        placeholder={text('placeholder', 'Enter number here...')}\\\\n        maxLength={number('maxLength', 10)}\\\\n        error={boolean('error', false)}\\\\n        errorMessage={text('errorMessage', '')}\\\\n        required={boolean('required', false)}\\\\n        fullWidth={boolean('fullWidth', false)}\\\\n        onChange={action('Triggered: onChange')}\\\\n        allowDecimal={boolean('allowDecimal', true)}\\\\n        roundingoffDigit={number('roundingoffDigit', 3)}\\\\n      />\\\\n    </Box>\\\\n  </ThemeWrapper>\\\\n)\\\\n\\\\nexport const RequiredField = () => (\\\\n  <ThemeWrapper>\\\\n    <Box p='1em'>\\\\n      <NumberInput\\\\n        id='someId'\\\\n        name='someName'\\\\n        className='someClassName'\\\\n        label={text('label', 'Number Input')}\\\\n        labelColor={text('labelColor', 'text.inputLabel.default')}\\\\n        placeholder={text('placeholder', 'Enter number here...')}\\\\n        maxLength={number('maxLength', 10)}\\\\n        error={boolean('error', false)}\\\\n        errorMessage={text('errorMessage', '')}\\\\n        required={boolean('required', true)}\\\\n        fullWidth={boolean('fullWidth', false)}\\\\n        onChange={action('Triggered: onChange')}\\\\n      />\\\\n    </Box>\\\\n  </ThemeWrapper>\\\\n)\\\\n\\\\nexport const ErrorField = () => (\\\\n  <ThemeWrapper>\\\\n    <Box p='1em'>\\\\n      <NumberInput\\\\n        id='someId'\\\\n        name='someName'\\\\n        className='someClassName'\\\\n        label={text('label', 'Number Input')}\\\\n        labelColor={text('labelColor', 'text.inputLabel.default')}\\\\n        placeholder={text('placeholder', 'Enter number here...')}\\\\n        maxLength={number('maxLength', 10)}\\\\n        error={boolean('error', true)}\\\\n        errorMessage={text('errorMessage', 'Some Field Error')}\\\\n        required={boolean('required', false)}\\\\n        fullWidth={boolean('fullWidth', true)}\\\\n        onChange={action('Triggered: onChange')}\\\\n      />\\\\n    </Box>\\\\n  </ThemeWrapper>\\\\n)\\\\n\\\\nexport const WithOutBorder = () => (\\\\n  <ThemeWrapper>\\\\n    <Box bgColor='grey.100' p='2em'>\\\\n      <NumberInput\\\\n        id='someId'\\\\n        name='someName'\\\\n        className='someClassName'\\\\n        maxLength={number('maxLength', 10)}\\\\n        error={boolean('error', false)}\\\\n        onChange={action('Triggered: onChange')}\\\\n        variant='inline-edit'\\\\n      />\\\\n    </Box>\\\\n  </ThemeWrapper>\\\\n)\\\\n\\\",\\\"locationsMap\\\":{}},},\\n  title: `${path}/NumberInput`,\\n  component: NumberInput\\n}\\n\\nexport const DefaultField = addSourceDecorator(() => (\\n  <ThemeWrapper>\\n    <Box p='1em'>\\n      <NumberInput\\n        id='someId'\\n        name='someName'\\n        className='someClassName'\\n        label={text('label', 'Number Input')}\\n        labelColor={text('labelColor', 'text.inputLabel.default')}\\n        placeholder={text('placeholder', 'Enter number here...')}\\n        maxLength={number('maxLength', 10)}\\n        error={boolean('error', false)}\\n        errorMessage={text('errorMessage', '')}\\n        required={boolean('required', false)}\\n        fullWidth={boolean('fullWidth', false)}\\n        onChange={action('Triggered: onChange')}\\n        allowDecimal={boolean('allowDecimal', false)}\\n        roundingoffDigit={number('roundingoffDigit', 3)}\\n      />\\n    </Box>\\n  </ThemeWrapper>\\n), {__STORY__, __ADDS_MAP__,__MAIN_FILE_LOCATION__,__MODULE_DEPENDENCIES__,__LOCAL_DEPENDENCIES__,__SOURCE_PREFIX__,__IDS_TO_FRAMEWORKS__});\\n\\nexport const DefaultFieldWithInitialValue = addSourceDecorator(() => (\\n  <ThemeWrapper>\\n    <Box p='1em'>\\n      <NumberInput\\n        id='someId'\\n        name='someName'\\n        className='someClassName'\\n        label={text('label', 'Number Input')}\\n        labelColor={text('labelColor', 'text.inputLabel.default')}\\n        placeholder={text('placeholder', 'Enter number here...')}\\n        initialValue={number('initialValue', 25)}\\n        maxLength={number('maxLength', 10)}\\n        error={boolean('error', false)}\\n        errorMessage={text('errorMessage', '')}\\n        required={boolean('required', false)}\\n        fullWidth={boolean('fullWidth', false)}\\n        onChange={action('Triggered: onChange')}\\n        allowDecimal={boolean('allowDecimal', false)}\\n      />\\n    </Box>\\n  </ThemeWrapper>\\n), {__STORY__, __ADDS_MAP__,__MAIN_FILE_LOCATION__,__MODULE_DEPENDENCIES__,__LOCAL_DEPENDENCIES__,__SOURCE_PREFIX__,__IDS_TO_FRAMEWORKS__});\\n\\nexport const DecimalField = addSourceDecorator(() => (\\n  <ThemeWrapper>\\n    <Box p='1em'>\\n      <NumberInput\\n        id='someId'\\n        name='someName'\\n        className='someClassName'\\n        label={text('label', 'Number Input')}\\n        labelColor={text('labelColor', 'text.inputLabel.default')}\\n        placeholder={text('placeholder', 'Enter number here...')}\\n        maxLength={number('maxLength', 10)}\\n        error={boolean('error', false)}\\n        errorMessage={text('errorMessage', '')}\\n        required={boolean('required', false)}\\n        fullWidth={boolean('fullWidth', false)}\\n        onChange={action('Triggered: onChange')}\\n        allowDecimal={boolean('allowDecimal', true)}\\n        roundingoffDigit={number('roundingoffDigit', 3)}\\n      />\\n    </Box>\\n  </ThemeWrapper>\\n), {__STORY__, __ADDS_MAP__,__MAIN_FILE_LOCATION__,__MODULE_DEPENDENCIES__,__LOCAL_DEPENDENCIES__,__SOURCE_PREFIX__,__IDS_TO_FRAMEWORKS__});\\n\\nexport const RequiredField = addSourceDecorator(() => (\\n  <ThemeWrapper>\\n    <Box p='1em'>\\n      <NumberInput\\n        id='someId'\\n        name='someName'\\n        className='someClassName'\\n        label={text('label', 'Number Input')}\\n        labelColor={text('labelColor', 'text.inputLabel.default')}\\n        placeholder={text('placeholder', 'Enter number here...')}\\n        maxLength={number('maxLength', 10)}\\n        error={boolean('error', false)}\\n        errorMessage={text('errorMessage', '')}\\n        required={boolean('required', true)}\\n        fullWidth={boolean('fullWidth', false)}\\n        onChange={action('Triggered: onChange')}\\n      />\\n    </Box>\\n  </ThemeWrapper>\\n), {__STORY__, __ADDS_MAP__,__MAIN_FILE_LOCATION__,__MODULE_DEPENDENCIES__,__LOCAL_DEPENDENCIES__,__SOURCE_PREFIX__,__IDS_TO_FRAMEWORKS__});\\n\\nexport const ErrorField = addSourceDecorator(() => (\\n  <ThemeWrapper>\\n    <Box p='1em'>\\n      <NumberInput\\n        id='someId'\\n        name='someName'\\n        className='someClassName'\\n        label={text('label', 'Number Input')}\\n        labelColor={text('labelColor', 'text.inputLabel.default')}\\n        placeholder={text('placeholder', 'Enter number here...')}\\n        maxLength={number('maxLength', 10)}\\n        error={boolean('error', true)}\\n        errorMessage={text('errorMessage', 'Some Field Error')}\\n        required={boolean('required', false)}\\n        fullWidth={boolean('fullWidth', true)}\\n        onChange={action('Triggered: onChange')}\\n      />\\n    </Box>\\n  </ThemeWrapper>\\n), {__STORY__, __ADDS_MAP__,__MAIN_FILE_LOCATION__,__MODULE_DEPENDENCIES__,__LOCAL_DEPENDENCIES__,__SOURCE_PREFIX__,__IDS_TO_FRAMEWORKS__});\\n\\nexport const WithOutBorder = addSourceDecorator(() => (\\n  <ThemeWrapper>\\n    <Box bgColor='grey.100' p='2em'>\\n      <NumberInput\\n        id='someId'\\n        name='someName'\\n        className='someClassName'\\n        maxLength={number('maxLength', 10)}\\n        error={boolean('error', false)}\\n        onChange={action('Triggered: onChange')}\\n        variant='inline-edit'\\n      />\\n    </Box>\\n  </ThemeWrapper>\\n), {__STORY__, __ADDS_MAP__,__MAIN_FILE_LOCATION__,__MODULE_DEPENDENCIES__,__LOCAL_DEPENDENCIES__,__SOURCE_PREFIX__,__IDS_TO_FRAMEWORKS__});\";\n// @ts-ignore\nvar __ADDS_MAP__ = {};\n// @ts-ignore\nvar __MAIN_FILE_LOCATION__ = \"/NumberInput.stories.tsx\";\n// @ts-ignore\nvar __MODULE_DEPENDENCIES__ = [];\n// @ts-ignore\nvar __LOCAL_DEPENDENCIES__ = {};\n// @ts-ignore\nvar __IDS_TO_FRAMEWORKS__ = {};\n        \n\n/* eslint-disable */\n// @ts-nocheck\n// @ts-ignore\nvar withSourceLoader = require('@storybook/source-loader/preview').withSource;\n// @ts-ignore\nvar addSourceDecorator = require(\"@storybook/source-loader/preview\").addSource;\n// @ts-ignore\nvar __SOURCE_PREFIX__ = \"/Users/farhanansari/Code/ui-library/src/components/molecules/NumberInput\";\n// @ts-ignore\nvar __STORY__ = \"import React from 'react'\\nimport NumberInput from '.'\\nimport Box from '../../atoms/Box'\\nimport { path } from '..'\\n\\nimport { action } from '@storybook/addon-actions'\\nimport { boolean, number, text } from '@storybook/addon-knobs'\\nimport ThemeWrapper from '../../../utilities/components/ThemeWrapper'\\n\\nexport default {\\n  title: `${path}/NumberInput`,\\n  component: NumberInput\\n}\\n\\nexport const DefaultField = () => (\\n  <ThemeWrapper>\\n    <Box p='1em'>\\n      <NumberInput\\n        id='someId'\\n        name='someName'\\n        className='someClassName'\\n        label={text('label', 'Number Input')}\\n        labelColor={text('labelColor', 'text.inputLabel.default')}\\n        placeholder={text('placeholder', 'Enter number here...')}\\n        maxLength={number('maxLength', 10)}\\n        error={boolean('error', false)}\\n        errorMessage={text('errorMessage', '')}\\n        required={boolean('required', false)}\\n        fullWidth={boolean('fullWidth', false)}\\n        onChange={action('Triggered: onChange')}\\n        allowDecimal={boolean('allowDecimal', false)}\\n        roundingoffDigit={number('roundingoffDigit', 3)}\\n      />\\n    </Box>\\n  </ThemeWrapper>\\n)\\n\\nexport const DefaultFieldWithInitialValue = () => (\\n  <ThemeWrapper>\\n    <Box p='1em'>\\n      <NumberInput\\n        id='someId'\\n        name='someName'\\n        className='someClassName'\\n        label={text('label', 'Number Input')}\\n        labelColor={text('labelColor', 'text.inputLabel.default')}\\n        placeholder={text('placeholder', 'Enter number here...')}\\n        initialValue={number('initialValue', 25)}\\n        maxLength={number('maxLength', 10)}\\n        error={boolean('error', false)}\\n        errorMessage={text('errorMessage', '')}\\n        required={boolean('required', false)}\\n        fullWidth={boolean('fullWidth', false)}\\n        onChange={action('Triggered: onChange')}\\n        allowDecimal={boolean('allowDecimal', false)}\\n      />\\n    </Box>\\n  </ThemeWrapper>\\n)\\n\\nexport const DecimalField = () => (\\n  <ThemeWrapper>\\n    <Box p='1em'>\\n      <NumberInput\\n        id='someId'\\n        name='someName'\\n        className='someClassName'\\n        label={text('label', 'Number Input')}\\n        labelColor={text('labelColor', 'text.inputLabel.default')}\\n        placeholder={text('placeholder', 'Enter number here...')}\\n        maxLength={number('maxLength', 10)}\\n        error={boolean('error', false)}\\n        errorMessage={text('errorMessage', '')}\\n        required={boolean('required', false)}\\n        fullWidth={boolean('fullWidth', false)}\\n        onChange={action('Triggered: onChange')}\\n        allowDecimal={boolean('allowDecimal', true)}\\n        roundingoffDigit={number('roundingoffDigit', 3)}\\n      />\\n    </Box>\\n  </ThemeWrapper>\\n)\\n\\nexport const RequiredField = () => (\\n  <ThemeWrapper>\\n    <Box p='1em'>\\n      <NumberInput\\n        id='someId'\\n        name='someName'\\n        className='someClassName'\\n        label={text('label', 'Number Input')}\\n        labelColor={text('labelColor', 'text.inputLabel.default')}\\n        placeholder={text('placeholder', 'Enter number here...')}\\n        maxLength={number('maxLength', 10)}\\n        error={boolean('error', false)}\\n        errorMessage={text('errorMessage', '')}\\n        required={boolean('required', true)}\\n        fullWidth={boolean('fullWidth', false)}\\n        onChange={action('Triggered: onChange')}\\n      />\\n    </Box>\\n  </ThemeWrapper>\\n)\\n\\nexport const ErrorField = () => (\\n  <ThemeWrapper>\\n    <Box p='1em'>\\n      <NumberInput\\n        id='someId'\\n        name='someName'\\n        className='someClassName'\\n        label={text('label', 'Number Input')}\\n        labelColor={text('labelColor', 'text.inputLabel.default')}\\n        placeholder={text('placeholder', 'Enter number here...')}\\n        maxLength={number('maxLength', 10)}\\n        error={boolean('error', true)}\\n        errorMessage={text('errorMessage', 'Some Field Error')}\\n        required={boolean('required', false)}\\n        fullWidth={boolean('fullWidth', true)}\\n        onChange={action('Triggered: onChange')}\\n      />\\n    </Box>\\n  </ThemeWrapper>\\n)\\n\\nexport const WithOutBorder = () => (\\n  <ThemeWrapper>\\n    <Box bgColor='grey.100' p='2em'>\\n      <NumberInput\\n        id='someId'\\n        name='someName'\\n        className='someClassName'\\n        maxLength={number('maxLength', 10)}\\n        error={boolean('error', false)}\\n        onChange={action('Triggered: onChange')}\\n        variant='inline-edit'\\n      />\\n    </Box>\\n  </ThemeWrapper>\\n)\\n\";\n// @ts-ignore\nvar __ADDS_MAP__ = {};\n// @ts-ignore\nvar __MAIN_FILE_LOCATION__ = \"/NumberInput.stories.tsx\";\n// @ts-ignore\nvar __MODULE_DEPENDENCIES__ = [];\n// @ts-ignore\nvar __LOCAL_DEPENDENCIES__ = {};\n// @ts-ignore\nvar __IDS_TO_FRAMEWORKS__ = {};\n        \nimport React from 'react'\nimport NumberInput from '.'\nimport Box from '../../atoms/Box'\nimport { path } from '..'\n\nimport { action } from '@storybook/addon-actions'\nimport { boolean, number, text } from '@storybook/addon-knobs'\nimport ThemeWrapper from '../../../utilities/components/ThemeWrapper'\n\nexport default {parameters: {\"storySource\":{\"source\":\"\\n\\n// @ts-nocheck\\n// @ts-ignore\\nvar withSourceLoader = require('@storybook/source-loader/preview').withSource;\\n// @ts-ignore\\nvar addSourceDecorator = require(\\\"@storybook/source-loader/preview\\\").addSource;\\n// @ts-ignore\\nvar __SOURCE_PREFIX__ = \\\"/Users/farhanansari/Code/ui-library/src/components/molecules/NumberInput\\\";\\n// @ts-ignore\\nvar __STORY__ = \\\"\\\\n\\\\n// @ts-nocheck\\\\n// @ts-ignore\\\\nvar withSourceLoader = require('@storybook/source-loader/preview').withSource;\\\\n// @ts-ignore\\\\nvar addSourceDecorator = require(\\\\\\\"@storybook/source-loader/preview\\\\\\\").addSource;\\\\n// @ts-ignore\\\\nvar __SOURCE_PREFIX__ = \\\\\\\"/Users/farhanansari/Code/ui-library/src/components/molecules/NumberInput\\\\\\\";\\\\n// @ts-ignore\\\\nvar __STORY__ = \\\\\\\"import React from 'react'\\\\\\\\nimport NumberInput from '.'\\\\\\\\nimport Box from '../../atoms/Box'\\\\\\\\nimport { path } from '..'\\\\\\\\n\\\\\\\\nimport { action } from '@storybook/addon-actions'\\\\\\\\nimport { boolean, number, text } from '@storybook/addon-knobs'\\\\\\\\nimport ThemeWrapper from '../../../utilities/components/ThemeWrapper'\\\\\\\\n\\\\\\\\nexport default {\\\\\\\\n  title: `${path}/NumberInput`,\\\\\\\\n  component: NumberInput\\\\\\\\n}\\\\\\\\n\\\\\\\\nexport const DefaultField = () => (\\\\\\\\n  <ThemeWrapper>\\\\\\\\n    <Box p='1em'>\\\\\\\\n      <NumberInput\\\\\\\\n        id='someId'\\\\\\\\n        name='someName'\\\\\\\\n        className='someClassName'\\\\\\\\n        label={text('label', 'Number Input')}\\\\\\\\n        labelColor={text('labelColor', 'text.inputLabel.default')}\\\\\\\\n        placeholder={text('placeholder', 'Enter number here...')}\\\\\\\\n        maxLength={number('maxLength', 10)}\\\\\\\\n        error={boolean('error', false)}\\\\\\\\n        errorMessage={text('errorMessage', '')}\\\\\\\\n        required={boolean('required', false)}\\\\\\\\n        fullWidth={boolean('fullWidth', false)}\\\\\\\\n        onChange={action('Triggered: onChange')}\\\\\\\\n        allowDecimal={boolean('allowDecimal', false)}\\\\\\\\n        roundingoffDigit={number('roundingoffDigit', 3)}\\\\\\\\n      />\\\\\\\\n    </Box>\\\\\\\\n  </ThemeWrapper>\\\\\\\\n)\\\\\\\\n\\\\\\\\nexport const DefaultFieldWithInitialValue = () => (\\\\\\\\n  <ThemeWrapper>\\\\\\\\n    <Box p='1em'>\\\\\\\\n      <NumberInput\\\\\\\\n        id='someId'\\\\\\\\n        name='someName'\\\\\\\\n        className='someClassName'\\\\\\\\n        label={text('label', 'Number Input')}\\\\\\\\n        labelColor={text('labelColor', 'text.inputLabel.default')}\\\\\\\\n        placeholder={text('placeholder', 'Enter number here...')}\\\\\\\\n        initialValue={number('initialValue', 25)}\\\\\\\\n        maxLength={number('maxLength', 10)}\\\\\\\\n        error={boolean('error', false)}\\\\\\\\n        errorMessage={text('errorMessage', '')}\\\\\\\\n        required={boolean('required', false)}\\\\\\\\n        fullWidth={boolean('fullWidth', false)}\\\\\\\\n        onChange={action('Triggered: onChange')}\\\\\\\\n        allowDecimal={boolean('allowDecimal', false)}\\\\\\\\n      />\\\\\\\\n    </Box>\\\\\\\\n  </ThemeWrapper>\\\\\\\\n)\\\\\\\\n\\\\\\\\nexport const DecimalField = () => (\\\\\\\\n  <ThemeWrapper>\\\\\\\\n    <Box p='1em'>\\\\\\\\n      <NumberInput\\\\\\\\n        id='someId'\\\\\\\\n        name='someName'\\\\\\\\n        className='someClassName'\\\\\\\\n        label={text('label', 'Number Input')}\\\\\\\\n        labelColor={text('labelColor', 'text.inputLabel.default')}\\\\\\\\n        placeholder={text('placeholder', 'Enter number here...')}\\\\\\\\n        maxLength={number('maxLength', 10)}\\\\\\\\n        error={boolean('error', false)}\\\\\\\\n        errorMessage={text('errorMessage', '')}\\\\\\\\n        required={boolean('required', false)}\\\\\\\\n        fullWidth={boolean('fullWidth', false)}\\\\\\\\n        onChange={action('Triggered: onChange')}\\\\\\\\n        allowDecimal={boolean('allowDecimal', true)}\\\\\\\\n        roundingoffDigit={number('roundingoffDigit', 3)}\\\\\\\\n      />\\\\\\\\n    </Box>\\\\\\\\n  </ThemeWrapper>\\\\\\\\n)\\\\\\\\n\\\\\\\\nexport const RequiredField = () => (\\\\\\\\n  <ThemeWrapper>\\\\\\\\n    <Box p='1em'>\\\\\\\\n      <NumberInput\\\\\\\\n        id='someId'\\\\\\\\n        name='someName'\\\\\\\\n        className='someClassName'\\\\\\\\n        label={text('label', 'Number Input')}\\\\\\\\n        labelColor={text('labelColor', 'text.inputLabel.default')}\\\\\\\\n        placeholder={text('placeholder', 'Enter number here...')}\\\\\\\\n        maxLength={number('maxLength', 10)}\\\\\\\\n        error={boolean('error', false)}\\\\\\\\n        errorMessage={text('errorMessage', '')}\\\\\\\\n        required={boolean('required', true)}\\\\\\\\n        fullWidth={boolean('fullWidth', false)}\\\\\\\\n        onChange={action('Triggered: onChange')}\\\\\\\\n      />\\\\\\\\n    </Box>\\\\\\\\n  </ThemeWrapper>\\\\\\\\n)\\\\\\\\n\\\\\\\\nexport const ErrorField = () => (\\\\\\\\n  <ThemeWrapper>\\\\\\\\n    <Box p='1em'>\\\\\\\\n      <NumberInput\\\\\\\\n        id='someId'\\\\\\\\n        name='someName'\\\\\\\\n        className='someClassName'\\\\\\\\n        label={text('label', 'Number Input')}\\\\\\\\n        labelColor={text('labelColor', 'text.inputLabel.default')}\\\\\\\\n        placeholder={text('placeholder', 'Enter number here...')}\\\\\\\\n        maxLength={number('maxLength', 10)}\\\\\\\\n        error={boolean('error', true)}\\\\\\\\n        errorMessage={text('errorMessage', 'Some Field Error')}\\\\\\\\n        required={boolean('required', false)}\\\\\\\\n        fullWidth={boolean('fullWidth', true)}\\\\\\\\n        onChange={action('Triggered: onChange')}\\\\\\\\n      />\\\\\\\\n    </Box>\\\\\\\\n  </ThemeWrapper>\\\\\\\\n)\\\\\\\\n\\\\\\\\nexport const WithOutBorder = () => (\\\\\\\\n  <ThemeWrapper>\\\\\\\\n    <Box bgColor='grey.100' p='2em'>\\\\\\\\n      <NumberInput\\\\\\\\n        id='someId'\\\\\\\\n        name='someName'\\\\\\\\n        className='someClassName'\\\\\\\\n        maxLength={number('maxLength', 10)}\\\\\\\\n        error={boolean('error', false)}\\\\\\\\n        onChange={action('Triggered: onChange')}\\\\\\\\n        variant='inline-edit'\\\\\\\\n      />\\\\\\\\n    </Box>\\\\\\\\n  </ThemeWrapper>\\\\\\\\n)\\\\\\\\n\\\\\\\";\\\\n// @ts-ignore\\\\nvar __ADDS_MAP__ = {};\\\\n// @ts-ignore\\\\nvar __MAIN_FILE_LOCATION__ = \\\\\\\"/NumberInput.stories.tsx\\\\\\\";\\\\n// @ts-ignore\\\\nvar __MODULE_DEPENDENCIES__ = [];\\\\n// @ts-ignore\\\\nvar __LOCAL_DEPENDENCIES__ = {};\\\\n// @ts-ignore\\\\nvar __IDS_TO_FRAMEWORKS__ = {};\\\\n        \\\\nimport React from 'react'\\\\nimport NumberInput from '.'\\\\nimport Box from '../../atoms/Box'\\\\nimport { path } from '..'\\\\n\\\\nimport { action } from '@storybook/addon-actions'\\\\nimport { boolean, number, text } from '@storybook/addon-knobs'\\\\nimport ThemeWrapper from '../../../utilities/components/ThemeWrapper'\\\\n\\\\nexport default {parameters: {\\\\\\\"storySource\\\\\\\":{\\\\\\\"source\\\\\\\":\\\\\\\"import React from 'react'\\\\\\\\nimport NumberInput from '.'\\\\\\\\nimport Box from '../../atoms/Box'\\\\\\\\nimport { path } from '..'\\\\\\\\n\\\\\\\\nimport { action } from '@storybook/addon-actions'\\\\\\\\nimport { boolean, number, text } from '@storybook/addon-knobs'\\\\\\\\nimport ThemeWrapper from '../../../utilities/components/ThemeWrapper'\\\\\\\\n\\\\\\\\nexport default {\\\\\\\\n  title: `${path}/NumberInput`,\\\\\\\\n  component: NumberInput\\\\\\\\n}\\\\\\\\n\\\\\\\\nexport const DefaultField = () => (\\\\\\\\n  <ThemeWrapper>\\\\\\\\n    <Box p='1em'>\\\\\\\\n      <NumberInput\\\\\\\\n        id='someId'\\\\\\\\n        name='someName'\\\\\\\\n        className='someClassName'\\\\\\\\n        label={text('label', 'Number Input')}\\\\\\\\n        labelColor={text('labelColor', 'text.inputLabel.default')}\\\\\\\\n        placeholder={text('placeholder', 'Enter number here...')}\\\\\\\\n        maxLength={number('maxLength', 10)}\\\\\\\\n        error={boolean('error', false)}\\\\\\\\n        errorMessage={text('errorMessage', '')}\\\\\\\\n        required={boolean('required', false)}\\\\\\\\n        fullWidth={boolean('fullWidth', false)}\\\\\\\\n        onChange={action('Triggered: onChange')}\\\\\\\\n        allowDecimal={boolean('allowDecimal', false)}\\\\\\\\n        roundingoffDigit={number('roundingoffDigit', 3)}\\\\\\\\n      />\\\\\\\\n    </Box>\\\\\\\\n  </ThemeWrapper>\\\\\\\\n)\\\\\\\\n\\\\\\\\nexport const DefaultFieldWithInitialValue = () => (\\\\\\\\n  <ThemeWrapper>\\\\\\\\n    <Box p='1em'>\\\\\\\\n      <NumberInput\\\\\\\\n        id='someId'\\\\\\\\n        name='someName'\\\\\\\\n        className='someClassName'\\\\\\\\n        label={text('label', 'Number Input')}\\\\\\\\n        labelColor={text('labelColor', 'text.inputLabel.default')}\\\\\\\\n        placeholder={text('placeholder', 'Enter number here...')}\\\\\\\\n        initialValue={number('initialValue', 25)}\\\\\\\\n        maxLength={number('maxLength', 10)}\\\\\\\\n        error={boolean('error', false)}\\\\\\\\n        errorMessage={text('errorMessage', '')}\\\\\\\\n        required={boolean('required', false)}\\\\\\\\n        fullWidth={boolean('fullWidth', false)}\\\\\\\\n        onChange={action('Triggered: onChange')}\\\\\\\\n        allowDecimal={boolean('allowDecimal', false)}\\\\\\\\n      />\\\\\\\\n    </Box>\\\\\\\\n  </ThemeWrapper>\\\\\\\\n)\\\\\\\\n\\\\\\\\nexport const DecimalField = () => (\\\\\\\\n  <ThemeWrapper>\\\\\\\\n    <Box p='1em'>\\\\\\\\n      <NumberInput\\\\\\\\n        id='someId'\\\\\\\\n        name='someName'\\\\\\\\n        className='someClassName'\\\\\\\\n        label={text('label', 'Number Input')}\\\\\\\\n        labelColor={text('labelColor', 'text.inputLabel.default')}\\\\\\\\n        placeholder={text('placeholder', 'Enter number here...')}\\\\\\\\n        maxLength={number('maxLength', 10)}\\\\\\\\n        error={boolean('error', false)}\\\\\\\\n        errorMessage={text('errorMessage', '')}\\\\\\\\n        required={boolean('required', false)}\\\\\\\\n        fullWidth={boolean('fullWidth', false)}\\\\\\\\n        onChange={action('Triggered: onChange')}\\\\\\\\n        allowDecimal={boolean('allowDecimal', true)}\\\\\\\\n        roundingoffDigit={number('roundingoffDigit', 3)}\\\\\\\\n      />\\\\\\\\n    </Box>\\\\\\\\n  </ThemeWrapper>\\\\\\\\n)\\\\\\\\n\\\\\\\\nexport const RequiredField = () => (\\\\\\\\n  <ThemeWrapper>\\\\\\\\n    <Box p='1em'>\\\\\\\\n      <NumberInput\\\\\\\\n        id='someId'\\\\\\\\n        name='someName'\\\\\\\\n        className='someClassName'\\\\\\\\n        label={text('label', 'Number Input')}\\\\\\\\n        labelColor={text('labelColor', 'text.inputLabel.default')}\\\\\\\\n        placeholder={text('placeholder', 'Enter number here...')}\\\\\\\\n        maxLength={number('maxLength', 10)}\\\\\\\\n        error={boolean('error', false)}\\\\\\\\n        errorMessage={text('errorMessage', '')}\\\\\\\\n        required={boolean('required', true)}\\\\\\\\n        fullWidth={boolean('fullWidth', false)}\\\\\\\\n        onChange={action('Triggered: onChange')}\\\\\\\\n      />\\\\\\\\n    </Box>\\\\\\\\n  </ThemeWrapper>\\\\\\\\n)\\\\\\\\n\\\\\\\\nexport const ErrorField = () => (\\\\\\\\n  <ThemeWrapper>\\\\\\\\n    <Box p='1em'>\\\\\\\\n      <NumberInput\\\\\\\\n        id='someId'\\\\\\\\n        name='someName'\\\\\\\\n        className='someClassName'\\\\\\\\n        label={text('label', 'Number Input')}\\\\\\\\n        labelColor={text('labelColor', 'text.inputLabel.default')}\\\\\\\\n        placeholder={text('placeholder', 'Enter number here...')}\\\\\\\\n        maxLength={number('maxLength', 10)}\\\\\\\\n        error={boolean('error', true)}\\\\\\\\n        errorMessage={text('errorMessage', 'Some Field Error')}\\\\\\\\n        required={boolean('required', false)}\\\\\\\\n        fullWidth={boolean('fullWidth', true)}\\\\\\\\n        onChange={action('Triggered: onChange')}\\\\\\\\n      />\\\\\\\\n    </Box>\\\\\\\\n  </ThemeWrapper>\\\\\\\\n)\\\\\\\\n\\\\\\\\nexport const WithOutBorder = () => (\\\\\\\\n  <ThemeWrapper>\\\\\\\\n    <Box bgColor='grey.100' p='2em'>\\\\\\\\n      <NumberInput\\\\\\\\n        id='someId'\\\\\\\\n        name='someName'\\\\\\\\n        className='someClassName'\\\\\\\\n        maxLength={number('maxLength', 10)}\\\\\\\\n        error={boolean('error', false)}\\\\\\\\n        onChange={action('Triggered: onChange')}\\\\\\\\n        variant='inline-edit'\\\\\\\\n      />\\\\\\\\n    </Box>\\\\\\\\n  </ThemeWrapper>\\\\\\\\n)\\\\\\\\n\\\\\\\",\\\\\\\"locationsMap\\\\\\\":{}},},\\\\n  title: `${path}/NumberInput`,\\\\n  component: NumberInput\\\\n}\\\\n\\\\nexport const DefaultField = addSourceDecorator(() => (\\\\n  <ThemeWrapper>\\\\n    <Box p='1em'>\\\\n      <NumberInput\\\\n        id='someId'\\\\n        name='someName'\\\\n        className='someClassName'\\\\n        label={text('label', 'Number Input')}\\\\n        labelColor={text('labelColor', 'text.inputLabel.default')}\\\\n        placeholder={text('placeholder', 'Enter number here...')}\\\\n        maxLength={number('maxLength', 10)}\\\\n        error={boolean('error', false)}\\\\n        errorMessage={text('errorMessage', '')}\\\\n        required={boolean('required', false)}\\\\n        fullWidth={boolean('fullWidth', false)}\\\\n        onChange={action('Triggered: onChange')}\\\\n        allowDecimal={boolean('allowDecimal', false)}\\\\n        roundingoffDigit={number('roundingoffDigit', 3)}\\\\n      />\\\\n    </Box>\\\\n  </ThemeWrapper>\\\\n), {__STORY__, __ADDS_MAP__,__MAIN_FILE_LOCATION__,__MODULE_DEPENDENCIES__,__LOCAL_DEPENDENCIES__,__SOURCE_PREFIX__,__IDS_TO_FRAMEWORKS__});\\\\n\\\\nexport const DefaultFieldWithInitialValue = addSourceDecorator(() => (\\\\n  <ThemeWrapper>\\\\n    <Box p='1em'>\\\\n      <NumberInput\\\\n        id='someId'\\\\n        name='someName'\\\\n        className='someClassName'\\\\n        label={text('label', 'Number Input')}\\\\n        labelColor={text('labelColor', 'text.inputLabel.default')}\\\\n        placeholder={text('placeholder', 'Enter number here...')}\\\\n        initialValue={number('initialValue', 25)}\\\\n        maxLength={number('maxLength', 10)}\\\\n        error={boolean('error', false)}\\\\n        errorMessage={text('errorMessage', '')}\\\\n        required={boolean('required', false)}\\\\n        fullWidth={boolean('fullWidth', false)}\\\\n        onChange={action('Triggered: onChange')}\\\\n        allowDecimal={boolean('allowDecimal', false)}\\\\n      />\\\\n    </Box>\\\\n  </ThemeWrapper>\\\\n), {__STORY__, __ADDS_MAP__,__MAIN_FILE_LOCATION__,__MODULE_DEPENDENCIES__,__LOCAL_DEPENDENCIES__,__SOURCE_PREFIX__,__IDS_TO_FRAMEWORKS__});\\\\n\\\\nexport const DecimalField = addSourceDecorator(() => (\\\\n  <ThemeWrapper>\\\\n    <Box p='1em'>\\\\n      <NumberInput\\\\n        id='someId'\\\\n        name='someName'\\\\n        className='someClassName'\\\\n        label={text('label', 'Number Input')}\\\\n        labelColor={text('labelColor', 'text.inputLabel.default')}\\\\n        placeholder={text('placeholder', 'Enter number here...')}\\\\n        maxLength={number('maxLength', 10)}\\\\n        error={boolean('error', false)}\\\\n        errorMessage={text('errorMessage', '')}\\\\n        required={boolean('required', false)}\\\\n        fullWidth={boolean('fullWidth', false)}\\\\n        onChange={action('Triggered: onChange')}\\\\n        allowDecimal={boolean('allowDecimal', true)}\\\\n        roundingoffDigit={number('roundingoffDigit', 3)}\\\\n      />\\\\n    </Box>\\\\n  </ThemeWrapper>\\\\n), {__STORY__, __ADDS_MAP__,__MAIN_FILE_LOCATION__,__MODULE_DEPENDENCIES__,__LOCAL_DEPENDENCIES__,__SOURCE_PREFIX__,__IDS_TO_FRAMEWORKS__});\\\\n\\\\nexport const RequiredField = addSourceDecorator(() => (\\\\n  <ThemeWrapper>\\\\n    <Box p='1em'>\\\\n      <NumberInput\\\\n        id='someId'\\\\n        name='someName'\\\\n        className='someClassName'\\\\n        label={text('label', 'Number Input')}\\\\n        labelColor={text('labelColor', 'text.inputLabel.default')}\\\\n        placeholder={text('placeholder', 'Enter number here...')}\\\\n        maxLength={number('maxLength', 10)}\\\\n        error={boolean('error', false)}\\\\n        errorMessage={text('errorMessage', '')}\\\\n        required={boolean('required', true)}\\\\n        fullWidth={boolean('fullWidth', false)}\\\\n        onChange={action('Triggered: onChange')}\\\\n      />\\\\n    </Box>\\\\n  </ThemeWrapper>\\\\n), {__STORY__, __ADDS_MAP__,__MAIN_FILE_LOCATION__,__MODULE_DEPENDENCIES__,__LOCAL_DEPENDENCIES__,__SOURCE_PREFIX__,__IDS_TO_FRAMEWORKS__});\\\\n\\\\nexport const ErrorField = addSourceDecorator(() => (\\\\n  <ThemeWrapper>\\\\n    <Box p='1em'>\\\\n      <NumberInput\\\\n        id='someId'\\\\n        name='someName'\\\\n        className='someClassName'\\\\n        label={text('label', 'Number Input')}\\\\n        labelColor={text('labelColor', 'text.inputLabel.default')}\\\\n        placeholder={text('placeholder', 'Enter number here...')}\\\\n        maxLength={number('maxLength', 10)}\\\\n        error={boolean('error', true)}\\\\n        errorMessage={text('errorMessage', 'Some Field Error')}\\\\n        required={boolean('required', false)}\\\\n        fullWidth={boolean('fullWidth', true)}\\\\n        onChange={action('Triggered: onChange')}\\\\n      />\\\\n    </Box>\\\\n  </ThemeWrapper>\\\\n), {__STORY__, __ADDS_MAP__,__MAIN_FILE_LOCATION__,__MODULE_DEPENDENCIES__,__LOCAL_DEPENDENCIES__,__SOURCE_PREFIX__,__IDS_TO_FRAMEWORKS__});\\\\n\\\\nexport const WithOutBorder = addSourceDecorator(() => (\\\\n  <ThemeWrapper>\\\\n    <Box bgColor='grey.100' p='2em'>\\\\n      <NumberInput\\\\n        id='someId'\\\\n        name='someName'\\\\n        className='someClassName'\\\\n        maxLength={number('maxLength', 10)}\\\\n        error={boolean('error', false)}\\\\n        onChange={action('Triggered: onChange')}\\\\n        variant='inline-edit'\\\\n      />\\\\n    </Box>\\\\n  </ThemeWrapper>\\\\n), {__STORY__, __ADDS_MAP__,__MAIN_FILE_LOCATION__,__MODULE_DEPENDENCIES__,__LOCAL_DEPENDENCIES__,__SOURCE_PREFIX__,__IDS_TO_FRAMEWORKS__});\\\";\\n// @ts-ignore\\nvar __ADDS_MAP__ = {};\\n// @ts-ignore\\nvar __MAIN_FILE_LOCATION__ = \\\"/NumberInput.stories.tsx\\\";\\n// @ts-ignore\\nvar __MODULE_DEPENDENCIES__ = [];\\n// @ts-ignore\\nvar __LOCAL_DEPENDENCIES__ = {};\\n// @ts-ignore\\nvar __IDS_TO_FRAMEWORKS__ = {};\\n        \\n\\n\\n// @ts-nocheck\\n// @ts-ignore\\nvar withSourceLoader = require('@storybook/source-loader/preview').withSource;\\n// @ts-ignore\\nvar addSourceDecorator = require(\\\"@storybook/source-loader/preview\\\").addSource;\\n// @ts-ignore\\nvar __SOURCE_PREFIX__ = \\\"/Users/farhanansari/Code/ui-library/src/components/molecules/NumberInput\\\";\\n// @ts-ignore\\nvar __STORY__ = \\\"import React from 'react'\\\\nimport NumberInput from '.'\\\\nimport Box from '../../atoms/Box'\\\\nimport { path } from '..'\\\\n\\\\nimport { action } from '@storybook/addon-actions'\\\\nimport { boolean, number, text } from '@storybook/addon-knobs'\\\\nimport ThemeWrapper from '../../../utilities/components/ThemeWrapper'\\\\n\\\\nexport default {\\\\n  title: `${path}/NumberInput`,\\\\n  component: NumberInput\\\\n}\\\\n\\\\nexport const DefaultField = () => (\\\\n  <ThemeWrapper>\\\\n    <Box p='1em'>\\\\n      <NumberInput\\\\n        id='someId'\\\\n        name='someName'\\\\n        className='someClassName'\\\\n        label={text('label', 'Number Input')}\\\\n        labelColor={text('labelColor', 'text.inputLabel.default')}\\\\n        placeholder={text('placeholder', 'Enter number here...')}\\\\n        maxLength={number('maxLength', 10)}\\\\n        error={boolean('error', false)}\\\\n        errorMessage={text('errorMessage', '')}\\\\n        required={boolean('required', false)}\\\\n        fullWidth={boolean('fullWidth', false)}\\\\n        onChange={action('Triggered: onChange')}\\\\n        allowDecimal={boolean('allowDecimal', false)}\\\\n        roundingoffDigit={number('roundingoffDigit', 3)}\\\\n      />\\\\n    </Box>\\\\n  </ThemeWrapper>\\\\n)\\\\n\\\\nexport const DefaultFieldWithInitialValue = () => (\\\\n  <ThemeWrapper>\\\\n    <Box p='1em'>\\\\n      <NumberInput\\\\n        id='someId'\\\\n        name='someName'\\\\n        className='someClassName'\\\\n        label={text('label', 'Number Input')}\\\\n        labelColor={text('labelColor', 'text.inputLabel.default')}\\\\n        placeholder={text('placeholder', 'Enter number here...')}\\\\n        initialValue={number('initialValue', 25)}\\\\n        maxLength={number('maxLength', 10)}\\\\n        error={boolean('error', false)}\\\\n        errorMessage={text('errorMessage', '')}\\\\n        required={boolean('required', false)}\\\\n        fullWidth={boolean('fullWidth', false)}\\\\n        onChange={action('Triggered: onChange')}\\\\n        allowDecimal={boolean('allowDecimal', false)}\\\\n      />\\\\n    </Box>\\\\n  </ThemeWrapper>\\\\n)\\\\n\\\\nexport const DecimalField = () => (\\\\n  <ThemeWrapper>\\\\n    <Box p='1em'>\\\\n      <NumberInput\\\\n        id='someId'\\\\n        name='someName'\\\\n        className='someClassName'\\\\n        label={text('label', 'Number Input')}\\\\n        labelColor={text('labelColor', 'text.inputLabel.default')}\\\\n        placeholder={text('placeholder', 'Enter number here...')}\\\\n        maxLength={number('maxLength', 10)}\\\\n        error={boolean('error', false)}\\\\n        errorMessage={text('errorMessage', '')}\\\\n        required={boolean('required', false)}\\\\n        fullWidth={boolean('fullWidth', false)}\\\\n        onChange={action('Triggered: onChange')}\\\\n        allowDecimal={boolean('allowDecimal', true)}\\\\n        roundingoffDigit={number('roundingoffDigit', 3)}\\\\n      />\\\\n    </Box>\\\\n  </ThemeWrapper>\\\\n)\\\\n\\\\nexport const RequiredField = () => (\\\\n  <ThemeWrapper>\\\\n    <Box p='1em'>\\\\n      <NumberInput\\\\n        id='someId'\\\\n        name='someName'\\\\n        className='someClassName'\\\\n        label={text('label', 'Number Input')}\\\\n        labelColor={text('labelColor', 'text.inputLabel.default')}\\\\n        placeholder={text('placeholder', 'Enter number here...')}\\\\n        maxLength={number('maxLength', 10)}\\\\n        error={boolean('error', false)}\\\\n        errorMessage={text('errorMessage', '')}\\\\n        required={boolean('required', true)}\\\\n        fullWidth={boolean('fullWidth', false)}\\\\n        onChange={action('Triggered: onChange')}\\\\n      />\\\\n    </Box>\\\\n  </ThemeWrapper>\\\\n)\\\\n\\\\nexport const ErrorField = () => (\\\\n  <ThemeWrapper>\\\\n    <Box p='1em'>\\\\n      <NumberInput\\\\n        id='someId'\\\\n        name='someName'\\\\n        className='someClassName'\\\\n        label={text('label', 'Number Input')}\\\\n        labelColor={text('labelColor', 'text.inputLabel.default')}\\\\n        placeholder={text('placeholder', 'Enter number here...')}\\\\n        maxLength={number('maxLength', 10)}\\\\n        error={boolean('error', true)}\\\\n        errorMessage={text('errorMessage', 'Some Field Error')}\\\\n        required={boolean('required', false)}\\\\n        fullWidth={boolean('fullWidth', true)}\\\\n        onChange={action('Triggered: onChange')}\\\\n      />\\\\n    </Box>\\\\n  </ThemeWrapper>\\\\n)\\\\n\\\\nexport const WithOutBorder = () => (\\\\n  <ThemeWrapper>\\\\n    <Box bgColor='grey.100' p='2em'>\\\\n      <NumberInput\\\\n        id='someId'\\\\n        name='someName'\\\\n        className='someClassName'\\\\n        maxLength={number('maxLength', 10)}\\\\n        error={boolean('error', false)}\\\\n        onChange={action('Triggered: onChange')}\\\\n        variant='inline-edit'\\\\n      />\\\\n    </Box>\\\\n  </ThemeWrapper>\\\\n)\\\\n\\\";\\n// @ts-ignore\\nvar __ADDS_MAP__ = {};\\n// @ts-ignore\\nvar __MAIN_FILE_LOCATION__ = \\\"/NumberInput.stories.tsx\\\";\\n// @ts-ignore\\nvar __MODULE_DEPENDENCIES__ = [];\\n// @ts-ignore\\nvar __LOCAL_DEPENDENCIES__ = {};\\n// @ts-ignore\\nvar __IDS_TO_FRAMEWORKS__ = {};\\n        \\nimport React from 'react'\\nimport NumberInput from '.'\\nimport Box from '../../atoms/Box'\\nimport { path } from '..'\\n\\nimport { action } from '@storybook/addon-actions'\\nimport { boolean, number, text } from '@storybook/addon-knobs'\\nimport ThemeWrapper from '../../../utilities/components/ThemeWrapper'\\n\\nexport default {parameters: {\\\"storySource\\\":{\\\"source\\\":\\\"\\\\n\\\\n// @ts-nocheck\\\\n// @ts-ignore\\\\nvar withSourceLoader = require('@storybook/source-loader/preview').withSource;\\\\n// @ts-ignore\\\\nvar addSourceDecorator = require(\\\\\\\"@storybook/source-loader/preview\\\\\\\").addSource;\\\\n// @ts-ignore\\\\nvar __SOURCE_PREFIX__ = \\\\\\\"/Users/farhanansari/Code/ui-library/src/components/molecules/NumberInput\\\\\\\";\\\\n// @ts-ignore\\\\nvar __STORY__ = \\\\\\\"import React from 'react'\\\\\\\\nimport NumberInput from '.'\\\\\\\\nimport Box from '../../atoms/Box'\\\\\\\\nimport { path } from '..'\\\\\\\\n\\\\\\\\nimport { action } from '@storybook/addon-actions'\\\\\\\\nimport { boolean, number, text } from '@storybook/addon-knobs'\\\\\\\\nimport ThemeWrapper from '../../../utilities/components/ThemeWrapper'\\\\\\\\n\\\\\\\\nexport default {\\\\\\\\n  title: `${path}/NumberInput`,\\\\\\\\n  component: NumberInput\\\\\\\\n}\\\\\\\\n\\\\\\\\nexport const DefaultField = () => (\\\\\\\\n  <ThemeWrapper>\\\\\\\\n    <Box p='1em'>\\\\\\\\n      <NumberInput\\\\\\\\n        id='someId'\\\\\\\\n        name='someName'\\\\\\\\n        className='someClassName'\\\\\\\\n        label={text('label', 'Number Input')}\\\\\\\\n        labelColor={text('labelColor', 'text.inputLabel.default')}\\\\\\\\n        placeholder={text('placeholder', 'Enter number here...')}\\\\\\\\n        maxLength={number('maxLength', 10)}\\\\\\\\n        error={boolean('error', false)}\\\\\\\\n        errorMessage={text('errorMessage', '')}\\\\\\\\n        required={boolean('required', false)}\\\\\\\\n        fullWidth={boolean('fullWidth', false)}\\\\\\\\n        onChange={action('Triggered: onChange')}\\\\\\\\n        allowDecimal={boolean('allowDecimal', false)}\\\\\\\\n        roundingoffDigit={number('roundingoffDigit', 3)}\\\\\\\\n      />\\\\\\\\n    </Box>\\\\\\\\n  </ThemeWrapper>\\\\\\\\n)\\\\\\\\n\\\\\\\\nexport const DefaultFieldWithInitialValue = () => (\\\\\\\\n  <ThemeWrapper>\\\\\\\\n    <Box p='1em'>\\\\\\\\n      <NumberInput\\\\\\\\n        id='someId'\\\\\\\\n        name='someName'\\\\\\\\n        className='someClassName'\\\\\\\\n        label={text('label', 'Number Input')}\\\\\\\\n        labelColor={text('labelColor', 'text.inputLabel.default')}\\\\\\\\n        placeholder={text('placeholder', 'Enter number here...')}\\\\\\\\n        initialValue={number('initialValue', 25)}\\\\\\\\n        maxLength={number('maxLength', 10)}\\\\\\\\n        error={boolean('error', false)}\\\\\\\\n        errorMessage={text('errorMessage', '')}\\\\\\\\n        required={boolean('required', false)}\\\\\\\\n        fullWidth={boolean('fullWidth', false)}\\\\\\\\n        onChange={action('Triggered: onChange')}\\\\\\\\n        allowDecimal={boolean('allowDecimal', false)}\\\\\\\\n      />\\\\\\\\n    </Box>\\\\\\\\n  </ThemeWrapper>\\\\\\\\n)\\\\\\\\n\\\\\\\\nexport const DecimalField = () => (\\\\\\\\n  <ThemeWrapper>\\\\\\\\n    <Box p='1em'>\\\\\\\\n      <NumberInput\\\\\\\\n        id='someId'\\\\\\\\n        name='someName'\\\\\\\\n        className='someClassName'\\\\\\\\n        label={text('label', 'Number Input')}\\\\\\\\n        labelColor={text('labelColor', 'text.inputLabel.default')}\\\\\\\\n        placeholder={text('placeholder', 'Enter number here...')}\\\\\\\\n        maxLength={number('maxLength', 10)}\\\\\\\\n        error={boolean('error', false)}\\\\\\\\n        errorMessage={text('errorMessage', '')}\\\\\\\\n        required={boolean('required', false)}\\\\\\\\n        fullWidth={boolean('fullWidth', false)}\\\\\\\\n        onChange={action('Triggered: onChange')}\\\\\\\\n        allowDecimal={boolean('allowDecimal', true)}\\\\\\\\n        roundingoffDigit={number('roundingoffDigit', 3)}\\\\\\\\n      />\\\\\\\\n    </Box>\\\\\\\\n  </ThemeWrapper>\\\\\\\\n)\\\\\\\\n\\\\\\\\nexport const RequiredField = () => (\\\\\\\\n  <ThemeWrapper>\\\\\\\\n    <Box p='1em'>\\\\\\\\n      <NumberInput\\\\\\\\n        id='someId'\\\\\\\\n        name='someName'\\\\\\\\n        className='someClassName'\\\\\\\\n        label={text('label', 'Number Input')}\\\\\\\\n        labelColor={text('labelColor', 'text.inputLabel.default')}\\\\\\\\n        placeholder={text('placeholder', 'Enter number here...')}\\\\\\\\n        maxLength={number('maxLength', 10)}\\\\\\\\n        error={boolean('error', false)}\\\\\\\\n        errorMessage={text('errorMessage', '')}\\\\\\\\n        required={boolean('required', true)}\\\\\\\\n        fullWidth={boolean('fullWidth', false)}\\\\\\\\n        onChange={action('Triggered: onChange')}\\\\\\\\n      />\\\\\\\\n    </Box>\\\\\\\\n  </ThemeWrapper>\\\\\\\\n)\\\\\\\\n\\\\\\\\nexport const ErrorField = () => (\\\\\\\\n  <ThemeWrapper>\\\\\\\\n    <Box p='1em'>\\\\\\\\n      <NumberInput\\\\\\\\n        id='someId'\\\\\\\\n        name='someName'\\\\\\\\n        className='someClassName'\\\\\\\\n        label={text('label', 'Number Input')}\\\\\\\\n        labelColor={text('labelColor', 'text.inputLabel.default')}\\\\\\\\n        placeholder={text('placeholder', 'Enter number here...')}\\\\\\\\n        maxLength={number('maxLength', 10)}\\\\\\\\n        error={boolean('error', true)}\\\\\\\\n        errorMessage={text('errorMessage', 'Some Field Error')}\\\\\\\\n        required={boolean('required', false)}\\\\\\\\n        fullWidth={boolean('fullWidth', true)}\\\\\\\\n        onChange={action('Triggered: onChange')}\\\\\\\\n      />\\\\\\\\n    </Box>\\\\\\\\n  </ThemeWrapper>\\\\\\\\n)\\\\\\\\n\\\\\\\\nexport const WithOutBorder = () => (\\\\\\\\n  <ThemeWrapper>\\\\\\\\n    <Box bgColor='grey.100' p='2em'>\\\\\\\\n      <NumberInput\\\\\\\\n        id='someId'\\\\\\\\n        name='someName'\\\\\\\\n        className='someClassName'\\\\\\\\n        maxLength={number('maxLength', 10)}\\\\\\\\n        error={boolean('error', false)}\\\\\\\\n        onChange={action('Triggered: onChange')}\\\\\\\\n        variant='inline-edit'\\\\\\\\n      />\\\\\\\\n    </Box>\\\\\\\\n  </ThemeWrapper>\\\\\\\\n)\\\\\\\\n\\\\\\\";\\\\n// @ts-ignore\\\\nvar __ADDS_MAP__ = {};\\\\n// @ts-ignore\\\\nvar __MAIN_FILE_LOCATION__ = \\\\\\\"/NumberInput.stories.tsx\\\\\\\";\\\\n// @ts-ignore\\\\nvar __MODULE_DEPENDENCIES__ = [];\\\\n// @ts-ignore\\\\nvar __LOCAL_DEPENDENCIES__ = {};\\\\n// @ts-ignore\\\\nvar __IDS_TO_FRAMEWORKS__ = {};\\\\n        \\\\nimport React from 'react'\\\\nimport NumberInput from '.'\\\\nimport Box from '../../atoms/Box'\\\\nimport { path } from '..'\\\\n\\\\nimport { action } from '@storybook/addon-actions'\\\\nimport { boolean, number, text } from '@storybook/addon-knobs'\\\\nimport ThemeWrapper from '../../../utilities/components/ThemeWrapper'\\\\n\\\\nexport default {parameters: {\\\\\\\"storySource\\\\\\\":{\\\\\\\"source\\\\\\\":\\\\\\\"import React from 'react'\\\\\\\\nimport NumberInput from '.'\\\\\\\\nimport Box from '../../atoms/Box'\\\\\\\\nimport { path } from '..'\\\\\\\\n\\\\\\\\nimport { action } from '@storybook/addon-actions'\\\\\\\\nimport { boolean, number, text } from '@storybook/addon-knobs'\\\\\\\\nimport ThemeWrapper from '../../../utilities/components/ThemeWrapper'\\\\\\\\n\\\\\\\\nexport default {\\\\\\\\n  title: `${path}/NumberInput`,\\\\\\\\n  component: NumberInput\\\\\\\\n}\\\\\\\\n\\\\\\\\nexport const DefaultField = () => (\\\\\\\\n  <ThemeWrapper>\\\\\\\\n    <Box p='1em'>\\\\\\\\n      <NumberInput\\\\\\\\n        id='someId'\\\\\\\\n        name='someName'\\\\\\\\n        className='someClassName'\\\\\\\\n        label={text('label', 'Number Input')}\\\\\\\\n        labelColor={text('labelColor', 'text.inputLabel.default')}\\\\\\\\n        placeholder={text('placeholder', 'Enter number here...')}\\\\\\\\n        maxLength={number('maxLength', 10)}\\\\\\\\n        error={boolean('error', false)}\\\\\\\\n        errorMessage={text('errorMessage', '')}\\\\\\\\n        required={boolean('required', false)}\\\\\\\\n        fullWidth={boolean('fullWidth', false)}\\\\\\\\n        onChange={action('Triggered: onChange')}\\\\\\\\n        allowDecimal={boolean('allowDecimal', false)}\\\\\\\\n        roundingoffDigit={number('roundingoffDigit', 3)}\\\\\\\\n      />\\\\\\\\n    </Box>\\\\\\\\n  </ThemeWrapper>\\\\\\\\n)\\\\\\\\n\\\\\\\\nexport const DefaultFieldWithInitialValue = () => (\\\\\\\\n  <ThemeWrapper>\\\\\\\\n    <Box p='1em'>\\\\\\\\n      <NumberInput\\\\\\\\n        id='someId'\\\\\\\\n        name='someName'\\\\\\\\n        className='someClassName'\\\\\\\\n        label={text('label', 'Number Input')}\\\\\\\\n        labelColor={text('labelColor', 'text.inputLabel.default')}\\\\\\\\n        placeholder={text('placeholder', 'Enter number here...')}\\\\\\\\n        initialValue={number('initialValue', 25)}\\\\\\\\n        maxLength={number('maxLength', 10)}\\\\\\\\n        error={boolean('error', false)}\\\\\\\\n        errorMessage={text('errorMessage', '')}\\\\\\\\n        required={boolean('required', false)}\\\\\\\\n        fullWidth={boolean('fullWidth', false)}\\\\\\\\n        onChange={action('Triggered: onChange')}\\\\\\\\n        allowDecimal={boolean('allowDecimal', false)}\\\\\\\\n      />\\\\\\\\n    </Box>\\\\\\\\n  </ThemeWrapper>\\\\\\\\n)\\\\\\\\n\\\\\\\\nexport const DecimalField = () => (\\\\\\\\n  <ThemeWrapper>\\\\\\\\n    <Box p='1em'>\\\\\\\\n      <NumberInput\\\\\\\\n        id='someId'\\\\\\\\n        name='someName'\\\\\\\\n        className='someClassName'\\\\\\\\n        label={text('label', 'Number Input')}\\\\\\\\n        labelColor={text('labelColor', 'text.inputLabel.default')}\\\\\\\\n        placeholder={text('placeholder', 'Enter number here...')}\\\\\\\\n        maxLength={number('maxLength', 10)}\\\\\\\\n        error={boolean('error', false)}\\\\\\\\n        errorMessage={text('errorMessage', '')}\\\\\\\\n        required={boolean('required', false)}\\\\\\\\n        fullWidth={boolean('fullWidth', false)}\\\\\\\\n        onChange={action('Triggered: onChange')}\\\\\\\\n        allowDecimal={boolean('allowDecimal', true)}\\\\\\\\n        roundingoffDigit={number('roundingoffDigit', 3)}\\\\\\\\n      />\\\\\\\\n    </Box>\\\\\\\\n  </ThemeWrapper>\\\\\\\\n)\\\\\\\\n\\\\\\\\nexport const RequiredField = () => (\\\\\\\\n  <ThemeWrapper>\\\\\\\\n    <Box p='1em'>\\\\\\\\n      <NumberInput\\\\\\\\n        id='someId'\\\\\\\\n        name='someName'\\\\\\\\n        className='someClassName'\\\\\\\\n        label={text('label', 'Number Input')}\\\\\\\\n        labelColor={text('labelColor', 'text.inputLabel.default')}\\\\\\\\n        placeholder={text('placeholder', 'Enter number here...')}\\\\\\\\n        maxLength={number('maxLength', 10)}\\\\\\\\n        error={boolean('error', false)}\\\\\\\\n        errorMessage={text('errorMessage', '')}\\\\\\\\n        required={boolean('required', true)}\\\\\\\\n        fullWidth={boolean('fullWidth', false)}\\\\\\\\n        onChange={action('Triggered: onChange')}\\\\\\\\n      />\\\\\\\\n    </Box>\\\\\\\\n  </ThemeWrapper>\\\\\\\\n)\\\\\\\\n\\\\\\\\nexport const ErrorField = () => (\\\\\\\\n  <ThemeWrapper>\\\\\\\\n    <Box p='1em'>\\\\\\\\n      <NumberInput\\\\\\\\n        id='someId'\\\\\\\\n        name='someName'\\\\\\\\n        className='someClassName'\\\\\\\\n        label={text('label', 'Number Input')}\\\\\\\\n        labelColor={text('labelColor', 'text.inputLabel.default')}\\\\\\\\n        placeholder={text('placeholder', 'Enter number here...')}\\\\\\\\n        maxLength={number('maxLength', 10)}\\\\\\\\n        error={boolean('error', true)}\\\\\\\\n        errorMessage={text('errorMessage', 'Some Field Error')}\\\\\\\\n        required={boolean('required', false)}\\\\\\\\n        fullWidth={boolean('fullWidth', true)}\\\\\\\\n        onChange={action('Triggered: onChange')}\\\\\\\\n      />\\\\\\\\n    </Box>\\\\\\\\n  </ThemeWrapper>\\\\\\\\n)\\\\\\\\n\\\\\\\\nexport const WithOutBorder = () => (\\\\\\\\n  <ThemeWrapper>\\\\\\\\n    <Box bgColor='grey.100' p='2em'>\\\\\\\\n      <NumberInput\\\\\\\\n        id='someId'\\\\\\\\n        name='someName'\\\\\\\\n        className='someClassName'\\\\\\\\n        maxLength={number('maxLength', 10)}\\\\\\\\n        error={boolean('error', false)}\\\\\\\\n        onChange={action('Triggered: onChange')}\\\\\\\\n        variant='inline-edit'\\\\\\\\n      />\\\\\\\\n    </Box>\\\\\\\\n  </ThemeWrapper>\\\\\\\\n)\\\\\\\\n\\\\\\\",\\\\\\\"locationsMap\\\\\\\":{}},},\\\\n  title: `${path}/NumberInput`,\\\\n  component: NumberInput\\\\n}\\\\n\\\\nexport const DefaultField = addSourceDecorator(() => (\\\\n  <ThemeWrapper>\\\\n    <Box p='1em'>\\\\n      <NumberInput\\\\n        id='someId'\\\\n        name='someName'\\\\n        className='someClassName'\\\\n        label={text('label', 'Number Input')}\\\\n        labelColor={text('labelColor', 'text.inputLabel.default')}\\\\n        placeholder={text('placeholder', 'Enter number here...')}\\\\n        maxLength={number('maxLength', 10)}\\\\n        error={boolean('error', false)}\\\\n        errorMessage={text('errorMessage', '')}\\\\n        required={boolean('required', false)}\\\\n        fullWidth={boolean('fullWidth', false)}\\\\n        onChange={action('Triggered: onChange')}\\\\n        allowDecimal={boolean('allowDecimal', false)}\\\\n        roundingoffDigit={number('roundingoffDigit', 3)}\\\\n      />\\\\n    </Box>\\\\n  </ThemeWrapper>\\\\n), {__STORY__, __ADDS_MAP__,__MAIN_FILE_LOCATION__,__MODULE_DEPENDENCIES__,__LOCAL_DEPENDENCIES__,__SOURCE_PREFIX__,__IDS_TO_FRAMEWORKS__});\\\\n\\\\nexport const DefaultFieldWithInitialValue = addSourceDecorator(() => (\\\\n  <ThemeWrapper>\\\\n    <Box p='1em'>\\\\n      <NumberInput\\\\n        id='someId'\\\\n        name='someName'\\\\n        className='someClassName'\\\\n        label={text('label', 'Number Input')}\\\\n        labelColor={text('labelColor', 'text.inputLabel.default')}\\\\n        placeholder={text('placeholder', 'Enter number here...')}\\\\n        initialValue={number('initialValue', 25)}\\\\n        maxLength={number('maxLength', 10)}\\\\n        error={boolean('error', false)}\\\\n        errorMessage={text('errorMessage', '')}\\\\n        required={boolean('required', false)}\\\\n        fullWidth={boolean('fullWidth', false)}\\\\n        onChange={action('Triggered: onChange')}\\\\n        allowDecimal={boolean('allowDecimal', false)}\\\\n      />\\\\n    </Box>\\\\n  </ThemeWrapper>\\\\n), {__STORY__, __ADDS_MAP__,__MAIN_FILE_LOCATION__,__MODULE_DEPENDENCIES__,__LOCAL_DEPENDENCIES__,__SOURCE_PREFIX__,__IDS_TO_FRAMEWORKS__});\\\\n\\\\nexport const DecimalField = addSourceDecorator(() => (\\\\n  <ThemeWrapper>\\\\n    <Box p='1em'>\\\\n      <NumberInput\\\\n        id='someId'\\\\n        name='someName'\\\\n        className='someClassName'\\\\n        label={text('label', 'Number Input')}\\\\n        labelColor={text('labelColor', 'text.inputLabel.default')}\\\\n        placeholder={text('placeholder', 'Enter number here...')}\\\\n        maxLength={number('maxLength', 10)}\\\\n        error={boolean('error', false)}\\\\n        errorMessage={text('errorMessage', '')}\\\\n        required={boolean('required', false)}\\\\n        fullWidth={boolean('fullWidth', false)}\\\\n        onChange={action('Triggered: onChange')}\\\\n        allowDecimal={boolean('allowDecimal', true)}\\\\n        roundingoffDigit={number('roundingoffDigit', 3)}\\\\n      />\\\\n    </Box>\\\\n  </ThemeWrapper>\\\\n), {__STORY__, __ADDS_MAP__,__MAIN_FILE_LOCATION__,__MODULE_DEPENDENCIES__,__LOCAL_DEPENDENCIES__,__SOURCE_PREFIX__,__IDS_TO_FRAMEWORKS__});\\\\n\\\\nexport const RequiredField = addSourceDecorator(() => (\\\\n  <ThemeWrapper>\\\\n    <Box p='1em'>\\\\n      <NumberInput\\\\n        id='someId'\\\\n        name='someName'\\\\n        className='someClassName'\\\\n        label={text('label', 'Number Input')}\\\\n        labelColor={text('labelColor', 'text.inputLabel.default')}\\\\n        placeholder={text('placeholder', 'Enter number here...')}\\\\n        maxLength={number('maxLength', 10)}\\\\n        error={boolean('error', false)}\\\\n        errorMessage={text('errorMessage', '')}\\\\n        required={boolean('required', true)}\\\\n        fullWidth={boolean('fullWidth', false)}\\\\n        onChange={action('Triggered: onChange')}\\\\n      />\\\\n    </Box>\\\\n  </ThemeWrapper>\\\\n), {__STORY__, __ADDS_MAP__,__MAIN_FILE_LOCATION__,__MODULE_DEPENDENCIES__,__LOCAL_DEPENDENCIES__,__SOURCE_PREFIX__,__IDS_TO_FRAMEWORKS__});\\\\n\\\\nexport const ErrorField = addSourceDecorator(() => (\\\\n  <ThemeWrapper>\\\\n    <Box p='1em'>\\\\n      <NumberInput\\\\n        id='someId'\\\\n        name='someName'\\\\n        className='someClassName'\\\\n        label={text('label', 'Number Input')}\\\\n        labelColor={text('labelColor', 'text.inputLabel.default')}\\\\n        placeholder={text('placeholder', 'Enter number here...')}\\\\n        maxLength={number('maxLength', 10)}\\\\n        error={boolean('error', true)}\\\\n        errorMessage={text('errorMessage', 'Some Field Error')}\\\\n        required={boolean('required', false)}\\\\n        fullWidth={boolean('fullWidth', true)}\\\\n        onChange={action('Triggered: onChange')}\\\\n      />\\\\n    </Box>\\\\n  </ThemeWrapper>\\\\n), {__STORY__, __ADDS_MAP__,__MAIN_FILE_LOCATION__,__MODULE_DEPENDENCIES__,__LOCAL_DEPENDENCIES__,__SOURCE_PREFIX__,__IDS_TO_FRAMEWORKS__});\\\\n\\\\nexport const WithOutBorder = addSourceDecorator(() => (\\\\n  <ThemeWrapper>\\\\n    <Box bgColor='grey.100' p='2em'>\\\\n      <NumberInput\\\\n        id='someId'\\\\n        name='someName'\\\\n        className='someClassName'\\\\n        maxLength={number('maxLength', 10)}\\\\n        error={boolean('error', false)}\\\\n        onChange={action('Triggered: onChange')}\\\\n        variant='inline-edit'\\\\n      />\\\\n    </Box>\\\\n  </ThemeWrapper>\\\\n), {__STORY__, __ADDS_MAP__,__MAIN_FILE_LOCATION__,__MODULE_DEPENDENCIES__,__LOCAL_DEPENDENCIES__,__SOURCE_PREFIX__,__IDS_TO_FRAMEWORKS__});\\\",\\\"locationsMap\\\":{}},\\\"storySource\\\":{\\\"source\\\":\\\"import React from 'react'\\\\nimport NumberInput from '.'\\\\nimport Box from '../../atoms/Box'\\\\nimport { path } from '..'\\\\n\\\\nimport { action } from '@storybook/addon-actions'\\\\nimport { boolean, number, text } from '@storybook/addon-knobs'\\\\nimport ThemeWrapper from '../../../utilities/components/ThemeWrapper'\\\\n\\\\nexport default {\\\\n  title: `${path}/NumberInput`,\\\\n  component: NumberInput\\\\n}\\\\n\\\\nexport const DefaultField = () => (\\\\n  <ThemeWrapper>\\\\n    <Box p='1em'>\\\\n      <NumberInput\\\\n        id='someId'\\\\n        name='someName'\\\\n        className='someClassName'\\\\n        label={text('label', 'Number Input')}\\\\n        labelColor={text('labelColor', 'text.inputLabel.default')}\\\\n        placeholder={text('placeholder', 'Enter number here...')}\\\\n        maxLength={number('maxLength', 10)}\\\\n        error={boolean('error', false)}\\\\n        errorMessage={text('errorMessage', '')}\\\\n        required={boolean('required', false)}\\\\n        fullWidth={boolean('fullWidth', false)}\\\\n        onChange={action('Triggered: onChange')}\\\\n        allowDecimal={boolean('allowDecimal', false)}\\\\n        roundingoffDigit={number('roundingoffDigit', 3)}\\\\n      />\\\\n    </Box>\\\\n  </ThemeWrapper>\\\\n)\\\\n\\\\nexport const DefaultFieldWithInitialValue = () => (\\\\n  <ThemeWrapper>\\\\n    <Box p='1em'>\\\\n      <NumberInput\\\\n        id='someId'\\\\n        name='someName'\\\\n        className='someClassName'\\\\n        label={text('label', 'Number Input')}\\\\n        labelColor={text('labelColor', 'text.inputLabel.default')}\\\\n        placeholder={text('placeholder', 'Enter number here...')}\\\\n        initialValue={number('initialValue', 25)}\\\\n        maxLength={number('maxLength', 10)}\\\\n        error={boolean('error', false)}\\\\n        errorMessage={text('errorMessage', '')}\\\\n        required={boolean('required', false)}\\\\n        fullWidth={boolean('fullWidth', false)}\\\\n        onChange={action('Triggered: onChange')}\\\\n        allowDecimal={boolean('allowDecimal', false)}\\\\n      />\\\\n    </Box>\\\\n  </ThemeWrapper>\\\\n)\\\\n\\\\nexport const DecimalField = () => (\\\\n  <ThemeWrapper>\\\\n    <Box p='1em'>\\\\n      <NumberInput\\\\n        id='someId'\\\\n        name='someName'\\\\n        className='someClassName'\\\\n        label={text('label', 'Number Input')}\\\\n        labelColor={text('labelColor', 'text.inputLabel.default')}\\\\n        placeholder={text('placeholder', 'Enter number here...')}\\\\n        maxLength={number('maxLength', 10)}\\\\n        error={boolean('error', false)}\\\\n        errorMessage={text('errorMessage', '')}\\\\n        required={boolean('required', false)}\\\\n        fullWidth={boolean('fullWidth', false)}\\\\n        onChange={action('Triggered: onChange')}\\\\n        allowDecimal={boolean('allowDecimal', true)}\\\\n        roundingoffDigit={number('roundingoffDigit', 3)}\\\\n      />\\\\n    </Box>\\\\n  </ThemeWrapper>\\\\n)\\\\n\\\\nexport const RequiredField = () => (\\\\n  <ThemeWrapper>\\\\n    <Box p='1em'>\\\\n      <NumberInput\\\\n        id='someId'\\\\n        name='someName'\\\\n        className='someClassName'\\\\n        label={text('label', 'Number Input')}\\\\n        labelColor={text('labelColor', 'text.inputLabel.default')}\\\\n        placeholder={text('placeholder', 'Enter number here...')}\\\\n        maxLength={number('maxLength', 10)}\\\\n        error={boolean('error', false)}\\\\n        errorMessage={text('errorMessage', '')}\\\\n        required={boolean('required', true)}\\\\n        fullWidth={boolean('fullWidth', false)}\\\\n        onChange={action('Triggered: onChange')}\\\\n      />\\\\n    </Box>\\\\n  </ThemeWrapper>\\\\n)\\\\n\\\\nexport const ErrorField = () => (\\\\n  <ThemeWrapper>\\\\n    <Box p='1em'>\\\\n      <NumberInput\\\\n        id='someId'\\\\n        name='someName'\\\\n        className='someClassName'\\\\n        label={text('label', 'Number Input')}\\\\n        labelColor={text('labelColor', 'text.inputLabel.default')}\\\\n        placeholder={text('placeholder', 'Enter number here...')}\\\\n        maxLength={number('maxLength', 10)}\\\\n        error={boolean('error', true)}\\\\n        errorMessage={text('errorMessage', 'Some Field Error')}\\\\n        required={boolean('required', false)}\\\\n        fullWidth={boolean('fullWidth', true)}\\\\n        onChange={action('Triggered: onChange')}\\\\n      />\\\\n    </Box>\\\\n  </ThemeWrapper>\\\\n)\\\\n\\\\nexport const WithOutBorder = () => (\\\\n  <ThemeWrapper>\\\\n    <Box bgColor='grey.100' p='2em'>\\\\n      <NumberInput\\\\n        id='someId'\\\\n        name='someName'\\\\n        className='someClassName'\\\\n        maxLength={number('maxLength', 10)}\\\\n        error={boolean('error', false)}\\\\n        onChange={action('Triggered: onChange')}\\\\n        variant='inline-edit'\\\\n      />\\\\n    </Box>\\\\n  </ThemeWrapper>\\\\n)\\\\n\\\",\\\"locationsMap\\\":{}},},\\n  title: `${path}/NumberInput`,\\n  component: NumberInput\\n}\\n\\nexport const DefaultField = addSourceDecorator(addSourceDecorator(() => (\\n  <ThemeWrapper>\\n    <Box p='1em'>\\n      <NumberInput\\n        id='someId'\\n        name='someName'\\n        className='someClassName'\\n        label={text('label', 'Number Input')}\\n        labelColor={text('labelColor', 'text.inputLabel.default')}\\n        placeholder={text('placeholder', 'Enter number here...')}\\n        maxLength={number('maxLength', 10)}\\n        error={boolean('error', false)}\\n        errorMessage={text('errorMessage', '')}\\n        required={boolean('required', false)}\\n        fullWidth={boolean('fullWidth', false)}\\n        onChange={action('Triggered: onChange')}\\n        allowDecimal={boolean('allowDecimal', false)}\\n        roundingoffDigit={number('roundingoffDigit', 3)}\\n      />\\n    </Box>\\n  </ThemeWrapper>\\n), {__STORY__, __ADDS_MAP__,__MAIN_FILE_LOCATION__,__MODULE_DEPENDENCIES__,__LOCAL_DEPENDENCIES__,__SOURCE_PREFIX__,__IDS_TO_FRAMEWORKS__}), {__STORY__, __ADDS_MAP__,__MAIN_FILE_LOCATION__,__MODULE_DEPENDENCIES__,__LOCAL_DEPENDENCIES__,__SOURCE_PREFIX__,__IDS_TO_FRAMEWORKS__});;\\n\\nexport const DefaultFieldWithInitialValue = addSourceDecorator(addSourceDecorator(() => (\\n  <ThemeWrapper>\\n    <Box p='1em'>\\n      <NumberInput\\n        id='someId'\\n        name='someName'\\n        className='someClassName'\\n        label={text('label', 'Number Input')}\\n        labelColor={text('labelColor', 'text.inputLabel.default')}\\n        placeholder={text('placeholder', 'Enter number here...')}\\n        initialValue={number('initialValue', 25)}\\n        maxLength={number('maxLength', 10)}\\n        error={boolean('error', false)}\\n        errorMessage={text('errorMessage', '')}\\n        required={boolean('required', false)}\\n        fullWidth={boolean('fullWidth', false)}\\n        onChange={action('Triggered: onChange')}\\n        allowDecimal={boolean('allowDecimal', false)}\\n      />\\n    </Box>\\n  </ThemeWrapper>\\n), {__STORY__, __ADDS_MAP__,__MAIN_FILE_LOCATION__,__MODULE_DEPENDENCIES__,__LOCAL_DEPENDENCIES__,__SOURCE_PREFIX__,__IDS_TO_FRAMEWORKS__}), {__STORY__, __ADDS_MAP__,__MAIN_FILE_LOCATION__,__MODULE_DEPENDENCIES__,__LOCAL_DEPENDENCIES__,__SOURCE_PREFIX__,__IDS_TO_FRAMEWORKS__});;\\n\\nexport const DecimalField = addSourceDecorator(addSourceDecorator(() => (\\n  <ThemeWrapper>\\n    <Box p='1em'>\\n      <NumberInput\\n        id='someId'\\n        name='someName'\\n        className='someClassName'\\n        label={text('label', 'Number Input')}\\n        labelColor={text('labelColor', 'text.inputLabel.default')}\\n        placeholder={text('placeholder', 'Enter number here...')}\\n        maxLength={number('maxLength', 10)}\\n        error={boolean('error', false)}\\n        errorMessage={text('errorMessage', '')}\\n        required={boolean('required', false)}\\n        fullWidth={boolean('fullWidth', false)}\\n        onChange={action('Triggered: onChange')}\\n        allowDecimal={boolean('allowDecimal', true)}\\n        roundingoffDigit={number('roundingoffDigit', 3)}\\n      />\\n    </Box>\\n  </ThemeWrapper>\\n), {__STORY__, __ADDS_MAP__,__MAIN_FILE_LOCATION__,__MODULE_DEPENDENCIES__,__LOCAL_DEPENDENCIES__,__SOURCE_PREFIX__,__IDS_TO_FRAMEWORKS__}), {__STORY__, __ADDS_MAP__,__MAIN_FILE_LOCATION__,__MODULE_DEPENDENCIES__,__LOCAL_DEPENDENCIES__,__SOURCE_PREFIX__,__IDS_TO_FRAMEWORKS__});;\\n\\nexport const RequiredField = addSourceDecorator(addSourceDecorator(() => (\\n  <ThemeWrapper>\\n    <Box p='1em'>\\n      <NumberInput\\n        id='someId'\\n        name='someName'\\n        className='someClassName'\\n        label={text('label', 'Number Input')}\\n        labelColor={text('labelColor', 'text.inputLabel.default')}\\n        placeholder={text('placeholder', 'Enter number here...')}\\n        maxLength={number('maxLength', 10)}\\n        error={boolean('error', false)}\\n        errorMessage={text('errorMessage', '')}\\n        required={boolean('required', true)}\\n        fullWidth={boolean('fullWidth', false)}\\n        onChange={action('Triggered: onChange')}\\n      />\\n    </Box>\\n  </ThemeWrapper>\\n), {__STORY__, __ADDS_MAP__,__MAIN_FILE_LOCATION__,__MODULE_DEPENDENCIES__,__LOCAL_DEPENDENCIES__,__SOURCE_PREFIX__,__IDS_TO_FRAMEWORKS__}), {__STORY__, __ADDS_MAP__,__MAIN_FILE_LOCATION__,__MODULE_DEPENDENCIES__,__LOCAL_DEPENDENCIES__,__SOURCE_PREFIX__,__IDS_TO_FRAMEWORKS__});;\\n\\nexport const ErrorField = addSourceDecorator(addSourceDecorator(() => (\\n  <ThemeWrapper>\\n    <Box p='1em'>\\n      <NumberInput\\n        id='someId'\\n        name='someName'\\n        className='someClassName'\\n        label={text('label', 'Number Input')}\\n        labelColor={text('labelColor', 'text.inputLabel.default')}\\n        placeholder={text('placeholder', 'Enter number here...')}\\n        maxLength={number('maxLength', 10)}\\n        error={boolean('error', true)}\\n        errorMessage={text('errorMessage', 'Some Field Error')}\\n        required={boolean('required', false)}\\n        fullWidth={boolean('fullWidth', true)}\\n        onChange={action('Triggered: onChange')}\\n      />\\n    </Box>\\n  </ThemeWrapper>\\n), {__STORY__, __ADDS_MAP__,__MAIN_FILE_LOCATION__,__MODULE_DEPENDENCIES__,__LOCAL_DEPENDENCIES__,__SOURCE_PREFIX__,__IDS_TO_FRAMEWORKS__}), {__STORY__, __ADDS_MAP__,__MAIN_FILE_LOCATION__,__MODULE_DEPENDENCIES__,__LOCAL_DEPENDENCIES__,__SOURCE_PREFIX__,__IDS_TO_FRAMEWORKS__});;\\n\\nexport const WithOutBorder = addSourceDecorator(addSourceDecorator(() => (\\n  <ThemeWrapper>\\n    <Box bgColor='grey.100' p='2em'>\\n      <NumberInput\\n        id='someId'\\n        name='someName'\\n        className='someClassName'\\n        maxLength={number('maxLength', 10)}\\n        error={boolean('error', false)}\\n        onChange={action('Triggered: onChange')}\\n        variant='inline-edit'\\n      />\\n    </Box>\\n  </ThemeWrapper>\\n), {__STORY__, __ADDS_MAP__,__MAIN_FILE_LOCATION__,__MODULE_DEPENDENCIES__,__LOCAL_DEPENDENCIES__,__SOURCE_PREFIX__,__IDS_TO_FRAMEWORKS__}), {__STORY__, __ADDS_MAP__,__MAIN_FILE_LOCATION__,__MODULE_DEPENDENCIES__,__LOCAL_DEPENDENCIES__,__SOURCE_PREFIX__,__IDS_TO_FRAMEWORKS__});\",\"locationsMap\":{}},\"storySource\":{\"source\":\"\\n\\n// @ts-nocheck\\n// @ts-ignore\\nvar withSourceLoader = require('@storybook/source-loader/preview').withSource;\\n// @ts-ignore\\nvar addSourceDecorator = require(\\\"@storybook/source-loader/preview\\\").addSource;\\n// @ts-ignore\\nvar __SOURCE_PREFIX__ = \\\"/Users/farhanansari/Code/ui-library/src/components/molecules/NumberInput\\\";\\n// @ts-ignore\\nvar __STORY__ = \\\"import React from 'react'\\\\nimport NumberInput from '.'\\\\nimport Box from '../../atoms/Box'\\\\nimport { path } from '..'\\\\n\\\\nimport { action } from '@storybook/addon-actions'\\\\nimport { boolean, number, text } from '@storybook/addon-knobs'\\\\nimport ThemeWrapper from '../../../utilities/components/ThemeWrapper'\\\\n\\\\nexport default {\\\\n  title: `${path}/NumberInput`,\\\\n  component: NumberInput\\\\n}\\\\n\\\\nexport const DefaultField = () => (\\\\n  <ThemeWrapper>\\\\n    <Box p='1em'>\\\\n      <NumberInput\\\\n        id='someId'\\\\n        name='someName'\\\\n        className='someClassName'\\\\n        label={text('label', 'Number Input')}\\\\n        labelColor={text('labelColor', 'text.inputLabel.default')}\\\\n        placeholder={text('placeholder', 'Enter number here...')}\\\\n        maxLength={number('maxLength', 10)}\\\\n        error={boolean('error', false)}\\\\n        errorMessage={text('errorMessage', '')}\\\\n        required={boolean('required', false)}\\\\n        fullWidth={boolean('fullWidth', false)}\\\\n        onChange={action('Triggered: onChange')}\\\\n        allowDecimal={boolean('allowDecimal', false)}\\\\n        roundingoffDigit={number('roundingoffDigit', 3)}\\\\n      />\\\\n    </Box>\\\\n  </ThemeWrapper>\\\\n)\\\\n\\\\nexport const DefaultFieldWithInitialValue = () => (\\\\n  <ThemeWrapper>\\\\n    <Box p='1em'>\\\\n      <NumberInput\\\\n        id='someId'\\\\n        name='someName'\\\\n        className='someClassName'\\\\n        label={text('label', 'Number Input')}\\\\n        labelColor={text('labelColor', 'text.inputLabel.default')}\\\\n        placeholder={text('placeholder', 'Enter number here...')}\\\\n        initialValue={number('initialValue', 25)}\\\\n        maxLength={number('maxLength', 10)}\\\\n        error={boolean('error', false)}\\\\n        errorMessage={text('errorMessage', '')}\\\\n        required={boolean('required', false)}\\\\n        fullWidth={boolean('fullWidth', false)}\\\\n        onChange={action('Triggered: onChange')}\\\\n        allowDecimal={boolean('allowDecimal', false)}\\\\n      />\\\\n    </Box>\\\\n  </ThemeWrapper>\\\\n)\\\\n\\\\nexport const DecimalField = () => (\\\\n  <ThemeWrapper>\\\\n    <Box p='1em'>\\\\n      <NumberInput\\\\n        id='someId'\\\\n        name='someName'\\\\n        className='someClassName'\\\\n        label={text('label', 'Number Input')}\\\\n        labelColor={text('labelColor', 'text.inputLabel.default')}\\\\n        placeholder={text('placeholder', 'Enter number here...')}\\\\n        maxLength={number('maxLength', 10)}\\\\n        error={boolean('error', false)}\\\\n        errorMessage={text('errorMessage', '')}\\\\n        required={boolean('required', false)}\\\\n        fullWidth={boolean('fullWidth', false)}\\\\n        onChange={action('Triggered: onChange')}\\\\n        allowDecimal={boolean('allowDecimal', true)}\\\\n        roundingoffDigit={number('roundingoffDigit', 3)}\\\\n      />\\\\n    </Box>\\\\n  </ThemeWrapper>\\\\n)\\\\n\\\\nexport const RequiredField = () => (\\\\n  <ThemeWrapper>\\\\n    <Box p='1em'>\\\\n      <NumberInput\\\\n        id='someId'\\\\n        name='someName'\\\\n        className='someClassName'\\\\n        label={text('label', 'Number Input')}\\\\n        labelColor={text('labelColor', 'text.inputLabel.default')}\\\\n        placeholder={text('placeholder', 'Enter number here...')}\\\\n        maxLength={number('maxLength', 10)}\\\\n        error={boolean('error', false)}\\\\n        errorMessage={text('errorMessage', '')}\\\\n        required={boolean('required', true)}\\\\n        fullWidth={boolean('fullWidth', false)}\\\\n        onChange={action('Triggered: onChange')}\\\\n      />\\\\n    </Box>\\\\n  </ThemeWrapper>\\\\n)\\\\n\\\\nexport const ErrorField = () => (\\\\n  <ThemeWrapper>\\\\n    <Box p='1em'>\\\\n      <NumberInput\\\\n        id='someId'\\\\n        name='someName'\\\\n        className='someClassName'\\\\n        label={text('label', 'Number Input')}\\\\n        labelColor={text('labelColor', 'text.inputLabel.default')}\\\\n        placeholder={text('placeholder', 'Enter number here...')}\\\\n        maxLength={number('maxLength', 10)}\\\\n        error={boolean('error', true)}\\\\n        errorMessage={text('errorMessage', 'Some Field Error')}\\\\n        required={boolean('required', false)}\\\\n        fullWidth={boolean('fullWidth', true)}\\\\n        onChange={action('Triggered: onChange')}\\\\n      />\\\\n    </Box>\\\\n  </ThemeWrapper>\\\\n)\\\\n\\\\nexport const WithOutBorder = () => (\\\\n  <ThemeWrapper>\\\\n    <Box bgColor='grey.100' p='2em'>\\\\n      <NumberInput\\\\n        id='someId'\\\\n        name='someName'\\\\n        className='someClassName'\\\\n        maxLength={number('maxLength', 10)}\\\\n        error={boolean('error', false)}\\\\n        onChange={action('Triggered: onChange')}\\\\n        variant='inline-edit'\\\\n      />\\\\n    </Box>\\\\n  </ThemeWrapper>\\\\n)\\\\n\\\";\\n// @ts-ignore\\nvar __ADDS_MAP__ = {};\\n// @ts-ignore\\nvar __MAIN_FILE_LOCATION__ = \\\"/NumberInput.stories.tsx\\\";\\n// @ts-ignore\\nvar __MODULE_DEPENDENCIES__ = [];\\n// @ts-ignore\\nvar __LOCAL_DEPENDENCIES__ = {};\\n// @ts-ignore\\nvar __IDS_TO_FRAMEWORKS__ = {};\\n        \\nimport React from 'react'\\nimport NumberInput from '.'\\nimport Box from '../../atoms/Box'\\nimport { path } from '..'\\n\\nimport { action } from '@storybook/addon-actions'\\nimport { boolean, number, text } from '@storybook/addon-knobs'\\nimport ThemeWrapper from '../../../utilities/components/ThemeWrapper'\\n\\nexport default {parameters: {\\\"storySource\\\":{\\\"source\\\":\\\"import React from 'react'\\\\nimport NumberInput from '.'\\\\nimport Box from '../../atoms/Box'\\\\nimport { path } from '..'\\\\n\\\\nimport { action } from '@storybook/addon-actions'\\\\nimport { boolean, number, text } from '@storybook/addon-knobs'\\\\nimport ThemeWrapper from '../../../utilities/components/ThemeWrapper'\\\\n\\\\nexport default {\\\\n  title: `${path}/NumberInput`,\\\\n  component: NumberInput\\\\n}\\\\n\\\\nexport const DefaultField = () => (\\\\n  <ThemeWrapper>\\\\n    <Box p='1em'>\\\\n      <NumberInput\\\\n        id='someId'\\\\n        name='someName'\\\\n        className='someClassName'\\\\n        label={text('label', 'Number Input')}\\\\n        labelColor={text('labelColor', 'text.inputLabel.default')}\\\\n        placeholder={text('placeholder', 'Enter number here...')}\\\\n        maxLength={number('maxLength', 10)}\\\\n        error={boolean('error', false)}\\\\n        errorMessage={text('errorMessage', '')}\\\\n        required={boolean('required', false)}\\\\n        fullWidth={boolean('fullWidth', false)}\\\\n        onChange={action('Triggered: onChange')}\\\\n        allowDecimal={boolean('allowDecimal', false)}\\\\n        roundingoffDigit={number('roundingoffDigit', 3)}\\\\n      />\\\\n    </Box>\\\\n  </ThemeWrapper>\\\\n)\\\\n\\\\nexport const DefaultFieldWithInitialValue = () => (\\\\n  <ThemeWrapper>\\\\n    <Box p='1em'>\\\\n      <NumberInput\\\\n        id='someId'\\\\n        name='someName'\\\\n        className='someClassName'\\\\n        label={text('label', 'Number Input')}\\\\n        labelColor={text('labelColor', 'text.inputLabel.default')}\\\\n        placeholder={text('placeholder', 'Enter number here...')}\\\\n        initialValue={number('initialValue', 25)}\\\\n        maxLength={number('maxLength', 10)}\\\\n        error={boolean('error', false)}\\\\n        errorMessage={text('errorMessage', '')}\\\\n        required={boolean('required', false)}\\\\n        fullWidth={boolean('fullWidth', false)}\\\\n        onChange={action('Triggered: onChange')}\\\\n        allowDecimal={boolean('allowDecimal', false)}\\\\n      />\\\\n    </Box>\\\\n  </ThemeWrapper>\\\\n)\\\\n\\\\nexport const DecimalField = () => (\\\\n  <ThemeWrapper>\\\\n    <Box p='1em'>\\\\n      <NumberInput\\\\n        id='someId'\\\\n        name='someName'\\\\n        className='someClassName'\\\\n        label={text('label', 'Number Input')}\\\\n        labelColor={text('labelColor', 'text.inputLabel.default')}\\\\n        placeholder={text('placeholder', 'Enter number here...')}\\\\n        maxLength={number('maxLength', 10)}\\\\n        error={boolean('error', false)}\\\\n        errorMessage={text('errorMessage', '')}\\\\n        required={boolean('required', false)}\\\\n        fullWidth={boolean('fullWidth', false)}\\\\n        onChange={action('Triggered: onChange')}\\\\n        allowDecimal={boolean('allowDecimal', true)}\\\\n        roundingoffDigit={number('roundingoffDigit', 3)}\\\\n      />\\\\n    </Box>\\\\n  </ThemeWrapper>\\\\n)\\\\n\\\\nexport const RequiredField = () => (\\\\n  <ThemeWrapper>\\\\n    <Box p='1em'>\\\\n      <NumberInput\\\\n        id='someId'\\\\n        name='someName'\\\\n        className='someClassName'\\\\n        label={text('label', 'Number Input')}\\\\n        labelColor={text('labelColor', 'text.inputLabel.default')}\\\\n        placeholder={text('placeholder', 'Enter number here...')}\\\\n        maxLength={number('maxLength', 10)}\\\\n        error={boolean('error', false)}\\\\n        errorMessage={text('errorMessage', '')}\\\\n        required={boolean('required', true)}\\\\n        fullWidth={boolean('fullWidth', false)}\\\\n        onChange={action('Triggered: onChange')}\\\\n      />\\\\n    </Box>\\\\n  </ThemeWrapper>\\\\n)\\\\n\\\\nexport const ErrorField = () => (\\\\n  <ThemeWrapper>\\\\n    <Box p='1em'>\\\\n      <NumberInput\\\\n        id='someId'\\\\n        name='someName'\\\\n        className='someClassName'\\\\n        label={text('label', 'Number Input')}\\\\n        labelColor={text('labelColor', 'text.inputLabel.default')}\\\\n        placeholder={text('placeholder', 'Enter number here...')}\\\\n        maxLength={number('maxLength', 10)}\\\\n        error={boolean('error', true)}\\\\n        errorMessage={text('errorMessage', 'Some Field Error')}\\\\n        required={boolean('required', false)}\\\\n        fullWidth={boolean('fullWidth', true)}\\\\n        onChange={action('Triggered: onChange')}\\\\n      />\\\\n    </Box>\\\\n  </ThemeWrapper>\\\\n)\\\\n\\\\nexport const WithOutBorder = () => (\\\\n  <ThemeWrapper>\\\\n    <Box bgColor='grey.100' p='2em'>\\\\n      <NumberInput\\\\n        id='someId'\\\\n        name='someName'\\\\n        className='someClassName'\\\\n        maxLength={number('maxLength', 10)}\\\\n        error={boolean('error', false)}\\\\n        onChange={action('Triggered: onChange')}\\\\n        variant='inline-edit'\\\\n      />\\\\n    </Box>\\\\n  </ThemeWrapper>\\\\n)\\\\n\\\",\\\"locationsMap\\\":{}},},\\n  title: `${path}/NumberInput`,\\n  component: NumberInput\\n}\\n\\nexport const DefaultField = addSourceDecorator(() => (\\n  <ThemeWrapper>\\n    <Box p='1em'>\\n      <NumberInput\\n        id='someId'\\n        name='someName'\\n        className='someClassName'\\n        label={text('label', 'Number Input')}\\n        labelColor={text('labelColor', 'text.inputLabel.default')}\\n        placeholder={text('placeholder', 'Enter number here...')}\\n        maxLength={number('maxLength', 10)}\\n        error={boolean('error', false)}\\n        errorMessage={text('errorMessage', '')}\\n        required={boolean('required', false)}\\n        fullWidth={boolean('fullWidth', false)}\\n        onChange={action('Triggered: onChange')}\\n        allowDecimal={boolean('allowDecimal', false)}\\n        roundingoffDigit={number('roundingoffDigit', 3)}\\n      />\\n    </Box>\\n  </ThemeWrapper>\\n), {__STORY__, __ADDS_MAP__,__MAIN_FILE_LOCATION__,__MODULE_DEPENDENCIES__,__LOCAL_DEPENDENCIES__,__SOURCE_PREFIX__,__IDS_TO_FRAMEWORKS__});\\n\\nexport const DefaultFieldWithInitialValue = addSourceDecorator(() => (\\n  <ThemeWrapper>\\n    <Box p='1em'>\\n      <NumberInput\\n        id='someId'\\n        name='someName'\\n        className='someClassName'\\n        label={text('label', 'Number Input')}\\n        labelColor={text('labelColor', 'text.inputLabel.default')}\\n        placeholder={text('placeholder', 'Enter number here...')}\\n        initialValue={number('initialValue', 25)}\\n        maxLength={number('maxLength', 10)}\\n        error={boolean('error', false)}\\n        errorMessage={text('errorMessage', '')}\\n        required={boolean('required', false)}\\n        fullWidth={boolean('fullWidth', false)}\\n        onChange={action('Triggered: onChange')}\\n        allowDecimal={boolean('allowDecimal', false)}\\n      />\\n    </Box>\\n  </ThemeWrapper>\\n), {__STORY__, __ADDS_MAP__,__MAIN_FILE_LOCATION__,__MODULE_DEPENDENCIES__,__LOCAL_DEPENDENCIES__,__SOURCE_PREFIX__,__IDS_TO_FRAMEWORKS__});\\n\\nexport const DecimalField = addSourceDecorator(() => (\\n  <ThemeWrapper>\\n    <Box p='1em'>\\n      <NumberInput\\n        id='someId'\\n        name='someName'\\n        className='someClassName'\\n        label={text('label', 'Number Input')}\\n        labelColor={text('labelColor', 'text.inputLabel.default')}\\n        placeholder={text('placeholder', 'Enter number here...')}\\n        maxLength={number('maxLength', 10)}\\n        error={boolean('error', false)}\\n        errorMessage={text('errorMessage', '')}\\n        required={boolean('required', false)}\\n        fullWidth={boolean('fullWidth', false)}\\n        onChange={action('Triggered: onChange')}\\n        allowDecimal={boolean('allowDecimal', true)}\\n        roundingoffDigit={number('roundingoffDigit', 3)}\\n      />\\n    </Box>\\n  </ThemeWrapper>\\n), {__STORY__, __ADDS_MAP__,__MAIN_FILE_LOCATION__,__MODULE_DEPENDENCIES__,__LOCAL_DEPENDENCIES__,__SOURCE_PREFIX__,__IDS_TO_FRAMEWORKS__});\\n\\nexport const RequiredField = addSourceDecorator(() => (\\n  <ThemeWrapper>\\n    <Box p='1em'>\\n      <NumberInput\\n        id='someId'\\n        name='someName'\\n        className='someClassName'\\n        label={text('label', 'Number Input')}\\n        labelColor={text('labelColor', 'text.inputLabel.default')}\\n        placeholder={text('placeholder', 'Enter number here...')}\\n        maxLength={number('maxLength', 10)}\\n        error={boolean('error', false)}\\n        errorMessage={text('errorMessage', '')}\\n        required={boolean('required', true)}\\n        fullWidth={boolean('fullWidth', false)}\\n        onChange={action('Triggered: onChange')}\\n      />\\n    </Box>\\n  </ThemeWrapper>\\n), {__STORY__, __ADDS_MAP__,__MAIN_FILE_LOCATION__,__MODULE_DEPENDENCIES__,__LOCAL_DEPENDENCIES__,__SOURCE_PREFIX__,__IDS_TO_FRAMEWORKS__});\\n\\nexport const ErrorField = addSourceDecorator(() => (\\n  <ThemeWrapper>\\n    <Box p='1em'>\\n      <NumberInput\\n        id='someId'\\n        name='someName'\\n        className='someClassName'\\n        label={text('label', 'Number Input')}\\n        labelColor={text('labelColor', 'text.inputLabel.default')}\\n        placeholder={text('placeholder', 'Enter number here...')}\\n        maxLength={number('maxLength', 10)}\\n        error={boolean('error', true)}\\n        errorMessage={text('errorMessage', 'Some Field Error')}\\n        required={boolean('required', false)}\\n        fullWidth={boolean('fullWidth', true)}\\n        onChange={action('Triggered: onChange')}\\n      />\\n    </Box>\\n  </ThemeWrapper>\\n), {__STORY__, __ADDS_MAP__,__MAIN_FILE_LOCATION__,__MODULE_DEPENDENCIES__,__LOCAL_DEPENDENCIES__,__SOURCE_PREFIX__,__IDS_TO_FRAMEWORKS__});\\n\\nexport const WithOutBorder = addSourceDecorator(() => (\\n  <ThemeWrapper>\\n    <Box bgColor='grey.100' p='2em'>\\n      <NumberInput\\n        id='someId'\\n        name='someName'\\n        className='someClassName'\\n        maxLength={number('maxLength', 10)}\\n        error={boolean('error', false)}\\n        onChange={action('Triggered: onChange')}\\n        variant='inline-edit'\\n      />\\n    </Box>\\n  </ThemeWrapper>\\n), {__STORY__, __ADDS_MAP__,__MAIN_FILE_LOCATION__,__MODULE_DEPENDENCIES__,__LOCAL_DEPENDENCIES__,__SOURCE_PREFIX__,__IDS_TO_FRAMEWORKS__});\",\"locationsMap\":{}},\"storySource\":{\"source\":\"import React from 'react'\\nimport NumberInput from '.'\\nimport Box from '../../atoms/Box'\\nimport { path } from '..'\\n\\nimport { action } from '@storybook/addon-actions'\\nimport { boolean, number, text } from '@storybook/addon-knobs'\\nimport ThemeWrapper from '../../../utilities/components/ThemeWrapper'\\n\\nexport default {\\n  title: `${path}/NumberInput`,\\n  component: NumberInput\\n}\\n\\nexport const DefaultField = () => (\\n  <ThemeWrapper>\\n    <Box p='1em'>\\n      <NumberInput\\n        id='someId'\\n        name='someName'\\n        className='someClassName'\\n        label={text('label', 'Number Input')}\\n        labelColor={text('labelColor', 'text.inputLabel.default')}\\n        placeholder={text('placeholder', 'Enter number here...')}\\n        maxLength={number('maxLength', 10)}\\n        error={boolean('error', false)}\\n        errorMessage={text('errorMessage', '')}\\n        required={boolean('required', false)}\\n        fullWidth={boolean('fullWidth', false)}\\n        onChange={action('Triggered: onChange')}\\n        allowDecimal={boolean('allowDecimal', false)}\\n        roundingoffDigit={number('roundingoffDigit', 3)}\\n      />\\n    </Box>\\n  </ThemeWrapper>\\n)\\n\\nexport const DefaultFieldWithInitialValue = () => (\\n  <ThemeWrapper>\\n    <Box p='1em'>\\n      <NumberInput\\n        id='someId'\\n        name='someName'\\n        className='someClassName'\\n        label={text('label', 'Number Input')}\\n        labelColor={text('labelColor', 'text.inputLabel.default')}\\n        placeholder={text('placeholder', 'Enter number here...')}\\n        initialValue={number('initialValue', 25)}\\n        maxLength={number('maxLength', 10)}\\n        error={boolean('error', false)}\\n        errorMessage={text('errorMessage', '')}\\n        required={boolean('required', false)}\\n        fullWidth={boolean('fullWidth', false)}\\n        onChange={action('Triggered: onChange')}\\n        allowDecimal={boolean('allowDecimal', false)}\\n      />\\n    </Box>\\n  </ThemeWrapper>\\n)\\n\\nexport const DecimalField = () => (\\n  <ThemeWrapper>\\n    <Box p='1em'>\\n      <NumberInput\\n        id='someId'\\n        name='someName'\\n        className='someClassName'\\n        label={text('label', 'Number Input')}\\n        labelColor={text('labelColor', 'text.inputLabel.default')}\\n        placeholder={text('placeholder', 'Enter number here...')}\\n        maxLength={number('maxLength', 10)}\\n        error={boolean('error', false)}\\n        errorMessage={text('errorMessage', '')}\\n        required={boolean('required', false)}\\n        fullWidth={boolean('fullWidth', false)}\\n        onChange={action('Triggered: onChange')}\\n        allowDecimal={boolean('allowDecimal', true)}\\n        roundingoffDigit={number('roundingoffDigit', 3)}\\n      />\\n    </Box>\\n  </ThemeWrapper>\\n)\\n\\nexport const RequiredField = () => (\\n  <ThemeWrapper>\\n    <Box p='1em'>\\n      <NumberInput\\n        id='someId'\\n        name='someName'\\n        className='someClassName'\\n        label={text('label', 'Number Input')}\\n        labelColor={text('labelColor', 'text.inputLabel.default')}\\n        placeholder={text('placeholder', 'Enter number here...')}\\n        maxLength={number('maxLength', 10)}\\n        error={boolean('error', false)}\\n        errorMessage={text('errorMessage', '')}\\n        required={boolean('required', true)}\\n        fullWidth={boolean('fullWidth', false)}\\n        onChange={action('Triggered: onChange')}\\n      />\\n    </Box>\\n  </ThemeWrapper>\\n)\\n\\nexport const ErrorField = () => (\\n  <ThemeWrapper>\\n    <Box p='1em'>\\n      <NumberInput\\n        id='someId'\\n        name='someName'\\n        className='someClassName'\\n        label={text('label', 'Number Input')}\\n        labelColor={text('labelColor', 'text.inputLabel.default')}\\n        placeholder={text('placeholder', 'Enter number here...')}\\n        maxLength={number('maxLength', 10)}\\n        error={boolean('error', true)}\\n        errorMessage={text('errorMessage', 'Some Field Error')}\\n        required={boolean('required', false)}\\n        fullWidth={boolean('fullWidth', true)}\\n        onChange={action('Triggered: onChange')}\\n      />\\n    </Box>\\n  </ThemeWrapper>\\n)\\n\\nexport const WithOutBorder = () => (\\n  <ThemeWrapper>\\n    <Box bgColor='grey.100' p='2em'>\\n      <NumberInput\\n        id='someId'\\n        name='someName'\\n        className='someClassName'\\n        maxLength={number('maxLength', 10)}\\n        error={boolean('error', false)}\\n        onChange={action('Triggered: onChange')}\\n        variant='inline-edit'\\n      />\\n    </Box>\\n  </ThemeWrapper>\\n)\\n\",\"locationsMap\":{}},},\n  title: `${path}/NumberInput`,\n  component: NumberInput\n}\n\nexport const DefaultField = addSourceDecorator(addSourceDecorator(addSourceDecorator(() => (\n  <ThemeWrapper>\n    <Box p='1em'>\n      <NumberInput\n        id='someId'\n        name='someName'\n        className='someClassName'\n        label={text('label', 'Number Input')}\n        labelColor={text('labelColor', 'text.inputLabel.default')}\n        placeholder={text('placeholder', 'Enter number here...')}\n        maxLength={number('maxLength', 10)}\n        error={boolean('error', false)}\n        errorMessage={text('errorMessage', '')}\n        required={boolean('required', false)}\n        fullWidth={boolean('fullWidth', false)}\n        onChange={action('Triggered: onChange')}\n        allowDecimal={boolean('allowDecimal', false)}\n        roundingoffDigit={number('roundingoffDigit', 3)}\n      />\n    </Box>\n  </ThemeWrapper>\n), {__STORY__, __ADDS_MAP__,__MAIN_FILE_LOCATION__,__MODULE_DEPENDENCIES__,__LOCAL_DEPENDENCIES__,__SOURCE_PREFIX__,__IDS_TO_FRAMEWORKS__}), {__STORY__, __ADDS_MAP__,__MAIN_FILE_LOCATION__,__MODULE_DEPENDENCIES__,__LOCAL_DEPENDENCIES__,__SOURCE_PREFIX__,__IDS_TO_FRAMEWORKS__}), {__STORY__, __ADDS_MAP__,__MAIN_FILE_LOCATION__,__MODULE_DEPENDENCIES__,__LOCAL_DEPENDENCIES__,__SOURCE_PREFIX__,__IDS_TO_FRAMEWORKS__});;;\n\nexport const DefaultFieldWithInitialValue = addSourceDecorator(addSourceDecorator(addSourceDecorator(() => (\n  <ThemeWrapper>\n    <Box p='1em'>\n      <NumberInput\n        id='someId'\n        name='someName'\n        className='someClassName'\n        label={text('label', 'Number Input')}\n        labelColor={text('labelColor', 'text.inputLabel.default')}\n        placeholder={text('placeholder', 'Enter number here...')}\n        initialValue={number('initialValue', 25)}\n        maxLength={number('maxLength', 10)}\n        error={boolean('error', false)}\n        errorMessage={text('errorMessage', '')}\n        required={boolean('required', false)}\n        fullWidth={boolean('fullWidth', false)}\n        onChange={action('Triggered: onChange')}\n        allowDecimal={boolean('allowDecimal', false)}\n      />\n    </Box>\n  </ThemeWrapper>\n), {__STORY__, __ADDS_MAP__,__MAIN_FILE_LOCATION__,__MODULE_DEPENDENCIES__,__LOCAL_DEPENDENCIES__,__SOURCE_PREFIX__,__IDS_TO_FRAMEWORKS__}), {__STORY__, __ADDS_MAP__,__MAIN_FILE_LOCATION__,__MODULE_DEPENDENCIES__,__LOCAL_DEPENDENCIES__,__SOURCE_PREFIX__,__IDS_TO_FRAMEWORKS__}), {__STORY__, __ADDS_MAP__,__MAIN_FILE_LOCATION__,__MODULE_DEPENDENCIES__,__LOCAL_DEPENDENCIES__,__SOURCE_PREFIX__,__IDS_TO_FRAMEWORKS__});;;\n\nexport const DecimalField = addSourceDecorator(addSourceDecorator(addSourceDecorator(() => (\n  <ThemeWrapper>\n    <Box p='1em'>\n      <NumberInput\n        id='someId'\n        name='someName'\n        className='someClassName'\n        label={text('label', 'Number Input')}\n        labelColor={text('labelColor', 'text.inputLabel.default')}\n        placeholder={text('placeholder', 'Enter number here...')}\n        maxLength={number('maxLength', 10)}\n        error={boolean('error', false)}\n        errorMessage={text('errorMessage', '')}\n        required={boolean('required', false)}\n        fullWidth={boolean('fullWidth', false)}\n        onChange={action('Triggered: onChange')}\n        allowDecimal={boolean('allowDecimal', true)}\n        roundingoffDigit={number('roundingoffDigit', 3)}\n      />\n    </Box>\n  </ThemeWrapper>\n), {__STORY__, __ADDS_MAP__,__MAIN_FILE_LOCATION__,__MODULE_DEPENDENCIES__,__LOCAL_DEPENDENCIES__,__SOURCE_PREFIX__,__IDS_TO_FRAMEWORKS__}), {__STORY__, __ADDS_MAP__,__MAIN_FILE_LOCATION__,__MODULE_DEPENDENCIES__,__LOCAL_DEPENDENCIES__,__SOURCE_PREFIX__,__IDS_TO_FRAMEWORKS__}), {__STORY__, __ADDS_MAP__,__MAIN_FILE_LOCATION__,__MODULE_DEPENDENCIES__,__LOCAL_DEPENDENCIES__,__SOURCE_PREFIX__,__IDS_TO_FRAMEWORKS__});;;\n\nexport const RequiredField = addSourceDecorator(addSourceDecorator(addSourceDecorator(() => (\n  <ThemeWrapper>\n    <Box p='1em'>\n      <NumberInput\n        id='someId'\n        name='someName'\n        className='someClassName'\n        label={text('label', 'Number Input')}\n        labelColor={text('labelColor', 'text.inputLabel.default')}\n        placeholder={text('placeholder', 'Enter number here...')}\n        maxLength={number('maxLength', 10)}\n        error={boolean('error', false)}\n        errorMessage={text('errorMessage', '')}\n        required={boolean('required', true)}\n        fullWidth={boolean('fullWidth', false)}\n        onChange={action('Triggered: onChange')}\n      />\n    </Box>\n  </ThemeWrapper>\n), {__STORY__, __ADDS_MAP__,__MAIN_FILE_LOCATION__,__MODULE_DEPENDENCIES__,__LOCAL_DEPENDENCIES__,__SOURCE_PREFIX__,__IDS_TO_FRAMEWORKS__}), {__STORY__, __ADDS_MAP__,__MAIN_FILE_LOCATION__,__MODULE_DEPENDENCIES__,__LOCAL_DEPENDENCIES__,__SOURCE_PREFIX__,__IDS_TO_FRAMEWORKS__}), {__STORY__, __ADDS_MAP__,__MAIN_FILE_LOCATION__,__MODULE_DEPENDENCIES__,__LOCAL_DEPENDENCIES__,__SOURCE_PREFIX__,__IDS_TO_FRAMEWORKS__});;;\n\nexport const ErrorField = addSourceDecorator(addSourceDecorator(addSourceDecorator(() => (\n  <ThemeWrapper>\n    <Box p='1em'>\n      <NumberInput\n        id='someId'\n        name='someName'\n        className='someClassName'\n        label={text('label', 'Number Input')}\n        labelColor={text('labelColor', 'text.inputLabel.default')}\n        placeholder={text('placeholder', 'Enter number here...')}\n        maxLength={number('maxLength', 10)}\n        error={boolean('error', true)}\n        errorMessage={text('errorMessage', 'Some Field Error')}\n        required={boolean('required', false)}\n        fullWidth={boolean('fullWidth', true)}\n        onChange={action('Triggered: onChange')}\n      />\n    </Box>\n  </ThemeWrapper>\n), {__STORY__, __ADDS_MAP__,__MAIN_FILE_LOCATION__,__MODULE_DEPENDENCIES__,__LOCAL_DEPENDENCIES__,__SOURCE_PREFIX__,__IDS_TO_FRAMEWORKS__}), {__STORY__, __ADDS_MAP__,__MAIN_FILE_LOCATION__,__MODULE_DEPENDENCIES__,__LOCAL_DEPENDENCIES__,__SOURCE_PREFIX__,__IDS_TO_FRAMEWORKS__}), {__STORY__, __ADDS_MAP__,__MAIN_FILE_LOCATION__,__MODULE_DEPENDENCIES__,__LOCAL_DEPENDENCIES__,__SOURCE_PREFIX__,__IDS_TO_FRAMEWORKS__});;;\n\nexport const WithOutBorder = addSourceDecorator(addSourceDecorator(addSourceDecorator(() => (\n  <ThemeWrapper>\n    <Box bgColor='grey.100' p='2em'>\n      <NumberInput\n        id='someId'\n        name='someName'\n        className='someClassName'\n        maxLength={number('maxLength', 10)}\n        error={boolean('error', false)}\n        onChange={action('Triggered: onChange')}\n        variant='inline-edit'\n      />\n    </Box>\n  </ThemeWrapper>\n), {__STORY__, __ADDS_MAP__,__MAIN_FILE_LOCATION__,__MODULE_DEPENDENCIES__,__LOCAL_DEPENDENCIES__,__SOURCE_PREFIX__,__IDS_TO_FRAMEWORKS__}), {__STORY__, __ADDS_MAP__,__MAIN_FILE_LOCATION__,__MODULE_DEPENDENCIES__,__LOCAL_DEPENDENCIES__,__SOURCE_PREFIX__,__IDS_TO_FRAMEWORKS__}), {__STORY__, __ADDS_MAP__,__MAIN_FILE_LOCATION__,__MODULE_DEPENDENCIES__,__LOCAL_DEPENDENCIES__,__SOURCE_PREFIX__,__IDS_TO_FRAMEWORKS__});"],"sourceRoot":""},"metadata":{},"sourceType":"module"}