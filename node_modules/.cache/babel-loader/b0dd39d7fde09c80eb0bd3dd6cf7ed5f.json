{"ast":null,"code":"import _defineProperty from \"/Users/farhanansari/Code/ui-library/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/defineProperty\";\n\nvar _parameters;\n\n/* eslint-disable */\n// @ts-nocheck\n// @ts-ignore\nvar withSourceLoader = require('@storybook/source-loader/preview').withSource; // @ts-ignore\n\n\nvar addSourceDecorator = require(\"@storybook/source-loader/preview\").addSource; // @ts-ignore\n\n\nvar __SOURCE_PREFIX__ = \"/Users/farhanansari/Code/ui-library/src/components/molecules/GroupedDropdown\"; // @ts-ignore\n\nvar __STORY__ = \"\\n\\n// @ts-nocheck\\n// @ts-ignore\\nvar withSourceLoader = require('@storybook/source-loader/preview').withSource;\\n// @ts-ignore\\nvar addSourceDecorator = require(\\\"@storybook/source-loader/preview\\\").addSource;\\n// @ts-ignore\\nvar __SOURCE_PREFIX__ = \\\"/Users/farhanansari/Code/ui-library/src/components/molecules/GroupedDropdown\\\";\\n// @ts-ignore\\nvar __STORY__ = \\\"\\\\n\\\\n// @ts-nocheck\\\\n// @ts-ignore\\\\nvar withSourceLoader = require('@storybook/source-loader/preview').withSource;\\\\n// @ts-ignore\\\\nvar addSourceDecorator = require(\\\\\\\"@storybook/source-loader/preview\\\\\\\").addSource;\\\\n// @ts-ignore\\\\nvar __SOURCE_PREFIX__ = \\\\\\\"/Users/farhanansari/Code/ui-library/src/components/molecules/GroupedDropdown\\\\\\\";\\\\n// @ts-ignore\\\\nvar __STORY__ = \\\\\\\"import React from 'react'\\\\\\\\nimport Box from '../../atoms/Box'\\\\\\\\nimport { path } from '..'\\\\\\\\nimport ThemeWrapper from '../../../utilities/components/ThemeWrapper'\\\\\\\\nimport GroupedDropdown from '.'\\\\\\\\nimport Data from './Data'\\\\\\\\nimport { action } from '@storybook/addon-actions'\\\\\\\\nimport Card from '../../atoms/Card'\\\\\\\\nimport Button from '../../atoms/Button'\\\\\\\\nimport { text, object, withKnobs } from '@storybook/addon-knobs'\\\\\\\\n\\\\\\\\nexport default {\\\\\\\\n  title: `${path}/GroupedDropdown`,\\\\\\\\n  decorators: [withKnobs],\\\\\\\\n  component: GroupedDropdown\\\\\\\\n}\\\\\\\\n\\\\\\\\nexport const GroupedDropdownStory = () => {\\\\\\\\n  const [open, setOpen] = React.useState(false)\\\\\\\\n  const [tag, setTag] = React.useState(false)\\\\\\\\n\\\\\\\\n  const onChange = (data: any, category: any) => {\\\\\\\\n    action('selected', data)\\\\\\\\n    handleOpen()\\\\\\\\n    setTag(data?.label + category?.label)\\\\\\\\n  }\\\\\\\\n  const handleOpen = () => {\\\\\\\\n    setOpen(!open)\\\\\\\\n  }\\\\\\\\n\\\\\\\\n  return (\\\\\\\\n    <ThemeWrapper>\\\\\\\\n      <Box p='1em'>\\\\\\\\n        <Box p='1em'>\\\\\\\\n          <Card style={{ display: 'inline-block' }}>Tag: {tag}</Card>\\\\\\\\n        </Box>\\\\\\\\n        <Button onClick={handleOpen} variant='button' intent='default'>\\\\\\\\n          Click me !\\\\\\\\n        </Button>\\\\\\\\n        <div>\\\\\\\\n          {open && (\\\\\\\\n            <Card style={{ display: 'inline-flex', padding: '0px' }}>\\\\\\\\n              <GroupedDropdown\\\\\\\\n                category={object('category', Data.category)}\\\\\\\\n                data={object('data', Data.data)}\\\\\\\\n                width={text('width', '500px')}\\\\\\\\n                height={text('height', '250px')}\\\\\\\\n                allLabel={text('allLabel', 'All')}\\\\\\\\n                handleOnChange={onChange}\\\\\\\\n                searchFieldLabel={text('dropdownLabel', 'Search')}\\\\\\\\n                searchFieldPlaceholder={text(\\\\\\\\n                  'dropdownPlaceholder',\\\\\\\\n                  'Search Tags'\\\\\\\\n                )}\\\\\\\\n              />\\\\\\\\n            </Card>\\\\\\\\n          )}\\\\\\\\n        </div>\\\\\\\\n      </Box>\\\\\\\\n    </ThemeWrapper>\\\\\\\\n  )\\\\\\\\n}\\\\\\\\n\\\\\\\";\\\\n// @ts-ignore\\\\nvar __ADDS_MAP__ = {};\\\\n// @ts-ignore\\\\nvar __MAIN_FILE_LOCATION__ = \\\\\\\"/GroupedDropdown.stories.tsx\\\\\\\";\\\\n// @ts-ignore\\\\nvar __MODULE_DEPENDENCIES__ = [];\\\\n// @ts-ignore\\\\nvar __LOCAL_DEPENDENCIES__ = {};\\\\n// @ts-ignore\\\\nvar __IDS_TO_FRAMEWORKS__ = {};\\\\n        \\\\nimport React from 'react'\\\\nimport Box from '../../atoms/Box'\\\\nimport { path } from '..'\\\\nimport ThemeWrapper from '../../../utilities/components/ThemeWrapper'\\\\nimport GroupedDropdown from '.'\\\\nimport Data from './Data'\\\\nimport { action } from '@storybook/addon-actions'\\\\nimport Card from '../../atoms/Card'\\\\nimport Button from '../../atoms/Button'\\\\nimport { text, object, withKnobs } from '@storybook/addon-knobs'\\\\n\\\\nexport default {parameters: {\\\\\\\"storySource\\\\\\\":{\\\\\\\"source\\\\\\\":\\\\\\\"import React from 'react'\\\\\\\\nimport Box from '../../atoms/Box'\\\\\\\\nimport { path } from '..'\\\\\\\\nimport ThemeWrapper from '../../../utilities/components/ThemeWrapper'\\\\\\\\nimport GroupedDropdown from '.'\\\\\\\\nimport Data from './Data'\\\\\\\\nimport { action } from '@storybook/addon-actions'\\\\\\\\nimport Card from '../../atoms/Card'\\\\\\\\nimport Button from '../../atoms/Button'\\\\\\\\nimport { text, object, withKnobs } from '@storybook/addon-knobs'\\\\\\\\n\\\\\\\\nexport default {\\\\\\\\n  title: `${path}/GroupedDropdown`,\\\\\\\\n  decorators: [withKnobs],\\\\\\\\n  component: GroupedDropdown\\\\\\\\n}\\\\\\\\n\\\\\\\\nexport const GroupedDropdownStory = () => {\\\\\\\\n  const [open, setOpen] = React.useState(false)\\\\\\\\n  const [tag, setTag] = React.useState(false)\\\\\\\\n\\\\\\\\n  const onChange = (data: any, category: any) => {\\\\\\\\n    action('selected', data)\\\\\\\\n    handleOpen()\\\\\\\\n    setTag(data?.label + category?.label)\\\\\\\\n  }\\\\\\\\n  const handleOpen = () => {\\\\\\\\n    setOpen(!open)\\\\\\\\n  }\\\\\\\\n\\\\\\\\n  return (\\\\\\\\n    <ThemeWrapper>\\\\\\\\n      <Box p='1em'>\\\\\\\\n        <Box p='1em'>\\\\\\\\n          <Card style={{ display: 'inline-block' }}>Tag: {tag}</Card>\\\\\\\\n        </Box>\\\\\\\\n        <Button onClick={handleOpen} variant='button' intent='default'>\\\\\\\\n          Click me !\\\\\\\\n        </Button>\\\\\\\\n        <div>\\\\\\\\n          {open && (\\\\\\\\n            <Card style={{ display: 'inline-flex', padding: '0px' }}>\\\\\\\\n              <GroupedDropdown\\\\\\\\n                category={object('category', Data.category)}\\\\\\\\n                data={object('data', Data.data)}\\\\\\\\n                width={text('width', '500px')}\\\\\\\\n                height={text('height', '250px')}\\\\\\\\n                allLabel={text('allLabel', 'All')}\\\\\\\\n                handleOnChange={onChange}\\\\\\\\n                searchFieldLabel={text('dropdownLabel', 'Search')}\\\\\\\\n                searchFieldPlaceholder={text(\\\\\\\\n                  'dropdownPlaceholder',\\\\\\\\n                  'Search Tags'\\\\\\\\n                )}\\\\\\\\n              />\\\\\\\\n            </Card>\\\\\\\\n          )}\\\\\\\\n        </div>\\\\\\\\n      </Box>\\\\\\\\n    </ThemeWrapper>\\\\\\\\n  )\\\\\\\\n}\\\\\\\\n\\\\\\\",\\\\\\\"locationsMap\\\\\\\":{}},},\\\\n  title: `${path}/GroupedDropdown`,\\\\n  decorators: [withKnobs],\\\\n  component: GroupedDropdown\\\\n}\\\\n\\\\nexport const GroupedDropdownStory = addSourceDecorator(() => {\\\\n  const [open, setOpen] = React.useState(false)\\\\n  const [tag, setTag] = React.useState(false)\\\\n\\\\n  const onChange = (data: any, category: any) => {\\\\n    action('selected', data)\\\\n    handleOpen()\\\\n    setTag(data?.label + category?.label)\\\\n  }\\\\n  const handleOpen = () => {\\\\n    setOpen(!open)\\\\n  }\\\\n\\\\n  return (\\\\n    <ThemeWrapper>\\\\n      <Box p='1em'>\\\\n        <Box p='1em'>\\\\n          <Card style={{ display: 'inline-block' }}>Tag: {tag}</Card>\\\\n        </Box>\\\\n        <Button onClick={handleOpen} variant='button' intent='default'>\\\\n          Click me !\\\\n        </Button>\\\\n        <div>\\\\n          {open && (\\\\n            <Card style={{ display: 'inline-flex', padding: '0px' }}>\\\\n              <GroupedDropdown\\\\n                category={object('category', Data.category)}\\\\n                data={object('data', Data.data)}\\\\n                width={text('width', '500px')}\\\\n                height={text('height', '250px')}\\\\n                allLabel={text('allLabel', 'All')}\\\\n                handleOnChange={onChange}\\\\n                searchFieldLabel={text('dropdownLabel', 'Search')}\\\\n                searchFieldPlaceholder={text(\\\\n                  'dropdownPlaceholder',\\\\n                  'Search Tags'\\\\n                )}\\\\n              />\\\\n            </Card>\\\\n          )}\\\\n        </div>\\\\n      </Box>\\\\n    </ThemeWrapper>\\\\n  )\\\\n}, {__STORY__, __ADDS_MAP__,__MAIN_FILE_LOCATION__,__MODULE_DEPENDENCIES__,__LOCAL_DEPENDENCIES__,__SOURCE_PREFIX__,__IDS_TO_FRAMEWORKS__});\\\";\\n// @ts-ignore\\nvar __ADDS_MAP__ = {};\\n// @ts-ignore\\nvar __MAIN_FILE_LOCATION__ = \\\"/GroupedDropdown.stories.tsx\\\";\\n// @ts-ignore\\nvar __MODULE_DEPENDENCIES__ = [];\\n// @ts-ignore\\nvar __LOCAL_DEPENDENCIES__ = {};\\n// @ts-ignore\\nvar __IDS_TO_FRAMEWORKS__ = {};\\n        \\n\\n\\n// @ts-nocheck\\n// @ts-ignore\\nvar withSourceLoader = require('@storybook/source-loader/preview').withSource;\\n// @ts-ignore\\nvar addSourceDecorator = require(\\\"@storybook/source-loader/preview\\\").addSource;\\n// @ts-ignore\\nvar __SOURCE_PREFIX__ = \\\"/Users/farhanansari/Code/ui-library/src/components/molecules/GroupedDropdown\\\";\\n// @ts-ignore\\nvar __STORY__ = \\\"import React from 'react'\\\\nimport Box from '../../atoms/Box'\\\\nimport { path } from '..'\\\\nimport ThemeWrapper from '../../../utilities/components/ThemeWrapper'\\\\nimport GroupedDropdown from '.'\\\\nimport Data from './Data'\\\\nimport { action } from '@storybook/addon-actions'\\\\nimport Card from '../../atoms/Card'\\\\nimport Button from '../../atoms/Button'\\\\nimport { text, object, withKnobs } from '@storybook/addon-knobs'\\\\n\\\\nexport default {\\\\n  title: `${path}/GroupedDropdown`,\\\\n  decorators: [withKnobs],\\\\n  component: GroupedDropdown\\\\n}\\\\n\\\\nexport const GroupedDropdownStory = () => {\\\\n  const [open, setOpen] = React.useState(false)\\\\n  const [tag, setTag] = React.useState(false)\\\\n\\\\n  const onChange = (data: any, category: any) => {\\\\n    action('selected', data)\\\\n    handleOpen()\\\\n    setTag(data?.label + category?.label)\\\\n  }\\\\n  const handleOpen = () => {\\\\n    setOpen(!open)\\\\n  }\\\\n\\\\n  return (\\\\n    <ThemeWrapper>\\\\n      <Box p='1em'>\\\\n        <Box p='1em'>\\\\n          <Card style={{ display: 'inline-block' }}>Tag: {tag}</Card>\\\\n        </Box>\\\\n        <Button onClick={handleOpen} variant='button' intent='default'>\\\\n          Click me !\\\\n        </Button>\\\\n        <div>\\\\n          {open && (\\\\n            <Card style={{ display: 'inline-flex', padding: '0px' }}>\\\\n              <GroupedDropdown\\\\n                category={object('category', Data.category)}\\\\n                data={object('data', Data.data)}\\\\n                width={text('width', '500px')}\\\\n                height={text('height', '250px')}\\\\n                allLabel={text('allLabel', 'All')}\\\\n                handleOnChange={onChange}\\\\n                searchFieldLabel={text('dropdownLabel', 'Search')}\\\\n                searchFieldPlaceholder={text(\\\\n                  'dropdownPlaceholder',\\\\n                  'Search Tags'\\\\n                )}\\\\n              />\\\\n            </Card>\\\\n          )}\\\\n        </div>\\\\n      </Box>\\\\n    </ThemeWrapper>\\\\n  )\\\\n}\\\\n\\\";\\n// @ts-ignore\\nvar __ADDS_MAP__ = {};\\n// @ts-ignore\\nvar __MAIN_FILE_LOCATION__ = \\\"/GroupedDropdown.stories.tsx\\\";\\n// @ts-ignore\\nvar __MODULE_DEPENDENCIES__ = [];\\n// @ts-ignore\\nvar __LOCAL_DEPENDENCIES__ = {};\\n// @ts-ignore\\nvar __IDS_TO_FRAMEWORKS__ = {};\\n        \\nimport React from 'react'\\nimport Box from '../../atoms/Box'\\nimport { path } from '..'\\nimport ThemeWrapper from '../../../utilities/components/ThemeWrapper'\\nimport GroupedDropdown from '.'\\nimport Data from './Data'\\nimport { action } from '@storybook/addon-actions'\\nimport Card from '../../atoms/Card'\\nimport Button from '../../atoms/Button'\\nimport { text, object, withKnobs } from '@storybook/addon-knobs'\\n\\nexport default {parameters: {\\\"storySource\\\":{\\\"source\\\":\\\"\\\\n\\\\n// @ts-nocheck\\\\n// @ts-ignore\\\\nvar withSourceLoader = require('@storybook/source-loader/preview').withSource;\\\\n// @ts-ignore\\\\nvar addSourceDecorator = require(\\\\\\\"@storybook/source-loader/preview\\\\\\\").addSource;\\\\n// @ts-ignore\\\\nvar __SOURCE_PREFIX__ = \\\\\\\"/Users/farhanansari/Code/ui-library/src/components/molecules/GroupedDropdown\\\\\\\";\\\\n// @ts-ignore\\\\nvar __STORY__ = \\\\\\\"import React from 'react'\\\\\\\\nimport Box from '../../atoms/Box'\\\\\\\\nimport { path } from '..'\\\\\\\\nimport ThemeWrapper from '../../../utilities/components/ThemeWrapper'\\\\\\\\nimport GroupedDropdown from '.'\\\\\\\\nimport Data from './Data'\\\\\\\\nimport { action } from '@storybook/addon-actions'\\\\\\\\nimport Card from '../../atoms/Card'\\\\\\\\nimport Button from '../../atoms/Button'\\\\\\\\nimport { text, object, withKnobs } from '@storybook/addon-knobs'\\\\\\\\n\\\\\\\\nexport default {\\\\\\\\n  title: `${path}/GroupedDropdown`,\\\\\\\\n  decorators: [withKnobs],\\\\\\\\n  component: GroupedDropdown\\\\\\\\n}\\\\\\\\n\\\\\\\\nexport const GroupedDropdownStory = () => {\\\\\\\\n  const [open, setOpen] = React.useState(false)\\\\\\\\n  const [tag, setTag] = React.useState(false)\\\\\\\\n\\\\\\\\n  const onChange = (data: any, category: any) => {\\\\\\\\n    action('selected', data)\\\\\\\\n    handleOpen()\\\\\\\\n    setTag(data?.label + category?.label)\\\\\\\\n  }\\\\\\\\n  const handleOpen = () => {\\\\\\\\n    setOpen(!open)\\\\\\\\n  }\\\\\\\\n\\\\\\\\n  return (\\\\\\\\n    <ThemeWrapper>\\\\\\\\n      <Box p='1em'>\\\\\\\\n        <Box p='1em'>\\\\\\\\n          <Card style={{ display: 'inline-block' }}>Tag: {tag}</Card>\\\\\\\\n        </Box>\\\\\\\\n        <Button onClick={handleOpen} variant='button' intent='default'>\\\\\\\\n          Click me !\\\\\\\\n        </Button>\\\\\\\\n        <div>\\\\\\\\n          {open && (\\\\\\\\n            <Card style={{ display: 'inline-flex', padding: '0px' }}>\\\\\\\\n              <GroupedDropdown\\\\\\\\n                category={object('category', Data.category)}\\\\\\\\n                data={object('data', Data.data)}\\\\\\\\n                width={text('width', '500px')}\\\\\\\\n                height={text('height', '250px')}\\\\\\\\n                allLabel={text('allLabel', 'All')}\\\\\\\\n                handleOnChange={onChange}\\\\\\\\n                searchFieldLabel={text('dropdownLabel', 'Search')}\\\\\\\\n                searchFieldPlaceholder={text(\\\\\\\\n                  'dropdownPlaceholder',\\\\\\\\n                  'Search Tags'\\\\\\\\n                )}\\\\\\\\n              />\\\\\\\\n            </Card>\\\\\\\\n          )}\\\\\\\\n        </div>\\\\\\\\n      </Box>\\\\\\\\n    </ThemeWrapper>\\\\\\\\n  )\\\\\\\\n}\\\\\\\\n\\\\\\\";\\\\n// @ts-ignore\\\\nvar __ADDS_MAP__ = {};\\\\n// @ts-ignore\\\\nvar __MAIN_FILE_LOCATION__ = \\\\\\\"/GroupedDropdown.stories.tsx\\\\\\\";\\\\n// @ts-ignore\\\\nvar __MODULE_DEPENDENCIES__ = [];\\\\n// @ts-ignore\\\\nvar __LOCAL_DEPENDENCIES__ = {};\\\\n// @ts-ignore\\\\nvar __IDS_TO_FRAMEWORKS__ = {};\\\\n        \\\\nimport React from 'react'\\\\nimport Box from '../../atoms/Box'\\\\nimport { path } from '..'\\\\nimport ThemeWrapper from '../../../utilities/components/ThemeWrapper'\\\\nimport GroupedDropdown from '.'\\\\nimport Data from './Data'\\\\nimport { action } from '@storybook/addon-actions'\\\\nimport Card from '../../atoms/Card'\\\\nimport Button from '../../atoms/Button'\\\\nimport { text, object, withKnobs } from '@storybook/addon-knobs'\\\\n\\\\nexport default {parameters: {\\\\\\\"storySource\\\\\\\":{\\\\\\\"source\\\\\\\":\\\\\\\"import React from 'react'\\\\\\\\nimport Box from '../../atoms/Box'\\\\\\\\nimport { path } from '..'\\\\\\\\nimport ThemeWrapper from '../../../utilities/components/ThemeWrapper'\\\\\\\\nimport GroupedDropdown from '.'\\\\\\\\nimport Data from './Data'\\\\\\\\nimport { action } from '@storybook/addon-actions'\\\\\\\\nimport Card from '../../atoms/Card'\\\\\\\\nimport Button from '../../atoms/Button'\\\\\\\\nimport { text, object, withKnobs } from '@storybook/addon-knobs'\\\\\\\\n\\\\\\\\nexport default {\\\\\\\\n  title: `${path}/GroupedDropdown`,\\\\\\\\n  decorators: [withKnobs],\\\\\\\\n  component: GroupedDropdown\\\\\\\\n}\\\\\\\\n\\\\\\\\nexport const GroupedDropdownStory = () => {\\\\\\\\n  const [open, setOpen] = React.useState(false)\\\\\\\\n  const [tag, setTag] = React.useState(false)\\\\\\\\n\\\\\\\\n  const onChange = (data: any, category: any) => {\\\\\\\\n    action('selected', data)\\\\\\\\n    handleOpen()\\\\\\\\n    setTag(data?.label + category?.label)\\\\\\\\n  }\\\\\\\\n  const handleOpen = () => {\\\\\\\\n    setOpen(!open)\\\\\\\\n  }\\\\\\\\n\\\\\\\\n  return (\\\\\\\\n    <ThemeWrapper>\\\\\\\\n      <Box p='1em'>\\\\\\\\n        <Box p='1em'>\\\\\\\\n          <Card style={{ display: 'inline-block' }}>Tag: {tag}</Card>\\\\\\\\n        </Box>\\\\\\\\n        <Button onClick={handleOpen} variant='button' intent='default'>\\\\\\\\n          Click me !\\\\\\\\n        </Button>\\\\\\\\n        <div>\\\\\\\\n          {open && (\\\\\\\\n            <Card style={{ display: 'inline-flex', padding: '0px' }}>\\\\\\\\n              <GroupedDropdown\\\\\\\\n                category={object('category', Data.category)}\\\\\\\\n                data={object('data', Data.data)}\\\\\\\\n                width={text('width', '500px')}\\\\\\\\n                height={text('height', '250px')}\\\\\\\\n                allLabel={text('allLabel', 'All')}\\\\\\\\n                handleOnChange={onChange}\\\\\\\\n                searchFieldLabel={text('dropdownLabel', 'Search')}\\\\\\\\n                searchFieldPlaceholder={text(\\\\\\\\n                  'dropdownPlaceholder',\\\\\\\\n                  'Search Tags'\\\\\\\\n                )}\\\\\\\\n              />\\\\\\\\n            </Card>\\\\\\\\n          )}\\\\\\\\n        </div>\\\\\\\\n      </Box>\\\\\\\\n    </ThemeWrapper>\\\\\\\\n  )\\\\\\\\n}\\\\\\\\n\\\\\\\",\\\\\\\"locationsMap\\\\\\\":{}},},\\\\n  title: `${path}/GroupedDropdown`,\\\\n  decorators: [withKnobs],\\\\n  component: GroupedDropdown\\\\n}\\\\n\\\\nexport const GroupedDropdownStory = addSourceDecorator(() => {\\\\n  const [open, setOpen] = React.useState(false)\\\\n  const [tag, setTag] = React.useState(false)\\\\n\\\\n  const onChange = (data: any, category: any) => {\\\\n    action('selected', data)\\\\n    handleOpen()\\\\n    setTag(data?.label + category?.label)\\\\n  }\\\\n  const handleOpen = () => {\\\\n    setOpen(!open)\\\\n  }\\\\n\\\\n  return (\\\\n    <ThemeWrapper>\\\\n      <Box p='1em'>\\\\n        <Box p='1em'>\\\\n          <Card style={{ display: 'inline-block' }}>Tag: {tag}</Card>\\\\n        </Box>\\\\n        <Button onClick={handleOpen} variant='button' intent='default'>\\\\n          Click me !\\\\n        </Button>\\\\n        <div>\\\\n          {open && (\\\\n            <Card style={{ display: 'inline-flex', padding: '0px' }}>\\\\n              <GroupedDropdown\\\\n                category={object('category', Data.category)}\\\\n                data={object('data', Data.data)}\\\\n                width={text('width', '500px')}\\\\n                height={text('height', '250px')}\\\\n                allLabel={text('allLabel', 'All')}\\\\n                handleOnChange={onChange}\\\\n                searchFieldLabel={text('dropdownLabel', 'Search')}\\\\n                searchFieldPlaceholder={text(\\\\n                  'dropdownPlaceholder',\\\\n                  'Search Tags'\\\\n                )}\\\\n              />\\\\n            </Card>\\\\n          )}\\\\n        </div>\\\\n      </Box>\\\\n    </ThemeWrapper>\\\\n  )\\\\n}, {__STORY__, __ADDS_MAP__,__MAIN_FILE_LOCATION__,__MODULE_DEPENDENCIES__,__LOCAL_DEPENDENCIES__,__SOURCE_PREFIX__,__IDS_TO_FRAMEWORKS__});\\\",\\\"locationsMap\\\":{}},\\\"storySource\\\":{\\\"source\\\":\\\"import React from 'react'\\\\nimport Box from '../../atoms/Box'\\\\nimport { path } from '..'\\\\nimport ThemeWrapper from '../../../utilities/components/ThemeWrapper'\\\\nimport GroupedDropdown from '.'\\\\nimport Data from './Data'\\\\nimport { action } from '@storybook/addon-actions'\\\\nimport Card from '../../atoms/Card'\\\\nimport Button from '../../atoms/Button'\\\\nimport { text, object, withKnobs } from '@storybook/addon-knobs'\\\\n\\\\nexport default {\\\\n  title: `${path}/GroupedDropdown`,\\\\n  decorators: [withKnobs],\\\\n  component: GroupedDropdown\\\\n}\\\\n\\\\nexport const GroupedDropdownStory = () => {\\\\n  const [open, setOpen] = React.useState(false)\\\\n  const [tag, setTag] = React.useState(false)\\\\n\\\\n  const onChange = (data: any, category: any) => {\\\\n    action('selected', data)\\\\n    handleOpen()\\\\n    setTag(data?.label + category?.label)\\\\n  }\\\\n  const handleOpen = () => {\\\\n    setOpen(!open)\\\\n  }\\\\n\\\\n  return (\\\\n    <ThemeWrapper>\\\\n      <Box p='1em'>\\\\n        <Box p='1em'>\\\\n          <Card style={{ display: 'inline-block' }}>Tag: {tag}</Card>\\\\n        </Box>\\\\n        <Button onClick={handleOpen} variant='button' intent='default'>\\\\n          Click me !\\\\n        </Button>\\\\n        <div>\\\\n          {open && (\\\\n            <Card style={{ display: 'inline-flex', padding: '0px' }}>\\\\n              <GroupedDropdown\\\\n                category={object('category', Data.category)}\\\\n                data={object('data', Data.data)}\\\\n                width={text('width', '500px')}\\\\n                height={text('height', '250px')}\\\\n                allLabel={text('allLabel', 'All')}\\\\n                handleOnChange={onChange}\\\\n                searchFieldLabel={text('dropdownLabel', 'Search')}\\\\n                searchFieldPlaceholder={text(\\\\n                  'dropdownPlaceholder',\\\\n                  'Search Tags'\\\\n                )}\\\\n              />\\\\n            </Card>\\\\n          )}\\\\n        </div>\\\\n      </Box>\\\\n    </ThemeWrapper>\\\\n  )\\\\n}\\\\n\\\",\\\"locationsMap\\\":{}},},\\n  title: `${path}/GroupedDropdown`,\\n  decorators: [withKnobs],\\n  component: GroupedDropdown\\n}\\n\\nexport const GroupedDropdownStory = addSourceDecorator(addSourceDecorator(() => {\\n  const [open, setOpen] = React.useState(false)\\n  const [tag, setTag] = React.useState(false)\\n\\n  const onChange = (data: any, category: any) => {\\n    action('selected', data)\\n    handleOpen()\\n    setTag(data?.label + category?.label)\\n  }\\n  const handleOpen = () => {\\n    setOpen(!open)\\n  }\\n\\n  return (\\n    <ThemeWrapper>\\n      <Box p='1em'>\\n        <Box p='1em'>\\n          <Card style={{ display: 'inline-block' }}>Tag: {tag}</Card>\\n        </Box>\\n        <Button onClick={handleOpen} variant='button' intent='default'>\\n          Click me !\\n        </Button>\\n        <div>\\n          {open && (\\n            <Card style={{ display: 'inline-flex', padding: '0px' }}>\\n              <GroupedDropdown\\n                category={object('category', Data.category)}\\n                data={object('data', Data.data)}\\n                width={text('width', '500px')}\\n                height={text('height', '250px')}\\n                allLabel={text('allLabel', 'All')}\\n                handleOnChange={onChange}\\n                searchFieldLabel={text('dropdownLabel', 'Search')}\\n                searchFieldPlaceholder={text(\\n                  'dropdownPlaceholder',\\n                  'Search Tags'\\n                )}\\n              />\\n            </Card>\\n          )}\\n        </div>\\n      </Box>\\n    </ThemeWrapper>\\n  )\\n}, {__STORY__, __ADDS_MAP__,__MAIN_FILE_LOCATION__,__MODULE_DEPENDENCIES__,__LOCAL_DEPENDENCIES__,__SOURCE_PREFIX__,__IDS_TO_FRAMEWORKS__}), {__STORY__, __ADDS_MAP__,__MAIN_FILE_LOCATION__,__MODULE_DEPENDENCIES__,__LOCAL_DEPENDENCIES__,__SOURCE_PREFIX__,__IDS_TO_FRAMEWORKS__});\"; // @ts-ignore\n\nvar __ADDS_MAP__ = {}; // @ts-ignore\n\nvar __MAIN_FILE_LOCATION__ = \"/GroupedDropdown.stories.tsx\"; // @ts-ignore\n\nvar __MODULE_DEPENDENCIES__ = []; // @ts-ignore\n\nvar __LOCAL_DEPENDENCIES__ = {}; // @ts-ignore\n\nvar __IDS_TO_FRAMEWORKS__ = {};\n/* eslint-disable */\n// @ts-nocheck\n// @ts-ignore\n\nvar withSourceLoader = require('@storybook/source-loader/preview').withSource; // @ts-ignore\n\n\nvar addSourceDecorator = require(\"@storybook/source-loader/preview\").addSource; // @ts-ignore\n\n\nvar __SOURCE_PREFIX__ = \"/Users/farhanansari/Code/ui-library/src/components/molecules/GroupedDropdown\"; // @ts-ignore\n\nvar __STORY__ = \"\\n\\n// @ts-nocheck\\n// @ts-ignore\\nvar withSourceLoader = require('@storybook/source-loader/preview').withSource;\\n// @ts-ignore\\nvar addSourceDecorator = require(\\\"@storybook/source-loader/preview\\\").addSource;\\n// @ts-ignore\\nvar __SOURCE_PREFIX__ = \\\"/Users/farhanansari/Code/ui-library/src/components/molecules/GroupedDropdown\\\";\\n// @ts-ignore\\nvar __STORY__ = \\\"import React from 'react'\\\\nimport Box from '../../atoms/Box'\\\\nimport { path } from '..'\\\\nimport ThemeWrapper from '../../../utilities/components/ThemeWrapper'\\\\nimport GroupedDropdown from '.'\\\\nimport Data from './Data'\\\\nimport { action } from '@storybook/addon-actions'\\\\nimport Card from '../../atoms/Card'\\\\nimport Button from '../../atoms/Button'\\\\nimport { text, object, withKnobs } from '@storybook/addon-knobs'\\\\n\\\\nexport default {\\\\n  title: `${path}/GroupedDropdown`,\\\\n  decorators: [withKnobs],\\\\n  component: GroupedDropdown\\\\n}\\\\n\\\\nexport const GroupedDropdownStory = () => {\\\\n  const [open, setOpen] = React.useState(false)\\\\n  const [tag, setTag] = React.useState(false)\\\\n\\\\n  const onChange = (data: any, category: any) => {\\\\n    action('selected', data)\\\\n    handleOpen()\\\\n    setTag(data?.label + category?.label)\\\\n  }\\\\n  const handleOpen = () => {\\\\n    setOpen(!open)\\\\n  }\\\\n\\\\n  return (\\\\n    <ThemeWrapper>\\\\n      <Box p='1em'>\\\\n        <Box p='1em'>\\\\n          <Card style={{ display: 'inline-block' }}>Tag: {tag}</Card>\\\\n        </Box>\\\\n        <Button onClick={handleOpen} variant='button' intent='default'>\\\\n          Click me !\\\\n        </Button>\\\\n        <div>\\\\n          {open && (\\\\n            <Card style={{ display: 'inline-flex', padding: '0px' }}>\\\\n              <GroupedDropdown\\\\n                category={object('category', Data.category)}\\\\n                data={object('data', Data.data)}\\\\n                width={text('width', '500px')}\\\\n                height={text('height', '250px')}\\\\n                allLabel={text('allLabel', 'All')}\\\\n                handleOnChange={onChange}\\\\n                searchFieldLabel={text('dropdownLabel', 'Search')}\\\\n                searchFieldPlaceholder={text(\\\\n                  'dropdownPlaceholder',\\\\n                  'Search Tags'\\\\n                )}\\\\n              />\\\\n            </Card>\\\\n          )}\\\\n        </div>\\\\n      </Box>\\\\n    </ThemeWrapper>\\\\n  )\\\\n}\\\\n\\\";\\n// @ts-ignore\\nvar __ADDS_MAP__ = {};\\n// @ts-ignore\\nvar __MAIN_FILE_LOCATION__ = \\\"/GroupedDropdown.stories.tsx\\\";\\n// @ts-ignore\\nvar __MODULE_DEPENDENCIES__ = [];\\n// @ts-ignore\\nvar __LOCAL_DEPENDENCIES__ = {};\\n// @ts-ignore\\nvar __IDS_TO_FRAMEWORKS__ = {};\\n        \\nimport React from 'react'\\nimport Box from '../../atoms/Box'\\nimport { path } from '..'\\nimport ThemeWrapper from '../../../utilities/components/ThemeWrapper'\\nimport GroupedDropdown from '.'\\nimport Data from './Data'\\nimport { action } from '@storybook/addon-actions'\\nimport Card from '../../atoms/Card'\\nimport Button from '../../atoms/Button'\\nimport { text, object, withKnobs } from '@storybook/addon-knobs'\\n\\nexport default {parameters: {\\\"storySource\\\":{\\\"source\\\":\\\"import React from 'react'\\\\nimport Box from '../../atoms/Box'\\\\nimport { path } from '..'\\\\nimport ThemeWrapper from '../../../utilities/components/ThemeWrapper'\\\\nimport GroupedDropdown from '.'\\\\nimport Data from './Data'\\\\nimport { action } from '@storybook/addon-actions'\\\\nimport Card from '../../atoms/Card'\\\\nimport Button from '../../atoms/Button'\\\\nimport { text, object, withKnobs } from '@storybook/addon-knobs'\\\\n\\\\nexport default {\\\\n  title: `${path}/GroupedDropdown`,\\\\n  decorators: [withKnobs],\\\\n  component: GroupedDropdown\\\\n}\\\\n\\\\nexport const GroupedDropdownStory = () => {\\\\n  const [open, setOpen] = React.useState(false)\\\\n  const [tag, setTag] = React.useState(false)\\\\n\\\\n  const onChange = (data: any, category: any) => {\\\\n    action('selected', data)\\\\n    handleOpen()\\\\n    setTag(data?.label + category?.label)\\\\n  }\\\\n  const handleOpen = () => {\\\\n    setOpen(!open)\\\\n  }\\\\n\\\\n  return (\\\\n    <ThemeWrapper>\\\\n      <Box p='1em'>\\\\n        <Box p='1em'>\\\\n          <Card style={{ display: 'inline-block' }}>Tag: {tag}</Card>\\\\n        </Box>\\\\n        <Button onClick={handleOpen} variant='button' intent='default'>\\\\n          Click me !\\\\n        </Button>\\\\n        <div>\\\\n          {open && (\\\\n            <Card style={{ display: 'inline-flex', padding: '0px' }}>\\\\n              <GroupedDropdown\\\\n                category={object('category', Data.category)}\\\\n                data={object('data', Data.data)}\\\\n                width={text('width', '500px')}\\\\n                height={text('height', '250px')}\\\\n                allLabel={text('allLabel', 'All')}\\\\n                handleOnChange={onChange}\\\\n                searchFieldLabel={text('dropdownLabel', 'Search')}\\\\n                searchFieldPlaceholder={text(\\\\n                  'dropdownPlaceholder',\\\\n                  'Search Tags'\\\\n                )}\\\\n              />\\\\n            </Card>\\\\n          )}\\\\n        </div>\\\\n      </Box>\\\\n    </ThemeWrapper>\\\\n  )\\\\n}\\\\n\\\",\\\"locationsMap\\\":{}},},\\n  title: `${path}/GroupedDropdown`,\\n  decorators: [withKnobs],\\n  component: GroupedDropdown\\n}\\n\\nexport const GroupedDropdownStory = addSourceDecorator(() => {\\n  const [open, setOpen] = React.useState(false)\\n  const [tag, setTag] = React.useState(false)\\n\\n  const onChange = (data: any, category: any) => {\\n    action('selected', data)\\n    handleOpen()\\n    setTag(data?.label + category?.label)\\n  }\\n  const handleOpen = () => {\\n    setOpen(!open)\\n  }\\n\\n  return (\\n    <ThemeWrapper>\\n      <Box p='1em'>\\n        <Box p='1em'>\\n          <Card style={{ display: 'inline-block' }}>Tag: {tag}</Card>\\n        </Box>\\n        <Button onClick={handleOpen} variant='button' intent='default'>\\n          Click me !\\n        </Button>\\n        <div>\\n          {open && (\\n            <Card style={{ display: 'inline-flex', padding: '0px' }}>\\n              <GroupedDropdown\\n                category={object('category', Data.category)}\\n                data={object('data', Data.data)}\\n                width={text('width', '500px')}\\n                height={text('height', '250px')}\\n                allLabel={text('allLabel', 'All')}\\n                handleOnChange={onChange}\\n                searchFieldLabel={text('dropdownLabel', 'Search')}\\n                searchFieldPlaceholder={text(\\n                  'dropdownPlaceholder',\\n                  'Search Tags'\\n                )}\\n              />\\n            </Card>\\n          )}\\n        </div>\\n      </Box>\\n    </ThemeWrapper>\\n  )\\n}, {__STORY__, __ADDS_MAP__,__MAIN_FILE_LOCATION__,__MODULE_DEPENDENCIES__,__LOCAL_DEPENDENCIES__,__SOURCE_PREFIX__,__IDS_TO_FRAMEWORKS__});\"; // @ts-ignore\n\nvar __ADDS_MAP__ = {}; // @ts-ignore\n\nvar __MAIN_FILE_LOCATION__ = \"/GroupedDropdown.stories.tsx\"; // @ts-ignore\n\nvar __MODULE_DEPENDENCIES__ = []; // @ts-ignore\n\nvar __LOCAL_DEPENDENCIES__ = {}; // @ts-ignore\n\nvar __IDS_TO_FRAMEWORKS__ = {};\n/* eslint-disable */\n// @ts-nocheck\n// @ts-ignore\n\nvar withSourceLoader = require('@storybook/source-loader/preview').withSource; // @ts-ignore\n\n\nvar addSourceDecorator = require(\"@storybook/source-loader/preview\").addSource; // @ts-ignore\n\n\nvar __SOURCE_PREFIX__ = \"/Users/farhanansari/Code/ui-library/src/components/molecules/GroupedDropdown\"; // @ts-ignore\n\nvar __STORY__ = \"import React from 'react'\\nimport Box from '../../atoms/Box'\\nimport { path } from '..'\\nimport ThemeWrapper from '../../../utilities/components/ThemeWrapper'\\nimport GroupedDropdown from '.'\\nimport Data from './Data'\\nimport { action } from '@storybook/addon-actions'\\nimport Card from '../../atoms/Card'\\nimport Button from '../../atoms/Button'\\nimport { text, object, withKnobs } from '@storybook/addon-knobs'\\n\\nexport default {\\n  title: `${path}/GroupedDropdown`,\\n  decorators: [withKnobs],\\n  component: GroupedDropdown\\n}\\n\\nexport const GroupedDropdownStory = () => {\\n  const [open, setOpen] = React.useState(false)\\n  const [tag, setTag] = React.useState(false)\\n\\n  const onChange = (data: any, category: any) => {\\n    action('selected', data)\\n    handleOpen()\\n    setTag(data?.label + category?.label)\\n  }\\n  const handleOpen = () => {\\n    setOpen(!open)\\n  }\\n\\n  return (\\n    <ThemeWrapper>\\n      <Box p='1em'>\\n        <Box p='1em'>\\n          <Card style={{ display: 'inline-block' }}>Tag: {tag}</Card>\\n        </Box>\\n        <Button onClick={handleOpen} variant='button' intent='default'>\\n          Click me !\\n        </Button>\\n        <div>\\n          {open && (\\n            <Card style={{ display: 'inline-flex', padding: '0px' }}>\\n              <GroupedDropdown\\n                category={object('category', Data.category)}\\n                data={object('data', Data.data)}\\n                width={text('width', '500px')}\\n                height={text('height', '250px')}\\n                allLabel={text('allLabel', 'All')}\\n                handleOnChange={onChange}\\n                searchFieldLabel={text('dropdownLabel', 'Search')}\\n                searchFieldPlaceholder={text(\\n                  'dropdownPlaceholder',\\n                  'Search Tags'\\n                )}\\n              />\\n            </Card>\\n          )}\\n        </div>\\n      </Box>\\n    </ThemeWrapper>\\n  )\\n}\\n\"; // @ts-ignore\n\nvar __ADDS_MAP__ = {}; // @ts-ignore\n\nvar __MAIN_FILE_LOCATION__ = \"/GroupedDropdown.stories.tsx\"; // @ts-ignore\n\nvar __MODULE_DEPENDENCIES__ = []; // @ts-ignore\n\nvar __LOCAL_DEPENDENCIES__ = {}; // @ts-ignore\n\nvar __IDS_TO_FRAMEWORKS__ = {};\nimport React from 'react';\nimport Box from '../../atoms/Box';\nimport { path } from '..';\nimport ThemeWrapper from '../../../utilities/components/ThemeWrapper';\nimport GroupedDropdown from '.';\nimport Data from './Data';\nimport { action } from '@storybook/addon-actions';\nimport Card from '../../atoms/Card';\nimport Button from '../../atoms/Button';\nimport { text, object, withKnobs } from '@storybook/addon-knobs';\nexport default {\n  parameters: (_parameters = {\n    \"storySource\": {\n      \"source\": \"\\n\\n// @ts-nocheck\\n// @ts-ignore\\nvar withSourceLoader = require('@storybook/source-loader/preview').withSource;\\n// @ts-ignore\\nvar addSourceDecorator = require(\\\"@storybook/source-loader/preview\\\").addSource;\\n// @ts-ignore\\nvar __SOURCE_PREFIX__ = \\\"/Users/farhanansari/Code/ui-library/src/components/molecules/GroupedDropdown\\\";\\n// @ts-ignore\\nvar __STORY__ = \\\"\\\\n\\\\n// @ts-nocheck\\\\n// @ts-ignore\\\\nvar withSourceLoader = require('@storybook/source-loader/preview').withSource;\\\\n// @ts-ignore\\\\nvar addSourceDecorator = require(\\\\\\\"@storybook/source-loader/preview\\\\\\\").addSource;\\\\n// @ts-ignore\\\\nvar __SOURCE_PREFIX__ = \\\\\\\"/Users/farhanansari/Code/ui-library/src/components/molecules/GroupedDropdown\\\\\\\";\\\\n// @ts-ignore\\\\nvar __STORY__ = \\\\\\\"import React from 'react'\\\\\\\\nimport Box from '../../atoms/Box'\\\\\\\\nimport { path } from '..'\\\\\\\\nimport ThemeWrapper from '../../../utilities/components/ThemeWrapper'\\\\\\\\nimport GroupedDropdown from '.'\\\\\\\\nimport Data from './Data'\\\\\\\\nimport { action } from '@storybook/addon-actions'\\\\\\\\nimport Card from '../../atoms/Card'\\\\\\\\nimport Button from '../../atoms/Button'\\\\\\\\nimport { text, object, withKnobs } from '@storybook/addon-knobs'\\\\\\\\n\\\\\\\\nexport default {\\\\\\\\n  title: `${path}/GroupedDropdown`,\\\\\\\\n  decorators: [withKnobs],\\\\\\\\n  component: GroupedDropdown\\\\\\\\n}\\\\\\\\n\\\\\\\\nexport const GroupedDropdownStory = () => {\\\\\\\\n  const [open, setOpen] = React.useState(false)\\\\\\\\n  const [tag, setTag] = React.useState(false)\\\\\\\\n\\\\\\\\n  const onChange = (data: any, category: any) => {\\\\\\\\n    action('selected', data)\\\\\\\\n    handleOpen()\\\\\\\\n    setTag(data?.label + category?.label)\\\\\\\\n  }\\\\\\\\n  const handleOpen = () => {\\\\\\\\n    setOpen(!open)\\\\\\\\n  }\\\\\\\\n\\\\\\\\n  return (\\\\\\\\n    <ThemeWrapper>\\\\\\\\n      <Box p='1em'>\\\\\\\\n        <Box p='1em'>\\\\\\\\n          <Card style={{ display: 'inline-block' }}>Tag: {tag}</Card>\\\\\\\\n        </Box>\\\\\\\\n        <Button onClick={handleOpen} variant='button' intent='default'>\\\\\\\\n          Click me !\\\\\\\\n        </Button>\\\\\\\\n        <div>\\\\\\\\n          {open && (\\\\\\\\n            <Card style={{ display: 'inline-flex', padding: '0px' }}>\\\\\\\\n              <GroupedDropdown\\\\\\\\n                category={object('category', Data.category)}\\\\\\\\n                data={object('data', Data.data)}\\\\\\\\n                width={text('width', '500px')}\\\\\\\\n                height={text('height', '250px')}\\\\\\\\n                allLabel={text('allLabel', 'All')}\\\\\\\\n                handleOnChange={onChange}\\\\\\\\n                searchFieldLabel={text('dropdownLabel', 'Search')}\\\\\\\\n                searchFieldPlaceholder={text(\\\\\\\\n                  'dropdownPlaceholder',\\\\\\\\n                  'Search Tags'\\\\\\\\n                )}\\\\\\\\n              />\\\\\\\\n            </Card>\\\\\\\\n          )}\\\\\\\\n        </div>\\\\\\\\n      </Box>\\\\\\\\n    </ThemeWrapper>\\\\\\\\n  )\\\\\\\\n}\\\\\\\\n\\\\\\\";\\\\n// @ts-ignore\\\\nvar __ADDS_MAP__ = {};\\\\n// @ts-ignore\\\\nvar __MAIN_FILE_LOCATION__ = \\\\\\\"/GroupedDropdown.stories.tsx\\\\\\\";\\\\n// @ts-ignore\\\\nvar __MODULE_DEPENDENCIES__ = [];\\\\n// @ts-ignore\\\\nvar __LOCAL_DEPENDENCIES__ = {};\\\\n// @ts-ignore\\\\nvar __IDS_TO_FRAMEWORKS__ = {};\\\\n        \\\\nimport React from 'react'\\\\nimport Box from '../../atoms/Box'\\\\nimport { path } from '..'\\\\nimport ThemeWrapper from '../../../utilities/components/ThemeWrapper'\\\\nimport GroupedDropdown from '.'\\\\nimport Data from './Data'\\\\nimport { action } from '@storybook/addon-actions'\\\\nimport Card from '../../atoms/Card'\\\\nimport Button from '../../atoms/Button'\\\\nimport { text, object, withKnobs } from '@storybook/addon-knobs'\\\\n\\\\nexport default {parameters: {\\\\\\\"storySource\\\\\\\":{\\\\\\\"source\\\\\\\":\\\\\\\"import React from 'react'\\\\\\\\nimport Box from '../../atoms/Box'\\\\\\\\nimport { path } from '..'\\\\\\\\nimport ThemeWrapper from '../../../utilities/components/ThemeWrapper'\\\\\\\\nimport GroupedDropdown from '.'\\\\\\\\nimport Data from './Data'\\\\\\\\nimport { action } from '@storybook/addon-actions'\\\\\\\\nimport Card from '../../atoms/Card'\\\\\\\\nimport Button from '../../atoms/Button'\\\\\\\\nimport { text, object, withKnobs } from '@storybook/addon-knobs'\\\\\\\\n\\\\\\\\nexport default {\\\\\\\\n  title: `${path}/GroupedDropdown`,\\\\\\\\n  decorators: [withKnobs],\\\\\\\\n  component: GroupedDropdown\\\\\\\\n}\\\\\\\\n\\\\\\\\nexport const GroupedDropdownStory = () => {\\\\\\\\n  const [open, setOpen] = React.useState(false)\\\\\\\\n  const [tag, setTag] = React.useState(false)\\\\\\\\n\\\\\\\\n  const onChange = (data: any, category: any) => {\\\\\\\\n    action('selected', data)\\\\\\\\n    handleOpen()\\\\\\\\n    setTag(data?.label + category?.label)\\\\\\\\n  }\\\\\\\\n  const handleOpen = () => {\\\\\\\\n    setOpen(!open)\\\\\\\\n  }\\\\\\\\n\\\\\\\\n  return (\\\\\\\\n    <ThemeWrapper>\\\\\\\\n      <Box p='1em'>\\\\\\\\n        <Box p='1em'>\\\\\\\\n          <Card style={{ display: 'inline-block' }}>Tag: {tag}</Card>\\\\\\\\n        </Box>\\\\\\\\n        <Button onClick={handleOpen} variant='button' intent='default'>\\\\\\\\n          Click me !\\\\\\\\n        </Button>\\\\\\\\n        <div>\\\\\\\\n          {open && (\\\\\\\\n            <Card style={{ display: 'inline-flex', padding: '0px' }}>\\\\\\\\n              <GroupedDropdown\\\\\\\\n                category={object('category', Data.category)}\\\\\\\\n                data={object('data', Data.data)}\\\\\\\\n                width={text('width', '500px')}\\\\\\\\n                height={text('height', '250px')}\\\\\\\\n                allLabel={text('allLabel', 'All')}\\\\\\\\n                handleOnChange={onChange}\\\\\\\\n                searchFieldLabel={text('dropdownLabel', 'Search')}\\\\\\\\n                searchFieldPlaceholder={text(\\\\\\\\n                  'dropdownPlaceholder',\\\\\\\\n                  'Search Tags'\\\\\\\\n                )}\\\\\\\\n              />\\\\\\\\n            </Card>\\\\\\\\n          )}\\\\\\\\n        </div>\\\\\\\\n      </Box>\\\\\\\\n    </ThemeWrapper>\\\\\\\\n  )\\\\\\\\n}\\\\\\\\n\\\\\\\",\\\\\\\"locationsMap\\\\\\\":{}},},\\\\n  title: `${path}/GroupedDropdown`,\\\\n  decorators: [withKnobs],\\\\n  component: GroupedDropdown\\\\n}\\\\n\\\\nexport const GroupedDropdownStory = addSourceDecorator(() => {\\\\n  const [open, setOpen] = React.useState(false)\\\\n  const [tag, setTag] = React.useState(false)\\\\n\\\\n  const onChange = (data: any, category: any) => {\\\\n    action('selected', data)\\\\n    handleOpen()\\\\n    setTag(data?.label + category?.label)\\\\n  }\\\\n  const handleOpen = () => {\\\\n    setOpen(!open)\\\\n  }\\\\n\\\\n  return (\\\\n    <ThemeWrapper>\\\\n      <Box p='1em'>\\\\n        <Box p='1em'>\\\\n          <Card style={{ display: 'inline-block' }}>Tag: {tag}</Card>\\\\n        </Box>\\\\n        <Button onClick={handleOpen} variant='button' intent='default'>\\\\n          Click me !\\\\n        </Button>\\\\n        <div>\\\\n          {open && (\\\\n            <Card style={{ display: 'inline-flex', padding: '0px' }}>\\\\n              <GroupedDropdown\\\\n                category={object('category', Data.category)}\\\\n                data={object('data', Data.data)}\\\\n                width={text('width', '500px')}\\\\n                height={text('height', '250px')}\\\\n                allLabel={text('allLabel', 'All')}\\\\n                handleOnChange={onChange}\\\\n                searchFieldLabel={text('dropdownLabel', 'Search')}\\\\n                searchFieldPlaceholder={text(\\\\n                  'dropdownPlaceholder',\\\\n                  'Search Tags'\\\\n                )}\\\\n              />\\\\n            </Card>\\\\n          )}\\\\n        </div>\\\\n      </Box>\\\\n    </ThemeWrapper>\\\\n  )\\\\n}, {__STORY__, __ADDS_MAP__,__MAIN_FILE_LOCATION__,__MODULE_DEPENDENCIES__,__LOCAL_DEPENDENCIES__,__SOURCE_PREFIX__,__IDS_TO_FRAMEWORKS__});\\\";\\n// @ts-ignore\\nvar __ADDS_MAP__ = {};\\n// @ts-ignore\\nvar __MAIN_FILE_LOCATION__ = \\\"/GroupedDropdown.stories.tsx\\\";\\n// @ts-ignore\\nvar __MODULE_DEPENDENCIES__ = [];\\n// @ts-ignore\\nvar __LOCAL_DEPENDENCIES__ = {};\\n// @ts-ignore\\nvar __IDS_TO_FRAMEWORKS__ = {};\\n        \\n\\n\\n// @ts-nocheck\\n// @ts-ignore\\nvar withSourceLoader = require('@storybook/source-loader/preview').withSource;\\n// @ts-ignore\\nvar addSourceDecorator = require(\\\"@storybook/source-loader/preview\\\").addSource;\\n// @ts-ignore\\nvar __SOURCE_PREFIX__ = \\\"/Users/farhanansari/Code/ui-library/src/components/molecules/GroupedDropdown\\\";\\n// @ts-ignore\\nvar __STORY__ = \\\"import React from 'react'\\\\nimport Box from '../../atoms/Box'\\\\nimport { path } from '..'\\\\nimport ThemeWrapper from '../../../utilities/components/ThemeWrapper'\\\\nimport GroupedDropdown from '.'\\\\nimport Data from './Data'\\\\nimport { action } from '@storybook/addon-actions'\\\\nimport Card from '../../atoms/Card'\\\\nimport Button from '../../atoms/Button'\\\\nimport { text, object, withKnobs } from '@storybook/addon-knobs'\\\\n\\\\nexport default {\\\\n  title: `${path}/GroupedDropdown`,\\\\n  decorators: [withKnobs],\\\\n  component: GroupedDropdown\\\\n}\\\\n\\\\nexport const GroupedDropdownStory = () => {\\\\n  const [open, setOpen] = React.useState(false)\\\\n  const [tag, setTag] = React.useState(false)\\\\n\\\\n  const onChange = (data: any, category: any) => {\\\\n    action('selected', data)\\\\n    handleOpen()\\\\n    setTag(data?.label + category?.label)\\\\n  }\\\\n  const handleOpen = () => {\\\\n    setOpen(!open)\\\\n  }\\\\n\\\\n  return (\\\\n    <ThemeWrapper>\\\\n      <Box p='1em'>\\\\n        <Box p='1em'>\\\\n          <Card style={{ display: 'inline-block' }}>Tag: {tag}</Card>\\\\n        </Box>\\\\n        <Button onClick={handleOpen} variant='button' intent='default'>\\\\n          Click me !\\\\n        </Button>\\\\n        <div>\\\\n          {open && (\\\\n            <Card style={{ display: 'inline-flex', padding: '0px' }}>\\\\n              <GroupedDropdown\\\\n                category={object('category', Data.category)}\\\\n                data={object('data', Data.data)}\\\\n                width={text('width', '500px')}\\\\n                height={text('height', '250px')}\\\\n                allLabel={text('allLabel', 'All')}\\\\n                handleOnChange={onChange}\\\\n                searchFieldLabel={text('dropdownLabel', 'Search')}\\\\n                searchFieldPlaceholder={text(\\\\n                  'dropdownPlaceholder',\\\\n                  'Search Tags'\\\\n                )}\\\\n              />\\\\n            </Card>\\\\n          )}\\\\n        </div>\\\\n      </Box>\\\\n    </ThemeWrapper>\\\\n  )\\\\n}\\\\n\\\";\\n// @ts-ignore\\nvar __ADDS_MAP__ = {};\\n// @ts-ignore\\nvar __MAIN_FILE_LOCATION__ = \\\"/GroupedDropdown.stories.tsx\\\";\\n// @ts-ignore\\nvar __MODULE_DEPENDENCIES__ = [];\\n// @ts-ignore\\nvar __LOCAL_DEPENDENCIES__ = {};\\n// @ts-ignore\\nvar __IDS_TO_FRAMEWORKS__ = {};\\n        \\nimport React from 'react'\\nimport Box from '../../atoms/Box'\\nimport { path } from '..'\\nimport ThemeWrapper from '../../../utilities/components/ThemeWrapper'\\nimport GroupedDropdown from '.'\\nimport Data from './Data'\\nimport { action } from '@storybook/addon-actions'\\nimport Card from '../../atoms/Card'\\nimport Button from '../../atoms/Button'\\nimport { text, object, withKnobs } from '@storybook/addon-knobs'\\n\\nexport default {parameters: {\\\"storySource\\\":{\\\"source\\\":\\\"\\\\n\\\\n// @ts-nocheck\\\\n// @ts-ignore\\\\nvar withSourceLoader = require('@storybook/source-loader/preview').withSource;\\\\n// @ts-ignore\\\\nvar addSourceDecorator = require(\\\\\\\"@storybook/source-loader/preview\\\\\\\").addSource;\\\\n// @ts-ignore\\\\nvar __SOURCE_PREFIX__ = \\\\\\\"/Users/farhanansari/Code/ui-library/src/components/molecules/GroupedDropdown\\\\\\\";\\\\n// @ts-ignore\\\\nvar __STORY__ = \\\\\\\"import React from 'react'\\\\\\\\nimport Box from '../../atoms/Box'\\\\\\\\nimport { path } from '..'\\\\\\\\nimport ThemeWrapper from '../../../utilities/components/ThemeWrapper'\\\\\\\\nimport GroupedDropdown from '.'\\\\\\\\nimport Data from './Data'\\\\\\\\nimport { action } from '@storybook/addon-actions'\\\\\\\\nimport Card from '../../atoms/Card'\\\\\\\\nimport Button from '../../atoms/Button'\\\\\\\\nimport { text, object, withKnobs } from '@storybook/addon-knobs'\\\\\\\\n\\\\\\\\nexport default {\\\\\\\\n  title: `${path}/GroupedDropdown`,\\\\\\\\n  decorators: [withKnobs],\\\\\\\\n  component: GroupedDropdown\\\\\\\\n}\\\\\\\\n\\\\\\\\nexport const GroupedDropdownStory = () => {\\\\\\\\n  const [open, setOpen] = React.useState(false)\\\\\\\\n  const [tag, setTag] = React.useState(false)\\\\\\\\n\\\\\\\\n  const onChange = (data: any, category: any) => {\\\\\\\\n    action('selected', data)\\\\\\\\n    handleOpen()\\\\\\\\n    setTag(data?.label + category?.label)\\\\\\\\n  }\\\\\\\\n  const handleOpen = () => {\\\\\\\\n    setOpen(!open)\\\\\\\\n  }\\\\\\\\n\\\\\\\\n  return (\\\\\\\\n    <ThemeWrapper>\\\\\\\\n      <Box p='1em'>\\\\\\\\n        <Box p='1em'>\\\\\\\\n          <Card style={{ display: 'inline-block' }}>Tag: {tag}</Card>\\\\\\\\n        </Box>\\\\\\\\n        <Button onClick={handleOpen} variant='button' intent='default'>\\\\\\\\n          Click me !\\\\\\\\n        </Button>\\\\\\\\n        <div>\\\\\\\\n          {open && (\\\\\\\\n            <Card style={{ display: 'inline-flex', padding: '0px' }}>\\\\\\\\n              <GroupedDropdown\\\\\\\\n                category={object('category', Data.category)}\\\\\\\\n                data={object('data', Data.data)}\\\\\\\\n                width={text('width', '500px')}\\\\\\\\n                height={text('height', '250px')}\\\\\\\\n                allLabel={text('allLabel', 'All')}\\\\\\\\n                handleOnChange={onChange}\\\\\\\\n                searchFieldLabel={text('dropdownLabel', 'Search')}\\\\\\\\n                searchFieldPlaceholder={text(\\\\\\\\n                  'dropdownPlaceholder',\\\\\\\\n                  'Search Tags'\\\\\\\\n                )}\\\\\\\\n              />\\\\\\\\n            </Card>\\\\\\\\n          )}\\\\\\\\n        </div>\\\\\\\\n      </Box>\\\\\\\\n    </ThemeWrapper>\\\\\\\\n  )\\\\\\\\n}\\\\\\\\n\\\\\\\";\\\\n// @ts-ignore\\\\nvar __ADDS_MAP__ = {};\\\\n// @ts-ignore\\\\nvar __MAIN_FILE_LOCATION__ = \\\\\\\"/GroupedDropdown.stories.tsx\\\\\\\";\\\\n// @ts-ignore\\\\nvar __MODULE_DEPENDENCIES__ = [];\\\\n// @ts-ignore\\\\nvar __LOCAL_DEPENDENCIES__ = {};\\\\n// @ts-ignore\\\\nvar __IDS_TO_FRAMEWORKS__ = {};\\\\n        \\\\nimport React from 'react'\\\\nimport Box from '../../atoms/Box'\\\\nimport { path } from '..'\\\\nimport ThemeWrapper from '../../../utilities/components/ThemeWrapper'\\\\nimport GroupedDropdown from '.'\\\\nimport Data from './Data'\\\\nimport { action } from '@storybook/addon-actions'\\\\nimport Card from '../../atoms/Card'\\\\nimport Button from '../../atoms/Button'\\\\nimport { text, object, withKnobs } from '@storybook/addon-knobs'\\\\n\\\\nexport default {parameters: {\\\\\\\"storySource\\\\\\\":{\\\\\\\"source\\\\\\\":\\\\\\\"import React from 'react'\\\\\\\\nimport Box from '../../atoms/Box'\\\\\\\\nimport { path } from '..'\\\\\\\\nimport ThemeWrapper from '../../../utilities/components/ThemeWrapper'\\\\\\\\nimport GroupedDropdown from '.'\\\\\\\\nimport Data from './Data'\\\\\\\\nimport { action } from '@storybook/addon-actions'\\\\\\\\nimport Card from '../../atoms/Card'\\\\\\\\nimport Button from '../../atoms/Button'\\\\\\\\nimport { text, object, withKnobs } from '@storybook/addon-knobs'\\\\\\\\n\\\\\\\\nexport default {\\\\\\\\n  title: `${path}/GroupedDropdown`,\\\\\\\\n  decorators: [withKnobs],\\\\\\\\n  component: GroupedDropdown\\\\\\\\n}\\\\\\\\n\\\\\\\\nexport const GroupedDropdownStory = () => {\\\\\\\\n  const [open, setOpen] = React.useState(false)\\\\\\\\n  const [tag, setTag] = React.useState(false)\\\\\\\\n\\\\\\\\n  const onChange = (data: any, category: any) => {\\\\\\\\n    action('selected', data)\\\\\\\\n    handleOpen()\\\\\\\\n    setTag(data?.label + category?.label)\\\\\\\\n  }\\\\\\\\n  const handleOpen = () => {\\\\\\\\n    setOpen(!open)\\\\\\\\n  }\\\\\\\\n\\\\\\\\n  return (\\\\\\\\n    <ThemeWrapper>\\\\\\\\n      <Box p='1em'>\\\\\\\\n        <Box p='1em'>\\\\\\\\n          <Card style={{ display: 'inline-block' }}>Tag: {tag}</Card>\\\\\\\\n        </Box>\\\\\\\\n        <Button onClick={handleOpen} variant='button' intent='default'>\\\\\\\\n          Click me !\\\\\\\\n        </Button>\\\\\\\\n        <div>\\\\\\\\n          {open && (\\\\\\\\n            <Card style={{ display: 'inline-flex', padding: '0px' }}>\\\\\\\\n              <GroupedDropdown\\\\\\\\n                category={object('category', Data.category)}\\\\\\\\n                data={object('data', Data.data)}\\\\\\\\n                width={text('width', '500px')}\\\\\\\\n                height={text('height', '250px')}\\\\\\\\n                allLabel={text('allLabel', 'All')}\\\\\\\\n                handleOnChange={onChange}\\\\\\\\n                searchFieldLabel={text('dropdownLabel', 'Search')}\\\\\\\\n                searchFieldPlaceholder={text(\\\\\\\\n                  'dropdownPlaceholder',\\\\\\\\n                  'Search Tags'\\\\\\\\n                )}\\\\\\\\n              />\\\\\\\\n            </Card>\\\\\\\\n          )}\\\\\\\\n        </div>\\\\\\\\n      </Box>\\\\\\\\n    </ThemeWrapper>\\\\\\\\n  )\\\\\\\\n}\\\\\\\\n\\\\\\\",\\\\\\\"locationsMap\\\\\\\":{}},},\\\\n  title: `${path}/GroupedDropdown`,\\\\n  decorators: [withKnobs],\\\\n  component: GroupedDropdown\\\\n}\\\\n\\\\nexport const GroupedDropdownStory = addSourceDecorator(() => {\\\\n  const [open, setOpen] = React.useState(false)\\\\n  const [tag, setTag] = React.useState(false)\\\\n\\\\n  const onChange = (data: any, category: any) => {\\\\n    action('selected', data)\\\\n    handleOpen()\\\\n    setTag(data?.label + category?.label)\\\\n  }\\\\n  const handleOpen = () => {\\\\n    setOpen(!open)\\\\n  }\\\\n\\\\n  return (\\\\n    <ThemeWrapper>\\\\n      <Box p='1em'>\\\\n        <Box p='1em'>\\\\n          <Card style={{ display: 'inline-block' }}>Tag: {tag}</Card>\\\\n        </Box>\\\\n        <Button onClick={handleOpen} variant='button' intent='default'>\\\\n          Click me !\\\\n        </Button>\\\\n        <div>\\\\n          {open && (\\\\n            <Card style={{ display: 'inline-flex', padding: '0px' }}>\\\\n              <GroupedDropdown\\\\n                category={object('category', Data.category)}\\\\n                data={object('data', Data.data)}\\\\n                width={text('width', '500px')}\\\\n                height={text('height', '250px')}\\\\n                allLabel={text('allLabel', 'All')}\\\\n                handleOnChange={onChange}\\\\n                searchFieldLabel={text('dropdownLabel', 'Search')}\\\\n                searchFieldPlaceholder={text(\\\\n                  'dropdownPlaceholder',\\\\n                  'Search Tags'\\\\n                )}\\\\n              />\\\\n            </Card>\\\\n          )}\\\\n        </div>\\\\n      </Box>\\\\n    </ThemeWrapper>\\\\n  )\\\\n}, {__STORY__, __ADDS_MAP__,__MAIN_FILE_LOCATION__,__MODULE_DEPENDENCIES__,__LOCAL_DEPENDENCIES__,__SOURCE_PREFIX__,__IDS_TO_FRAMEWORKS__});\\\",\\\"locationsMap\\\":{}},\\\"storySource\\\":{\\\"source\\\":\\\"import React from 'react'\\\\nimport Box from '../../atoms/Box'\\\\nimport { path } from '..'\\\\nimport ThemeWrapper from '../../../utilities/components/ThemeWrapper'\\\\nimport GroupedDropdown from '.'\\\\nimport Data from './Data'\\\\nimport { action } from '@storybook/addon-actions'\\\\nimport Card from '../../atoms/Card'\\\\nimport Button from '../../atoms/Button'\\\\nimport { text, object, withKnobs } from '@storybook/addon-knobs'\\\\n\\\\nexport default {\\\\n  title: `${path}/GroupedDropdown`,\\\\n  decorators: [withKnobs],\\\\n  component: GroupedDropdown\\\\n}\\\\n\\\\nexport const GroupedDropdownStory = () => {\\\\n  const [open, setOpen] = React.useState(false)\\\\n  const [tag, setTag] = React.useState(false)\\\\n\\\\n  const onChange = (data: any, category: any) => {\\\\n    action('selected', data)\\\\n    handleOpen()\\\\n    setTag(data?.label + category?.label)\\\\n  }\\\\n  const handleOpen = () => {\\\\n    setOpen(!open)\\\\n  }\\\\n\\\\n  return (\\\\n    <ThemeWrapper>\\\\n      <Box p='1em'>\\\\n        <Box p='1em'>\\\\n          <Card style={{ display: 'inline-block' }}>Tag: {tag}</Card>\\\\n        </Box>\\\\n        <Button onClick={handleOpen} variant='button' intent='default'>\\\\n          Click me !\\\\n        </Button>\\\\n        <div>\\\\n          {open && (\\\\n            <Card style={{ display: 'inline-flex', padding: '0px' }}>\\\\n              <GroupedDropdown\\\\n                category={object('category', Data.category)}\\\\n                data={object('data', Data.data)}\\\\n                width={text('width', '500px')}\\\\n                height={text('height', '250px')}\\\\n                allLabel={text('allLabel', 'All')}\\\\n                handleOnChange={onChange}\\\\n                searchFieldLabel={text('dropdownLabel', 'Search')}\\\\n                searchFieldPlaceholder={text(\\\\n                  'dropdownPlaceholder',\\\\n                  'Search Tags'\\\\n                )}\\\\n              />\\\\n            </Card>\\\\n          )}\\\\n        </div>\\\\n      </Box>\\\\n    </ThemeWrapper>\\\\n  )\\\\n}\\\\n\\\",\\\"locationsMap\\\":{}},},\\n  title: `${path}/GroupedDropdown`,\\n  decorators: [withKnobs],\\n  component: GroupedDropdown\\n}\\n\\nexport const GroupedDropdownStory = addSourceDecorator(addSourceDecorator(() => {\\n  const [open, setOpen] = React.useState(false)\\n  const [tag, setTag] = React.useState(false)\\n\\n  const onChange = (data: any, category: any) => {\\n    action('selected', data)\\n    handleOpen()\\n    setTag(data?.label + category?.label)\\n  }\\n  const handleOpen = () => {\\n    setOpen(!open)\\n  }\\n\\n  return (\\n    <ThemeWrapper>\\n      <Box p='1em'>\\n        <Box p='1em'>\\n          <Card style={{ display: 'inline-block' }}>Tag: {tag}</Card>\\n        </Box>\\n        <Button onClick={handleOpen} variant='button' intent='default'>\\n          Click me !\\n        </Button>\\n        <div>\\n          {open && (\\n            <Card style={{ display: 'inline-flex', padding: '0px' }}>\\n              <GroupedDropdown\\n                category={object('category', Data.category)}\\n                data={object('data', Data.data)}\\n                width={text('width', '500px')}\\n                height={text('height', '250px')}\\n                allLabel={text('allLabel', 'All')}\\n                handleOnChange={onChange}\\n                searchFieldLabel={text('dropdownLabel', 'Search')}\\n                searchFieldPlaceholder={text(\\n                  'dropdownPlaceholder',\\n                  'Search Tags'\\n                )}\\n              />\\n            </Card>\\n          )}\\n        </div>\\n      </Box>\\n    </ThemeWrapper>\\n  )\\n}, {__STORY__, __ADDS_MAP__,__MAIN_FILE_LOCATION__,__MODULE_DEPENDENCIES__,__LOCAL_DEPENDENCIES__,__SOURCE_PREFIX__,__IDS_TO_FRAMEWORKS__}), {__STORY__, __ADDS_MAP__,__MAIN_FILE_LOCATION__,__MODULE_DEPENDENCIES__,__LOCAL_DEPENDENCIES__,__SOURCE_PREFIX__,__IDS_TO_FRAMEWORKS__});\",\n      \"locationsMap\": {}\n    }\n  }, _defineProperty(_parameters, \"storySource\", {\n    \"source\": \"\\n\\n// @ts-nocheck\\n// @ts-ignore\\nvar withSourceLoader = require('@storybook/source-loader/preview').withSource;\\n// @ts-ignore\\nvar addSourceDecorator = require(\\\"@storybook/source-loader/preview\\\").addSource;\\n// @ts-ignore\\nvar __SOURCE_PREFIX__ = \\\"/Users/farhanansari/Code/ui-library/src/components/molecules/GroupedDropdown\\\";\\n// @ts-ignore\\nvar __STORY__ = \\\"import React from 'react'\\\\nimport Box from '../../atoms/Box'\\\\nimport { path } from '..'\\\\nimport ThemeWrapper from '../../../utilities/components/ThemeWrapper'\\\\nimport GroupedDropdown from '.'\\\\nimport Data from './Data'\\\\nimport { action } from '@storybook/addon-actions'\\\\nimport Card from '../../atoms/Card'\\\\nimport Button from '../../atoms/Button'\\\\nimport { text, object, withKnobs } from '@storybook/addon-knobs'\\\\n\\\\nexport default {\\\\n  title: `${path}/GroupedDropdown`,\\\\n  decorators: [withKnobs],\\\\n  component: GroupedDropdown\\\\n}\\\\n\\\\nexport const GroupedDropdownStory = () => {\\\\n  const [open, setOpen] = React.useState(false)\\\\n  const [tag, setTag] = React.useState(false)\\\\n\\\\n  const onChange = (data: any, category: any) => {\\\\n    action('selected', data)\\\\n    handleOpen()\\\\n    setTag(data?.label + category?.label)\\\\n  }\\\\n  const handleOpen = () => {\\\\n    setOpen(!open)\\\\n  }\\\\n\\\\n  return (\\\\n    <ThemeWrapper>\\\\n      <Box p='1em'>\\\\n        <Box p='1em'>\\\\n          <Card style={{ display: 'inline-block' }}>Tag: {tag}</Card>\\\\n        </Box>\\\\n        <Button onClick={handleOpen} variant='button' intent='default'>\\\\n          Click me !\\\\n        </Button>\\\\n        <div>\\\\n          {open && (\\\\n            <Card style={{ display: 'inline-flex', padding: '0px' }}>\\\\n              <GroupedDropdown\\\\n                category={object('category', Data.category)}\\\\n                data={object('data', Data.data)}\\\\n                width={text('width', '500px')}\\\\n                height={text('height', '250px')}\\\\n                allLabel={text('allLabel', 'All')}\\\\n                handleOnChange={onChange}\\\\n                searchFieldLabel={text('dropdownLabel', 'Search')}\\\\n                searchFieldPlaceholder={text(\\\\n                  'dropdownPlaceholder',\\\\n                  'Search Tags'\\\\n                )}\\\\n              />\\\\n            </Card>\\\\n          )}\\\\n        </div>\\\\n      </Box>\\\\n    </ThemeWrapper>\\\\n  )\\\\n}\\\\n\\\";\\n// @ts-ignore\\nvar __ADDS_MAP__ = {};\\n// @ts-ignore\\nvar __MAIN_FILE_LOCATION__ = \\\"/GroupedDropdown.stories.tsx\\\";\\n// @ts-ignore\\nvar __MODULE_DEPENDENCIES__ = [];\\n// @ts-ignore\\nvar __LOCAL_DEPENDENCIES__ = {};\\n// @ts-ignore\\nvar __IDS_TO_FRAMEWORKS__ = {};\\n        \\nimport React from 'react'\\nimport Box from '../../atoms/Box'\\nimport { path } from '..'\\nimport ThemeWrapper from '../../../utilities/components/ThemeWrapper'\\nimport GroupedDropdown from '.'\\nimport Data from './Data'\\nimport { action } from '@storybook/addon-actions'\\nimport Card from '../../atoms/Card'\\nimport Button from '../../atoms/Button'\\nimport { text, object, withKnobs } from '@storybook/addon-knobs'\\n\\nexport default {parameters: {\\\"storySource\\\":{\\\"source\\\":\\\"import React from 'react'\\\\nimport Box from '../../atoms/Box'\\\\nimport { path } from '..'\\\\nimport ThemeWrapper from '../../../utilities/components/ThemeWrapper'\\\\nimport GroupedDropdown from '.'\\\\nimport Data from './Data'\\\\nimport { action } from '@storybook/addon-actions'\\\\nimport Card from '../../atoms/Card'\\\\nimport Button from '../../atoms/Button'\\\\nimport { text, object, withKnobs } from '@storybook/addon-knobs'\\\\n\\\\nexport default {\\\\n  title: `${path}/GroupedDropdown`,\\\\n  decorators: [withKnobs],\\\\n  component: GroupedDropdown\\\\n}\\\\n\\\\nexport const GroupedDropdownStory = () => {\\\\n  const [open, setOpen] = React.useState(false)\\\\n  const [tag, setTag] = React.useState(false)\\\\n\\\\n  const onChange = (data: any, category: any) => {\\\\n    action('selected', data)\\\\n    handleOpen()\\\\n    setTag(data?.label + category?.label)\\\\n  }\\\\n  const handleOpen = () => {\\\\n    setOpen(!open)\\\\n  }\\\\n\\\\n  return (\\\\n    <ThemeWrapper>\\\\n      <Box p='1em'>\\\\n        <Box p='1em'>\\\\n          <Card style={{ display: 'inline-block' }}>Tag: {tag}</Card>\\\\n        </Box>\\\\n        <Button onClick={handleOpen} variant='button' intent='default'>\\\\n          Click me !\\\\n        </Button>\\\\n        <div>\\\\n          {open && (\\\\n            <Card style={{ display: 'inline-flex', padding: '0px' }}>\\\\n              <GroupedDropdown\\\\n                category={object('category', Data.category)}\\\\n                data={object('data', Data.data)}\\\\n                width={text('width', '500px')}\\\\n                height={text('height', '250px')}\\\\n                allLabel={text('allLabel', 'All')}\\\\n                handleOnChange={onChange}\\\\n                searchFieldLabel={text('dropdownLabel', 'Search')}\\\\n                searchFieldPlaceholder={text(\\\\n                  'dropdownPlaceholder',\\\\n                  'Search Tags'\\\\n                )}\\\\n              />\\\\n            </Card>\\\\n          )}\\\\n        </div>\\\\n      </Box>\\\\n    </ThemeWrapper>\\\\n  )\\\\n}\\\\n\\\",\\\"locationsMap\\\":{}},},\\n  title: `${path}/GroupedDropdown`,\\n  decorators: [withKnobs],\\n  component: GroupedDropdown\\n}\\n\\nexport const GroupedDropdownStory = addSourceDecorator(() => {\\n  const [open, setOpen] = React.useState(false)\\n  const [tag, setTag] = React.useState(false)\\n\\n  const onChange = (data: any, category: any) => {\\n    action('selected', data)\\n    handleOpen()\\n    setTag(data?.label + category?.label)\\n  }\\n  const handleOpen = () => {\\n    setOpen(!open)\\n  }\\n\\n  return (\\n    <ThemeWrapper>\\n      <Box p='1em'>\\n        <Box p='1em'>\\n          <Card style={{ display: 'inline-block' }}>Tag: {tag}</Card>\\n        </Box>\\n        <Button onClick={handleOpen} variant='button' intent='default'>\\n          Click me !\\n        </Button>\\n        <div>\\n          {open && (\\n            <Card style={{ display: 'inline-flex', padding: '0px' }}>\\n              <GroupedDropdown\\n                category={object('category', Data.category)}\\n                data={object('data', Data.data)}\\n                width={text('width', '500px')}\\n                height={text('height', '250px')}\\n                allLabel={text('allLabel', 'All')}\\n                handleOnChange={onChange}\\n                searchFieldLabel={text('dropdownLabel', 'Search')}\\n                searchFieldPlaceholder={text(\\n                  'dropdownPlaceholder',\\n                  'Search Tags'\\n                )}\\n              />\\n            </Card>\\n          )}\\n        </div>\\n      </Box>\\n    </ThemeWrapper>\\n  )\\n}, {__STORY__, __ADDS_MAP__,__MAIN_FILE_LOCATION__,__MODULE_DEPENDENCIES__,__LOCAL_DEPENDENCIES__,__SOURCE_PREFIX__,__IDS_TO_FRAMEWORKS__});\",\n    \"locationsMap\": {}\n  }), _defineProperty(_parameters, \"storySource\", {\n    \"source\": \"import React from 'react'\\nimport Box from '../../atoms/Box'\\nimport { path } from '..'\\nimport ThemeWrapper from '../../../utilities/components/ThemeWrapper'\\nimport GroupedDropdown from '.'\\nimport Data from './Data'\\nimport { action } from '@storybook/addon-actions'\\nimport Card from '../../atoms/Card'\\nimport Button from '../../atoms/Button'\\nimport { text, object, withKnobs } from '@storybook/addon-knobs'\\n\\nexport default {\\n  title: `${path}/GroupedDropdown`,\\n  decorators: [withKnobs],\\n  component: GroupedDropdown\\n}\\n\\nexport const GroupedDropdownStory = () => {\\n  const [open, setOpen] = React.useState(false)\\n  const [tag, setTag] = React.useState(false)\\n\\n  const onChange = (data: any, category: any) => {\\n    action('selected', data)\\n    handleOpen()\\n    setTag(data?.label + category?.label)\\n  }\\n  const handleOpen = () => {\\n    setOpen(!open)\\n  }\\n\\n  return (\\n    <ThemeWrapper>\\n      <Box p='1em'>\\n        <Box p='1em'>\\n          <Card style={{ display: 'inline-block' }}>Tag: {tag}</Card>\\n        </Box>\\n        <Button onClick={handleOpen} variant='button' intent='default'>\\n          Click me !\\n        </Button>\\n        <div>\\n          {open && (\\n            <Card style={{ display: 'inline-flex', padding: '0px' }}>\\n              <GroupedDropdown\\n                category={object('category', Data.category)}\\n                data={object('data', Data.data)}\\n                width={text('width', '500px')}\\n                height={text('height', '250px')}\\n                allLabel={text('allLabel', 'All')}\\n                handleOnChange={onChange}\\n                searchFieldLabel={text('dropdownLabel', 'Search')}\\n                searchFieldPlaceholder={text(\\n                  'dropdownPlaceholder',\\n                  'Search Tags'\\n                )}\\n              />\\n            </Card>\\n          )}\\n        </div>\\n      </Box>\\n    </ThemeWrapper>\\n  )\\n}\\n\",\n    \"locationsMap\": {}\n  }), _parameters),\n  title: path + \"/GroupedDropdown\",\n  decorators: [withKnobs],\n  component: GroupedDropdown\n};\nexport var GroupedDropdownStory = addSourceDecorator(addSourceDecorator(addSourceDecorator(function () {\n  var _a = React.useState(false),\n      open = _a[0],\n      setOpen = _a[1];\n\n  var _b = React.useState(false),\n      tag = _b[0],\n      setTag = _b[1];\n\n  var onChange = function onChange(data, category) {\n    action('selected', data);\n    handleOpen();\n    setTag((data === null || data === void 0 ? void 0 : data.label) + (category === null || category === void 0 ? void 0 : category.label));\n  };\n\n  var handleOpen = function handleOpen() {\n    setOpen(!open);\n  };\n\n  return React.createElement(ThemeWrapper, null, React.createElement(Box, {\n    p: '1em'\n  }, React.createElement(Box, {\n    p: '1em'\n  }, React.createElement(Card, {\n    style: {\n      display: 'inline-block'\n    }\n  }, \"Tag: \", tag)), React.createElement(Button, {\n    onClick: handleOpen,\n    variant: 'button',\n    intent: 'default'\n  }, \"Click me !\"), React.createElement(\"div\", null, open && React.createElement(Card, {\n    style: {\n      display: 'inline-flex',\n      padding: '0px'\n    }\n  }, React.createElement(GroupedDropdown, {\n    category: object('category', Data.category),\n    data: object('data', Data.data),\n    width: text('width', '500px'),\n    height: text('height', '250px'),\n    allLabel: text('allLabel', 'All'),\n    handleOnChange: onChange,\n    searchFieldLabel: text('dropdownLabel', 'Search'),\n    searchFieldPlaceholder: text('dropdownPlaceholder', 'Search Tags')\n  })))));\n}, {\n  __STORY__: __STORY__,\n  __ADDS_MAP__: __ADDS_MAP__,\n  __MAIN_FILE_LOCATION__: __MAIN_FILE_LOCATION__,\n  __MODULE_DEPENDENCIES__: __MODULE_DEPENDENCIES__,\n  __LOCAL_DEPENDENCIES__: __LOCAL_DEPENDENCIES__,\n  __SOURCE_PREFIX__: __SOURCE_PREFIX__,\n  __IDS_TO_FRAMEWORKS__: __IDS_TO_FRAMEWORKS__\n}), {\n  __STORY__: __STORY__,\n  __ADDS_MAP__: __ADDS_MAP__,\n  __MAIN_FILE_LOCATION__: __MAIN_FILE_LOCATION__,\n  __MODULE_DEPENDENCIES__: __MODULE_DEPENDENCIES__,\n  __LOCAL_DEPENDENCIES__: __LOCAL_DEPENDENCIES__,\n  __SOURCE_PREFIX__: __SOURCE_PREFIX__,\n  __IDS_TO_FRAMEWORKS__: __IDS_TO_FRAMEWORKS__\n}), {\n  __STORY__: __STORY__,\n  __ADDS_MAP__: __ADDS_MAP__,\n  __MAIN_FILE_LOCATION__: __MAIN_FILE_LOCATION__,\n  __MODULE_DEPENDENCIES__: __MODULE_DEPENDENCIES__,\n  __LOCAL_DEPENDENCIES__: __LOCAL_DEPENDENCIES__,\n  __SOURCE_PREFIX__: __SOURCE_PREFIX__,\n  __IDS_TO_FRAMEWORKS__: __IDS_TO_FRAMEWORKS__\n});","map":{"version":3,"sources":["/Users/farhanansari/Code/ui-library/node_modules/react-docgen-typescript-loader/dist/index.js!/Users/farhanansari/Code/ui-library/node_modules/eslint-loader/dist/cjs.js??ref--6-0!/Users/farhanansari/Code/ui-library/node_modules/@storybook/source-loader/dist/server/index.js??ref--11!/Users/farhanansari/Code/ui-library/node_modules/@storybook/source-loader/dist/server/index.js!/Users/farhanansari/Code/ui-library/node_modules/@storybook/source-loader/dist/server/index.js!/Users/farhanansari/Code/ui-library/src/components/molecules/GroupedDropdown/GroupedDropdown.stories.tsx"],"names":[],"mappings":";;;;AACA;AACA;AACA;AACA,IAAI,gBAAgB,GAAG,OAAO,CAAC,kCAAD,CAAP,CAA4C,UAAnE,C,CACA;;;AACA,IAAI,kBAAkB,GAAG,OAAO,CAAC,kCAAD,CAAP,CAA4C,SAArE,C,CACA;;;AACA,IAAI,iBAAiB,GAAG,8EAAxB,C,CACA;;AACA,IAAI,SAAS,GAAG,i6qBAAhB,C,CACA;;AACA,IAAI,YAAY,GAAG,EAAnB,C,CACA;;AACA,IAAI,sBAAsB,GAAG,8BAA7B,C,CACA;;AACA,IAAI,uBAAuB,GAAG,EAA9B,C,CACA;;AACA,IAAI,sBAAsB,GAAG,EAA7B,C,CACA;;AACA,IAAI,qBAAqB,GAAG,EAA5B;AAGA;AACA;AACA;;AACA,IAAI,gBAAgB,GAAG,OAAO,CAAC,kCAAD,CAAP,CAA4C,UAAnE,C,CACA;;;AACA,IAAI,kBAAkB,GAAG,OAAO,CAAC,kCAAD,CAAP,CAA4C,SAArE,C,CACA;;;AACA,IAAI,iBAAiB,GAAG,8EAAxB,C,CACA;;AACA,IAAI,SAAS,GAAG,4nNAAhB,C,CACA;;AACA,IAAI,YAAY,GAAG,EAAnB,C,CACA;;AACA,IAAI,sBAAsB,GAAG,8BAA7B,C,CACA;;AACA,IAAI,uBAAuB,GAAG,EAA9B,C,CACA;;AACA,IAAI,sBAAsB,GAAG,EAA7B,C,CACA;;AACA,IAAI,qBAAqB,GAAG,EAA5B;AAGA;AACA;AACA;;AACA,IAAI,gBAAgB,GAAG,OAAO,CAAC,kCAAD,CAAP,CAA4C,UAAnE,C,CACA;;;AACA,IAAI,kBAAkB,GAAG,OAAO,CAAC,kCAAD,CAAP,CAA4C,SAArE,C,CACA;;;AACA,IAAI,iBAAiB,GAAG,8EAAxB,C,CACA;;AACA,IAAI,SAAS,GAAG,y4DAAhB,C,CACA;;AACA,IAAI,YAAY,GAAG,EAAnB,C,CACA;;AACA,IAAI,sBAAsB,GAAG,8BAA7B,C,CACA;;AACA,IAAI,uBAAuB,GAAG,EAA9B,C,CACA;;AACA,IAAI,sBAAsB,GAAG,EAA7B,C,CACA;;AACA,IAAI,qBAAqB,GAAG,EAA5B;AAEA,OAAO,KAAP,MAAkB,OAAlB;AACA,OAAO,GAAP,MAAgB,iBAAhB;AACA,SAAS,IAAT,QAAqB,IAArB;AACA,OAAO,YAAP,MAAyB,4CAAzB;AACA,OAAO,eAAP,MAA4B,GAA5B;AACA,OAAO,IAAP,MAAiB,QAAjB;AACA,SAAS,MAAT,QAAuB,0BAAvB;AACA,OAAO,IAAP,MAAiB,kBAAjB;AACA,OAAO,MAAP,MAAmB,oBAAnB;AACA,SAAS,IAAT,EAAe,MAAf,EAAuB,SAAvB,QAAwC,wBAAxC;AAEA,eAAe;AAAC,EAAA,UAAU;AAAG,mBAAc;AAAC,gBAAS,i6qBAAV;AAA46qB,sBAAe;AAA37qB;AAAjB,iDAA89qB;AAAC,cAAS,4nNAAV;AAAuoN,oBAAe;AAAtpN,GAA99qB,+CAAso4B;AAAC,cAAS,y4DAAV;AAAo5D,oBAAe;AAAn6D,GAAto4B,eAAX;AACb,EAAA,KAAK,EAAK,IAAI,GAAA,kBADD;AAEb,EAAA,UAAU,EAAE,CAAC,SAAD,CAFC;AAGb,EAAA,SAAS,EAAE;AAHE,CAAf;AAMA,OAAO,IAAM,oBAAoB,GAAG,kBAAkB,CAAC,kBAAkB,CAAC,kBAAkB,CAAC,YAAA;AACrF,MAAA,EAAA,GAAkB,KAAK,CAAC,QAAN,CAAe,KAAf,CAAlB;AAAA,MAAC,IAAI,GAAA,EAAA,CAAA,CAAA,CAAL;AAAA,MAAO,OAAO,GAAA,EAAA,CAAA,CAAA,CAAd;;AACA,MAAA,EAAA,GAAgB,KAAK,CAAC,QAAN,CAAe,KAAf,CAAhB;AAAA,MAAC,GAAG,GAAA,EAAA,CAAA,CAAA,CAAJ;AAAA,MAAM,MAAM,GAAA,EAAA,CAAA,CAAA,CAAZ;;AAEN,MAAM,QAAQ,GAAG,SAAX,QAAW,CAAC,IAAD,EAAY,QAAZ,EAAyB;AACxC,IAAA,MAAM,CAAC,UAAD,EAAa,IAAb,CAAN;AACA,IAAA,UAAU;AACV,IAAA,MAAM,CAAC,CAAA,IAAI,KAAA,IAAJ,IAAA,IAAI,KAAA,KAAA,CAAJ,GAAI,KAAA,CAAJ,GAAA,IAAI,CAAE,KAAN,KAAc,QAAQ,KAAA,IAAR,IAAA,QAAQ,KAAA,KAAA,CAAR,GAAQ,KAAA,CAAR,GAAA,QAAQ,CAAE,KAAxB,CAAD,CAAN;AACD,GAJD;;AAKA,MAAM,UAAU,GAAG,SAAb,UAAa,GAAA;AACjB,IAAA,OAAO,CAAC,CAAC,IAAF,CAAP;AACD,GAFD;;AAIA,SACE,KAAA,CAAA,aAAA,CAAC,YAAD,EAAa,IAAb,EACE,KAAA,CAAA,aAAA,CAAC,GAAD,EAAI;AAAC,IAAA,CAAC,EAAC;AAAH,GAAJ,EACE,KAAA,CAAA,aAAA,CAAC,GAAD,EAAI;AAAC,IAAA,CAAC,EAAC;AAAH,GAAJ,EACE,KAAA,CAAA,aAAA,CAAC,IAAD,EAAK;AAAC,IAAA,KAAK,EAAE;AAAE,MAAA,OAAO,EAAE;AAAX;AAAR,GAAL,E,OAAA,EAAgD,GAAhD,CADF,CADF,EAIE,KAAA,CAAA,aAAA,CAAC,MAAD,EAAO;AAAC,IAAA,OAAO,EAAE,UAAV;AAAsB,IAAA,OAAO,EAAC,QAA9B;AAAuC,IAAA,MAAM,EAAC;AAA9C,GAAP,EAA8D,YAA9D,CAJF,EAOE,KAAA,CAAA,aAAA,CAAA,KAAA,EAAA,IAAA,EACG,IAAI,IACH,KAAA,CAAA,aAAA,CAAC,IAAD,EAAK;AAAC,IAAA,KAAK,EAAE;AAAE,MAAA,OAAO,EAAE,aAAX;AAA0B,MAAA,OAAO,EAAE;AAAnC;AAAR,GAAL,EACE,KAAA,CAAA,aAAA,CAAC,eAAD,EAAgB;AACd,IAAA,QAAQ,EAAE,MAAM,CAAC,UAAD,EAAa,IAAI,CAAC,QAAlB,CADF;AAEd,IAAA,IAAI,EAAE,MAAM,CAAC,MAAD,EAAS,IAAI,CAAC,IAAd,CAFE;AAGd,IAAA,KAAK,EAAE,IAAI,CAAC,OAAD,EAAU,OAAV,CAHG;AAId,IAAA,MAAM,EAAE,IAAI,CAAC,QAAD,EAAW,OAAX,CAJE;AAKd,IAAA,QAAQ,EAAE,IAAI,CAAC,UAAD,EAAa,KAAb,CALA;AAMd,IAAA,cAAc,EAAE,QANF;AAOd,IAAA,gBAAgB,EAAE,IAAI,CAAC,eAAD,EAAkB,QAAlB,CAPR;AAQd,IAAA,sBAAsB,EAAE,IAAI,CAC1B,qBAD0B,EAE1B,aAF0B;AARd,GAAhB,CADF,CAFJ,CAPF,CADF,CADF;AA+BD,CA5C2F,EA4CzF;AAAC,EAAA,SAAS,EAAA,SAAV;AAAY,EAAA,YAAY,EAAA,YAAxB;AAAyB,EAAA,sBAAsB,EAAA,sBAA/C;AAAgD,EAAA,uBAAuB,EAAA,uBAAvE;AAAwE,EAAA,sBAAsB,EAAA,sBAA9F;AAA+F,EAAA,iBAAiB,EAAA,iBAAhH;AAAiH,EAAA,qBAAqB,EAAA;AAAtI,CA5CyF,CAAnB,EA4CoE;AAAC,EAAA,SAAS,EAAA,SAAV;AAAY,EAAA,YAAY,EAAA,YAAxB;AAAyB,EAAA,sBAAsB,EAAA,sBAA/C;AAAgD,EAAA,uBAAuB,EAAA,uBAAvE;AAAwE,EAAA,sBAAsB,EAAA,sBAA9F;AAA+F,EAAA,iBAAiB,EAAA,iBAAhH;AAAiH,EAAA,qBAAqB,EAAA;AAAtI,CA5CpE,CAAnB,EA4CiO;AAAC,EAAA,SAAS,EAAA,SAAV;AAAY,EAAA,YAAY,EAAA,YAAxB;AAAyB,EAAA,sBAAsB,EAAA,sBAA/C;AAAgD,EAAA,uBAAuB,EAAA,uBAAvE;AAAwE,EAAA,sBAAsB,EAAA,sBAA9F;AAA+F,EAAA,iBAAiB,EAAA,iBAAhH;AAAiH,EAAA,qBAAqB,EAAA;AAAtI,CA5CjO,CAA/C","sourcesContent":["\n/* eslint-disable */\n// @ts-nocheck\n// @ts-ignore\nvar withSourceLoader = require('@storybook/source-loader/preview').withSource;\n// @ts-ignore\nvar addSourceDecorator = require(\"@storybook/source-loader/preview\").addSource;\n// @ts-ignore\nvar __SOURCE_PREFIX__ = \"/Users/farhanansari/Code/ui-library/src/components/molecules/GroupedDropdown\";\n// @ts-ignore\nvar __STORY__ = \"\\n\\n// @ts-nocheck\\n// @ts-ignore\\nvar withSourceLoader = require('@storybook/source-loader/preview').withSource;\\n// @ts-ignore\\nvar addSourceDecorator = require(\\\"@storybook/source-loader/preview\\\").addSource;\\n// @ts-ignore\\nvar __SOURCE_PREFIX__ = \\\"/Users/farhanansari/Code/ui-library/src/components/molecules/GroupedDropdown\\\";\\n// @ts-ignore\\nvar __STORY__ = \\\"\\\\n\\\\n// @ts-nocheck\\\\n// @ts-ignore\\\\nvar withSourceLoader = require('@storybook/source-loader/preview').withSource;\\\\n// @ts-ignore\\\\nvar addSourceDecorator = require(\\\\\\\"@storybook/source-loader/preview\\\\\\\").addSource;\\\\n// @ts-ignore\\\\nvar __SOURCE_PREFIX__ = \\\\\\\"/Users/farhanansari/Code/ui-library/src/components/molecules/GroupedDropdown\\\\\\\";\\\\n// @ts-ignore\\\\nvar __STORY__ = \\\\\\\"import React from 'react'\\\\\\\\nimport Box from '../../atoms/Box'\\\\\\\\nimport { path } from '..'\\\\\\\\nimport ThemeWrapper from '../../../utilities/components/ThemeWrapper'\\\\\\\\nimport GroupedDropdown from '.'\\\\\\\\nimport Data from './Data'\\\\\\\\nimport { action } from '@storybook/addon-actions'\\\\\\\\nimport Card from '../../atoms/Card'\\\\\\\\nimport Button from '../../atoms/Button'\\\\\\\\nimport { text, object, withKnobs } from '@storybook/addon-knobs'\\\\\\\\n\\\\\\\\nexport default {\\\\\\\\n  title: `${path}/GroupedDropdown`,\\\\\\\\n  decorators: [withKnobs],\\\\\\\\n  component: GroupedDropdown\\\\\\\\n}\\\\\\\\n\\\\\\\\nexport const GroupedDropdownStory = () => {\\\\\\\\n  const [open, setOpen] = React.useState(false)\\\\\\\\n  const [tag, setTag] = React.useState(false)\\\\\\\\n\\\\\\\\n  const onChange = (data: any, category: any) => {\\\\\\\\n    action('selected', data)\\\\\\\\n    handleOpen()\\\\\\\\n    setTag(data?.label + category?.label)\\\\\\\\n  }\\\\\\\\n  const handleOpen = () => {\\\\\\\\n    setOpen(!open)\\\\\\\\n  }\\\\\\\\n\\\\\\\\n  return (\\\\\\\\n    <ThemeWrapper>\\\\\\\\n      <Box p='1em'>\\\\\\\\n        <Box p='1em'>\\\\\\\\n          <Card style={{ display: 'inline-block' }}>Tag: {tag}</Card>\\\\\\\\n        </Box>\\\\\\\\n        <Button onClick={handleOpen} variant='button' intent='default'>\\\\\\\\n          Click me !\\\\\\\\n        </Button>\\\\\\\\n        <div>\\\\\\\\n          {open && (\\\\\\\\n            <Card style={{ display: 'inline-flex', padding: '0px' }}>\\\\\\\\n              <GroupedDropdown\\\\\\\\n                category={object('category', Data.category)}\\\\\\\\n                data={object('data', Data.data)}\\\\\\\\n                width={text('width', '500px')}\\\\\\\\n                height={text('height', '250px')}\\\\\\\\n                allLabel={text('allLabel', 'All')}\\\\\\\\n                handleOnChange={onChange}\\\\\\\\n                searchFieldLabel={text('dropdownLabel', 'Search')}\\\\\\\\n                searchFieldPlaceholder={text(\\\\\\\\n                  'dropdownPlaceholder',\\\\\\\\n                  'Search Tags'\\\\\\\\n                )}\\\\\\\\n              />\\\\\\\\n            </Card>\\\\\\\\n          )}\\\\\\\\n        </div>\\\\\\\\n      </Box>\\\\\\\\n    </ThemeWrapper>\\\\\\\\n  )\\\\\\\\n}\\\\\\\\n\\\\\\\";\\\\n// @ts-ignore\\\\nvar __ADDS_MAP__ = {};\\\\n// @ts-ignore\\\\nvar __MAIN_FILE_LOCATION__ = \\\\\\\"/GroupedDropdown.stories.tsx\\\\\\\";\\\\n// @ts-ignore\\\\nvar __MODULE_DEPENDENCIES__ = [];\\\\n// @ts-ignore\\\\nvar __LOCAL_DEPENDENCIES__ = {};\\\\n// @ts-ignore\\\\nvar __IDS_TO_FRAMEWORKS__ = {};\\\\n        \\\\nimport React from 'react'\\\\nimport Box from '../../atoms/Box'\\\\nimport { path } from '..'\\\\nimport ThemeWrapper from '../../../utilities/components/ThemeWrapper'\\\\nimport GroupedDropdown from '.'\\\\nimport Data from './Data'\\\\nimport { action } from '@storybook/addon-actions'\\\\nimport Card from '../../atoms/Card'\\\\nimport Button from '../../atoms/Button'\\\\nimport { text, object, withKnobs } from '@storybook/addon-knobs'\\\\n\\\\nexport default {parameters: {\\\\\\\"storySource\\\\\\\":{\\\\\\\"source\\\\\\\":\\\\\\\"import React from 'react'\\\\\\\\nimport Box from '../../atoms/Box'\\\\\\\\nimport { path } from '..'\\\\\\\\nimport ThemeWrapper from '../../../utilities/components/ThemeWrapper'\\\\\\\\nimport GroupedDropdown from '.'\\\\\\\\nimport Data from './Data'\\\\\\\\nimport { action } from '@storybook/addon-actions'\\\\\\\\nimport Card from '../../atoms/Card'\\\\\\\\nimport Button from '../../atoms/Button'\\\\\\\\nimport { text, object, withKnobs } from '@storybook/addon-knobs'\\\\\\\\n\\\\\\\\nexport default {\\\\\\\\n  title: `${path}/GroupedDropdown`,\\\\\\\\n  decorators: [withKnobs],\\\\\\\\n  component: GroupedDropdown\\\\\\\\n}\\\\\\\\n\\\\\\\\nexport const GroupedDropdownStory = () => {\\\\\\\\n  const [open, setOpen] = React.useState(false)\\\\\\\\n  const [tag, setTag] = React.useState(false)\\\\\\\\n\\\\\\\\n  const onChange = (data: any, category: any) => {\\\\\\\\n    action('selected', data)\\\\\\\\n    handleOpen()\\\\\\\\n    setTag(data?.label + category?.label)\\\\\\\\n  }\\\\\\\\n  const handleOpen = () => {\\\\\\\\n    setOpen(!open)\\\\\\\\n  }\\\\\\\\n\\\\\\\\n  return (\\\\\\\\n    <ThemeWrapper>\\\\\\\\n      <Box p='1em'>\\\\\\\\n        <Box p='1em'>\\\\\\\\n          <Card style={{ display: 'inline-block' }}>Tag: {tag}</Card>\\\\\\\\n        </Box>\\\\\\\\n        <Button onClick={handleOpen} variant='button' intent='default'>\\\\\\\\n          Click me !\\\\\\\\n        </Button>\\\\\\\\n        <div>\\\\\\\\n          {open && (\\\\\\\\n            <Card style={{ display: 'inline-flex', padding: '0px' }}>\\\\\\\\n              <GroupedDropdown\\\\\\\\n                category={object('category', Data.category)}\\\\\\\\n                data={object('data', Data.data)}\\\\\\\\n                width={text('width', '500px')}\\\\\\\\n                height={text('height', '250px')}\\\\\\\\n                allLabel={text('allLabel', 'All')}\\\\\\\\n                handleOnChange={onChange}\\\\\\\\n                searchFieldLabel={text('dropdownLabel', 'Search')}\\\\\\\\n                searchFieldPlaceholder={text(\\\\\\\\n                  'dropdownPlaceholder',\\\\\\\\n                  'Search Tags'\\\\\\\\n                )}\\\\\\\\n              />\\\\\\\\n            </Card>\\\\\\\\n          )}\\\\\\\\n        </div>\\\\\\\\n      </Box>\\\\\\\\n    </ThemeWrapper>\\\\\\\\n  )\\\\\\\\n}\\\\\\\\n\\\\\\\",\\\\\\\"locationsMap\\\\\\\":{}},},\\\\n  title: `${path}/GroupedDropdown`,\\\\n  decorators: [withKnobs],\\\\n  component: GroupedDropdown\\\\n}\\\\n\\\\nexport const GroupedDropdownStory = addSourceDecorator(() => {\\\\n  const [open, setOpen] = React.useState(false)\\\\n  const [tag, setTag] = React.useState(false)\\\\n\\\\n  const onChange = (data: any, category: any) => {\\\\n    action('selected', data)\\\\n    handleOpen()\\\\n    setTag(data?.label + category?.label)\\\\n  }\\\\n  const handleOpen = () => {\\\\n    setOpen(!open)\\\\n  }\\\\n\\\\n  return (\\\\n    <ThemeWrapper>\\\\n      <Box p='1em'>\\\\n        <Box p='1em'>\\\\n          <Card style={{ display: 'inline-block' }}>Tag: {tag}</Card>\\\\n        </Box>\\\\n        <Button onClick={handleOpen} variant='button' intent='default'>\\\\n          Click me !\\\\n        </Button>\\\\n        <div>\\\\n          {open && (\\\\n            <Card style={{ display: 'inline-flex', padding: '0px' }}>\\\\n              <GroupedDropdown\\\\n                category={object('category', Data.category)}\\\\n                data={object('data', Data.data)}\\\\n                width={text('width', '500px')}\\\\n                height={text('height', '250px')}\\\\n                allLabel={text('allLabel', 'All')}\\\\n                handleOnChange={onChange}\\\\n                searchFieldLabel={text('dropdownLabel', 'Search')}\\\\n                searchFieldPlaceholder={text(\\\\n                  'dropdownPlaceholder',\\\\n                  'Search Tags'\\\\n                )}\\\\n              />\\\\n            </Card>\\\\n          )}\\\\n        </div>\\\\n      </Box>\\\\n    </ThemeWrapper>\\\\n  )\\\\n}, {__STORY__, __ADDS_MAP__,__MAIN_FILE_LOCATION__,__MODULE_DEPENDENCIES__,__LOCAL_DEPENDENCIES__,__SOURCE_PREFIX__,__IDS_TO_FRAMEWORKS__});\\\";\\n// @ts-ignore\\nvar __ADDS_MAP__ = {};\\n// @ts-ignore\\nvar __MAIN_FILE_LOCATION__ = \\\"/GroupedDropdown.stories.tsx\\\";\\n// @ts-ignore\\nvar __MODULE_DEPENDENCIES__ = [];\\n// @ts-ignore\\nvar __LOCAL_DEPENDENCIES__ = {};\\n// @ts-ignore\\nvar __IDS_TO_FRAMEWORKS__ = {};\\n        \\n\\n\\n// @ts-nocheck\\n// @ts-ignore\\nvar withSourceLoader = require('@storybook/source-loader/preview').withSource;\\n// @ts-ignore\\nvar addSourceDecorator = require(\\\"@storybook/source-loader/preview\\\").addSource;\\n// @ts-ignore\\nvar __SOURCE_PREFIX__ = \\\"/Users/farhanansari/Code/ui-library/src/components/molecules/GroupedDropdown\\\";\\n// @ts-ignore\\nvar __STORY__ = \\\"import React from 'react'\\\\nimport Box from '../../atoms/Box'\\\\nimport { path } from '..'\\\\nimport ThemeWrapper from '../../../utilities/components/ThemeWrapper'\\\\nimport GroupedDropdown from '.'\\\\nimport Data from './Data'\\\\nimport { action } from '@storybook/addon-actions'\\\\nimport Card from '../../atoms/Card'\\\\nimport Button from '../../atoms/Button'\\\\nimport { text, object, withKnobs } from '@storybook/addon-knobs'\\\\n\\\\nexport default {\\\\n  title: `${path}/GroupedDropdown`,\\\\n  decorators: [withKnobs],\\\\n  component: GroupedDropdown\\\\n}\\\\n\\\\nexport const GroupedDropdownStory = () => {\\\\n  const [open, setOpen] = React.useState(false)\\\\n  const [tag, setTag] = React.useState(false)\\\\n\\\\n  const onChange = (data: any, category: any) => {\\\\n    action('selected', data)\\\\n    handleOpen()\\\\n    setTag(data?.label + category?.label)\\\\n  }\\\\n  const handleOpen = () => {\\\\n    setOpen(!open)\\\\n  }\\\\n\\\\n  return (\\\\n    <ThemeWrapper>\\\\n      <Box p='1em'>\\\\n        <Box p='1em'>\\\\n          <Card style={{ display: 'inline-block' }}>Tag: {tag}</Card>\\\\n        </Box>\\\\n        <Button onClick={handleOpen} variant='button' intent='default'>\\\\n          Click me !\\\\n        </Button>\\\\n        <div>\\\\n          {open && (\\\\n            <Card style={{ display: 'inline-flex', padding: '0px' }}>\\\\n              <GroupedDropdown\\\\n                category={object('category', Data.category)}\\\\n                data={object('data', Data.data)}\\\\n                width={text('width', '500px')}\\\\n                height={text('height', '250px')}\\\\n                allLabel={text('allLabel', 'All')}\\\\n                handleOnChange={onChange}\\\\n                searchFieldLabel={text('dropdownLabel', 'Search')}\\\\n                searchFieldPlaceholder={text(\\\\n                  'dropdownPlaceholder',\\\\n                  'Search Tags'\\\\n                )}\\\\n              />\\\\n            </Card>\\\\n          )}\\\\n        </div>\\\\n      </Box>\\\\n    </ThemeWrapper>\\\\n  )\\\\n}\\\\n\\\";\\n// @ts-ignore\\nvar __ADDS_MAP__ = {};\\n// @ts-ignore\\nvar __MAIN_FILE_LOCATION__ = \\\"/GroupedDropdown.stories.tsx\\\";\\n// @ts-ignore\\nvar __MODULE_DEPENDENCIES__ = [];\\n// @ts-ignore\\nvar __LOCAL_DEPENDENCIES__ = {};\\n// @ts-ignore\\nvar __IDS_TO_FRAMEWORKS__ = {};\\n        \\nimport React from 'react'\\nimport Box from '../../atoms/Box'\\nimport { path } from '..'\\nimport ThemeWrapper from '../../../utilities/components/ThemeWrapper'\\nimport GroupedDropdown from '.'\\nimport Data from './Data'\\nimport { action } from '@storybook/addon-actions'\\nimport Card from '../../atoms/Card'\\nimport Button from '../../atoms/Button'\\nimport { text, object, withKnobs } from '@storybook/addon-knobs'\\n\\nexport default {parameters: {\\\"storySource\\\":{\\\"source\\\":\\\"\\\\n\\\\n// @ts-nocheck\\\\n// @ts-ignore\\\\nvar withSourceLoader = require('@storybook/source-loader/preview').withSource;\\\\n// @ts-ignore\\\\nvar addSourceDecorator = require(\\\\\\\"@storybook/source-loader/preview\\\\\\\").addSource;\\\\n// @ts-ignore\\\\nvar __SOURCE_PREFIX__ = \\\\\\\"/Users/farhanansari/Code/ui-library/src/components/molecules/GroupedDropdown\\\\\\\";\\\\n// @ts-ignore\\\\nvar __STORY__ = \\\\\\\"import React from 'react'\\\\\\\\nimport Box from '../../atoms/Box'\\\\\\\\nimport { path } from '..'\\\\\\\\nimport ThemeWrapper from '../../../utilities/components/ThemeWrapper'\\\\\\\\nimport GroupedDropdown from '.'\\\\\\\\nimport Data from './Data'\\\\\\\\nimport { action } from '@storybook/addon-actions'\\\\\\\\nimport Card from '../../atoms/Card'\\\\\\\\nimport Button from '../../atoms/Button'\\\\\\\\nimport { text, object, withKnobs } from '@storybook/addon-knobs'\\\\\\\\n\\\\\\\\nexport default {\\\\\\\\n  title: `${path}/GroupedDropdown`,\\\\\\\\n  decorators: [withKnobs],\\\\\\\\n  component: GroupedDropdown\\\\\\\\n}\\\\\\\\n\\\\\\\\nexport const GroupedDropdownStory = () => {\\\\\\\\n  const [open, setOpen] = React.useState(false)\\\\\\\\n  const [tag, setTag] = React.useState(false)\\\\\\\\n\\\\\\\\n  const onChange = (data: any, category: any) => {\\\\\\\\n    action('selected', data)\\\\\\\\n    handleOpen()\\\\\\\\n    setTag(data?.label + category?.label)\\\\\\\\n  }\\\\\\\\n  const handleOpen = () => {\\\\\\\\n    setOpen(!open)\\\\\\\\n  }\\\\\\\\n\\\\\\\\n  return (\\\\\\\\n    <ThemeWrapper>\\\\\\\\n      <Box p='1em'>\\\\\\\\n        <Box p='1em'>\\\\\\\\n          <Card style={{ display: 'inline-block' }}>Tag: {tag}</Card>\\\\\\\\n        </Box>\\\\\\\\n        <Button onClick={handleOpen} variant='button' intent='default'>\\\\\\\\n          Click me !\\\\\\\\n        </Button>\\\\\\\\n        <div>\\\\\\\\n          {open && (\\\\\\\\n            <Card style={{ display: 'inline-flex', padding: '0px' }}>\\\\\\\\n              <GroupedDropdown\\\\\\\\n                category={object('category', Data.category)}\\\\\\\\n                data={object('data', Data.data)}\\\\\\\\n                width={text('width', '500px')}\\\\\\\\n                height={text('height', '250px')}\\\\\\\\n                allLabel={text('allLabel', 'All')}\\\\\\\\n                handleOnChange={onChange}\\\\\\\\n                searchFieldLabel={text('dropdownLabel', 'Search')}\\\\\\\\n                searchFieldPlaceholder={text(\\\\\\\\n                  'dropdownPlaceholder',\\\\\\\\n                  'Search Tags'\\\\\\\\n                )}\\\\\\\\n              />\\\\\\\\n            </Card>\\\\\\\\n          )}\\\\\\\\n        </div>\\\\\\\\n      </Box>\\\\\\\\n    </ThemeWrapper>\\\\\\\\n  )\\\\\\\\n}\\\\\\\\n\\\\\\\";\\\\n// @ts-ignore\\\\nvar __ADDS_MAP__ = {};\\\\n// @ts-ignore\\\\nvar __MAIN_FILE_LOCATION__ = \\\\\\\"/GroupedDropdown.stories.tsx\\\\\\\";\\\\n// @ts-ignore\\\\nvar __MODULE_DEPENDENCIES__ = [];\\\\n// @ts-ignore\\\\nvar __LOCAL_DEPENDENCIES__ = {};\\\\n// @ts-ignore\\\\nvar __IDS_TO_FRAMEWORKS__ = {};\\\\n        \\\\nimport React from 'react'\\\\nimport Box from '../../atoms/Box'\\\\nimport { path } from '..'\\\\nimport ThemeWrapper from '../../../utilities/components/ThemeWrapper'\\\\nimport GroupedDropdown from '.'\\\\nimport Data from './Data'\\\\nimport { action } from '@storybook/addon-actions'\\\\nimport Card from '../../atoms/Card'\\\\nimport Button from '../../atoms/Button'\\\\nimport { text, object, withKnobs } from '@storybook/addon-knobs'\\\\n\\\\nexport default {parameters: {\\\\\\\"storySource\\\\\\\":{\\\\\\\"source\\\\\\\":\\\\\\\"import React from 'react'\\\\\\\\nimport Box from '../../atoms/Box'\\\\\\\\nimport { path } from '..'\\\\\\\\nimport ThemeWrapper from '../../../utilities/components/ThemeWrapper'\\\\\\\\nimport GroupedDropdown from '.'\\\\\\\\nimport Data from './Data'\\\\\\\\nimport { action } from '@storybook/addon-actions'\\\\\\\\nimport Card from '../../atoms/Card'\\\\\\\\nimport Button from '../../atoms/Button'\\\\\\\\nimport { text, object, withKnobs } from '@storybook/addon-knobs'\\\\\\\\n\\\\\\\\nexport default {\\\\\\\\n  title: `${path}/GroupedDropdown`,\\\\\\\\n  decorators: [withKnobs],\\\\\\\\n  component: GroupedDropdown\\\\\\\\n}\\\\\\\\n\\\\\\\\nexport const GroupedDropdownStory = () => {\\\\\\\\n  const [open, setOpen] = React.useState(false)\\\\\\\\n  const [tag, setTag] = React.useState(false)\\\\\\\\n\\\\\\\\n  const onChange = (data: any, category: any) => {\\\\\\\\n    action('selected', data)\\\\\\\\n    handleOpen()\\\\\\\\n    setTag(data?.label + category?.label)\\\\\\\\n  }\\\\\\\\n  const handleOpen = () => {\\\\\\\\n    setOpen(!open)\\\\\\\\n  }\\\\\\\\n\\\\\\\\n  return (\\\\\\\\n    <ThemeWrapper>\\\\\\\\n      <Box p='1em'>\\\\\\\\n        <Box p='1em'>\\\\\\\\n          <Card style={{ display: 'inline-block' }}>Tag: {tag}</Card>\\\\\\\\n        </Box>\\\\\\\\n        <Button onClick={handleOpen} variant='button' intent='default'>\\\\\\\\n          Click me !\\\\\\\\n        </Button>\\\\\\\\n        <div>\\\\\\\\n          {open && (\\\\\\\\n            <Card style={{ display: 'inline-flex', padding: '0px' }}>\\\\\\\\n              <GroupedDropdown\\\\\\\\n                category={object('category', Data.category)}\\\\\\\\n                data={object('data', Data.data)}\\\\\\\\n                width={text('width', '500px')}\\\\\\\\n                height={text('height', '250px')}\\\\\\\\n                allLabel={text('allLabel', 'All')}\\\\\\\\n                handleOnChange={onChange}\\\\\\\\n                searchFieldLabel={text('dropdownLabel', 'Search')}\\\\\\\\n                searchFieldPlaceholder={text(\\\\\\\\n                  'dropdownPlaceholder',\\\\\\\\n                  'Search Tags'\\\\\\\\n                )}\\\\\\\\n              />\\\\\\\\n            </Card>\\\\\\\\n          )}\\\\\\\\n        </div>\\\\\\\\n      </Box>\\\\\\\\n    </ThemeWrapper>\\\\\\\\n  )\\\\\\\\n}\\\\\\\\n\\\\\\\",\\\\\\\"locationsMap\\\\\\\":{}},},\\\\n  title: `${path}/GroupedDropdown`,\\\\n  decorators: [withKnobs],\\\\n  component: GroupedDropdown\\\\n}\\\\n\\\\nexport const GroupedDropdownStory = addSourceDecorator(() => {\\\\n  const [open, setOpen] = React.useState(false)\\\\n  const [tag, setTag] = React.useState(false)\\\\n\\\\n  const onChange = (data: any, category: any) => {\\\\n    action('selected', data)\\\\n    handleOpen()\\\\n    setTag(data?.label + category?.label)\\\\n  }\\\\n  const handleOpen = () => {\\\\n    setOpen(!open)\\\\n  }\\\\n\\\\n  return (\\\\n    <ThemeWrapper>\\\\n      <Box p='1em'>\\\\n        <Box p='1em'>\\\\n          <Card style={{ display: 'inline-block' }}>Tag: {tag}</Card>\\\\n        </Box>\\\\n        <Button onClick={handleOpen} variant='button' intent='default'>\\\\n          Click me !\\\\n        </Button>\\\\n        <div>\\\\n          {open && (\\\\n            <Card style={{ display: 'inline-flex', padding: '0px' }}>\\\\n              <GroupedDropdown\\\\n                category={object('category', Data.category)}\\\\n                data={object('data', Data.data)}\\\\n                width={text('width', '500px')}\\\\n                height={text('height', '250px')}\\\\n                allLabel={text('allLabel', 'All')}\\\\n                handleOnChange={onChange}\\\\n                searchFieldLabel={text('dropdownLabel', 'Search')}\\\\n                searchFieldPlaceholder={text(\\\\n                  'dropdownPlaceholder',\\\\n                  'Search Tags'\\\\n                )}\\\\n              />\\\\n            </Card>\\\\n          )}\\\\n        </div>\\\\n      </Box>\\\\n    </ThemeWrapper>\\\\n  )\\\\n}, {__STORY__, __ADDS_MAP__,__MAIN_FILE_LOCATION__,__MODULE_DEPENDENCIES__,__LOCAL_DEPENDENCIES__,__SOURCE_PREFIX__,__IDS_TO_FRAMEWORKS__});\\\",\\\"locationsMap\\\":{}},\\\"storySource\\\":{\\\"source\\\":\\\"import React from 'react'\\\\nimport Box from '../../atoms/Box'\\\\nimport { path } from '..'\\\\nimport ThemeWrapper from '../../../utilities/components/ThemeWrapper'\\\\nimport GroupedDropdown from '.'\\\\nimport Data from './Data'\\\\nimport { action } from '@storybook/addon-actions'\\\\nimport Card from '../../atoms/Card'\\\\nimport Button from '../../atoms/Button'\\\\nimport { text, object, withKnobs } from '@storybook/addon-knobs'\\\\n\\\\nexport default {\\\\n  title: `${path}/GroupedDropdown`,\\\\n  decorators: [withKnobs],\\\\n  component: GroupedDropdown\\\\n}\\\\n\\\\nexport const GroupedDropdownStory = () => {\\\\n  const [open, setOpen] = React.useState(false)\\\\n  const [tag, setTag] = React.useState(false)\\\\n\\\\n  const onChange = (data: any, category: any) => {\\\\n    action('selected', data)\\\\n    handleOpen()\\\\n    setTag(data?.label + category?.label)\\\\n  }\\\\n  const handleOpen = () => {\\\\n    setOpen(!open)\\\\n  }\\\\n\\\\n  return (\\\\n    <ThemeWrapper>\\\\n      <Box p='1em'>\\\\n        <Box p='1em'>\\\\n          <Card style={{ display: 'inline-block' }}>Tag: {tag}</Card>\\\\n        </Box>\\\\n        <Button onClick={handleOpen} variant='button' intent='default'>\\\\n          Click me !\\\\n        </Button>\\\\n        <div>\\\\n          {open && (\\\\n            <Card style={{ display: 'inline-flex', padding: '0px' }}>\\\\n              <GroupedDropdown\\\\n                category={object('category', Data.category)}\\\\n                data={object('data', Data.data)}\\\\n                width={text('width', '500px')}\\\\n                height={text('height', '250px')}\\\\n                allLabel={text('allLabel', 'All')}\\\\n                handleOnChange={onChange}\\\\n                searchFieldLabel={text('dropdownLabel', 'Search')}\\\\n                searchFieldPlaceholder={text(\\\\n                  'dropdownPlaceholder',\\\\n                  'Search Tags'\\\\n                )}\\\\n              />\\\\n            </Card>\\\\n          )}\\\\n        </div>\\\\n      </Box>\\\\n    </ThemeWrapper>\\\\n  )\\\\n}\\\\n\\\",\\\"locationsMap\\\":{}},},\\n  title: `${path}/GroupedDropdown`,\\n  decorators: [withKnobs],\\n  component: GroupedDropdown\\n}\\n\\nexport const GroupedDropdownStory = addSourceDecorator(addSourceDecorator(() => {\\n  const [open, setOpen] = React.useState(false)\\n  const [tag, setTag] = React.useState(false)\\n\\n  const onChange = (data: any, category: any) => {\\n    action('selected', data)\\n    handleOpen()\\n    setTag(data?.label + category?.label)\\n  }\\n  const handleOpen = () => {\\n    setOpen(!open)\\n  }\\n\\n  return (\\n    <ThemeWrapper>\\n      <Box p='1em'>\\n        <Box p='1em'>\\n          <Card style={{ display: 'inline-block' }}>Tag: {tag}</Card>\\n        </Box>\\n        <Button onClick={handleOpen} variant='button' intent='default'>\\n          Click me !\\n        </Button>\\n        <div>\\n          {open && (\\n            <Card style={{ display: 'inline-flex', padding: '0px' }}>\\n              <GroupedDropdown\\n                category={object('category', Data.category)}\\n                data={object('data', Data.data)}\\n                width={text('width', '500px')}\\n                height={text('height', '250px')}\\n                allLabel={text('allLabel', 'All')}\\n                handleOnChange={onChange}\\n                searchFieldLabel={text('dropdownLabel', 'Search')}\\n                searchFieldPlaceholder={text(\\n                  'dropdownPlaceholder',\\n                  'Search Tags'\\n                )}\\n              />\\n            </Card>\\n          )}\\n        </div>\\n      </Box>\\n    </ThemeWrapper>\\n  )\\n}, {__STORY__, __ADDS_MAP__,__MAIN_FILE_LOCATION__,__MODULE_DEPENDENCIES__,__LOCAL_DEPENDENCIES__,__SOURCE_PREFIX__,__IDS_TO_FRAMEWORKS__}), {__STORY__, __ADDS_MAP__,__MAIN_FILE_LOCATION__,__MODULE_DEPENDENCIES__,__LOCAL_DEPENDENCIES__,__SOURCE_PREFIX__,__IDS_TO_FRAMEWORKS__});\";\n// @ts-ignore\nvar __ADDS_MAP__ = {};\n// @ts-ignore\nvar __MAIN_FILE_LOCATION__ = \"/GroupedDropdown.stories.tsx\";\n// @ts-ignore\nvar __MODULE_DEPENDENCIES__ = [];\n// @ts-ignore\nvar __LOCAL_DEPENDENCIES__ = {};\n// @ts-ignore\nvar __IDS_TO_FRAMEWORKS__ = {};\n        \n\n/* eslint-disable */\n// @ts-nocheck\n// @ts-ignore\nvar withSourceLoader = require('@storybook/source-loader/preview').withSource;\n// @ts-ignore\nvar addSourceDecorator = require(\"@storybook/source-loader/preview\").addSource;\n// @ts-ignore\nvar __SOURCE_PREFIX__ = \"/Users/farhanansari/Code/ui-library/src/components/molecules/GroupedDropdown\";\n// @ts-ignore\nvar __STORY__ = \"\\n\\n// @ts-nocheck\\n// @ts-ignore\\nvar withSourceLoader = require('@storybook/source-loader/preview').withSource;\\n// @ts-ignore\\nvar addSourceDecorator = require(\\\"@storybook/source-loader/preview\\\").addSource;\\n// @ts-ignore\\nvar __SOURCE_PREFIX__ = \\\"/Users/farhanansari/Code/ui-library/src/components/molecules/GroupedDropdown\\\";\\n// @ts-ignore\\nvar __STORY__ = \\\"import React from 'react'\\\\nimport Box from '../../atoms/Box'\\\\nimport { path } from '..'\\\\nimport ThemeWrapper from '../../../utilities/components/ThemeWrapper'\\\\nimport GroupedDropdown from '.'\\\\nimport Data from './Data'\\\\nimport { action } from '@storybook/addon-actions'\\\\nimport Card from '../../atoms/Card'\\\\nimport Button from '../../atoms/Button'\\\\nimport { text, object, withKnobs } from '@storybook/addon-knobs'\\\\n\\\\nexport default {\\\\n  title: `${path}/GroupedDropdown`,\\\\n  decorators: [withKnobs],\\\\n  component: GroupedDropdown\\\\n}\\\\n\\\\nexport const GroupedDropdownStory = () => {\\\\n  const [open, setOpen] = React.useState(false)\\\\n  const [tag, setTag] = React.useState(false)\\\\n\\\\n  const onChange = (data: any, category: any) => {\\\\n    action('selected', data)\\\\n    handleOpen()\\\\n    setTag(data?.label + category?.label)\\\\n  }\\\\n  const handleOpen = () => {\\\\n    setOpen(!open)\\\\n  }\\\\n\\\\n  return (\\\\n    <ThemeWrapper>\\\\n      <Box p='1em'>\\\\n        <Box p='1em'>\\\\n          <Card style={{ display: 'inline-block' }}>Tag: {tag}</Card>\\\\n        </Box>\\\\n        <Button onClick={handleOpen} variant='button' intent='default'>\\\\n          Click me !\\\\n        </Button>\\\\n        <div>\\\\n          {open && (\\\\n            <Card style={{ display: 'inline-flex', padding: '0px' }}>\\\\n              <GroupedDropdown\\\\n                category={object('category', Data.category)}\\\\n                data={object('data', Data.data)}\\\\n                width={text('width', '500px')}\\\\n                height={text('height', '250px')}\\\\n                allLabel={text('allLabel', 'All')}\\\\n                handleOnChange={onChange}\\\\n                searchFieldLabel={text('dropdownLabel', 'Search')}\\\\n                searchFieldPlaceholder={text(\\\\n                  'dropdownPlaceholder',\\\\n                  'Search Tags'\\\\n                )}\\\\n              />\\\\n            </Card>\\\\n          )}\\\\n        </div>\\\\n      </Box>\\\\n    </ThemeWrapper>\\\\n  )\\\\n}\\\\n\\\";\\n// @ts-ignore\\nvar __ADDS_MAP__ = {};\\n// @ts-ignore\\nvar __MAIN_FILE_LOCATION__ = \\\"/GroupedDropdown.stories.tsx\\\";\\n// @ts-ignore\\nvar __MODULE_DEPENDENCIES__ = [];\\n// @ts-ignore\\nvar __LOCAL_DEPENDENCIES__ = {};\\n// @ts-ignore\\nvar __IDS_TO_FRAMEWORKS__ = {};\\n        \\nimport React from 'react'\\nimport Box from '../../atoms/Box'\\nimport { path } from '..'\\nimport ThemeWrapper from '../../../utilities/components/ThemeWrapper'\\nimport GroupedDropdown from '.'\\nimport Data from './Data'\\nimport { action } from '@storybook/addon-actions'\\nimport Card from '../../atoms/Card'\\nimport Button from '../../atoms/Button'\\nimport { text, object, withKnobs } from '@storybook/addon-knobs'\\n\\nexport default {parameters: {\\\"storySource\\\":{\\\"source\\\":\\\"import React from 'react'\\\\nimport Box from '../../atoms/Box'\\\\nimport { path } from '..'\\\\nimport ThemeWrapper from '../../../utilities/components/ThemeWrapper'\\\\nimport GroupedDropdown from '.'\\\\nimport Data from './Data'\\\\nimport { action } from '@storybook/addon-actions'\\\\nimport Card from '../../atoms/Card'\\\\nimport Button from '../../atoms/Button'\\\\nimport { text, object, withKnobs } from '@storybook/addon-knobs'\\\\n\\\\nexport default {\\\\n  title: `${path}/GroupedDropdown`,\\\\n  decorators: [withKnobs],\\\\n  component: GroupedDropdown\\\\n}\\\\n\\\\nexport const GroupedDropdownStory = () => {\\\\n  const [open, setOpen] = React.useState(false)\\\\n  const [tag, setTag] = React.useState(false)\\\\n\\\\n  const onChange = (data: any, category: any) => {\\\\n    action('selected', data)\\\\n    handleOpen()\\\\n    setTag(data?.label + category?.label)\\\\n  }\\\\n  const handleOpen = () => {\\\\n    setOpen(!open)\\\\n  }\\\\n\\\\n  return (\\\\n    <ThemeWrapper>\\\\n      <Box p='1em'>\\\\n        <Box p='1em'>\\\\n          <Card style={{ display: 'inline-block' }}>Tag: {tag}</Card>\\\\n        </Box>\\\\n        <Button onClick={handleOpen} variant='button' intent='default'>\\\\n          Click me !\\\\n        </Button>\\\\n        <div>\\\\n          {open && (\\\\n            <Card style={{ display: 'inline-flex', padding: '0px' }}>\\\\n              <GroupedDropdown\\\\n                category={object('category', Data.category)}\\\\n                data={object('data', Data.data)}\\\\n                width={text('width', '500px')}\\\\n                height={text('height', '250px')}\\\\n                allLabel={text('allLabel', 'All')}\\\\n                handleOnChange={onChange}\\\\n                searchFieldLabel={text('dropdownLabel', 'Search')}\\\\n                searchFieldPlaceholder={text(\\\\n                  'dropdownPlaceholder',\\\\n                  'Search Tags'\\\\n                )}\\\\n              />\\\\n            </Card>\\\\n          )}\\\\n        </div>\\\\n      </Box>\\\\n    </ThemeWrapper>\\\\n  )\\\\n}\\\\n\\\",\\\"locationsMap\\\":{}},},\\n  title: `${path}/GroupedDropdown`,\\n  decorators: [withKnobs],\\n  component: GroupedDropdown\\n}\\n\\nexport const GroupedDropdownStory = addSourceDecorator(() => {\\n  const [open, setOpen] = React.useState(false)\\n  const [tag, setTag] = React.useState(false)\\n\\n  const onChange = (data: any, category: any) => {\\n    action('selected', data)\\n    handleOpen()\\n    setTag(data?.label + category?.label)\\n  }\\n  const handleOpen = () => {\\n    setOpen(!open)\\n  }\\n\\n  return (\\n    <ThemeWrapper>\\n      <Box p='1em'>\\n        <Box p='1em'>\\n          <Card style={{ display: 'inline-block' }}>Tag: {tag}</Card>\\n        </Box>\\n        <Button onClick={handleOpen} variant='button' intent='default'>\\n          Click me !\\n        </Button>\\n        <div>\\n          {open && (\\n            <Card style={{ display: 'inline-flex', padding: '0px' }}>\\n              <GroupedDropdown\\n                category={object('category', Data.category)}\\n                data={object('data', Data.data)}\\n                width={text('width', '500px')}\\n                height={text('height', '250px')}\\n                allLabel={text('allLabel', 'All')}\\n                handleOnChange={onChange}\\n                searchFieldLabel={text('dropdownLabel', 'Search')}\\n                searchFieldPlaceholder={text(\\n                  'dropdownPlaceholder',\\n                  'Search Tags'\\n                )}\\n              />\\n            </Card>\\n          )}\\n        </div>\\n      </Box>\\n    </ThemeWrapper>\\n  )\\n}, {__STORY__, __ADDS_MAP__,__MAIN_FILE_LOCATION__,__MODULE_DEPENDENCIES__,__LOCAL_DEPENDENCIES__,__SOURCE_PREFIX__,__IDS_TO_FRAMEWORKS__});\";\n// @ts-ignore\nvar __ADDS_MAP__ = {};\n// @ts-ignore\nvar __MAIN_FILE_LOCATION__ = \"/GroupedDropdown.stories.tsx\";\n// @ts-ignore\nvar __MODULE_DEPENDENCIES__ = [];\n// @ts-ignore\nvar __LOCAL_DEPENDENCIES__ = {};\n// @ts-ignore\nvar __IDS_TO_FRAMEWORKS__ = {};\n        \n\n/* eslint-disable */\n// @ts-nocheck\n// @ts-ignore\nvar withSourceLoader = require('@storybook/source-loader/preview').withSource;\n// @ts-ignore\nvar addSourceDecorator = require(\"@storybook/source-loader/preview\").addSource;\n// @ts-ignore\nvar __SOURCE_PREFIX__ = \"/Users/farhanansari/Code/ui-library/src/components/molecules/GroupedDropdown\";\n// @ts-ignore\nvar __STORY__ = \"import React from 'react'\\nimport Box from '../../atoms/Box'\\nimport { path } from '..'\\nimport ThemeWrapper from '../../../utilities/components/ThemeWrapper'\\nimport GroupedDropdown from '.'\\nimport Data from './Data'\\nimport { action } from '@storybook/addon-actions'\\nimport Card from '../../atoms/Card'\\nimport Button from '../../atoms/Button'\\nimport { text, object, withKnobs } from '@storybook/addon-knobs'\\n\\nexport default {\\n  title: `${path}/GroupedDropdown`,\\n  decorators: [withKnobs],\\n  component: GroupedDropdown\\n}\\n\\nexport const GroupedDropdownStory = () => {\\n  const [open, setOpen] = React.useState(false)\\n  const [tag, setTag] = React.useState(false)\\n\\n  const onChange = (data: any, category: any) => {\\n    action('selected', data)\\n    handleOpen()\\n    setTag(data?.label + category?.label)\\n  }\\n  const handleOpen = () => {\\n    setOpen(!open)\\n  }\\n\\n  return (\\n    <ThemeWrapper>\\n      <Box p='1em'>\\n        <Box p='1em'>\\n          <Card style={{ display: 'inline-block' }}>Tag: {tag}</Card>\\n        </Box>\\n        <Button onClick={handleOpen} variant='button' intent='default'>\\n          Click me !\\n        </Button>\\n        <div>\\n          {open && (\\n            <Card style={{ display: 'inline-flex', padding: '0px' }}>\\n              <GroupedDropdown\\n                category={object('category', Data.category)}\\n                data={object('data', Data.data)}\\n                width={text('width', '500px')}\\n                height={text('height', '250px')}\\n                allLabel={text('allLabel', 'All')}\\n                handleOnChange={onChange}\\n                searchFieldLabel={text('dropdownLabel', 'Search')}\\n                searchFieldPlaceholder={text(\\n                  'dropdownPlaceholder',\\n                  'Search Tags'\\n                )}\\n              />\\n            </Card>\\n          )}\\n        </div>\\n      </Box>\\n    </ThemeWrapper>\\n  )\\n}\\n\";\n// @ts-ignore\nvar __ADDS_MAP__ = {};\n// @ts-ignore\nvar __MAIN_FILE_LOCATION__ = \"/GroupedDropdown.stories.tsx\";\n// @ts-ignore\nvar __MODULE_DEPENDENCIES__ = [];\n// @ts-ignore\nvar __LOCAL_DEPENDENCIES__ = {};\n// @ts-ignore\nvar __IDS_TO_FRAMEWORKS__ = {};\n        \nimport React from 'react'\nimport Box from '../../atoms/Box'\nimport { path } from '..'\nimport ThemeWrapper from '../../../utilities/components/ThemeWrapper'\nimport GroupedDropdown from '.'\nimport Data from './Data'\nimport { action } from '@storybook/addon-actions'\nimport Card from '../../atoms/Card'\nimport Button from '../../atoms/Button'\nimport { text, object, withKnobs } from '@storybook/addon-knobs'\n\nexport default {parameters: {\"storySource\":{\"source\":\"\\n\\n// @ts-nocheck\\n// @ts-ignore\\nvar withSourceLoader = require('@storybook/source-loader/preview').withSource;\\n// @ts-ignore\\nvar addSourceDecorator = require(\\\"@storybook/source-loader/preview\\\").addSource;\\n// @ts-ignore\\nvar __SOURCE_PREFIX__ = \\\"/Users/farhanansari/Code/ui-library/src/components/molecules/GroupedDropdown\\\";\\n// @ts-ignore\\nvar __STORY__ = \\\"\\\\n\\\\n// @ts-nocheck\\\\n// @ts-ignore\\\\nvar withSourceLoader = require('@storybook/source-loader/preview').withSource;\\\\n// @ts-ignore\\\\nvar addSourceDecorator = require(\\\\\\\"@storybook/source-loader/preview\\\\\\\").addSource;\\\\n// @ts-ignore\\\\nvar __SOURCE_PREFIX__ = \\\\\\\"/Users/farhanansari/Code/ui-library/src/components/molecules/GroupedDropdown\\\\\\\";\\\\n// @ts-ignore\\\\nvar __STORY__ = \\\\\\\"import React from 'react'\\\\\\\\nimport Box from '../../atoms/Box'\\\\\\\\nimport { path } from '..'\\\\\\\\nimport ThemeWrapper from '../../../utilities/components/ThemeWrapper'\\\\\\\\nimport GroupedDropdown from '.'\\\\\\\\nimport Data from './Data'\\\\\\\\nimport { action } from '@storybook/addon-actions'\\\\\\\\nimport Card from '../../atoms/Card'\\\\\\\\nimport Button from '../../atoms/Button'\\\\\\\\nimport { text, object, withKnobs } from '@storybook/addon-knobs'\\\\\\\\n\\\\\\\\nexport default {\\\\\\\\n  title: `${path}/GroupedDropdown`,\\\\\\\\n  decorators: [withKnobs],\\\\\\\\n  component: GroupedDropdown\\\\\\\\n}\\\\\\\\n\\\\\\\\nexport const GroupedDropdownStory = () => {\\\\\\\\n  const [open, setOpen] = React.useState(false)\\\\\\\\n  const [tag, setTag] = React.useState(false)\\\\\\\\n\\\\\\\\n  const onChange = (data: any, category: any) => {\\\\\\\\n    action('selected', data)\\\\\\\\n    handleOpen()\\\\\\\\n    setTag(data?.label + category?.label)\\\\\\\\n  }\\\\\\\\n  const handleOpen = () => {\\\\\\\\n    setOpen(!open)\\\\\\\\n  }\\\\\\\\n\\\\\\\\n  return (\\\\\\\\n    <ThemeWrapper>\\\\\\\\n      <Box p='1em'>\\\\\\\\n        <Box p='1em'>\\\\\\\\n          <Card style={{ display: 'inline-block' }}>Tag: {tag}</Card>\\\\\\\\n        </Box>\\\\\\\\n        <Button onClick={handleOpen} variant='button' intent='default'>\\\\\\\\n          Click me !\\\\\\\\n        </Button>\\\\\\\\n        <div>\\\\\\\\n          {open && (\\\\\\\\n            <Card style={{ display: 'inline-flex', padding: '0px' }}>\\\\\\\\n              <GroupedDropdown\\\\\\\\n                category={object('category', Data.category)}\\\\\\\\n                data={object('data', Data.data)}\\\\\\\\n                width={text('width', '500px')}\\\\\\\\n                height={text('height', '250px')}\\\\\\\\n                allLabel={text('allLabel', 'All')}\\\\\\\\n                handleOnChange={onChange}\\\\\\\\n                searchFieldLabel={text('dropdownLabel', 'Search')}\\\\\\\\n                searchFieldPlaceholder={text(\\\\\\\\n                  'dropdownPlaceholder',\\\\\\\\n                  'Search Tags'\\\\\\\\n                )}\\\\\\\\n              />\\\\\\\\n            </Card>\\\\\\\\n          )}\\\\\\\\n        </div>\\\\\\\\n      </Box>\\\\\\\\n    </ThemeWrapper>\\\\\\\\n  )\\\\\\\\n}\\\\\\\\n\\\\\\\";\\\\n// @ts-ignore\\\\nvar __ADDS_MAP__ = {};\\\\n// @ts-ignore\\\\nvar __MAIN_FILE_LOCATION__ = \\\\\\\"/GroupedDropdown.stories.tsx\\\\\\\";\\\\n// @ts-ignore\\\\nvar __MODULE_DEPENDENCIES__ = [];\\\\n// @ts-ignore\\\\nvar __LOCAL_DEPENDENCIES__ = {};\\\\n// @ts-ignore\\\\nvar __IDS_TO_FRAMEWORKS__ = {};\\\\n        \\\\nimport React from 'react'\\\\nimport Box from '../../atoms/Box'\\\\nimport { path } from '..'\\\\nimport ThemeWrapper from '../../../utilities/components/ThemeWrapper'\\\\nimport GroupedDropdown from '.'\\\\nimport Data from './Data'\\\\nimport { action } from '@storybook/addon-actions'\\\\nimport Card from '../../atoms/Card'\\\\nimport Button from '../../atoms/Button'\\\\nimport { text, object, withKnobs } from '@storybook/addon-knobs'\\\\n\\\\nexport default {parameters: {\\\\\\\"storySource\\\\\\\":{\\\\\\\"source\\\\\\\":\\\\\\\"import React from 'react'\\\\\\\\nimport Box from '../../atoms/Box'\\\\\\\\nimport { path } from '..'\\\\\\\\nimport ThemeWrapper from '../../../utilities/components/ThemeWrapper'\\\\\\\\nimport GroupedDropdown from '.'\\\\\\\\nimport Data from './Data'\\\\\\\\nimport { action } from '@storybook/addon-actions'\\\\\\\\nimport Card from '../../atoms/Card'\\\\\\\\nimport Button from '../../atoms/Button'\\\\\\\\nimport { text, object, withKnobs } from '@storybook/addon-knobs'\\\\\\\\n\\\\\\\\nexport default {\\\\\\\\n  title: `${path}/GroupedDropdown`,\\\\\\\\n  decorators: [withKnobs],\\\\\\\\n  component: GroupedDropdown\\\\\\\\n}\\\\\\\\n\\\\\\\\nexport const GroupedDropdownStory = () => {\\\\\\\\n  const [open, setOpen] = React.useState(false)\\\\\\\\n  const [tag, setTag] = React.useState(false)\\\\\\\\n\\\\\\\\n  const onChange = (data: any, category: any) => {\\\\\\\\n    action('selected', data)\\\\\\\\n    handleOpen()\\\\\\\\n    setTag(data?.label + category?.label)\\\\\\\\n  }\\\\\\\\n  const handleOpen = () => {\\\\\\\\n    setOpen(!open)\\\\\\\\n  }\\\\\\\\n\\\\\\\\n  return (\\\\\\\\n    <ThemeWrapper>\\\\\\\\n      <Box p='1em'>\\\\\\\\n        <Box p='1em'>\\\\\\\\n          <Card style={{ display: 'inline-block' }}>Tag: {tag}</Card>\\\\\\\\n        </Box>\\\\\\\\n        <Button onClick={handleOpen} variant='button' intent='default'>\\\\\\\\n          Click me !\\\\\\\\n        </Button>\\\\\\\\n        <div>\\\\\\\\n          {open && (\\\\\\\\n            <Card style={{ display: 'inline-flex', padding: '0px' }}>\\\\\\\\n              <GroupedDropdown\\\\\\\\n                category={object('category', Data.category)}\\\\\\\\n                data={object('data', Data.data)}\\\\\\\\n                width={text('width', '500px')}\\\\\\\\n                height={text('height', '250px')}\\\\\\\\n                allLabel={text('allLabel', 'All')}\\\\\\\\n                handleOnChange={onChange}\\\\\\\\n                searchFieldLabel={text('dropdownLabel', 'Search')}\\\\\\\\n                searchFieldPlaceholder={text(\\\\\\\\n                  'dropdownPlaceholder',\\\\\\\\n                  'Search Tags'\\\\\\\\n                )}\\\\\\\\n              />\\\\\\\\n            </Card>\\\\\\\\n          )}\\\\\\\\n        </div>\\\\\\\\n      </Box>\\\\\\\\n    </ThemeWrapper>\\\\\\\\n  )\\\\\\\\n}\\\\\\\\n\\\\\\\",\\\\\\\"locationsMap\\\\\\\":{}},},\\\\n  title: `${path}/GroupedDropdown`,\\\\n  decorators: [withKnobs],\\\\n  component: GroupedDropdown\\\\n}\\\\n\\\\nexport const GroupedDropdownStory = addSourceDecorator(() => {\\\\n  const [open, setOpen] = React.useState(false)\\\\n  const [tag, setTag] = React.useState(false)\\\\n\\\\n  const onChange = (data: any, category: any) => {\\\\n    action('selected', data)\\\\n    handleOpen()\\\\n    setTag(data?.label + category?.label)\\\\n  }\\\\n  const handleOpen = () => {\\\\n    setOpen(!open)\\\\n  }\\\\n\\\\n  return (\\\\n    <ThemeWrapper>\\\\n      <Box p='1em'>\\\\n        <Box p='1em'>\\\\n          <Card style={{ display: 'inline-block' }}>Tag: {tag}</Card>\\\\n        </Box>\\\\n        <Button onClick={handleOpen} variant='button' intent='default'>\\\\n          Click me !\\\\n        </Button>\\\\n        <div>\\\\n          {open && (\\\\n            <Card style={{ display: 'inline-flex', padding: '0px' }}>\\\\n              <GroupedDropdown\\\\n                category={object('category', Data.category)}\\\\n                data={object('data', Data.data)}\\\\n                width={text('width', '500px')}\\\\n                height={text('height', '250px')}\\\\n                allLabel={text('allLabel', 'All')}\\\\n                handleOnChange={onChange}\\\\n                searchFieldLabel={text('dropdownLabel', 'Search')}\\\\n                searchFieldPlaceholder={text(\\\\n                  'dropdownPlaceholder',\\\\n                  'Search Tags'\\\\n                )}\\\\n              />\\\\n            </Card>\\\\n          )}\\\\n        </div>\\\\n      </Box>\\\\n    </ThemeWrapper>\\\\n  )\\\\n}, {__STORY__, __ADDS_MAP__,__MAIN_FILE_LOCATION__,__MODULE_DEPENDENCIES__,__LOCAL_DEPENDENCIES__,__SOURCE_PREFIX__,__IDS_TO_FRAMEWORKS__});\\\";\\n// @ts-ignore\\nvar __ADDS_MAP__ = {};\\n// @ts-ignore\\nvar __MAIN_FILE_LOCATION__ = \\\"/GroupedDropdown.stories.tsx\\\";\\n// @ts-ignore\\nvar __MODULE_DEPENDENCIES__ = [];\\n// @ts-ignore\\nvar __LOCAL_DEPENDENCIES__ = {};\\n// @ts-ignore\\nvar __IDS_TO_FRAMEWORKS__ = {};\\n        \\n\\n\\n// @ts-nocheck\\n// @ts-ignore\\nvar withSourceLoader = require('@storybook/source-loader/preview').withSource;\\n// @ts-ignore\\nvar addSourceDecorator = require(\\\"@storybook/source-loader/preview\\\").addSource;\\n// @ts-ignore\\nvar __SOURCE_PREFIX__ = \\\"/Users/farhanansari/Code/ui-library/src/components/molecules/GroupedDropdown\\\";\\n// @ts-ignore\\nvar __STORY__ = \\\"import React from 'react'\\\\nimport Box from '../../atoms/Box'\\\\nimport { path } from '..'\\\\nimport ThemeWrapper from '../../../utilities/components/ThemeWrapper'\\\\nimport GroupedDropdown from '.'\\\\nimport Data from './Data'\\\\nimport { action } from '@storybook/addon-actions'\\\\nimport Card from '../../atoms/Card'\\\\nimport Button from '../../atoms/Button'\\\\nimport { text, object, withKnobs } from '@storybook/addon-knobs'\\\\n\\\\nexport default {\\\\n  title: `${path}/GroupedDropdown`,\\\\n  decorators: [withKnobs],\\\\n  component: GroupedDropdown\\\\n}\\\\n\\\\nexport const GroupedDropdownStory = () => {\\\\n  const [open, setOpen] = React.useState(false)\\\\n  const [tag, setTag] = React.useState(false)\\\\n\\\\n  const onChange = (data: any, category: any) => {\\\\n    action('selected', data)\\\\n    handleOpen()\\\\n    setTag(data?.label + category?.label)\\\\n  }\\\\n  const handleOpen = () => {\\\\n    setOpen(!open)\\\\n  }\\\\n\\\\n  return (\\\\n    <ThemeWrapper>\\\\n      <Box p='1em'>\\\\n        <Box p='1em'>\\\\n          <Card style={{ display: 'inline-block' }}>Tag: {tag}</Card>\\\\n        </Box>\\\\n        <Button onClick={handleOpen} variant='button' intent='default'>\\\\n          Click me !\\\\n        </Button>\\\\n        <div>\\\\n          {open && (\\\\n            <Card style={{ display: 'inline-flex', padding: '0px' }}>\\\\n              <GroupedDropdown\\\\n                category={object('category', Data.category)}\\\\n                data={object('data', Data.data)}\\\\n                width={text('width', '500px')}\\\\n                height={text('height', '250px')}\\\\n                allLabel={text('allLabel', 'All')}\\\\n                handleOnChange={onChange}\\\\n                searchFieldLabel={text('dropdownLabel', 'Search')}\\\\n                searchFieldPlaceholder={text(\\\\n                  'dropdownPlaceholder',\\\\n                  'Search Tags'\\\\n                )}\\\\n              />\\\\n            </Card>\\\\n          )}\\\\n        </div>\\\\n      </Box>\\\\n    </ThemeWrapper>\\\\n  )\\\\n}\\\\n\\\";\\n// @ts-ignore\\nvar __ADDS_MAP__ = {};\\n// @ts-ignore\\nvar __MAIN_FILE_LOCATION__ = \\\"/GroupedDropdown.stories.tsx\\\";\\n// @ts-ignore\\nvar __MODULE_DEPENDENCIES__ = [];\\n// @ts-ignore\\nvar __LOCAL_DEPENDENCIES__ = {};\\n// @ts-ignore\\nvar __IDS_TO_FRAMEWORKS__ = {};\\n        \\nimport React from 'react'\\nimport Box from '../../atoms/Box'\\nimport { path } from '..'\\nimport ThemeWrapper from '../../../utilities/components/ThemeWrapper'\\nimport GroupedDropdown from '.'\\nimport Data from './Data'\\nimport { action } from '@storybook/addon-actions'\\nimport Card from '../../atoms/Card'\\nimport Button from '../../atoms/Button'\\nimport { text, object, withKnobs } from '@storybook/addon-knobs'\\n\\nexport default {parameters: {\\\"storySource\\\":{\\\"source\\\":\\\"\\\\n\\\\n// @ts-nocheck\\\\n// @ts-ignore\\\\nvar withSourceLoader = require('@storybook/source-loader/preview').withSource;\\\\n// @ts-ignore\\\\nvar addSourceDecorator = require(\\\\\\\"@storybook/source-loader/preview\\\\\\\").addSource;\\\\n// @ts-ignore\\\\nvar __SOURCE_PREFIX__ = \\\\\\\"/Users/farhanansari/Code/ui-library/src/components/molecules/GroupedDropdown\\\\\\\";\\\\n// @ts-ignore\\\\nvar __STORY__ = \\\\\\\"import React from 'react'\\\\\\\\nimport Box from '../../atoms/Box'\\\\\\\\nimport { path } from '..'\\\\\\\\nimport ThemeWrapper from '../../../utilities/components/ThemeWrapper'\\\\\\\\nimport GroupedDropdown from '.'\\\\\\\\nimport Data from './Data'\\\\\\\\nimport { action } from '@storybook/addon-actions'\\\\\\\\nimport Card from '../../atoms/Card'\\\\\\\\nimport Button from '../../atoms/Button'\\\\\\\\nimport { text, object, withKnobs } from '@storybook/addon-knobs'\\\\\\\\n\\\\\\\\nexport default {\\\\\\\\n  title: `${path}/GroupedDropdown`,\\\\\\\\n  decorators: [withKnobs],\\\\\\\\n  component: GroupedDropdown\\\\\\\\n}\\\\\\\\n\\\\\\\\nexport const GroupedDropdownStory = () => {\\\\\\\\n  const [open, setOpen] = React.useState(false)\\\\\\\\n  const [tag, setTag] = React.useState(false)\\\\\\\\n\\\\\\\\n  const onChange = (data: any, category: any) => {\\\\\\\\n    action('selected', data)\\\\\\\\n    handleOpen()\\\\\\\\n    setTag(data?.label + category?.label)\\\\\\\\n  }\\\\\\\\n  const handleOpen = () => {\\\\\\\\n    setOpen(!open)\\\\\\\\n  }\\\\\\\\n\\\\\\\\n  return (\\\\\\\\n    <ThemeWrapper>\\\\\\\\n      <Box p='1em'>\\\\\\\\n        <Box p='1em'>\\\\\\\\n          <Card style={{ display: 'inline-block' }}>Tag: {tag}</Card>\\\\\\\\n        </Box>\\\\\\\\n        <Button onClick={handleOpen} variant='button' intent='default'>\\\\\\\\n          Click me !\\\\\\\\n        </Button>\\\\\\\\n        <div>\\\\\\\\n          {open && (\\\\\\\\n            <Card style={{ display: 'inline-flex', padding: '0px' }}>\\\\\\\\n              <GroupedDropdown\\\\\\\\n                category={object('category', Data.category)}\\\\\\\\n                data={object('data', Data.data)}\\\\\\\\n                width={text('width', '500px')}\\\\\\\\n                height={text('height', '250px')}\\\\\\\\n                allLabel={text('allLabel', 'All')}\\\\\\\\n                handleOnChange={onChange}\\\\\\\\n                searchFieldLabel={text('dropdownLabel', 'Search')}\\\\\\\\n                searchFieldPlaceholder={text(\\\\\\\\n                  'dropdownPlaceholder',\\\\\\\\n                  'Search Tags'\\\\\\\\n                )}\\\\\\\\n              />\\\\\\\\n            </Card>\\\\\\\\n          )}\\\\\\\\n        </div>\\\\\\\\n      </Box>\\\\\\\\n    </ThemeWrapper>\\\\\\\\n  )\\\\\\\\n}\\\\\\\\n\\\\\\\";\\\\n// @ts-ignore\\\\nvar __ADDS_MAP__ = {};\\\\n// @ts-ignore\\\\nvar __MAIN_FILE_LOCATION__ = \\\\\\\"/GroupedDropdown.stories.tsx\\\\\\\";\\\\n// @ts-ignore\\\\nvar __MODULE_DEPENDENCIES__ = [];\\\\n// @ts-ignore\\\\nvar __LOCAL_DEPENDENCIES__ = {};\\\\n// @ts-ignore\\\\nvar __IDS_TO_FRAMEWORKS__ = {};\\\\n        \\\\nimport React from 'react'\\\\nimport Box from '../../atoms/Box'\\\\nimport { path } from '..'\\\\nimport ThemeWrapper from '../../../utilities/components/ThemeWrapper'\\\\nimport GroupedDropdown from '.'\\\\nimport Data from './Data'\\\\nimport { action } from '@storybook/addon-actions'\\\\nimport Card from '../../atoms/Card'\\\\nimport Button from '../../atoms/Button'\\\\nimport { text, object, withKnobs } from '@storybook/addon-knobs'\\\\n\\\\nexport default {parameters: {\\\\\\\"storySource\\\\\\\":{\\\\\\\"source\\\\\\\":\\\\\\\"import React from 'react'\\\\\\\\nimport Box from '../../atoms/Box'\\\\\\\\nimport { path } from '..'\\\\\\\\nimport ThemeWrapper from '../../../utilities/components/ThemeWrapper'\\\\\\\\nimport GroupedDropdown from '.'\\\\\\\\nimport Data from './Data'\\\\\\\\nimport { action } from '@storybook/addon-actions'\\\\\\\\nimport Card from '../../atoms/Card'\\\\\\\\nimport Button from '../../atoms/Button'\\\\\\\\nimport { text, object, withKnobs } from '@storybook/addon-knobs'\\\\\\\\n\\\\\\\\nexport default {\\\\\\\\n  title: `${path}/GroupedDropdown`,\\\\\\\\n  decorators: [withKnobs],\\\\\\\\n  component: GroupedDropdown\\\\\\\\n}\\\\\\\\n\\\\\\\\nexport const GroupedDropdownStory = () => {\\\\\\\\n  const [open, setOpen] = React.useState(false)\\\\\\\\n  const [tag, setTag] = React.useState(false)\\\\\\\\n\\\\\\\\n  const onChange = (data: any, category: any) => {\\\\\\\\n    action('selected', data)\\\\\\\\n    handleOpen()\\\\\\\\n    setTag(data?.label + category?.label)\\\\\\\\n  }\\\\\\\\n  const handleOpen = () => {\\\\\\\\n    setOpen(!open)\\\\\\\\n  }\\\\\\\\n\\\\\\\\n  return (\\\\\\\\n    <ThemeWrapper>\\\\\\\\n      <Box p='1em'>\\\\\\\\n        <Box p='1em'>\\\\\\\\n          <Card style={{ display: 'inline-block' }}>Tag: {tag}</Card>\\\\\\\\n        </Box>\\\\\\\\n        <Button onClick={handleOpen} variant='button' intent='default'>\\\\\\\\n          Click me !\\\\\\\\n        </Button>\\\\\\\\n        <div>\\\\\\\\n          {open && (\\\\\\\\n            <Card style={{ display: 'inline-flex', padding: '0px' }}>\\\\\\\\n              <GroupedDropdown\\\\\\\\n                category={object('category', Data.category)}\\\\\\\\n                data={object('data', Data.data)}\\\\\\\\n                width={text('width', '500px')}\\\\\\\\n                height={text('height', '250px')}\\\\\\\\n                allLabel={text('allLabel', 'All')}\\\\\\\\n                handleOnChange={onChange}\\\\\\\\n                searchFieldLabel={text('dropdownLabel', 'Search')}\\\\\\\\n                searchFieldPlaceholder={text(\\\\\\\\n                  'dropdownPlaceholder',\\\\\\\\n                  'Search Tags'\\\\\\\\n                )}\\\\\\\\n              />\\\\\\\\n            </Card>\\\\\\\\n          )}\\\\\\\\n        </div>\\\\\\\\n      </Box>\\\\\\\\n    </ThemeWrapper>\\\\\\\\n  )\\\\\\\\n}\\\\\\\\n\\\\\\\",\\\\\\\"locationsMap\\\\\\\":{}},},\\\\n  title: `${path}/GroupedDropdown`,\\\\n  decorators: [withKnobs],\\\\n  component: GroupedDropdown\\\\n}\\\\n\\\\nexport const GroupedDropdownStory = addSourceDecorator(() => {\\\\n  const [open, setOpen] = React.useState(false)\\\\n  const [tag, setTag] = React.useState(false)\\\\n\\\\n  const onChange = (data: any, category: any) => {\\\\n    action('selected', data)\\\\n    handleOpen()\\\\n    setTag(data?.label + category?.label)\\\\n  }\\\\n  const handleOpen = () => {\\\\n    setOpen(!open)\\\\n  }\\\\n\\\\n  return (\\\\n    <ThemeWrapper>\\\\n      <Box p='1em'>\\\\n        <Box p='1em'>\\\\n          <Card style={{ display: 'inline-block' }}>Tag: {tag}</Card>\\\\n        </Box>\\\\n        <Button onClick={handleOpen} variant='button' intent='default'>\\\\n          Click me !\\\\n        </Button>\\\\n        <div>\\\\n          {open && (\\\\n            <Card style={{ display: 'inline-flex', padding: '0px' }}>\\\\n              <GroupedDropdown\\\\n                category={object('category', Data.category)}\\\\n                data={object('data', Data.data)}\\\\n                width={text('width', '500px')}\\\\n                height={text('height', '250px')}\\\\n                allLabel={text('allLabel', 'All')}\\\\n                handleOnChange={onChange}\\\\n                searchFieldLabel={text('dropdownLabel', 'Search')}\\\\n                searchFieldPlaceholder={text(\\\\n                  'dropdownPlaceholder',\\\\n                  'Search Tags'\\\\n                )}\\\\n              />\\\\n            </Card>\\\\n          )}\\\\n        </div>\\\\n      </Box>\\\\n    </ThemeWrapper>\\\\n  )\\\\n}, {__STORY__, __ADDS_MAP__,__MAIN_FILE_LOCATION__,__MODULE_DEPENDENCIES__,__LOCAL_DEPENDENCIES__,__SOURCE_PREFIX__,__IDS_TO_FRAMEWORKS__});\\\",\\\"locationsMap\\\":{}},\\\"storySource\\\":{\\\"source\\\":\\\"import React from 'react'\\\\nimport Box from '../../atoms/Box'\\\\nimport { path } from '..'\\\\nimport ThemeWrapper from '../../../utilities/components/ThemeWrapper'\\\\nimport GroupedDropdown from '.'\\\\nimport Data from './Data'\\\\nimport { action } from '@storybook/addon-actions'\\\\nimport Card from '../../atoms/Card'\\\\nimport Button from '../../atoms/Button'\\\\nimport { text, object, withKnobs } from '@storybook/addon-knobs'\\\\n\\\\nexport default {\\\\n  title: `${path}/GroupedDropdown`,\\\\n  decorators: [withKnobs],\\\\n  component: GroupedDropdown\\\\n}\\\\n\\\\nexport const GroupedDropdownStory = () => {\\\\n  const [open, setOpen] = React.useState(false)\\\\n  const [tag, setTag] = React.useState(false)\\\\n\\\\n  const onChange = (data: any, category: any) => {\\\\n    action('selected', data)\\\\n    handleOpen()\\\\n    setTag(data?.label + category?.label)\\\\n  }\\\\n  const handleOpen = () => {\\\\n    setOpen(!open)\\\\n  }\\\\n\\\\n  return (\\\\n    <ThemeWrapper>\\\\n      <Box p='1em'>\\\\n        <Box p='1em'>\\\\n          <Card style={{ display: 'inline-block' }}>Tag: {tag}</Card>\\\\n        </Box>\\\\n        <Button onClick={handleOpen} variant='button' intent='default'>\\\\n          Click me !\\\\n        </Button>\\\\n        <div>\\\\n          {open && (\\\\n            <Card style={{ display: 'inline-flex', padding: '0px' }}>\\\\n              <GroupedDropdown\\\\n                category={object('category', Data.category)}\\\\n                data={object('data', Data.data)}\\\\n                width={text('width', '500px')}\\\\n                height={text('height', '250px')}\\\\n                allLabel={text('allLabel', 'All')}\\\\n                handleOnChange={onChange}\\\\n                searchFieldLabel={text('dropdownLabel', 'Search')}\\\\n                searchFieldPlaceholder={text(\\\\n                  'dropdownPlaceholder',\\\\n                  'Search Tags'\\\\n                )}\\\\n              />\\\\n            </Card>\\\\n          )}\\\\n        </div>\\\\n      </Box>\\\\n    </ThemeWrapper>\\\\n  )\\\\n}\\\\n\\\",\\\"locationsMap\\\":{}},},\\n  title: `${path}/GroupedDropdown`,\\n  decorators: [withKnobs],\\n  component: GroupedDropdown\\n}\\n\\nexport const GroupedDropdownStory = addSourceDecorator(addSourceDecorator(() => {\\n  const [open, setOpen] = React.useState(false)\\n  const [tag, setTag] = React.useState(false)\\n\\n  const onChange = (data: any, category: any) => {\\n    action('selected', data)\\n    handleOpen()\\n    setTag(data?.label + category?.label)\\n  }\\n  const handleOpen = () => {\\n    setOpen(!open)\\n  }\\n\\n  return (\\n    <ThemeWrapper>\\n      <Box p='1em'>\\n        <Box p='1em'>\\n          <Card style={{ display: 'inline-block' }}>Tag: {tag}</Card>\\n        </Box>\\n        <Button onClick={handleOpen} variant='button' intent='default'>\\n          Click me !\\n        </Button>\\n        <div>\\n          {open && (\\n            <Card style={{ display: 'inline-flex', padding: '0px' }}>\\n              <GroupedDropdown\\n                category={object('category', Data.category)}\\n                data={object('data', Data.data)}\\n                width={text('width', '500px')}\\n                height={text('height', '250px')}\\n                allLabel={text('allLabel', 'All')}\\n                handleOnChange={onChange}\\n                searchFieldLabel={text('dropdownLabel', 'Search')}\\n                searchFieldPlaceholder={text(\\n                  'dropdownPlaceholder',\\n                  'Search Tags'\\n                )}\\n              />\\n            </Card>\\n          )}\\n        </div>\\n      </Box>\\n    </ThemeWrapper>\\n  )\\n}, {__STORY__, __ADDS_MAP__,__MAIN_FILE_LOCATION__,__MODULE_DEPENDENCIES__,__LOCAL_DEPENDENCIES__,__SOURCE_PREFIX__,__IDS_TO_FRAMEWORKS__}), {__STORY__, __ADDS_MAP__,__MAIN_FILE_LOCATION__,__MODULE_DEPENDENCIES__,__LOCAL_DEPENDENCIES__,__SOURCE_PREFIX__,__IDS_TO_FRAMEWORKS__});\",\"locationsMap\":{}},\"storySource\":{\"source\":\"\\n\\n// @ts-nocheck\\n// @ts-ignore\\nvar withSourceLoader = require('@storybook/source-loader/preview').withSource;\\n// @ts-ignore\\nvar addSourceDecorator = require(\\\"@storybook/source-loader/preview\\\").addSource;\\n// @ts-ignore\\nvar __SOURCE_PREFIX__ = \\\"/Users/farhanansari/Code/ui-library/src/components/molecules/GroupedDropdown\\\";\\n// @ts-ignore\\nvar __STORY__ = \\\"import React from 'react'\\\\nimport Box from '../../atoms/Box'\\\\nimport { path } from '..'\\\\nimport ThemeWrapper from '../../../utilities/components/ThemeWrapper'\\\\nimport GroupedDropdown from '.'\\\\nimport Data from './Data'\\\\nimport { action } from '@storybook/addon-actions'\\\\nimport Card from '../../atoms/Card'\\\\nimport Button from '../../atoms/Button'\\\\nimport { text, object, withKnobs } from '@storybook/addon-knobs'\\\\n\\\\nexport default {\\\\n  title: `${path}/GroupedDropdown`,\\\\n  decorators: [withKnobs],\\\\n  component: GroupedDropdown\\\\n}\\\\n\\\\nexport const GroupedDropdownStory = () => {\\\\n  const [open, setOpen] = React.useState(false)\\\\n  const [tag, setTag] = React.useState(false)\\\\n\\\\n  const onChange = (data: any, category: any) => {\\\\n    action('selected', data)\\\\n    handleOpen()\\\\n    setTag(data?.label + category?.label)\\\\n  }\\\\n  const handleOpen = () => {\\\\n    setOpen(!open)\\\\n  }\\\\n\\\\n  return (\\\\n    <ThemeWrapper>\\\\n      <Box p='1em'>\\\\n        <Box p='1em'>\\\\n          <Card style={{ display: 'inline-block' }}>Tag: {tag}</Card>\\\\n        </Box>\\\\n        <Button onClick={handleOpen} variant='button' intent='default'>\\\\n          Click me !\\\\n        </Button>\\\\n        <div>\\\\n          {open && (\\\\n            <Card style={{ display: 'inline-flex', padding: '0px' }}>\\\\n              <GroupedDropdown\\\\n                category={object('category', Data.category)}\\\\n                data={object('data', Data.data)}\\\\n                width={text('width', '500px')}\\\\n                height={text('height', '250px')}\\\\n                allLabel={text('allLabel', 'All')}\\\\n                handleOnChange={onChange}\\\\n                searchFieldLabel={text('dropdownLabel', 'Search')}\\\\n                searchFieldPlaceholder={text(\\\\n                  'dropdownPlaceholder',\\\\n                  'Search Tags'\\\\n                )}\\\\n              />\\\\n            </Card>\\\\n          )}\\\\n        </div>\\\\n      </Box>\\\\n    </ThemeWrapper>\\\\n  )\\\\n}\\\\n\\\";\\n// @ts-ignore\\nvar __ADDS_MAP__ = {};\\n// @ts-ignore\\nvar __MAIN_FILE_LOCATION__ = \\\"/GroupedDropdown.stories.tsx\\\";\\n// @ts-ignore\\nvar __MODULE_DEPENDENCIES__ = [];\\n// @ts-ignore\\nvar __LOCAL_DEPENDENCIES__ = {};\\n// @ts-ignore\\nvar __IDS_TO_FRAMEWORKS__ = {};\\n        \\nimport React from 'react'\\nimport Box from '../../atoms/Box'\\nimport { path } from '..'\\nimport ThemeWrapper from '../../../utilities/components/ThemeWrapper'\\nimport GroupedDropdown from '.'\\nimport Data from './Data'\\nimport { action } from '@storybook/addon-actions'\\nimport Card from '../../atoms/Card'\\nimport Button from '../../atoms/Button'\\nimport { text, object, withKnobs } from '@storybook/addon-knobs'\\n\\nexport default {parameters: {\\\"storySource\\\":{\\\"source\\\":\\\"import React from 'react'\\\\nimport Box from '../../atoms/Box'\\\\nimport { path } from '..'\\\\nimport ThemeWrapper from '../../../utilities/components/ThemeWrapper'\\\\nimport GroupedDropdown from '.'\\\\nimport Data from './Data'\\\\nimport { action } from '@storybook/addon-actions'\\\\nimport Card from '../../atoms/Card'\\\\nimport Button from '../../atoms/Button'\\\\nimport { text, object, withKnobs } from '@storybook/addon-knobs'\\\\n\\\\nexport default {\\\\n  title: `${path}/GroupedDropdown`,\\\\n  decorators: [withKnobs],\\\\n  component: GroupedDropdown\\\\n}\\\\n\\\\nexport const GroupedDropdownStory = () => {\\\\n  const [open, setOpen] = React.useState(false)\\\\n  const [tag, setTag] = React.useState(false)\\\\n\\\\n  const onChange = (data: any, category: any) => {\\\\n    action('selected', data)\\\\n    handleOpen()\\\\n    setTag(data?.label + category?.label)\\\\n  }\\\\n  const handleOpen = () => {\\\\n    setOpen(!open)\\\\n  }\\\\n\\\\n  return (\\\\n    <ThemeWrapper>\\\\n      <Box p='1em'>\\\\n        <Box p='1em'>\\\\n          <Card style={{ display: 'inline-block' }}>Tag: {tag}</Card>\\\\n        </Box>\\\\n        <Button onClick={handleOpen} variant='button' intent='default'>\\\\n          Click me !\\\\n        </Button>\\\\n        <div>\\\\n          {open && (\\\\n            <Card style={{ display: 'inline-flex', padding: '0px' }}>\\\\n              <GroupedDropdown\\\\n                category={object('category', Data.category)}\\\\n                data={object('data', Data.data)}\\\\n                width={text('width', '500px')}\\\\n                height={text('height', '250px')}\\\\n                allLabel={text('allLabel', 'All')}\\\\n                handleOnChange={onChange}\\\\n                searchFieldLabel={text('dropdownLabel', 'Search')}\\\\n                searchFieldPlaceholder={text(\\\\n                  'dropdownPlaceholder',\\\\n                  'Search Tags'\\\\n                )}\\\\n              />\\\\n            </Card>\\\\n          )}\\\\n        </div>\\\\n      </Box>\\\\n    </ThemeWrapper>\\\\n  )\\\\n}\\\\n\\\",\\\"locationsMap\\\":{}},},\\n  title: `${path}/GroupedDropdown`,\\n  decorators: [withKnobs],\\n  component: GroupedDropdown\\n}\\n\\nexport const GroupedDropdownStory = addSourceDecorator(() => {\\n  const [open, setOpen] = React.useState(false)\\n  const [tag, setTag] = React.useState(false)\\n\\n  const onChange = (data: any, category: any) => {\\n    action('selected', data)\\n    handleOpen()\\n    setTag(data?.label + category?.label)\\n  }\\n  const handleOpen = () => {\\n    setOpen(!open)\\n  }\\n\\n  return (\\n    <ThemeWrapper>\\n      <Box p='1em'>\\n        <Box p='1em'>\\n          <Card style={{ display: 'inline-block' }}>Tag: {tag}</Card>\\n        </Box>\\n        <Button onClick={handleOpen} variant='button' intent='default'>\\n          Click me !\\n        </Button>\\n        <div>\\n          {open && (\\n            <Card style={{ display: 'inline-flex', padding: '0px' }}>\\n              <GroupedDropdown\\n                category={object('category', Data.category)}\\n                data={object('data', Data.data)}\\n                width={text('width', '500px')}\\n                height={text('height', '250px')}\\n                allLabel={text('allLabel', 'All')}\\n                handleOnChange={onChange}\\n                searchFieldLabel={text('dropdownLabel', 'Search')}\\n                searchFieldPlaceholder={text(\\n                  'dropdownPlaceholder',\\n                  'Search Tags'\\n                )}\\n              />\\n            </Card>\\n          )}\\n        </div>\\n      </Box>\\n    </ThemeWrapper>\\n  )\\n}, {__STORY__, __ADDS_MAP__,__MAIN_FILE_LOCATION__,__MODULE_DEPENDENCIES__,__LOCAL_DEPENDENCIES__,__SOURCE_PREFIX__,__IDS_TO_FRAMEWORKS__});\",\"locationsMap\":{}},\"storySource\":{\"source\":\"import React from 'react'\\nimport Box from '../../atoms/Box'\\nimport { path } from '..'\\nimport ThemeWrapper from '../../../utilities/components/ThemeWrapper'\\nimport GroupedDropdown from '.'\\nimport Data from './Data'\\nimport { action } from '@storybook/addon-actions'\\nimport Card from '../../atoms/Card'\\nimport Button from '../../atoms/Button'\\nimport { text, object, withKnobs } from '@storybook/addon-knobs'\\n\\nexport default {\\n  title: `${path}/GroupedDropdown`,\\n  decorators: [withKnobs],\\n  component: GroupedDropdown\\n}\\n\\nexport const GroupedDropdownStory = () => {\\n  const [open, setOpen] = React.useState(false)\\n  const [tag, setTag] = React.useState(false)\\n\\n  const onChange = (data: any, category: any) => {\\n    action('selected', data)\\n    handleOpen()\\n    setTag(data?.label + category?.label)\\n  }\\n  const handleOpen = () => {\\n    setOpen(!open)\\n  }\\n\\n  return (\\n    <ThemeWrapper>\\n      <Box p='1em'>\\n        <Box p='1em'>\\n          <Card style={{ display: 'inline-block' }}>Tag: {tag}</Card>\\n        </Box>\\n        <Button onClick={handleOpen} variant='button' intent='default'>\\n          Click me !\\n        </Button>\\n        <div>\\n          {open && (\\n            <Card style={{ display: 'inline-flex', padding: '0px' }}>\\n              <GroupedDropdown\\n                category={object('category', Data.category)}\\n                data={object('data', Data.data)}\\n                width={text('width', '500px')}\\n                height={text('height', '250px')}\\n                allLabel={text('allLabel', 'All')}\\n                handleOnChange={onChange}\\n                searchFieldLabel={text('dropdownLabel', 'Search')}\\n                searchFieldPlaceholder={text(\\n                  'dropdownPlaceholder',\\n                  'Search Tags'\\n                )}\\n              />\\n            </Card>\\n          )}\\n        </div>\\n      </Box>\\n    </ThemeWrapper>\\n  )\\n}\\n\",\"locationsMap\":{}},},\n  title: `${path}/GroupedDropdown`,\n  decorators: [withKnobs],\n  component: GroupedDropdown\n}\n\nexport const GroupedDropdownStory = addSourceDecorator(addSourceDecorator(addSourceDecorator(() => {\n  const [open, setOpen] = React.useState(false)\n  const [tag, setTag] = React.useState(false)\n\n  const onChange = (data: any, category: any) => {\n    action('selected', data)\n    handleOpen()\n    setTag(data?.label + category?.label)\n  }\n  const handleOpen = () => {\n    setOpen(!open)\n  }\n\n  return (\n    <ThemeWrapper>\n      <Box p='1em'>\n        <Box p='1em'>\n          <Card style={{ display: 'inline-block' }}>Tag: {tag}</Card>\n        </Box>\n        <Button onClick={handleOpen} variant='button' intent='default'>\n          Click me !\n        </Button>\n        <div>\n          {open && (\n            <Card style={{ display: 'inline-flex', padding: '0px' }}>\n              <GroupedDropdown\n                category={object('category', Data.category)}\n                data={object('data', Data.data)}\n                width={text('width', '500px')}\n                height={text('height', '250px')}\n                allLabel={text('allLabel', 'All')}\n                handleOnChange={onChange}\n                searchFieldLabel={text('dropdownLabel', 'Search')}\n                searchFieldPlaceholder={text(\n                  'dropdownPlaceholder',\n                  'Search Tags'\n                )}\n              />\n            </Card>\n          )}\n        </div>\n      </Box>\n    </ThemeWrapper>\n  )\n}, {__STORY__, __ADDS_MAP__,__MAIN_FILE_LOCATION__,__MODULE_DEPENDENCIES__,__LOCAL_DEPENDENCIES__,__SOURCE_PREFIX__,__IDS_TO_FRAMEWORKS__}), {__STORY__, __ADDS_MAP__,__MAIN_FILE_LOCATION__,__MODULE_DEPENDENCIES__,__LOCAL_DEPENDENCIES__,__SOURCE_PREFIX__,__IDS_TO_FRAMEWORKS__}), {__STORY__, __ADDS_MAP__,__MAIN_FILE_LOCATION__,__MODULE_DEPENDENCIES__,__LOCAL_DEPENDENCIES__,__SOURCE_PREFIX__,__IDS_TO_FRAMEWORKS__});"],"sourceRoot":""},"metadata":{},"sourceType":"module"}