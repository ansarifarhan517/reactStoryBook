{"ast":null,"code":"import _objectWithoutProperties from \"/Users/farhanansari/Code/ui-library/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/objectWithoutProperties\";\nimport _objectSpread from \"/Users/farhanansari/Code/ui-library/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/objectSpread2\";\nimport _slicedToArray from \"/Users/farhanansari/Code/ui-library/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/slicedToArray\";\n\nvar _this = this,\n    _jsxFileName = \"/Users/farhanansari/Code/ui-library/src/components/atoms/SettingBox/Type/DependentOption.tsx\";\n\nimport React, { useState, Fragment } from 'react';\nimport { StyledSettingOption, StyledImage } from '../StyledSettingBox';\nimport Radio from '../../../atoms/Radio';\nimport RadioGroup from '../../RadioGroup';\nimport { RadioLabel } from '../../Radio/Radio.styled';\n\nvar DependentOption = function DependentOption(_ref) {\n  var _parentRadioSelection2;\n\n  var settingOption = _ref.settingOption,\n      onChange = _ref.onChange,\n      settingConfig = _ref.settingConfig;\n\n  var _useState = useState(settingOption),\n      _useState2 = _slicedToArray(_useState, 2),\n      settings = _useState2[0],\n      setSettings = _useState2[1];\n\n  var _useState3 = useState(settings.option.find(function (selectedOption) {\n    return selectedOption.selected;\n  })),\n      _useState4 = _slicedToArray(_useState3, 2),\n      parentRadioSelection = _useState4[0],\n      setParentRadioSelection = _useState4[1]; // for hatmap and marker- map mode , if both the values  dont have permission,dont show section or else show whatever have permission\n\n\n  var _settings$permission = settings.permission,\n      permission = _settings$permission === void 0 ? true : _settings$permission;\n\n  var handleParentChange = function handleParentChange(entry) {\n    // set the selected parent option so that we can choose child option on the basis of that\n    setParentRadioSelection(entry); // once we change the parent we have to change whole data and send to parent settingbody\n    // update parent radio selection in object\n\n    var newOption = settings.option.map(function (option) {\n      option.selected = option.name === entry.name;\n      return option;\n    });\n\n    var ParentOption = _objectSpread(_objectSpread({}, settings), {}, {\n      option: newOption\n    });\n\n    setSettings(ParentOption); // new option group will be updated in setting config to pass it to map\n\n    var newSetting = settingConfig.map(function (option) {\n      return option.title === ParentOption.title ? ParentOption : option;\n    }); // updated data config will be sent to body to send it to map component\n\n    onChange(newSetting);\n  };\n\n  var handleChildChange = function handleChildChange(subOptions) {\n    var _parentRadioSelection;\n\n    var newSubOption = parentRadioSelection === null || parentRadioSelection === void 0 ? void 0 : (_parentRadioSelection = parentRadioSelection.subOptions) === null || _parentRadioSelection === void 0 ? void 0 : _parentRadioSelection.map(function (option) {\n      option.selected = option.name === subOptions.name;\n      return option;\n    }); // child selection updating\n\n    var newOption = _objectSpread(_objectSpread({}, parentRadioSelection), {}, {\n      subOptions: newSubOption,\n      selected: true\n    }); // parent selection updating with child\n\n\n    var newSettingOption = settings.option.map(function (option) {\n      return option.name === (parentRadioSelection === null || parentRadioSelection === void 0 ? void 0 : parentRadioSelection.name) ? newOption : option;\n    }); // whole dependent varaint updating\n\n    var ParentOption = _objectSpread(_objectSpread({}, settings), {}, {\n      option: newSettingOption\n    });\n\n    setSettings(ParentOption); // new option group will be updated in setting config to pass it to map\n\n    var newSetting = settingConfig.map(function (option) {\n      return option.title === ParentOption.title ? ParentOption : option;\n    }); // updated data config will be sent to body to send it to map component\n\n    onChange(newSetting);\n  };\n\n  return permission ? /*#__PURE__*/React.createElement(\"div\", {\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 71,\n      columnNumber: 5\n    }\n  }, /*#__PURE__*/React.createElement(StyledSettingOption, {\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 72,\n      columnNumber: 7\n    }\n  }, /*#__PURE__*/React.createElement(\"div\", {\n    className: \"title\",\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 73,\n      columnNumber: 9\n    }\n  }, settingOption.label || settingOption.title), /*#__PURE__*/React.createElement(RadioGroup, {\n    id: \"parentRadioGroup\",\n    orientation: true,\n    spacing: 10,\n    variant: \"default\",\n    width: \"400px\",\n    label: settingOption.title,\n    labelColor: \"black\",\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 76,\n      columnNumber: 9\n    }\n  }, settings.option.map(function (_ref2) {\n    var image = _ref2.image,\n        entry = _objectWithoutProperties(_ref2, [\"image\"]);\n\n    return /*#__PURE__*/React.createElement(\"div\", {\n      key: entry.name,\n      __self: _this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 87,\n        columnNumber: 15\n      }\n    }, /*#__PURE__*/React.createElement(Radio, {\n      id: entry.name,\n      onChange: function onChange() {\n        return handleParentChange(entry);\n      },\n      disabled: entry.disabled,\n      checked: entry.selected,\n      name: entry.label || entry.name,\n      value: entry.name,\n      label: entry.name,\n      radioSize: 13,\n      labelColor: \"black\",\n      labelComponent: /*#__PURE__*/React.createElement(Fragment, {\n        __self: _this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 99,\n          columnNumber: 21\n        }\n      }, /*#__PURE__*/React.createElement(StyledImage, {\n        src: image,\n        __self: _this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 100,\n          columnNumber: 23\n        }\n      }), /*#__PURE__*/React.createElement(RadioLabel, {\n        style: {\n          fontSize: '13px'\n        },\n        htmlFor: entry.name,\n        color: \"black\",\n        __self: _this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 101,\n          columnNumber: 23\n        }\n      }, entry.label || entry.name)),\n      __self: _this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 88,\n        columnNumber: 17\n      }\n    }));\n  }))), /*#__PURE__*/React.createElement(StyledSettingOption, {\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 116,\n      columnNumber: 7\n    }\n  }, /*#__PURE__*/React.createElement(\"div\", {\n    className: \"title\",\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 117,\n      columnNumber: 9\n    }\n  }, \" \", parentRadioSelection === null || parentRadioSelection === void 0 ? void 0 : parentRadioSelection.title), /*#__PURE__*/React.createElement(RadioGroup, {\n    id: \"childRadioGroup\",\n    orientation: true,\n    spacing: 10,\n    variant: \"default\",\n    width: \"400px\",\n    label: parentRadioSelection === null || parentRadioSelection === void 0 ? void 0 : parentRadioSelection.title,\n    labelColor: \"black\",\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 118,\n      columnNumber: 9\n    }\n  }, parentRadioSelection === null || parentRadioSelection === void 0 ? void 0 : (_parentRadioSelection2 = parentRadioSelection.subOptions) === null || _parentRadioSelection2 === void 0 ? void 0 : _parentRadioSelection2.map(function (_ref3) {\n    var image = _ref3.image,\n        suboptions = _objectWithoutProperties(_ref3, [\"image\"]);\n\n    return /*#__PURE__*/React.createElement(\"div\", {\n      key: suboptions.name,\n      __self: _this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 130,\n        columnNumber: 17\n      }\n    }, /*#__PURE__*/React.createElement(Radio, {\n      id: suboptions.name,\n      key: suboptions.name,\n      onChange: function onChange() {\n        return handleChildChange(suboptions);\n      },\n      disabled: suboptions.disabled,\n      checked: suboptions.selected,\n      name: suboptions.name,\n      value: suboptions.name,\n      label: suboptions.name,\n      radioSize: 13,\n      labelColor: \"black\",\n      labelComponent: /*#__PURE__*/React.createElement(Fragment, {\n        __self: _this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 143,\n          columnNumber: 23\n        }\n      }, /*#__PURE__*/React.createElement(StyledImage, {\n        src: image,\n        __self: _this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 144,\n          columnNumber: 25\n        }\n      }), /*#__PURE__*/React.createElement(RadioLabel, {\n        style: {\n          fontSize: '13px'\n        },\n        htmlFor: suboptions.name,\n        color: \"black\",\n        __self: _this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 145,\n          columnNumber: 25\n        }\n      }, suboptions.name)),\n      __self: _this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 131,\n        columnNumber: 19\n      }\n    }));\n  })))) : null;\n};\n\nexport default DependentOption;","map":{"version":3,"sources":["/Users/farhanansari/Code/ui-library/src/components/atoms/SettingBox/Type/DependentOption.tsx"],"names":["React","useState","Fragment","StyledSettingOption","StyledImage","Radio","RadioGroup","RadioLabel","DependentOption","settingOption","onChange","settingConfig","settings","setSettings","option","find","selectedOption","selected","parentRadioSelection","setParentRadioSelection","permission","handleParentChange","entry","newOption","map","name","ParentOption","newSetting","title","handleChildChange","subOptions","newSubOption","newSettingOption","label","image","disabled","fontSize","suboptions"],"mappings":";;;;;;;AAAA,OAAOA,KAAP,IAAgBC,QAAhB,EAA0BC,QAA1B,QAA0C,OAA1C;AAEA,SAASC,mBAAT,EAA8BC,WAA9B,QAAiD,qBAAjD;AACA,OAAOC,KAAP,MAAkB,sBAAlB;AACA,OAAOC,UAAP,MAAuB,kBAAvB;AACA,SAASC,UAAT,QAA2B,0BAA3B;;AAEA,IAAMC,eAAe,GAAG,SAAlBA,eAAkB,OAIH;AAAA;;AAAA,MAHnBC,aAGmB,QAHnBA,aAGmB;AAAA,MAFnBC,QAEmB,QAFnBA,QAEmB;AAAA,MADnBC,aACmB,QADnBA,aACmB;;AAAA,kBACaV,QAAQ,CAAiBQ,aAAjB,CADrB;AAAA;AAAA,MACZG,QADY;AAAA,MACFC,WADE;;AAAA,mBAEqCZ,QAAQ,CAE9DW,QAAQ,CAACE,MAAT,CAAgBC,IAAhB,CAAqB,UAACC,cAAD;AAAA,WAA6BA,cAAc,CAACC,QAA5C;AAAA,GAArB,CAF8D,CAF7C;AAAA;AAAA,MAEZC,oBAFY;AAAA,MAEUC,uBAFV,kBAMnB;;;AANmB,6BAOWP,QAPX,CAOXQ,UAPW;AAAA,MAOXA,UAPW,qCAOE,IAPF;;AASnB,MAAMC,kBAAkB,GAAG,SAArBA,kBAAqB,CAACC,KAAD,EAAoB;AAC7C;AACAH,IAAAA,uBAAuB,CAACG,KAAD,CAAvB,CAF6C,CAG7C;AACA;;AACA,QAAMC,SAAS,GAAGX,QAAQ,CAACE,MAAT,CAAgBU,GAAhB,CAAoB,UAACV,MAAD,EAAqB;AACzDA,MAAAA,MAAM,CAACG,QAAP,GAAkBH,MAAM,CAACW,IAAP,KAAgBH,KAAK,CAACG,IAAxC;AACA,aAAOX,MAAP;AACD,KAHiB,CAAlB;;AAIA,QAAMY,YAAY,mCAAQd,QAAR;AAAkBE,MAAAA,MAAM,EAAES;AAA1B,MAAlB;;AACAV,IAAAA,WAAW,CAACa,YAAD,CAAX,CAV6C,CAY7C;;AACA,QAAMC,UAAU,GAAGhB,aAAa,CAACa,GAAd,CAAkB,UAACV,MAAD;AAAA,aACnCA,MAAM,CAACc,KAAP,KAAiBF,YAAY,CAACE,KAA9B,GAAsCF,YAAtC,GAAqDZ,MADlB;AAAA,KAAlB,CAAnB,CAb6C,CAgB7C;;AACAJ,IAAAA,QAAQ,CAACiB,UAAD,CAAR;AACD,GAlBD;;AAoBA,MAAME,iBAAiB,GAAG,SAApBA,iBAAoB,CAACC,UAAD,EAAyB;AAAA;;AACjD,QAAMC,YAAY,GAAGb,oBAAH,aAAGA,oBAAH,gDAAGA,oBAAoB,CAAEY,UAAzB,0DAAG,sBAAkCN,GAAlC,CACnB,UAACV,MAAD,EAAqB;AACnBA,MAAAA,MAAM,CAACG,QAAP,GAAkBH,MAAM,CAACW,IAAP,KAAgBK,UAAU,CAACL,IAA7C;AACA,aAAOX,MAAP;AACD,KAJkB,CAArB,CADiD,CAOjD;;AACA,QAAMS,SAAS,mCACVL,oBADU;AAEbY,MAAAA,UAAU,EAAEC,YAFC;AAGbd,MAAAA,QAAQ,EAAE;AAHG,MAAf,CARiD,CAajD;;;AACA,QAAMe,gBAAgB,GAAGpB,QAAQ,CAACE,MAAT,CAAgBU,GAAhB,CAAoB,UAACV,MAAD;AAAA,aAC3CA,MAAM,CAACW,IAAP,MAAgBP,oBAAhB,aAAgBA,oBAAhB,uBAAgBA,oBAAoB,CAAEO,IAAtC,IAA6CF,SAA7C,GAAyDT,MADd;AAAA,KAApB,CAAzB,CAdiD,CAiBjD;;AACA,QAAMY,YAAY,mCAAQd,QAAR;AAAkBE,MAAAA,MAAM,EAAEkB;AAA1B,MAAlB;;AACAnB,IAAAA,WAAW,CAACa,YAAD,CAAX,CAnBiD,CAqBjD;;AACA,QAAMC,UAAU,GAAGhB,aAAa,CAACa,GAAd,CAAkB,UAACV,MAAD;AAAA,aACnCA,MAAM,CAACc,KAAP,KAAiBF,YAAY,CAACE,KAA9B,GAAsCF,YAAtC,GAAqDZ,MADlB;AAAA,KAAlB,CAAnB,CAtBiD,CAyBjD;;AACAJ,IAAAA,QAAQ,CAACiB,UAAD,CAAR;AACD,GA3BD;;AA6BA,SAAOP,UAAU,gBACf;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,kBACE,oBAAC,mBAAD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,kBACE;AAAK,IAAA,SAAS,EAAC,OAAf;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KACGX,aAAa,CAACwB,KAAd,IAAuBxB,aAAa,CAACmB,KADxC,CADF,eAIE,oBAAC,UAAD;AACE,IAAA,EAAE,EAAC,kBADL;AAEE,IAAA,WAAW,MAFb;AAGE,IAAA,OAAO,EAAE,EAHX;AAIE,IAAA,OAAO,EAAC,SAJV;AAKE,IAAA,KAAK,EAAC,OALR;AAME,IAAA,KAAK,EAAEnB,aAAa,CAACmB,KANvB;AAOE,IAAA,UAAU,EAAC,OAPb;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KASGhB,QAAQ,CAACE,MAAT,CAAgBU,GAAhB,CAAoB,iBAAkC;AAAA,QAA/BU,KAA+B,SAA/BA,KAA+B;AAAA,QAArBZ,KAAqB;;AACrD,wBACE;AAAK,MAAA,GAAG,EAAEA,KAAK,CAACG,IAAhB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,oBACE,oBAAC,KAAD;AACE,MAAA,EAAE,EAAEH,KAAK,CAACG,IADZ;AAEE,MAAA,QAAQ,EAAE;AAAA,eAAMJ,kBAAkB,CAACC,KAAD,CAAxB;AAAA,OAFZ;AAGE,MAAA,QAAQ,EAAEA,KAAK,CAACa,QAHlB;AAIE,MAAA,OAAO,EAAEb,KAAK,CAACL,QAJjB;AAKE,MAAA,IAAI,EAAEK,KAAK,CAACW,KAAN,IAAeX,KAAK,CAACG,IAL7B;AAME,MAAA,KAAK,EAAEH,KAAK,CAACG,IANf;AAOE,MAAA,KAAK,EAAEH,KAAK,CAACG,IAPf;AAQE,MAAA,SAAS,EAAE,EARb;AASE,MAAA,UAAU,EAAC,OATb;AAUE,MAAA,cAAc,eACZ,oBAAC,QAAD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,sBACE,oBAAC,WAAD;AAAa,QAAA,GAAG,EAAES,KAAlB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,QADF,eAEE,oBAAC,UAAD;AACE,QAAA,KAAK,EAAE;AAAEE,UAAAA,QAAQ,EAAE;AAAZ,SADT;AAEE,QAAA,OAAO,EAAEd,KAAK,CAACG,IAFjB;AAGE,QAAA,KAAK,EAAC,OAHR;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,SAKGH,KAAK,CAACW,KAAN,IAAeX,KAAK,CAACG,IALxB,CAFF,CAXJ;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,MADF,CADF;AA2BD,GA5BA,CATH,CAJF,CADF,eA6CE,oBAAC,mBAAD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,kBACE;AAAK,IAAA,SAAS,EAAC,OAAf;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,UAAyBP,oBAAzB,aAAyBA,oBAAzB,uBAAyBA,oBAAoB,CAAEU,KAA/C,CADF,eAEE,oBAAC,UAAD;AACE,IAAA,EAAE,EAAC,iBADL;AAEE,IAAA,WAAW,MAFb;AAGE,IAAA,OAAO,EAAE,EAHX;AAIE,IAAA,OAAO,EAAC,SAJV;AAKE,IAAA,KAAK,EAAC,OALR;AAME,IAAA,KAAK,EAAEV,oBAAF,aAAEA,oBAAF,uBAAEA,oBAAoB,CAAEU,KAN/B;AAOE,IAAA,UAAU,EAAC,OAPb;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KASGV,oBATH,aASGA,oBATH,iDASGA,oBAAoB,CAAEY,UATzB,2DASG,uBAAkCN,GAAlC,CACC,iBAAuC;AAAA,QAApCU,KAAoC,SAApCA,KAAoC;AAAA,QAA1BG,UAA0B;;AACrC,wBACE;AAAK,MAAA,GAAG,EAAEA,UAAU,CAACZ,IAArB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,oBACE,oBAAC,KAAD;AACE,MAAA,EAAE,EAAEY,UAAU,CAACZ,IADjB;AAEE,MAAA,GAAG,EAAEY,UAAU,CAACZ,IAFlB;AAGE,MAAA,QAAQ,EAAE;AAAA,eAAMI,iBAAiB,CAACQ,UAAD,CAAvB;AAAA,OAHZ;AAIE,MAAA,QAAQ,EAAEA,UAAU,CAACF,QAJvB;AAKE,MAAA,OAAO,EAAEE,UAAU,CAACpB,QALtB;AAME,MAAA,IAAI,EAAEoB,UAAU,CAACZ,IANnB;AAOE,MAAA,KAAK,EAAEY,UAAU,CAACZ,IAPpB;AAQE,MAAA,KAAK,EAAEY,UAAU,CAACZ,IARpB;AASE,MAAA,SAAS,EAAE,EATb;AAUE,MAAA,UAAU,EAAC,OAVb;AAWE,MAAA,cAAc,eACZ,oBAAC,QAAD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,sBACE,oBAAC,WAAD;AAAa,QAAA,GAAG,EAAES,KAAlB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,QADF,eAEE,oBAAC,UAAD;AACE,QAAA,KAAK,EAAE;AAAEE,UAAAA,QAAQ,EAAE;AAAZ,SADT;AAEE,QAAA,OAAO,EAAEC,UAAU,CAACZ,IAFtB;AAGE,QAAA,KAAK,EAAC,OAHR;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,SAKGY,UAAU,CAACZ,IALd,CAFF,CAZJ;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,MADF,CADF;AA4BD,GA9BF,CATH,CAFF,CA7CF,CADe,GA4Fb,IA5FJ;AA6FD,CA3JD;;AA4JA,eAAejB,eAAf","sourcesContent":["import React, { useState, Fragment } from 'react'\nimport { ISettingOption, IOption, ISubComponent } from '../interface'\nimport { StyledSettingOption, StyledImage } from '../StyledSettingBox'\nimport Radio from '../../../atoms/Radio'\nimport RadioGroup from '../../RadioGroup'\nimport { RadioLabel } from '../../Radio/Radio.styled'\n\nconst DependentOption = ({\n  settingOption,\n  onChange,\n  settingConfig\n}: ISubComponent) => {\n  const [settings, setSettings] = useState<ISettingOption>(settingOption)\n  const [parentRadioSelection, setParentRadioSelection] = useState<\n    IOption | undefined\n  >(settings.option.find((selectedOption: IOption) => selectedOption.selected))\n\n  // for hatmap and marker- map mode , if both the values  dont have permission,dont show section or else show whatever have permission\n  const { permission = true } = settings\n\n  const handleParentChange = (entry: IOption) => {\n    // set the selected parent option so that we can choose child option on the basis of that\n    setParentRadioSelection(entry)\n    // once we change the parent we have to change whole data and send to parent settingbody\n    // update parent radio selection in object\n    const newOption = settings.option.map((option: IOption) => {\n      option.selected = option.name === entry.name\n      return option\n    })\n    const ParentOption = { ...settings, option: newOption }\n    setSettings(ParentOption)\n\n    // new option group will be updated in setting config to pass it to map\n    const newSetting = settingConfig.map((option: ISettingOption) =>\n      option.title === ParentOption.title ? ParentOption : option\n    )\n    // updated data config will be sent to body to send it to map component\n    onChange(newSetting)\n  }\n\n  const handleChildChange = (subOptions: IOption) => {\n    const newSubOption = parentRadioSelection?.subOptions?.map(\n      (option: IOption) => {\n        option.selected = option.name === subOptions.name\n        return option\n      }\n    )\n    // child selection updating\n    const newOption = {\n      ...parentRadioSelection,\n      subOptions: newSubOption,\n      selected: true\n    }\n    // parent selection updating with child\n    const newSettingOption = settings.option.map((option: IOption) =>\n      option.name === parentRadioSelection?.name ? newOption : option\n    )\n    // whole dependent varaint updating\n    const ParentOption = { ...settings, option: newSettingOption }\n    setSettings(ParentOption)\n\n    // new option group will be updated in setting config to pass it to map\n    const newSetting = settingConfig.map((option: ISettingOption) =>\n      option.title === ParentOption.title ? ParentOption : option\n    )\n    // updated data config will be sent to body to send it to map component\n    onChange(newSetting)\n  }\n\n  return permission ? (\n    <div>\n      <StyledSettingOption>\n        <div className='title'>\n          {settingOption.label || settingOption.title}\n        </div>\n        <RadioGroup\n          id='parentRadioGroup'\n          orientation\n          spacing={10}\n          variant='default'\n          width='400px'\n          label={settingOption.title}\n          labelColor='black'\n        >\n          {settings.option.map(({ image, ...entry }: IOption) => {\n            return (\n              <div key={entry.name}>\n                <Radio\n                  id={entry.name}\n                  onChange={() => handleParentChange(entry)}\n                  disabled={entry.disabled}\n                  checked={entry.selected}\n                  name={entry.label || entry.name}\n                  value={entry.name}\n                  label={entry.name}\n                  radioSize={13}\n                  labelColor='black'\n                  labelComponent={\n                    <Fragment>\n                      <StyledImage src={image} />\n                      <RadioLabel\n                        style={{ fontSize: '13px' }}\n                        htmlFor={entry.name}\n                        color='black'\n                      >\n                        {entry.label || entry.name}\n                      </RadioLabel>\n                    </Fragment>\n                  }\n                />\n              </div>\n            )\n          })}\n        </RadioGroup>\n      </StyledSettingOption>\n      <StyledSettingOption>\n        <div className='title'> {parentRadioSelection?.title}</div>\n        <RadioGroup\n          id='childRadioGroup'\n          orientation\n          spacing={10}\n          variant='default'\n          width='400px'\n          label={parentRadioSelection?.title}\n          labelColor='black'\n        >\n          {parentRadioSelection?.subOptions?.map(\n            ({ image, ...suboptions }: IOption) => {\n              return (\n                <div key={suboptions.name}>\n                  <Radio\n                    id={suboptions.name}\n                    key={suboptions.name}\n                    onChange={() => handleChildChange(suboptions)}\n                    disabled={suboptions.disabled}\n                    checked={suboptions.selected}\n                    name={suboptions.name}\n                    value={suboptions.name}\n                    label={suboptions.name}\n                    radioSize={13}\n                    labelColor='black'\n                    labelComponent={\n                      <Fragment>\n                        <StyledImage src={image} />\n                        <RadioLabel\n                          style={{ fontSize: '13px' }}\n                          htmlFor={suboptions.name}\n                          color='black'\n                        >\n                          {suboptions.name}\n                        </RadioLabel>\n                      </Fragment>\n                    }\n                  />\n                </div>\n              )\n            }\n          )}\n        </RadioGroup>\n      </StyledSettingOption>\n    </div>\n  ) : null\n}\nexport default DependentOption\n"]},"metadata":{},"sourceType":"module"}