{"ast":null,"code":"import _slicedToArray from \"/Users/farhanansari/Desktop/CODE/PrxProject/untitled folder/reactStoryBook/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/slicedToArray\";\n\nvar _this = this,\n    _jsxFileName = \"/Users/farhanansari/Desktop/CODE/PrxProject/untitled folder/reactStoryBook/src/components/molecules/IconDropdown/Variant/DropdownUniversal.tsx\";\n\nimport React, { useEffect, useRef, useState } from 'react';\nimport Select, { components } from 'react-select';\nimport { Option } from '../../DropDown/CustomComponent';\nimport Position from '../../Position';\nimport { StyledSelectWrapper } from '../StyledIconDropdown';\nimport { DropdownUniversalStyled } from '../Styles';\n\nvar DropdownUniversal = function DropdownUniversal(_ref) {\n  var defaultProps = _ref.defaultProps;\n  var node = useRef(null);\n  var options = defaultProps.options,\n      value = defaultProps.value,\n      primary = defaultProps.primary,\n      intent = defaultProps.intent,\n      iconButtonDetails = defaultProps.iconButtonDetails,\n      width = defaultProps.width,\n      theme = defaultProps.theme,\n      children = defaultProps.children,\n      _onChange = defaultProps.onChange,\n      customStyle = defaultProps.customStyle,\n      menuOpen = defaultProps.menuIsOpen,\n      optionComponent = defaultProps.optionComponent;\n\n  var _useState = useState(!!menuOpen),\n      _useState2 = _slicedToArray(_useState, 2),\n      menuIsOpen = _useState2[0],\n      setMenuIsOpen = _useState2[1]; // we are keeping this to send to button as on open we have to make button blue\n\n\n  useEffect(function () {\n    setMenuIsOpen(!!menuOpen);\n  }, [menuOpen]); // close\n\n  var handleOutsideClick = function handleOutsideClick(e) {\n    var n = node === null || node === void 0 ? void 0 : node.current;\n    if (n === null || n === void 0 ? void 0 : n.contains(e === null || e === void 0 ? void 0 : e.target)) return;\n    setMenuIsOpen(false);\n  }; // if passing children from outside then only close on outside click\n\n\n  useEffect(function () {\n    children && document.addEventListener('mousedown', handleOutsideClick);\n    return function () {\n      children && document.removeEventListener('mousedown', handleOutsideClick);\n    };\n  }, []);\n  return /*#__PURE__*/React.createElement(Position, {\n    type: \"relative\",\n    style: {\n      width: '100%'\n    },\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 48,\n      columnNumber: 5\n    }\n  }, children && children({\n    selectedOption: value,\n    menuIsOpen: menuIsOpen,\n    setMenuIsOpen: setMenuIsOpen\n  }), /*#__PURE__*/React.createElement(StyledSelectWrapper, {\n    width: width,\n    onClick: function onClick(e) {\n      e.stopPropagation();\n    },\n    ref: node,\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 51,\n      columnNumber: 7\n    }\n  }, /*#__PURE__*/React.createElement(Select, {\n    components: {\n      IndicatorSeparator: function IndicatorSeparator() {\n        return null;\n      },\n      DropdownIndicator: function DropdownIndicator() {\n        return null;\n      },\n      Option: Option,\n      Menu: function Menu(props) {\n        return /*#__PURE__*/React.createElement(components.Menu, Object.assign({}, props, {\n          className: \"menuAnimate\",\n          __self: _this,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 64,\n            columnNumber: 15\n          }\n        }));\n      }\n    },\n    styles: customStyle || DropdownUniversalStyled(width, theme, false),\n    options: options,\n    value: value,\n    width: width,\n    primary: primary,\n    intent: intent,\n    openMenuOnClick: false,\n    iconButtonDetails: iconButtonDetails,\n    theme: theme,\n    optionComponent: optionComponent,\n    menuIsOpen: menuIsOpen,\n    onChange: function onChange(input) {\n      var obj = Array.from(document.querySelectorAll('.ui-tooltip'));\n      obj === null || obj === void 0 ? void 0 : obj.forEach(function (e) {\n        e.remove();\n      });\n      _onChange && _onChange(input);\n    },\n    onMenuOpen: function onMenuOpen() {\n      return setMenuIsOpen(true);\n    },\n    onMenuClose: function onMenuClose() {\n      return setMenuIsOpen(false);\n    },\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 58,\n      columnNumber: 9\n    }\n  })));\n};\n\nexport default React.memo(DropdownUniversal);","map":{"version":3,"sources":["/Users/farhanansari/Desktop/CODE/PrxProject/untitled folder/reactStoryBook/src/components/molecules/IconDropdown/Variant/DropdownUniversal.tsx"],"names":["React","useEffect","useRef","useState","Select","components","Option","Position","StyledSelectWrapper","DropdownUniversalStyled","DropdownUniversal","defaultProps","node","options","value","primary","intent","iconButtonDetails","width","theme","children","onChange","customStyle","menuOpen","menuIsOpen","optionComponent","setMenuIsOpen","handleOutsideClick","e","n","current","contains","target","document","addEventListener","removeEventListener","selectedOption","stopPropagation","IndicatorSeparator","DropdownIndicator","Menu","props","input","obj","Array","from","querySelectorAll","forEach","remove","memo"],"mappings":"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","sourcesContent":["import React, { useEffect, useRef, useState } from 'react'\nimport Select, { components } from 'react-select'\nimport { Option } from '../../DropDown/CustomComponent'\nimport { IIconDropdown } from '../../DropDown/interface'\nimport Position from '../../Position'\nimport { StyledSelectWrapper } from '../StyledIconDropdown'\nimport { DropdownUniversalStyled } from '../Styles'\n\nconst DropdownUniversal = ({\n  defaultProps\n}: {\n  defaultProps: IIconDropdown\n}) => {\n  const node = useRef(null)\n  const {\n    options,\n    value,\n    primary,\n    intent,\n    iconButtonDetails,\n    width,\n    theme,\n    children,\n    onChange,\n    customStyle,\n    menuIsOpen: menuOpen,\n    optionComponent\n  } = defaultProps\n  const [menuIsOpen, setMenuIsOpen] = useState(!!menuOpen) // we are keeping this to send to button as on open we have to make button blue\n\n  useEffect(() => {\n    setMenuIsOpen(!!menuOpen)\n  }, [menuOpen])\n  // close\n  const handleOutsideClick = (e: any) => {\n    const n = (node?.current as unknown) as Node\n    if (n?.contains(e?.target)) return\n    setMenuIsOpen(false)\n  }\n  // if passing children from outside then only close on outside click\n  useEffect(() => {\n    children && document.addEventListener('mousedown', handleOutsideClick)\n    return () => {\n      children && document.removeEventListener('mousedown', handleOutsideClick)\n    }\n  }, [])\n  return (\n    <Position type='relative' style={{ width: '100%' }}>\n      {children &&\n        children({ selectedOption: value as any, menuIsOpen, setMenuIsOpen })}\n      <StyledSelectWrapper\n        width={width}\n        onClick={(e: any) => {\n          e.stopPropagation()\n        }}\n        ref={node}\n      >\n        <Select\n          components={{\n            IndicatorSeparator: () => null,\n            DropdownIndicator: () => null,\n            Option,\n            Menu: (props) => (\n              <components.Menu {...props} className='menuAnimate' />\n            )\n          }}\n          styles={customStyle || DropdownUniversalStyled(width, theme, false)}\n          options={options}\n          value={value}\n          width={width}\n          primary={primary}\n          intent={intent}\n          openMenuOnClick={false}\n          iconButtonDetails={iconButtonDetails}\n          theme={theme}\n          optionComponent={optionComponent}\n          menuIsOpen={menuIsOpen}\n          onChange={(input: any) => {\n            const obj = Array.from(document.querySelectorAll('.ui-tooltip'))\n            obj?.forEach((e) => {\n              e.remove()\n            })\n            onChange && onChange(input)\n          }}\n          onMenuOpen={() => setMenuIsOpen(true)}\n          onMenuClose={() => setMenuIsOpen(false)}\n        />\n      </StyledSelectWrapper>\n    </Position>\n  )\n}\n\nexport default React.memo(DropdownUniversal)\n"]},"metadata":{},"sourceType":"module"}