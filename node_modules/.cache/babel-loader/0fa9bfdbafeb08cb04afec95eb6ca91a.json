{"ast":null,"code":"import _defineProperty from \"/Users/farhanansari/Desktop/CODE/PrxProject/untitled folder/reactStoryBook/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/defineProperty\";\n\nvar _parameters;\n\n/* eslint-disable */\n// @ts-nocheck\n// @ts-ignore\nvar withSourceLoader = require('@storybook/source-loader/preview').withSource; // @ts-ignore\n\n\nvar addSourceDecorator = require(\"@storybook/source-loader/preview\").addSource; // @ts-ignore\n\n\nvar __SOURCE_PREFIX__ = \"/Users/farhanansari/Desktop/CODE/PrxProject/untitled folder/reactStoryBook/src/components/atoms/IconButton\"; // @ts-ignore\n\nvar __STORY__ = \"\\n\\n// @ts-nocheck\\n// @ts-ignore\\nvar withSourceLoader = require('@storybook/source-loader/preview').withSource;\\n// @ts-ignore\\nvar addSourceDecorator = require(\\\"@storybook/source-loader/preview\\\").addSource;\\n// @ts-ignore\\nvar __SOURCE_PREFIX__ = \\\"/Users/farhanansari/Desktop/CODE/PrxProject/untitled folder/reactStoryBook/src/components/atoms/IconButton\\\";\\n// @ts-ignore\\nvar __STORY__ = \\\"\\\\n\\\\n// @ts-nocheck\\\\n// @ts-ignore\\\\nvar withSourceLoader = require('@storybook/source-loader/preview').withSource;\\\\n// @ts-ignore\\\\nvar addSourceDecorator = require(\\\\\\\"@storybook/source-loader/preview\\\\\\\").addSource;\\\\n// @ts-ignore\\\\nvar __SOURCE_PREFIX__ = \\\\\\\"/Users/farhanansari/Desktop/CODE/PrxProject/untitled folder/reactStoryBook/src/components/atoms/IconButton\\\\\\\";\\\\n// @ts-ignore\\\\nvar __STORY__ = \\\\\\\"import React from 'react'\\\\\\\\nimport { action } from '@storybook/addon-actions'\\\\\\\\nimport IconButton from '.'\\\\\\\\nimport Box from '../Box'\\\\\\\\nimport { withKnobs, boolean, text, radios } from '@storybook/addon-knobs'\\\\\\\\nimport { path } from '..'\\\\\\\\nimport ThemeWrapper from '../../../utilities/components/ThemeWrapper'\\\\\\\\nimport { tIntent } from '../Button'\\\\\\\\n\\\\\\\\nexport default {\\\\\\\\n  title: `${path}/IconButton`,\\\\\\\\n  decorators: [withKnobs],\\\\\\\\n  component: IconButton\\\\\\\\n}\\\\\\\\nconst radioOptions = {\\\\\\\\n  intent: { default: 'default', page: 'page', table: 'table' }\\\\\\\\n}\\\\\\\\nexport const withBasic = () => (\\\\\\\\n  <ThemeWrapper>\\\\\\\\n    <Box display='flex' justifyContent='space-evenly'>\\\\\\\\n      <IconButton\\\\\\\\n        onClick={action('clicked an Icon button with text')}\\\\\\\\n        primary={boolean('primary', false)}\\\\\\\\n        disabled={boolean('disabled', false)}\\\\\\\\n        intent={radios('intent', radioOptions.intent, 'default') as tIntent}\\\\\\\\n        iconVariant='icomoon-add'\\\\\\\\n        children='Add'\\\\\\\\n      />\\\\\\\\n      <IconButton\\\\\\\\n        onClick={action('clicked an Icon button with text')}\\\\\\\\n        primary={boolean('primary', false)}\\\\\\\\n        disabled={boolean('disabled', false)}\\\\\\\\n        intent={radios('intent', radioOptions.intent, 'default') as tIntent}\\\\\\\\n        iconVariant='icomoon-delete-empty'\\\\\\\\n        children='Delete'\\\\\\\\n      />\\\\\\\\n      <IconButton\\\\\\\\n        onClick={action('clicked an Icon button with text')}\\\\\\\\n        primary={boolean('primary', false)}\\\\\\\\n        disabled={boolean('disabled', false)}\\\\\\\\n        iconVariant='calendar'\\\\\\\\n        intent={radios('intent', radioOptions.intent, 'default') as tIntent}\\\\\\\\n        children='Calendar'\\\\\\\\n      />\\\\\\\\n    </Box>\\\\\\\\n  </ThemeWrapper>\\\\\\\\n)\\\\\\\\nexport const withCircular = () => (\\\\\\\\n  <ThemeWrapper>\\\\\\\\n    <Box display='flex' justifyContent='space-evenly'>\\\\\\\\n      <IconButton\\\\\\\\n        onClick={action('clicked an Icon button')}\\\\\\\\n        primary={boolean('primary', false)}\\\\\\\\n        disabled={boolean('disabled', false)}\\\\\\\\n        iconVariant='add'\\\\\\\\n        iconSize='xs'\\\\\\\\n        circle\\\\\\\\n      />\\\\\\\\n      <IconButton\\\\\\\\n        onClick={action('clicked an Icon button')}\\\\\\\\n        primary={boolean('primary', false)}\\\\\\\\n        disabled={boolean('disabled', false)}\\\\\\\\n        iconVariant='calendar'\\\\\\\\n        iconSize='md'\\\\\\\\n        circle\\\\\\\\n      />\\\\\\\\n    </Box>\\\\\\\\n  </ThemeWrapper>\\\\\\\\n)\\\\\\\\n\\\\\\\\nexport const withOnlyIcon = () => (\\\\\\\\n  <ThemeWrapper>\\\\\\\\n    <Box display='flex' justifyContent='space-evenly'>\\\\\\\\n      <IconButton\\\\\\\\n        onClick={action('clicked an Icon')}\\\\\\\\n        disabled={boolean('disabled', false)}\\\\\\\\n        onlyIcon\\\\\\\\n        iconVariant='add'\\\\\\\\n        iconSize='xs'\\\\\\\\n        color={text('Colors', 'primary.main')}\\\\\\\\n      />\\\\\\\\n      <IconButton\\\\\\\\n        onClick={action('clicked an Icon')}\\\\\\\\n        disabled={boolean('disabled', false)}\\\\\\\\n        onlyIcon\\\\\\\\n        iconVariant='calendar'\\\\\\\\n        iconSize='md'\\\\\\\\n        color={text('Colors', 'primary.main')}\\\\\\\\n      />\\\\\\\\n      <IconButton\\\\\\\\n        onClick={action('clicked an Icon')}\\\\\\\\n        disabled={boolean('disabled', false)}\\\\\\\\n        onlyIcon\\\\\\\\n        iconVariant='mail'\\\\\\\\n        iconSize='xl'\\\\\\\\n        color={text('Colors', 'primary.main')}\\\\\\\\n      />\\\\\\\\n    </Box>\\\\\\\\n  </ThemeWrapper>\\\\\\\\n)\\\\\\\\n\\\\\\\\nexport const withLink = () => (\\\\\\\\n  <ThemeWrapper>\\\\\\\\n    <Box display='flex' justifyContent='space-evenly'>\\\\\\\\n      <IconButton\\\\\\\\n        onClick={action('clicked an Icon')}\\\\\\\\n        disabled={boolean('disabled', false)}\\\\\\\\n        iconVariant='add'\\\\\\\\n        color={text('Colors', 'primary.main')}\\\\\\\\n        variant='link'\\\\\\\\n        children='Add'\\\\\\\\n      />\\\\\\\\n      <IconButton\\\\\\\\n        onClick={action('clicked an Icon')}\\\\\\\\n        disabled={boolean('disabled', false)}\\\\\\\\n        iconVariant='calendar'\\\\\\\\n        color={text('Colors', 'primary.main')}\\\\\\\\n        variant='link'\\\\\\\\n        children='Calendar'\\\\\\\\n      />\\\\\\\\n      <IconButton\\\\\\\\n        onClick={action('clicked an Icon')}\\\\\\\\n        disabled={boolean('disabled', false)}\\\\\\\\n        iconVariant='mail'\\\\\\\\n        color={text('Colors', 'primary.main')}\\\\\\\\n        variant='link'\\\\\\\\n        children='Mail'\\\\\\\\n      />\\\\\\\\n    </Box>\\\\\\\\n  </ThemeWrapper>\\\\\\\\n)\\\\\\\\n\\\\\\\";\\\\n// @ts-ignore\\\\nvar __ADDS_MAP__ = {};\\\\n// @ts-ignore\\\\nvar __MAIN_FILE_LOCATION__ = \\\\\\\"/IconButton.stories.tsx\\\\\\\";\\\\n// @ts-ignore\\\\nvar __MODULE_DEPENDENCIES__ = [];\\\\n// @ts-ignore\\\\nvar __LOCAL_DEPENDENCIES__ = {};\\\\n// @ts-ignore\\\\nvar __IDS_TO_FRAMEWORKS__ = {};\\\\n        \\\\nimport React from 'react'\\\\nimport { action } from '@storybook/addon-actions'\\\\nimport IconButton from '.'\\\\nimport Box from '../Box'\\\\nimport { withKnobs, boolean, text, radios } from '@storybook/addon-knobs'\\\\nimport { path } from '..'\\\\nimport ThemeWrapper from '../../../utilities/components/ThemeWrapper'\\\\nimport { tIntent } from '../Button'\\\\n\\\\nexport default {parameters: {\\\\\\\"storySource\\\\\\\":{\\\\\\\"source\\\\\\\":\\\\\\\"import React from 'react'\\\\\\\\nimport { action } from '@storybook/addon-actions'\\\\\\\\nimport IconButton from '.'\\\\\\\\nimport Box from '../Box'\\\\\\\\nimport { withKnobs, boolean, text, radios } from '@storybook/addon-knobs'\\\\\\\\nimport { path } from '..'\\\\\\\\nimport ThemeWrapper from '../../../utilities/components/ThemeWrapper'\\\\\\\\nimport { tIntent } from '../Button'\\\\\\\\n\\\\\\\\nexport default {\\\\\\\\n  title: `${path}/IconButton`,\\\\\\\\n  decorators: [withKnobs],\\\\\\\\n  component: IconButton\\\\\\\\n}\\\\\\\\nconst radioOptions = {\\\\\\\\n  intent: { default: 'default', page: 'page', table: 'table' }\\\\\\\\n}\\\\\\\\nexport const withBasic = () => (\\\\\\\\n  <ThemeWrapper>\\\\\\\\n    <Box display='flex' justifyContent='space-evenly'>\\\\\\\\n      <IconButton\\\\\\\\n        onClick={action('clicked an Icon button with text')}\\\\\\\\n        primary={boolean('primary', false)}\\\\\\\\n        disabled={boolean('disabled', false)}\\\\\\\\n        intent={radios('intent', radioOptions.intent, 'default') as tIntent}\\\\\\\\n        iconVariant='icomoon-add'\\\\\\\\n        children='Add'\\\\\\\\n      />\\\\\\\\n      <IconButton\\\\\\\\n        onClick={action('clicked an Icon button with text')}\\\\\\\\n        primary={boolean('primary', false)}\\\\\\\\n        disabled={boolean('disabled', false)}\\\\\\\\n        intent={radios('intent', radioOptions.intent, 'default') as tIntent}\\\\\\\\n        iconVariant='icomoon-delete-empty'\\\\\\\\n        children='Delete'\\\\\\\\n      />\\\\\\\\n      <IconButton\\\\\\\\n        onClick={action('clicked an Icon button with text')}\\\\\\\\n        primary={boolean('primary', false)}\\\\\\\\n        disabled={boolean('disabled', false)}\\\\\\\\n        iconVariant='calendar'\\\\\\\\n        intent={radios('intent', radioOptions.intent, 'default') as tIntent}\\\\\\\\n        children='Calendar'\\\\\\\\n      />\\\\\\\\n    </Box>\\\\\\\\n  </ThemeWrapper>\\\\\\\\n)\\\\\\\\nexport const withCircular = () => (\\\\\\\\n  <ThemeWrapper>\\\\\\\\n    <Box display='flex' justifyContent='space-evenly'>\\\\\\\\n      <IconButton\\\\\\\\n        onClick={action('clicked an Icon button')}\\\\\\\\n        primary={boolean('primary', false)}\\\\\\\\n        disabled={boolean('disabled', false)}\\\\\\\\n        iconVariant='add'\\\\\\\\n        iconSize='xs'\\\\\\\\n        circle\\\\\\\\n      />\\\\\\\\n      <IconButton\\\\\\\\n        onClick={action('clicked an Icon button')}\\\\\\\\n        primary={boolean('primary', false)}\\\\\\\\n        disabled={boolean('disabled', false)}\\\\\\\\n        iconVariant='calendar'\\\\\\\\n        iconSize='md'\\\\\\\\n        circle\\\\\\\\n      />\\\\\\\\n    </Box>\\\\\\\\n  </ThemeWrapper>\\\\\\\\n)\\\\\\\\n\\\\\\\\nexport const withOnlyIcon = () => (\\\\\\\\n  <ThemeWrapper>\\\\\\\\n    <Box display='flex' justifyContent='space-evenly'>\\\\\\\\n      <IconButton\\\\\\\\n        onClick={action('clicked an Icon')}\\\\\\\\n        disabled={boolean('disabled', false)}\\\\\\\\n        onlyIcon\\\\\\\\n        iconVariant='add'\\\\\\\\n        iconSize='xs'\\\\\\\\n        color={text('Colors', 'primary.main')}\\\\\\\\n      />\\\\\\\\n      <IconButton\\\\\\\\n        onClick={action('clicked an Icon')}\\\\\\\\n        disabled={boolean('disabled', false)}\\\\\\\\n        onlyIcon\\\\\\\\n        iconVariant='calendar'\\\\\\\\n        iconSize='md'\\\\\\\\n        color={text('Colors', 'primary.main')}\\\\\\\\n      />\\\\\\\\n      <IconButton\\\\\\\\n        onClick={action('clicked an Icon')}\\\\\\\\n        disabled={boolean('disabled', false)}\\\\\\\\n        onlyIcon\\\\\\\\n        iconVariant='mail'\\\\\\\\n        iconSize='xl'\\\\\\\\n        color={text('Colors', 'primary.main')}\\\\\\\\n      />\\\\\\\\n    </Box>\\\\\\\\n  </ThemeWrapper>\\\\\\\\n)\\\\\\\\n\\\\\\\\nexport const withLink = () => (\\\\\\\\n  <ThemeWrapper>\\\\\\\\n    <Box display='flex' justifyContent='space-evenly'>\\\\\\\\n      <IconButton\\\\\\\\n        onClick={action('clicked an Icon')}\\\\\\\\n        disabled={boolean('disabled', false)}\\\\\\\\n        iconVariant='add'\\\\\\\\n        color={text('Colors', 'primary.main')}\\\\\\\\n        variant='link'\\\\\\\\n        children='Add'\\\\\\\\n      />\\\\\\\\n      <IconButton\\\\\\\\n        onClick={action('clicked an Icon')}\\\\\\\\n        disabled={boolean('disabled', false)}\\\\\\\\n        iconVariant='calendar'\\\\\\\\n        color={text('Colors', 'primary.main')}\\\\\\\\n        variant='link'\\\\\\\\n        children='Calendar'\\\\\\\\n      />\\\\\\\\n      <IconButton\\\\\\\\n        onClick={action('clicked an Icon')}\\\\\\\\n        disabled={boolean('disabled', false)}\\\\\\\\n        iconVariant='mail'\\\\\\\\n        color={text('Colors', 'primary.main')}\\\\\\\\n        variant='link'\\\\\\\\n        children='Mail'\\\\\\\\n      />\\\\\\\\n    </Box>\\\\\\\\n  </ThemeWrapper>\\\\\\\\n)\\\\\\\\n\\\\\\\",\\\\\\\"locationsMap\\\\\\\":{}},},\\\\n  title: `${path}/IconButton`,\\\\n  decorators: [withKnobs],\\\\n  component: IconButton\\\\n}\\\\nconst radioOptions = {\\\\n  intent: { default: 'default', page: 'page', table: 'table' }\\\\n}\\\\nexport const withBasic = addSourceDecorator(() => (\\\\n  <ThemeWrapper>\\\\n    <Box display='flex' justifyContent='space-evenly'>\\\\n      <IconButton\\\\n        onClick={action('clicked an Icon button with text')}\\\\n        primary={boolean('primary', false)}\\\\n        disabled={boolean('disabled', false)}\\\\n        intent={radios('intent', radioOptions.intent, 'default') as tIntent}\\\\n        iconVariant='icomoon-add'\\\\n        children='Add'\\\\n      />\\\\n      <IconButton\\\\n        onClick={action('clicked an Icon button with text')}\\\\n        primary={boolean('primary', false)}\\\\n        disabled={boolean('disabled', false)}\\\\n        intent={radios('intent', radioOptions.intent, 'default') as tIntent}\\\\n        iconVariant='icomoon-delete-empty'\\\\n        children='Delete'\\\\n      />\\\\n      <IconButton\\\\n        onClick={action('clicked an Icon button with text')}\\\\n        primary={boolean('primary', false)}\\\\n        disabled={boolean('disabled', false)}\\\\n        iconVariant='calendar'\\\\n        intent={radios('intent', radioOptions.intent, 'default') as tIntent}\\\\n        children='Calendar'\\\\n      />\\\\n    </Box>\\\\n  </ThemeWrapper>\\\\n), {__STORY__, __ADDS_MAP__,__MAIN_FILE_LOCATION__,__MODULE_DEPENDENCIES__,__LOCAL_DEPENDENCIES__,__SOURCE_PREFIX__,__IDS_TO_FRAMEWORKS__});\\\\nexport const withCircular = addSourceDecorator(() => (\\\\n  <ThemeWrapper>\\\\n    <Box display='flex' justifyContent='space-evenly'>\\\\n      <IconButton\\\\n        onClick={action('clicked an Icon button')}\\\\n        primary={boolean('primary', false)}\\\\n        disabled={boolean('disabled', false)}\\\\n        iconVariant='add'\\\\n        iconSize='xs'\\\\n        circle\\\\n      />\\\\n      <IconButton\\\\n        onClick={action('clicked an Icon button')}\\\\n        primary={boolean('primary', false)}\\\\n        disabled={boolean('disabled', false)}\\\\n        iconVariant='calendar'\\\\n        iconSize='md'\\\\n        circle\\\\n      />\\\\n    </Box>\\\\n  </ThemeWrapper>\\\\n), {__STORY__, __ADDS_MAP__,__MAIN_FILE_LOCATION__,__MODULE_DEPENDENCIES__,__LOCAL_DEPENDENCIES__,__SOURCE_PREFIX__,__IDS_TO_FRAMEWORKS__});\\\\n\\\\nexport const withOnlyIcon = addSourceDecorator(() => (\\\\n  <ThemeWrapper>\\\\n    <Box display='flex' justifyContent='space-evenly'>\\\\n      <IconButton\\\\n        onClick={action('clicked an Icon')}\\\\n        disabled={boolean('disabled', false)}\\\\n        onlyIcon\\\\n        iconVariant='add'\\\\n        iconSize='xs'\\\\n        color={text('Colors', 'primary.main')}\\\\n      />\\\\n      <IconButton\\\\n        onClick={action('clicked an Icon')}\\\\n        disabled={boolean('disabled', false)}\\\\n        onlyIcon\\\\n        iconVariant='calendar'\\\\n        iconSize='md'\\\\n        color={text('Colors', 'primary.main')}\\\\n      />\\\\n      <IconButton\\\\n        onClick={action('clicked an Icon')}\\\\n        disabled={boolean('disabled', false)}\\\\n        onlyIcon\\\\n        iconVariant='mail'\\\\n        iconSize='xl'\\\\n        color={text('Colors', 'primary.main')}\\\\n      />\\\\n    </Box>\\\\n  </ThemeWrapper>\\\\n), {__STORY__, __ADDS_MAP__,__MAIN_FILE_LOCATION__,__MODULE_DEPENDENCIES__,__LOCAL_DEPENDENCIES__,__SOURCE_PREFIX__,__IDS_TO_FRAMEWORKS__});\\\\n\\\\nexport const withLink = addSourceDecorator(() => (\\\\n  <ThemeWrapper>\\\\n    <Box display='flex' justifyContent='space-evenly'>\\\\n      <IconButton\\\\n        onClick={action('clicked an Icon')}\\\\n        disabled={boolean('disabled', false)}\\\\n        iconVariant='add'\\\\n        color={text('Colors', 'primary.main')}\\\\n        variant='link'\\\\n        children='Add'\\\\n      />\\\\n      <IconButton\\\\n        onClick={action('clicked an Icon')}\\\\n        disabled={boolean('disabled', false)}\\\\n        iconVariant='calendar'\\\\n        color={text('Colors', 'primary.main')}\\\\n        variant='link'\\\\n        children='Calendar'\\\\n      />\\\\n      <IconButton\\\\n        onClick={action('clicked an Icon')}\\\\n        disabled={boolean('disabled', false)}\\\\n        iconVariant='mail'\\\\n        color={text('Colors', 'primary.main')}\\\\n        variant='link'\\\\n        children='Mail'\\\\n      />\\\\n    </Box>\\\\n  </ThemeWrapper>\\\\n), {__STORY__, __ADDS_MAP__,__MAIN_FILE_LOCATION__,__MODULE_DEPENDENCIES__,__LOCAL_DEPENDENCIES__,__SOURCE_PREFIX__,__IDS_TO_FRAMEWORKS__});\\\";\\n// @ts-ignore\\nvar __ADDS_MAP__ = {};\\n// @ts-ignore\\nvar __MAIN_FILE_LOCATION__ = \\\"/IconButton.stories.tsx\\\";\\n// @ts-ignore\\nvar __MODULE_DEPENDENCIES__ = [];\\n// @ts-ignore\\nvar __LOCAL_DEPENDENCIES__ = {};\\n// @ts-ignore\\nvar __IDS_TO_FRAMEWORKS__ = {};\\n        \\n\\n\\n// @ts-nocheck\\n// @ts-ignore\\nvar withSourceLoader = require('@storybook/source-loader/preview').withSource;\\n// @ts-ignore\\nvar addSourceDecorator = require(\\\"@storybook/source-loader/preview\\\").addSource;\\n// @ts-ignore\\nvar __SOURCE_PREFIX__ = \\\"/Users/farhanansari/Desktop/CODE/PrxProject/untitled folder/reactStoryBook/src/components/atoms/IconButton\\\";\\n// @ts-ignore\\nvar __STORY__ = \\\"import React from 'react'\\\\nimport { action } from '@storybook/addon-actions'\\\\nimport IconButton from '.'\\\\nimport Box from '../Box'\\\\nimport { withKnobs, boolean, text, radios } from '@storybook/addon-knobs'\\\\nimport { path } from '..'\\\\nimport ThemeWrapper from '../../../utilities/components/ThemeWrapper'\\\\nimport { tIntent } from '../Button'\\\\n\\\\nexport default {\\\\n  title: `${path}/IconButton`,\\\\n  decorators: [withKnobs],\\\\n  component: IconButton\\\\n}\\\\nconst radioOptions = {\\\\n  intent: { default: 'default', page: 'page', table: 'table' }\\\\n}\\\\nexport const withBasic = () => (\\\\n  <ThemeWrapper>\\\\n    <Box display='flex' justifyContent='space-evenly'>\\\\n      <IconButton\\\\n        onClick={action('clicked an Icon button with text')}\\\\n        primary={boolean('primary', false)}\\\\n        disabled={boolean('disabled', false)}\\\\n        intent={radios('intent', radioOptions.intent, 'default') as tIntent}\\\\n        iconVariant='icomoon-add'\\\\n        children='Add'\\\\n      />\\\\n      <IconButton\\\\n        onClick={action('clicked an Icon button with text')}\\\\n        primary={boolean('primary', false)}\\\\n        disabled={boolean('disabled', false)}\\\\n        intent={radios('intent', radioOptions.intent, 'default') as tIntent}\\\\n        iconVariant='icomoon-delete-empty'\\\\n        children='Delete'\\\\n      />\\\\n      <IconButton\\\\n        onClick={action('clicked an Icon button with text')}\\\\n        primary={boolean('primary', false)}\\\\n        disabled={boolean('disabled', false)}\\\\n        iconVariant='calendar'\\\\n        intent={radios('intent', radioOptions.intent, 'default') as tIntent}\\\\n        children='Calendar'\\\\n      />\\\\n    </Box>\\\\n  </ThemeWrapper>\\\\n)\\\\nexport const withCircular = () => (\\\\n  <ThemeWrapper>\\\\n    <Box display='flex' justifyContent='space-evenly'>\\\\n      <IconButton\\\\n        onClick={action('clicked an Icon button')}\\\\n        primary={boolean('primary', false)}\\\\n        disabled={boolean('disabled', false)}\\\\n        iconVariant='add'\\\\n        iconSize='xs'\\\\n        circle\\\\n      />\\\\n      <IconButton\\\\n        onClick={action('clicked an Icon button')}\\\\n        primary={boolean('primary', false)}\\\\n        disabled={boolean('disabled', false)}\\\\n        iconVariant='calendar'\\\\n        iconSize='md'\\\\n        circle\\\\n      />\\\\n    </Box>\\\\n  </ThemeWrapper>\\\\n)\\\\n\\\\nexport const withOnlyIcon = () => (\\\\n  <ThemeWrapper>\\\\n    <Box display='flex' justifyContent='space-evenly'>\\\\n      <IconButton\\\\n        onClick={action('clicked an Icon')}\\\\n        disabled={boolean('disabled', false)}\\\\n        onlyIcon\\\\n        iconVariant='add'\\\\n        iconSize='xs'\\\\n        color={text('Colors', 'primary.main')}\\\\n      />\\\\n      <IconButton\\\\n        onClick={action('clicked an Icon')}\\\\n        disabled={boolean('disabled', false)}\\\\n        onlyIcon\\\\n        iconVariant='calendar'\\\\n        iconSize='md'\\\\n        color={text('Colors', 'primary.main')}\\\\n      />\\\\n      <IconButton\\\\n        onClick={action('clicked an Icon')}\\\\n        disabled={boolean('disabled', false)}\\\\n        onlyIcon\\\\n        iconVariant='mail'\\\\n        iconSize='xl'\\\\n        color={text('Colors', 'primary.main')}\\\\n      />\\\\n    </Box>\\\\n  </ThemeWrapper>\\\\n)\\\\n\\\\nexport const withLink = () => (\\\\n  <ThemeWrapper>\\\\n    <Box display='flex' justifyContent='space-evenly'>\\\\n      <IconButton\\\\n        onClick={action('clicked an Icon')}\\\\n        disabled={boolean('disabled', false)}\\\\n        iconVariant='add'\\\\n        color={text('Colors', 'primary.main')}\\\\n        variant='link'\\\\n        children='Add'\\\\n      />\\\\n      <IconButton\\\\n        onClick={action('clicked an Icon')}\\\\n        disabled={boolean('disabled', false)}\\\\n        iconVariant='calendar'\\\\n        color={text('Colors', 'primary.main')}\\\\n        variant='link'\\\\n        children='Calendar'\\\\n      />\\\\n      <IconButton\\\\n        onClick={action('clicked an Icon')}\\\\n        disabled={boolean('disabled', false)}\\\\n        iconVariant='mail'\\\\n        color={text('Colors', 'primary.main')}\\\\n        variant='link'\\\\n        children='Mail'\\\\n      />\\\\n    </Box>\\\\n  </ThemeWrapper>\\\\n)\\\\n\\\";\\n// @ts-ignore\\nvar __ADDS_MAP__ = {};\\n// @ts-ignore\\nvar __MAIN_FILE_LOCATION__ = \\\"/IconButton.stories.tsx\\\";\\n// @ts-ignore\\nvar __MODULE_DEPENDENCIES__ = [];\\n// @ts-ignore\\nvar __LOCAL_DEPENDENCIES__ = {};\\n// @ts-ignore\\nvar __IDS_TO_FRAMEWORKS__ = {};\\n        \\nimport React from 'react'\\nimport { action } from '@storybook/addon-actions'\\nimport IconButton from '.'\\nimport Box from '../Box'\\nimport { withKnobs, boolean, text, radios } from '@storybook/addon-knobs'\\nimport { path } from '..'\\nimport ThemeWrapper from '../../../utilities/components/ThemeWrapper'\\nimport { tIntent } from '../Button'\\n\\nexport default {parameters: {\\\"storySource\\\":{\\\"source\\\":\\\"\\\\n\\\\n// @ts-nocheck\\\\n// @ts-ignore\\\\nvar withSourceLoader = require('@storybook/source-loader/preview').withSource;\\\\n// @ts-ignore\\\\nvar addSourceDecorator = require(\\\\\\\"@storybook/source-loader/preview\\\\\\\").addSource;\\\\n// @ts-ignore\\\\nvar __SOURCE_PREFIX__ = \\\\\\\"/Users/farhanansari/Desktop/CODE/PrxProject/untitled folder/reactStoryBook/src/components/atoms/IconButton\\\\\\\";\\\\n// @ts-ignore\\\\nvar __STORY__ = \\\\\\\"import React from 'react'\\\\\\\\nimport { action } from '@storybook/addon-actions'\\\\\\\\nimport IconButton from '.'\\\\\\\\nimport Box from '../Box'\\\\\\\\nimport { withKnobs, boolean, text, radios } from '@storybook/addon-knobs'\\\\\\\\nimport { path } from '..'\\\\\\\\nimport ThemeWrapper from '../../../utilities/components/ThemeWrapper'\\\\\\\\nimport { tIntent } from '../Button'\\\\\\\\n\\\\\\\\nexport default {\\\\\\\\n  title: `${path}/IconButton`,\\\\\\\\n  decorators: [withKnobs],\\\\\\\\n  component: IconButton\\\\\\\\n}\\\\\\\\nconst radioOptions = {\\\\\\\\n  intent: { default: 'default', page: 'page', table: 'table' }\\\\\\\\n}\\\\\\\\nexport const withBasic = () => (\\\\\\\\n  <ThemeWrapper>\\\\\\\\n    <Box display='flex' justifyContent='space-evenly'>\\\\\\\\n      <IconButton\\\\\\\\n        onClick={action('clicked an Icon button with text')}\\\\\\\\n        primary={boolean('primary', false)}\\\\\\\\n        disabled={boolean('disabled', false)}\\\\\\\\n        intent={radios('intent', radioOptions.intent, 'default') as tIntent}\\\\\\\\n        iconVariant='icomoon-add'\\\\\\\\n        children='Add'\\\\\\\\n      />\\\\\\\\n      <IconButton\\\\\\\\n        onClick={action('clicked an Icon button with text')}\\\\\\\\n        primary={boolean('primary', false)}\\\\\\\\n        disabled={boolean('disabled', false)}\\\\\\\\n        intent={radios('intent', radioOptions.intent, 'default') as tIntent}\\\\\\\\n        iconVariant='icomoon-delete-empty'\\\\\\\\n        children='Delete'\\\\\\\\n      />\\\\\\\\n      <IconButton\\\\\\\\n        onClick={action('clicked an Icon button with text')}\\\\\\\\n        primary={boolean('primary', false)}\\\\\\\\n        disabled={boolean('disabled', false)}\\\\\\\\n        iconVariant='calendar'\\\\\\\\n        intent={radios('intent', radioOptions.intent, 'default') as tIntent}\\\\\\\\n        children='Calendar'\\\\\\\\n      />\\\\\\\\n    </Box>\\\\\\\\n  </ThemeWrapper>\\\\\\\\n)\\\\\\\\nexport const withCircular = () => (\\\\\\\\n  <ThemeWrapper>\\\\\\\\n    <Box display='flex' justifyContent='space-evenly'>\\\\\\\\n      <IconButton\\\\\\\\n        onClick={action('clicked an Icon button')}\\\\\\\\n        primary={boolean('primary', false)}\\\\\\\\n        disabled={boolean('disabled', false)}\\\\\\\\n        iconVariant='add'\\\\\\\\n        iconSize='xs'\\\\\\\\n        circle\\\\\\\\n      />\\\\\\\\n      <IconButton\\\\\\\\n        onClick={action('clicked an Icon button')}\\\\\\\\n        primary={boolean('primary', false)}\\\\\\\\n        disabled={boolean('disabled', false)}\\\\\\\\n        iconVariant='calendar'\\\\\\\\n        iconSize='md'\\\\\\\\n        circle\\\\\\\\n      />\\\\\\\\n    </Box>\\\\\\\\n  </ThemeWrapper>\\\\\\\\n)\\\\\\\\n\\\\\\\\nexport const withOnlyIcon = () => (\\\\\\\\n  <ThemeWrapper>\\\\\\\\n    <Box display='flex' justifyContent='space-evenly'>\\\\\\\\n      <IconButton\\\\\\\\n        onClick={action('clicked an Icon')}\\\\\\\\n        disabled={boolean('disabled', false)}\\\\\\\\n        onlyIcon\\\\\\\\n        iconVariant='add'\\\\\\\\n        iconSize='xs'\\\\\\\\n        color={text('Colors', 'primary.main')}\\\\\\\\n      />\\\\\\\\n      <IconButton\\\\\\\\n        onClick={action('clicked an Icon')}\\\\\\\\n        disabled={boolean('disabled', false)}\\\\\\\\n        onlyIcon\\\\\\\\n        iconVariant='calendar'\\\\\\\\n        iconSize='md'\\\\\\\\n        color={text('Colors', 'primary.main')}\\\\\\\\n      />\\\\\\\\n      <IconButton\\\\\\\\n        onClick={action('clicked an Icon')}\\\\\\\\n        disabled={boolean('disabled', false)}\\\\\\\\n        onlyIcon\\\\\\\\n        iconVariant='mail'\\\\\\\\n        iconSize='xl'\\\\\\\\n        color={text('Colors', 'primary.main')}\\\\\\\\n      />\\\\\\\\n    </Box>\\\\\\\\n  </ThemeWrapper>\\\\\\\\n)\\\\\\\\n\\\\\\\\nexport const withLink = () => (\\\\\\\\n  <ThemeWrapper>\\\\\\\\n    <Box display='flex' justifyContent='space-evenly'>\\\\\\\\n      <IconButton\\\\\\\\n        onClick={action('clicked an Icon')}\\\\\\\\n        disabled={boolean('disabled', false)}\\\\\\\\n        iconVariant='add'\\\\\\\\n        color={text('Colors', 'primary.main')}\\\\\\\\n        variant='link'\\\\\\\\n        children='Add'\\\\\\\\n      />\\\\\\\\n      <IconButton\\\\\\\\n        onClick={action('clicked an Icon')}\\\\\\\\n        disabled={boolean('disabled', false)}\\\\\\\\n        iconVariant='calendar'\\\\\\\\n        color={text('Colors', 'primary.main')}\\\\\\\\n        variant='link'\\\\\\\\n        children='Calendar'\\\\\\\\n      />\\\\\\\\n      <IconButton\\\\\\\\n        onClick={action('clicked an Icon')}\\\\\\\\n        disabled={boolean('disabled', false)}\\\\\\\\n        iconVariant='mail'\\\\\\\\n        color={text('Colors', 'primary.main')}\\\\\\\\n        variant='link'\\\\\\\\n        children='Mail'\\\\\\\\n      />\\\\\\\\n    </Box>\\\\\\\\n  </ThemeWrapper>\\\\\\\\n)\\\\\\\\n\\\\\\\";\\\\n// @ts-ignore\\\\nvar __ADDS_MAP__ = {};\\\\n// @ts-ignore\\\\nvar __MAIN_FILE_LOCATION__ = \\\\\\\"/IconButton.stories.tsx\\\\\\\";\\\\n// @ts-ignore\\\\nvar __MODULE_DEPENDENCIES__ = [];\\\\n// @ts-ignore\\\\nvar __LOCAL_DEPENDENCIES__ = {};\\\\n// @ts-ignore\\\\nvar __IDS_TO_FRAMEWORKS__ = {};\\\\n        \\\\nimport React from 'react'\\\\nimport { action } from '@storybook/addon-actions'\\\\nimport IconButton from '.'\\\\nimport Box from '../Box'\\\\nimport { withKnobs, boolean, text, radios } from '@storybook/addon-knobs'\\\\nimport { path } from '..'\\\\nimport ThemeWrapper from '../../../utilities/components/ThemeWrapper'\\\\nimport { tIntent } from '../Button'\\\\n\\\\nexport default {parameters: {\\\\\\\"storySource\\\\\\\":{\\\\\\\"source\\\\\\\":\\\\\\\"import React from 'react'\\\\\\\\nimport { action } from '@storybook/addon-actions'\\\\\\\\nimport IconButton from '.'\\\\\\\\nimport Box from '../Box'\\\\\\\\nimport { withKnobs, boolean, text, radios } from '@storybook/addon-knobs'\\\\\\\\nimport { path } from '..'\\\\\\\\nimport ThemeWrapper from '../../../utilities/components/ThemeWrapper'\\\\\\\\nimport { tIntent } from '../Button'\\\\\\\\n\\\\\\\\nexport default {\\\\\\\\n  title: `${path}/IconButton`,\\\\\\\\n  decorators: [withKnobs],\\\\\\\\n  component: IconButton\\\\\\\\n}\\\\\\\\nconst radioOptions = {\\\\\\\\n  intent: { default: 'default', page: 'page', table: 'table' }\\\\\\\\n}\\\\\\\\nexport const withBasic = () => (\\\\\\\\n  <ThemeWrapper>\\\\\\\\n    <Box display='flex' justifyContent='space-evenly'>\\\\\\\\n      <IconButton\\\\\\\\n        onClick={action('clicked an Icon button with text')}\\\\\\\\n        primary={boolean('primary', false)}\\\\\\\\n        disabled={boolean('disabled', false)}\\\\\\\\n        intent={radios('intent', radioOptions.intent, 'default') as tIntent}\\\\\\\\n        iconVariant='icomoon-add'\\\\\\\\n        children='Add'\\\\\\\\n      />\\\\\\\\n      <IconButton\\\\\\\\n        onClick={action('clicked an Icon button with text')}\\\\\\\\n        primary={boolean('primary', false)}\\\\\\\\n        disabled={boolean('disabled', false)}\\\\\\\\n        intent={radios('intent', radioOptions.intent, 'default') as tIntent}\\\\\\\\n        iconVariant='icomoon-delete-empty'\\\\\\\\n        children='Delete'\\\\\\\\n      />\\\\\\\\n      <IconButton\\\\\\\\n        onClick={action('clicked an Icon button with text')}\\\\\\\\n        primary={boolean('primary', false)}\\\\\\\\n        disabled={boolean('disabled', false)}\\\\\\\\n        iconVariant='calendar'\\\\\\\\n        intent={radios('intent', radioOptions.intent, 'default') as tIntent}\\\\\\\\n        children='Calendar'\\\\\\\\n      />\\\\\\\\n    </Box>\\\\\\\\n  </ThemeWrapper>\\\\\\\\n)\\\\\\\\nexport const withCircular = () => (\\\\\\\\n  <ThemeWrapper>\\\\\\\\n    <Box display='flex' justifyContent='space-evenly'>\\\\\\\\n      <IconButton\\\\\\\\n        onClick={action('clicked an Icon button')}\\\\\\\\n        primary={boolean('primary', false)}\\\\\\\\n        disabled={boolean('disabled', false)}\\\\\\\\n        iconVariant='add'\\\\\\\\n        iconSize='xs'\\\\\\\\n        circle\\\\\\\\n      />\\\\\\\\n      <IconButton\\\\\\\\n        onClick={action('clicked an Icon button')}\\\\\\\\n        primary={boolean('primary', false)}\\\\\\\\n        disabled={boolean('disabled', false)}\\\\\\\\n        iconVariant='calendar'\\\\\\\\n        iconSize='md'\\\\\\\\n        circle\\\\\\\\n      />\\\\\\\\n    </Box>\\\\\\\\n  </ThemeWrapper>\\\\\\\\n)\\\\\\\\n\\\\\\\\nexport const withOnlyIcon = () => (\\\\\\\\n  <ThemeWrapper>\\\\\\\\n    <Box display='flex' justifyContent='space-evenly'>\\\\\\\\n      <IconButton\\\\\\\\n        onClick={action('clicked an Icon')}\\\\\\\\n        disabled={boolean('disabled', false)}\\\\\\\\n        onlyIcon\\\\\\\\n        iconVariant='add'\\\\\\\\n        iconSize='xs'\\\\\\\\n        color={text('Colors', 'primary.main')}\\\\\\\\n      />\\\\\\\\n      <IconButton\\\\\\\\n        onClick={action('clicked an Icon')}\\\\\\\\n        disabled={boolean('disabled', false)}\\\\\\\\n        onlyIcon\\\\\\\\n        iconVariant='calendar'\\\\\\\\n        iconSize='md'\\\\\\\\n        color={text('Colors', 'primary.main')}\\\\\\\\n      />\\\\\\\\n      <IconButton\\\\\\\\n        onClick={action('clicked an Icon')}\\\\\\\\n        disabled={boolean('disabled', false)}\\\\\\\\n        onlyIcon\\\\\\\\n        iconVariant='mail'\\\\\\\\n        iconSize='xl'\\\\\\\\n        color={text('Colors', 'primary.main')}\\\\\\\\n      />\\\\\\\\n    </Box>\\\\\\\\n  </ThemeWrapper>\\\\\\\\n)\\\\\\\\n\\\\\\\\nexport const withLink = () => (\\\\\\\\n  <ThemeWrapper>\\\\\\\\n    <Box display='flex' justifyContent='space-evenly'>\\\\\\\\n      <IconButton\\\\\\\\n        onClick={action('clicked an Icon')}\\\\\\\\n        disabled={boolean('disabled', false)}\\\\\\\\n        iconVariant='add'\\\\\\\\n        color={text('Colors', 'primary.main')}\\\\\\\\n        variant='link'\\\\\\\\n        children='Add'\\\\\\\\n      />\\\\\\\\n      <IconButton\\\\\\\\n        onClick={action('clicked an Icon')}\\\\\\\\n        disabled={boolean('disabled', false)}\\\\\\\\n        iconVariant='calendar'\\\\\\\\n        color={text('Colors', 'primary.main')}\\\\\\\\n        variant='link'\\\\\\\\n        children='Calendar'\\\\\\\\n      />\\\\\\\\n      <IconButton\\\\\\\\n        onClick={action('clicked an Icon')}\\\\\\\\n        disabled={boolean('disabled', false)}\\\\\\\\n        iconVariant='mail'\\\\\\\\n        color={text('Colors', 'primary.main')}\\\\\\\\n        variant='link'\\\\\\\\n        children='Mail'\\\\\\\\n      />\\\\\\\\n    </Box>\\\\\\\\n  </ThemeWrapper>\\\\\\\\n)\\\\\\\\n\\\\\\\",\\\\\\\"locationsMap\\\\\\\":{}},},\\\\n  title: `${path}/IconButton`,\\\\n  decorators: [withKnobs],\\\\n  component: IconButton\\\\n}\\\\nconst radioOptions = {\\\\n  intent: { default: 'default', page: 'page', table: 'table' }\\\\n}\\\\nexport const withBasic = addSourceDecorator(() => (\\\\n  <ThemeWrapper>\\\\n    <Box display='flex' justifyContent='space-evenly'>\\\\n      <IconButton\\\\n        onClick={action('clicked an Icon button with text')}\\\\n        primary={boolean('primary', false)}\\\\n        disabled={boolean('disabled', false)}\\\\n        intent={radios('intent', radioOptions.intent, 'default') as tIntent}\\\\n        iconVariant='icomoon-add'\\\\n        children='Add'\\\\n      />\\\\n      <IconButton\\\\n        onClick={action('clicked an Icon button with text')}\\\\n        primary={boolean('primary', false)}\\\\n        disabled={boolean('disabled', false)}\\\\n        intent={radios('intent', radioOptions.intent, 'default') as tIntent}\\\\n        iconVariant='icomoon-delete-empty'\\\\n        children='Delete'\\\\n      />\\\\n      <IconButton\\\\n        onClick={action('clicked an Icon button with text')}\\\\n        primary={boolean('primary', false)}\\\\n        disabled={boolean('disabled', false)}\\\\n        iconVariant='calendar'\\\\n        intent={radios('intent', radioOptions.intent, 'default') as tIntent}\\\\n        children='Calendar'\\\\n      />\\\\n    </Box>\\\\n  </ThemeWrapper>\\\\n), {__STORY__, __ADDS_MAP__,__MAIN_FILE_LOCATION__,__MODULE_DEPENDENCIES__,__LOCAL_DEPENDENCIES__,__SOURCE_PREFIX__,__IDS_TO_FRAMEWORKS__});\\\\nexport const withCircular = addSourceDecorator(() => (\\\\n  <ThemeWrapper>\\\\n    <Box display='flex' justifyContent='space-evenly'>\\\\n      <IconButton\\\\n        onClick={action('clicked an Icon button')}\\\\n        primary={boolean('primary', false)}\\\\n        disabled={boolean('disabled', false)}\\\\n        iconVariant='add'\\\\n        iconSize='xs'\\\\n        circle\\\\n      />\\\\n      <IconButton\\\\n        onClick={action('clicked an Icon button')}\\\\n        primary={boolean('primary', false)}\\\\n        disabled={boolean('disabled', false)}\\\\n        iconVariant='calendar'\\\\n        iconSize='md'\\\\n        circle\\\\n      />\\\\n    </Box>\\\\n  </ThemeWrapper>\\\\n), {__STORY__, __ADDS_MAP__,__MAIN_FILE_LOCATION__,__MODULE_DEPENDENCIES__,__LOCAL_DEPENDENCIES__,__SOURCE_PREFIX__,__IDS_TO_FRAMEWORKS__});\\\\n\\\\nexport const withOnlyIcon = addSourceDecorator(() => (\\\\n  <ThemeWrapper>\\\\n    <Box display='flex' justifyContent='space-evenly'>\\\\n      <IconButton\\\\n        onClick={action('clicked an Icon')}\\\\n        disabled={boolean('disabled', false)}\\\\n        onlyIcon\\\\n        iconVariant='add'\\\\n        iconSize='xs'\\\\n        color={text('Colors', 'primary.main')}\\\\n      />\\\\n      <IconButton\\\\n        onClick={action('clicked an Icon')}\\\\n        disabled={boolean('disabled', false)}\\\\n        onlyIcon\\\\n        iconVariant='calendar'\\\\n        iconSize='md'\\\\n        color={text('Colors', 'primary.main')}\\\\n      />\\\\n      <IconButton\\\\n        onClick={action('clicked an Icon')}\\\\n        disabled={boolean('disabled', false)}\\\\n        onlyIcon\\\\n        iconVariant='mail'\\\\n        iconSize='xl'\\\\n        color={text('Colors', 'primary.main')}\\\\n      />\\\\n    </Box>\\\\n  </ThemeWrapper>\\\\n), {__STORY__, __ADDS_MAP__,__MAIN_FILE_LOCATION__,__MODULE_DEPENDENCIES__,__LOCAL_DEPENDENCIES__,__SOURCE_PREFIX__,__IDS_TO_FRAMEWORKS__});\\\\n\\\\nexport const withLink = addSourceDecorator(() => (\\\\n  <ThemeWrapper>\\\\n    <Box display='flex' justifyContent='space-evenly'>\\\\n      <IconButton\\\\n        onClick={action('clicked an Icon')}\\\\n        disabled={boolean('disabled', false)}\\\\n        iconVariant='add'\\\\n        color={text('Colors', 'primary.main')}\\\\n        variant='link'\\\\n        children='Add'\\\\n      />\\\\n      <IconButton\\\\n        onClick={action('clicked an Icon')}\\\\n        disabled={boolean('disabled', false)}\\\\n        iconVariant='calendar'\\\\n        color={text('Colors', 'primary.main')}\\\\n        variant='link'\\\\n        children='Calendar'\\\\n      />\\\\n      <IconButton\\\\n        onClick={action('clicked an Icon')}\\\\n        disabled={boolean('disabled', false)}\\\\n        iconVariant='mail'\\\\n        color={text('Colors', 'primary.main')}\\\\n        variant='link'\\\\n        children='Mail'\\\\n      />\\\\n    </Box>\\\\n  </ThemeWrapper>\\\\n), {__STORY__, __ADDS_MAP__,__MAIN_FILE_LOCATION__,__MODULE_DEPENDENCIES__,__LOCAL_DEPENDENCIES__,__SOURCE_PREFIX__,__IDS_TO_FRAMEWORKS__});\\\",\\\"locationsMap\\\":{}},\\\"storySource\\\":{\\\"source\\\":\\\"import React from 'react'\\\\nimport { action } from '@storybook/addon-actions'\\\\nimport IconButton from '.'\\\\nimport Box from '../Box'\\\\nimport { withKnobs, boolean, text, radios } from '@storybook/addon-knobs'\\\\nimport { path } from '..'\\\\nimport ThemeWrapper from '../../../utilities/components/ThemeWrapper'\\\\nimport { tIntent } from '../Button'\\\\n\\\\nexport default {\\\\n  title: `${path}/IconButton`,\\\\n  decorators: [withKnobs],\\\\n  component: IconButton\\\\n}\\\\nconst radioOptions = {\\\\n  intent: { default: 'default', page: 'page', table: 'table' }\\\\n}\\\\nexport const withBasic = () => (\\\\n  <ThemeWrapper>\\\\n    <Box display='flex' justifyContent='space-evenly'>\\\\n      <IconButton\\\\n        onClick={action('clicked an Icon button with text')}\\\\n        primary={boolean('primary', false)}\\\\n        disabled={boolean('disabled', false)}\\\\n        intent={radios('intent', radioOptions.intent, 'default') as tIntent}\\\\n        iconVariant='icomoon-add'\\\\n        children='Add'\\\\n      />\\\\n      <IconButton\\\\n        onClick={action('clicked an Icon button with text')}\\\\n        primary={boolean('primary', false)}\\\\n        disabled={boolean('disabled', false)}\\\\n        intent={radios('intent', radioOptions.intent, 'default') as tIntent}\\\\n        iconVariant='icomoon-delete-empty'\\\\n        children='Delete'\\\\n      />\\\\n      <IconButton\\\\n        onClick={action('clicked an Icon button with text')}\\\\n        primary={boolean('primary', false)}\\\\n        disabled={boolean('disabled', false)}\\\\n        iconVariant='calendar'\\\\n        intent={radios('intent', radioOptions.intent, 'default') as tIntent}\\\\n        children='Calendar'\\\\n      />\\\\n    </Box>\\\\n  </ThemeWrapper>\\\\n)\\\\nexport const withCircular = () => (\\\\n  <ThemeWrapper>\\\\n    <Box display='flex' justifyContent='space-evenly'>\\\\n      <IconButton\\\\n        onClick={action('clicked an Icon button')}\\\\n        primary={boolean('primary', false)}\\\\n        disabled={boolean('disabled', false)}\\\\n        iconVariant='add'\\\\n        iconSize='xs'\\\\n        circle\\\\n      />\\\\n      <IconButton\\\\n        onClick={action('clicked an Icon button')}\\\\n        primary={boolean('primary', false)}\\\\n        disabled={boolean('disabled', false)}\\\\n        iconVariant='calendar'\\\\n        iconSize='md'\\\\n        circle\\\\n      />\\\\n    </Box>\\\\n  </ThemeWrapper>\\\\n)\\\\n\\\\nexport const withOnlyIcon = () => (\\\\n  <ThemeWrapper>\\\\n    <Box display='flex' justifyContent='space-evenly'>\\\\n      <IconButton\\\\n        onClick={action('clicked an Icon')}\\\\n        disabled={boolean('disabled', false)}\\\\n        onlyIcon\\\\n        iconVariant='add'\\\\n        iconSize='xs'\\\\n        color={text('Colors', 'primary.main')}\\\\n      />\\\\n      <IconButton\\\\n        onClick={action('clicked an Icon')}\\\\n        disabled={boolean('disabled', false)}\\\\n        onlyIcon\\\\n        iconVariant='calendar'\\\\n        iconSize='md'\\\\n        color={text('Colors', 'primary.main')}\\\\n      />\\\\n      <IconButton\\\\n        onClick={action('clicked an Icon')}\\\\n        disabled={boolean('disabled', false)}\\\\n        onlyIcon\\\\n        iconVariant='mail'\\\\n        iconSize='xl'\\\\n        color={text('Colors', 'primary.main')}\\\\n      />\\\\n    </Box>\\\\n  </ThemeWrapper>\\\\n)\\\\n\\\\nexport const withLink = () => (\\\\n  <ThemeWrapper>\\\\n    <Box display='flex' justifyContent='space-evenly'>\\\\n      <IconButton\\\\n        onClick={action('clicked an Icon')}\\\\n        disabled={boolean('disabled', false)}\\\\n        iconVariant='add'\\\\n        color={text('Colors', 'primary.main')}\\\\n        variant='link'\\\\n        children='Add'\\\\n      />\\\\n      <IconButton\\\\n        onClick={action('clicked an Icon')}\\\\n        disabled={boolean('disabled', false)}\\\\n        iconVariant='calendar'\\\\n        color={text('Colors', 'primary.main')}\\\\n        variant='link'\\\\n        children='Calendar'\\\\n      />\\\\n      <IconButton\\\\n        onClick={action('clicked an Icon')}\\\\n        disabled={boolean('disabled', false)}\\\\n        iconVariant='mail'\\\\n        color={text('Colors', 'primary.main')}\\\\n        variant='link'\\\\n        children='Mail'\\\\n      />\\\\n    </Box>\\\\n  </ThemeWrapper>\\\\n)\\\\n\\\",\\\"locationsMap\\\":{}},},\\n  title: `${path}/IconButton`,\\n  decorators: [withKnobs],\\n  component: IconButton\\n}\\nconst radioOptions = {\\n  intent: { default: 'default', page: 'page', table: 'table' }\\n}\\nexport const withBasic = addSourceDecorator(addSourceDecorator(() => (\\n  <ThemeWrapper>\\n    <Box display='flex' justifyContent='space-evenly'>\\n      <IconButton\\n        onClick={action('clicked an Icon button with text')}\\n        primary={boolean('primary', false)}\\n        disabled={boolean('disabled', false)}\\n        intent={radios('intent', radioOptions.intent, 'default') as tIntent}\\n        iconVariant='icomoon-add'\\n        children='Add'\\n      />\\n      <IconButton\\n        onClick={action('clicked an Icon button with text')}\\n        primary={boolean('primary', false)}\\n        disabled={boolean('disabled', false)}\\n        intent={radios('intent', radioOptions.intent, 'default') as tIntent}\\n        iconVariant='icomoon-delete-empty'\\n        children='Delete'\\n      />\\n      <IconButton\\n        onClick={action('clicked an Icon button with text')}\\n        primary={boolean('primary', false)}\\n        disabled={boolean('disabled', false)}\\n        iconVariant='calendar'\\n        intent={radios('intent', radioOptions.intent, 'default') as tIntent}\\n        children='Calendar'\\n      />\\n    </Box>\\n  </ThemeWrapper>\\n), {__STORY__, __ADDS_MAP__,__MAIN_FILE_LOCATION__,__MODULE_DEPENDENCIES__,__LOCAL_DEPENDENCIES__,__SOURCE_PREFIX__,__IDS_TO_FRAMEWORKS__}), {__STORY__, __ADDS_MAP__,__MAIN_FILE_LOCATION__,__MODULE_DEPENDENCIES__,__LOCAL_DEPENDENCIES__,__SOURCE_PREFIX__,__IDS_TO_FRAMEWORKS__});;\\nexport const withCircular = addSourceDecorator(addSourceDecorator(() => (\\n  <ThemeWrapper>\\n    <Box display='flex' justifyContent='space-evenly'>\\n      <IconButton\\n        onClick={action('clicked an Icon button')}\\n        primary={boolean('primary', false)}\\n        disabled={boolean('disabled', false)}\\n        iconVariant='add'\\n        iconSize='xs'\\n        circle\\n      />\\n      <IconButton\\n        onClick={action('clicked an Icon button')}\\n        primary={boolean('primary', false)}\\n        disabled={boolean('disabled', false)}\\n        iconVariant='calendar'\\n        iconSize='md'\\n        circle\\n      />\\n    </Box>\\n  </ThemeWrapper>\\n), {__STORY__, __ADDS_MAP__,__MAIN_FILE_LOCATION__,__MODULE_DEPENDENCIES__,__LOCAL_DEPENDENCIES__,__SOURCE_PREFIX__,__IDS_TO_FRAMEWORKS__}), {__STORY__, __ADDS_MAP__,__MAIN_FILE_LOCATION__,__MODULE_DEPENDENCIES__,__LOCAL_DEPENDENCIES__,__SOURCE_PREFIX__,__IDS_TO_FRAMEWORKS__});;\\n\\nexport const withOnlyIcon = addSourceDecorator(addSourceDecorator(() => (\\n  <ThemeWrapper>\\n    <Box display='flex' justifyContent='space-evenly'>\\n      <IconButton\\n        onClick={action('clicked an Icon')}\\n        disabled={boolean('disabled', false)}\\n        onlyIcon\\n        iconVariant='add'\\n        iconSize='xs'\\n        color={text('Colors', 'primary.main')}\\n      />\\n      <IconButton\\n        onClick={action('clicked an Icon')}\\n        disabled={boolean('disabled', false)}\\n        onlyIcon\\n        iconVariant='calendar'\\n        iconSize='md'\\n        color={text('Colors', 'primary.main')}\\n      />\\n      <IconButton\\n        onClick={action('clicked an Icon')}\\n        disabled={boolean('disabled', false)}\\n        onlyIcon\\n        iconVariant='mail'\\n        iconSize='xl'\\n        color={text('Colors', 'primary.main')}\\n      />\\n    </Box>\\n  </ThemeWrapper>\\n), {__STORY__, __ADDS_MAP__,__MAIN_FILE_LOCATION__,__MODULE_DEPENDENCIES__,__LOCAL_DEPENDENCIES__,__SOURCE_PREFIX__,__IDS_TO_FRAMEWORKS__}), {__STORY__, __ADDS_MAP__,__MAIN_FILE_LOCATION__,__MODULE_DEPENDENCIES__,__LOCAL_DEPENDENCIES__,__SOURCE_PREFIX__,__IDS_TO_FRAMEWORKS__});;\\n\\nexport const withLink = addSourceDecorator(addSourceDecorator(() => (\\n  <ThemeWrapper>\\n    <Box display='flex' justifyContent='space-evenly'>\\n      <IconButton\\n        onClick={action('clicked an Icon')}\\n        disabled={boolean('disabled', false)}\\n        iconVariant='add'\\n        color={text('Colors', 'primary.main')}\\n        variant='link'\\n        children='Add'\\n      />\\n      <IconButton\\n        onClick={action('clicked an Icon')}\\n        disabled={boolean('disabled', false)}\\n        iconVariant='calendar'\\n        color={text('Colors', 'primary.main')}\\n        variant='link'\\n        children='Calendar'\\n      />\\n      <IconButton\\n        onClick={action('clicked an Icon')}\\n        disabled={boolean('disabled', false)}\\n        iconVariant='mail'\\n        color={text('Colors', 'primary.main')}\\n        variant='link'\\n        children='Mail'\\n      />\\n    </Box>\\n  </ThemeWrapper>\\n), {__STORY__, __ADDS_MAP__,__MAIN_FILE_LOCATION__,__MODULE_DEPENDENCIES__,__LOCAL_DEPENDENCIES__,__SOURCE_PREFIX__,__IDS_TO_FRAMEWORKS__}), {__STORY__, __ADDS_MAP__,__MAIN_FILE_LOCATION__,__MODULE_DEPENDENCIES__,__LOCAL_DEPENDENCIES__,__SOURCE_PREFIX__,__IDS_TO_FRAMEWORKS__});\"; // @ts-ignore\n\nvar __ADDS_MAP__ = {}; // @ts-ignore\n\nvar __MAIN_FILE_LOCATION__ = \"/IconButton.stories.tsx\"; // @ts-ignore\n\nvar __MODULE_DEPENDENCIES__ = []; // @ts-ignore\n\nvar __LOCAL_DEPENDENCIES__ = {}; // @ts-ignore\n\nvar __IDS_TO_FRAMEWORKS__ = {};\n/* eslint-disable */\n// @ts-nocheck\n// @ts-ignore\n\nvar withSourceLoader = require('@storybook/source-loader/preview').withSource; // @ts-ignore\n\n\nvar addSourceDecorator = require(\"@storybook/source-loader/preview\").addSource; // @ts-ignore\n\n\nvar __SOURCE_PREFIX__ = \"/Users/farhanansari/Desktop/CODE/PrxProject/untitled folder/reactStoryBook/src/components/atoms/IconButton\"; // @ts-ignore\n\nvar __STORY__ = \"\\n\\n// @ts-nocheck\\n// @ts-ignore\\nvar withSourceLoader = require('@storybook/source-loader/preview').withSource;\\n// @ts-ignore\\nvar addSourceDecorator = require(\\\"@storybook/source-loader/preview\\\").addSource;\\n// @ts-ignore\\nvar __SOURCE_PREFIX__ = \\\"/Users/farhanansari/Desktop/CODE/PrxProject/untitled folder/reactStoryBook/src/components/atoms/IconButton\\\";\\n// @ts-ignore\\nvar __STORY__ = \\\"import React from 'react'\\\\nimport { action } from '@storybook/addon-actions'\\\\nimport IconButton from '.'\\\\nimport Box from '../Box'\\\\nimport { withKnobs, boolean, text, radios } from '@storybook/addon-knobs'\\\\nimport { path } from '..'\\\\nimport ThemeWrapper from '../../../utilities/components/ThemeWrapper'\\\\nimport { tIntent } from '../Button'\\\\n\\\\nexport default {\\\\n  title: `${path}/IconButton`,\\\\n  decorators: [withKnobs],\\\\n  component: IconButton\\\\n}\\\\nconst radioOptions = {\\\\n  intent: { default: 'default', page: 'page', table: 'table' }\\\\n}\\\\nexport const withBasic = () => (\\\\n  <ThemeWrapper>\\\\n    <Box display='flex' justifyContent='space-evenly'>\\\\n      <IconButton\\\\n        onClick={action('clicked an Icon button with text')}\\\\n        primary={boolean('primary', false)}\\\\n        disabled={boolean('disabled', false)}\\\\n        intent={radios('intent', radioOptions.intent, 'default') as tIntent}\\\\n        iconVariant='icomoon-add'\\\\n        children='Add'\\\\n      />\\\\n      <IconButton\\\\n        onClick={action('clicked an Icon button with text')}\\\\n        primary={boolean('primary', false)}\\\\n        disabled={boolean('disabled', false)}\\\\n        intent={radios('intent', radioOptions.intent, 'default') as tIntent}\\\\n        iconVariant='icomoon-delete-empty'\\\\n        children='Delete'\\\\n      />\\\\n      <IconButton\\\\n        onClick={action('clicked an Icon button with text')}\\\\n        primary={boolean('primary', false)}\\\\n        disabled={boolean('disabled', false)}\\\\n        iconVariant='calendar'\\\\n        intent={radios('intent', radioOptions.intent, 'default') as tIntent}\\\\n        children='Calendar'\\\\n      />\\\\n    </Box>\\\\n  </ThemeWrapper>\\\\n)\\\\nexport const withCircular = () => (\\\\n  <ThemeWrapper>\\\\n    <Box display='flex' justifyContent='space-evenly'>\\\\n      <IconButton\\\\n        onClick={action('clicked an Icon button')}\\\\n        primary={boolean('primary', false)}\\\\n        disabled={boolean('disabled', false)}\\\\n        iconVariant='add'\\\\n        iconSize='xs'\\\\n        circle\\\\n      />\\\\n      <IconButton\\\\n        onClick={action('clicked an Icon button')}\\\\n        primary={boolean('primary', false)}\\\\n        disabled={boolean('disabled', false)}\\\\n        iconVariant='calendar'\\\\n        iconSize='md'\\\\n        circle\\\\n      />\\\\n    </Box>\\\\n  </ThemeWrapper>\\\\n)\\\\n\\\\nexport const withOnlyIcon = () => (\\\\n  <ThemeWrapper>\\\\n    <Box display='flex' justifyContent='space-evenly'>\\\\n      <IconButton\\\\n        onClick={action('clicked an Icon')}\\\\n        disabled={boolean('disabled', false)}\\\\n        onlyIcon\\\\n        iconVariant='add'\\\\n        iconSize='xs'\\\\n        color={text('Colors', 'primary.main')}\\\\n      />\\\\n      <IconButton\\\\n        onClick={action('clicked an Icon')}\\\\n        disabled={boolean('disabled', false)}\\\\n        onlyIcon\\\\n        iconVariant='calendar'\\\\n        iconSize='md'\\\\n        color={text('Colors', 'primary.main')}\\\\n      />\\\\n      <IconButton\\\\n        onClick={action('clicked an Icon')}\\\\n        disabled={boolean('disabled', false)}\\\\n        onlyIcon\\\\n        iconVariant='mail'\\\\n        iconSize='xl'\\\\n        color={text('Colors', 'primary.main')}\\\\n      />\\\\n    </Box>\\\\n  </ThemeWrapper>\\\\n)\\\\n\\\\nexport const withLink = () => (\\\\n  <ThemeWrapper>\\\\n    <Box display='flex' justifyContent='space-evenly'>\\\\n      <IconButton\\\\n        onClick={action('clicked an Icon')}\\\\n        disabled={boolean('disabled', false)}\\\\n        iconVariant='add'\\\\n        color={text('Colors', 'primary.main')}\\\\n        variant='link'\\\\n        children='Add'\\\\n      />\\\\n      <IconButton\\\\n        onClick={action('clicked an Icon')}\\\\n        disabled={boolean('disabled', false)}\\\\n        iconVariant='calendar'\\\\n        color={text('Colors', 'primary.main')}\\\\n        variant='link'\\\\n        children='Calendar'\\\\n      />\\\\n      <IconButton\\\\n        onClick={action('clicked an Icon')}\\\\n        disabled={boolean('disabled', false)}\\\\n        iconVariant='mail'\\\\n        color={text('Colors', 'primary.main')}\\\\n        variant='link'\\\\n        children='Mail'\\\\n      />\\\\n    </Box>\\\\n  </ThemeWrapper>\\\\n)\\\\n\\\";\\n// @ts-ignore\\nvar __ADDS_MAP__ = {};\\n// @ts-ignore\\nvar __MAIN_FILE_LOCATION__ = \\\"/IconButton.stories.tsx\\\";\\n// @ts-ignore\\nvar __MODULE_DEPENDENCIES__ = [];\\n// @ts-ignore\\nvar __LOCAL_DEPENDENCIES__ = {};\\n// @ts-ignore\\nvar __IDS_TO_FRAMEWORKS__ = {};\\n        \\nimport React from 'react'\\nimport { action } from '@storybook/addon-actions'\\nimport IconButton from '.'\\nimport Box from '../Box'\\nimport { withKnobs, boolean, text, radios } from '@storybook/addon-knobs'\\nimport { path } from '..'\\nimport ThemeWrapper from '../../../utilities/components/ThemeWrapper'\\nimport { tIntent } from '../Button'\\n\\nexport default {parameters: {\\\"storySource\\\":{\\\"source\\\":\\\"import React from 'react'\\\\nimport { action } from '@storybook/addon-actions'\\\\nimport IconButton from '.'\\\\nimport Box from '../Box'\\\\nimport { withKnobs, boolean, text, radios } from '@storybook/addon-knobs'\\\\nimport { path } from '..'\\\\nimport ThemeWrapper from '../../../utilities/components/ThemeWrapper'\\\\nimport { tIntent } from '../Button'\\\\n\\\\nexport default {\\\\n  title: `${path}/IconButton`,\\\\n  decorators: [withKnobs],\\\\n  component: IconButton\\\\n}\\\\nconst radioOptions = {\\\\n  intent: { default: 'default', page: 'page', table: 'table' }\\\\n}\\\\nexport const withBasic = () => (\\\\n  <ThemeWrapper>\\\\n    <Box display='flex' justifyContent='space-evenly'>\\\\n      <IconButton\\\\n        onClick={action('clicked an Icon button with text')}\\\\n        primary={boolean('primary', false)}\\\\n        disabled={boolean('disabled', false)}\\\\n        intent={radios('intent', radioOptions.intent, 'default') as tIntent}\\\\n        iconVariant='icomoon-add'\\\\n        children='Add'\\\\n      />\\\\n      <IconButton\\\\n        onClick={action('clicked an Icon button with text')}\\\\n        primary={boolean('primary', false)}\\\\n        disabled={boolean('disabled', false)}\\\\n        intent={radios('intent', radioOptions.intent, 'default') as tIntent}\\\\n        iconVariant='icomoon-delete-empty'\\\\n        children='Delete'\\\\n      />\\\\n      <IconButton\\\\n        onClick={action('clicked an Icon button with text')}\\\\n        primary={boolean('primary', false)}\\\\n        disabled={boolean('disabled', false)}\\\\n        iconVariant='calendar'\\\\n        intent={radios('intent', radioOptions.intent, 'default') as tIntent}\\\\n        children='Calendar'\\\\n      />\\\\n    </Box>\\\\n  </ThemeWrapper>\\\\n)\\\\nexport const withCircular = () => (\\\\n  <ThemeWrapper>\\\\n    <Box display='flex' justifyContent='space-evenly'>\\\\n      <IconButton\\\\n        onClick={action('clicked an Icon button')}\\\\n        primary={boolean('primary', false)}\\\\n        disabled={boolean('disabled', false)}\\\\n        iconVariant='add'\\\\n        iconSize='xs'\\\\n        circle\\\\n      />\\\\n      <IconButton\\\\n        onClick={action('clicked an Icon button')}\\\\n        primary={boolean('primary', false)}\\\\n        disabled={boolean('disabled', false)}\\\\n        iconVariant='calendar'\\\\n        iconSize='md'\\\\n        circle\\\\n      />\\\\n    </Box>\\\\n  </ThemeWrapper>\\\\n)\\\\n\\\\nexport const withOnlyIcon = () => (\\\\n  <ThemeWrapper>\\\\n    <Box display='flex' justifyContent='space-evenly'>\\\\n      <IconButton\\\\n        onClick={action('clicked an Icon')}\\\\n        disabled={boolean('disabled', false)}\\\\n        onlyIcon\\\\n        iconVariant='add'\\\\n        iconSize='xs'\\\\n        color={text('Colors', 'primary.main')}\\\\n      />\\\\n      <IconButton\\\\n        onClick={action('clicked an Icon')}\\\\n        disabled={boolean('disabled', false)}\\\\n        onlyIcon\\\\n        iconVariant='calendar'\\\\n        iconSize='md'\\\\n        color={text('Colors', 'primary.main')}\\\\n      />\\\\n      <IconButton\\\\n        onClick={action('clicked an Icon')}\\\\n        disabled={boolean('disabled', false)}\\\\n        onlyIcon\\\\n        iconVariant='mail'\\\\n        iconSize='xl'\\\\n        color={text('Colors', 'primary.main')}\\\\n      />\\\\n    </Box>\\\\n  </ThemeWrapper>\\\\n)\\\\n\\\\nexport const withLink = () => (\\\\n  <ThemeWrapper>\\\\n    <Box display='flex' justifyContent='space-evenly'>\\\\n      <IconButton\\\\n        onClick={action('clicked an Icon')}\\\\n        disabled={boolean('disabled', false)}\\\\n        iconVariant='add'\\\\n        color={text('Colors', 'primary.main')}\\\\n        variant='link'\\\\n        children='Add'\\\\n      />\\\\n      <IconButton\\\\n        onClick={action('clicked an Icon')}\\\\n        disabled={boolean('disabled', false)}\\\\n        iconVariant='calendar'\\\\n        color={text('Colors', 'primary.main')}\\\\n        variant='link'\\\\n        children='Calendar'\\\\n      />\\\\n      <IconButton\\\\n        onClick={action('clicked an Icon')}\\\\n        disabled={boolean('disabled', false)}\\\\n        iconVariant='mail'\\\\n        color={text('Colors', 'primary.main')}\\\\n        variant='link'\\\\n        children='Mail'\\\\n      />\\\\n    </Box>\\\\n  </ThemeWrapper>\\\\n)\\\\n\\\",\\\"locationsMap\\\":{}},},\\n  title: `${path}/IconButton`,\\n  decorators: [withKnobs],\\n  component: IconButton\\n}\\nconst radioOptions = {\\n  intent: { default: 'default', page: 'page', table: 'table' }\\n}\\nexport const withBasic = addSourceDecorator(() => (\\n  <ThemeWrapper>\\n    <Box display='flex' justifyContent='space-evenly'>\\n      <IconButton\\n        onClick={action('clicked an Icon button with text')}\\n        primary={boolean('primary', false)}\\n        disabled={boolean('disabled', false)}\\n        intent={radios('intent', radioOptions.intent, 'default') as tIntent}\\n        iconVariant='icomoon-add'\\n        children='Add'\\n      />\\n      <IconButton\\n        onClick={action('clicked an Icon button with text')}\\n        primary={boolean('primary', false)}\\n        disabled={boolean('disabled', false)}\\n        intent={radios('intent', radioOptions.intent, 'default') as tIntent}\\n        iconVariant='icomoon-delete-empty'\\n        children='Delete'\\n      />\\n      <IconButton\\n        onClick={action('clicked an Icon button with text')}\\n        primary={boolean('primary', false)}\\n        disabled={boolean('disabled', false)}\\n        iconVariant='calendar'\\n        intent={radios('intent', radioOptions.intent, 'default') as tIntent}\\n        children='Calendar'\\n      />\\n    </Box>\\n  </ThemeWrapper>\\n), {__STORY__, __ADDS_MAP__,__MAIN_FILE_LOCATION__,__MODULE_DEPENDENCIES__,__LOCAL_DEPENDENCIES__,__SOURCE_PREFIX__,__IDS_TO_FRAMEWORKS__});\\nexport const withCircular = addSourceDecorator(() => (\\n  <ThemeWrapper>\\n    <Box display='flex' justifyContent='space-evenly'>\\n      <IconButton\\n        onClick={action('clicked an Icon button')}\\n        primary={boolean('primary', false)}\\n        disabled={boolean('disabled', false)}\\n        iconVariant='add'\\n        iconSize='xs'\\n        circle\\n      />\\n      <IconButton\\n        onClick={action('clicked an Icon button')}\\n        primary={boolean('primary', false)}\\n        disabled={boolean('disabled', false)}\\n        iconVariant='calendar'\\n        iconSize='md'\\n        circle\\n      />\\n    </Box>\\n  </ThemeWrapper>\\n), {__STORY__, __ADDS_MAP__,__MAIN_FILE_LOCATION__,__MODULE_DEPENDENCIES__,__LOCAL_DEPENDENCIES__,__SOURCE_PREFIX__,__IDS_TO_FRAMEWORKS__});\\n\\nexport const withOnlyIcon = addSourceDecorator(() => (\\n  <ThemeWrapper>\\n    <Box display='flex' justifyContent='space-evenly'>\\n      <IconButton\\n        onClick={action('clicked an Icon')}\\n        disabled={boolean('disabled', false)}\\n        onlyIcon\\n        iconVariant='add'\\n        iconSize='xs'\\n        color={text('Colors', 'primary.main')}\\n      />\\n      <IconButton\\n        onClick={action('clicked an Icon')}\\n        disabled={boolean('disabled', false)}\\n        onlyIcon\\n        iconVariant='calendar'\\n        iconSize='md'\\n        color={text('Colors', 'primary.main')}\\n      />\\n      <IconButton\\n        onClick={action('clicked an Icon')}\\n        disabled={boolean('disabled', false)}\\n        onlyIcon\\n        iconVariant='mail'\\n        iconSize='xl'\\n        color={text('Colors', 'primary.main')}\\n      />\\n    </Box>\\n  </ThemeWrapper>\\n), {__STORY__, __ADDS_MAP__,__MAIN_FILE_LOCATION__,__MODULE_DEPENDENCIES__,__LOCAL_DEPENDENCIES__,__SOURCE_PREFIX__,__IDS_TO_FRAMEWORKS__});\\n\\nexport const withLink = addSourceDecorator(() => (\\n  <ThemeWrapper>\\n    <Box display='flex' justifyContent='space-evenly'>\\n      <IconButton\\n        onClick={action('clicked an Icon')}\\n        disabled={boolean('disabled', false)}\\n        iconVariant='add'\\n        color={text('Colors', 'primary.main')}\\n        variant='link'\\n        children='Add'\\n      />\\n      <IconButton\\n        onClick={action('clicked an Icon')}\\n        disabled={boolean('disabled', false)}\\n        iconVariant='calendar'\\n        color={text('Colors', 'primary.main')}\\n        variant='link'\\n        children='Calendar'\\n      />\\n      <IconButton\\n        onClick={action('clicked an Icon')}\\n        disabled={boolean('disabled', false)}\\n        iconVariant='mail'\\n        color={text('Colors', 'primary.main')}\\n        variant='link'\\n        children='Mail'\\n      />\\n    </Box>\\n  </ThemeWrapper>\\n), {__STORY__, __ADDS_MAP__,__MAIN_FILE_LOCATION__,__MODULE_DEPENDENCIES__,__LOCAL_DEPENDENCIES__,__SOURCE_PREFIX__,__IDS_TO_FRAMEWORKS__});\"; // @ts-ignore\n\nvar __ADDS_MAP__ = {}; // @ts-ignore\n\nvar __MAIN_FILE_LOCATION__ = \"/IconButton.stories.tsx\"; // @ts-ignore\n\nvar __MODULE_DEPENDENCIES__ = []; // @ts-ignore\n\nvar __LOCAL_DEPENDENCIES__ = {}; // @ts-ignore\n\nvar __IDS_TO_FRAMEWORKS__ = {};\n/* eslint-disable */\n// @ts-nocheck\n// @ts-ignore\n\nvar withSourceLoader = require('@storybook/source-loader/preview').withSource; // @ts-ignore\n\n\nvar addSourceDecorator = require(\"@storybook/source-loader/preview\").addSource; // @ts-ignore\n\n\nvar __SOURCE_PREFIX__ = \"/Users/farhanansari/Desktop/CODE/PrxProject/untitled folder/reactStoryBook/src/components/atoms/IconButton\"; // @ts-ignore\n\nvar __STORY__ = \"import React from 'react'\\nimport { action } from '@storybook/addon-actions'\\nimport IconButton from '.'\\nimport Box from '../Box'\\nimport { withKnobs, boolean, text, radios } from '@storybook/addon-knobs'\\nimport { path } from '..'\\nimport ThemeWrapper from '../../../utilities/components/ThemeWrapper'\\nimport { tIntent } from '../Button'\\n\\nexport default {\\n  title: `${path}/IconButton`,\\n  decorators: [withKnobs],\\n  component: IconButton\\n}\\nconst radioOptions = {\\n  intent: { default: 'default', page: 'page', table: 'table' }\\n}\\nexport const withBasic = () => (\\n  <ThemeWrapper>\\n    <Box display='flex' justifyContent='space-evenly'>\\n      <IconButton\\n        onClick={action('clicked an Icon button with text')}\\n        primary={boolean('primary', false)}\\n        disabled={boolean('disabled', false)}\\n        intent={radios('intent', radioOptions.intent, 'default') as tIntent}\\n        iconVariant='icomoon-add'\\n        children='Add'\\n      />\\n      <IconButton\\n        onClick={action('clicked an Icon button with text')}\\n        primary={boolean('primary', false)}\\n        disabled={boolean('disabled', false)}\\n        intent={radios('intent', radioOptions.intent, 'default') as tIntent}\\n        iconVariant='icomoon-delete-empty'\\n        children='Delete'\\n      />\\n      <IconButton\\n        onClick={action('clicked an Icon button with text')}\\n        primary={boolean('primary', false)}\\n        disabled={boolean('disabled', false)}\\n        iconVariant='calendar'\\n        intent={radios('intent', radioOptions.intent, 'default') as tIntent}\\n        children='Calendar'\\n      />\\n    </Box>\\n  </ThemeWrapper>\\n)\\nexport const withCircular = () => (\\n  <ThemeWrapper>\\n    <Box display='flex' justifyContent='space-evenly'>\\n      <IconButton\\n        onClick={action('clicked an Icon button')}\\n        primary={boolean('primary', false)}\\n        disabled={boolean('disabled', false)}\\n        iconVariant='add'\\n        iconSize='xs'\\n        circle\\n      />\\n      <IconButton\\n        onClick={action('clicked an Icon button')}\\n        primary={boolean('primary', false)}\\n        disabled={boolean('disabled', false)}\\n        iconVariant='calendar'\\n        iconSize='md'\\n        circle\\n      />\\n    </Box>\\n  </ThemeWrapper>\\n)\\n\\nexport const withOnlyIcon = () => (\\n  <ThemeWrapper>\\n    <Box display='flex' justifyContent='space-evenly'>\\n      <IconButton\\n        onClick={action('clicked an Icon')}\\n        disabled={boolean('disabled', false)}\\n        onlyIcon\\n        iconVariant='add'\\n        iconSize='xs'\\n        color={text('Colors', 'primary.main')}\\n      />\\n      <IconButton\\n        onClick={action('clicked an Icon')}\\n        disabled={boolean('disabled', false)}\\n        onlyIcon\\n        iconVariant='calendar'\\n        iconSize='md'\\n        color={text('Colors', 'primary.main')}\\n      />\\n      <IconButton\\n        onClick={action('clicked an Icon')}\\n        disabled={boolean('disabled', false)}\\n        onlyIcon\\n        iconVariant='mail'\\n        iconSize='xl'\\n        color={text('Colors', 'primary.main')}\\n      />\\n    </Box>\\n  </ThemeWrapper>\\n)\\n\\nexport const withLink = () => (\\n  <ThemeWrapper>\\n    <Box display='flex' justifyContent='space-evenly'>\\n      <IconButton\\n        onClick={action('clicked an Icon')}\\n        disabled={boolean('disabled', false)}\\n        iconVariant='add'\\n        color={text('Colors', 'primary.main')}\\n        variant='link'\\n        children='Add'\\n      />\\n      <IconButton\\n        onClick={action('clicked an Icon')}\\n        disabled={boolean('disabled', false)}\\n        iconVariant='calendar'\\n        color={text('Colors', 'primary.main')}\\n        variant='link'\\n        children='Calendar'\\n      />\\n      <IconButton\\n        onClick={action('clicked an Icon')}\\n        disabled={boolean('disabled', false)}\\n        iconVariant='mail'\\n        color={text('Colors', 'primary.main')}\\n        variant='link'\\n        children='Mail'\\n      />\\n    </Box>\\n  </ThemeWrapper>\\n)\\n\"; // @ts-ignore\n\nvar __ADDS_MAP__ = {}; // @ts-ignore\n\nvar __MAIN_FILE_LOCATION__ = \"/IconButton.stories.tsx\"; // @ts-ignore\n\nvar __MODULE_DEPENDENCIES__ = []; // @ts-ignore\n\nvar __LOCAL_DEPENDENCIES__ = {}; // @ts-ignore\n\nvar __IDS_TO_FRAMEWORKS__ = {};\nimport React from 'react';\nimport { action } from '@storybook/addon-actions';\nimport IconButton from '.';\nimport Box from '../Box';\nimport { withKnobs, boolean as _boolean, text, radios } from '@storybook/addon-knobs';\nimport { path } from '..';\nimport ThemeWrapper from '../../../utilities/components/ThemeWrapper';\nexport default {\n  parameters: (_parameters = {\n    \"storySource\": {\n      \"source\": \"\\n\\n// @ts-nocheck\\n// @ts-ignore\\nvar withSourceLoader = require('@storybook/source-loader/preview').withSource;\\n// @ts-ignore\\nvar addSourceDecorator = require(\\\"@storybook/source-loader/preview\\\").addSource;\\n// @ts-ignore\\nvar __SOURCE_PREFIX__ = \\\"/Users/farhanansari/Desktop/CODE/PrxProject/untitled folder/reactStoryBook/src/components/atoms/IconButton\\\";\\n// @ts-ignore\\nvar __STORY__ = \\\"\\\\n\\\\n// @ts-nocheck\\\\n// @ts-ignore\\\\nvar withSourceLoader = require('@storybook/source-loader/preview').withSource;\\\\n// @ts-ignore\\\\nvar addSourceDecorator = require(\\\\\\\"@storybook/source-loader/preview\\\\\\\").addSource;\\\\n// @ts-ignore\\\\nvar __SOURCE_PREFIX__ = \\\\\\\"/Users/farhanansari/Desktop/CODE/PrxProject/untitled folder/reactStoryBook/src/components/atoms/IconButton\\\\\\\";\\\\n// @ts-ignore\\\\nvar __STORY__ = \\\\\\\"import React from 'react'\\\\\\\\nimport { action } from '@storybook/addon-actions'\\\\\\\\nimport IconButton from '.'\\\\\\\\nimport Box from '../Box'\\\\\\\\nimport { withKnobs, boolean, text, radios } from '@storybook/addon-knobs'\\\\\\\\nimport { path } from '..'\\\\\\\\nimport ThemeWrapper from '../../../utilities/components/ThemeWrapper'\\\\\\\\nimport { tIntent } from '../Button'\\\\\\\\n\\\\\\\\nexport default {\\\\\\\\n  title: `${path}/IconButton`,\\\\\\\\n  decorators: [withKnobs],\\\\\\\\n  component: IconButton\\\\\\\\n}\\\\\\\\nconst radioOptions = {\\\\\\\\n  intent: { default: 'default', page: 'page', table: 'table' }\\\\\\\\n}\\\\\\\\nexport const withBasic = () => (\\\\\\\\n  <ThemeWrapper>\\\\\\\\n    <Box display='flex' justifyContent='space-evenly'>\\\\\\\\n      <IconButton\\\\\\\\n        onClick={action('clicked an Icon button with text')}\\\\\\\\n        primary={boolean('primary', false)}\\\\\\\\n        disabled={boolean('disabled', false)}\\\\\\\\n        intent={radios('intent', radioOptions.intent, 'default') as tIntent}\\\\\\\\n        iconVariant='icomoon-add'\\\\\\\\n        children='Add'\\\\\\\\n      />\\\\\\\\n      <IconButton\\\\\\\\n        onClick={action('clicked an Icon button with text')}\\\\\\\\n        primary={boolean('primary', false)}\\\\\\\\n        disabled={boolean('disabled', false)}\\\\\\\\n        intent={radios('intent', radioOptions.intent, 'default') as tIntent}\\\\\\\\n        iconVariant='icomoon-delete-empty'\\\\\\\\n        children='Delete'\\\\\\\\n      />\\\\\\\\n      <IconButton\\\\\\\\n        onClick={action('clicked an Icon button with text')}\\\\\\\\n        primary={boolean('primary', false)}\\\\\\\\n        disabled={boolean('disabled', false)}\\\\\\\\n        iconVariant='calendar'\\\\\\\\n        intent={radios('intent', radioOptions.intent, 'default') as tIntent}\\\\\\\\n        children='Calendar'\\\\\\\\n      />\\\\\\\\n    </Box>\\\\\\\\n  </ThemeWrapper>\\\\\\\\n)\\\\\\\\nexport const withCircular = () => (\\\\\\\\n  <ThemeWrapper>\\\\\\\\n    <Box display='flex' justifyContent='space-evenly'>\\\\\\\\n      <IconButton\\\\\\\\n        onClick={action('clicked an Icon button')}\\\\\\\\n        primary={boolean('primary', false)}\\\\\\\\n        disabled={boolean('disabled', false)}\\\\\\\\n        iconVariant='add'\\\\\\\\n        iconSize='xs'\\\\\\\\n        circle\\\\\\\\n      />\\\\\\\\n      <IconButton\\\\\\\\n        onClick={action('clicked an Icon button')}\\\\\\\\n        primary={boolean('primary', false)}\\\\\\\\n        disabled={boolean('disabled', false)}\\\\\\\\n        iconVariant='calendar'\\\\\\\\n        iconSize='md'\\\\\\\\n        circle\\\\\\\\n      />\\\\\\\\n    </Box>\\\\\\\\n  </ThemeWrapper>\\\\\\\\n)\\\\\\\\n\\\\\\\\nexport const withOnlyIcon = () => (\\\\\\\\n  <ThemeWrapper>\\\\\\\\n    <Box display='flex' justifyContent='space-evenly'>\\\\\\\\n      <IconButton\\\\\\\\n        onClick={action('clicked an Icon')}\\\\\\\\n        disabled={boolean('disabled', false)}\\\\\\\\n        onlyIcon\\\\\\\\n        iconVariant='add'\\\\\\\\n        iconSize='xs'\\\\\\\\n        color={text('Colors', 'primary.main')}\\\\\\\\n      />\\\\\\\\n      <IconButton\\\\\\\\n        onClick={action('clicked an Icon')}\\\\\\\\n        disabled={boolean('disabled', false)}\\\\\\\\n        onlyIcon\\\\\\\\n        iconVariant='calendar'\\\\\\\\n        iconSize='md'\\\\\\\\n        color={text('Colors', 'primary.main')}\\\\\\\\n      />\\\\\\\\n      <IconButton\\\\\\\\n        onClick={action('clicked an Icon')}\\\\\\\\n        disabled={boolean('disabled', false)}\\\\\\\\n        onlyIcon\\\\\\\\n        iconVariant='mail'\\\\\\\\n        iconSize='xl'\\\\\\\\n        color={text('Colors', 'primary.main')}\\\\\\\\n      />\\\\\\\\n    </Box>\\\\\\\\n  </ThemeWrapper>\\\\\\\\n)\\\\\\\\n\\\\\\\\nexport const withLink = () => (\\\\\\\\n  <ThemeWrapper>\\\\\\\\n    <Box display='flex' justifyContent='space-evenly'>\\\\\\\\n      <IconButton\\\\\\\\n        onClick={action('clicked an Icon')}\\\\\\\\n        disabled={boolean('disabled', false)}\\\\\\\\n        iconVariant='add'\\\\\\\\n        color={text('Colors', 'primary.main')}\\\\\\\\n        variant='link'\\\\\\\\n        children='Add'\\\\\\\\n      />\\\\\\\\n      <IconButton\\\\\\\\n        onClick={action('clicked an Icon')}\\\\\\\\n        disabled={boolean('disabled', false)}\\\\\\\\n        iconVariant='calendar'\\\\\\\\n        color={text('Colors', 'primary.main')}\\\\\\\\n        variant='link'\\\\\\\\n        children='Calendar'\\\\\\\\n      />\\\\\\\\n      <IconButton\\\\\\\\n        onClick={action('clicked an Icon')}\\\\\\\\n        disabled={boolean('disabled', false)}\\\\\\\\n        iconVariant='mail'\\\\\\\\n        color={text('Colors', 'primary.main')}\\\\\\\\n        variant='link'\\\\\\\\n        children='Mail'\\\\\\\\n      />\\\\\\\\n    </Box>\\\\\\\\n  </ThemeWrapper>\\\\\\\\n)\\\\\\\\n\\\\\\\";\\\\n// @ts-ignore\\\\nvar __ADDS_MAP__ = {};\\\\n// @ts-ignore\\\\nvar __MAIN_FILE_LOCATION__ = \\\\\\\"/IconButton.stories.tsx\\\\\\\";\\\\n// @ts-ignore\\\\nvar __MODULE_DEPENDENCIES__ = [];\\\\n// @ts-ignore\\\\nvar __LOCAL_DEPENDENCIES__ = {};\\\\n// @ts-ignore\\\\nvar __IDS_TO_FRAMEWORKS__ = {};\\\\n        \\\\nimport React from 'react'\\\\nimport { action } from '@storybook/addon-actions'\\\\nimport IconButton from '.'\\\\nimport Box from '../Box'\\\\nimport { withKnobs, boolean, text, radios } from '@storybook/addon-knobs'\\\\nimport { path } from '..'\\\\nimport ThemeWrapper from '../../../utilities/components/ThemeWrapper'\\\\nimport { tIntent } from '../Button'\\\\n\\\\nexport default {parameters: {\\\\\\\"storySource\\\\\\\":{\\\\\\\"source\\\\\\\":\\\\\\\"import React from 'react'\\\\\\\\nimport { action } from '@storybook/addon-actions'\\\\\\\\nimport IconButton from '.'\\\\\\\\nimport Box from '../Box'\\\\\\\\nimport { withKnobs, boolean, text, radios } from '@storybook/addon-knobs'\\\\\\\\nimport { path } from '..'\\\\\\\\nimport ThemeWrapper from '../../../utilities/components/ThemeWrapper'\\\\\\\\nimport { tIntent } from '../Button'\\\\\\\\n\\\\\\\\nexport default {\\\\\\\\n  title: `${path}/IconButton`,\\\\\\\\n  decorators: [withKnobs],\\\\\\\\n  component: IconButton\\\\\\\\n}\\\\\\\\nconst radioOptions = {\\\\\\\\n  intent: { default: 'default', page: 'page', table: 'table' }\\\\\\\\n}\\\\\\\\nexport const withBasic = () => (\\\\\\\\n  <ThemeWrapper>\\\\\\\\n    <Box display='flex' justifyContent='space-evenly'>\\\\\\\\n      <IconButton\\\\\\\\n        onClick={action('clicked an Icon button with text')}\\\\\\\\n        primary={boolean('primary', false)}\\\\\\\\n        disabled={boolean('disabled', false)}\\\\\\\\n        intent={radios('intent', radioOptions.intent, 'default') as tIntent}\\\\\\\\n        iconVariant='icomoon-add'\\\\\\\\n        children='Add'\\\\\\\\n      />\\\\\\\\n      <IconButton\\\\\\\\n        onClick={action('clicked an Icon button with text')}\\\\\\\\n        primary={boolean('primary', false)}\\\\\\\\n        disabled={boolean('disabled', false)}\\\\\\\\n        intent={radios('intent', radioOptions.intent, 'default') as tIntent}\\\\\\\\n        iconVariant='icomoon-delete-empty'\\\\\\\\n        children='Delete'\\\\\\\\n      />\\\\\\\\n      <IconButton\\\\\\\\n        onClick={action('clicked an Icon button with text')}\\\\\\\\n        primary={boolean('primary', false)}\\\\\\\\n        disabled={boolean('disabled', false)}\\\\\\\\n        iconVariant='calendar'\\\\\\\\n        intent={radios('intent', radioOptions.intent, 'default') as tIntent}\\\\\\\\n        children='Calendar'\\\\\\\\n      />\\\\\\\\n    </Box>\\\\\\\\n  </ThemeWrapper>\\\\\\\\n)\\\\\\\\nexport const withCircular = () => (\\\\\\\\n  <ThemeWrapper>\\\\\\\\n    <Box display='flex' justifyContent='space-evenly'>\\\\\\\\n      <IconButton\\\\\\\\n        onClick={action('clicked an Icon button')}\\\\\\\\n        primary={boolean('primary', false)}\\\\\\\\n        disabled={boolean('disabled', false)}\\\\\\\\n        iconVariant='add'\\\\\\\\n        iconSize='xs'\\\\\\\\n        circle\\\\\\\\n      />\\\\\\\\n      <IconButton\\\\\\\\n        onClick={action('clicked an Icon button')}\\\\\\\\n        primary={boolean('primary', false)}\\\\\\\\n        disabled={boolean('disabled', false)}\\\\\\\\n        iconVariant='calendar'\\\\\\\\n        iconSize='md'\\\\\\\\n        circle\\\\\\\\n      />\\\\\\\\n    </Box>\\\\\\\\n  </ThemeWrapper>\\\\\\\\n)\\\\\\\\n\\\\\\\\nexport const withOnlyIcon = () => (\\\\\\\\n  <ThemeWrapper>\\\\\\\\n    <Box display='flex' justifyContent='space-evenly'>\\\\\\\\n      <IconButton\\\\\\\\n        onClick={action('clicked an Icon')}\\\\\\\\n        disabled={boolean('disabled', false)}\\\\\\\\n        onlyIcon\\\\\\\\n        iconVariant='add'\\\\\\\\n        iconSize='xs'\\\\\\\\n        color={text('Colors', 'primary.main')}\\\\\\\\n      />\\\\\\\\n      <IconButton\\\\\\\\n        onClick={action('clicked an Icon')}\\\\\\\\n        disabled={boolean('disabled', false)}\\\\\\\\n        onlyIcon\\\\\\\\n        iconVariant='calendar'\\\\\\\\n        iconSize='md'\\\\\\\\n        color={text('Colors', 'primary.main')}\\\\\\\\n      />\\\\\\\\n      <IconButton\\\\\\\\n        onClick={action('clicked an Icon')}\\\\\\\\n        disabled={boolean('disabled', false)}\\\\\\\\n        onlyIcon\\\\\\\\n        iconVariant='mail'\\\\\\\\n        iconSize='xl'\\\\\\\\n        color={text('Colors', 'primary.main')}\\\\\\\\n      />\\\\\\\\n    </Box>\\\\\\\\n  </ThemeWrapper>\\\\\\\\n)\\\\\\\\n\\\\\\\\nexport const withLink = () => (\\\\\\\\n  <ThemeWrapper>\\\\\\\\n    <Box display='flex' justifyContent='space-evenly'>\\\\\\\\n      <IconButton\\\\\\\\n        onClick={action('clicked an Icon')}\\\\\\\\n        disabled={boolean('disabled', false)}\\\\\\\\n        iconVariant='add'\\\\\\\\n        color={text('Colors', 'primary.main')}\\\\\\\\n        variant='link'\\\\\\\\n        children='Add'\\\\\\\\n      />\\\\\\\\n      <IconButton\\\\\\\\n        onClick={action('clicked an Icon')}\\\\\\\\n        disabled={boolean('disabled', false)}\\\\\\\\n        iconVariant='calendar'\\\\\\\\n        color={text('Colors', 'primary.main')}\\\\\\\\n        variant='link'\\\\\\\\n        children='Calendar'\\\\\\\\n      />\\\\\\\\n      <IconButton\\\\\\\\n        onClick={action('clicked an Icon')}\\\\\\\\n        disabled={boolean('disabled', false)}\\\\\\\\n        iconVariant='mail'\\\\\\\\n        color={text('Colors', 'primary.main')}\\\\\\\\n        variant='link'\\\\\\\\n        children='Mail'\\\\\\\\n      />\\\\\\\\n    </Box>\\\\\\\\n  </ThemeWrapper>\\\\\\\\n)\\\\\\\\n\\\\\\\",\\\\\\\"locationsMap\\\\\\\":{}},},\\\\n  title: `${path}/IconButton`,\\\\n  decorators: [withKnobs],\\\\n  component: IconButton\\\\n}\\\\nconst radioOptions = {\\\\n  intent: { default: 'default', page: 'page', table: 'table' }\\\\n}\\\\nexport const withBasic = addSourceDecorator(() => (\\\\n  <ThemeWrapper>\\\\n    <Box display='flex' justifyContent='space-evenly'>\\\\n      <IconButton\\\\n        onClick={action('clicked an Icon button with text')}\\\\n        primary={boolean('primary', false)}\\\\n        disabled={boolean('disabled', false)}\\\\n        intent={radios('intent', radioOptions.intent, 'default') as tIntent}\\\\n        iconVariant='icomoon-add'\\\\n        children='Add'\\\\n      />\\\\n      <IconButton\\\\n        onClick={action('clicked an Icon button with text')}\\\\n        primary={boolean('primary', false)}\\\\n        disabled={boolean('disabled', false)}\\\\n        intent={radios('intent', radioOptions.intent, 'default') as tIntent}\\\\n        iconVariant='icomoon-delete-empty'\\\\n        children='Delete'\\\\n      />\\\\n      <IconButton\\\\n        onClick={action('clicked an Icon button with text')}\\\\n        primary={boolean('primary', false)}\\\\n        disabled={boolean('disabled', false)}\\\\n        iconVariant='calendar'\\\\n        intent={radios('intent', radioOptions.intent, 'default') as tIntent}\\\\n        children='Calendar'\\\\n      />\\\\n    </Box>\\\\n  </ThemeWrapper>\\\\n), {__STORY__, __ADDS_MAP__,__MAIN_FILE_LOCATION__,__MODULE_DEPENDENCIES__,__LOCAL_DEPENDENCIES__,__SOURCE_PREFIX__,__IDS_TO_FRAMEWORKS__});\\\\nexport const withCircular = addSourceDecorator(() => (\\\\n  <ThemeWrapper>\\\\n    <Box display='flex' justifyContent='space-evenly'>\\\\n      <IconButton\\\\n        onClick={action('clicked an Icon button')}\\\\n        primary={boolean('primary', false)}\\\\n        disabled={boolean('disabled', false)}\\\\n        iconVariant='add'\\\\n        iconSize='xs'\\\\n        circle\\\\n      />\\\\n      <IconButton\\\\n        onClick={action('clicked an Icon button')}\\\\n        primary={boolean('primary', false)}\\\\n        disabled={boolean('disabled', false)}\\\\n        iconVariant='calendar'\\\\n        iconSize='md'\\\\n        circle\\\\n      />\\\\n    </Box>\\\\n  </ThemeWrapper>\\\\n), {__STORY__, __ADDS_MAP__,__MAIN_FILE_LOCATION__,__MODULE_DEPENDENCIES__,__LOCAL_DEPENDENCIES__,__SOURCE_PREFIX__,__IDS_TO_FRAMEWORKS__});\\\\n\\\\nexport const withOnlyIcon = addSourceDecorator(() => (\\\\n  <ThemeWrapper>\\\\n    <Box display='flex' justifyContent='space-evenly'>\\\\n      <IconButton\\\\n        onClick={action('clicked an Icon')}\\\\n        disabled={boolean('disabled', false)}\\\\n        onlyIcon\\\\n        iconVariant='add'\\\\n        iconSize='xs'\\\\n        color={text('Colors', 'primary.main')}\\\\n      />\\\\n      <IconButton\\\\n        onClick={action('clicked an Icon')}\\\\n        disabled={boolean('disabled', false)}\\\\n        onlyIcon\\\\n        iconVariant='calendar'\\\\n        iconSize='md'\\\\n        color={text('Colors', 'primary.main')}\\\\n      />\\\\n      <IconButton\\\\n        onClick={action('clicked an Icon')}\\\\n        disabled={boolean('disabled', false)}\\\\n        onlyIcon\\\\n        iconVariant='mail'\\\\n        iconSize='xl'\\\\n        color={text('Colors', 'primary.main')}\\\\n      />\\\\n    </Box>\\\\n  </ThemeWrapper>\\\\n), {__STORY__, __ADDS_MAP__,__MAIN_FILE_LOCATION__,__MODULE_DEPENDENCIES__,__LOCAL_DEPENDENCIES__,__SOURCE_PREFIX__,__IDS_TO_FRAMEWORKS__});\\\\n\\\\nexport const withLink = addSourceDecorator(() => (\\\\n  <ThemeWrapper>\\\\n    <Box display='flex' justifyContent='space-evenly'>\\\\n      <IconButton\\\\n        onClick={action('clicked an Icon')}\\\\n        disabled={boolean('disabled', false)}\\\\n        iconVariant='add'\\\\n        color={text('Colors', 'primary.main')}\\\\n        variant='link'\\\\n        children='Add'\\\\n      />\\\\n      <IconButton\\\\n        onClick={action('clicked an Icon')}\\\\n        disabled={boolean('disabled', false)}\\\\n        iconVariant='calendar'\\\\n        color={text('Colors', 'primary.main')}\\\\n        variant='link'\\\\n        children='Calendar'\\\\n      />\\\\n      <IconButton\\\\n        onClick={action('clicked an Icon')}\\\\n        disabled={boolean('disabled', false)}\\\\n        iconVariant='mail'\\\\n        color={text('Colors', 'primary.main')}\\\\n        variant='link'\\\\n        children='Mail'\\\\n      />\\\\n    </Box>\\\\n  </ThemeWrapper>\\\\n), {__STORY__, __ADDS_MAP__,__MAIN_FILE_LOCATION__,__MODULE_DEPENDENCIES__,__LOCAL_DEPENDENCIES__,__SOURCE_PREFIX__,__IDS_TO_FRAMEWORKS__});\\\";\\n// @ts-ignore\\nvar __ADDS_MAP__ = {};\\n// @ts-ignore\\nvar __MAIN_FILE_LOCATION__ = \\\"/IconButton.stories.tsx\\\";\\n// @ts-ignore\\nvar __MODULE_DEPENDENCIES__ = [];\\n// @ts-ignore\\nvar __LOCAL_DEPENDENCIES__ = {};\\n// @ts-ignore\\nvar __IDS_TO_FRAMEWORKS__ = {};\\n        \\n\\n\\n// @ts-nocheck\\n// @ts-ignore\\nvar withSourceLoader = require('@storybook/source-loader/preview').withSource;\\n// @ts-ignore\\nvar addSourceDecorator = require(\\\"@storybook/source-loader/preview\\\").addSource;\\n// @ts-ignore\\nvar __SOURCE_PREFIX__ = \\\"/Users/farhanansari/Desktop/CODE/PrxProject/untitled folder/reactStoryBook/src/components/atoms/IconButton\\\";\\n// @ts-ignore\\nvar __STORY__ = \\\"import React from 'react'\\\\nimport { action } from '@storybook/addon-actions'\\\\nimport IconButton from '.'\\\\nimport Box from '../Box'\\\\nimport { withKnobs, boolean, text, radios } from '@storybook/addon-knobs'\\\\nimport { path } from '..'\\\\nimport ThemeWrapper from '../../../utilities/components/ThemeWrapper'\\\\nimport { tIntent } from '../Button'\\\\n\\\\nexport default {\\\\n  title: `${path}/IconButton`,\\\\n  decorators: [withKnobs],\\\\n  component: IconButton\\\\n}\\\\nconst radioOptions = {\\\\n  intent: { default: 'default', page: 'page', table: 'table' }\\\\n}\\\\nexport const withBasic = () => (\\\\n  <ThemeWrapper>\\\\n    <Box display='flex' justifyContent='space-evenly'>\\\\n      <IconButton\\\\n        onClick={action('clicked an Icon button with text')}\\\\n        primary={boolean('primary', false)}\\\\n        disabled={boolean('disabled', false)}\\\\n        intent={radios('intent', radioOptions.intent, 'default') as tIntent}\\\\n        iconVariant='icomoon-add'\\\\n        children='Add'\\\\n      />\\\\n      <IconButton\\\\n        onClick={action('clicked an Icon button with text')}\\\\n        primary={boolean('primary', false)}\\\\n        disabled={boolean('disabled', false)}\\\\n        intent={radios('intent', radioOptions.intent, 'default') as tIntent}\\\\n        iconVariant='icomoon-delete-empty'\\\\n        children='Delete'\\\\n      />\\\\n      <IconButton\\\\n        onClick={action('clicked an Icon button with text')}\\\\n        primary={boolean('primary', false)}\\\\n        disabled={boolean('disabled', false)}\\\\n        iconVariant='calendar'\\\\n        intent={radios('intent', radioOptions.intent, 'default') as tIntent}\\\\n        children='Calendar'\\\\n      />\\\\n    </Box>\\\\n  </ThemeWrapper>\\\\n)\\\\nexport const withCircular = () => (\\\\n  <ThemeWrapper>\\\\n    <Box display='flex' justifyContent='space-evenly'>\\\\n      <IconButton\\\\n        onClick={action('clicked an Icon button')}\\\\n        primary={boolean('primary', false)}\\\\n        disabled={boolean('disabled', false)}\\\\n        iconVariant='add'\\\\n        iconSize='xs'\\\\n        circle\\\\n      />\\\\n      <IconButton\\\\n        onClick={action('clicked an Icon button')}\\\\n        primary={boolean('primary', false)}\\\\n        disabled={boolean('disabled', false)}\\\\n        iconVariant='calendar'\\\\n        iconSize='md'\\\\n        circle\\\\n      />\\\\n    </Box>\\\\n  </ThemeWrapper>\\\\n)\\\\n\\\\nexport const withOnlyIcon = () => (\\\\n  <ThemeWrapper>\\\\n    <Box display='flex' justifyContent='space-evenly'>\\\\n      <IconButton\\\\n        onClick={action('clicked an Icon')}\\\\n        disabled={boolean('disabled', false)}\\\\n        onlyIcon\\\\n        iconVariant='add'\\\\n        iconSize='xs'\\\\n        color={text('Colors', 'primary.main')}\\\\n      />\\\\n      <IconButton\\\\n        onClick={action('clicked an Icon')}\\\\n        disabled={boolean('disabled', false)}\\\\n        onlyIcon\\\\n        iconVariant='calendar'\\\\n        iconSize='md'\\\\n        color={text('Colors', 'primary.main')}\\\\n      />\\\\n      <IconButton\\\\n        onClick={action('clicked an Icon')}\\\\n        disabled={boolean('disabled', false)}\\\\n        onlyIcon\\\\n        iconVariant='mail'\\\\n        iconSize='xl'\\\\n        color={text('Colors', 'primary.main')}\\\\n      />\\\\n    </Box>\\\\n  </ThemeWrapper>\\\\n)\\\\n\\\\nexport const withLink = () => (\\\\n  <ThemeWrapper>\\\\n    <Box display='flex' justifyContent='space-evenly'>\\\\n      <IconButton\\\\n        onClick={action('clicked an Icon')}\\\\n        disabled={boolean('disabled', false)}\\\\n        iconVariant='add'\\\\n        color={text('Colors', 'primary.main')}\\\\n        variant='link'\\\\n        children='Add'\\\\n      />\\\\n      <IconButton\\\\n        onClick={action('clicked an Icon')}\\\\n        disabled={boolean('disabled', false)}\\\\n        iconVariant='calendar'\\\\n        color={text('Colors', 'primary.main')}\\\\n        variant='link'\\\\n        children='Calendar'\\\\n      />\\\\n      <IconButton\\\\n        onClick={action('clicked an Icon')}\\\\n        disabled={boolean('disabled', false)}\\\\n        iconVariant='mail'\\\\n        color={text('Colors', 'primary.main')}\\\\n        variant='link'\\\\n        children='Mail'\\\\n      />\\\\n    </Box>\\\\n  </ThemeWrapper>\\\\n)\\\\n\\\";\\n// @ts-ignore\\nvar __ADDS_MAP__ = {};\\n// @ts-ignore\\nvar __MAIN_FILE_LOCATION__ = \\\"/IconButton.stories.tsx\\\";\\n// @ts-ignore\\nvar __MODULE_DEPENDENCIES__ = [];\\n// @ts-ignore\\nvar __LOCAL_DEPENDENCIES__ = {};\\n// @ts-ignore\\nvar __IDS_TO_FRAMEWORKS__ = {};\\n        \\nimport React from 'react'\\nimport { action } from '@storybook/addon-actions'\\nimport IconButton from '.'\\nimport Box from '../Box'\\nimport { withKnobs, boolean, text, radios } from '@storybook/addon-knobs'\\nimport { path } from '..'\\nimport ThemeWrapper from '../../../utilities/components/ThemeWrapper'\\nimport { tIntent } from '../Button'\\n\\nexport default {parameters: {\\\"storySource\\\":{\\\"source\\\":\\\"\\\\n\\\\n// @ts-nocheck\\\\n// @ts-ignore\\\\nvar withSourceLoader = require('@storybook/source-loader/preview').withSource;\\\\n// @ts-ignore\\\\nvar addSourceDecorator = require(\\\\\\\"@storybook/source-loader/preview\\\\\\\").addSource;\\\\n// @ts-ignore\\\\nvar __SOURCE_PREFIX__ = \\\\\\\"/Users/farhanansari/Desktop/CODE/PrxProject/untitled folder/reactStoryBook/src/components/atoms/IconButton\\\\\\\";\\\\n// @ts-ignore\\\\nvar __STORY__ = \\\\\\\"import React from 'react'\\\\\\\\nimport { action } from '@storybook/addon-actions'\\\\\\\\nimport IconButton from '.'\\\\\\\\nimport Box from '../Box'\\\\\\\\nimport { withKnobs, boolean, text, radios } from '@storybook/addon-knobs'\\\\\\\\nimport { path } from '..'\\\\\\\\nimport ThemeWrapper from '../../../utilities/components/ThemeWrapper'\\\\\\\\nimport { tIntent } from '../Button'\\\\\\\\n\\\\\\\\nexport default {\\\\\\\\n  title: `${path}/IconButton`,\\\\\\\\n  decorators: [withKnobs],\\\\\\\\n  component: IconButton\\\\\\\\n}\\\\\\\\nconst radioOptions = {\\\\\\\\n  intent: { default: 'default', page: 'page', table: 'table' }\\\\\\\\n}\\\\\\\\nexport const withBasic = () => (\\\\\\\\n  <ThemeWrapper>\\\\\\\\n    <Box display='flex' justifyContent='space-evenly'>\\\\\\\\n      <IconButton\\\\\\\\n        onClick={action('clicked an Icon button with text')}\\\\\\\\n        primary={boolean('primary', false)}\\\\\\\\n        disabled={boolean('disabled', false)}\\\\\\\\n        intent={radios('intent', radioOptions.intent, 'default') as tIntent}\\\\\\\\n        iconVariant='icomoon-add'\\\\\\\\n        children='Add'\\\\\\\\n      />\\\\\\\\n      <IconButton\\\\\\\\n        onClick={action('clicked an Icon button with text')}\\\\\\\\n        primary={boolean('primary', false)}\\\\\\\\n        disabled={boolean('disabled', false)}\\\\\\\\n        intent={radios('intent', radioOptions.intent, 'default') as tIntent}\\\\\\\\n        iconVariant='icomoon-delete-empty'\\\\\\\\n        children='Delete'\\\\\\\\n      />\\\\\\\\n      <IconButton\\\\\\\\n        onClick={action('clicked an Icon button with text')}\\\\\\\\n        primary={boolean('primary', false)}\\\\\\\\n        disabled={boolean('disabled', false)}\\\\\\\\n        iconVariant='calendar'\\\\\\\\n        intent={radios('intent', radioOptions.intent, 'default') as tIntent}\\\\\\\\n        children='Calendar'\\\\\\\\n      />\\\\\\\\n    </Box>\\\\\\\\n  </ThemeWrapper>\\\\\\\\n)\\\\\\\\nexport const withCircular = () => (\\\\\\\\n  <ThemeWrapper>\\\\\\\\n    <Box display='flex' justifyContent='space-evenly'>\\\\\\\\n      <IconButton\\\\\\\\n        onClick={action('clicked an Icon button')}\\\\\\\\n        primary={boolean('primary', false)}\\\\\\\\n        disabled={boolean('disabled', false)}\\\\\\\\n        iconVariant='add'\\\\\\\\n        iconSize='xs'\\\\\\\\n        circle\\\\\\\\n      />\\\\\\\\n      <IconButton\\\\\\\\n        onClick={action('clicked an Icon button')}\\\\\\\\n        primary={boolean('primary', false)}\\\\\\\\n        disabled={boolean('disabled', false)}\\\\\\\\n        iconVariant='calendar'\\\\\\\\n        iconSize='md'\\\\\\\\n        circle\\\\\\\\n      />\\\\\\\\n    </Box>\\\\\\\\n  </ThemeWrapper>\\\\\\\\n)\\\\\\\\n\\\\\\\\nexport const withOnlyIcon = () => (\\\\\\\\n  <ThemeWrapper>\\\\\\\\n    <Box display='flex' justifyContent='space-evenly'>\\\\\\\\n      <IconButton\\\\\\\\n        onClick={action('clicked an Icon')}\\\\\\\\n        disabled={boolean('disabled', false)}\\\\\\\\n        onlyIcon\\\\\\\\n        iconVariant='add'\\\\\\\\n        iconSize='xs'\\\\\\\\n        color={text('Colors', 'primary.main')}\\\\\\\\n      />\\\\\\\\n      <IconButton\\\\\\\\n        onClick={action('clicked an Icon')}\\\\\\\\n        disabled={boolean('disabled', false)}\\\\\\\\n        onlyIcon\\\\\\\\n        iconVariant='calendar'\\\\\\\\n        iconSize='md'\\\\\\\\n        color={text('Colors', 'primary.main')}\\\\\\\\n      />\\\\\\\\n      <IconButton\\\\\\\\n        onClick={action('clicked an Icon')}\\\\\\\\n        disabled={boolean('disabled', false)}\\\\\\\\n        onlyIcon\\\\\\\\n        iconVariant='mail'\\\\\\\\n        iconSize='xl'\\\\\\\\n        color={text('Colors', 'primary.main')}\\\\\\\\n      />\\\\\\\\n    </Box>\\\\\\\\n  </ThemeWrapper>\\\\\\\\n)\\\\\\\\n\\\\\\\\nexport const withLink = () => (\\\\\\\\n  <ThemeWrapper>\\\\\\\\n    <Box display='flex' justifyContent='space-evenly'>\\\\\\\\n      <IconButton\\\\\\\\n        onClick={action('clicked an Icon')}\\\\\\\\n        disabled={boolean('disabled', false)}\\\\\\\\n        iconVariant='add'\\\\\\\\n        color={text('Colors', 'primary.main')}\\\\\\\\n        variant='link'\\\\\\\\n        children='Add'\\\\\\\\n      />\\\\\\\\n      <IconButton\\\\\\\\n        onClick={action('clicked an Icon')}\\\\\\\\n        disabled={boolean('disabled', false)}\\\\\\\\n        iconVariant='calendar'\\\\\\\\n        color={text('Colors', 'primary.main')}\\\\\\\\n        variant='link'\\\\\\\\n        children='Calendar'\\\\\\\\n      />\\\\\\\\n      <IconButton\\\\\\\\n        onClick={action('clicked an Icon')}\\\\\\\\n        disabled={boolean('disabled', false)}\\\\\\\\n        iconVariant='mail'\\\\\\\\n        color={text('Colors', 'primary.main')}\\\\\\\\n        variant='link'\\\\\\\\n        children='Mail'\\\\\\\\n      />\\\\\\\\n    </Box>\\\\\\\\n  </ThemeWrapper>\\\\\\\\n)\\\\\\\\n\\\\\\\";\\\\n// @ts-ignore\\\\nvar __ADDS_MAP__ = {};\\\\n// @ts-ignore\\\\nvar __MAIN_FILE_LOCATION__ = \\\\\\\"/IconButton.stories.tsx\\\\\\\";\\\\n// @ts-ignore\\\\nvar __MODULE_DEPENDENCIES__ = [];\\\\n// @ts-ignore\\\\nvar __LOCAL_DEPENDENCIES__ = {};\\\\n// @ts-ignore\\\\nvar __IDS_TO_FRAMEWORKS__ = {};\\\\n        \\\\nimport React from 'react'\\\\nimport { action } from '@storybook/addon-actions'\\\\nimport IconButton from '.'\\\\nimport Box from '../Box'\\\\nimport { withKnobs, boolean, text, radios } from '@storybook/addon-knobs'\\\\nimport { path } from '..'\\\\nimport ThemeWrapper from '../../../utilities/components/ThemeWrapper'\\\\nimport { tIntent } from '../Button'\\\\n\\\\nexport default {parameters: {\\\\\\\"storySource\\\\\\\":{\\\\\\\"source\\\\\\\":\\\\\\\"import React from 'react'\\\\\\\\nimport { action } from '@storybook/addon-actions'\\\\\\\\nimport IconButton from '.'\\\\\\\\nimport Box from '../Box'\\\\\\\\nimport { withKnobs, boolean, text, radios } from '@storybook/addon-knobs'\\\\\\\\nimport { path } from '..'\\\\\\\\nimport ThemeWrapper from '../../../utilities/components/ThemeWrapper'\\\\\\\\nimport { tIntent } from '../Button'\\\\\\\\n\\\\\\\\nexport default {\\\\\\\\n  title: `${path}/IconButton`,\\\\\\\\n  decorators: [withKnobs],\\\\\\\\n  component: IconButton\\\\\\\\n}\\\\\\\\nconst radioOptions = {\\\\\\\\n  intent: { default: 'default', page: 'page', table: 'table' }\\\\\\\\n}\\\\\\\\nexport const withBasic = () => (\\\\\\\\n  <ThemeWrapper>\\\\\\\\n    <Box display='flex' justifyContent='space-evenly'>\\\\\\\\n      <IconButton\\\\\\\\n        onClick={action('clicked an Icon button with text')}\\\\\\\\n        primary={boolean('primary', false)}\\\\\\\\n        disabled={boolean('disabled', false)}\\\\\\\\n        intent={radios('intent', radioOptions.intent, 'default') as tIntent}\\\\\\\\n        iconVariant='icomoon-add'\\\\\\\\n        children='Add'\\\\\\\\n      />\\\\\\\\n      <IconButton\\\\\\\\n        onClick={action('clicked an Icon button with text')}\\\\\\\\n        primary={boolean('primary', false)}\\\\\\\\n        disabled={boolean('disabled', false)}\\\\\\\\n        intent={radios('intent', radioOptions.intent, 'default') as tIntent}\\\\\\\\n        iconVariant='icomoon-delete-empty'\\\\\\\\n        children='Delete'\\\\\\\\n      />\\\\\\\\n      <IconButton\\\\\\\\n        onClick={action('clicked an Icon button with text')}\\\\\\\\n        primary={boolean('primary', false)}\\\\\\\\n        disabled={boolean('disabled', false)}\\\\\\\\n        iconVariant='calendar'\\\\\\\\n        intent={radios('intent', radioOptions.intent, 'default') as tIntent}\\\\\\\\n        children='Calendar'\\\\\\\\n      />\\\\\\\\n    </Box>\\\\\\\\n  </ThemeWrapper>\\\\\\\\n)\\\\\\\\nexport const withCircular = () => (\\\\\\\\n  <ThemeWrapper>\\\\\\\\n    <Box display='flex' justifyContent='space-evenly'>\\\\\\\\n      <IconButton\\\\\\\\n        onClick={action('clicked an Icon button')}\\\\\\\\n        primary={boolean('primary', false)}\\\\\\\\n        disabled={boolean('disabled', false)}\\\\\\\\n        iconVariant='add'\\\\\\\\n        iconSize='xs'\\\\\\\\n        circle\\\\\\\\n      />\\\\\\\\n      <IconButton\\\\\\\\n        onClick={action('clicked an Icon button')}\\\\\\\\n        primary={boolean('primary', false)}\\\\\\\\n        disabled={boolean('disabled', false)}\\\\\\\\n        iconVariant='calendar'\\\\\\\\n        iconSize='md'\\\\\\\\n        circle\\\\\\\\n      />\\\\\\\\n    </Box>\\\\\\\\n  </ThemeWrapper>\\\\\\\\n)\\\\\\\\n\\\\\\\\nexport const withOnlyIcon = () => (\\\\\\\\n  <ThemeWrapper>\\\\\\\\n    <Box display='flex' justifyContent='space-evenly'>\\\\\\\\n      <IconButton\\\\\\\\n        onClick={action('clicked an Icon')}\\\\\\\\n        disabled={boolean('disabled', false)}\\\\\\\\n        onlyIcon\\\\\\\\n        iconVariant='add'\\\\\\\\n        iconSize='xs'\\\\\\\\n        color={text('Colors', 'primary.main')}\\\\\\\\n      />\\\\\\\\n      <IconButton\\\\\\\\n        onClick={action('clicked an Icon')}\\\\\\\\n        disabled={boolean('disabled', false)}\\\\\\\\n        onlyIcon\\\\\\\\n        iconVariant='calendar'\\\\\\\\n        iconSize='md'\\\\\\\\n        color={text('Colors', 'primary.main')}\\\\\\\\n      />\\\\\\\\n      <IconButton\\\\\\\\n        onClick={action('clicked an Icon')}\\\\\\\\n        disabled={boolean('disabled', false)}\\\\\\\\n        onlyIcon\\\\\\\\n        iconVariant='mail'\\\\\\\\n        iconSize='xl'\\\\\\\\n        color={text('Colors', 'primary.main')}\\\\\\\\n      />\\\\\\\\n    </Box>\\\\\\\\n  </ThemeWrapper>\\\\\\\\n)\\\\\\\\n\\\\\\\\nexport const withLink = () => (\\\\\\\\n  <ThemeWrapper>\\\\\\\\n    <Box display='flex' justifyContent='space-evenly'>\\\\\\\\n      <IconButton\\\\\\\\n        onClick={action('clicked an Icon')}\\\\\\\\n        disabled={boolean('disabled', false)}\\\\\\\\n        iconVariant='add'\\\\\\\\n        color={text('Colors', 'primary.main')}\\\\\\\\n        variant='link'\\\\\\\\n        children='Add'\\\\\\\\n      />\\\\\\\\n      <IconButton\\\\\\\\n        onClick={action('clicked an Icon')}\\\\\\\\n        disabled={boolean('disabled', false)}\\\\\\\\n        iconVariant='calendar'\\\\\\\\n        color={text('Colors', 'primary.main')}\\\\\\\\n        variant='link'\\\\\\\\n        children='Calendar'\\\\\\\\n      />\\\\\\\\n      <IconButton\\\\\\\\n        onClick={action('clicked an Icon')}\\\\\\\\n        disabled={boolean('disabled', false)}\\\\\\\\n        iconVariant='mail'\\\\\\\\n        color={text('Colors', 'primary.main')}\\\\\\\\n        variant='link'\\\\\\\\n        children='Mail'\\\\\\\\n      />\\\\\\\\n    </Box>\\\\\\\\n  </ThemeWrapper>\\\\\\\\n)\\\\\\\\n\\\\\\\",\\\\\\\"locationsMap\\\\\\\":{}},},\\\\n  title: `${path}/IconButton`,\\\\n  decorators: [withKnobs],\\\\n  component: IconButton\\\\n}\\\\nconst radioOptions = {\\\\n  intent: { default: 'default', page: 'page', table: 'table' }\\\\n}\\\\nexport const withBasic = addSourceDecorator(() => (\\\\n  <ThemeWrapper>\\\\n    <Box display='flex' justifyContent='space-evenly'>\\\\n      <IconButton\\\\n        onClick={action('clicked an Icon button with text')}\\\\n        primary={boolean('primary', false)}\\\\n        disabled={boolean('disabled', false)}\\\\n        intent={radios('intent', radioOptions.intent, 'default') as tIntent}\\\\n        iconVariant='icomoon-add'\\\\n        children='Add'\\\\n      />\\\\n      <IconButton\\\\n        onClick={action('clicked an Icon button with text')}\\\\n        primary={boolean('primary', false)}\\\\n        disabled={boolean('disabled', false)}\\\\n        intent={radios('intent', radioOptions.intent, 'default') as tIntent}\\\\n        iconVariant='icomoon-delete-empty'\\\\n        children='Delete'\\\\n      />\\\\n      <IconButton\\\\n        onClick={action('clicked an Icon button with text')}\\\\n        primary={boolean('primary', false)}\\\\n        disabled={boolean('disabled', false)}\\\\n        iconVariant='calendar'\\\\n        intent={radios('intent', radioOptions.intent, 'default') as tIntent}\\\\n        children='Calendar'\\\\n      />\\\\n    </Box>\\\\n  </ThemeWrapper>\\\\n), {__STORY__, __ADDS_MAP__,__MAIN_FILE_LOCATION__,__MODULE_DEPENDENCIES__,__LOCAL_DEPENDENCIES__,__SOURCE_PREFIX__,__IDS_TO_FRAMEWORKS__});\\\\nexport const withCircular = addSourceDecorator(() => (\\\\n  <ThemeWrapper>\\\\n    <Box display='flex' justifyContent='space-evenly'>\\\\n      <IconButton\\\\n        onClick={action('clicked an Icon button')}\\\\n        primary={boolean('primary', false)}\\\\n        disabled={boolean('disabled', false)}\\\\n        iconVariant='add'\\\\n        iconSize='xs'\\\\n        circle\\\\n      />\\\\n      <IconButton\\\\n        onClick={action('clicked an Icon button')}\\\\n        primary={boolean('primary', false)}\\\\n        disabled={boolean('disabled', false)}\\\\n        iconVariant='calendar'\\\\n        iconSize='md'\\\\n        circle\\\\n      />\\\\n    </Box>\\\\n  </ThemeWrapper>\\\\n), {__STORY__, __ADDS_MAP__,__MAIN_FILE_LOCATION__,__MODULE_DEPENDENCIES__,__LOCAL_DEPENDENCIES__,__SOURCE_PREFIX__,__IDS_TO_FRAMEWORKS__});\\\\n\\\\nexport const withOnlyIcon = addSourceDecorator(() => (\\\\n  <ThemeWrapper>\\\\n    <Box display='flex' justifyContent='space-evenly'>\\\\n      <IconButton\\\\n        onClick={action('clicked an Icon')}\\\\n        disabled={boolean('disabled', false)}\\\\n        onlyIcon\\\\n        iconVariant='add'\\\\n        iconSize='xs'\\\\n        color={text('Colors', 'primary.main')}\\\\n      />\\\\n      <IconButton\\\\n        onClick={action('clicked an Icon')}\\\\n        disabled={boolean('disabled', false)}\\\\n        onlyIcon\\\\n        iconVariant='calendar'\\\\n        iconSize='md'\\\\n        color={text('Colors', 'primary.main')}\\\\n      />\\\\n      <IconButton\\\\n        onClick={action('clicked an Icon')}\\\\n        disabled={boolean('disabled', false)}\\\\n        onlyIcon\\\\n        iconVariant='mail'\\\\n        iconSize='xl'\\\\n        color={text('Colors', 'primary.main')}\\\\n      />\\\\n    </Box>\\\\n  </ThemeWrapper>\\\\n), {__STORY__, __ADDS_MAP__,__MAIN_FILE_LOCATION__,__MODULE_DEPENDENCIES__,__LOCAL_DEPENDENCIES__,__SOURCE_PREFIX__,__IDS_TO_FRAMEWORKS__});\\\\n\\\\nexport const withLink = addSourceDecorator(() => (\\\\n  <ThemeWrapper>\\\\n    <Box display='flex' justifyContent='space-evenly'>\\\\n      <IconButton\\\\n        onClick={action('clicked an Icon')}\\\\n        disabled={boolean('disabled', false)}\\\\n        iconVariant='add'\\\\n        color={text('Colors', 'primary.main')}\\\\n        variant='link'\\\\n        children='Add'\\\\n      />\\\\n      <IconButton\\\\n        onClick={action('clicked an Icon')}\\\\n        disabled={boolean('disabled', false)}\\\\n        iconVariant='calendar'\\\\n        color={text('Colors', 'primary.main')}\\\\n        variant='link'\\\\n        children='Calendar'\\\\n      />\\\\n      <IconButton\\\\n        onClick={action('clicked an Icon')}\\\\n        disabled={boolean('disabled', false)}\\\\n        iconVariant='mail'\\\\n        color={text('Colors', 'primary.main')}\\\\n        variant='link'\\\\n        children='Mail'\\\\n      />\\\\n    </Box>\\\\n  </ThemeWrapper>\\\\n), {__STORY__, __ADDS_MAP__,__MAIN_FILE_LOCATION__,__MODULE_DEPENDENCIES__,__LOCAL_DEPENDENCIES__,__SOURCE_PREFIX__,__IDS_TO_FRAMEWORKS__});\\\",\\\"locationsMap\\\":{}},\\\"storySource\\\":{\\\"source\\\":\\\"import React from 'react'\\\\nimport { action } from '@storybook/addon-actions'\\\\nimport IconButton from '.'\\\\nimport Box from '../Box'\\\\nimport { withKnobs, boolean, text, radios } from '@storybook/addon-knobs'\\\\nimport { path } from '..'\\\\nimport ThemeWrapper from '../../../utilities/components/ThemeWrapper'\\\\nimport { tIntent } from '../Button'\\\\n\\\\nexport default {\\\\n  title: `${path}/IconButton`,\\\\n  decorators: [withKnobs],\\\\n  component: IconButton\\\\n}\\\\nconst radioOptions = {\\\\n  intent: { default: 'default', page: 'page', table: 'table' }\\\\n}\\\\nexport const withBasic = () => (\\\\n  <ThemeWrapper>\\\\n    <Box display='flex' justifyContent='space-evenly'>\\\\n      <IconButton\\\\n        onClick={action('clicked an Icon button with text')}\\\\n        primary={boolean('primary', false)}\\\\n        disabled={boolean('disabled', false)}\\\\n        intent={radios('intent', radioOptions.intent, 'default') as tIntent}\\\\n        iconVariant='icomoon-add'\\\\n        children='Add'\\\\n      />\\\\n      <IconButton\\\\n        onClick={action('clicked an Icon button with text')}\\\\n        primary={boolean('primary', false)}\\\\n        disabled={boolean('disabled', false)}\\\\n        intent={radios('intent', radioOptions.intent, 'default') as tIntent}\\\\n        iconVariant='icomoon-delete-empty'\\\\n        children='Delete'\\\\n      />\\\\n      <IconButton\\\\n        onClick={action('clicked an Icon button with text')}\\\\n        primary={boolean('primary', false)}\\\\n        disabled={boolean('disabled', false)}\\\\n        iconVariant='calendar'\\\\n        intent={radios('intent', radioOptions.intent, 'default') as tIntent}\\\\n        children='Calendar'\\\\n      />\\\\n    </Box>\\\\n  </ThemeWrapper>\\\\n)\\\\nexport const withCircular = () => (\\\\n  <ThemeWrapper>\\\\n    <Box display='flex' justifyContent='space-evenly'>\\\\n      <IconButton\\\\n        onClick={action('clicked an Icon button')}\\\\n        primary={boolean('primary', false)}\\\\n        disabled={boolean('disabled', false)}\\\\n        iconVariant='add'\\\\n        iconSize='xs'\\\\n        circle\\\\n      />\\\\n      <IconButton\\\\n        onClick={action('clicked an Icon button')}\\\\n        primary={boolean('primary', false)}\\\\n        disabled={boolean('disabled', false)}\\\\n        iconVariant='calendar'\\\\n        iconSize='md'\\\\n        circle\\\\n      />\\\\n    </Box>\\\\n  </ThemeWrapper>\\\\n)\\\\n\\\\nexport const withOnlyIcon = () => (\\\\n  <ThemeWrapper>\\\\n    <Box display='flex' justifyContent='space-evenly'>\\\\n      <IconButton\\\\n        onClick={action('clicked an Icon')}\\\\n        disabled={boolean('disabled', false)}\\\\n        onlyIcon\\\\n        iconVariant='add'\\\\n        iconSize='xs'\\\\n        color={text('Colors', 'primary.main')}\\\\n      />\\\\n      <IconButton\\\\n        onClick={action('clicked an Icon')}\\\\n        disabled={boolean('disabled', false)}\\\\n        onlyIcon\\\\n        iconVariant='calendar'\\\\n        iconSize='md'\\\\n        color={text('Colors', 'primary.main')}\\\\n      />\\\\n      <IconButton\\\\n        onClick={action('clicked an Icon')}\\\\n        disabled={boolean('disabled', false)}\\\\n        onlyIcon\\\\n        iconVariant='mail'\\\\n        iconSize='xl'\\\\n        color={text('Colors', 'primary.main')}\\\\n      />\\\\n    </Box>\\\\n  </ThemeWrapper>\\\\n)\\\\n\\\\nexport const withLink = () => (\\\\n  <ThemeWrapper>\\\\n    <Box display='flex' justifyContent='space-evenly'>\\\\n      <IconButton\\\\n        onClick={action('clicked an Icon')}\\\\n        disabled={boolean('disabled', false)}\\\\n        iconVariant='add'\\\\n        color={text('Colors', 'primary.main')}\\\\n        variant='link'\\\\n        children='Add'\\\\n      />\\\\n      <IconButton\\\\n        onClick={action('clicked an Icon')}\\\\n        disabled={boolean('disabled', false)}\\\\n        iconVariant='calendar'\\\\n        color={text('Colors', 'primary.main')}\\\\n        variant='link'\\\\n        children='Calendar'\\\\n      />\\\\n      <IconButton\\\\n        onClick={action('clicked an Icon')}\\\\n        disabled={boolean('disabled', false)}\\\\n        iconVariant='mail'\\\\n        color={text('Colors', 'primary.main')}\\\\n        variant='link'\\\\n        children='Mail'\\\\n      />\\\\n    </Box>\\\\n  </ThemeWrapper>\\\\n)\\\\n\\\",\\\"locationsMap\\\":{}},},\\n  title: `${path}/IconButton`,\\n  decorators: [withKnobs],\\n  component: IconButton\\n}\\nconst radioOptions = {\\n  intent: { default: 'default', page: 'page', table: 'table' }\\n}\\nexport const withBasic = addSourceDecorator(addSourceDecorator(() => (\\n  <ThemeWrapper>\\n    <Box display='flex' justifyContent='space-evenly'>\\n      <IconButton\\n        onClick={action('clicked an Icon button with text')}\\n        primary={boolean('primary', false)}\\n        disabled={boolean('disabled', false)}\\n        intent={radios('intent', radioOptions.intent, 'default') as tIntent}\\n        iconVariant='icomoon-add'\\n        children='Add'\\n      />\\n      <IconButton\\n        onClick={action('clicked an Icon button with text')}\\n        primary={boolean('primary', false)}\\n        disabled={boolean('disabled', false)}\\n        intent={radios('intent', radioOptions.intent, 'default') as tIntent}\\n        iconVariant='icomoon-delete-empty'\\n        children='Delete'\\n      />\\n      <IconButton\\n        onClick={action('clicked an Icon button with text')}\\n        primary={boolean('primary', false)}\\n        disabled={boolean('disabled', false)}\\n        iconVariant='calendar'\\n        intent={radios('intent', radioOptions.intent, 'default') as tIntent}\\n        children='Calendar'\\n      />\\n    </Box>\\n  </ThemeWrapper>\\n), {__STORY__, __ADDS_MAP__,__MAIN_FILE_LOCATION__,__MODULE_DEPENDENCIES__,__LOCAL_DEPENDENCIES__,__SOURCE_PREFIX__,__IDS_TO_FRAMEWORKS__}), {__STORY__, __ADDS_MAP__,__MAIN_FILE_LOCATION__,__MODULE_DEPENDENCIES__,__LOCAL_DEPENDENCIES__,__SOURCE_PREFIX__,__IDS_TO_FRAMEWORKS__});;\\nexport const withCircular = addSourceDecorator(addSourceDecorator(() => (\\n  <ThemeWrapper>\\n    <Box display='flex' justifyContent='space-evenly'>\\n      <IconButton\\n        onClick={action('clicked an Icon button')}\\n        primary={boolean('primary', false)}\\n        disabled={boolean('disabled', false)}\\n        iconVariant='add'\\n        iconSize='xs'\\n        circle\\n      />\\n      <IconButton\\n        onClick={action('clicked an Icon button')}\\n        primary={boolean('primary', false)}\\n        disabled={boolean('disabled', false)}\\n        iconVariant='calendar'\\n        iconSize='md'\\n        circle\\n      />\\n    </Box>\\n  </ThemeWrapper>\\n), {__STORY__, __ADDS_MAP__,__MAIN_FILE_LOCATION__,__MODULE_DEPENDENCIES__,__LOCAL_DEPENDENCIES__,__SOURCE_PREFIX__,__IDS_TO_FRAMEWORKS__}), {__STORY__, __ADDS_MAP__,__MAIN_FILE_LOCATION__,__MODULE_DEPENDENCIES__,__LOCAL_DEPENDENCIES__,__SOURCE_PREFIX__,__IDS_TO_FRAMEWORKS__});;\\n\\nexport const withOnlyIcon = addSourceDecorator(addSourceDecorator(() => (\\n  <ThemeWrapper>\\n    <Box display='flex' justifyContent='space-evenly'>\\n      <IconButton\\n        onClick={action('clicked an Icon')}\\n        disabled={boolean('disabled', false)}\\n        onlyIcon\\n        iconVariant='add'\\n        iconSize='xs'\\n        color={text('Colors', 'primary.main')}\\n      />\\n      <IconButton\\n        onClick={action('clicked an Icon')}\\n        disabled={boolean('disabled', false)}\\n        onlyIcon\\n        iconVariant='calendar'\\n        iconSize='md'\\n        color={text('Colors', 'primary.main')}\\n      />\\n      <IconButton\\n        onClick={action('clicked an Icon')}\\n        disabled={boolean('disabled', false)}\\n        onlyIcon\\n        iconVariant='mail'\\n        iconSize='xl'\\n        color={text('Colors', 'primary.main')}\\n      />\\n    </Box>\\n  </ThemeWrapper>\\n), {__STORY__, __ADDS_MAP__,__MAIN_FILE_LOCATION__,__MODULE_DEPENDENCIES__,__LOCAL_DEPENDENCIES__,__SOURCE_PREFIX__,__IDS_TO_FRAMEWORKS__}), {__STORY__, __ADDS_MAP__,__MAIN_FILE_LOCATION__,__MODULE_DEPENDENCIES__,__LOCAL_DEPENDENCIES__,__SOURCE_PREFIX__,__IDS_TO_FRAMEWORKS__});;\\n\\nexport const withLink = addSourceDecorator(addSourceDecorator(() => (\\n  <ThemeWrapper>\\n    <Box display='flex' justifyContent='space-evenly'>\\n      <IconButton\\n        onClick={action('clicked an Icon')}\\n        disabled={boolean('disabled', false)}\\n        iconVariant='add'\\n        color={text('Colors', 'primary.main')}\\n        variant='link'\\n        children='Add'\\n      />\\n      <IconButton\\n        onClick={action('clicked an Icon')}\\n        disabled={boolean('disabled', false)}\\n        iconVariant='calendar'\\n        color={text('Colors', 'primary.main')}\\n        variant='link'\\n        children='Calendar'\\n      />\\n      <IconButton\\n        onClick={action('clicked an Icon')}\\n        disabled={boolean('disabled', false)}\\n        iconVariant='mail'\\n        color={text('Colors', 'primary.main')}\\n        variant='link'\\n        children='Mail'\\n      />\\n    </Box>\\n  </ThemeWrapper>\\n), {__STORY__, __ADDS_MAP__,__MAIN_FILE_LOCATION__,__MODULE_DEPENDENCIES__,__LOCAL_DEPENDENCIES__,__SOURCE_PREFIX__,__IDS_TO_FRAMEWORKS__}), {__STORY__, __ADDS_MAP__,__MAIN_FILE_LOCATION__,__MODULE_DEPENDENCIES__,__LOCAL_DEPENDENCIES__,__SOURCE_PREFIX__,__IDS_TO_FRAMEWORKS__});\",\n      \"locationsMap\": {}\n    }\n  }, _defineProperty(_parameters, \"storySource\", {\n    \"source\": \"\\n\\n// @ts-nocheck\\n// @ts-ignore\\nvar withSourceLoader = require('@storybook/source-loader/preview').withSource;\\n// @ts-ignore\\nvar addSourceDecorator = require(\\\"@storybook/source-loader/preview\\\").addSource;\\n// @ts-ignore\\nvar __SOURCE_PREFIX__ = \\\"/Users/farhanansari/Desktop/CODE/PrxProject/untitled folder/reactStoryBook/src/components/atoms/IconButton\\\";\\n// @ts-ignore\\nvar __STORY__ = \\\"import React from 'react'\\\\nimport { action } from '@storybook/addon-actions'\\\\nimport IconButton from '.'\\\\nimport Box from '../Box'\\\\nimport { withKnobs, boolean, text, radios } from '@storybook/addon-knobs'\\\\nimport { path } from '..'\\\\nimport ThemeWrapper from '../../../utilities/components/ThemeWrapper'\\\\nimport { tIntent } from '../Button'\\\\n\\\\nexport default {\\\\n  title: `${path}/IconButton`,\\\\n  decorators: [withKnobs],\\\\n  component: IconButton\\\\n}\\\\nconst radioOptions = {\\\\n  intent: { default: 'default', page: 'page', table: 'table' }\\\\n}\\\\nexport const withBasic = () => (\\\\n  <ThemeWrapper>\\\\n    <Box display='flex' justifyContent='space-evenly'>\\\\n      <IconButton\\\\n        onClick={action('clicked an Icon button with text')}\\\\n        primary={boolean('primary', false)}\\\\n        disabled={boolean('disabled', false)}\\\\n        intent={radios('intent', radioOptions.intent, 'default') as tIntent}\\\\n        iconVariant='icomoon-add'\\\\n        children='Add'\\\\n      />\\\\n      <IconButton\\\\n        onClick={action('clicked an Icon button with text')}\\\\n        primary={boolean('primary', false)}\\\\n        disabled={boolean('disabled', false)}\\\\n        intent={radios('intent', radioOptions.intent, 'default') as tIntent}\\\\n        iconVariant='icomoon-delete-empty'\\\\n        children='Delete'\\\\n      />\\\\n      <IconButton\\\\n        onClick={action('clicked an Icon button with text')}\\\\n        primary={boolean('primary', false)}\\\\n        disabled={boolean('disabled', false)}\\\\n        iconVariant='calendar'\\\\n        intent={radios('intent', radioOptions.intent, 'default') as tIntent}\\\\n        children='Calendar'\\\\n      />\\\\n    </Box>\\\\n  </ThemeWrapper>\\\\n)\\\\nexport const withCircular = () => (\\\\n  <ThemeWrapper>\\\\n    <Box display='flex' justifyContent='space-evenly'>\\\\n      <IconButton\\\\n        onClick={action('clicked an Icon button')}\\\\n        primary={boolean('primary', false)}\\\\n        disabled={boolean('disabled', false)}\\\\n        iconVariant='add'\\\\n        iconSize='xs'\\\\n        circle\\\\n      />\\\\n      <IconButton\\\\n        onClick={action('clicked an Icon button')}\\\\n        primary={boolean('primary', false)}\\\\n        disabled={boolean('disabled', false)}\\\\n        iconVariant='calendar'\\\\n        iconSize='md'\\\\n        circle\\\\n      />\\\\n    </Box>\\\\n  </ThemeWrapper>\\\\n)\\\\n\\\\nexport const withOnlyIcon = () => (\\\\n  <ThemeWrapper>\\\\n    <Box display='flex' justifyContent='space-evenly'>\\\\n      <IconButton\\\\n        onClick={action('clicked an Icon')}\\\\n        disabled={boolean('disabled', false)}\\\\n        onlyIcon\\\\n        iconVariant='add'\\\\n        iconSize='xs'\\\\n        color={text('Colors', 'primary.main')}\\\\n      />\\\\n      <IconButton\\\\n        onClick={action('clicked an Icon')}\\\\n        disabled={boolean('disabled', false)}\\\\n        onlyIcon\\\\n        iconVariant='calendar'\\\\n        iconSize='md'\\\\n        color={text('Colors', 'primary.main')}\\\\n      />\\\\n      <IconButton\\\\n        onClick={action('clicked an Icon')}\\\\n        disabled={boolean('disabled', false)}\\\\n        onlyIcon\\\\n        iconVariant='mail'\\\\n        iconSize='xl'\\\\n        color={text('Colors', 'primary.main')}\\\\n      />\\\\n    </Box>\\\\n  </ThemeWrapper>\\\\n)\\\\n\\\\nexport const withLink = () => (\\\\n  <ThemeWrapper>\\\\n    <Box display='flex' justifyContent='space-evenly'>\\\\n      <IconButton\\\\n        onClick={action('clicked an Icon')}\\\\n        disabled={boolean('disabled', false)}\\\\n        iconVariant='add'\\\\n        color={text('Colors', 'primary.main')}\\\\n        variant='link'\\\\n        children='Add'\\\\n      />\\\\n      <IconButton\\\\n        onClick={action('clicked an Icon')}\\\\n        disabled={boolean('disabled', false)}\\\\n        iconVariant='calendar'\\\\n        color={text('Colors', 'primary.main')}\\\\n        variant='link'\\\\n        children='Calendar'\\\\n      />\\\\n      <IconButton\\\\n        onClick={action('clicked an Icon')}\\\\n        disabled={boolean('disabled', false)}\\\\n        iconVariant='mail'\\\\n        color={text('Colors', 'primary.main')}\\\\n        variant='link'\\\\n        children='Mail'\\\\n      />\\\\n    </Box>\\\\n  </ThemeWrapper>\\\\n)\\\\n\\\";\\n// @ts-ignore\\nvar __ADDS_MAP__ = {};\\n// @ts-ignore\\nvar __MAIN_FILE_LOCATION__ = \\\"/IconButton.stories.tsx\\\";\\n// @ts-ignore\\nvar __MODULE_DEPENDENCIES__ = [];\\n// @ts-ignore\\nvar __LOCAL_DEPENDENCIES__ = {};\\n// @ts-ignore\\nvar __IDS_TO_FRAMEWORKS__ = {};\\n        \\nimport React from 'react'\\nimport { action } from '@storybook/addon-actions'\\nimport IconButton from '.'\\nimport Box from '../Box'\\nimport { withKnobs, boolean, text, radios } from '@storybook/addon-knobs'\\nimport { path } from '..'\\nimport ThemeWrapper from '../../../utilities/components/ThemeWrapper'\\nimport { tIntent } from '../Button'\\n\\nexport default {parameters: {\\\"storySource\\\":{\\\"source\\\":\\\"import React from 'react'\\\\nimport { action } from '@storybook/addon-actions'\\\\nimport IconButton from '.'\\\\nimport Box from '../Box'\\\\nimport { withKnobs, boolean, text, radios } from '@storybook/addon-knobs'\\\\nimport { path } from '..'\\\\nimport ThemeWrapper from '../../../utilities/components/ThemeWrapper'\\\\nimport { tIntent } from '../Button'\\\\n\\\\nexport default {\\\\n  title: `${path}/IconButton`,\\\\n  decorators: [withKnobs],\\\\n  component: IconButton\\\\n}\\\\nconst radioOptions = {\\\\n  intent: { default: 'default', page: 'page', table: 'table' }\\\\n}\\\\nexport const withBasic = () => (\\\\n  <ThemeWrapper>\\\\n    <Box display='flex' justifyContent='space-evenly'>\\\\n      <IconButton\\\\n        onClick={action('clicked an Icon button with text')}\\\\n        primary={boolean('primary', false)}\\\\n        disabled={boolean('disabled', false)}\\\\n        intent={radios('intent', radioOptions.intent, 'default') as tIntent}\\\\n        iconVariant='icomoon-add'\\\\n        children='Add'\\\\n      />\\\\n      <IconButton\\\\n        onClick={action('clicked an Icon button with text')}\\\\n        primary={boolean('primary', false)}\\\\n        disabled={boolean('disabled', false)}\\\\n        intent={radios('intent', radioOptions.intent, 'default') as tIntent}\\\\n        iconVariant='icomoon-delete-empty'\\\\n        children='Delete'\\\\n      />\\\\n      <IconButton\\\\n        onClick={action('clicked an Icon button with text')}\\\\n        primary={boolean('primary', false)}\\\\n        disabled={boolean('disabled', false)}\\\\n        iconVariant='calendar'\\\\n        intent={radios('intent', radioOptions.intent, 'default') as tIntent}\\\\n        children='Calendar'\\\\n      />\\\\n    </Box>\\\\n  </ThemeWrapper>\\\\n)\\\\nexport const withCircular = () => (\\\\n  <ThemeWrapper>\\\\n    <Box display='flex' justifyContent='space-evenly'>\\\\n      <IconButton\\\\n        onClick={action('clicked an Icon button')}\\\\n        primary={boolean('primary', false)}\\\\n        disabled={boolean('disabled', false)}\\\\n        iconVariant='add'\\\\n        iconSize='xs'\\\\n        circle\\\\n      />\\\\n      <IconButton\\\\n        onClick={action('clicked an Icon button')}\\\\n        primary={boolean('primary', false)}\\\\n        disabled={boolean('disabled', false)}\\\\n        iconVariant='calendar'\\\\n        iconSize='md'\\\\n        circle\\\\n      />\\\\n    </Box>\\\\n  </ThemeWrapper>\\\\n)\\\\n\\\\nexport const withOnlyIcon = () => (\\\\n  <ThemeWrapper>\\\\n    <Box display='flex' justifyContent='space-evenly'>\\\\n      <IconButton\\\\n        onClick={action('clicked an Icon')}\\\\n        disabled={boolean('disabled', false)}\\\\n        onlyIcon\\\\n        iconVariant='add'\\\\n        iconSize='xs'\\\\n        color={text('Colors', 'primary.main')}\\\\n      />\\\\n      <IconButton\\\\n        onClick={action('clicked an Icon')}\\\\n        disabled={boolean('disabled', false)}\\\\n        onlyIcon\\\\n        iconVariant='calendar'\\\\n        iconSize='md'\\\\n        color={text('Colors', 'primary.main')}\\\\n      />\\\\n      <IconButton\\\\n        onClick={action('clicked an Icon')}\\\\n        disabled={boolean('disabled', false)}\\\\n        onlyIcon\\\\n        iconVariant='mail'\\\\n        iconSize='xl'\\\\n        color={text('Colors', 'primary.main')}\\\\n      />\\\\n    </Box>\\\\n  </ThemeWrapper>\\\\n)\\\\n\\\\nexport const withLink = () => (\\\\n  <ThemeWrapper>\\\\n    <Box display='flex' justifyContent='space-evenly'>\\\\n      <IconButton\\\\n        onClick={action('clicked an Icon')}\\\\n        disabled={boolean('disabled', false)}\\\\n        iconVariant='add'\\\\n        color={text('Colors', 'primary.main')}\\\\n        variant='link'\\\\n        children='Add'\\\\n      />\\\\n      <IconButton\\\\n        onClick={action('clicked an Icon')}\\\\n        disabled={boolean('disabled', false)}\\\\n        iconVariant='calendar'\\\\n        color={text('Colors', 'primary.main')}\\\\n        variant='link'\\\\n        children='Calendar'\\\\n      />\\\\n      <IconButton\\\\n        onClick={action('clicked an Icon')}\\\\n        disabled={boolean('disabled', false)}\\\\n        iconVariant='mail'\\\\n        color={text('Colors', 'primary.main')}\\\\n        variant='link'\\\\n        children='Mail'\\\\n      />\\\\n    </Box>\\\\n  </ThemeWrapper>\\\\n)\\\\n\\\",\\\"locationsMap\\\":{}},},\\n  title: `${path}/IconButton`,\\n  decorators: [withKnobs],\\n  component: IconButton\\n}\\nconst radioOptions = {\\n  intent: { default: 'default', page: 'page', table: 'table' }\\n}\\nexport const withBasic = addSourceDecorator(() => (\\n  <ThemeWrapper>\\n    <Box display='flex' justifyContent='space-evenly'>\\n      <IconButton\\n        onClick={action('clicked an Icon button with text')}\\n        primary={boolean('primary', false)}\\n        disabled={boolean('disabled', false)}\\n        intent={radios('intent', radioOptions.intent, 'default') as tIntent}\\n        iconVariant='icomoon-add'\\n        children='Add'\\n      />\\n      <IconButton\\n        onClick={action('clicked an Icon button with text')}\\n        primary={boolean('primary', false)}\\n        disabled={boolean('disabled', false)}\\n        intent={radios('intent', radioOptions.intent, 'default') as tIntent}\\n        iconVariant='icomoon-delete-empty'\\n        children='Delete'\\n      />\\n      <IconButton\\n        onClick={action('clicked an Icon button with text')}\\n        primary={boolean('primary', false)}\\n        disabled={boolean('disabled', false)}\\n        iconVariant='calendar'\\n        intent={radios('intent', radioOptions.intent, 'default') as tIntent}\\n        children='Calendar'\\n      />\\n    </Box>\\n  </ThemeWrapper>\\n), {__STORY__, __ADDS_MAP__,__MAIN_FILE_LOCATION__,__MODULE_DEPENDENCIES__,__LOCAL_DEPENDENCIES__,__SOURCE_PREFIX__,__IDS_TO_FRAMEWORKS__});\\nexport const withCircular = addSourceDecorator(() => (\\n  <ThemeWrapper>\\n    <Box display='flex' justifyContent='space-evenly'>\\n      <IconButton\\n        onClick={action('clicked an Icon button')}\\n        primary={boolean('primary', false)}\\n        disabled={boolean('disabled', false)}\\n        iconVariant='add'\\n        iconSize='xs'\\n        circle\\n      />\\n      <IconButton\\n        onClick={action('clicked an Icon button')}\\n        primary={boolean('primary', false)}\\n        disabled={boolean('disabled', false)}\\n        iconVariant='calendar'\\n        iconSize='md'\\n        circle\\n      />\\n    </Box>\\n  </ThemeWrapper>\\n), {__STORY__, __ADDS_MAP__,__MAIN_FILE_LOCATION__,__MODULE_DEPENDENCIES__,__LOCAL_DEPENDENCIES__,__SOURCE_PREFIX__,__IDS_TO_FRAMEWORKS__});\\n\\nexport const withOnlyIcon = addSourceDecorator(() => (\\n  <ThemeWrapper>\\n    <Box display='flex' justifyContent='space-evenly'>\\n      <IconButton\\n        onClick={action('clicked an Icon')}\\n        disabled={boolean('disabled', false)}\\n        onlyIcon\\n        iconVariant='add'\\n        iconSize='xs'\\n        color={text('Colors', 'primary.main')}\\n      />\\n      <IconButton\\n        onClick={action('clicked an Icon')}\\n        disabled={boolean('disabled', false)}\\n        onlyIcon\\n        iconVariant='calendar'\\n        iconSize='md'\\n        color={text('Colors', 'primary.main')}\\n      />\\n      <IconButton\\n        onClick={action('clicked an Icon')}\\n        disabled={boolean('disabled', false)}\\n        onlyIcon\\n        iconVariant='mail'\\n        iconSize='xl'\\n        color={text('Colors', 'primary.main')}\\n      />\\n    </Box>\\n  </ThemeWrapper>\\n), {__STORY__, __ADDS_MAP__,__MAIN_FILE_LOCATION__,__MODULE_DEPENDENCIES__,__LOCAL_DEPENDENCIES__,__SOURCE_PREFIX__,__IDS_TO_FRAMEWORKS__});\\n\\nexport const withLink = addSourceDecorator(() => (\\n  <ThemeWrapper>\\n    <Box display='flex' justifyContent='space-evenly'>\\n      <IconButton\\n        onClick={action('clicked an Icon')}\\n        disabled={boolean('disabled', false)}\\n        iconVariant='add'\\n        color={text('Colors', 'primary.main')}\\n        variant='link'\\n        children='Add'\\n      />\\n      <IconButton\\n        onClick={action('clicked an Icon')}\\n        disabled={boolean('disabled', false)}\\n        iconVariant='calendar'\\n        color={text('Colors', 'primary.main')}\\n        variant='link'\\n        children='Calendar'\\n      />\\n      <IconButton\\n        onClick={action('clicked an Icon')}\\n        disabled={boolean('disabled', false)}\\n        iconVariant='mail'\\n        color={text('Colors', 'primary.main')}\\n        variant='link'\\n        children='Mail'\\n      />\\n    </Box>\\n  </ThemeWrapper>\\n), {__STORY__, __ADDS_MAP__,__MAIN_FILE_LOCATION__,__MODULE_DEPENDENCIES__,__LOCAL_DEPENDENCIES__,__SOURCE_PREFIX__,__IDS_TO_FRAMEWORKS__});\",\n    \"locationsMap\": {}\n  }), _defineProperty(_parameters, \"storySource\", {\n    \"source\": \"import React from 'react'\\nimport { action } from '@storybook/addon-actions'\\nimport IconButton from '.'\\nimport Box from '../Box'\\nimport { withKnobs, boolean, text, radios } from '@storybook/addon-knobs'\\nimport { path } from '..'\\nimport ThemeWrapper from '../../../utilities/components/ThemeWrapper'\\nimport { tIntent } from '../Button'\\n\\nexport default {\\n  title: `${path}/IconButton`,\\n  decorators: [withKnobs],\\n  component: IconButton\\n}\\nconst radioOptions = {\\n  intent: { default: 'default', page: 'page', table: 'table' }\\n}\\nexport const withBasic = () => (\\n  <ThemeWrapper>\\n    <Box display='flex' justifyContent='space-evenly'>\\n      <IconButton\\n        onClick={action('clicked an Icon button with text')}\\n        primary={boolean('primary', false)}\\n        disabled={boolean('disabled', false)}\\n        intent={radios('intent', radioOptions.intent, 'default') as tIntent}\\n        iconVariant='icomoon-add'\\n        children='Add'\\n      />\\n      <IconButton\\n        onClick={action('clicked an Icon button with text')}\\n        primary={boolean('primary', false)}\\n        disabled={boolean('disabled', false)}\\n        intent={radios('intent', radioOptions.intent, 'default') as tIntent}\\n        iconVariant='icomoon-delete-empty'\\n        children='Delete'\\n      />\\n      <IconButton\\n        onClick={action('clicked an Icon button with text')}\\n        primary={boolean('primary', false)}\\n        disabled={boolean('disabled', false)}\\n        iconVariant='calendar'\\n        intent={radios('intent', radioOptions.intent, 'default') as tIntent}\\n        children='Calendar'\\n      />\\n    </Box>\\n  </ThemeWrapper>\\n)\\nexport const withCircular = () => (\\n  <ThemeWrapper>\\n    <Box display='flex' justifyContent='space-evenly'>\\n      <IconButton\\n        onClick={action('clicked an Icon button')}\\n        primary={boolean('primary', false)}\\n        disabled={boolean('disabled', false)}\\n        iconVariant='add'\\n        iconSize='xs'\\n        circle\\n      />\\n      <IconButton\\n        onClick={action('clicked an Icon button')}\\n        primary={boolean('primary', false)}\\n        disabled={boolean('disabled', false)}\\n        iconVariant='calendar'\\n        iconSize='md'\\n        circle\\n      />\\n    </Box>\\n  </ThemeWrapper>\\n)\\n\\nexport const withOnlyIcon = () => (\\n  <ThemeWrapper>\\n    <Box display='flex' justifyContent='space-evenly'>\\n      <IconButton\\n        onClick={action('clicked an Icon')}\\n        disabled={boolean('disabled', false)}\\n        onlyIcon\\n        iconVariant='add'\\n        iconSize='xs'\\n        color={text('Colors', 'primary.main')}\\n      />\\n      <IconButton\\n        onClick={action('clicked an Icon')}\\n        disabled={boolean('disabled', false)}\\n        onlyIcon\\n        iconVariant='calendar'\\n        iconSize='md'\\n        color={text('Colors', 'primary.main')}\\n      />\\n      <IconButton\\n        onClick={action('clicked an Icon')}\\n        disabled={boolean('disabled', false)}\\n        onlyIcon\\n        iconVariant='mail'\\n        iconSize='xl'\\n        color={text('Colors', 'primary.main')}\\n      />\\n    </Box>\\n  </ThemeWrapper>\\n)\\n\\nexport const withLink = () => (\\n  <ThemeWrapper>\\n    <Box display='flex' justifyContent='space-evenly'>\\n      <IconButton\\n        onClick={action('clicked an Icon')}\\n        disabled={boolean('disabled', false)}\\n        iconVariant='add'\\n        color={text('Colors', 'primary.main')}\\n        variant='link'\\n        children='Add'\\n      />\\n      <IconButton\\n        onClick={action('clicked an Icon')}\\n        disabled={boolean('disabled', false)}\\n        iconVariant='calendar'\\n        color={text('Colors', 'primary.main')}\\n        variant='link'\\n        children='Calendar'\\n      />\\n      <IconButton\\n        onClick={action('clicked an Icon')}\\n        disabled={boolean('disabled', false)}\\n        iconVariant='mail'\\n        color={text('Colors', 'primary.main')}\\n        variant='link'\\n        children='Mail'\\n      />\\n    </Box>\\n  </ThemeWrapper>\\n)\\n\",\n    \"locationsMap\": {}\n  }), _parameters),\n  title: path + \"/IconButton\",\n  decorators: [withKnobs],\n  component: IconButton\n};\nvar radioOptions = {\n  intent: {\n    \"default\": 'default',\n    page: 'page',\n    table: 'table'\n  }\n};\nexport var withBasic = addSourceDecorator(addSourceDecorator(addSourceDecorator(function () {\n  return React.createElement(ThemeWrapper, null, React.createElement(Box, {\n    display: 'flex',\n    justifyContent: 'space-evenly'\n  }, React.createElement(IconButton, {\n    onClick: action('clicked an Icon button with text'),\n    primary: _boolean('primary', false),\n    disabled: _boolean('disabled', false),\n    intent: radios('intent', radioOptions.intent, 'default'),\n    iconVariant: 'icomoon-add',\n    children: 'Add'\n  }), React.createElement(IconButton, {\n    onClick: action('clicked an Icon button with text'),\n    primary: _boolean('primary', false),\n    disabled: _boolean('disabled', false),\n    intent: radios('intent', radioOptions.intent, 'default'),\n    iconVariant: 'icomoon-delete-empty',\n    children: 'Delete'\n  }), React.createElement(IconButton, {\n    onClick: action('clicked an Icon button with text'),\n    primary: _boolean('primary', false),\n    disabled: _boolean('disabled', false),\n    iconVariant: 'calendar',\n    intent: radios('intent', radioOptions.intent, 'default'),\n    children: 'Calendar'\n  })));\n}, {\n  __STORY__: __STORY__,\n  __ADDS_MAP__: __ADDS_MAP__,\n  __MAIN_FILE_LOCATION__: __MAIN_FILE_LOCATION__,\n  __MODULE_DEPENDENCIES__: __MODULE_DEPENDENCIES__,\n  __LOCAL_DEPENDENCIES__: __LOCAL_DEPENDENCIES__,\n  __SOURCE_PREFIX__: __SOURCE_PREFIX__,\n  __IDS_TO_FRAMEWORKS__: __IDS_TO_FRAMEWORKS__\n}), {\n  __STORY__: __STORY__,\n  __ADDS_MAP__: __ADDS_MAP__,\n  __MAIN_FILE_LOCATION__: __MAIN_FILE_LOCATION__,\n  __MODULE_DEPENDENCIES__: __MODULE_DEPENDENCIES__,\n  __LOCAL_DEPENDENCIES__: __LOCAL_DEPENDENCIES__,\n  __SOURCE_PREFIX__: __SOURCE_PREFIX__,\n  __IDS_TO_FRAMEWORKS__: __IDS_TO_FRAMEWORKS__\n}), {\n  __STORY__: __STORY__,\n  __ADDS_MAP__: __ADDS_MAP__,\n  __MAIN_FILE_LOCATION__: __MAIN_FILE_LOCATION__,\n  __MODULE_DEPENDENCIES__: __MODULE_DEPENDENCIES__,\n  __LOCAL_DEPENDENCIES__: __LOCAL_DEPENDENCIES__,\n  __SOURCE_PREFIX__: __SOURCE_PREFIX__,\n  __IDS_TO_FRAMEWORKS__: __IDS_TO_FRAMEWORKS__\n});\n;\n;\nexport var withCircular = addSourceDecorator(addSourceDecorator(addSourceDecorator(function () {\n  return React.createElement(ThemeWrapper, null, React.createElement(Box, {\n    display: 'flex',\n    justifyContent: 'space-evenly'\n  }, React.createElement(IconButton, {\n    onClick: action('clicked an Icon button'),\n    primary: _boolean('primary', false),\n    disabled: _boolean('disabled', false),\n    iconVariant: 'add',\n    iconSize: 'xs',\n    circle: true\n  }), React.createElement(IconButton, {\n    onClick: action('clicked an Icon button'),\n    primary: _boolean('primary', false),\n    disabled: _boolean('disabled', false),\n    iconVariant: 'calendar',\n    iconSize: 'md',\n    circle: true\n  })));\n}, {\n  __STORY__: __STORY__,\n  __ADDS_MAP__: __ADDS_MAP__,\n  __MAIN_FILE_LOCATION__: __MAIN_FILE_LOCATION__,\n  __MODULE_DEPENDENCIES__: __MODULE_DEPENDENCIES__,\n  __LOCAL_DEPENDENCIES__: __LOCAL_DEPENDENCIES__,\n  __SOURCE_PREFIX__: __SOURCE_PREFIX__,\n  __IDS_TO_FRAMEWORKS__: __IDS_TO_FRAMEWORKS__\n}), {\n  __STORY__: __STORY__,\n  __ADDS_MAP__: __ADDS_MAP__,\n  __MAIN_FILE_LOCATION__: __MAIN_FILE_LOCATION__,\n  __MODULE_DEPENDENCIES__: __MODULE_DEPENDENCIES__,\n  __LOCAL_DEPENDENCIES__: __LOCAL_DEPENDENCIES__,\n  __SOURCE_PREFIX__: __SOURCE_PREFIX__,\n  __IDS_TO_FRAMEWORKS__: __IDS_TO_FRAMEWORKS__\n}), {\n  __STORY__: __STORY__,\n  __ADDS_MAP__: __ADDS_MAP__,\n  __MAIN_FILE_LOCATION__: __MAIN_FILE_LOCATION__,\n  __MODULE_DEPENDENCIES__: __MODULE_DEPENDENCIES__,\n  __LOCAL_DEPENDENCIES__: __LOCAL_DEPENDENCIES__,\n  __SOURCE_PREFIX__: __SOURCE_PREFIX__,\n  __IDS_TO_FRAMEWORKS__: __IDS_TO_FRAMEWORKS__\n});\n;\n;\nexport var withOnlyIcon = addSourceDecorator(addSourceDecorator(addSourceDecorator(function () {\n  return React.createElement(ThemeWrapper, null, React.createElement(Box, {\n    display: 'flex',\n    justifyContent: 'space-evenly'\n  }, React.createElement(IconButton, {\n    onClick: action('clicked an Icon'),\n    disabled: _boolean('disabled', false),\n    onlyIcon: true,\n    iconVariant: 'add',\n    iconSize: 'xs',\n    color: text('Colors', 'primary.main')\n  }), React.createElement(IconButton, {\n    onClick: action('clicked an Icon'),\n    disabled: _boolean('disabled', false),\n    onlyIcon: true,\n    iconVariant: 'calendar',\n    iconSize: 'md',\n    color: text('Colors', 'primary.main')\n  }), React.createElement(IconButton, {\n    onClick: action('clicked an Icon'),\n    disabled: _boolean('disabled', false),\n    onlyIcon: true,\n    iconVariant: 'mail',\n    iconSize: 'xl',\n    color: text('Colors', 'primary.main')\n  })));\n}, {\n  __STORY__: __STORY__,\n  __ADDS_MAP__: __ADDS_MAP__,\n  __MAIN_FILE_LOCATION__: __MAIN_FILE_LOCATION__,\n  __MODULE_DEPENDENCIES__: __MODULE_DEPENDENCIES__,\n  __LOCAL_DEPENDENCIES__: __LOCAL_DEPENDENCIES__,\n  __SOURCE_PREFIX__: __SOURCE_PREFIX__,\n  __IDS_TO_FRAMEWORKS__: __IDS_TO_FRAMEWORKS__\n}), {\n  __STORY__: __STORY__,\n  __ADDS_MAP__: __ADDS_MAP__,\n  __MAIN_FILE_LOCATION__: __MAIN_FILE_LOCATION__,\n  __MODULE_DEPENDENCIES__: __MODULE_DEPENDENCIES__,\n  __LOCAL_DEPENDENCIES__: __LOCAL_DEPENDENCIES__,\n  __SOURCE_PREFIX__: __SOURCE_PREFIX__,\n  __IDS_TO_FRAMEWORKS__: __IDS_TO_FRAMEWORKS__\n}), {\n  __STORY__: __STORY__,\n  __ADDS_MAP__: __ADDS_MAP__,\n  __MAIN_FILE_LOCATION__: __MAIN_FILE_LOCATION__,\n  __MODULE_DEPENDENCIES__: __MODULE_DEPENDENCIES__,\n  __LOCAL_DEPENDENCIES__: __LOCAL_DEPENDENCIES__,\n  __SOURCE_PREFIX__: __SOURCE_PREFIX__,\n  __IDS_TO_FRAMEWORKS__: __IDS_TO_FRAMEWORKS__\n});\n;\n;\nexport var withLink = addSourceDecorator(addSourceDecorator(addSourceDecorator(function () {\n  return React.createElement(ThemeWrapper, null, React.createElement(Box, {\n    display: 'flex',\n    justifyContent: 'space-evenly'\n  }, React.createElement(IconButton, {\n    onClick: action('clicked an Icon'),\n    disabled: _boolean('disabled', false),\n    iconVariant: 'add',\n    color: text('Colors', 'primary.main'),\n    variant: 'link',\n    children: 'Add'\n  }), React.createElement(IconButton, {\n    onClick: action('clicked an Icon'),\n    disabled: _boolean('disabled', false),\n    iconVariant: 'calendar',\n    color: text('Colors', 'primary.main'),\n    variant: 'link',\n    children: 'Calendar'\n  }), React.createElement(IconButton, {\n    onClick: action('clicked an Icon'),\n    disabled: _boolean('disabled', false),\n    iconVariant: 'mail',\n    color: text('Colors', 'primary.main'),\n    variant: 'link',\n    children: 'Mail'\n  })));\n}, {\n  __STORY__: __STORY__,\n  __ADDS_MAP__: __ADDS_MAP__,\n  __MAIN_FILE_LOCATION__: __MAIN_FILE_LOCATION__,\n  __MODULE_DEPENDENCIES__: __MODULE_DEPENDENCIES__,\n  __LOCAL_DEPENDENCIES__: __LOCAL_DEPENDENCIES__,\n  __SOURCE_PREFIX__: __SOURCE_PREFIX__,\n  __IDS_TO_FRAMEWORKS__: __IDS_TO_FRAMEWORKS__\n}), {\n  __STORY__: __STORY__,\n  __ADDS_MAP__: __ADDS_MAP__,\n  __MAIN_FILE_LOCATION__: __MAIN_FILE_LOCATION__,\n  __MODULE_DEPENDENCIES__: __MODULE_DEPENDENCIES__,\n  __LOCAL_DEPENDENCIES__: __LOCAL_DEPENDENCIES__,\n  __SOURCE_PREFIX__: __SOURCE_PREFIX__,\n  __IDS_TO_FRAMEWORKS__: __IDS_TO_FRAMEWORKS__\n}), {\n  __STORY__: __STORY__,\n  __ADDS_MAP__: __ADDS_MAP__,\n  __MAIN_FILE_LOCATION__: __MAIN_FILE_LOCATION__,\n  __MODULE_DEPENDENCIES__: __MODULE_DEPENDENCIES__,\n  __LOCAL_DEPENDENCIES__: __LOCAL_DEPENDENCIES__,\n  __SOURCE_PREFIX__: __SOURCE_PREFIX__,\n  __IDS_TO_FRAMEWORKS__: __IDS_TO_FRAMEWORKS__\n});","map":{"version":3,"sources":["/Users/farhanansari/Desktop/CODE/PrxProject/untitled folder/reactStoryBook/node_modules/react-docgen-typescript-loader/dist/index.js!/Users/farhanansari/Desktop/CODE/PrxProject/untitled folder/reactStoryBook/node_modules/eslint-loader/dist/cjs.js??ref--6-0!/Users/farhanansari/Desktop/CODE/PrxProject/untitled folder/reactStoryBook/node_modules/@storybook/source-loader/dist/server/index.js??ref--11!/Users/farhanansari/Desktop/CODE/PrxProject/untitled folder/reactStoryBook/node_modules/@storybook/source-loader/dist/server/index.js!/Users/farhanansari/Desktop/CODE/PrxProject/untitled folder/reactStoryBook/node_modules/@storybook/source-loader/dist/server/index.js!/Users/farhanansari/Desktop/CODE/PrxProject/untitled folder/reactStoryBook/src/components/atoms/IconButton/IconButton.stories.tsx"],"names":[],"mappings":";;;;AACA;AACA;AACA;AACA,IAAI,gBAAgB,GAAG,OAAO,CAAC,kCAAD,CAAP,CAA4C,UAAnE,C,CACA;;;AACA,IAAI,kBAAkB,GAAG,OAAO,CAAC,kCAAD,CAAP,CAA4C,SAArE,C,CACA;;;AACA,IAAI,iBAAiB,GAAG,4GAAxB,C,CACA;;AACA,IAAI,SAAS,GAAG,k+1CAAhB,C,CACA;;AACA,IAAI,YAAY,GAAG,EAAnB,C,CACA;;AACA,IAAI,sBAAsB,GAAG,yBAA7B,C,CACA;;AACA,IAAI,uBAAuB,GAAG,EAA9B,C,CACA;;AACA,IAAI,sBAAsB,GAAG,EAA7B,C,CACA;;AACA,IAAI,qBAAqB,GAAG,EAA5B;AAGA;AACA;AACA;;AACA,IAAI,gBAAgB,GAAG,OAAO,CAAC,kCAAD,CAAP,CAA4C,UAAnE,C,CACA;;;AACA,IAAI,kBAAkB,GAAG,OAAO,CAAC,kCAAD,CAAP,CAA4C,SAArE,C,CACA;;;AACA,IAAI,iBAAiB,GAAG,4GAAxB,C,CACA;;AACA,IAAI,SAAS,GAAG,g7aAAhB,C,CACA;;AACA,IAAI,YAAY,GAAG,EAAnB,C,CACA;;AACA,IAAI,sBAAsB,GAAG,yBAA7B,C,CACA;;AACA,IAAI,uBAAuB,GAAG,EAA9B,C,CACA;;AACA,IAAI,sBAAsB,GAAG,EAA7B,C,CACA;;AACA,IAAI,qBAAqB,GAAG,EAA5B;AAGA;AACA;AACA;;AACA,IAAI,gBAAgB,GAAG,OAAO,CAAC,kCAAD,CAAP,CAA4C,UAAnE,C,CACA;;;AACA,IAAI,kBAAkB,GAAG,OAAO,CAAC,kCAAD,CAAP,CAA4C,SAArE,C,CACA;;;AACA,IAAI,iBAAiB,GAAG,4GAAxB,C,CACA;;AACA,IAAI,SAAS,GAAG,s8HAAhB,C,CACA;;AACA,IAAI,YAAY,GAAG,EAAnB,C,CACA;;AACA,IAAI,sBAAsB,GAAG,yBAA7B,C,CACA;;AACA,IAAI,uBAAuB,GAAG,EAA9B,C,CACA;;AACA,IAAI,sBAAsB,GAAG,EAA7B,C,CACA;;AACA,IAAI,qBAAqB,GAAG,EAA5B;AAEA,OAAO,KAAP,MAAkB,OAAlB;AACA,SAAS,MAAT,QAAuB,0BAAvB;AACA,OAAO,UAAP,MAAuB,GAAvB;AACA,OAAO,GAAP,MAAgB,QAAhB;AACA,SAAS,SAAT,EAAoB,OAAO,IAAP,QAApB,EAA6B,IAA7B,EAAmC,MAAnC,QAAiD,wBAAjD;AACA,SAAS,IAAT,QAAqB,IAArB;AACA,OAAO,YAAP,MAAyB,4CAAzB;AAGA,eAAe;AAAC,EAAA,UAAU;AAAG,mBAAc;AAAC,gBAAS,k+1CAAV;AAA6+1C,sBAAe;AAA5/1C;AAAjB,iDAA+h2C;AAAC,cAAS,g7aAAV;AAA27a,oBAAe;AAA18a,GAA/h2C,+CAA2/wD;AAAC,cAAS,s8HAAV;AAAi9H,oBAAe;AAAh+H,GAA3/wD,eAAX;AACb,EAAA,KAAK,EAAK,IAAI,GAAA,aADD;AAEb,EAAA,UAAU,EAAE,CAAC,SAAD,CAFC;AAGb,EAAA,SAAS,EAAE;AAHE,CAAf;AAKA,IAAM,YAAY,GAAG;AACnB,EAAA,MAAM,EAAE;AAAE,eAAS,SAAX;AAAsB,IAAA,IAAI,EAAE,MAA5B;AAAoC,IAAA,KAAK,EAAE;AAA3C;AADW,CAArB;AAGA,OAAO,IAAM,SAAS,GAAG,kBAAkB,CAAC,kBAAkB,CAAC,kBAAkB,CAAC,YAAA;AAAM,SACtF,KAAA,CAAA,aAAA,CAAC,YAAD,EAAa,IAAb,EACE,KAAA,CAAA,aAAA,CAAC,GAAD,EAAI;AAAC,IAAA,OAAO,EAAC,MAAT;AAAgB,IAAA,cAAc,EAAC;AAA/B,GAAJ,EACE,KAAA,CAAA,aAAA,CAAC,UAAD,EAAW;AACT,IAAA,OAAO,EAAE,MAAM,CAAC,kCAAD,CADN;AAET,IAAA,OAAO,EAAE,QAAO,CAAC,SAAD,EAAY,KAAZ,CAFP;AAGT,IAAA,QAAQ,EAAE,QAAO,CAAC,UAAD,EAAa,KAAb,CAHR;AAIT,IAAA,MAAM,EAAE,MAAM,CAAC,QAAD,EAAW,YAAY,CAAC,MAAxB,EAAgC,SAAhC,CAJL;AAKT,IAAA,WAAW,EAAC,aALH;AAMT,IAAA,QAAQ,EAAC;AANA,GAAX,CADF,EASE,KAAA,CAAA,aAAA,CAAC,UAAD,EAAW;AACT,IAAA,OAAO,EAAE,MAAM,CAAC,kCAAD,CADN;AAET,IAAA,OAAO,EAAE,QAAO,CAAC,SAAD,EAAY,KAAZ,CAFP;AAGT,IAAA,QAAQ,EAAE,QAAO,CAAC,UAAD,EAAa,KAAb,CAHR;AAIT,IAAA,MAAM,EAAE,MAAM,CAAC,QAAD,EAAW,YAAY,CAAC,MAAxB,EAAgC,SAAhC,CAJL;AAKT,IAAA,WAAW,EAAC,sBALH;AAMT,IAAA,QAAQ,EAAC;AANA,GAAX,CATF,EAiBE,KAAA,CAAA,aAAA,CAAC,UAAD,EAAW;AACT,IAAA,OAAO,EAAE,MAAM,CAAC,kCAAD,CADN;AAET,IAAA,OAAO,EAAE,QAAO,CAAC,SAAD,EAAY,KAAZ,CAFP;AAGT,IAAA,QAAQ,EAAE,QAAO,CAAC,UAAD,EAAa,KAAb,CAHR;AAIT,IAAA,WAAW,EAAC,UAJH;AAKT,IAAA,MAAM,EAAE,MAAM,CAAC,QAAD,EAAW,YAAY,CAAC,MAAxB,EAAgC,SAAhC,CALL;AAMT,IAAA,QAAQ,EAzBwE;AAmBvE,GAAX,CAjBF,CADF,CADsF;AA6BvF,CA7BgF,EA6B9E;AAAC,EAAA,SAAS,EAAA,SAAV;AAAY,EAAA,YAAY,EAAA,YAAxB;AAAyB,EAAA,sBAAsB,EAAA,sBAA/C;AAAgD,EAAA,uBAAuB,EAAA,uBAAvE;AAAwE,EAAA,sBAAsB,EAAA,sBAA9F;AAA+F,EAAA,iBAAiB,EAAA,iBAAhH;AAAiH,EAAA,qBAAqB,EAAA;AAAtI,CA7B8E,CAAnB,EA6B+E;AAAC,EAAA,SAAS,EAAA,SAAV;AAAY,EAAA,YAAY,EAAA,YAAxB;AAAyB,EAAA,sBAAsB,EAAA,sBAA/C;AAAgD,EAAA,uBAAuB,EAAA,uBAAvE;AAAwE,EAAA,sBAAsB,EAAA,sBAA9F;AAA+F,EAAA,iBAAiB,EAAA,iBAAhH;AAAiH,EAAA,qBAAqB,EAAA;AAAtI,CA7B/E,CAAnB,EA6B4O;AAAC,EAAA,SAAS,EAAA,SAAV;AAAY,EAAA,YAAY,EAAA,YAAxB;AAAyB,EAAA,sBAAsB,EAAA,sBAA/C;AAAgD,EAAA,uBAAuB,EAAA,uBAAvE;AAAwE,EAAA,sBAAsB,EAAA,sBAA9F;AAA+F,EAAA,iBAAiB,EAAA,iBAAhH;AAAiH,EAAA,qBAAqB,EAAA;AAAtI,CA7B5O,CAApC;AA6ByZ;AAAC;AACja,OAAO,IAAM,YAAY,GAAG,kBAAkB,CAAC,kBAAkB,CAAC,kBAAkB,CAAC,YAAA;AAAM,SACzF,KAAA,CAAA,aAAA,CAAC,YAAD,EAAa,IAAb,EACE,KAAA,CAAA,aAAA,CAAC,GAAD,EAAI;AAAC,IAAA,OAAO,EAAC,MAAT;AAAgB,IAAA,cAAc,EAAC;AAA/B,GAAJ,EACE,KAAA,CAAA,aAAA,CAAC,UAAD,EAAW;AACT,IAAA,OAAO,EAAE,MAAM,CAAC,wBAAD,CADN;AAET,IAAA,OAAO,EAAE,QAAO,CAAC,SAAD,EAAY,KAAZ,CAFP;AAGT,IAAA,QAAQ,EAAE,QAAO,CAAC,UAAD,EAAa,KAAb,CAHR;AAIT,IAAA,WAAW,EAAC,KAJH;AAKT,IAAA,QAAQ,EAAC,IALA;AAMT,IAAA,MAAM,EAAA;AANG,GAAX,CADF,EASE,KAAA,CAAA,aAAA,CAAC,UAAD,EAAW;AACT,IAAA,OAAO,EAAE,MAAM,CAAC,wBAAD,CADN;AAET,IAAA,OAAO,EAAE,QAAO,CAAC,SAAD,EAAY,KAAZ,CAFP;AAGT,IAAA,QAAQ,EAAE,QAAO,CAAC,UAAD,EAAa,KAAb,CAHR;AAIT,IAAA,WAAW,EAAC,UAJH;AAKT,IAAA,QAAQ,EAAC,IALA;AAMT,IAAA,MAAM,EAjB6E;AAW1E,GAAX,CATF,CADF,CADyF;AAqB1F,CArBmF,EAqBjF;AAAC,EAAA,SAAS,EAAA,SAAV;AAAY,EAAA,YAAY,EAAA,YAAxB;AAAyB,EAAA,sBAAsB,EAAA,sBAA/C;AAAgD,EAAA,uBAAuB,EAAA,uBAAvE;AAAwE,EAAA,sBAAsB,EAAA,sBAA9F;AAA+F,EAAA,iBAAiB,EAAA,iBAAhH;AAAiH,EAAA,qBAAqB,EAAA;AAAtI,CArBiF,CAAnB,EAqB4E;AAAC,EAAA,SAAS,EAAA,SAAV;AAAY,EAAA,YAAY,EAAA,YAAxB;AAAyB,EAAA,sBAAsB,EAAA,sBAA/C;AAAgD,EAAA,uBAAuB,EAAA,uBAAvE;AAAwE,EAAA,sBAAsB,EAAA,sBAA9F;AAA+F,EAAA,iBAAiB,EAAA,iBAAhH;AAAiH,EAAA,qBAAqB,EAAA;AAAtI,CArB5E,CAAnB,EAqByO;AAAC,EAAA,SAAS,EAAA,SAAV;AAAY,EAAA,YAAY,EAAA,YAAxB;AAAyB,EAAA,sBAAsB,EAAA,sBAA/C;AAAgD,EAAA,uBAAuB,EAAA,uBAAvE;AAAwE,EAAA,sBAAsB,EAAA,sBAA9F;AAA+F,EAAA,iBAAiB,EAAA,iBAAhH;AAAiH,EAAA,qBAAqB,EAAA;AAAtI,CArBzO,CAAvC;AAqByZ;AAAC;AAEja,OAAO,IAAM,YAAY,GAAG,kBAAkB,CAAC,kBAAkB,CAAC,kBAAkB,CAAC,YAAA;AAAM,SACzF,KAAA,CAAA,aAAA,CAAC,YAAD,EAAa,IAAb,EACE,KAAA,CAAA,aAAA,CAAC,GAAD,EAAI;AAAC,IAAA,OAAO,EAAC,MAAT;AAAgB,IAAA,cAAc,EAAC;AAA/B,GAAJ,EACE,KAAA,CAAA,aAAA,CAAC,UAAD,EAAW;AACT,IAAA,OAAO,EAAE,MAAM,CAAC,iBAAD,CADN;AAET,IAAA,QAAQ,EAAE,QAAO,CAAC,UAAD,EAAa,KAAb,CAFR;AAGT,IAAA,QAAQ,EAAA,IAHC;AAIT,IAAA,WAAW,EAAC,KAJH;AAKT,IAAA,QAAQ,EAAC,IALA;AAMT,IAAA,KAAK,EAAE,IAAI,CAAC,QAAD,EAAW,cAAX;AANF,GAAX,CADF,EASE,KAAA,CAAA,aAAA,CAAC,UAAD,EAAW;AACT,IAAA,OAAO,EAAE,MAAM,CAAC,iBAAD,CADN;AAET,IAAA,QAAQ,EAAE,QAAO,CAAC,UAAD,EAAa,KAAb,CAFR;AAGT,IAAA,QAAQ,EAAA,IAHC;AAIT,IAAA,WAAW,EAAC,UAJH;AAKT,IAAA,QAAQ,EAAC,IALA;AAMT,IAAA,KAAK,EAAE,IAAI,CAAC,QAAD,EAAW,cAAX;AANF,GAAX,CATF,EAiBE,KAAA,CAAA,aAAA,CAAC,UAAD,EAAW;AACT,IAAA,OAAO,EAAE,MAAM,CAAC,iBAAD,CADN;AAET,IAAA,QAAQ,EAAE,QAAO,CAAC,UAAD,EAAa,KAAb,CAFR;AAGT,IAAA,QAAQ,EAAA,IAHC;AAIT,IAAA,WAAW,EAAC,MAJH;AAKT,IAAA,QAAQ,EAAC,IALA;AAMT,IAAA,KAAK,EAAE,IAAI,CAAC,QAAD,EAzBwE,cAyBxE;AANF,GAAX,CAjBF,CADF,CADyF;AA6B1F,CA7BmF,EA6BjF;AAAC,EAAA,SAAS,EAAA,SAAV;AAAY,EAAA,YAAY,EAAA,YAAxB;AAAyB,EAAA,sBAAsB,EAAA,sBAA/C;AAAgD,EAAA,uBAAuB,EAAA,uBAAvE;AAAwE,EAAA,sBAAsB,EAAA,sBAA9F;AAA+F,EAAA,iBAAiB,EAAA,iBAAhH;AAAiH,EAAA,qBAAqB,EAAA;AAAtI,CA7BiF,CAAnB,EA6B4E;AAAC,EAAA,SAAS,EAAA,SAAV;AAAY,EAAA,YAAY,EAAA,YAAxB;AAAyB,EAAA,sBAAsB,EAAA,sBAA/C;AAAgD,EAAA,uBAAuB,EAAA,uBAAvE;AAAwE,EAAA,sBAAsB,EAAA,sBAA9F;AAA+F,EAAA,iBAAiB,EAAA,iBAAhH;AAAiH,EAAA,qBAAqB,EAAA;AAAtI,CA7B5E,CAAnB,EA6ByO;AAAC,EAAA,SAAS,EAAA,SAAV;AAAY,EAAA,YAAY,EAAA,YAAxB;AAAyB,EAAA,sBAAsB,EAAA,sBAA/C;AAAgD,EAAA,uBAAuB,EAAA,uBAAvE;AAAwE,EAAA,sBAAsB,EAAA,sBAA9F;AAA+F,EAAA,iBAAiB,EAAA,iBAAhH;AAAiH,EAAA,qBAAqB,EAAA;AAAtI,CA7BzO,CAAvC;AA6ByZ;AAAC;AAEja,OAAO,IAAM,QAAQ,GAAG,kBAAkB,CAAC,kBAAkB,CAAC,kBAAkB,CAAC,YAAA;AAAM,SACrF,KAAA,CAAA,aAAA,CAAC,YAAD,EAAa,IAAb,EACE,KAAA,CAAA,aAAA,CAAC,GAAD,EAAI;AAAC,IAAA,OAAO,EAAC,MAAT;AAAgB,IAAA,cAAc,EAAC;AAA/B,GAAJ,EACE,KAAA,CAAA,aAAA,CAAC,UAAD,EAAW;AACT,IAAA,OAAO,EAAE,MAAM,CAAC,iBAAD,CADN;AAET,IAAA,QAAQ,EAAE,QAAO,CAAC,UAAD,EAAa,KAAb,CAFR;AAGT,IAAA,WAAW,EAAC,KAHH;AAIT,IAAA,KAAK,EAAE,IAAI,CAAC,QAAD,EAAW,cAAX,CAJF;AAKT,IAAA,OAAO,EAAC,MALC;AAMT,IAAA,QAAQ,EAAC;AANA,GAAX,CADF,EASE,KAAA,CAAA,aAAA,CAAC,UAAD,EAAW;AACT,IAAA,OAAO,EAAE,MAAM,CAAC,iBAAD,CADN;AAET,IAAA,QAAQ,EAAE,QAAO,CAAC,UAAD,EAAa,KAAb,CAFR;AAGT,IAAA,WAAW,EAAC,UAHH;AAIT,IAAA,KAAK,EAAE,IAAI,CAAC,QAAD,EAAW,cAAX,CAJF;AAKT,IAAA,OAAO,EAAC,MALC;AAMT,IAAA,QAAQ,EAAC;AANA,GAAX,CATF,EAiBE,KAAA,CAAA,aAAA,CAAC,UAAD,EAAW;AACT,IAAA,OAAO,EAAE,MAAM,CAAC,iBAAD,CADN;AAET,IAAA,QAAQ,EAAE,QAAO,CAAC,UAAD,EAAa,KAAb,CAFR;AAGT,IAAA,WAAW,EAAC,MAHH;AAIT,IAAA,KAAK,EAAE,IAAI,CAAC,QAAD,EAAW,cAAX,CAJF;AAKT,IAAA,OAAO,EAAC,MALC;AAMT,IAAA,QAAQ,EAzBuE;AAmBtE,GAAX,CAjBF,CADF,CADqF;AA6BtF,CA7B+E,EA6B7E;AAAC,EAAA,SAAS,EAAA,SAAV;AAAY,EAAA,YAAY,EAAA,YAAxB;AAAyB,EAAA,sBAAsB,EAAA,sBAA/C;AAAgD,EAAA,uBAAuB,EAAA,uBAAvE;AAAwE,EAAA,sBAAsB,EAAA,sBAA9F;AAA+F,EAAA,iBAAiB,EAAA,iBAAhH;AAAiH,EAAA,qBAAqB,EAAA;AAAtI,CA7B6E,CAAnB,EA6BgF;AAAC,EAAA,SAAS,EAAA,SAAV;AAAY,EAAA,YAAY,EAAA,YAAxB;AAAyB,EAAA,sBAAsB,EAAA,sBAA/C;AAAgD,EAAA,uBAAuB,EAAA,uBAAvE;AAAwE,EAAA,sBAAsB,EAAA,sBAA9F;AAA+F,EAAA,iBAAiB,EAAA,iBAAhH;AAAiH,EAAA,qBAAqB,EAAA;AAAtI,CA7BhF,CAAnB,EA6B6O;AAAC,EAAA,SAAS,EAAA,SAAV;AAAY,EAAA,YAAY,EAAA,YAAxB;AAAyB,EAAA,sBAAsB,EAAA,sBAA/C;AAAgD,EAAA,uBAAuB,EAAA,uBAAvE;AAAwE,EAAA,sBAAsB,EAAA,sBAA9F;AAA+F,EAAA,iBAAiB,EAAA,iBAAhH;AAAiH,EAAA,qBAAqB,EAAA;AAAtI,CA7B7O,CAAnC","sourcesContent":["\n/* eslint-disable */\n// @ts-nocheck\n// @ts-ignore\nvar withSourceLoader = require('@storybook/source-loader/preview').withSource;\n// @ts-ignore\nvar addSourceDecorator = require(\"@storybook/source-loader/preview\").addSource;\n// @ts-ignore\nvar __SOURCE_PREFIX__ = \"/Users/farhanansari/Desktop/CODE/PrxProject/untitled folder/reactStoryBook/src/components/atoms/IconButton\";\n// @ts-ignore\nvar __STORY__ = \"\\n\\n// @ts-nocheck\\n// @ts-ignore\\nvar withSourceLoader = require('@storybook/source-loader/preview').withSource;\\n// @ts-ignore\\nvar addSourceDecorator = require(\\\"@storybook/source-loader/preview\\\").addSource;\\n// @ts-ignore\\nvar __SOURCE_PREFIX__ = \\\"/Users/farhanansari/Desktop/CODE/PrxProject/untitled folder/reactStoryBook/src/components/atoms/IconButton\\\";\\n// @ts-ignore\\nvar __STORY__ = \\\"\\\\n\\\\n// @ts-nocheck\\\\n// @ts-ignore\\\\nvar withSourceLoader = require('@storybook/source-loader/preview').withSource;\\\\n// @ts-ignore\\\\nvar addSourceDecorator = require(\\\\\\\"@storybook/source-loader/preview\\\\\\\").addSource;\\\\n// @ts-ignore\\\\nvar __SOURCE_PREFIX__ = \\\\\\\"/Users/farhanansari/Desktop/CODE/PrxProject/untitled folder/reactStoryBook/src/components/atoms/IconButton\\\\\\\";\\\\n// @ts-ignore\\\\nvar __STORY__ = \\\\\\\"import React from 'react'\\\\\\\\nimport { action } from '@storybook/addon-actions'\\\\\\\\nimport IconButton from '.'\\\\\\\\nimport Box from '../Box'\\\\\\\\nimport { withKnobs, boolean, text, radios } from '@storybook/addon-knobs'\\\\\\\\nimport { path } from '..'\\\\\\\\nimport ThemeWrapper from '../../../utilities/components/ThemeWrapper'\\\\\\\\nimport { tIntent } from '../Button'\\\\\\\\n\\\\\\\\nexport default {\\\\\\\\n  title: `${path}/IconButton`,\\\\\\\\n  decorators: [withKnobs],\\\\\\\\n  component: IconButton\\\\\\\\n}\\\\\\\\nconst radioOptions = {\\\\\\\\n  intent: { default: 'default', page: 'page', table: 'table' }\\\\\\\\n}\\\\\\\\nexport const withBasic = () => (\\\\\\\\n  <ThemeWrapper>\\\\\\\\n    <Box display='flex' justifyContent='space-evenly'>\\\\\\\\n      <IconButton\\\\\\\\n        onClick={action('clicked an Icon button with text')}\\\\\\\\n        primary={boolean('primary', false)}\\\\\\\\n        disabled={boolean('disabled', false)}\\\\\\\\n        intent={radios('intent', radioOptions.intent, 'default') as tIntent}\\\\\\\\n        iconVariant='icomoon-add'\\\\\\\\n        children='Add'\\\\\\\\n      />\\\\\\\\n      <IconButton\\\\\\\\n        onClick={action('clicked an Icon button with text')}\\\\\\\\n        primary={boolean('primary', false)}\\\\\\\\n        disabled={boolean('disabled', false)}\\\\\\\\n        intent={radios('intent', radioOptions.intent, 'default') as tIntent}\\\\\\\\n        iconVariant='icomoon-delete-empty'\\\\\\\\n        children='Delete'\\\\\\\\n      />\\\\\\\\n      <IconButton\\\\\\\\n        onClick={action('clicked an Icon button with text')}\\\\\\\\n        primary={boolean('primary', false)}\\\\\\\\n        disabled={boolean('disabled', false)}\\\\\\\\n        iconVariant='calendar'\\\\\\\\n        intent={radios('intent', radioOptions.intent, 'default') as tIntent}\\\\\\\\n        children='Calendar'\\\\\\\\n      />\\\\\\\\n    </Box>\\\\\\\\n  </ThemeWrapper>\\\\\\\\n)\\\\\\\\nexport const withCircular = () => (\\\\\\\\n  <ThemeWrapper>\\\\\\\\n    <Box display='flex' justifyContent='space-evenly'>\\\\\\\\n      <IconButton\\\\\\\\n        onClick={action('clicked an Icon button')}\\\\\\\\n        primary={boolean('primary', false)}\\\\\\\\n        disabled={boolean('disabled', false)}\\\\\\\\n        iconVariant='add'\\\\\\\\n        iconSize='xs'\\\\\\\\n        circle\\\\\\\\n      />\\\\\\\\n      <IconButton\\\\\\\\n        onClick={action('clicked an Icon button')}\\\\\\\\n        primary={boolean('primary', false)}\\\\\\\\n        disabled={boolean('disabled', false)}\\\\\\\\n        iconVariant='calendar'\\\\\\\\n        iconSize='md'\\\\\\\\n        circle\\\\\\\\n      />\\\\\\\\n    </Box>\\\\\\\\n  </ThemeWrapper>\\\\\\\\n)\\\\\\\\n\\\\\\\\nexport const withOnlyIcon = () => (\\\\\\\\n  <ThemeWrapper>\\\\\\\\n    <Box display='flex' justifyContent='space-evenly'>\\\\\\\\n      <IconButton\\\\\\\\n        onClick={action('clicked an Icon')}\\\\\\\\n        disabled={boolean('disabled', false)}\\\\\\\\n        onlyIcon\\\\\\\\n        iconVariant='add'\\\\\\\\n        iconSize='xs'\\\\\\\\n        color={text('Colors', 'primary.main')}\\\\\\\\n      />\\\\\\\\n      <IconButton\\\\\\\\n        onClick={action('clicked an Icon')}\\\\\\\\n        disabled={boolean('disabled', false)}\\\\\\\\n        onlyIcon\\\\\\\\n        iconVariant='calendar'\\\\\\\\n        iconSize='md'\\\\\\\\n        color={text('Colors', 'primary.main')}\\\\\\\\n      />\\\\\\\\n      <IconButton\\\\\\\\n        onClick={action('clicked an Icon')}\\\\\\\\n        disabled={boolean('disabled', false)}\\\\\\\\n        onlyIcon\\\\\\\\n        iconVariant='mail'\\\\\\\\n        iconSize='xl'\\\\\\\\n        color={text('Colors', 'primary.main')}\\\\\\\\n      />\\\\\\\\n    </Box>\\\\\\\\n  </ThemeWrapper>\\\\\\\\n)\\\\\\\\n\\\\\\\\nexport const withLink = () => (\\\\\\\\n  <ThemeWrapper>\\\\\\\\n    <Box display='flex' justifyContent='space-evenly'>\\\\\\\\n      <IconButton\\\\\\\\n        onClick={action('clicked an Icon')}\\\\\\\\n        disabled={boolean('disabled', false)}\\\\\\\\n        iconVariant='add'\\\\\\\\n        color={text('Colors', 'primary.main')}\\\\\\\\n        variant='link'\\\\\\\\n        children='Add'\\\\\\\\n      />\\\\\\\\n      <IconButton\\\\\\\\n        onClick={action('clicked an Icon')}\\\\\\\\n        disabled={boolean('disabled', false)}\\\\\\\\n        iconVariant='calendar'\\\\\\\\n        color={text('Colors', 'primary.main')}\\\\\\\\n        variant='link'\\\\\\\\n        children='Calendar'\\\\\\\\n      />\\\\\\\\n      <IconButton\\\\\\\\n        onClick={action('clicked an Icon')}\\\\\\\\n        disabled={boolean('disabled', false)}\\\\\\\\n        iconVariant='mail'\\\\\\\\n        color={text('Colors', 'primary.main')}\\\\\\\\n        variant='link'\\\\\\\\n        children='Mail'\\\\\\\\n      />\\\\\\\\n    </Box>\\\\\\\\n  </ThemeWrapper>\\\\\\\\n)\\\\\\\\n\\\\\\\";\\\\n// @ts-ignore\\\\nvar __ADDS_MAP__ = {};\\\\n// @ts-ignore\\\\nvar __MAIN_FILE_LOCATION__ = \\\\\\\"/IconButton.stories.tsx\\\\\\\";\\\\n// @ts-ignore\\\\nvar __MODULE_DEPENDENCIES__ = [];\\\\n// @ts-ignore\\\\nvar __LOCAL_DEPENDENCIES__ = {};\\\\n// @ts-ignore\\\\nvar __IDS_TO_FRAMEWORKS__ = {};\\\\n        \\\\nimport React from 'react'\\\\nimport { action } from '@storybook/addon-actions'\\\\nimport IconButton from '.'\\\\nimport Box from '../Box'\\\\nimport { withKnobs, boolean, text, radios } from '@storybook/addon-knobs'\\\\nimport { path } from '..'\\\\nimport ThemeWrapper from '../../../utilities/components/ThemeWrapper'\\\\nimport { tIntent } from '../Button'\\\\n\\\\nexport default {parameters: {\\\\\\\"storySource\\\\\\\":{\\\\\\\"source\\\\\\\":\\\\\\\"import React from 'react'\\\\\\\\nimport { action } from '@storybook/addon-actions'\\\\\\\\nimport IconButton from '.'\\\\\\\\nimport Box from '../Box'\\\\\\\\nimport { withKnobs, boolean, text, radios } from '@storybook/addon-knobs'\\\\\\\\nimport { path } from '..'\\\\\\\\nimport ThemeWrapper from '../../../utilities/components/ThemeWrapper'\\\\\\\\nimport { tIntent } from '../Button'\\\\\\\\n\\\\\\\\nexport default {\\\\\\\\n  title: `${path}/IconButton`,\\\\\\\\n  decorators: [withKnobs],\\\\\\\\n  component: IconButton\\\\\\\\n}\\\\\\\\nconst radioOptions = {\\\\\\\\n  intent: { default: 'default', page: 'page', table: 'table' }\\\\\\\\n}\\\\\\\\nexport const withBasic = () => (\\\\\\\\n  <ThemeWrapper>\\\\\\\\n    <Box display='flex' justifyContent='space-evenly'>\\\\\\\\n      <IconButton\\\\\\\\n        onClick={action('clicked an Icon button with text')}\\\\\\\\n        primary={boolean('primary', false)}\\\\\\\\n        disabled={boolean('disabled', false)}\\\\\\\\n        intent={radios('intent', radioOptions.intent, 'default') as tIntent}\\\\\\\\n        iconVariant='icomoon-add'\\\\\\\\n        children='Add'\\\\\\\\n      />\\\\\\\\n      <IconButton\\\\\\\\n        onClick={action('clicked an Icon button with text')}\\\\\\\\n        primary={boolean('primary', false)}\\\\\\\\n        disabled={boolean('disabled', false)}\\\\\\\\n        intent={radios('intent', radioOptions.intent, 'default') as tIntent}\\\\\\\\n        iconVariant='icomoon-delete-empty'\\\\\\\\n        children='Delete'\\\\\\\\n      />\\\\\\\\n      <IconButton\\\\\\\\n        onClick={action('clicked an Icon button with text')}\\\\\\\\n        primary={boolean('primary', false)}\\\\\\\\n        disabled={boolean('disabled', false)}\\\\\\\\n        iconVariant='calendar'\\\\\\\\n        intent={radios('intent', radioOptions.intent, 'default') as tIntent}\\\\\\\\n        children='Calendar'\\\\\\\\n      />\\\\\\\\n    </Box>\\\\\\\\n  </ThemeWrapper>\\\\\\\\n)\\\\\\\\nexport const withCircular = () => (\\\\\\\\n  <ThemeWrapper>\\\\\\\\n    <Box display='flex' justifyContent='space-evenly'>\\\\\\\\n      <IconButton\\\\\\\\n        onClick={action('clicked an Icon button')}\\\\\\\\n        primary={boolean('primary', false)}\\\\\\\\n        disabled={boolean('disabled', false)}\\\\\\\\n        iconVariant='add'\\\\\\\\n        iconSize='xs'\\\\\\\\n        circle\\\\\\\\n      />\\\\\\\\n      <IconButton\\\\\\\\n        onClick={action('clicked an Icon button')}\\\\\\\\n        primary={boolean('primary', false)}\\\\\\\\n        disabled={boolean('disabled', false)}\\\\\\\\n        iconVariant='calendar'\\\\\\\\n        iconSize='md'\\\\\\\\n        circle\\\\\\\\n      />\\\\\\\\n    </Box>\\\\\\\\n  </ThemeWrapper>\\\\\\\\n)\\\\\\\\n\\\\\\\\nexport const withOnlyIcon = () => (\\\\\\\\n  <ThemeWrapper>\\\\\\\\n    <Box display='flex' justifyContent='space-evenly'>\\\\\\\\n      <IconButton\\\\\\\\n        onClick={action('clicked an Icon')}\\\\\\\\n        disabled={boolean('disabled', false)}\\\\\\\\n        onlyIcon\\\\\\\\n        iconVariant='add'\\\\\\\\n        iconSize='xs'\\\\\\\\n        color={text('Colors', 'primary.main')}\\\\\\\\n      />\\\\\\\\n      <IconButton\\\\\\\\n        onClick={action('clicked an Icon')}\\\\\\\\n        disabled={boolean('disabled', false)}\\\\\\\\n        onlyIcon\\\\\\\\n        iconVariant='calendar'\\\\\\\\n        iconSize='md'\\\\\\\\n        color={text('Colors', 'primary.main')}\\\\\\\\n      />\\\\\\\\n      <IconButton\\\\\\\\n        onClick={action('clicked an Icon')}\\\\\\\\n        disabled={boolean('disabled', false)}\\\\\\\\n        onlyIcon\\\\\\\\n        iconVariant='mail'\\\\\\\\n        iconSize='xl'\\\\\\\\n        color={text('Colors', 'primary.main')}\\\\\\\\n      />\\\\\\\\n    </Box>\\\\\\\\n  </ThemeWrapper>\\\\\\\\n)\\\\\\\\n\\\\\\\\nexport const withLink = () => (\\\\\\\\n  <ThemeWrapper>\\\\\\\\n    <Box display='flex' justifyContent='space-evenly'>\\\\\\\\n      <IconButton\\\\\\\\n        onClick={action('clicked an Icon')}\\\\\\\\n        disabled={boolean('disabled', false)}\\\\\\\\n        iconVariant='add'\\\\\\\\n        color={text('Colors', 'primary.main')}\\\\\\\\n        variant='link'\\\\\\\\n        children='Add'\\\\\\\\n      />\\\\\\\\n      <IconButton\\\\\\\\n        onClick={action('clicked an Icon')}\\\\\\\\n        disabled={boolean('disabled', false)}\\\\\\\\n        iconVariant='calendar'\\\\\\\\n        color={text('Colors', 'primary.main')}\\\\\\\\n        variant='link'\\\\\\\\n        children='Calendar'\\\\\\\\n      />\\\\\\\\n      <IconButton\\\\\\\\n        onClick={action('clicked an Icon')}\\\\\\\\n        disabled={boolean('disabled', false)}\\\\\\\\n        iconVariant='mail'\\\\\\\\n        color={text('Colors', 'primary.main')}\\\\\\\\n        variant='link'\\\\\\\\n        children='Mail'\\\\\\\\n      />\\\\\\\\n    </Box>\\\\\\\\n  </ThemeWrapper>\\\\\\\\n)\\\\\\\\n\\\\\\\",\\\\\\\"locationsMap\\\\\\\":{}},},\\\\n  title: `${path}/IconButton`,\\\\n  decorators: [withKnobs],\\\\n  component: IconButton\\\\n}\\\\nconst radioOptions = {\\\\n  intent: { default: 'default', page: 'page', table: 'table' }\\\\n}\\\\nexport const withBasic = addSourceDecorator(() => (\\\\n  <ThemeWrapper>\\\\n    <Box display='flex' justifyContent='space-evenly'>\\\\n      <IconButton\\\\n        onClick={action('clicked an Icon button with text')}\\\\n        primary={boolean('primary', false)}\\\\n        disabled={boolean('disabled', false)}\\\\n        intent={radios('intent', radioOptions.intent, 'default') as tIntent}\\\\n        iconVariant='icomoon-add'\\\\n        children='Add'\\\\n      />\\\\n      <IconButton\\\\n        onClick={action('clicked an Icon button with text')}\\\\n        primary={boolean('primary', false)}\\\\n        disabled={boolean('disabled', false)}\\\\n        intent={radios('intent', radioOptions.intent, 'default') as tIntent}\\\\n        iconVariant='icomoon-delete-empty'\\\\n        children='Delete'\\\\n      />\\\\n      <IconButton\\\\n        onClick={action('clicked an Icon button with text')}\\\\n        primary={boolean('primary', false)}\\\\n        disabled={boolean('disabled', false)}\\\\n        iconVariant='calendar'\\\\n        intent={radios('intent', radioOptions.intent, 'default') as tIntent}\\\\n        children='Calendar'\\\\n      />\\\\n    </Box>\\\\n  </ThemeWrapper>\\\\n), {__STORY__, __ADDS_MAP__,__MAIN_FILE_LOCATION__,__MODULE_DEPENDENCIES__,__LOCAL_DEPENDENCIES__,__SOURCE_PREFIX__,__IDS_TO_FRAMEWORKS__});\\\\nexport const withCircular = addSourceDecorator(() => (\\\\n  <ThemeWrapper>\\\\n    <Box display='flex' justifyContent='space-evenly'>\\\\n      <IconButton\\\\n        onClick={action('clicked an Icon button')}\\\\n        primary={boolean('primary', false)}\\\\n        disabled={boolean('disabled', false)}\\\\n        iconVariant='add'\\\\n        iconSize='xs'\\\\n        circle\\\\n      />\\\\n      <IconButton\\\\n        onClick={action('clicked an Icon button')}\\\\n        primary={boolean('primary', false)}\\\\n        disabled={boolean('disabled', false)}\\\\n        iconVariant='calendar'\\\\n        iconSize='md'\\\\n        circle\\\\n      />\\\\n    </Box>\\\\n  </ThemeWrapper>\\\\n), {__STORY__, __ADDS_MAP__,__MAIN_FILE_LOCATION__,__MODULE_DEPENDENCIES__,__LOCAL_DEPENDENCIES__,__SOURCE_PREFIX__,__IDS_TO_FRAMEWORKS__});\\\\n\\\\nexport const withOnlyIcon = addSourceDecorator(() => (\\\\n  <ThemeWrapper>\\\\n    <Box display='flex' justifyContent='space-evenly'>\\\\n      <IconButton\\\\n        onClick={action('clicked an Icon')}\\\\n        disabled={boolean('disabled', false)}\\\\n        onlyIcon\\\\n        iconVariant='add'\\\\n        iconSize='xs'\\\\n        color={text('Colors', 'primary.main')}\\\\n      />\\\\n      <IconButton\\\\n        onClick={action('clicked an Icon')}\\\\n        disabled={boolean('disabled', false)}\\\\n        onlyIcon\\\\n        iconVariant='calendar'\\\\n        iconSize='md'\\\\n        color={text('Colors', 'primary.main')}\\\\n      />\\\\n      <IconButton\\\\n        onClick={action('clicked an Icon')}\\\\n        disabled={boolean('disabled', false)}\\\\n        onlyIcon\\\\n        iconVariant='mail'\\\\n        iconSize='xl'\\\\n        color={text('Colors', 'primary.main')}\\\\n      />\\\\n    </Box>\\\\n  </ThemeWrapper>\\\\n), {__STORY__, __ADDS_MAP__,__MAIN_FILE_LOCATION__,__MODULE_DEPENDENCIES__,__LOCAL_DEPENDENCIES__,__SOURCE_PREFIX__,__IDS_TO_FRAMEWORKS__});\\\\n\\\\nexport const withLink = addSourceDecorator(() => (\\\\n  <ThemeWrapper>\\\\n    <Box display='flex' justifyContent='space-evenly'>\\\\n      <IconButton\\\\n        onClick={action('clicked an Icon')}\\\\n        disabled={boolean('disabled', false)}\\\\n        iconVariant='add'\\\\n        color={text('Colors', 'primary.main')}\\\\n        variant='link'\\\\n        children='Add'\\\\n      />\\\\n      <IconButton\\\\n        onClick={action('clicked an Icon')}\\\\n        disabled={boolean('disabled', false)}\\\\n        iconVariant='calendar'\\\\n        color={text('Colors', 'primary.main')}\\\\n        variant='link'\\\\n        children='Calendar'\\\\n      />\\\\n      <IconButton\\\\n        onClick={action('clicked an Icon')}\\\\n        disabled={boolean('disabled', false)}\\\\n        iconVariant='mail'\\\\n        color={text('Colors', 'primary.main')}\\\\n        variant='link'\\\\n        children='Mail'\\\\n      />\\\\n    </Box>\\\\n  </ThemeWrapper>\\\\n), {__STORY__, __ADDS_MAP__,__MAIN_FILE_LOCATION__,__MODULE_DEPENDENCIES__,__LOCAL_DEPENDENCIES__,__SOURCE_PREFIX__,__IDS_TO_FRAMEWORKS__});\\\";\\n// @ts-ignore\\nvar __ADDS_MAP__ = {};\\n// @ts-ignore\\nvar __MAIN_FILE_LOCATION__ = \\\"/IconButton.stories.tsx\\\";\\n// @ts-ignore\\nvar __MODULE_DEPENDENCIES__ = [];\\n// @ts-ignore\\nvar __LOCAL_DEPENDENCIES__ = {};\\n// @ts-ignore\\nvar __IDS_TO_FRAMEWORKS__ = {};\\n        \\n\\n\\n// @ts-nocheck\\n// @ts-ignore\\nvar withSourceLoader = require('@storybook/source-loader/preview').withSource;\\n// @ts-ignore\\nvar addSourceDecorator = require(\\\"@storybook/source-loader/preview\\\").addSource;\\n// @ts-ignore\\nvar __SOURCE_PREFIX__ = \\\"/Users/farhanansari/Desktop/CODE/PrxProject/untitled folder/reactStoryBook/src/components/atoms/IconButton\\\";\\n// @ts-ignore\\nvar __STORY__ = \\\"import React from 'react'\\\\nimport { action } from '@storybook/addon-actions'\\\\nimport IconButton from '.'\\\\nimport Box from '../Box'\\\\nimport { withKnobs, boolean, text, radios } from '@storybook/addon-knobs'\\\\nimport { path } from '..'\\\\nimport ThemeWrapper from '../../../utilities/components/ThemeWrapper'\\\\nimport { tIntent } from '../Button'\\\\n\\\\nexport default {\\\\n  title: `${path}/IconButton`,\\\\n  decorators: [withKnobs],\\\\n  component: IconButton\\\\n}\\\\nconst radioOptions = {\\\\n  intent: { default: 'default', page: 'page', table: 'table' }\\\\n}\\\\nexport const withBasic = () => (\\\\n  <ThemeWrapper>\\\\n    <Box display='flex' justifyContent='space-evenly'>\\\\n      <IconButton\\\\n        onClick={action('clicked an Icon button with text')}\\\\n        primary={boolean('primary', false)}\\\\n        disabled={boolean('disabled', false)}\\\\n        intent={radios('intent', radioOptions.intent, 'default') as tIntent}\\\\n        iconVariant='icomoon-add'\\\\n        children='Add'\\\\n      />\\\\n      <IconButton\\\\n        onClick={action('clicked an Icon button with text')}\\\\n        primary={boolean('primary', false)}\\\\n        disabled={boolean('disabled', false)}\\\\n        intent={radios('intent', radioOptions.intent, 'default') as tIntent}\\\\n        iconVariant='icomoon-delete-empty'\\\\n        children='Delete'\\\\n      />\\\\n      <IconButton\\\\n        onClick={action('clicked an Icon button with text')}\\\\n        primary={boolean('primary', false)}\\\\n        disabled={boolean('disabled', false)}\\\\n        iconVariant='calendar'\\\\n        intent={radios('intent', radioOptions.intent, 'default') as tIntent}\\\\n        children='Calendar'\\\\n      />\\\\n    </Box>\\\\n  </ThemeWrapper>\\\\n)\\\\nexport const withCircular = () => (\\\\n  <ThemeWrapper>\\\\n    <Box display='flex' justifyContent='space-evenly'>\\\\n      <IconButton\\\\n        onClick={action('clicked an Icon button')}\\\\n        primary={boolean('primary', false)}\\\\n        disabled={boolean('disabled', false)}\\\\n        iconVariant='add'\\\\n        iconSize='xs'\\\\n        circle\\\\n      />\\\\n      <IconButton\\\\n        onClick={action('clicked an Icon button')}\\\\n        primary={boolean('primary', false)}\\\\n        disabled={boolean('disabled', false)}\\\\n        iconVariant='calendar'\\\\n        iconSize='md'\\\\n        circle\\\\n      />\\\\n    </Box>\\\\n  </ThemeWrapper>\\\\n)\\\\n\\\\nexport const withOnlyIcon = () => (\\\\n  <ThemeWrapper>\\\\n    <Box display='flex' justifyContent='space-evenly'>\\\\n      <IconButton\\\\n        onClick={action('clicked an Icon')}\\\\n        disabled={boolean('disabled', false)}\\\\n        onlyIcon\\\\n        iconVariant='add'\\\\n        iconSize='xs'\\\\n        color={text('Colors', 'primary.main')}\\\\n      />\\\\n      <IconButton\\\\n        onClick={action('clicked an Icon')}\\\\n        disabled={boolean('disabled', false)}\\\\n        onlyIcon\\\\n        iconVariant='calendar'\\\\n        iconSize='md'\\\\n        color={text('Colors', 'primary.main')}\\\\n      />\\\\n      <IconButton\\\\n        onClick={action('clicked an Icon')}\\\\n        disabled={boolean('disabled', false)}\\\\n        onlyIcon\\\\n        iconVariant='mail'\\\\n        iconSize='xl'\\\\n        color={text('Colors', 'primary.main')}\\\\n      />\\\\n    </Box>\\\\n  </ThemeWrapper>\\\\n)\\\\n\\\\nexport const withLink = () => (\\\\n  <ThemeWrapper>\\\\n    <Box display='flex' justifyContent='space-evenly'>\\\\n      <IconButton\\\\n        onClick={action('clicked an Icon')}\\\\n        disabled={boolean('disabled', false)}\\\\n        iconVariant='add'\\\\n        color={text('Colors', 'primary.main')}\\\\n        variant='link'\\\\n        children='Add'\\\\n      />\\\\n      <IconButton\\\\n        onClick={action('clicked an Icon')}\\\\n        disabled={boolean('disabled', false)}\\\\n        iconVariant='calendar'\\\\n        color={text('Colors', 'primary.main')}\\\\n        variant='link'\\\\n        children='Calendar'\\\\n      />\\\\n      <IconButton\\\\n        onClick={action('clicked an Icon')}\\\\n        disabled={boolean('disabled', false)}\\\\n        iconVariant='mail'\\\\n        color={text('Colors', 'primary.main')}\\\\n        variant='link'\\\\n        children='Mail'\\\\n      />\\\\n    </Box>\\\\n  </ThemeWrapper>\\\\n)\\\\n\\\";\\n// @ts-ignore\\nvar __ADDS_MAP__ = {};\\n// @ts-ignore\\nvar __MAIN_FILE_LOCATION__ = \\\"/IconButton.stories.tsx\\\";\\n// @ts-ignore\\nvar __MODULE_DEPENDENCIES__ = [];\\n// @ts-ignore\\nvar __LOCAL_DEPENDENCIES__ = {};\\n// @ts-ignore\\nvar __IDS_TO_FRAMEWORKS__ = {};\\n        \\nimport React from 'react'\\nimport { action } from '@storybook/addon-actions'\\nimport IconButton from '.'\\nimport Box from '../Box'\\nimport { withKnobs, boolean, text, radios } from '@storybook/addon-knobs'\\nimport { path } from '..'\\nimport ThemeWrapper from '../../../utilities/components/ThemeWrapper'\\nimport { tIntent } from '../Button'\\n\\nexport default {parameters: {\\\"storySource\\\":{\\\"source\\\":\\\"\\\\n\\\\n// @ts-nocheck\\\\n// @ts-ignore\\\\nvar withSourceLoader = require('@storybook/source-loader/preview').withSource;\\\\n// @ts-ignore\\\\nvar addSourceDecorator = require(\\\\\\\"@storybook/source-loader/preview\\\\\\\").addSource;\\\\n// @ts-ignore\\\\nvar __SOURCE_PREFIX__ = \\\\\\\"/Users/farhanansari/Desktop/CODE/PrxProject/untitled folder/reactStoryBook/src/components/atoms/IconButton\\\\\\\";\\\\n// @ts-ignore\\\\nvar __STORY__ = \\\\\\\"import React from 'react'\\\\\\\\nimport { action } from '@storybook/addon-actions'\\\\\\\\nimport IconButton from '.'\\\\\\\\nimport Box from '../Box'\\\\\\\\nimport { withKnobs, boolean, text, radios } from '@storybook/addon-knobs'\\\\\\\\nimport { path } from '..'\\\\\\\\nimport ThemeWrapper from '../../../utilities/components/ThemeWrapper'\\\\\\\\nimport { tIntent } from '../Button'\\\\\\\\n\\\\\\\\nexport default {\\\\\\\\n  title: `${path}/IconButton`,\\\\\\\\n  decorators: [withKnobs],\\\\\\\\n  component: IconButton\\\\\\\\n}\\\\\\\\nconst radioOptions = {\\\\\\\\n  intent: { default: 'default', page: 'page', table: 'table' }\\\\\\\\n}\\\\\\\\nexport const withBasic = () => (\\\\\\\\n  <ThemeWrapper>\\\\\\\\n    <Box display='flex' justifyContent='space-evenly'>\\\\\\\\n      <IconButton\\\\\\\\n        onClick={action('clicked an Icon button with text')}\\\\\\\\n        primary={boolean('primary', false)}\\\\\\\\n        disabled={boolean('disabled', false)}\\\\\\\\n        intent={radios('intent', radioOptions.intent, 'default') as tIntent}\\\\\\\\n        iconVariant='icomoon-add'\\\\\\\\n        children='Add'\\\\\\\\n      />\\\\\\\\n      <IconButton\\\\\\\\n        onClick={action('clicked an Icon button with text')}\\\\\\\\n        primary={boolean('primary', false)}\\\\\\\\n        disabled={boolean('disabled', false)}\\\\\\\\n        intent={radios('intent', radioOptions.intent, 'default') as tIntent}\\\\\\\\n        iconVariant='icomoon-delete-empty'\\\\\\\\n        children='Delete'\\\\\\\\n      />\\\\\\\\n      <IconButton\\\\\\\\n        onClick={action('clicked an Icon button with text')}\\\\\\\\n        primary={boolean('primary', false)}\\\\\\\\n        disabled={boolean('disabled', false)}\\\\\\\\n        iconVariant='calendar'\\\\\\\\n        intent={radios('intent', radioOptions.intent, 'default') as tIntent}\\\\\\\\n        children='Calendar'\\\\\\\\n      />\\\\\\\\n    </Box>\\\\\\\\n  </ThemeWrapper>\\\\\\\\n)\\\\\\\\nexport const withCircular = () => (\\\\\\\\n  <ThemeWrapper>\\\\\\\\n    <Box display='flex' justifyContent='space-evenly'>\\\\\\\\n      <IconButton\\\\\\\\n        onClick={action('clicked an Icon button')}\\\\\\\\n        primary={boolean('primary', false)}\\\\\\\\n        disabled={boolean('disabled', false)}\\\\\\\\n        iconVariant='add'\\\\\\\\n        iconSize='xs'\\\\\\\\n        circle\\\\\\\\n      />\\\\\\\\n      <IconButton\\\\\\\\n        onClick={action('clicked an Icon button')}\\\\\\\\n        primary={boolean('primary', false)}\\\\\\\\n        disabled={boolean('disabled', false)}\\\\\\\\n        iconVariant='calendar'\\\\\\\\n        iconSize='md'\\\\\\\\n        circle\\\\\\\\n      />\\\\\\\\n    </Box>\\\\\\\\n  </ThemeWrapper>\\\\\\\\n)\\\\\\\\n\\\\\\\\nexport const withOnlyIcon = () => (\\\\\\\\n  <ThemeWrapper>\\\\\\\\n    <Box display='flex' justifyContent='space-evenly'>\\\\\\\\n      <IconButton\\\\\\\\n        onClick={action('clicked an Icon')}\\\\\\\\n        disabled={boolean('disabled', false)}\\\\\\\\n        onlyIcon\\\\\\\\n        iconVariant='add'\\\\\\\\n        iconSize='xs'\\\\\\\\n        color={text('Colors', 'primary.main')}\\\\\\\\n      />\\\\\\\\n      <IconButton\\\\\\\\n        onClick={action('clicked an Icon')}\\\\\\\\n        disabled={boolean('disabled', false)}\\\\\\\\n        onlyIcon\\\\\\\\n        iconVariant='calendar'\\\\\\\\n        iconSize='md'\\\\\\\\n        color={text('Colors', 'primary.main')}\\\\\\\\n      />\\\\\\\\n      <IconButton\\\\\\\\n        onClick={action('clicked an Icon')}\\\\\\\\n        disabled={boolean('disabled', false)}\\\\\\\\n        onlyIcon\\\\\\\\n        iconVariant='mail'\\\\\\\\n        iconSize='xl'\\\\\\\\n        color={text('Colors', 'primary.main')}\\\\\\\\n      />\\\\\\\\n    </Box>\\\\\\\\n  </ThemeWrapper>\\\\\\\\n)\\\\\\\\n\\\\\\\\nexport const withLink = () => (\\\\\\\\n  <ThemeWrapper>\\\\\\\\n    <Box display='flex' justifyContent='space-evenly'>\\\\\\\\n      <IconButton\\\\\\\\n        onClick={action('clicked an Icon')}\\\\\\\\n        disabled={boolean('disabled', false)}\\\\\\\\n        iconVariant='add'\\\\\\\\n        color={text('Colors', 'primary.main')}\\\\\\\\n        variant='link'\\\\\\\\n        children='Add'\\\\\\\\n      />\\\\\\\\n      <IconButton\\\\\\\\n        onClick={action('clicked an Icon')}\\\\\\\\n        disabled={boolean('disabled', false)}\\\\\\\\n        iconVariant='calendar'\\\\\\\\n        color={text('Colors', 'primary.main')}\\\\\\\\n        variant='link'\\\\\\\\n        children='Calendar'\\\\\\\\n      />\\\\\\\\n      <IconButton\\\\\\\\n        onClick={action('clicked an Icon')}\\\\\\\\n        disabled={boolean('disabled', false)}\\\\\\\\n        iconVariant='mail'\\\\\\\\n        color={text('Colors', 'primary.main')}\\\\\\\\n        variant='link'\\\\\\\\n        children='Mail'\\\\\\\\n      />\\\\\\\\n    </Box>\\\\\\\\n  </ThemeWrapper>\\\\\\\\n)\\\\\\\\n\\\\\\\";\\\\n// @ts-ignore\\\\nvar __ADDS_MAP__ = {};\\\\n// @ts-ignore\\\\nvar __MAIN_FILE_LOCATION__ = \\\\\\\"/IconButton.stories.tsx\\\\\\\";\\\\n// @ts-ignore\\\\nvar __MODULE_DEPENDENCIES__ = [];\\\\n// @ts-ignore\\\\nvar __LOCAL_DEPENDENCIES__ = {};\\\\n// @ts-ignore\\\\nvar __IDS_TO_FRAMEWORKS__ = {};\\\\n        \\\\nimport React from 'react'\\\\nimport { action } from '@storybook/addon-actions'\\\\nimport IconButton from '.'\\\\nimport Box from '../Box'\\\\nimport { withKnobs, boolean, text, radios } from '@storybook/addon-knobs'\\\\nimport { path } from '..'\\\\nimport ThemeWrapper from '../../../utilities/components/ThemeWrapper'\\\\nimport { tIntent } from '../Button'\\\\n\\\\nexport default {parameters: {\\\\\\\"storySource\\\\\\\":{\\\\\\\"source\\\\\\\":\\\\\\\"import React from 'react'\\\\\\\\nimport { action } from '@storybook/addon-actions'\\\\\\\\nimport IconButton from '.'\\\\\\\\nimport Box from '../Box'\\\\\\\\nimport { withKnobs, boolean, text, radios } from '@storybook/addon-knobs'\\\\\\\\nimport { path } from '..'\\\\\\\\nimport ThemeWrapper from '../../../utilities/components/ThemeWrapper'\\\\\\\\nimport { tIntent } from '../Button'\\\\\\\\n\\\\\\\\nexport default {\\\\\\\\n  title: `${path}/IconButton`,\\\\\\\\n  decorators: [withKnobs],\\\\\\\\n  component: IconButton\\\\\\\\n}\\\\\\\\nconst radioOptions = {\\\\\\\\n  intent: { default: 'default', page: 'page', table: 'table' }\\\\\\\\n}\\\\\\\\nexport const withBasic = () => (\\\\\\\\n  <ThemeWrapper>\\\\\\\\n    <Box display='flex' justifyContent='space-evenly'>\\\\\\\\n      <IconButton\\\\\\\\n        onClick={action('clicked an Icon button with text')}\\\\\\\\n        primary={boolean('primary', false)}\\\\\\\\n        disabled={boolean('disabled', false)}\\\\\\\\n        intent={radios('intent', radioOptions.intent, 'default') as tIntent}\\\\\\\\n        iconVariant='icomoon-add'\\\\\\\\n        children='Add'\\\\\\\\n      />\\\\\\\\n      <IconButton\\\\\\\\n        onClick={action('clicked an Icon button with text')}\\\\\\\\n        primary={boolean('primary', false)}\\\\\\\\n        disabled={boolean('disabled', false)}\\\\\\\\n        intent={radios('intent', radioOptions.intent, 'default') as tIntent}\\\\\\\\n        iconVariant='icomoon-delete-empty'\\\\\\\\n        children='Delete'\\\\\\\\n      />\\\\\\\\n      <IconButton\\\\\\\\n        onClick={action('clicked an Icon button with text')}\\\\\\\\n        primary={boolean('primary', false)}\\\\\\\\n        disabled={boolean('disabled', false)}\\\\\\\\n        iconVariant='calendar'\\\\\\\\n        intent={radios('intent', radioOptions.intent, 'default') as tIntent}\\\\\\\\n        children='Calendar'\\\\\\\\n      />\\\\\\\\n    </Box>\\\\\\\\n  </ThemeWrapper>\\\\\\\\n)\\\\\\\\nexport const withCircular = () => (\\\\\\\\n  <ThemeWrapper>\\\\\\\\n    <Box display='flex' justifyContent='space-evenly'>\\\\\\\\n      <IconButton\\\\\\\\n        onClick={action('clicked an Icon button')}\\\\\\\\n        primary={boolean('primary', false)}\\\\\\\\n        disabled={boolean('disabled', false)}\\\\\\\\n        iconVariant='add'\\\\\\\\n        iconSize='xs'\\\\\\\\n        circle\\\\\\\\n      />\\\\\\\\n      <IconButton\\\\\\\\n        onClick={action('clicked an Icon button')}\\\\\\\\n        primary={boolean('primary', false)}\\\\\\\\n        disabled={boolean('disabled', false)}\\\\\\\\n        iconVariant='calendar'\\\\\\\\n        iconSize='md'\\\\\\\\n        circle\\\\\\\\n      />\\\\\\\\n    </Box>\\\\\\\\n  </ThemeWrapper>\\\\\\\\n)\\\\\\\\n\\\\\\\\nexport const withOnlyIcon = () => (\\\\\\\\n  <ThemeWrapper>\\\\\\\\n    <Box display='flex' justifyContent='space-evenly'>\\\\\\\\n      <IconButton\\\\\\\\n        onClick={action('clicked an Icon')}\\\\\\\\n        disabled={boolean('disabled', false)}\\\\\\\\n        onlyIcon\\\\\\\\n        iconVariant='add'\\\\\\\\n        iconSize='xs'\\\\\\\\n        color={text('Colors', 'primary.main')}\\\\\\\\n      />\\\\\\\\n      <IconButton\\\\\\\\n        onClick={action('clicked an Icon')}\\\\\\\\n        disabled={boolean('disabled', false)}\\\\\\\\n        onlyIcon\\\\\\\\n        iconVariant='calendar'\\\\\\\\n        iconSize='md'\\\\\\\\n        color={text('Colors', 'primary.main')}\\\\\\\\n      />\\\\\\\\n      <IconButton\\\\\\\\n        onClick={action('clicked an Icon')}\\\\\\\\n        disabled={boolean('disabled', false)}\\\\\\\\n        onlyIcon\\\\\\\\n        iconVariant='mail'\\\\\\\\n        iconSize='xl'\\\\\\\\n        color={text('Colors', 'primary.main')}\\\\\\\\n      />\\\\\\\\n    </Box>\\\\\\\\n  </ThemeWrapper>\\\\\\\\n)\\\\\\\\n\\\\\\\\nexport const withLink = () => (\\\\\\\\n  <ThemeWrapper>\\\\\\\\n    <Box display='flex' justifyContent='space-evenly'>\\\\\\\\n      <IconButton\\\\\\\\n        onClick={action('clicked an Icon')}\\\\\\\\n        disabled={boolean('disabled', false)}\\\\\\\\n        iconVariant='add'\\\\\\\\n        color={text('Colors', 'primary.main')}\\\\\\\\n        variant='link'\\\\\\\\n        children='Add'\\\\\\\\n      />\\\\\\\\n      <IconButton\\\\\\\\n        onClick={action('clicked an Icon')}\\\\\\\\n        disabled={boolean('disabled', false)}\\\\\\\\n        iconVariant='calendar'\\\\\\\\n        color={text('Colors', 'primary.main')}\\\\\\\\n        variant='link'\\\\\\\\n        children='Calendar'\\\\\\\\n      />\\\\\\\\n      <IconButton\\\\\\\\n        onClick={action('clicked an Icon')}\\\\\\\\n        disabled={boolean('disabled', false)}\\\\\\\\n        iconVariant='mail'\\\\\\\\n        color={text('Colors', 'primary.main')}\\\\\\\\n        variant='link'\\\\\\\\n        children='Mail'\\\\\\\\n      />\\\\\\\\n    </Box>\\\\\\\\n  </ThemeWrapper>\\\\\\\\n)\\\\\\\\n\\\\\\\",\\\\\\\"locationsMap\\\\\\\":{}},},\\\\n  title: `${path}/IconButton`,\\\\n  decorators: [withKnobs],\\\\n  component: IconButton\\\\n}\\\\nconst radioOptions = {\\\\n  intent: { default: 'default', page: 'page', table: 'table' }\\\\n}\\\\nexport const withBasic = addSourceDecorator(() => (\\\\n  <ThemeWrapper>\\\\n    <Box display='flex' justifyContent='space-evenly'>\\\\n      <IconButton\\\\n        onClick={action('clicked an Icon button with text')}\\\\n        primary={boolean('primary', false)}\\\\n        disabled={boolean('disabled', false)}\\\\n        intent={radios('intent', radioOptions.intent, 'default') as tIntent}\\\\n        iconVariant='icomoon-add'\\\\n        children='Add'\\\\n      />\\\\n      <IconButton\\\\n        onClick={action('clicked an Icon button with text')}\\\\n        primary={boolean('primary', false)}\\\\n        disabled={boolean('disabled', false)}\\\\n        intent={radios('intent', radioOptions.intent, 'default') as tIntent}\\\\n        iconVariant='icomoon-delete-empty'\\\\n        children='Delete'\\\\n      />\\\\n      <IconButton\\\\n        onClick={action('clicked an Icon button with text')}\\\\n        primary={boolean('primary', false)}\\\\n        disabled={boolean('disabled', false)}\\\\n        iconVariant='calendar'\\\\n        intent={radios('intent', radioOptions.intent, 'default') as tIntent}\\\\n        children='Calendar'\\\\n      />\\\\n    </Box>\\\\n  </ThemeWrapper>\\\\n), {__STORY__, __ADDS_MAP__,__MAIN_FILE_LOCATION__,__MODULE_DEPENDENCIES__,__LOCAL_DEPENDENCIES__,__SOURCE_PREFIX__,__IDS_TO_FRAMEWORKS__});\\\\nexport const withCircular = addSourceDecorator(() => (\\\\n  <ThemeWrapper>\\\\n    <Box display='flex' justifyContent='space-evenly'>\\\\n      <IconButton\\\\n        onClick={action('clicked an Icon button')}\\\\n        primary={boolean('primary', false)}\\\\n        disabled={boolean('disabled', false)}\\\\n        iconVariant='add'\\\\n        iconSize='xs'\\\\n        circle\\\\n      />\\\\n      <IconButton\\\\n        onClick={action('clicked an Icon button')}\\\\n        primary={boolean('primary', false)}\\\\n        disabled={boolean('disabled', false)}\\\\n        iconVariant='calendar'\\\\n        iconSize='md'\\\\n        circle\\\\n      />\\\\n    </Box>\\\\n  </ThemeWrapper>\\\\n), {__STORY__, __ADDS_MAP__,__MAIN_FILE_LOCATION__,__MODULE_DEPENDENCIES__,__LOCAL_DEPENDENCIES__,__SOURCE_PREFIX__,__IDS_TO_FRAMEWORKS__});\\\\n\\\\nexport const withOnlyIcon = addSourceDecorator(() => (\\\\n  <ThemeWrapper>\\\\n    <Box display='flex' justifyContent='space-evenly'>\\\\n      <IconButton\\\\n        onClick={action('clicked an Icon')}\\\\n        disabled={boolean('disabled', false)}\\\\n        onlyIcon\\\\n        iconVariant='add'\\\\n        iconSize='xs'\\\\n        color={text('Colors', 'primary.main')}\\\\n      />\\\\n      <IconButton\\\\n        onClick={action('clicked an Icon')}\\\\n        disabled={boolean('disabled', false)}\\\\n        onlyIcon\\\\n        iconVariant='calendar'\\\\n        iconSize='md'\\\\n        color={text('Colors', 'primary.main')}\\\\n      />\\\\n      <IconButton\\\\n        onClick={action('clicked an Icon')}\\\\n        disabled={boolean('disabled', false)}\\\\n        onlyIcon\\\\n        iconVariant='mail'\\\\n        iconSize='xl'\\\\n        color={text('Colors', 'primary.main')}\\\\n      />\\\\n    </Box>\\\\n  </ThemeWrapper>\\\\n), {__STORY__, __ADDS_MAP__,__MAIN_FILE_LOCATION__,__MODULE_DEPENDENCIES__,__LOCAL_DEPENDENCIES__,__SOURCE_PREFIX__,__IDS_TO_FRAMEWORKS__});\\\\n\\\\nexport const withLink = addSourceDecorator(() => (\\\\n  <ThemeWrapper>\\\\n    <Box display='flex' justifyContent='space-evenly'>\\\\n      <IconButton\\\\n        onClick={action('clicked an Icon')}\\\\n        disabled={boolean('disabled', false)}\\\\n        iconVariant='add'\\\\n        color={text('Colors', 'primary.main')}\\\\n        variant='link'\\\\n        children='Add'\\\\n      />\\\\n      <IconButton\\\\n        onClick={action('clicked an Icon')}\\\\n        disabled={boolean('disabled', false)}\\\\n        iconVariant='calendar'\\\\n        color={text('Colors', 'primary.main')}\\\\n        variant='link'\\\\n        children='Calendar'\\\\n      />\\\\n      <IconButton\\\\n        onClick={action('clicked an Icon')}\\\\n        disabled={boolean('disabled', false)}\\\\n        iconVariant='mail'\\\\n        color={text('Colors', 'primary.main')}\\\\n        variant='link'\\\\n        children='Mail'\\\\n      />\\\\n    </Box>\\\\n  </ThemeWrapper>\\\\n), {__STORY__, __ADDS_MAP__,__MAIN_FILE_LOCATION__,__MODULE_DEPENDENCIES__,__LOCAL_DEPENDENCIES__,__SOURCE_PREFIX__,__IDS_TO_FRAMEWORKS__});\\\",\\\"locationsMap\\\":{}},\\\"storySource\\\":{\\\"source\\\":\\\"import React from 'react'\\\\nimport { action } from '@storybook/addon-actions'\\\\nimport IconButton from '.'\\\\nimport Box from '../Box'\\\\nimport { withKnobs, boolean, text, radios } from '@storybook/addon-knobs'\\\\nimport { path } from '..'\\\\nimport ThemeWrapper from '../../../utilities/components/ThemeWrapper'\\\\nimport { tIntent } from '../Button'\\\\n\\\\nexport default {\\\\n  title: `${path}/IconButton`,\\\\n  decorators: [withKnobs],\\\\n  component: IconButton\\\\n}\\\\nconst radioOptions = {\\\\n  intent: { default: 'default', page: 'page', table: 'table' }\\\\n}\\\\nexport const withBasic = () => (\\\\n  <ThemeWrapper>\\\\n    <Box display='flex' justifyContent='space-evenly'>\\\\n      <IconButton\\\\n        onClick={action('clicked an Icon button with text')}\\\\n        primary={boolean('primary', false)}\\\\n        disabled={boolean('disabled', false)}\\\\n        intent={radios('intent', radioOptions.intent, 'default') as tIntent}\\\\n        iconVariant='icomoon-add'\\\\n        children='Add'\\\\n      />\\\\n      <IconButton\\\\n        onClick={action('clicked an Icon button with text')}\\\\n        primary={boolean('primary', false)}\\\\n        disabled={boolean('disabled', false)}\\\\n        intent={radios('intent', radioOptions.intent, 'default') as tIntent}\\\\n        iconVariant='icomoon-delete-empty'\\\\n        children='Delete'\\\\n      />\\\\n      <IconButton\\\\n        onClick={action('clicked an Icon button with text')}\\\\n        primary={boolean('primary', false)}\\\\n        disabled={boolean('disabled', false)}\\\\n        iconVariant='calendar'\\\\n        intent={radios('intent', radioOptions.intent, 'default') as tIntent}\\\\n        children='Calendar'\\\\n      />\\\\n    </Box>\\\\n  </ThemeWrapper>\\\\n)\\\\nexport const withCircular = () => (\\\\n  <ThemeWrapper>\\\\n    <Box display='flex' justifyContent='space-evenly'>\\\\n      <IconButton\\\\n        onClick={action('clicked an Icon button')}\\\\n        primary={boolean('primary', false)}\\\\n        disabled={boolean('disabled', false)}\\\\n        iconVariant='add'\\\\n        iconSize='xs'\\\\n        circle\\\\n      />\\\\n      <IconButton\\\\n        onClick={action('clicked an Icon button')}\\\\n        primary={boolean('primary', false)}\\\\n        disabled={boolean('disabled', false)}\\\\n        iconVariant='calendar'\\\\n        iconSize='md'\\\\n        circle\\\\n      />\\\\n    </Box>\\\\n  </ThemeWrapper>\\\\n)\\\\n\\\\nexport const withOnlyIcon = () => (\\\\n  <ThemeWrapper>\\\\n    <Box display='flex' justifyContent='space-evenly'>\\\\n      <IconButton\\\\n        onClick={action('clicked an Icon')}\\\\n        disabled={boolean('disabled', false)}\\\\n        onlyIcon\\\\n        iconVariant='add'\\\\n        iconSize='xs'\\\\n        color={text('Colors', 'primary.main')}\\\\n      />\\\\n      <IconButton\\\\n        onClick={action('clicked an Icon')}\\\\n        disabled={boolean('disabled', false)}\\\\n        onlyIcon\\\\n        iconVariant='calendar'\\\\n        iconSize='md'\\\\n        color={text('Colors', 'primary.main')}\\\\n      />\\\\n      <IconButton\\\\n        onClick={action('clicked an Icon')}\\\\n        disabled={boolean('disabled', false)}\\\\n        onlyIcon\\\\n        iconVariant='mail'\\\\n        iconSize='xl'\\\\n        color={text('Colors', 'primary.main')}\\\\n      />\\\\n    </Box>\\\\n  </ThemeWrapper>\\\\n)\\\\n\\\\nexport const withLink = () => (\\\\n  <ThemeWrapper>\\\\n    <Box display='flex' justifyContent='space-evenly'>\\\\n      <IconButton\\\\n        onClick={action('clicked an Icon')}\\\\n        disabled={boolean('disabled', false)}\\\\n        iconVariant='add'\\\\n        color={text('Colors', 'primary.main')}\\\\n        variant='link'\\\\n        children='Add'\\\\n      />\\\\n      <IconButton\\\\n        onClick={action('clicked an Icon')}\\\\n        disabled={boolean('disabled', false)}\\\\n        iconVariant='calendar'\\\\n        color={text('Colors', 'primary.main')}\\\\n        variant='link'\\\\n        children='Calendar'\\\\n      />\\\\n      <IconButton\\\\n        onClick={action('clicked an Icon')}\\\\n        disabled={boolean('disabled', false)}\\\\n        iconVariant='mail'\\\\n        color={text('Colors', 'primary.main')}\\\\n        variant='link'\\\\n        children='Mail'\\\\n      />\\\\n    </Box>\\\\n  </ThemeWrapper>\\\\n)\\\\n\\\",\\\"locationsMap\\\":{}},},\\n  title: `${path}/IconButton`,\\n  decorators: [withKnobs],\\n  component: IconButton\\n}\\nconst radioOptions = {\\n  intent: { default: 'default', page: 'page', table: 'table' }\\n}\\nexport const withBasic = addSourceDecorator(addSourceDecorator(() => (\\n  <ThemeWrapper>\\n    <Box display='flex' justifyContent='space-evenly'>\\n      <IconButton\\n        onClick={action('clicked an Icon button with text')}\\n        primary={boolean('primary', false)}\\n        disabled={boolean('disabled', false)}\\n        intent={radios('intent', radioOptions.intent, 'default') as tIntent}\\n        iconVariant='icomoon-add'\\n        children='Add'\\n      />\\n      <IconButton\\n        onClick={action('clicked an Icon button with text')}\\n        primary={boolean('primary', false)}\\n        disabled={boolean('disabled', false)}\\n        intent={radios('intent', radioOptions.intent, 'default') as tIntent}\\n        iconVariant='icomoon-delete-empty'\\n        children='Delete'\\n      />\\n      <IconButton\\n        onClick={action('clicked an Icon button with text')}\\n        primary={boolean('primary', false)}\\n        disabled={boolean('disabled', false)}\\n        iconVariant='calendar'\\n        intent={radios('intent', radioOptions.intent, 'default') as tIntent}\\n        children='Calendar'\\n      />\\n    </Box>\\n  </ThemeWrapper>\\n), {__STORY__, __ADDS_MAP__,__MAIN_FILE_LOCATION__,__MODULE_DEPENDENCIES__,__LOCAL_DEPENDENCIES__,__SOURCE_PREFIX__,__IDS_TO_FRAMEWORKS__}), {__STORY__, __ADDS_MAP__,__MAIN_FILE_LOCATION__,__MODULE_DEPENDENCIES__,__LOCAL_DEPENDENCIES__,__SOURCE_PREFIX__,__IDS_TO_FRAMEWORKS__});;\\nexport const withCircular = addSourceDecorator(addSourceDecorator(() => (\\n  <ThemeWrapper>\\n    <Box display='flex' justifyContent='space-evenly'>\\n      <IconButton\\n        onClick={action('clicked an Icon button')}\\n        primary={boolean('primary', false)}\\n        disabled={boolean('disabled', false)}\\n        iconVariant='add'\\n        iconSize='xs'\\n        circle\\n      />\\n      <IconButton\\n        onClick={action('clicked an Icon button')}\\n        primary={boolean('primary', false)}\\n        disabled={boolean('disabled', false)}\\n        iconVariant='calendar'\\n        iconSize='md'\\n        circle\\n      />\\n    </Box>\\n  </ThemeWrapper>\\n), {__STORY__, __ADDS_MAP__,__MAIN_FILE_LOCATION__,__MODULE_DEPENDENCIES__,__LOCAL_DEPENDENCIES__,__SOURCE_PREFIX__,__IDS_TO_FRAMEWORKS__}), {__STORY__, __ADDS_MAP__,__MAIN_FILE_LOCATION__,__MODULE_DEPENDENCIES__,__LOCAL_DEPENDENCIES__,__SOURCE_PREFIX__,__IDS_TO_FRAMEWORKS__});;\\n\\nexport const withOnlyIcon = addSourceDecorator(addSourceDecorator(() => (\\n  <ThemeWrapper>\\n    <Box display='flex' justifyContent='space-evenly'>\\n      <IconButton\\n        onClick={action('clicked an Icon')}\\n        disabled={boolean('disabled', false)}\\n        onlyIcon\\n        iconVariant='add'\\n        iconSize='xs'\\n        color={text('Colors', 'primary.main')}\\n      />\\n      <IconButton\\n        onClick={action('clicked an Icon')}\\n        disabled={boolean('disabled', false)}\\n        onlyIcon\\n        iconVariant='calendar'\\n        iconSize='md'\\n        color={text('Colors', 'primary.main')}\\n      />\\n      <IconButton\\n        onClick={action('clicked an Icon')}\\n        disabled={boolean('disabled', false)}\\n        onlyIcon\\n        iconVariant='mail'\\n        iconSize='xl'\\n        color={text('Colors', 'primary.main')}\\n      />\\n    </Box>\\n  </ThemeWrapper>\\n), {__STORY__, __ADDS_MAP__,__MAIN_FILE_LOCATION__,__MODULE_DEPENDENCIES__,__LOCAL_DEPENDENCIES__,__SOURCE_PREFIX__,__IDS_TO_FRAMEWORKS__}), {__STORY__, __ADDS_MAP__,__MAIN_FILE_LOCATION__,__MODULE_DEPENDENCIES__,__LOCAL_DEPENDENCIES__,__SOURCE_PREFIX__,__IDS_TO_FRAMEWORKS__});;\\n\\nexport const withLink = addSourceDecorator(addSourceDecorator(() => (\\n  <ThemeWrapper>\\n    <Box display='flex' justifyContent='space-evenly'>\\n      <IconButton\\n        onClick={action('clicked an Icon')}\\n        disabled={boolean('disabled', false)}\\n        iconVariant='add'\\n        color={text('Colors', 'primary.main')}\\n        variant='link'\\n        children='Add'\\n      />\\n      <IconButton\\n        onClick={action('clicked an Icon')}\\n        disabled={boolean('disabled', false)}\\n        iconVariant='calendar'\\n        color={text('Colors', 'primary.main')}\\n        variant='link'\\n        children='Calendar'\\n      />\\n      <IconButton\\n        onClick={action('clicked an Icon')}\\n        disabled={boolean('disabled', false)}\\n        iconVariant='mail'\\n        color={text('Colors', 'primary.main')}\\n        variant='link'\\n        children='Mail'\\n      />\\n    </Box>\\n  </ThemeWrapper>\\n), {__STORY__, __ADDS_MAP__,__MAIN_FILE_LOCATION__,__MODULE_DEPENDENCIES__,__LOCAL_DEPENDENCIES__,__SOURCE_PREFIX__,__IDS_TO_FRAMEWORKS__}), {__STORY__, __ADDS_MAP__,__MAIN_FILE_LOCATION__,__MODULE_DEPENDENCIES__,__LOCAL_DEPENDENCIES__,__SOURCE_PREFIX__,__IDS_TO_FRAMEWORKS__});\";\n// @ts-ignore\nvar __ADDS_MAP__ = {};\n// @ts-ignore\nvar __MAIN_FILE_LOCATION__ = \"/IconButton.stories.tsx\";\n// @ts-ignore\nvar __MODULE_DEPENDENCIES__ = [];\n// @ts-ignore\nvar __LOCAL_DEPENDENCIES__ = {};\n// @ts-ignore\nvar __IDS_TO_FRAMEWORKS__ = {};\n        \n\n/* eslint-disable */\n// @ts-nocheck\n// @ts-ignore\nvar withSourceLoader = require('@storybook/source-loader/preview').withSource;\n// @ts-ignore\nvar addSourceDecorator = require(\"@storybook/source-loader/preview\").addSource;\n// @ts-ignore\nvar __SOURCE_PREFIX__ = \"/Users/farhanansari/Desktop/CODE/PrxProject/untitled folder/reactStoryBook/src/components/atoms/IconButton\";\n// @ts-ignore\nvar __STORY__ = \"\\n\\n// @ts-nocheck\\n// @ts-ignore\\nvar withSourceLoader = require('@storybook/source-loader/preview').withSource;\\n// @ts-ignore\\nvar addSourceDecorator = require(\\\"@storybook/source-loader/preview\\\").addSource;\\n// @ts-ignore\\nvar __SOURCE_PREFIX__ = \\\"/Users/farhanansari/Desktop/CODE/PrxProject/untitled folder/reactStoryBook/src/components/atoms/IconButton\\\";\\n// @ts-ignore\\nvar __STORY__ = \\\"import React from 'react'\\\\nimport { action } from '@storybook/addon-actions'\\\\nimport IconButton from '.'\\\\nimport Box from '../Box'\\\\nimport { withKnobs, boolean, text, radios } from '@storybook/addon-knobs'\\\\nimport { path } from '..'\\\\nimport ThemeWrapper from '../../../utilities/components/ThemeWrapper'\\\\nimport { tIntent } from '../Button'\\\\n\\\\nexport default {\\\\n  title: `${path}/IconButton`,\\\\n  decorators: [withKnobs],\\\\n  component: IconButton\\\\n}\\\\nconst radioOptions = {\\\\n  intent: { default: 'default', page: 'page', table: 'table' }\\\\n}\\\\nexport const withBasic = () => (\\\\n  <ThemeWrapper>\\\\n    <Box display='flex' justifyContent='space-evenly'>\\\\n      <IconButton\\\\n        onClick={action('clicked an Icon button with text')}\\\\n        primary={boolean('primary', false)}\\\\n        disabled={boolean('disabled', false)}\\\\n        intent={radios('intent', radioOptions.intent, 'default') as tIntent}\\\\n        iconVariant='icomoon-add'\\\\n        children='Add'\\\\n      />\\\\n      <IconButton\\\\n        onClick={action('clicked an Icon button with text')}\\\\n        primary={boolean('primary', false)}\\\\n        disabled={boolean('disabled', false)}\\\\n        intent={radios('intent', radioOptions.intent, 'default') as tIntent}\\\\n        iconVariant='icomoon-delete-empty'\\\\n        children='Delete'\\\\n      />\\\\n      <IconButton\\\\n        onClick={action('clicked an Icon button with text')}\\\\n        primary={boolean('primary', false)}\\\\n        disabled={boolean('disabled', false)}\\\\n        iconVariant='calendar'\\\\n        intent={radios('intent', radioOptions.intent, 'default') as tIntent}\\\\n        children='Calendar'\\\\n      />\\\\n    </Box>\\\\n  </ThemeWrapper>\\\\n)\\\\nexport const withCircular = () => (\\\\n  <ThemeWrapper>\\\\n    <Box display='flex' justifyContent='space-evenly'>\\\\n      <IconButton\\\\n        onClick={action('clicked an Icon button')}\\\\n        primary={boolean('primary', false)}\\\\n        disabled={boolean('disabled', false)}\\\\n        iconVariant='add'\\\\n        iconSize='xs'\\\\n        circle\\\\n      />\\\\n      <IconButton\\\\n        onClick={action('clicked an Icon button')}\\\\n        primary={boolean('primary', false)}\\\\n        disabled={boolean('disabled', false)}\\\\n        iconVariant='calendar'\\\\n        iconSize='md'\\\\n        circle\\\\n      />\\\\n    </Box>\\\\n  </ThemeWrapper>\\\\n)\\\\n\\\\nexport const withOnlyIcon = () => (\\\\n  <ThemeWrapper>\\\\n    <Box display='flex' justifyContent='space-evenly'>\\\\n      <IconButton\\\\n        onClick={action('clicked an Icon')}\\\\n        disabled={boolean('disabled', false)}\\\\n        onlyIcon\\\\n        iconVariant='add'\\\\n        iconSize='xs'\\\\n        color={text('Colors', 'primary.main')}\\\\n      />\\\\n      <IconButton\\\\n        onClick={action('clicked an Icon')}\\\\n        disabled={boolean('disabled', false)}\\\\n        onlyIcon\\\\n        iconVariant='calendar'\\\\n        iconSize='md'\\\\n        color={text('Colors', 'primary.main')}\\\\n      />\\\\n      <IconButton\\\\n        onClick={action('clicked an Icon')}\\\\n        disabled={boolean('disabled', false)}\\\\n        onlyIcon\\\\n        iconVariant='mail'\\\\n        iconSize='xl'\\\\n        color={text('Colors', 'primary.main')}\\\\n      />\\\\n    </Box>\\\\n  </ThemeWrapper>\\\\n)\\\\n\\\\nexport const withLink = () => (\\\\n  <ThemeWrapper>\\\\n    <Box display='flex' justifyContent='space-evenly'>\\\\n      <IconButton\\\\n        onClick={action('clicked an Icon')}\\\\n        disabled={boolean('disabled', false)}\\\\n        iconVariant='add'\\\\n        color={text('Colors', 'primary.main')}\\\\n        variant='link'\\\\n        children='Add'\\\\n      />\\\\n      <IconButton\\\\n        onClick={action('clicked an Icon')}\\\\n        disabled={boolean('disabled', false)}\\\\n        iconVariant='calendar'\\\\n        color={text('Colors', 'primary.main')}\\\\n        variant='link'\\\\n        children='Calendar'\\\\n      />\\\\n      <IconButton\\\\n        onClick={action('clicked an Icon')}\\\\n        disabled={boolean('disabled', false)}\\\\n        iconVariant='mail'\\\\n        color={text('Colors', 'primary.main')}\\\\n        variant='link'\\\\n        children='Mail'\\\\n      />\\\\n    </Box>\\\\n  </ThemeWrapper>\\\\n)\\\\n\\\";\\n// @ts-ignore\\nvar __ADDS_MAP__ = {};\\n// @ts-ignore\\nvar __MAIN_FILE_LOCATION__ = \\\"/IconButton.stories.tsx\\\";\\n// @ts-ignore\\nvar __MODULE_DEPENDENCIES__ = [];\\n// @ts-ignore\\nvar __LOCAL_DEPENDENCIES__ = {};\\n// @ts-ignore\\nvar __IDS_TO_FRAMEWORKS__ = {};\\n        \\nimport React from 'react'\\nimport { action } from '@storybook/addon-actions'\\nimport IconButton from '.'\\nimport Box from '../Box'\\nimport { withKnobs, boolean, text, radios } from '@storybook/addon-knobs'\\nimport { path } from '..'\\nimport ThemeWrapper from '../../../utilities/components/ThemeWrapper'\\nimport { tIntent } from '../Button'\\n\\nexport default {parameters: {\\\"storySource\\\":{\\\"source\\\":\\\"import React from 'react'\\\\nimport { action } from '@storybook/addon-actions'\\\\nimport IconButton from '.'\\\\nimport Box from '../Box'\\\\nimport { withKnobs, boolean, text, radios } from '@storybook/addon-knobs'\\\\nimport { path } from '..'\\\\nimport ThemeWrapper from '../../../utilities/components/ThemeWrapper'\\\\nimport { tIntent } from '../Button'\\\\n\\\\nexport default {\\\\n  title: `${path}/IconButton`,\\\\n  decorators: [withKnobs],\\\\n  component: IconButton\\\\n}\\\\nconst radioOptions = {\\\\n  intent: { default: 'default', page: 'page', table: 'table' }\\\\n}\\\\nexport const withBasic = () => (\\\\n  <ThemeWrapper>\\\\n    <Box display='flex' justifyContent='space-evenly'>\\\\n      <IconButton\\\\n        onClick={action('clicked an Icon button with text')}\\\\n        primary={boolean('primary', false)}\\\\n        disabled={boolean('disabled', false)}\\\\n        intent={radios('intent', radioOptions.intent, 'default') as tIntent}\\\\n        iconVariant='icomoon-add'\\\\n        children='Add'\\\\n      />\\\\n      <IconButton\\\\n        onClick={action('clicked an Icon button with text')}\\\\n        primary={boolean('primary', false)}\\\\n        disabled={boolean('disabled', false)}\\\\n        intent={radios('intent', radioOptions.intent, 'default') as tIntent}\\\\n        iconVariant='icomoon-delete-empty'\\\\n        children='Delete'\\\\n      />\\\\n      <IconButton\\\\n        onClick={action('clicked an Icon button with text')}\\\\n        primary={boolean('primary', false)}\\\\n        disabled={boolean('disabled', false)}\\\\n        iconVariant='calendar'\\\\n        intent={radios('intent', radioOptions.intent, 'default') as tIntent}\\\\n        children='Calendar'\\\\n      />\\\\n    </Box>\\\\n  </ThemeWrapper>\\\\n)\\\\nexport const withCircular = () => (\\\\n  <ThemeWrapper>\\\\n    <Box display='flex' justifyContent='space-evenly'>\\\\n      <IconButton\\\\n        onClick={action('clicked an Icon button')}\\\\n        primary={boolean('primary', false)}\\\\n        disabled={boolean('disabled', false)}\\\\n        iconVariant='add'\\\\n        iconSize='xs'\\\\n        circle\\\\n      />\\\\n      <IconButton\\\\n        onClick={action('clicked an Icon button')}\\\\n        primary={boolean('primary', false)}\\\\n        disabled={boolean('disabled', false)}\\\\n        iconVariant='calendar'\\\\n        iconSize='md'\\\\n        circle\\\\n      />\\\\n    </Box>\\\\n  </ThemeWrapper>\\\\n)\\\\n\\\\nexport const withOnlyIcon = () => (\\\\n  <ThemeWrapper>\\\\n    <Box display='flex' justifyContent='space-evenly'>\\\\n      <IconButton\\\\n        onClick={action('clicked an Icon')}\\\\n        disabled={boolean('disabled', false)}\\\\n        onlyIcon\\\\n        iconVariant='add'\\\\n        iconSize='xs'\\\\n        color={text('Colors', 'primary.main')}\\\\n      />\\\\n      <IconButton\\\\n        onClick={action('clicked an Icon')}\\\\n        disabled={boolean('disabled', false)}\\\\n        onlyIcon\\\\n        iconVariant='calendar'\\\\n        iconSize='md'\\\\n        color={text('Colors', 'primary.main')}\\\\n      />\\\\n      <IconButton\\\\n        onClick={action('clicked an Icon')}\\\\n        disabled={boolean('disabled', false)}\\\\n        onlyIcon\\\\n        iconVariant='mail'\\\\n        iconSize='xl'\\\\n        color={text('Colors', 'primary.main')}\\\\n      />\\\\n    </Box>\\\\n  </ThemeWrapper>\\\\n)\\\\n\\\\nexport const withLink = () => (\\\\n  <ThemeWrapper>\\\\n    <Box display='flex' justifyContent='space-evenly'>\\\\n      <IconButton\\\\n        onClick={action('clicked an Icon')}\\\\n        disabled={boolean('disabled', false)}\\\\n        iconVariant='add'\\\\n        color={text('Colors', 'primary.main')}\\\\n        variant='link'\\\\n        children='Add'\\\\n      />\\\\n      <IconButton\\\\n        onClick={action('clicked an Icon')}\\\\n        disabled={boolean('disabled', false)}\\\\n        iconVariant='calendar'\\\\n        color={text('Colors', 'primary.main')}\\\\n        variant='link'\\\\n        children='Calendar'\\\\n      />\\\\n      <IconButton\\\\n        onClick={action('clicked an Icon')}\\\\n        disabled={boolean('disabled', false)}\\\\n        iconVariant='mail'\\\\n        color={text('Colors', 'primary.main')}\\\\n        variant='link'\\\\n        children='Mail'\\\\n      />\\\\n    </Box>\\\\n  </ThemeWrapper>\\\\n)\\\\n\\\",\\\"locationsMap\\\":{}},},\\n  title: `${path}/IconButton`,\\n  decorators: [withKnobs],\\n  component: IconButton\\n}\\nconst radioOptions = {\\n  intent: { default: 'default', page: 'page', table: 'table' }\\n}\\nexport const withBasic = addSourceDecorator(() => (\\n  <ThemeWrapper>\\n    <Box display='flex' justifyContent='space-evenly'>\\n      <IconButton\\n        onClick={action('clicked an Icon button with text')}\\n        primary={boolean('primary', false)}\\n        disabled={boolean('disabled', false)}\\n        intent={radios('intent', radioOptions.intent, 'default') as tIntent}\\n        iconVariant='icomoon-add'\\n        children='Add'\\n      />\\n      <IconButton\\n        onClick={action('clicked an Icon button with text')}\\n        primary={boolean('primary', false)}\\n        disabled={boolean('disabled', false)}\\n        intent={radios('intent', radioOptions.intent, 'default') as tIntent}\\n        iconVariant='icomoon-delete-empty'\\n        children='Delete'\\n      />\\n      <IconButton\\n        onClick={action('clicked an Icon button with text')}\\n        primary={boolean('primary', false)}\\n        disabled={boolean('disabled', false)}\\n        iconVariant='calendar'\\n        intent={radios('intent', radioOptions.intent, 'default') as tIntent}\\n        children='Calendar'\\n      />\\n    </Box>\\n  </ThemeWrapper>\\n), {__STORY__, __ADDS_MAP__,__MAIN_FILE_LOCATION__,__MODULE_DEPENDENCIES__,__LOCAL_DEPENDENCIES__,__SOURCE_PREFIX__,__IDS_TO_FRAMEWORKS__});\\nexport const withCircular = addSourceDecorator(() => (\\n  <ThemeWrapper>\\n    <Box display='flex' justifyContent='space-evenly'>\\n      <IconButton\\n        onClick={action('clicked an Icon button')}\\n        primary={boolean('primary', false)}\\n        disabled={boolean('disabled', false)}\\n        iconVariant='add'\\n        iconSize='xs'\\n        circle\\n      />\\n      <IconButton\\n        onClick={action('clicked an Icon button')}\\n        primary={boolean('primary', false)}\\n        disabled={boolean('disabled', false)}\\n        iconVariant='calendar'\\n        iconSize='md'\\n        circle\\n      />\\n    </Box>\\n  </ThemeWrapper>\\n), {__STORY__, __ADDS_MAP__,__MAIN_FILE_LOCATION__,__MODULE_DEPENDENCIES__,__LOCAL_DEPENDENCIES__,__SOURCE_PREFIX__,__IDS_TO_FRAMEWORKS__});\\n\\nexport const withOnlyIcon = addSourceDecorator(() => (\\n  <ThemeWrapper>\\n    <Box display='flex' justifyContent='space-evenly'>\\n      <IconButton\\n        onClick={action('clicked an Icon')}\\n        disabled={boolean('disabled', false)}\\n        onlyIcon\\n        iconVariant='add'\\n        iconSize='xs'\\n        color={text('Colors', 'primary.main')}\\n      />\\n      <IconButton\\n        onClick={action('clicked an Icon')}\\n        disabled={boolean('disabled', false)}\\n        onlyIcon\\n        iconVariant='calendar'\\n        iconSize='md'\\n        color={text('Colors', 'primary.main')}\\n      />\\n      <IconButton\\n        onClick={action('clicked an Icon')}\\n        disabled={boolean('disabled', false)}\\n        onlyIcon\\n        iconVariant='mail'\\n        iconSize='xl'\\n        color={text('Colors', 'primary.main')}\\n      />\\n    </Box>\\n  </ThemeWrapper>\\n), {__STORY__, __ADDS_MAP__,__MAIN_FILE_LOCATION__,__MODULE_DEPENDENCIES__,__LOCAL_DEPENDENCIES__,__SOURCE_PREFIX__,__IDS_TO_FRAMEWORKS__});\\n\\nexport const withLink = addSourceDecorator(() => (\\n  <ThemeWrapper>\\n    <Box display='flex' justifyContent='space-evenly'>\\n      <IconButton\\n        onClick={action('clicked an Icon')}\\n        disabled={boolean('disabled', false)}\\n        iconVariant='add'\\n        color={text('Colors', 'primary.main')}\\n        variant='link'\\n        children='Add'\\n      />\\n      <IconButton\\n        onClick={action('clicked an Icon')}\\n        disabled={boolean('disabled', false)}\\n        iconVariant='calendar'\\n        color={text('Colors', 'primary.main')}\\n        variant='link'\\n        children='Calendar'\\n      />\\n      <IconButton\\n        onClick={action('clicked an Icon')}\\n        disabled={boolean('disabled', false)}\\n        iconVariant='mail'\\n        color={text('Colors', 'primary.main')}\\n        variant='link'\\n        children='Mail'\\n      />\\n    </Box>\\n  </ThemeWrapper>\\n), {__STORY__, __ADDS_MAP__,__MAIN_FILE_LOCATION__,__MODULE_DEPENDENCIES__,__LOCAL_DEPENDENCIES__,__SOURCE_PREFIX__,__IDS_TO_FRAMEWORKS__});\";\n// @ts-ignore\nvar __ADDS_MAP__ = {};\n// @ts-ignore\nvar __MAIN_FILE_LOCATION__ = \"/IconButton.stories.tsx\";\n// @ts-ignore\nvar __MODULE_DEPENDENCIES__ = [];\n// @ts-ignore\nvar __LOCAL_DEPENDENCIES__ = {};\n// @ts-ignore\nvar __IDS_TO_FRAMEWORKS__ = {};\n        \n\n/* eslint-disable */\n// @ts-nocheck\n// @ts-ignore\nvar withSourceLoader = require('@storybook/source-loader/preview').withSource;\n// @ts-ignore\nvar addSourceDecorator = require(\"@storybook/source-loader/preview\").addSource;\n// @ts-ignore\nvar __SOURCE_PREFIX__ = \"/Users/farhanansari/Desktop/CODE/PrxProject/untitled folder/reactStoryBook/src/components/atoms/IconButton\";\n// @ts-ignore\nvar __STORY__ = \"import React from 'react'\\nimport { action } from '@storybook/addon-actions'\\nimport IconButton from '.'\\nimport Box from '../Box'\\nimport { withKnobs, boolean, text, radios } from '@storybook/addon-knobs'\\nimport { path } from '..'\\nimport ThemeWrapper from '../../../utilities/components/ThemeWrapper'\\nimport { tIntent } from '../Button'\\n\\nexport default {\\n  title: `${path}/IconButton`,\\n  decorators: [withKnobs],\\n  component: IconButton\\n}\\nconst radioOptions = {\\n  intent: { default: 'default', page: 'page', table: 'table' }\\n}\\nexport const withBasic = () => (\\n  <ThemeWrapper>\\n    <Box display='flex' justifyContent='space-evenly'>\\n      <IconButton\\n        onClick={action('clicked an Icon button with text')}\\n        primary={boolean('primary', false)}\\n        disabled={boolean('disabled', false)}\\n        intent={radios('intent', radioOptions.intent, 'default') as tIntent}\\n        iconVariant='icomoon-add'\\n        children='Add'\\n      />\\n      <IconButton\\n        onClick={action('clicked an Icon button with text')}\\n        primary={boolean('primary', false)}\\n        disabled={boolean('disabled', false)}\\n        intent={radios('intent', radioOptions.intent, 'default') as tIntent}\\n        iconVariant='icomoon-delete-empty'\\n        children='Delete'\\n      />\\n      <IconButton\\n        onClick={action('clicked an Icon button with text')}\\n        primary={boolean('primary', false)}\\n        disabled={boolean('disabled', false)}\\n        iconVariant='calendar'\\n        intent={radios('intent', radioOptions.intent, 'default') as tIntent}\\n        children='Calendar'\\n      />\\n    </Box>\\n  </ThemeWrapper>\\n)\\nexport const withCircular = () => (\\n  <ThemeWrapper>\\n    <Box display='flex' justifyContent='space-evenly'>\\n      <IconButton\\n        onClick={action('clicked an Icon button')}\\n        primary={boolean('primary', false)}\\n        disabled={boolean('disabled', false)}\\n        iconVariant='add'\\n        iconSize='xs'\\n        circle\\n      />\\n      <IconButton\\n        onClick={action('clicked an Icon button')}\\n        primary={boolean('primary', false)}\\n        disabled={boolean('disabled', false)}\\n        iconVariant='calendar'\\n        iconSize='md'\\n        circle\\n      />\\n    </Box>\\n  </ThemeWrapper>\\n)\\n\\nexport const withOnlyIcon = () => (\\n  <ThemeWrapper>\\n    <Box display='flex' justifyContent='space-evenly'>\\n      <IconButton\\n        onClick={action('clicked an Icon')}\\n        disabled={boolean('disabled', false)}\\n        onlyIcon\\n        iconVariant='add'\\n        iconSize='xs'\\n        color={text('Colors', 'primary.main')}\\n      />\\n      <IconButton\\n        onClick={action('clicked an Icon')}\\n        disabled={boolean('disabled', false)}\\n        onlyIcon\\n        iconVariant='calendar'\\n        iconSize='md'\\n        color={text('Colors', 'primary.main')}\\n      />\\n      <IconButton\\n        onClick={action('clicked an Icon')}\\n        disabled={boolean('disabled', false)}\\n        onlyIcon\\n        iconVariant='mail'\\n        iconSize='xl'\\n        color={text('Colors', 'primary.main')}\\n      />\\n    </Box>\\n  </ThemeWrapper>\\n)\\n\\nexport const withLink = () => (\\n  <ThemeWrapper>\\n    <Box display='flex' justifyContent='space-evenly'>\\n      <IconButton\\n        onClick={action('clicked an Icon')}\\n        disabled={boolean('disabled', false)}\\n        iconVariant='add'\\n        color={text('Colors', 'primary.main')}\\n        variant='link'\\n        children='Add'\\n      />\\n      <IconButton\\n        onClick={action('clicked an Icon')}\\n        disabled={boolean('disabled', false)}\\n        iconVariant='calendar'\\n        color={text('Colors', 'primary.main')}\\n        variant='link'\\n        children='Calendar'\\n      />\\n      <IconButton\\n        onClick={action('clicked an Icon')}\\n        disabled={boolean('disabled', false)}\\n        iconVariant='mail'\\n        color={text('Colors', 'primary.main')}\\n        variant='link'\\n        children='Mail'\\n      />\\n    </Box>\\n  </ThemeWrapper>\\n)\\n\";\n// @ts-ignore\nvar __ADDS_MAP__ = {};\n// @ts-ignore\nvar __MAIN_FILE_LOCATION__ = \"/IconButton.stories.tsx\";\n// @ts-ignore\nvar __MODULE_DEPENDENCIES__ = [];\n// @ts-ignore\nvar __LOCAL_DEPENDENCIES__ = {};\n// @ts-ignore\nvar __IDS_TO_FRAMEWORKS__ = {};\n        \nimport React from 'react'\nimport { action } from '@storybook/addon-actions'\nimport IconButton from '.'\nimport Box from '../Box'\nimport { withKnobs, boolean, text, radios } from '@storybook/addon-knobs'\nimport { path } from '..'\nimport ThemeWrapper from '../../../utilities/components/ThemeWrapper'\nimport { tIntent } from '../Button'\n\nexport default {parameters: {\"storySource\":{\"source\":\"\\n\\n// @ts-nocheck\\n// @ts-ignore\\nvar withSourceLoader = require('@storybook/source-loader/preview').withSource;\\n// @ts-ignore\\nvar addSourceDecorator = require(\\\"@storybook/source-loader/preview\\\").addSource;\\n// @ts-ignore\\nvar __SOURCE_PREFIX__ = \\\"/Users/farhanansari/Desktop/CODE/PrxProject/untitled folder/reactStoryBook/src/components/atoms/IconButton\\\";\\n// @ts-ignore\\nvar __STORY__ = \\\"\\\\n\\\\n// @ts-nocheck\\\\n// @ts-ignore\\\\nvar withSourceLoader = require('@storybook/source-loader/preview').withSource;\\\\n// @ts-ignore\\\\nvar addSourceDecorator = require(\\\\\\\"@storybook/source-loader/preview\\\\\\\").addSource;\\\\n// @ts-ignore\\\\nvar __SOURCE_PREFIX__ = \\\\\\\"/Users/farhanansari/Desktop/CODE/PrxProject/untitled folder/reactStoryBook/src/components/atoms/IconButton\\\\\\\";\\\\n// @ts-ignore\\\\nvar __STORY__ = \\\\\\\"import React from 'react'\\\\\\\\nimport { action } from '@storybook/addon-actions'\\\\\\\\nimport IconButton from '.'\\\\\\\\nimport Box from '../Box'\\\\\\\\nimport { withKnobs, boolean, text, radios } from '@storybook/addon-knobs'\\\\\\\\nimport { path } from '..'\\\\\\\\nimport ThemeWrapper from '../../../utilities/components/ThemeWrapper'\\\\\\\\nimport { tIntent } from '../Button'\\\\\\\\n\\\\\\\\nexport default {\\\\\\\\n  title: `${path}/IconButton`,\\\\\\\\n  decorators: [withKnobs],\\\\\\\\n  component: IconButton\\\\\\\\n}\\\\\\\\nconst radioOptions = {\\\\\\\\n  intent: { default: 'default', page: 'page', table: 'table' }\\\\\\\\n}\\\\\\\\nexport const withBasic = () => (\\\\\\\\n  <ThemeWrapper>\\\\\\\\n    <Box display='flex' justifyContent='space-evenly'>\\\\\\\\n      <IconButton\\\\\\\\n        onClick={action('clicked an Icon button with text')}\\\\\\\\n        primary={boolean('primary', false)}\\\\\\\\n        disabled={boolean('disabled', false)}\\\\\\\\n        intent={radios('intent', radioOptions.intent, 'default') as tIntent}\\\\\\\\n        iconVariant='icomoon-add'\\\\\\\\n        children='Add'\\\\\\\\n      />\\\\\\\\n      <IconButton\\\\\\\\n        onClick={action('clicked an Icon button with text')}\\\\\\\\n        primary={boolean('primary', false)}\\\\\\\\n        disabled={boolean('disabled', false)}\\\\\\\\n        intent={radios('intent', radioOptions.intent, 'default') as tIntent}\\\\\\\\n        iconVariant='icomoon-delete-empty'\\\\\\\\n        children='Delete'\\\\\\\\n      />\\\\\\\\n      <IconButton\\\\\\\\n        onClick={action('clicked an Icon button with text')}\\\\\\\\n        primary={boolean('primary', false)}\\\\\\\\n        disabled={boolean('disabled', false)}\\\\\\\\n        iconVariant='calendar'\\\\\\\\n        intent={radios('intent', radioOptions.intent, 'default') as tIntent}\\\\\\\\n        children='Calendar'\\\\\\\\n      />\\\\\\\\n    </Box>\\\\\\\\n  </ThemeWrapper>\\\\\\\\n)\\\\\\\\nexport const withCircular = () => (\\\\\\\\n  <ThemeWrapper>\\\\\\\\n    <Box display='flex' justifyContent='space-evenly'>\\\\\\\\n      <IconButton\\\\\\\\n        onClick={action('clicked an Icon button')}\\\\\\\\n        primary={boolean('primary', false)}\\\\\\\\n        disabled={boolean('disabled', false)}\\\\\\\\n        iconVariant='add'\\\\\\\\n        iconSize='xs'\\\\\\\\n        circle\\\\\\\\n      />\\\\\\\\n      <IconButton\\\\\\\\n        onClick={action('clicked an Icon button')}\\\\\\\\n        primary={boolean('primary', false)}\\\\\\\\n        disabled={boolean('disabled', false)}\\\\\\\\n        iconVariant='calendar'\\\\\\\\n        iconSize='md'\\\\\\\\n        circle\\\\\\\\n      />\\\\\\\\n    </Box>\\\\\\\\n  </ThemeWrapper>\\\\\\\\n)\\\\\\\\n\\\\\\\\nexport const withOnlyIcon = () => (\\\\\\\\n  <ThemeWrapper>\\\\\\\\n    <Box display='flex' justifyContent='space-evenly'>\\\\\\\\n      <IconButton\\\\\\\\n        onClick={action('clicked an Icon')}\\\\\\\\n        disabled={boolean('disabled', false)}\\\\\\\\n        onlyIcon\\\\\\\\n        iconVariant='add'\\\\\\\\n        iconSize='xs'\\\\\\\\n        color={text('Colors', 'primary.main')}\\\\\\\\n      />\\\\\\\\n      <IconButton\\\\\\\\n        onClick={action('clicked an Icon')}\\\\\\\\n        disabled={boolean('disabled', false)}\\\\\\\\n        onlyIcon\\\\\\\\n        iconVariant='calendar'\\\\\\\\n        iconSize='md'\\\\\\\\n        color={text('Colors', 'primary.main')}\\\\\\\\n      />\\\\\\\\n      <IconButton\\\\\\\\n        onClick={action('clicked an Icon')}\\\\\\\\n        disabled={boolean('disabled', false)}\\\\\\\\n        onlyIcon\\\\\\\\n        iconVariant='mail'\\\\\\\\n        iconSize='xl'\\\\\\\\n        color={text('Colors', 'primary.main')}\\\\\\\\n      />\\\\\\\\n    </Box>\\\\\\\\n  </ThemeWrapper>\\\\\\\\n)\\\\\\\\n\\\\\\\\nexport const withLink = () => (\\\\\\\\n  <ThemeWrapper>\\\\\\\\n    <Box display='flex' justifyContent='space-evenly'>\\\\\\\\n      <IconButton\\\\\\\\n        onClick={action('clicked an Icon')}\\\\\\\\n        disabled={boolean('disabled', false)}\\\\\\\\n        iconVariant='add'\\\\\\\\n        color={text('Colors', 'primary.main')}\\\\\\\\n        variant='link'\\\\\\\\n        children='Add'\\\\\\\\n      />\\\\\\\\n      <IconButton\\\\\\\\n        onClick={action('clicked an Icon')}\\\\\\\\n        disabled={boolean('disabled', false)}\\\\\\\\n        iconVariant='calendar'\\\\\\\\n        color={text('Colors', 'primary.main')}\\\\\\\\n        variant='link'\\\\\\\\n        children='Calendar'\\\\\\\\n      />\\\\\\\\n      <IconButton\\\\\\\\n        onClick={action('clicked an Icon')}\\\\\\\\n        disabled={boolean('disabled', false)}\\\\\\\\n        iconVariant='mail'\\\\\\\\n        color={text('Colors', 'primary.main')}\\\\\\\\n        variant='link'\\\\\\\\n        children='Mail'\\\\\\\\n      />\\\\\\\\n    </Box>\\\\\\\\n  </ThemeWrapper>\\\\\\\\n)\\\\\\\\n\\\\\\\";\\\\n// @ts-ignore\\\\nvar __ADDS_MAP__ = {};\\\\n// @ts-ignore\\\\nvar __MAIN_FILE_LOCATION__ = \\\\\\\"/IconButton.stories.tsx\\\\\\\";\\\\n// @ts-ignore\\\\nvar __MODULE_DEPENDENCIES__ = [];\\\\n// @ts-ignore\\\\nvar __LOCAL_DEPENDENCIES__ = {};\\\\n// @ts-ignore\\\\nvar __IDS_TO_FRAMEWORKS__ = {};\\\\n        \\\\nimport React from 'react'\\\\nimport { action } from '@storybook/addon-actions'\\\\nimport IconButton from '.'\\\\nimport Box from '../Box'\\\\nimport { withKnobs, boolean, text, radios } from '@storybook/addon-knobs'\\\\nimport { path } from '..'\\\\nimport ThemeWrapper from '../../../utilities/components/ThemeWrapper'\\\\nimport { tIntent } from '../Button'\\\\n\\\\nexport default {parameters: {\\\\\\\"storySource\\\\\\\":{\\\\\\\"source\\\\\\\":\\\\\\\"import React from 'react'\\\\\\\\nimport { action } from '@storybook/addon-actions'\\\\\\\\nimport IconButton from '.'\\\\\\\\nimport Box from '../Box'\\\\\\\\nimport { withKnobs, boolean, text, radios } from '@storybook/addon-knobs'\\\\\\\\nimport { path } from '..'\\\\\\\\nimport ThemeWrapper from '../../../utilities/components/ThemeWrapper'\\\\\\\\nimport { tIntent } from '../Button'\\\\\\\\n\\\\\\\\nexport default {\\\\\\\\n  title: `${path}/IconButton`,\\\\\\\\n  decorators: [withKnobs],\\\\\\\\n  component: IconButton\\\\\\\\n}\\\\\\\\nconst radioOptions = {\\\\\\\\n  intent: { default: 'default', page: 'page', table: 'table' }\\\\\\\\n}\\\\\\\\nexport const withBasic = () => (\\\\\\\\n  <ThemeWrapper>\\\\\\\\n    <Box display='flex' justifyContent='space-evenly'>\\\\\\\\n      <IconButton\\\\\\\\n        onClick={action('clicked an Icon button with text')}\\\\\\\\n        primary={boolean('primary', false)}\\\\\\\\n        disabled={boolean('disabled', false)}\\\\\\\\n        intent={radios('intent', radioOptions.intent, 'default') as tIntent}\\\\\\\\n        iconVariant='icomoon-add'\\\\\\\\n        children='Add'\\\\\\\\n      />\\\\\\\\n      <IconButton\\\\\\\\n        onClick={action('clicked an Icon button with text')}\\\\\\\\n        primary={boolean('primary', false)}\\\\\\\\n        disabled={boolean('disabled', false)}\\\\\\\\n        intent={radios('intent', radioOptions.intent, 'default') as tIntent}\\\\\\\\n        iconVariant='icomoon-delete-empty'\\\\\\\\n        children='Delete'\\\\\\\\n      />\\\\\\\\n      <IconButton\\\\\\\\n        onClick={action('clicked an Icon button with text')}\\\\\\\\n        primary={boolean('primary', false)}\\\\\\\\n        disabled={boolean('disabled', false)}\\\\\\\\n        iconVariant='calendar'\\\\\\\\n        intent={radios('intent', radioOptions.intent, 'default') as tIntent}\\\\\\\\n        children='Calendar'\\\\\\\\n      />\\\\\\\\n    </Box>\\\\\\\\n  </ThemeWrapper>\\\\\\\\n)\\\\\\\\nexport const withCircular = () => (\\\\\\\\n  <ThemeWrapper>\\\\\\\\n    <Box display='flex' justifyContent='space-evenly'>\\\\\\\\n      <IconButton\\\\\\\\n        onClick={action('clicked an Icon button')}\\\\\\\\n        primary={boolean('primary', false)}\\\\\\\\n        disabled={boolean('disabled', false)}\\\\\\\\n        iconVariant='add'\\\\\\\\n        iconSize='xs'\\\\\\\\n        circle\\\\\\\\n      />\\\\\\\\n      <IconButton\\\\\\\\n        onClick={action('clicked an Icon button')}\\\\\\\\n        primary={boolean('primary', false)}\\\\\\\\n        disabled={boolean('disabled', false)}\\\\\\\\n        iconVariant='calendar'\\\\\\\\n        iconSize='md'\\\\\\\\n        circle\\\\\\\\n      />\\\\\\\\n    </Box>\\\\\\\\n  </ThemeWrapper>\\\\\\\\n)\\\\\\\\n\\\\\\\\nexport const withOnlyIcon = () => (\\\\\\\\n  <ThemeWrapper>\\\\\\\\n    <Box display='flex' justifyContent='space-evenly'>\\\\\\\\n      <IconButton\\\\\\\\n        onClick={action('clicked an Icon')}\\\\\\\\n        disabled={boolean('disabled', false)}\\\\\\\\n        onlyIcon\\\\\\\\n        iconVariant='add'\\\\\\\\n        iconSize='xs'\\\\\\\\n        color={text('Colors', 'primary.main')}\\\\\\\\n      />\\\\\\\\n      <IconButton\\\\\\\\n        onClick={action('clicked an Icon')}\\\\\\\\n        disabled={boolean('disabled', false)}\\\\\\\\n        onlyIcon\\\\\\\\n        iconVariant='calendar'\\\\\\\\n        iconSize='md'\\\\\\\\n        color={text('Colors', 'primary.main')}\\\\\\\\n      />\\\\\\\\n      <IconButton\\\\\\\\n        onClick={action('clicked an Icon')}\\\\\\\\n        disabled={boolean('disabled', false)}\\\\\\\\n        onlyIcon\\\\\\\\n        iconVariant='mail'\\\\\\\\n        iconSize='xl'\\\\\\\\n        color={text('Colors', 'primary.main')}\\\\\\\\n      />\\\\\\\\n    </Box>\\\\\\\\n  </ThemeWrapper>\\\\\\\\n)\\\\\\\\n\\\\\\\\nexport const withLink = () => (\\\\\\\\n  <ThemeWrapper>\\\\\\\\n    <Box display='flex' justifyContent='space-evenly'>\\\\\\\\n      <IconButton\\\\\\\\n        onClick={action('clicked an Icon')}\\\\\\\\n        disabled={boolean('disabled', false)}\\\\\\\\n        iconVariant='add'\\\\\\\\n        color={text('Colors', 'primary.main')}\\\\\\\\n        variant='link'\\\\\\\\n        children='Add'\\\\\\\\n      />\\\\\\\\n      <IconButton\\\\\\\\n        onClick={action('clicked an Icon')}\\\\\\\\n        disabled={boolean('disabled', false)}\\\\\\\\n        iconVariant='calendar'\\\\\\\\n        color={text('Colors', 'primary.main')}\\\\\\\\n        variant='link'\\\\\\\\n        children='Calendar'\\\\\\\\n      />\\\\\\\\n      <IconButton\\\\\\\\n        onClick={action('clicked an Icon')}\\\\\\\\n        disabled={boolean('disabled', false)}\\\\\\\\n        iconVariant='mail'\\\\\\\\n        color={text('Colors', 'primary.main')}\\\\\\\\n        variant='link'\\\\\\\\n        children='Mail'\\\\\\\\n      />\\\\\\\\n    </Box>\\\\\\\\n  </ThemeWrapper>\\\\\\\\n)\\\\\\\\n\\\\\\\",\\\\\\\"locationsMap\\\\\\\":{}},},\\\\n  title: `${path}/IconButton`,\\\\n  decorators: [withKnobs],\\\\n  component: IconButton\\\\n}\\\\nconst radioOptions = {\\\\n  intent: { default: 'default', page: 'page', table: 'table' }\\\\n}\\\\nexport const withBasic = addSourceDecorator(() => (\\\\n  <ThemeWrapper>\\\\n    <Box display='flex' justifyContent='space-evenly'>\\\\n      <IconButton\\\\n        onClick={action('clicked an Icon button with text')}\\\\n        primary={boolean('primary', false)}\\\\n        disabled={boolean('disabled', false)}\\\\n        intent={radios('intent', radioOptions.intent, 'default') as tIntent}\\\\n        iconVariant='icomoon-add'\\\\n        children='Add'\\\\n      />\\\\n      <IconButton\\\\n        onClick={action('clicked an Icon button with text')}\\\\n        primary={boolean('primary', false)}\\\\n        disabled={boolean('disabled', false)}\\\\n        intent={radios('intent', radioOptions.intent, 'default') as tIntent}\\\\n        iconVariant='icomoon-delete-empty'\\\\n        children='Delete'\\\\n      />\\\\n      <IconButton\\\\n        onClick={action('clicked an Icon button with text')}\\\\n        primary={boolean('primary', false)}\\\\n        disabled={boolean('disabled', false)}\\\\n        iconVariant='calendar'\\\\n        intent={radios('intent', radioOptions.intent, 'default') as tIntent}\\\\n        children='Calendar'\\\\n      />\\\\n    </Box>\\\\n  </ThemeWrapper>\\\\n), {__STORY__, __ADDS_MAP__,__MAIN_FILE_LOCATION__,__MODULE_DEPENDENCIES__,__LOCAL_DEPENDENCIES__,__SOURCE_PREFIX__,__IDS_TO_FRAMEWORKS__});\\\\nexport const withCircular = addSourceDecorator(() => (\\\\n  <ThemeWrapper>\\\\n    <Box display='flex' justifyContent='space-evenly'>\\\\n      <IconButton\\\\n        onClick={action('clicked an Icon button')}\\\\n        primary={boolean('primary', false)}\\\\n        disabled={boolean('disabled', false)}\\\\n        iconVariant='add'\\\\n        iconSize='xs'\\\\n        circle\\\\n      />\\\\n      <IconButton\\\\n        onClick={action('clicked an Icon button')}\\\\n        primary={boolean('primary', false)}\\\\n        disabled={boolean('disabled', false)}\\\\n        iconVariant='calendar'\\\\n        iconSize='md'\\\\n        circle\\\\n      />\\\\n    </Box>\\\\n  </ThemeWrapper>\\\\n), {__STORY__, __ADDS_MAP__,__MAIN_FILE_LOCATION__,__MODULE_DEPENDENCIES__,__LOCAL_DEPENDENCIES__,__SOURCE_PREFIX__,__IDS_TO_FRAMEWORKS__});\\\\n\\\\nexport const withOnlyIcon = addSourceDecorator(() => (\\\\n  <ThemeWrapper>\\\\n    <Box display='flex' justifyContent='space-evenly'>\\\\n      <IconButton\\\\n        onClick={action('clicked an Icon')}\\\\n        disabled={boolean('disabled', false)}\\\\n        onlyIcon\\\\n        iconVariant='add'\\\\n        iconSize='xs'\\\\n        color={text('Colors', 'primary.main')}\\\\n      />\\\\n      <IconButton\\\\n        onClick={action('clicked an Icon')}\\\\n        disabled={boolean('disabled', false)}\\\\n        onlyIcon\\\\n        iconVariant='calendar'\\\\n        iconSize='md'\\\\n        color={text('Colors', 'primary.main')}\\\\n      />\\\\n      <IconButton\\\\n        onClick={action('clicked an Icon')}\\\\n        disabled={boolean('disabled', false)}\\\\n        onlyIcon\\\\n        iconVariant='mail'\\\\n        iconSize='xl'\\\\n        color={text('Colors', 'primary.main')}\\\\n      />\\\\n    </Box>\\\\n  </ThemeWrapper>\\\\n), {__STORY__, __ADDS_MAP__,__MAIN_FILE_LOCATION__,__MODULE_DEPENDENCIES__,__LOCAL_DEPENDENCIES__,__SOURCE_PREFIX__,__IDS_TO_FRAMEWORKS__});\\\\n\\\\nexport const withLink = addSourceDecorator(() => (\\\\n  <ThemeWrapper>\\\\n    <Box display='flex' justifyContent='space-evenly'>\\\\n      <IconButton\\\\n        onClick={action('clicked an Icon')}\\\\n        disabled={boolean('disabled', false)}\\\\n        iconVariant='add'\\\\n        color={text('Colors', 'primary.main')}\\\\n        variant='link'\\\\n        children='Add'\\\\n      />\\\\n      <IconButton\\\\n        onClick={action('clicked an Icon')}\\\\n        disabled={boolean('disabled', false)}\\\\n        iconVariant='calendar'\\\\n        color={text('Colors', 'primary.main')}\\\\n        variant='link'\\\\n        children='Calendar'\\\\n      />\\\\n      <IconButton\\\\n        onClick={action('clicked an Icon')}\\\\n        disabled={boolean('disabled', false)}\\\\n        iconVariant='mail'\\\\n        color={text('Colors', 'primary.main')}\\\\n        variant='link'\\\\n        children='Mail'\\\\n      />\\\\n    </Box>\\\\n  </ThemeWrapper>\\\\n), {__STORY__, __ADDS_MAP__,__MAIN_FILE_LOCATION__,__MODULE_DEPENDENCIES__,__LOCAL_DEPENDENCIES__,__SOURCE_PREFIX__,__IDS_TO_FRAMEWORKS__});\\\";\\n// @ts-ignore\\nvar __ADDS_MAP__ = {};\\n// @ts-ignore\\nvar __MAIN_FILE_LOCATION__ = \\\"/IconButton.stories.tsx\\\";\\n// @ts-ignore\\nvar __MODULE_DEPENDENCIES__ = [];\\n// @ts-ignore\\nvar __LOCAL_DEPENDENCIES__ = {};\\n// @ts-ignore\\nvar __IDS_TO_FRAMEWORKS__ = {};\\n        \\n\\n\\n// @ts-nocheck\\n// @ts-ignore\\nvar withSourceLoader = require('@storybook/source-loader/preview').withSource;\\n// @ts-ignore\\nvar addSourceDecorator = require(\\\"@storybook/source-loader/preview\\\").addSource;\\n// @ts-ignore\\nvar __SOURCE_PREFIX__ = \\\"/Users/farhanansari/Desktop/CODE/PrxProject/untitled folder/reactStoryBook/src/components/atoms/IconButton\\\";\\n// @ts-ignore\\nvar __STORY__ = \\\"import React from 'react'\\\\nimport { action } from '@storybook/addon-actions'\\\\nimport IconButton from '.'\\\\nimport Box from '../Box'\\\\nimport { withKnobs, boolean, text, radios } from '@storybook/addon-knobs'\\\\nimport { path } from '..'\\\\nimport ThemeWrapper from '../../../utilities/components/ThemeWrapper'\\\\nimport { tIntent } from '../Button'\\\\n\\\\nexport default {\\\\n  title: `${path}/IconButton`,\\\\n  decorators: [withKnobs],\\\\n  component: IconButton\\\\n}\\\\nconst radioOptions = {\\\\n  intent: { default: 'default', page: 'page', table: 'table' }\\\\n}\\\\nexport const withBasic = () => (\\\\n  <ThemeWrapper>\\\\n    <Box display='flex' justifyContent='space-evenly'>\\\\n      <IconButton\\\\n        onClick={action('clicked an Icon button with text')}\\\\n        primary={boolean('primary', false)}\\\\n        disabled={boolean('disabled', false)}\\\\n        intent={radios('intent', radioOptions.intent, 'default') as tIntent}\\\\n        iconVariant='icomoon-add'\\\\n        children='Add'\\\\n      />\\\\n      <IconButton\\\\n        onClick={action('clicked an Icon button with text')}\\\\n        primary={boolean('primary', false)}\\\\n        disabled={boolean('disabled', false)}\\\\n        intent={radios('intent', radioOptions.intent, 'default') as tIntent}\\\\n        iconVariant='icomoon-delete-empty'\\\\n        children='Delete'\\\\n      />\\\\n      <IconButton\\\\n        onClick={action('clicked an Icon button with text')}\\\\n        primary={boolean('primary', false)}\\\\n        disabled={boolean('disabled', false)}\\\\n        iconVariant='calendar'\\\\n        intent={radios('intent', radioOptions.intent, 'default') as tIntent}\\\\n        children='Calendar'\\\\n      />\\\\n    </Box>\\\\n  </ThemeWrapper>\\\\n)\\\\nexport const withCircular = () => (\\\\n  <ThemeWrapper>\\\\n    <Box display='flex' justifyContent='space-evenly'>\\\\n      <IconButton\\\\n        onClick={action('clicked an Icon button')}\\\\n        primary={boolean('primary', false)}\\\\n        disabled={boolean('disabled', false)}\\\\n        iconVariant='add'\\\\n        iconSize='xs'\\\\n        circle\\\\n      />\\\\n      <IconButton\\\\n        onClick={action('clicked an Icon button')}\\\\n        primary={boolean('primary', false)}\\\\n        disabled={boolean('disabled', false)}\\\\n        iconVariant='calendar'\\\\n        iconSize='md'\\\\n        circle\\\\n      />\\\\n    </Box>\\\\n  </ThemeWrapper>\\\\n)\\\\n\\\\nexport const withOnlyIcon = () => (\\\\n  <ThemeWrapper>\\\\n    <Box display='flex' justifyContent='space-evenly'>\\\\n      <IconButton\\\\n        onClick={action('clicked an Icon')}\\\\n        disabled={boolean('disabled', false)}\\\\n        onlyIcon\\\\n        iconVariant='add'\\\\n        iconSize='xs'\\\\n        color={text('Colors', 'primary.main')}\\\\n      />\\\\n      <IconButton\\\\n        onClick={action('clicked an Icon')}\\\\n        disabled={boolean('disabled', false)}\\\\n        onlyIcon\\\\n        iconVariant='calendar'\\\\n        iconSize='md'\\\\n        color={text('Colors', 'primary.main')}\\\\n      />\\\\n      <IconButton\\\\n        onClick={action('clicked an Icon')}\\\\n        disabled={boolean('disabled', false)}\\\\n        onlyIcon\\\\n        iconVariant='mail'\\\\n        iconSize='xl'\\\\n        color={text('Colors', 'primary.main')}\\\\n      />\\\\n    </Box>\\\\n  </ThemeWrapper>\\\\n)\\\\n\\\\nexport const withLink = () => (\\\\n  <ThemeWrapper>\\\\n    <Box display='flex' justifyContent='space-evenly'>\\\\n      <IconButton\\\\n        onClick={action('clicked an Icon')}\\\\n        disabled={boolean('disabled', false)}\\\\n        iconVariant='add'\\\\n        color={text('Colors', 'primary.main')}\\\\n        variant='link'\\\\n        children='Add'\\\\n      />\\\\n      <IconButton\\\\n        onClick={action('clicked an Icon')}\\\\n        disabled={boolean('disabled', false)}\\\\n        iconVariant='calendar'\\\\n        color={text('Colors', 'primary.main')}\\\\n        variant='link'\\\\n        children='Calendar'\\\\n      />\\\\n      <IconButton\\\\n        onClick={action('clicked an Icon')}\\\\n        disabled={boolean('disabled', false)}\\\\n        iconVariant='mail'\\\\n        color={text('Colors', 'primary.main')}\\\\n        variant='link'\\\\n        children='Mail'\\\\n      />\\\\n    </Box>\\\\n  </ThemeWrapper>\\\\n)\\\\n\\\";\\n// @ts-ignore\\nvar __ADDS_MAP__ = {};\\n// @ts-ignore\\nvar __MAIN_FILE_LOCATION__ = \\\"/IconButton.stories.tsx\\\";\\n// @ts-ignore\\nvar __MODULE_DEPENDENCIES__ = [];\\n// @ts-ignore\\nvar __LOCAL_DEPENDENCIES__ = {};\\n// @ts-ignore\\nvar __IDS_TO_FRAMEWORKS__ = {};\\n        \\nimport React from 'react'\\nimport { action } from '@storybook/addon-actions'\\nimport IconButton from '.'\\nimport Box from '../Box'\\nimport { withKnobs, boolean, text, radios } from '@storybook/addon-knobs'\\nimport { path } from '..'\\nimport ThemeWrapper from '../../../utilities/components/ThemeWrapper'\\nimport { tIntent } from '../Button'\\n\\nexport default {parameters: {\\\"storySource\\\":{\\\"source\\\":\\\"\\\\n\\\\n// @ts-nocheck\\\\n// @ts-ignore\\\\nvar withSourceLoader = require('@storybook/source-loader/preview').withSource;\\\\n// @ts-ignore\\\\nvar addSourceDecorator = require(\\\\\\\"@storybook/source-loader/preview\\\\\\\").addSource;\\\\n// @ts-ignore\\\\nvar __SOURCE_PREFIX__ = \\\\\\\"/Users/farhanansari/Desktop/CODE/PrxProject/untitled folder/reactStoryBook/src/components/atoms/IconButton\\\\\\\";\\\\n// @ts-ignore\\\\nvar __STORY__ = \\\\\\\"import React from 'react'\\\\\\\\nimport { action } from '@storybook/addon-actions'\\\\\\\\nimport IconButton from '.'\\\\\\\\nimport Box from '../Box'\\\\\\\\nimport { withKnobs, boolean, text, radios } from '@storybook/addon-knobs'\\\\\\\\nimport { path } from '..'\\\\\\\\nimport ThemeWrapper from '../../../utilities/components/ThemeWrapper'\\\\\\\\nimport { tIntent } from '../Button'\\\\\\\\n\\\\\\\\nexport default {\\\\\\\\n  title: `${path}/IconButton`,\\\\\\\\n  decorators: [withKnobs],\\\\\\\\n  component: IconButton\\\\\\\\n}\\\\\\\\nconst radioOptions = {\\\\\\\\n  intent: { default: 'default', page: 'page', table: 'table' }\\\\\\\\n}\\\\\\\\nexport const withBasic = () => (\\\\\\\\n  <ThemeWrapper>\\\\\\\\n    <Box display='flex' justifyContent='space-evenly'>\\\\\\\\n      <IconButton\\\\\\\\n        onClick={action('clicked an Icon button with text')}\\\\\\\\n        primary={boolean('primary', false)}\\\\\\\\n        disabled={boolean('disabled', false)}\\\\\\\\n        intent={radios('intent', radioOptions.intent, 'default') as tIntent}\\\\\\\\n        iconVariant='icomoon-add'\\\\\\\\n        children='Add'\\\\\\\\n      />\\\\\\\\n      <IconButton\\\\\\\\n        onClick={action('clicked an Icon button with text')}\\\\\\\\n        primary={boolean('primary', false)}\\\\\\\\n        disabled={boolean('disabled', false)}\\\\\\\\n        intent={radios('intent', radioOptions.intent, 'default') as tIntent}\\\\\\\\n        iconVariant='icomoon-delete-empty'\\\\\\\\n        children='Delete'\\\\\\\\n      />\\\\\\\\n      <IconButton\\\\\\\\n        onClick={action('clicked an Icon button with text')}\\\\\\\\n        primary={boolean('primary', false)}\\\\\\\\n        disabled={boolean('disabled', false)}\\\\\\\\n        iconVariant='calendar'\\\\\\\\n        intent={radios('intent', radioOptions.intent, 'default') as tIntent}\\\\\\\\n        children='Calendar'\\\\\\\\n      />\\\\\\\\n    </Box>\\\\\\\\n  </ThemeWrapper>\\\\\\\\n)\\\\\\\\nexport const withCircular = () => (\\\\\\\\n  <ThemeWrapper>\\\\\\\\n    <Box display='flex' justifyContent='space-evenly'>\\\\\\\\n      <IconButton\\\\\\\\n        onClick={action('clicked an Icon button')}\\\\\\\\n        primary={boolean('primary', false)}\\\\\\\\n        disabled={boolean('disabled', false)}\\\\\\\\n        iconVariant='add'\\\\\\\\n        iconSize='xs'\\\\\\\\n        circle\\\\\\\\n      />\\\\\\\\n      <IconButton\\\\\\\\n        onClick={action('clicked an Icon button')}\\\\\\\\n        primary={boolean('primary', false)}\\\\\\\\n        disabled={boolean('disabled', false)}\\\\\\\\n        iconVariant='calendar'\\\\\\\\n        iconSize='md'\\\\\\\\n        circle\\\\\\\\n      />\\\\\\\\n    </Box>\\\\\\\\n  </ThemeWrapper>\\\\\\\\n)\\\\\\\\n\\\\\\\\nexport const withOnlyIcon = () => (\\\\\\\\n  <ThemeWrapper>\\\\\\\\n    <Box display='flex' justifyContent='space-evenly'>\\\\\\\\n      <IconButton\\\\\\\\n        onClick={action('clicked an Icon')}\\\\\\\\n        disabled={boolean('disabled', false)}\\\\\\\\n        onlyIcon\\\\\\\\n        iconVariant='add'\\\\\\\\n        iconSize='xs'\\\\\\\\n        color={text('Colors', 'primary.main')}\\\\\\\\n      />\\\\\\\\n      <IconButton\\\\\\\\n        onClick={action('clicked an Icon')}\\\\\\\\n        disabled={boolean('disabled', false)}\\\\\\\\n        onlyIcon\\\\\\\\n        iconVariant='calendar'\\\\\\\\n        iconSize='md'\\\\\\\\n        color={text('Colors', 'primary.main')}\\\\\\\\n      />\\\\\\\\n      <IconButton\\\\\\\\n        onClick={action('clicked an Icon')}\\\\\\\\n        disabled={boolean('disabled', false)}\\\\\\\\n        onlyIcon\\\\\\\\n        iconVariant='mail'\\\\\\\\n        iconSize='xl'\\\\\\\\n        color={text('Colors', 'primary.main')}\\\\\\\\n      />\\\\\\\\n    </Box>\\\\\\\\n  </ThemeWrapper>\\\\\\\\n)\\\\\\\\n\\\\\\\\nexport const withLink = () => (\\\\\\\\n  <ThemeWrapper>\\\\\\\\n    <Box display='flex' justifyContent='space-evenly'>\\\\\\\\n      <IconButton\\\\\\\\n        onClick={action('clicked an Icon')}\\\\\\\\n        disabled={boolean('disabled', false)}\\\\\\\\n        iconVariant='add'\\\\\\\\n        color={text('Colors', 'primary.main')}\\\\\\\\n        variant='link'\\\\\\\\n        children='Add'\\\\\\\\n      />\\\\\\\\n      <IconButton\\\\\\\\n        onClick={action('clicked an Icon')}\\\\\\\\n        disabled={boolean('disabled', false)}\\\\\\\\n        iconVariant='calendar'\\\\\\\\n        color={text('Colors', 'primary.main')}\\\\\\\\n        variant='link'\\\\\\\\n        children='Calendar'\\\\\\\\n      />\\\\\\\\n      <IconButton\\\\\\\\n        onClick={action('clicked an Icon')}\\\\\\\\n        disabled={boolean('disabled', false)}\\\\\\\\n        iconVariant='mail'\\\\\\\\n        color={text('Colors', 'primary.main')}\\\\\\\\n        variant='link'\\\\\\\\n        children='Mail'\\\\\\\\n      />\\\\\\\\n    </Box>\\\\\\\\n  </ThemeWrapper>\\\\\\\\n)\\\\\\\\n\\\\\\\";\\\\n// @ts-ignore\\\\nvar __ADDS_MAP__ = {};\\\\n// @ts-ignore\\\\nvar __MAIN_FILE_LOCATION__ = \\\\\\\"/IconButton.stories.tsx\\\\\\\";\\\\n// @ts-ignore\\\\nvar __MODULE_DEPENDENCIES__ = [];\\\\n// @ts-ignore\\\\nvar __LOCAL_DEPENDENCIES__ = {};\\\\n// @ts-ignore\\\\nvar __IDS_TO_FRAMEWORKS__ = {};\\\\n        \\\\nimport React from 'react'\\\\nimport { action } from '@storybook/addon-actions'\\\\nimport IconButton from '.'\\\\nimport Box from '../Box'\\\\nimport { withKnobs, boolean, text, radios } from '@storybook/addon-knobs'\\\\nimport { path } from '..'\\\\nimport ThemeWrapper from '../../../utilities/components/ThemeWrapper'\\\\nimport { tIntent } from '../Button'\\\\n\\\\nexport default {parameters: {\\\\\\\"storySource\\\\\\\":{\\\\\\\"source\\\\\\\":\\\\\\\"import React from 'react'\\\\\\\\nimport { action } from '@storybook/addon-actions'\\\\\\\\nimport IconButton from '.'\\\\\\\\nimport Box from '../Box'\\\\\\\\nimport { withKnobs, boolean, text, radios } from '@storybook/addon-knobs'\\\\\\\\nimport { path } from '..'\\\\\\\\nimport ThemeWrapper from '../../../utilities/components/ThemeWrapper'\\\\\\\\nimport { tIntent } from '../Button'\\\\\\\\n\\\\\\\\nexport default {\\\\\\\\n  title: `${path}/IconButton`,\\\\\\\\n  decorators: [withKnobs],\\\\\\\\n  component: IconButton\\\\\\\\n}\\\\\\\\nconst radioOptions = {\\\\\\\\n  intent: { default: 'default', page: 'page', table: 'table' }\\\\\\\\n}\\\\\\\\nexport const withBasic = () => (\\\\\\\\n  <ThemeWrapper>\\\\\\\\n    <Box display='flex' justifyContent='space-evenly'>\\\\\\\\n      <IconButton\\\\\\\\n        onClick={action('clicked an Icon button with text')}\\\\\\\\n        primary={boolean('primary', false)}\\\\\\\\n        disabled={boolean('disabled', false)}\\\\\\\\n        intent={radios('intent', radioOptions.intent, 'default') as tIntent}\\\\\\\\n        iconVariant='icomoon-add'\\\\\\\\n        children='Add'\\\\\\\\n      />\\\\\\\\n      <IconButton\\\\\\\\n        onClick={action('clicked an Icon button with text')}\\\\\\\\n        primary={boolean('primary', false)}\\\\\\\\n        disabled={boolean('disabled', false)}\\\\\\\\n        intent={radios('intent', radioOptions.intent, 'default') as tIntent}\\\\\\\\n        iconVariant='icomoon-delete-empty'\\\\\\\\n        children='Delete'\\\\\\\\n      />\\\\\\\\n      <IconButton\\\\\\\\n        onClick={action('clicked an Icon button with text')}\\\\\\\\n        primary={boolean('primary', false)}\\\\\\\\n        disabled={boolean('disabled', false)}\\\\\\\\n        iconVariant='calendar'\\\\\\\\n        intent={radios('intent', radioOptions.intent, 'default') as tIntent}\\\\\\\\n        children='Calendar'\\\\\\\\n      />\\\\\\\\n    </Box>\\\\\\\\n  </ThemeWrapper>\\\\\\\\n)\\\\\\\\nexport const withCircular = () => (\\\\\\\\n  <ThemeWrapper>\\\\\\\\n    <Box display='flex' justifyContent='space-evenly'>\\\\\\\\n      <IconButton\\\\\\\\n        onClick={action('clicked an Icon button')}\\\\\\\\n        primary={boolean('primary', false)}\\\\\\\\n        disabled={boolean('disabled', false)}\\\\\\\\n        iconVariant='add'\\\\\\\\n        iconSize='xs'\\\\\\\\n        circle\\\\\\\\n      />\\\\\\\\n      <IconButton\\\\\\\\n        onClick={action('clicked an Icon button')}\\\\\\\\n        primary={boolean('primary', false)}\\\\\\\\n        disabled={boolean('disabled', false)}\\\\\\\\n        iconVariant='calendar'\\\\\\\\n        iconSize='md'\\\\\\\\n        circle\\\\\\\\n      />\\\\\\\\n    </Box>\\\\\\\\n  </ThemeWrapper>\\\\\\\\n)\\\\\\\\n\\\\\\\\nexport const withOnlyIcon = () => (\\\\\\\\n  <ThemeWrapper>\\\\\\\\n    <Box display='flex' justifyContent='space-evenly'>\\\\\\\\n      <IconButton\\\\\\\\n        onClick={action('clicked an Icon')}\\\\\\\\n        disabled={boolean('disabled', false)}\\\\\\\\n        onlyIcon\\\\\\\\n        iconVariant='add'\\\\\\\\n        iconSize='xs'\\\\\\\\n        color={text('Colors', 'primary.main')}\\\\\\\\n      />\\\\\\\\n      <IconButton\\\\\\\\n        onClick={action('clicked an Icon')}\\\\\\\\n        disabled={boolean('disabled', false)}\\\\\\\\n        onlyIcon\\\\\\\\n        iconVariant='calendar'\\\\\\\\n        iconSize='md'\\\\\\\\n        color={text('Colors', 'primary.main')}\\\\\\\\n      />\\\\\\\\n      <IconButton\\\\\\\\n        onClick={action('clicked an Icon')}\\\\\\\\n        disabled={boolean('disabled', false)}\\\\\\\\n        onlyIcon\\\\\\\\n        iconVariant='mail'\\\\\\\\n        iconSize='xl'\\\\\\\\n        color={text('Colors', 'primary.main')}\\\\\\\\n      />\\\\\\\\n    </Box>\\\\\\\\n  </ThemeWrapper>\\\\\\\\n)\\\\\\\\n\\\\\\\\nexport const withLink = () => (\\\\\\\\n  <ThemeWrapper>\\\\\\\\n    <Box display='flex' justifyContent='space-evenly'>\\\\\\\\n      <IconButton\\\\\\\\n        onClick={action('clicked an Icon')}\\\\\\\\n        disabled={boolean('disabled', false)}\\\\\\\\n        iconVariant='add'\\\\\\\\n        color={text('Colors', 'primary.main')}\\\\\\\\n        variant='link'\\\\\\\\n        children='Add'\\\\\\\\n      />\\\\\\\\n      <IconButton\\\\\\\\n        onClick={action('clicked an Icon')}\\\\\\\\n        disabled={boolean('disabled', false)}\\\\\\\\n        iconVariant='calendar'\\\\\\\\n        color={text('Colors', 'primary.main')}\\\\\\\\n        variant='link'\\\\\\\\n        children='Calendar'\\\\\\\\n      />\\\\\\\\n      <IconButton\\\\\\\\n        onClick={action('clicked an Icon')}\\\\\\\\n        disabled={boolean('disabled', false)}\\\\\\\\n        iconVariant='mail'\\\\\\\\n        color={text('Colors', 'primary.main')}\\\\\\\\n        variant='link'\\\\\\\\n        children='Mail'\\\\\\\\n      />\\\\\\\\n    </Box>\\\\\\\\n  </ThemeWrapper>\\\\\\\\n)\\\\\\\\n\\\\\\\",\\\\\\\"locationsMap\\\\\\\":{}},},\\\\n  title: `${path}/IconButton`,\\\\n  decorators: [withKnobs],\\\\n  component: IconButton\\\\n}\\\\nconst radioOptions = {\\\\n  intent: { default: 'default', page: 'page', table: 'table' }\\\\n}\\\\nexport const withBasic = addSourceDecorator(() => (\\\\n  <ThemeWrapper>\\\\n    <Box display='flex' justifyContent='space-evenly'>\\\\n      <IconButton\\\\n        onClick={action('clicked an Icon button with text')}\\\\n        primary={boolean('primary', false)}\\\\n        disabled={boolean('disabled', false)}\\\\n        intent={radios('intent', radioOptions.intent, 'default') as tIntent}\\\\n        iconVariant='icomoon-add'\\\\n        children='Add'\\\\n      />\\\\n      <IconButton\\\\n        onClick={action('clicked an Icon button with text')}\\\\n        primary={boolean('primary', false)}\\\\n        disabled={boolean('disabled', false)}\\\\n        intent={radios('intent', radioOptions.intent, 'default') as tIntent}\\\\n        iconVariant='icomoon-delete-empty'\\\\n        children='Delete'\\\\n      />\\\\n      <IconButton\\\\n        onClick={action('clicked an Icon button with text')}\\\\n        primary={boolean('primary', false)}\\\\n        disabled={boolean('disabled', false)}\\\\n        iconVariant='calendar'\\\\n        intent={radios('intent', radioOptions.intent, 'default') as tIntent}\\\\n        children='Calendar'\\\\n      />\\\\n    </Box>\\\\n  </ThemeWrapper>\\\\n), {__STORY__, __ADDS_MAP__,__MAIN_FILE_LOCATION__,__MODULE_DEPENDENCIES__,__LOCAL_DEPENDENCIES__,__SOURCE_PREFIX__,__IDS_TO_FRAMEWORKS__});\\\\nexport const withCircular = addSourceDecorator(() => (\\\\n  <ThemeWrapper>\\\\n    <Box display='flex' justifyContent='space-evenly'>\\\\n      <IconButton\\\\n        onClick={action('clicked an Icon button')}\\\\n        primary={boolean('primary', false)}\\\\n        disabled={boolean('disabled', false)}\\\\n        iconVariant='add'\\\\n        iconSize='xs'\\\\n        circle\\\\n      />\\\\n      <IconButton\\\\n        onClick={action('clicked an Icon button')}\\\\n        primary={boolean('primary', false)}\\\\n        disabled={boolean('disabled', false)}\\\\n        iconVariant='calendar'\\\\n        iconSize='md'\\\\n        circle\\\\n      />\\\\n    </Box>\\\\n  </ThemeWrapper>\\\\n), {__STORY__, __ADDS_MAP__,__MAIN_FILE_LOCATION__,__MODULE_DEPENDENCIES__,__LOCAL_DEPENDENCIES__,__SOURCE_PREFIX__,__IDS_TO_FRAMEWORKS__});\\\\n\\\\nexport const withOnlyIcon = addSourceDecorator(() => (\\\\n  <ThemeWrapper>\\\\n    <Box display='flex' justifyContent='space-evenly'>\\\\n      <IconButton\\\\n        onClick={action('clicked an Icon')}\\\\n        disabled={boolean('disabled', false)}\\\\n        onlyIcon\\\\n        iconVariant='add'\\\\n        iconSize='xs'\\\\n        color={text('Colors', 'primary.main')}\\\\n      />\\\\n      <IconButton\\\\n        onClick={action('clicked an Icon')}\\\\n        disabled={boolean('disabled', false)}\\\\n        onlyIcon\\\\n        iconVariant='calendar'\\\\n        iconSize='md'\\\\n        color={text('Colors', 'primary.main')}\\\\n      />\\\\n      <IconButton\\\\n        onClick={action('clicked an Icon')}\\\\n        disabled={boolean('disabled', false)}\\\\n        onlyIcon\\\\n        iconVariant='mail'\\\\n        iconSize='xl'\\\\n        color={text('Colors', 'primary.main')}\\\\n      />\\\\n    </Box>\\\\n  </ThemeWrapper>\\\\n), {__STORY__, __ADDS_MAP__,__MAIN_FILE_LOCATION__,__MODULE_DEPENDENCIES__,__LOCAL_DEPENDENCIES__,__SOURCE_PREFIX__,__IDS_TO_FRAMEWORKS__});\\\\n\\\\nexport const withLink = addSourceDecorator(() => (\\\\n  <ThemeWrapper>\\\\n    <Box display='flex' justifyContent='space-evenly'>\\\\n      <IconButton\\\\n        onClick={action('clicked an Icon')}\\\\n        disabled={boolean('disabled', false)}\\\\n        iconVariant='add'\\\\n        color={text('Colors', 'primary.main')}\\\\n        variant='link'\\\\n        children='Add'\\\\n      />\\\\n      <IconButton\\\\n        onClick={action('clicked an Icon')}\\\\n        disabled={boolean('disabled', false)}\\\\n        iconVariant='calendar'\\\\n        color={text('Colors', 'primary.main')}\\\\n        variant='link'\\\\n        children='Calendar'\\\\n      />\\\\n      <IconButton\\\\n        onClick={action('clicked an Icon')}\\\\n        disabled={boolean('disabled', false)}\\\\n        iconVariant='mail'\\\\n        color={text('Colors', 'primary.main')}\\\\n        variant='link'\\\\n        children='Mail'\\\\n      />\\\\n    </Box>\\\\n  </ThemeWrapper>\\\\n), {__STORY__, __ADDS_MAP__,__MAIN_FILE_LOCATION__,__MODULE_DEPENDENCIES__,__LOCAL_DEPENDENCIES__,__SOURCE_PREFIX__,__IDS_TO_FRAMEWORKS__});\\\",\\\"locationsMap\\\":{}},\\\"storySource\\\":{\\\"source\\\":\\\"import React from 'react'\\\\nimport { action } from '@storybook/addon-actions'\\\\nimport IconButton from '.'\\\\nimport Box from '../Box'\\\\nimport { withKnobs, boolean, text, radios } from '@storybook/addon-knobs'\\\\nimport { path } from '..'\\\\nimport ThemeWrapper from '../../../utilities/components/ThemeWrapper'\\\\nimport { tIntent } from '../Button'\\\\n\\\\nexport default {\\\\n  title: `${path}/IconButton`,\\\\n  decorators: [withKnobs],\\\\n  component: IconButton\\\\n}\\\\nconst radioOptions = {\\\\n  intent: { default: 'default', page: 'page', table: 'table' }\\\\n}\\\\nexport const withBasic = () => (\\\\n  <ThemeWrapper>\\\\n    <Box display='flex' justifyContent='space-evenly'>\\\\n      <IconButton\\\\n        onClick={action('clicked an Icon button with text')}\\\\n        primary={boolean('primary', false)}\\\\n        disabled={boolean('disabled', false)}\\\\n        intent={radios('intent', radioOptions.intent, 'default') as tIntent}\\\\n        iconVariant='icomoon-add'\\\\n        children='Add'\\\\n      />\\\\n      <IconButton\\\\n        onClick={action('clicked an Icon button with text')}\\\\n        primary={boolean('primary', false)}\\\\n        disabled={boolean('disabled', false)}\\\\n        intent={radios('intent', radioOptions.intent, 'default') as tIntent}\\\\n        iconVariant='icomoon-delete-empty'\\\\n        children='Delete'\\\\n      />\\\\n      <IconButton\\\\n        onClick={action('clicked an Icon button with text')}\\\\n        primary={boolean('primary', false)}\\\\n        disabled={boolean('disabled', false)}\\\\n        iconVariant='calendar'\\\\n        intent={radios('intent', radioOptions.intent, 'default') as tIntent}\\\\n        children='Calendar'\\\\n      />\\\\n    </Box>\\\\n  </ThemeWrapper>\\\\n)\\\\nexport const withCircular = () => (\\\\n  <ThemeWrapper>\\\\n    <Box display='flex' justifyContent='space-evenly'>\\\\n      <IconButton\\\\n        onClick={action('clicked an Icon button')}\\\\n        primary={boolean('primary', false)}\\\\n        disabled={boolean('disabled', false)}\\\\n        iconVariant='add'\\\\n        iconSize='xs'\\\\n        circle\\\\n      />\\\\n      <IconButton\\\\n        onClick={action('clicked an Icon button')}\\\\n        primary={boolean('primary', false)}\\\\n        disabled={boolean('disabled', false)}\\\\n        iconVariant='calendar'\\\\n        iconSize='md'\\\\n        circle\\\\n      />\\\\n    </Box>\\\\n  </ThemeWrapper>\\\\n)\\\\n\\\\nexport const withOnlyIcon = () => (\\\\n  <ThemeWrapper>\\\\n    <Box display='flex' justifyContent='space-evenly'>\\\\n      <IconButton\\\\n        onClick={action('clicked an Icon')}\\\\n        disabled={boolean('disabled', false)}\\\\n        onlyIcon\\\\n        iconVariant='add'\\\\n        iconSize='xs'\\\\n        color={text('Colors', 'primary.main')}\\\\n      />\\\\n      <IconButton\\\\n        onClick={action('clicked an Icon')}\\\\n        disabled={boolean('disabled', false)}\\\\n        onlyIcon\\\\n        iconVariant='calendar'\\\\n        iconSize='md'\\\\n        color={text('Colors', 'primary.main')}\\\\n      />\\\\n      <IconButton\\\\n        onClick={action('clicked an Icon')}\\\\n        disabled={boolean('disabled', false)}\\\\n        onlyIcon\\\\n        iconVariant='mail'\\\\n        iconSize='xl'\\\\n        color={text('Colors', 'primary.main')}\\\\n      />\\\\n    </Box>\\\\n  </ThemeWrapper>\\\\n)\\\\n\\\\nexport const withLink = () => (\\\\n  <ThemeWrapper>\\\\n    <Box display='flex' justifyContent='space-evenly'>\\\\n      <IconButton\\\\n        onClick={action('clicked an Icon')}\\\\n        disabled={boolean('disabled', false)}\\\\n        iconVariant='add'\\\\n        color={text('Colors', 'primary.main')}\\\\n        variant='link'\\\\n        children='Add'\\\\n      />\\\\n      <IconButton\\\\n        onClick={action('clicked an Icon')}\\\\n        disabled={boolean('disabled', false)}\\\\n        iconVariant='calendar'\\\\n        color={text('Colors', 'primary.main')}\\\\n        variant='link'\\\\n        children='Calendar'\\\\n      />\\\\n      <IconButton\\\\n        onClick={action('clicked an Icon')}\\\\n        disabled={boolean('disabled', false)}\\\\n        iconVariant='mail'\\\\n        color={text('Colors', 'primary.main')}\\\\n        variant='link'\\\\n        children='Mail'\\\\n      />\\\\n    </Box>\\\\n  </ThemeWrapper>\\\\n)\\\\n\\\",\\\"locationsMap\\\":{}},},\\n  title: `${path}/IconButton`,\\n  decorators: [withKnobs],\\n  component: IconButton\\n}\\nconst radioOptions = {\\n  intent: { default: 'default', page: 'page', table: 'table' }\\n}\\nexport const withBasic = addSourceDecorator(addSourceDecorator(() => (\\n  <ThemeWrapper>\\n    <Box display='flex' justifyContent='space-evenly'>\\n      <IconButton\\n        onClick={action('clicked an Icon button with text')}\\n        primary={boolean('primary', false)}\\n        disabled={boolean('disabled', false)}\\n        intent={radios('intent', radioOptions.intent, 'default') as tIntent}\\n        iconVariant='icomoon-add'\\n        children='Add'\\n      />\\n      <IconButton\\n        onClick={action('clicked an Icon button with text')}\\n        primary={boolean('primary', false)}\\n        disabled={boolean('disabled', false)}\\n        intent={radios('intent', radioOptions.intent, 'default') as tIntent}\\n        iconVariant='icomoon-delete-empty'\\n        children='Delete'\\n      />\\n      <IconButton\\n        onClick={action('clicked an Icon button with text')}\\n        primary={boolean('primary', false)}\\n        disabled={boolean('disabled', false)}\\n        iconVariant='calendar'\\n        intent={radios('intent', radioOptions.intent, 'default') as tIntent}\\n        children='Calendar'\\n      />\\n    </Box>\\n  </ThemeWrapper>\\n), {__STORY__, __ADDS_MAP__,__MAIN_FILE_LOCATION__,__MODULE_DEPENDENCIES__,__LOCAL_DEPENDENCIES__,__SOURCE_PREFIX__,__IDS_TO_FRAMEWORKS__}), {__STORY__, __ADDS_MAP__,__MAIN_FILE_LOCATION__,__MODULE_DEPENDENCIES__,__LOCAL_DEPENDENCIES__,__SOURCE_PREFIX__,__IDS_TO_FRAMEWORKS__});;\\nexport const withCircular = addSourceDecorator(addSourceDecorator(() => (\\n  <ThemeWrapper>\\n    <Box display='flex' justifyContent='space-evenly'>\\n      <IconButton\\n        onClick={action('clicked an Icon button')}\\n        primary={boolean('primary', false)}\\n        disabled={boolean('disabled', false)}\\n        iconVariant='add'\\n        iconSize='xs'\\n        circle\\n      />\\n      <IconButton\\n        onClick={action('clicked an Icon button')}\\n        primary={boolean('primary', false)}\\n        disabled={boolean('disabled', false)}\\n        iconVariant='calendar'\\n        iconSize='md'\\n        circle\\n      />\\n    </Box>\\n  </ThemeWrapper>\\n), {__STORY__, __ADDS_MAP__,__MAIN_FILE_LOCATION__,__MODULE_DEPENDENCIES__,__LOCAL_DEPENDENCIES__,__SOURCE_PREFIX__,__IDS_TO_FRAMEWORKS__}), {__STORY__, __ADDS_MAP__,__MAIN_FILE_LOCATION__,__MODULE_DEPENDENCIES__,__LOCAL_DEPENDENCIES__,__SOURCE_PREFIX__,__IDS_TO_FRAMEWORKS__});;\\n\\nexport const withOnlyIcon = addSourceDecorator(addSourceDecorator(() => (\\n  <ThemeWrapper>\\n    <Box display='flex' justifyContent='space-evenly'>\\n      <IconButton\\n        onClick={action('clicked an Icon')}\\n        disabled={boolean('disabled', false)}\\n        onlyIcon\\n        iconVariant='add'\\n        iconSize='xs'\\n        color={text('Colors', 'primary.main')}\\n      />\\n      <IconButton\\n        onClick={action('clicked an Icon')}\\n        disabled={boolean('disabled', false)}\\n        onlyIcon\\n        iconVariant='calendar'\\n        iconSize='md'\\n        color={text('Colors', 'primary.main')}\\n      />\\n      <IconButton\\n        onClick={action('clicked an Icon')}\\n        disabled={boolean('disabled', false)}\\n        onlyIcon\\n        iconVariant='mail'\\n        iconSize='xl'\\n        color={text('Colors', 'primary.main')}\\n      />\\n    </Box>\\n  </ThemeWrapper>\\n), {__STORY__, __ADDS_MAP__,__MAIN_FILE_LOCATION__,__MODULE_DEPENDENCIES__,__LOCAL_DEPENDENCIES__,__SOURCE_PREFIX__,__IDS_TO_FRAMEWORKS__}), {__STORY__, __ADDS_MAP__,__MAIN_FILE_LOCATION__,__MODULE_DEPENDENCIES__,__LOCAL_DEPENDENCIES__,__SOURCE_PREFIX__,__IDS_TO_FRAMEWORKS__});;\\n\\nexport const withLink = addSourceDecorator(addSourceDecorator(() => (\\n  <ThemeWrapper>\\n    <Box display='flex' justifyContent='space-evenly'>\\n      <IconButton\\n        onClick={action('clicked an Icon')}\\n        disabled={boolean('disabled', false)}\\n        iconVariant='add'\\n        color={text('Colors', 'primary.main')}\\n        variant='link'\\n        children='Add'\\n      />\\n      <IconButton\\n        onClick={action('clicked an Icon')}\\n        disabled={boolean('disabled', false)}\\n        iconVariant='calendar'\\n        color={text('Colors', 'primary.main')}\\n        variant='link'\\n        children='Calendar'\\n      />\\n      <IconButton\\n        onClick={action('clicked an Icon')}\\n        disabled={boolean('disabled', false)}\\n        iconVariant='mail'\\n        color={text('Colors', 'primary.main')}\\n        variant='link'\\n        children='Mail'\\n      />\\n    </Box>\\n  </ThemeWrapper>\\n), {__STORY__, __ADDS_MAP__,__MAIN_FILE_LOCATION__,__MODULE_DEPENDENCIES__,__LOCAL_DEPENDENCIES__,__SOURCE_PREFIX__,__IDS_TO_FRAMEWORKS__}), {__STORY__, __ADDS_MAP__,__MAIN_FILE_LOCATION__,__MODULE_DEPENDENCIES__,__LOCAL_DEPENDENCIES__,__SOURCE_PREFIX__,__IDS_TO_FRAMEWORKS__});\",\"locationsMap\":{}},\"storySource\":{\"source\":\"\\n\\n// @ts-nocheck\\n// @ts-ignore\\nvar withSourceLoader = require('@storybook/source-loader/preview').withSource;\\n// @ts-ignore\\nvar addSourceDecorator = require(\\\"@storybook/source-loader/preview\\\").addSource;\\n// @ts-ignore\\nvar __SOURCE_PREFIX__ = \\\"/Users/farhanansari/Desktop/CODE/PrxProject/untitled folder/reactStoryBook/src/components/atoms/IconButton\\\";\\n// @ts-ignore\\nvar __STORY__ = \\\"import React from 'react'\\\\nimport { action } from '@storybook/addon-actions'\\\\nimport IconButton from '.'\\\\nimport Box from '../Box'\\\\nimport { withKnobs, boolean, text, radios } from '@storybook/addon-knobs'\\\\nimport { path } from '..'\\\\nimport ThemeWrapper from '../../../utilities/components/ThemeWrapper'\\\\nimport { tIntent } from '../Button'\\\\n\\\\nexport default {\\\\n  title: `${path}/IconButton`,\\\\n  decorators: [withKnobs],\\\\n  component: IconButton\\\\n}\\\\nconst radioOptions = {\\\\n  intent: { default: 'default', page: 'page', table: 'table' }\\\\n}\\\\nexport const withBasic = () => (\\\\n  <ThemeWrapper>\\\\n    <Box display='flex' justifyContent='space-evenly'>\\\\n      <IconButton\\\\n        onClick={action('clicked an Icon button with text')}\\\\n        primary={boolean('primary', false)}\\\\n        disabled={boolean('disabled', false)}\\\\n        intent={radios('intent', radioOptions.intent, 'default') as tIntent}\\\\n        iconVariant='icomoon-add'\\\\n        children='Add'\\\\n      />\\\\n      <IconButton\\\\n        onClick={action('clicked an Icon button with text')}\\\\n        primary={boolean('primary', false)}\\\\n        disabled={boolean('disabled', false)}\\\\n        intent={radios('intent', radioOptions.intent, 'default') as tIntent}\\\\n        iconVariant='icomoon-delete-empty'\\\\n        children='Delete'\\\\n      />\\\\n      <IconButton\\\\n        onClick={action('clicked an Icon button with text')}\\\\n        primary={boolean('primary', false)}\\\\n        disabled={boolean('disabled', false)}\\\\n        iconVariant='calendar'\\\\n        intent={radios('intent', radioOptions.intent, 'default') as tIntent}\\\\n        children='Calendar'\\\\n      />\\\\n    </Box>\\\\n  </ThemeWrapper>\\\\n)\\\\nexport const withCircular = () => (\\\\n  <ThemeWrapper>\\\\n    <Box display='flex' justifyContent='space-evenly'>\\\\n      <IconButton\\\\n        onClick={action('clicked an Icon button')}\\\\n        primary={boolean('primary', false)}\\\\n        disabled={boolean('disabled', false)}\\\\n        iconVariant='add'\\\\n        iconSize='xs'\\\\n        circle\\\\n      />\\\\n      <IconButton\\\\n        onClick={action('clicked an Icon button')}\\\\n        primary={boolean('primary', false)}\\\\n        disabled={boolean('disabled', false)}\\\\n        iconVariant='calendar'\\\\n        iconSize='md'\\\\n        circle\\\\n      />\\\\n    </Box>\\\\n  </ThemeWrapper>\\\\n)\\\\n\\\\nexport const withOnlyIcon = () => (\\\\n  <ThemeWrapper>\\\\n    <Box display='flex' justifyContent='space-evenly'>\\\\n      <IconButton\\\\n        onClick={action('clicked an Icon')}\\\\n        disabled={boolean('disabled', false)}\\\\n        onlyIcon\\\\n        iconVariant='add'\\\\n        iconSize='xs'\\\\n        color={text('Colors', 'primary.main')}\\\\n      />\\\\n      <IconButton\\\\n        onClick={action('clicked an Icon')}\\\\n        disabled={boolean('disabled', false)}\\\\n        onlyIcon\\\\n        iconVariant='calendar'\\\\n        iconSize='md'\\\\n        color={text('Colors', 'primary.main')}\\\\n      />\\\\n      <IconButton\\\\n        onClick={action('clicked an Icon')}\\\\n        disabled={boolean('disabled', false)}\\\\n        onlyIcon\\\\n        iconVariant='mail'\\\\n        iconSize='xl'\\\\n        color={text('Colors', 'primary.main')}\\\\n      />\\\\n    </Box>\\\\n  </ThemeWrapper>\\\\n)\\\\n\\\\nexport const withLink = () => (\\\\n  <ThemeWrapper>\\\\n    <Box display='flex' justifyContent='space-evenly'>\\\\n      <IconButton\\\\n        onClick={action('clicked an Icon')}\\\\n        disabled={boolean('disabled', false)}\\\\n        iconVariant='add'\\\\n        color={text('Colors', 'primary.main')}\\\\n        variant='link'\\\\n        children='Add'\\\\n      />\\\\n      <IconButton\\\\n        onClick={action('clicked an Icon')}\\\\n        disabled={boolean('disabled', false)}\\\\n        iconVariant='calendar'\\\\n        color={text('Colors', 'primary.main')}\\\\n        variant='link'\\\\n        children='Calendar'\\\\n      />\\\\n      <IconButton\\\\n        onClick={action('clicked an Icon')}\\\\n        disabled={boolean('disabled', false)}\\\\n        iconVariant='mail'\\\\n        color={text('Colors', 'primary.main')}\\\\n        variant='link'\\\\n        children='Mail'\\\\n      />\\\\n    </Box>\\\\n  </ThemeWrapper>\\\\n)\\\\n\\\";\\n// @ts-ignore\\nvar __ADDS_MAP__ = {};\\n// @ts-ignore\\nvar __MAIN_FILE_LOCATION__ = \\\"/IconButton.stories.tsx\\\";\\n// @ts-ignore\\nvar __MODULE_DEPENDENCIES__ = [];\\n// @ts-ignore\\nvar __LOCAL_DEPENDENCIES__ = {};\\n// @ts-ignore\\nvar __IDS_TO_FRAMEWORKS__ = {};\\n        \\nimport React from 'react'\\nimport { action } from '@storybook/addon-actions'\\nimport IconButton from '.'\\nimport Box from '../Box'\\nimport { withKnobs, boolean, text, radios } from '@storybook/addon-knobs'\\nimport { path } from '..'\\nimport ThemeWrapper from '../../../utilities/components/ThemeWrapper'\\nimport { tIntent } from '../Button'\\n\\nexport default {parameters: {\\\"storySource\\\":{\\\"source\\\":\\\"import React from 'react'\\\\nimport { action } from '@storybook/addon-actions'\\\\nimport IconButton from '.'\\\\nimport Box from '../Box'\\\\nimport { withKnobs, boolean, text, radios } from '@storybook/addon-knobs'\\\\nimport { path } from '..'\\\\nimport ThemeWrapper from '../../../utilities/components/ThemeWrapper'\\\\nimport { tIntent } from '../Button'\\\\n\\\\nexport default {\\\\n  title: `${path}/IconButton`,\\\\n  decorators: [withKnobs],\\\\n  component: IconButton\\\\n}\\\\nconst radioOptions = {\\\\n  intent: { default: 'default', page: 'page', table: 'table' }\\\\n}\\\\nexport const withBasic = () => (\\\\n  <ThemeWrapper>\\\\n    <Box display='flex' justifyContent='space-evenly'>\\\\n      <IconButton\\\\n        onClick={action('clicked an Icon button with text')}\\\\n        primary={boolean('primary', false)}\\\\n        disabled={boolean('disabled', false)}\\\\n        intent={radios('intent', radioOptions.intent, 'default') as tIntent}\\\\n        iconVariant='icomoon-add'\\\\n        children='Add'\\\\n      />\\\\n      <IconButton\\\\n        onClick={action('clicked an Icon button with text')}\\\\n        primary={boolean('primary', false)}\\\\n        disabled={boolean('disabled', false)}\\\\n        intent={radios('intent', radioOptions.intent, 'default') as tIntent}\\\\n        iconVariant='icomoon-delete-empty'\\\\n        children='Delete'\\\\n      />\\\\n      <IconButton\\\\n        onClick={action('clicked an Icon button with text')}\\\\n        primary={boolean('primary', false)}\\\\n        disabled={boolean('disabled', false)}\\\\n        iconVariant='calendar'\\\\n        intent={radios('intent', radioOptions.intent, 'default') as tIntent}\\\\n        children='Calendar'\\\\n      />\\\\n    </Box>\\\\n  </ThemeWrapper>\\\\n)\\\\nexport const withCircular = () => (\\\\n  <ThemeWrapper>\\\\n    <Box display='flex' justifyContent='space-evenly'>\\\\n      <IconButton\\\\n        onClick={action('clicked an Icon button')}\\\\n        primary={boolean('primary', false)}\\\\n        disabled={boolean('disabled', false)}\\\\n        iconVariant='add'\\\\n        iconSize='xs'\\\\n        circle\\\\n      />\\\\n      <IconButton\\\\n        onClick={action('clicked an Icon button')}\\\\n        primary={boolean('primary', false)}\\\\n        disabled={boolean('disabled', false)}\\\\n        iconVariant='calendar'\\\\n        iconSize='md'\\\\n        circle\\\\n      />\\\\n    </Box>\\\\n  </ThemeWrapper>\\\\n)\\\\n\\\\nexport const withOnlyIcon = () => (\\\\n  <ThemeWrapper>\\\\n    <Box display='flex' justifyContent='space-evenly'>\\\\n      <IconButton\\\\n        onClick={action('clicked an Icon')}\\\\n        disabled={boolean('disabled', false)}\\\\n        onlyIcon\\\\n        iconVariant='add'\\\\n        iconSize='xs'\\\\n        color={text('Colors', 'primary.main')}\\\\n      />\\\\n      <IconButton\\\\n        onClick={action('clicked an Icon')}\\\\n        disabled={boolean('disabled', false)}\\\\n        onlyIcon\\\\n        iconVariant='calendar'\\\\n        iconSize='md'\\\\n        color={text('Colors', 'primary.main')}\\\\n      />\\\\n      <IconButton\\\\n        onClick={action('clicked an Icon')}\\\\n        disabled={boolean('disabled', false)}\\\\n        onlyIcon\\\\n        iconVariant='mail'\\\\n        iconSize='xl'\\\\n        color={text('Colors', 'primary.main')}\\\\n      />\\\\n    </Box>\\\\n  </ThemeWrapper>\\\\n)\\\\n\\\\nexport const withLink = () => (\\\\n  <ThemeWrapper>\\\\n    <Box display='flex' justifyContent='space-evenly'>\\\\n      <IconButton\\\\n        onClick={action('clicked an Icon')}\\\\n        disabled={boolean('disabled', false)}\\\\n        iconVariant='add'\\\\n        color={text('Colors', 'primary.main')}\\\\n        variant='link'\\\\n        children='Add'\\\\n      />\\\\n      <IconButton\\\\n        onClick={action('clicked an Icon')}\\\\n        disabled={boolean('disabled', false)}\\\\n        iconVariant='calendar'\\\\n        color={text('Colors', 'primary.main')}\\\\n        variant='link'\\\\n        children='Calendar'\\\\n      />\\\\n      <IconButton\\\\n        onClick={action('clicked an Icon')}\\\\n        disabled={boolean('disabled', false)}\\\\n        iconVariant='mail'\\\\n        color={text('Colors', 'primary.main')}\\\\n        variant='link'\\\\n        children='Mail'\\\\n      />\\\\n    </Box>\\\\n  </ThemeWrapper>\\\\n)\\\\n\\\",\\\"locationsMap\\\":{}},},\\n  title: `${path}/IconButton`,\\n  decorators: [withKnobs],\\n  component: IconButton\\n}\\nconst radioOptions = {\\n  intent: { default: 'default', page: 'page', table: 'table' }\\n}\\nexport const withBasic = addSourceDecorator(() => (\\n  <ThemeWrapper>\\n    <Box display='flex' justifyContent='space-evenly'>\\n      <IconButton\\n        onClick={action('clicked an Icon button with text')}\\n        primary={boolean('primary', false)}\\n        disabled={boolean('disabled', false)}\\n        intent={radios('intent', radioOptions.intent, 'default') as tIntent}\\n        iconVariant='icomoon-add'\\n        children='Add'\\n      />\\n      <IconButton\\n        onClick={action('clicked an Icon button with text')}\\n        primary={boolean('primary', false)}\\n        disabled={boolean('disabled', false)}\\n        intent={radios('intent', radioOptions.intent, 'default') as tIntent}\\n        iconVariant='icomoon-delete-empty'\\n        children='Delete'\\n      />\\n      <IconButton\\n        onClick={action('clicked an Icon button with text')}\\n        primary={boolean('primary', false)}\\n        disabled={boolean('disabled', false)}\\n        iconVariant='calendar'\\n        intent={radios('intent', radioOptions.intent, 'default') as tIntent}\\n        children='Calendar'\\n      />\\n    </Box>\\n  </ThemeWrapper>\\n), {__STORY__, __ADDS_MAP__,__MAIN_FILE_LOCATION__,__MODULE_DEPENDENCIES__,__LOCAL_DEPENDENCIES__,__SOURCE_PREFIX__,__IDS_TO_FRAMEWORKS__});\\nexport const withCircular = addSourceDecorator(() => (\\n  <ThemeWrapper>\\n    <Box display='flex' justifyContent='space-evenly'>\\n      <IconButton\\n        onClick={action('clicked an Icon button')}\\n        primary={boolean('primary', false)}\\n        disabled={boolean('disabled', false)}\\n        iconVariant='add'\\n        iconSize='xs'\\n        circle\\n      />\\n      <IconButton\\n        onClick={action('clicked an Icon button')}\\n        primary={boolean('primary', false)}\\n        disabled={boolean('disabled', false)}\\n        iconVariant='calendar'\\n        iconSize='md'\\n        circle\\n      />\\n    </Box>\\n  </ThemeWrapper>\\n), {__STORY__, __ADDS_MAP__,__MAIN_FILE_LOCATION__,__MODULE_DEPENDENCIES__,__LOCAL_DEPENDENCIES__,__SOURCE_PREFIX__,__IDS_TO_FRAMEWORKS__});\\n\\nexport const withOnlyIcon = addSourceDecorator(() => (\\n  <ThemeWrapper>\\n    <Box display='flex' justifyContent='space-evenly'>\\n      <IconButton\\n        onClick={action('clicked an Icon')}\\n        disabled={boolean('disabled', false)}\\n        onlyIcon\\n        iconVariant='add'\\n        iconSize='xs'\\n        color={text('Colors', 'primary.main')}\\n      />\\n      <IconButton\\n        onClick={action('clicked an Icon')}\\n        disabled={boolean('disabled', false)}\\n        onlyIcon\\n        iconVariant='calendar'\\n        iconSize='md'\\n        color={text('Colors', 'primary.main')}\\n      />\\n      <IconButton\\n        onClick={action('clicked an Icon')}\\n        disabled={boolean('disabled', false)}\\n        onlyIcon\\n        iconVariant='mail'\\n        iconSize='xl'\\n        color={text('Colors', 'primary.main')}\\n      />\\n    </Box>\\n  </ThemeWrapper>\\n), {__STORY__, __ADDS_MAP__,__MAIN_FILE_LOCATION__,__MODULE_DEPENDENCIES__,__LOCAL_DEPENDENCIES__,__SOURCE_PREFIX__,__IDS_TO_FRAMEWORKS__});\\n\\nexport const withLink = addSourceDecorator(() => (\\n  <ThemeWrapper>\\n    <Box display='flex' justifyContent='space-evenly'>\\n      <IconButton\\n        onClick={action('clicked an Icon')}\\n        disabled={boolean('disabled', false)}\\n        iconVariant='add'\\n        color={text('Colors', 'primary.main')}\\n        variant='link'\\n        children='Add'\\n      />\\n      <IconButton\\n        onClick={action('clicked an Icon')}\\n        disabled={boolean('disabled', false)}\\n        iconVariant='calendar'\\n        color={text('Colors', 'primary.main')}\\n        variant='link'\\n        children='Calendar'\\n      />\\n      <IconButton\\n        onClick={action('clicked an Icon')}\\n        disabled={boolean('disabled', false)}\\n        iconVariant='mail'\\n        color={text('Colors', 'primary.main')}\\n        variant='link'\\n        children='Mail'\\n      />\\n    </Box>\\n  </ThemeWrapper>\\n), {__STORY__, __ADDS_MAP__,__MAIN_FILE_LOCATION__,__MODULE_DEPENDENCIES__,__LOCAL_DEPENDENCIES__,__SOURCE_PREFIX__,__IDS_TO_FRAMEWORKS__});\",\"locationsMap\":{}},\"storySource\":{\"source\":\"import React from 'react'\\nimport { action } from '@storybook/addon-actions'\\nimport IconButton from '.'\\nimport Box from '../Box'\\nimport { withKnobs, boolean, text, radios } from '@storybook/addon-knobs'\\nimport { path } from '..'\\nimport ThemeWrapper from '../../../utilities/components/ThemeWrapper'\\nimport { tIntent } from '../Button'\\n\\nexport default {\\n  title: `${path}/IconButton`,\\n  decorators: [withKnobs],\\n  component: IconButton\\n}\\nconst radioOptions = {\\n  intent: { default: 'default', page: 'page', table: 'table' }\\n}\\nexport const withBasic = () => (\\n  <ThemeWrapper>\\n    <Box display='flex' justifyContent='space-evenly'>\\n      <IconButton\\n        onClick={action('clicked an Icon button with text')}\\n        primary={boolean('primary', false)}\\n        disabled={boolean('disabled', false)}\\n        intent={radios('intent', radioOptions.intent, 'default') as tIntent}\\n        iconVariant='icomoon-add'\\n        children='Add'\\n      />\\n      <IconButton\\n        onClick={action('clicked an Icon button with text')}\\n        primary={boolean('primary', false)}\\n        disabled={boolean('disabled', false)}\\n        intent={radios('intent', radioOptions.intent, 'default') as tIntent}\\n        iconVariant='icomoon-delete-empty'\\n        children='Delete'\\n      />\\n      <IconButton\\n        onClick={action('clicked an Icon button with text')}\\n        primary={boolean('primary', false)}\\n        disabled={boolean('disabled', false)}\\n        iconVariant='calendar'\\n        intent={radios('intent', radioOptions.intent, 'default') as tIntent}\\n        children='Calendar'\\n      />\\n    </Box>\\n  </ThemeWrapper>\\n)\\nexport const withCircular = () => (\\n  <ThemeWrapper>\\n    <Box display='flex' justifyContent='space-evenly'>\\n      <IconButton\\n        onClick={action('clicked an Icon button')}\\n        primary={boolean('primary', false)}\\n        disabled={boolean('disabled', false)}\\n        iconVariant='add'\\n        iconSize='xs'\\n        circle\\n      />\\n      <IconButton\\n        onClick={action('clicked an Icon button')}\\n        primary={boolean('primary', false)}\\n        disabled={boolean('disabled', false)}\\n        iconVariant='calendar'\\n        iconSize='md'\\n        circle\\n      />\\n    </Box>\\n  </ThemeWrapper>\\n)\\n\\nexport const withOnlyIcon = () => (\\n  <ThemeWrapper>\\n    <Box display='flex' justifyContent='space-evenly'>\\n      <IconButton\\n        onClick={action('clicked an Icon')}\\n        disabled={boolean('disabled', false)}\\n        onlyIcon\\n        iconVariant='add'\\n        iconSize='xs'\\n        color={text('Colors', 'primary.main')}\\n      />\\n      <IconButton\\n        onClick={action('clicked an Icon')}\\n        disabled={boolean('disabled', false)}\\n        onlyIcon\\n        iconVariant='calendar'\\n        iconSize='md'\\n        color={text('Colors', 'primary.main')}\\n      />\\n      <IconButton\\n        onClick={action('clicked an Icon')}\\n        disabled={boolean('disabled', false)}\\n        onlyIcon\\n        iconVariant='mail'\\n        iconSize='xl'\\n        color={text('Colors', 'primary.main')}\\n      />\\n    </Box>\\n  </ThemeWrapper>\\n)\\n\\nexport const withLink = () => (\\n  <ThemeWrapper>\\n    <Box display='flex' justifyContent='space-evenly'>\\n      <IconButton\\n        onClick={action('clicked an Icon')}\\n        disabled={boolean('disabled', false)}\\n        iconVariant='add'\\n        color={text('Colors', 'primary.main')}\\n        variant='link'\\n        children='Add'\\n      />\\n      <IconButton\\n        onClick={action('clicked an Icon')}\\n        disabled={boolean('disabled', false)}\\n        iconVariant='calendar'\\n        color={text('Colors', 'primary.main')}\\n        variant='link'\\n        children='Calendar'\\n      />\\n      <IconButton\\n        onClick={action('clicked an Icon')}\\n        disabled={boolean('disabled', false)}\\n        iconVariant='mail'\\n        color={text('Colors', 'primary.main')}\\n        variant='link'\\n        children='Mail'\\n      />\\n    </Box>\\n  </ThemeWrapper>\\n)\\n\",\"locationsMap\":{}},},\n  title: `${path}/IconButton`,\n  decorators: [withKnobs],\n  component: IconButton\n}\nconst radioOptions = {\n  intent: { default: 'default', page: 'page', table: 'table' }\n}\nexport const withBasic = addSourceDecorator(addSourceDecorator(addSourceDecorator(() => (\n  <ThemeWrapper>\n    <Box display='flex' justifyContent='space-evenly'>\n      <IconButton\n        onClick={action('clicked an Icon button with text')}\n        primary={boolean('primary', false)}\n        disabled={boolean('disabled', false)}\n        intent={radios('intent', radioOptions.intent, 'default') as tIntent}\n        iconVariant='icomoon-add'\n        children='Add'\n      />\n      <IconButton\n        onClick={action('clicked an Icon button with text')}\n        primary={boolean('primary', false)}\n        disabled={boolean('disabled', false)}\n        intent={radios('intent', radioOptions.intent, 'default') as tIntent}\n        iconVariant='icomoon-delete-empty'\n        children='Delete'\n      />\n      <IconButton\n        onClick={action('clicked an Icon button with text')}\n        primary={boolean('primary', false)}\n        disabled={boolean('disabled', false)}\n        iconVariant='calendar'\n        intent={radios('intent', radioOptions.intent, 'default') as tIntent}\n        children='Calendar'\n      />\n    </Box>\n  </ThemeWrapper>\n), {__STORY__, __ADDS_MAP__,__MAIN_FILE_LOCATION__,__MODULE_DEPENDENCIES__,__LOCAL_DEPENDENCIES__,__SOURCE_PREFIX__,__IDS_TO_FRAMEWORKS__}), {__STORY__, __ADDS_MAP__,__MAIN_FILE_LOCATION__,__MODULE_DEPENDENCIES__,__LOCAL_DEPENDENCIES__,__SOURCE_PREFIX__,__IDS_TO_FRAMEWORKS__}), {__STORY__, __ADDS_MAP__,__MAIN_FILE_LOCATION__,__MODULE_DEPENDENCIES__,__LOCAL_DEPENDENCIES__,__SOURCE_PREFIX__,__IDS_TO_FRAMEWORKS__});;;\nexport const withCircular = addSourceDecorator(addSourceDecorator(addSourceDecorator(() => (\n  <ThemeWrapper>\n    <Box display='flex' justifyContent='space-evenly'>\n      <IconButton\n        onClick={action('clicked an Icon button')}\n        primary={boolean('primary', false)}\n        disabled={boolean('disabled', false)}\n        iconVariant='add'\n        iconSize='xs'\n        circle\n      />\n      <IconButton\n        onClick={action('clicked an Icon button')}\n        primary={boolean('primary', false)}\n        disabled={boolean('disabled', false)}\n        iconVariant='calendar'\n        iconSize='md'\n        circle\n      />\n    </Box>\n  </ThemeWrapper>\n), {__STORY__, __ADDS_MAP__,__MAIN_FILE_LOCATION__,__MODULE_DEPENDENCIES__,__LOCAL_DEPENDENCIES__,__SOURCE_PREFIX__,__IDS_TO_FRAMEWORKS__}), {__STORY__, __ADDS_MAP__,__MAIN_FILE_LOCATION__,__MODULE_DEPENDENCIES__,__LOCAL_DEPENDENCIES__,__SOURCE_PREFIX__,__IDS_TO_FRAMEWORKS__}), {__STORY__, __ADDS_MAP__,__MAIN_FILE_LOCATION__,__MODULE_DEPENDENCIES__,__LOCAL_DEPENDENCIES__,__SOURCE_PREFIX__,__IDS_TO_FRAMEWORKS__});;;\n\nexport const withOnlyIcon = addSourceDecorator(addSourceDecorator(addSourceDecorator(() => (\n  <ThemeWrapper>\n    <Box display='flex' justifyContent='space-evenly'>\n      <IconButton\n        onClick={action('clicked an Icon')}\n        disabled={boolean('disabled', false)}\n        onlyIcon\n        iconVariant='add'\n        iconSize='xs'\n        color={text('Colors', 'primary.main')}\n      />\n      <IconButton\n        onClick={action('clicked an Icon')}\n        disabled={boolean('disabled', false)}\n        onlyIcon\n        iconVariant='calendar'\n        iconSize='md'\n        color={text('Colors', 'primary.main')}\n      />\n      <IconButton\n        onClick={action('clicked an Icon')}\n        disabled={boolean('disabled', false)}\n        onlyIcon\n        iconVariant='mail'\n        iconSize='xl'\n        color={text('Colors', 'primary.main')}\n      />\n    </Box>\n  </ThemeWrapper>\n), {__STORY__, __ADDS_MAP__,__MAIN_FILE_LOCATION__,__MODULE_DEPENDENCIES__,__LOCAL_DEPENDENCIES__,__SOURCE_PREFIX__,__IDS_TO_FRAMEWORKS__}), {__STORY__, __ADDS_MAP__,__MAIN_FILE_LOCATION__,__MODULE_DEPENDENCIES__,__LOCAL_DEPENDENCIES__,__SOURCE_PREFIX__,__IDS_TO_FRAMEWORKS__}), {__STORY__, __ADDS_MAP__,__MAIN_FILE_LOCATION__,__MODULE_DEPENDENCIES__,__LOCAL_DEPENDENCIES__,__SOURCE_PREFIX__,__IDS_TO_FRAMEWORKS__});;;\n\nexport const withLink = addSourceDecorator(addSourceDecorator(addSourceDecorator(() => (\n  <ThemeWrapper>\n    <Box display='flex' justifyContent='space-evenly'>\n      <IconButton\n        onClick={action('clicked an Icon')}\n        disabled={boolean('disabled', false)}\n        iconVariant='add'\n        color={text('Colors', 'primary.main')}\n        variant='link'\n        children='Add'\n      />\n      <IconButton\n        onClick={action('clicked an Icon')}\n        disabled={boolean('disabled', false)}\n        iconVariant='calendar'\n        color={text('Colors', 'primary.main')}\n        variant='link'\n        children='Calendar'\n      />\n      <IconButton\n        onClick={action('clicked an Icon')}\n        disabled={boolean('disabled', false)}\n        iconVariant='mail'\n        color={text('Colors', 'primary.main')}\n        variant='link'\n        children='Mail'\n      />\n    </Box>\n  </ThemeWrapper>\n), {__STORY__, __ADDS_MAP__,__MAIN_FILE_LOCATION__,__MODULE_DEPENDENCIES__,__LOCAL_DEPENDENCIES__,__SOURCE_PREFIX__,__IDS_TO_FRAMEWORKS__}), {__STORY__, __ADDS_MAP__,__MAIN_FILE_LOCATION__,__MODULE_DEPENDENCIES__,__LOCAL_DEPENDENCIES__,__SOURCE_PREFIX__,__IDS_TO_FRAMEWORKS__}), {__STORY__, __ADDS_MAP__,__MAIN_FILE_LOCATION__,__MODULE_DEPENDENCIES__,__LOCAL_DEPENDENCIES__,__SOURCE_PREFIX__,__IDS_TO_FRAMEWORKS__});"],"sourceRoot":""},"metadata":{},"sourceType":"module"}