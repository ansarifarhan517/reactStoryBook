{"ast":null,"code":"var _this = this,\n    _jsxFileName = \"/Users/farhanansari/Desktop/CODE/PrxProject/untitled folder/reactStoryBook/src/components/atoms/Map/layers/LeafletCircleLayer.tsx\";\n\nimport 'leaflet-draw/dist/leaflet.draw.css';\nimport 'leaflet/dist/leaflet.css';\nimport React, { Fragment } from 'react';\nimport LeafletCircleEditLayer from './LeafletCircleEditLayer';\nimport LeafletCirclePlottingLayer from './LeafletCirclePlotting';\n\nvar LeafletCircleLayer = function LeafletCircleLayer(_ref) {\n  var circle = _ref.circle,\n      createShape = _ref.createShape,\n      setCreateShape = _ref.setCreateShape,\n      editPopUpComponent = _ref.editPopUpComponent,\n      popupRef = _ref.popupRef,\n      google = _ref.google,\n      onEdit = _ref.onEdit,\n      setFeatureGroupProps = _ref.setFeatureGroupProps,\n      popupCustomComponent = _ref.popupCustomComponent;\n  return /*#__PURE__*/React.createElement(Fragment, {\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 36,\n      columnNumber: 5\n    }\n  }, ((circle === null || circle === void 0 ? void 0 : circle.editLayer) || circle.createPermission) && /*#__PURE__*/React.createElement(LeafletCircleEditLayer, {\n    onChange: function onChange(data) {\n      return onEdit && onEdit(data);\n    },\n    createShape: createShape,\n    setCreateShape: setCreateShape,\n    editPopUpComponent: editPopUpComponent,\n    circle: circle,\n    setFeatureGroupProps: setFeatureGroupProps,\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 38,\n      columnNumber: 9\n    }\n  }), /*#__PURE__*/React.createElement(LeafletCirclePlottingLayer, {\n    circle: circle,\n    popupRef: popupRef // object to map popupRef\n    ,\n    google: google,\n    popupCustomComponent: popupCustomComponent,\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 47,\n      columnNumber: 7\n    }\n  }));\n};\n\nexport default LeafletCircleLayer;","map":{"version":3,"sources":["/Users/farhanansari/Desktop/CODE/PrxProject/untitled folder/reactStoryBook/src/components/atoms/Map/layers/LeafletCircleLayer.tsx"],"names":["React","Fragment","LeafletCircleEditLayer","LeafletCirclePlottingLayer","LeafletCircleLayer","circle","createShape","setCreateShape","editPopUpComponent","popupRef","google","onEdit","setFeatureGroupProps","popupCustomComponent","editLayer","createPermission","data"],"mappings":";;;AACA,OAAO,oCAAP;AACA,OAAO,0BAAP;AACA,OAAOA,KAAP,IAAgBC,QAAhB,QAAgC,OAAhC;AAGA,OAAOC,sBAAP,MAAmC,0BAAnC;AACA,OAAOC,0BAAP,MAAuC,yBAAvC;;AAgBA,IAAMC,kBAAkB,GAAG,SAArBA,kBAAqB,OAUA;AAAA,MATzBC,MASyB,QATzBA,MASyB;AAAA,MARzBC,WAQyB,QARzBA,WAQyB;AAAA,MAPzBC,cAOyB,QAPzBA,cAOyB;AAAA,MANzBC,kBAMyB,QANzBA,kBAMyB;AAAA,MALzBC,QAKyB,QALzBA,QAKyB;AAAA,MAJzBC,MAIyB,QAJzBA,MAIyB;AAAA,MAHzBC,MAGyB,QAHzBA,MAGyB;AAAA,MAFzBC,oBAEyB,QAFzBA,oBAEyB;AAAA,MADzBC,oBACyB,QADzBA,oBACyB;AACzB,sBACE,oBAAC,QAAD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KACG,CAAC,CAAAR,MAAM,SAAN,IAAAA,MAAM,WAAN,YAAAA,MAAM,CAAES,SAAR,KAAqBT,MAAM,CAACU,gBAA7B,kBACC,oBAAC,sBAAD;AACE,IAAA,QAAQ,EAAE,kBAACC,IAAD;AAAA,aAAeL,MAAM,IAAIA,MAAM,CAACK,IAAD,CAA/B;AAAA,KADZ;AAEE,IAAA,WAAW,EAAEV,WAFf;AAGE,IAAA,cAAc,EAAEC,cAHlB;AAIE,IAAA,kBAAkB,EAAEC,kBAJtB;AAKE,IAAA,MAAM,EAAEH,MALV;AAME,IAAA,oBAAoB,EAAEO,oBANxB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,IAFJ,eAWE,oBAAC,0BAAD;AACE,IAAA,MAAM,EAAEP,MADV;AAEE,IAAA,QAAQ,EAAEI,QAFZ,CAEsB;AAFtB;AAGE,IAAA,MAAM,EAAEC,MAHV;AAIE,IAAA,oBAAoB,EAAEG,oBAJxB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,IAXF,CADF;AAoBD,CA/BD;;AAiCA,eAAeT,kBAAf","sourcesContent":["import { GoogleAPI } from 'google-maps-react'\nimport 'leaflet-draw/dist/leaflet.draw.css'\nimport 'leaflet/dist/leaflet.css'\nimport React, { Fragment } from 'react'\nimport { FeatureGroup } from 'react-leaflet'\nimport { ICircle, IEditedData } from '../interfaces.d'\nimport LeafletCircleEditLayer from './LeafletCircleEditLayer'\nimport LeafletCirclePlottingLayer from './LeafletCirclePlotting'\n\nexport interface ILeafletCircleLayer extends ILeafletShapeLayer {\n  createShape: boolean\n  setCreateShape: (createShape: boolean) => void\n  editPopUpComponent?: ({ map }: any) => React.ReactNode\n  onEdit?: (data: IEditedData) => void\n  setFeatureGroupProps?: React.Dispatch<React.SetStateAction<FeatureGroup>>\n}\nexport interface ILeafletShapeLayer {\n  circle: ICircle\n  popupRef: any\n  google: GoogleAPI\n  popupCustomComponent: any\n}\n\nconst LeafletCircleLayer = ({\n  circle,\n  createShape,\n  setCreateShape,\n  editPopUpComponent,\n  popupRef,\n  google,\n  onEdit,\n  setFeatureGroupProps,\n  popupCustomComponent\n}: ILeafletCircleLayer) => {\n  return (\n    <Fragment>\n      {(circle?.editLayer || circle.createPermission) && (\n        <LeafletCircleEditLayer\n          onChange={(data: any) => onEdit && onEdit(data)}\n          createShape={createShape}\n          setCreateShape={setCreateShape}\n          editPopUpComponent={editPopUpComponent}\n          circle={circle}\n          setFeatureGroupProps={setFeatureGroupProps}\n        />\n      )}\n      <LeafletCirclePlottingLayer\n        circle={circle}\n        popupRef={popupRef} // object to map popupRef\n        google={google}\n        popupCustomComponent={popupCustomComponent}\n      />\n    </Fragment>\n  )\n}\n\nexport default LeafletCircleLayer\n"]},"metadata":{},"sourceType":"module"}