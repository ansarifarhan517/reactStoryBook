{"ast":null,"code":"import _objectSpread from \"/Users/farhanansari/Desktop/CODE/PrxProject/untitled folder/reactStoryBook/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/objectSpread2\";\nimport _slicedToArray from \"/Users/farhanansari/Desktop/CODE/PrxProject/untitled folder/reactStoryBook/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/slicedToArray\";\n\nvar _this = this,\n    _jsxFileName = \"/Users/farhanansari/Desktop/CODE/PrxProject/untitled folder/reactStoryBook/src/components/atoms/Map/SubComponent/Marker.tsx\";\n\nimport LL from 'leaflet';\nimport React, { Fragment, useEffect, useRef, useState } from 'react';\nimport { Marker, Tooltip, useLeaflet, FeatureGroup } from 'react-leaflet';\nimport MarkerClusterGroup from 'react-leaflet-markercluster';\nimport { StyledPopUp } from '../StyledMap';\nimport LeafletInfowindow from '../utils/LeafletInfowindow';\nimport throttle from '../../../../utilities/Throttle';\n\n// from given metadata or users data, if status is matching with legends status like checked,allowed then show cluster\nvar markerPermission = function markerPermission(metaData, legends, legendModel) {\n  var permission = false;\n  legends === null || legends === void 0 ? void 0 : legends.forEach(function (legend) {\n    var _legendModel$legend, _legendModel$legend2, _legendModel$legend3;\n\n    if ((legendModel === null || legendModel === void 0 ? void 0 : (_legendModel$legend = legendModel[legend]) === null || _legendModel$legend === void 0 ? void 0 : _legendModel$legend.checked) && (legendModel === null || legendModel === void 0 ? void 0 : (_legendModel$legend2 = legendModel[legend]) === null || _legendModel$legend2 === void 0 ? void 0 : _legendModel$legend2.allow) && (legendModel === null || legendModel === void 0 ? void 0 : (_legendModel$legend3 = legendModel[legend]) === null || _legendModel$legend3 === void 0 ? void 0 : _legendModel$legend3.allow(metaData))) {\n      permission = true;\n    }\n  });\n  return permission;\n}; // const htmlDecode = (input: string) => {\n//   var e = document.createElement('div')\n//   e.innerHTML = input\n//   return e.childNodes.length === 0 ? '' : e.childNodes[0].nodeValue\n// }\n\n\nvar MarkerComponent = function MarkerComponent(_ref) {\n  var entitiesMap = _ref.entitiesMap,\n      entities = _ref.entities,\n      legendModel = _ref.legendModel,\n      iconsRef = _ref.iconsRef,\n      popupRef = _ref.popupRef,\n      focusMarkerId = _ref.focusMarkerId,\n      focusSearchPlace = _ref.focusSearchPlace,\n      ignoreMarkerPermission = _ref.ignoreMarkerPermission;\n\n  var _useLeaflet = useLeaflet(),\n      map = _useLeaflet.map;\n\n  var featureGroupRef = React.useRef();\n  var featureHubGroupRef = React.useRef(); // mapping of the <entity>_<markerId> with the leaflet layer\n\n  var _useState = useState({}),\n      _useState2 = _slicedToArray(_useState, 2),\n      idLayerMapping = _useState2[0],\n      setIdLayerMapping = _useState2[1];\n\n  var newIdLayerMapping = useRef({});\n  var throttledSetLayer = throttle(function () {\n    console.log('The new Id layer mapping is - ', idLayerMapping);\n    setIdLayerMapping(newIdLayerMapping.current);\n  }, 2000);\n\n  var onMarkerAdd = function onMarkerAdd(entity, id, layer) {\n    newIdLayerMapping.current[entity + '__' + id] = layer;\n    throttledSetLayer();\n  };\n\n  var onFeatureGroupAdd = function onFeatureGroupAdd(entity, layer) {\n    var newIdLayerMapping = _objectSpread({}, idLayerMapping);\n\n    newIdLayerMapping[entity] = layer;\n    setIdLayerMapping(newIdLayerMapping); // console.log('The new Id layer mapping is - ', idLayerMapping)\n  };\n\n  var cluster = entities === null || entities === void 0 ? void 0 : entities.map(function (entity, index) {\n    var markerList = [];\n    var hubsList = []; //if entity is trip then separate markers from hubs\n\n    if (entity == 'trips') {\n      var _entitiesMap$entity, _entitiesMap$entity$m;\n\n      entitiesMap === null || entitiesMap === void 0 ? void 0 : (_entitiesMap$entity = entitiesMap[entity]) === null || _entitiesMap$entity === void 0 ? void 0 : (_entitiesMap$entity$m = _entitiesMap$entity.markers) === null || _entitiesMap$entity$m === void 0 ? void 0 : _entitiesMap$entity$m.list.forEach(function (marker) {\n        if (marker.entity == 'hub') {\n          hubsList.push(marker);\n        } else {\n          markerList.push(marker);\n        }\n      });\n    } else {\n      var _entitiesMap$entity2, _entitiesMap$entity2$;\n\n      markerList = entitiesMap === null || entitiesMap === void 0 ? void 0 : (_entitiesMap$entity2 = entitiesMap[entity]) === null || _entitiesMap$entity2 === void 0 ? void 0 : (_entitiesMap$entity2$ = _entitiesMap$entity2.markers) === null || _entitiesMap$entity2$ === void 0 ? void 0 : _entitiesMap$entity2$.list;\n    }\n\n    return (entitiesMap === null || entitiesMap === void 0 ? void 0 : entitiesMap[entity].permission) && /*#__PURE__*/React.createElement(React.Fragment, {\n      __self: _this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 95,\n        columnNumber: 9\n      }\n    }, /*#__PURE__*/React.createElement(FeatureGroup, {\n      key: entity + '_' + index,\n      ref: featureGroupRef,\n      __self: _this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 96,\n        columnNumber: 11\n      }\n    }, /*#__PURE__*/React.createElement(MarkerClusterGroup, {\n      key: entity,\n      spiderfyOnMaxZoom: true,\n      onAdd: function onAdd(e) {\n        console.log('Added marker cluster group', e);\n        return onFeatureGroupAdd(entity, e === null || e === void 0 ? void 0 : e.target);\n      },\n      showCoverageOnHover: false,\n      zoomToBoundsOnClick: true,\n      removeOutsideVisibleBounds: true,\n      maxClusterRadius: markerList.length > 100 ? 100 : 30,\n      chunkedLoading: true,\n      chunkDelay: 500,\n      __self: _this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 97,\n        columnNumber: 13\n      }\n    }, markerList.map(function (marker) {\n      var _entitiesMap$entity3, _entitiesMap$entity3$, _entitiesMap$entity3$2, _entitiesMap$entity4;\n\n      if (markerPermission(entitiesMap === null || entitiesMap === void 0 ? void 0 : (_entitiesMap$entity3 = entitiesMap[entity]) === null || _entitiesMap$entity3 === void 0 ? void 0 : (_entitiesMap$entity3$ = _entitiesMap$entity3.markers) === null || _entitiesMap$entity3$ === void 0 ? void 0 : (_entitiesMap$entity3$2 = _entitiesMap$entity3$.metaData) === null || _entitiesMap$entity3$2 === void 0 ? void 0 : _entitiesMap$entity3$2[marker.id], entitiesMap === null || entitiesMap === void 0 ? void 0 : (_entitiesMap$entity4 = entitiesMap[entity]) === null || _entitiesMap$entity4 === void 0 ? void 0 : _entitiesMap$entity4.legends, legendModel) || ignoreMarkerPermission) {\n        var _entitiesMap$entity5, _entitiesMap$entity5$, _entitiesMap$entity5$2, _entitiesMap$entity5$3, _entitiesMap$entity6, _entitiesMap$entity6$, _entitiesMap$entity6$2, _entitiesMap$entity6$3, _entitiesMap$entity7, _entitiesMap$entity7$, _entitiesMap$entity7$2, _entitiesMap$entity7$3, _entitiesMap$entity8, _entitiesMap$entity8$, _entitiesMap$entity8$2, _entitiesMap$entity8$3, _entitiesMap$entity9, _entitiesMap$entity9$, _entitiesMap$entity9$2;\n\n        var customIcon = marker.icon ? new LL.DivIcon(_objectSpread({}, marker.icon)) : new LL.DivIcon(iconsRef === null || iconsRef === void 0 ? void 0 : iconsRef[marker.iconRef]);\n        return (\n          /*#__PURE__*/\n          // The actual marker which is being rendered\n          React.createElement(Marker, {\n            key: marker.id,\n            id: marker.id,\n            onClick: function onClick() {\n              return map === null || map === void 0 ? void 0 : map.doubleClickZoom.disable();\n            },\n            onAdd: function onAdd(e) {\n              return onMarkerAdd(entity, marker.id, e === null || e === void 0 ? void 0 : e.target);\n            },\n            position: marker.position,\n            icon: customIcon,\n            __self: _this,\n            __source: {\n              fileName: _jsxFileName,\n              lineNumber: 129,\n              columnNumber: 21\n            }\n          }, /*#__PURE__*/React.createElement(Tooltip, {\n            sticky: true,\n            direction: \"auto\",\n            __self: _this,\n            __source: {\n              fileName: _jsxFileName,\n              lineNumber: 140,\n              columnNumber: 23\n            }\n          }, /*#__PURE__*/React.createElement(\"span\", {\n            __self: _this,\n            __source: {\n              fileName: _jsxFileName,\n              lineNumber: 141,\n              columnNumber: 25\n            }\n          }, (entitiesMap === null || entitiesMap === void 0 ? void 0 : (_entitiesMap$entity5 = entitiesMap[entity]) === null || _entitiesMap$entity5 === void 0 ? void 0 : (_entitiesMap$entity5$ = _entitiesMap$entity5.markers) === null || _entitiesMap$entity5$ === void 0 ? void 0 : (_entitiesMap$entity5$2 = _entitiesMap$entity5$.metaData) === null || _entitiesMap$entity5$2 === void 0 ? void 0 : (_entitiesMap$entity5$3 = _entitiesMap$entity5$2[marker.id]) === null || _entitiesMap$entity5$3 === void 0 ? void 0 : _entitiesMap$entity5$3.title) ? entitiesMap === null || entitiesMap === void 0 ? void 0 : (_entitiesMap$entity6 = entitiesMap[entity]) === null || _entitiesMap$entity6 === void 0 ? void 0 : (_entitiesMap$entity6$ = _entitiesMap$entity6.markers) === null || _entitiesMap$entity6$ === void 0 ? void 0 : (_entitiesMap$entity6$2 = _entitiesMap$entity6$.metaData) === null || _entitiesMap$entity6$2 === void 0 ? void 0 : (_entitiesMap$entity6$3 = _entitiesMap$entity6$2[marker.id]) === null || _entitiesMap$entity6$3 === void 0 ? void 0 : _entitiesMap$entity6$3.title : marker.title)), popupRef && marker.popupRef && /*#__PURE__*/React.createElement(StyledPopUp, {\n            keepInView: true,\n            onOpen: function onOpen() {\n              map === null || map === void 0 ? void 0 : map.panTo(marker.position);\n            },\n            __self: _this,\n            __source: {\n              fileName: _jsxFileName,\n              lineNumber: 153,\n              columnNumber: 25\n            }\n          }, /*#__PURE__*/React.createElement(LeafletInfowindow, {\n            structures: popupRef,\n            popupRef: marker.popupRef,\n            google: google,\n            latlngObj: {\n              lat: parseFloat(entitiesMap === null || entitiesMap === void 0 ? void 0 : (_entitiesMap$entity7 = entitiesMap[entity]) === null || _entitiesMap$entity7 === void 0 ? void 0 : (_entitiesMap$entity7$ = _entitiesMap$entity7.markers) === null || _entitiesMap$entity7$ === void 0 ? void 0 : (_entitiesMap$entity7$2 = _entitiesMap$entity7$.metaData) === null || _entitiesMap$entity7$2 === void 0 ? void 0 : (_entitiesMap$entity7$3 = _entitiesMap$entity7$2[marker.id]) === null || _entitiesMap$entity7$3 === void 0 ? void 0 : _entitiesMap$entity7$3.lat),\n              lng: parseFloat(entitiesMap === null || entitiesMap === void 0 ? void 0 : (_entitiesMap$entity8 = entitiesMap[entity]) === null || _entitiesMap$entity8 === void 0 ? void 0 : (_entitiesMap$entity8$ = _entitiesMap$entity8.markers) === null || _entitiesMap$entity8$ === void 0 ? void 0 : (_entitiesMap$entity8$2 = _entitiesMap$entity8$.metaData) === null || _entitiesMap$entity8$2 === void 0 ? void 0 : (_entitiesMap$entity8$3 = _entitiesMap$entity8$2[marker.id]) === null || _entitiesMap$entity8$3 === void 0 ? void 0 : _entitiesMap$entity8$3.lng)\n            },\n            data: entitiesMap === null || entitiesMap === void 0 ? void 0 : (_entitiesMap$entity9 = entitiesMap[entity]) === null || _entitiesMap$entity9 === void 0 ? void 0 : (_entitiesMap$entity9$ = _entitiesMap$entity9.markers) === null || _entitiesMap$entity9$ === void 0 ? void 0 : (_entitiesMap$entity9$2 = _entitiesMap$entity9$.metaData) === null || _entitiesMap$entity9$2 === void 0 ? void 0 : _entitiesMap$entity9$2[marker.id],\n            __self: _this,\n            __source: {\n              fileName: _jsxFileName,\n              lineNumber: 159,\n              columnNumber: 27\n            }\n          })))\n        );\n      } else {\n        return null;\n      }\n    }))), entity == 'trips' && hubsList.length && /*#__PURE__*/React.createElement(FeatureGroup, {\n      key: entity + '_hub_' + index,\n      ref: featureHubGroupRef,\n      __self: _this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 193,\n        columnNumber: 13\n      }\n    }, hubsList.map(function (marker) {\n      var _entitiesMap$entity10, _entitiesMap$entity11, _entitiesMap$entity12, _entitiesMap$entity13;\n\n      if (markerPermission(entitiesMap === null || entitiesMap === void 0 ? void 0 : (_entitiesMap$entity10 = entitiesMap[entity]) === null || _entitiesMap$entity10 === void 0 ? void 0 : (_entitiesMap$entity11 = _entitiesMap$entity10.markers) === null || _entitiesMap$entity11 === void 0 ? void 0 : (_entitiesMap$entity12 = _entitiesMap$entity11.metaData) === null || _entitiesMap$entity12 === void 0 ? void 0 : _entitiesMap$entity12[marker.id], entitiesMap === null || entitiesMap === void 0 ? void 0 : (_entitiesMap$entity13 = entitiesMap[entity]) === null || _entitiesMap$entity13 === void 0 ? void 0 : _entitiesMap$entity13.legends, legendModel) || ignoreMarkerPermission) {\n        var customIcon = marker.icon ? new LL.DivIcon(_objectSpread({}, marker.icon)) : new LL.DivIcon(iconsRef === null || iconsRef === void 0 ? void 0 : iconsRef[marker.iconRef]);\n        return (\n          /*#__PURE__*/\n          // The actual marker which is being rendered\n          React.createElement(Marker, {\n            key: marker.id,\n            id: marker.id,\n            onClick: function onClick() {\n              return map === null || map === void 0 ? void 0 : map.doubleClickZoom.disable();\n            } // onAdd={(e: any) =>\n            //   onMarkerAdd(entity, marker.id, e?.target)\n            // }\n            ,\n            position: marker.position,\n            icon: customIcon,\n            __self: _this,\n            __source: {\n              fileName: _jsxFileName,\n              lineNumber: 214,\n              columnNumber: 21\n            }\n          }, /*#__PURE__*/React.createElement(Tooltip, {\n            sticky: true,\n            direction: \"auto\",\n            __self: _this,\n            __source: {\n              fileName: _jsxFileName,\n              lineNumber: 225,\n              columnNumber: 23\n            }\n          }, /*#__PURE__*/React.createElement(\"span\", {\n            __self: _this,\n            __source: {\n              fileName: _jsxFileName,\n              lineNumber: 226,\n              columnNumber: 25\n            }\n          }, marker.title)))\n        );\n      } else {\n        return null;\n      }\n    })));\n  });\n\n  var zoomToAllMarkers = function zoomToAllMarkers() {\n    var newMapBounds = featureGroupRef.current.leafletElement.getBounds();\n\n    if (map && newMapBounds && Object.keys(newMapBounds).length) {\n      var _featureGroupRef$curr;\n\n      map.fitBounds(featureGroupRef === null || featureGroupRef === void 0 ? void 0 : (_featureGroupRef$curr = featureGroupRef.current) === null || _featureGroupRef$curr === void 0 ? void 0 : _featureGroupRef$curr.leafletElement.getBounds(), {\n        maxZoom: 14,\n        duration: 0.5,\n        padding: LL.point(100, 100),\n        animate: true\n      });\n    }\n  };\n\n  useEffect(function () {\n    var _featureGroupRef$curr2;\n\n    // fly the map to all the marker bounds in the map\n    if (map && (featureGroupRef === null || featureGroupRef === void 0 ? void 0 : (_featureGroupRef$curr2 = featureGroupRef.current) === null || _featureGroupRef$curr2 === void 0 ? void 0 : _featureGroupRef$curr2.leafletElement) && !focusSearchPlace) {\n      if (focusMarkerId && idLayerMapping && idLayerMapping[focusMarkerId]) {\n        var entityLayer = focusMarkerId.split('__')[0] && idLayerMapping[focusMarkerId.split('__')[0]];\n        var markerLayer = idLayerMapping[focusMarkerId];\n\n        if (entityLayer && markerLayer && map.hasLayer(markerLayer)) {\n          entityLayer.zoomToShowLayer(markerLayer, function () {\n            markerLayer.fireEvent('click').fireEvent('mouseout');\n          });\n        } else {\n          zoomToAllMarkers();\n        }\n      } else {\n        // in the default state, pan to the full layer containing all the markers\n        zoomToAllMarkers();\n      }\n    }\n  }, [entities, legendModel, focusMarkerId, focusSearchPlace]);\n  return /*#__PURE__*/React.createElement(Fragment, {\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 277,\n      columnNumber: 10\n    }\n  }, cluster);\n};\n\nexport default React.memo(MarkerComponent);","map":{"version":3,"sources":["/Users/farhanansari/Desktop/CODE/PrxProject/untitled folder/reactStoryBook/src/components/atoms/Map/SubComponent/Marker.tsx"],"names":["LL","React","Fragment","useEffect","useRef","useState","Marker","Tooltip","useLeaflet","FeatureGroup","MarkerClusterGroup","StyledPopUp","LeafletInfowindow","throttle","markerPermission","metaData","legends","legendModel","permission","forEach","legend","checked","allow","MarkerComponent","entitiesMap","entities","iconsRef","popupRef","focusMarkerId","focusSearchPlace","ignoreMarkerPermission","map","featureGroupRef","featureHubGroupRef","idLayerMapping","setIdLayerMapping","newIdLayerMapping","throttledSetLayer","console","log","current","onMarkerAdd","entity","id","layer","onFeatureGroupAdd","cluster","index","markerList","hubsList","markers","list","marker","push","e","target","length","customIcon","icon","DivIcon","iconRef","doubleClickZoom","disable","position","title","panTo","google","lat","parseFloat","lng","zoomToAllMarkers","newMapBounds","leafletElement","getBounds","Object","keys","fitBounds","maxZoom","duration","padding","point","animate","entityLayer","split","markerLayer","hasLayer","zoomToShowLayer","fireEvent","memo"],"mappings":"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","sourcesContent":["import LL from 'leaflet'\nimport React, { Fragment, useEffect, useRef, useState } from 'react'\nimport { Marker, Tooltip, useLeaflet, FeatureGroup } from 'react-leaflet'\nimport MarkerClusterGroup from 'react-leaflet-markercluster'\nimport { IEntity } from '../interfaces.d'\nimport { StyledPopUp } from '../StyledMap'\nimport LeafletInfowindow from '../utils/LeafletInfowindow'\nimport throttle from '../../../../utilities/Throttle'\n\ninterface IMarker {\n  entitiesMap: { [name: string]: IEntity }\n  entities: string[]\n  legendModel: any\n  popupRef?: any\n  iconsRef: any\n  google: any\n  focusMarkerId?: string\n  geocoding: any\n  focusSearchPlace: boolean\n  ignoreMarkerPermission?: boolean\n}\n// from given metadata or users data, if status is matching with legends status like checked,allowed then show cluster\nconst markerPermission = (metaData: any, legends: any, legendModel: any) => {\n  let permission = false\n  legends?.forEach((legend: any) => {\n    if (\n      legendModel?.[legend]?.checked &&\n      legendModel?.[legend]?.allow &&\n      legendModel?.[legend]?.allow(metaData)\n    ) {\n      permission = true\n    }\n  })\n  return permission\n}\n\n// const htmlDecode = (input: string) => {\n//   var e = document.createElement('div')\n//   e.innerHTML = input\n//   return e.childNodes.length === 0 ? '' : e.childNodes[0].nodeValue\n// }\n\nconst MarkerComponent = ({\n  entitiesMap,\n  entities,\n  legendModel,\n  iconsRef,\n  popupRef,\n  focusMarkerId,\n  focusSearchPlace,\n  ignoreMarkerPermission\n}: IMarker) => {\n  const { map } = useLeaflet()\n\n  const featureGroupRef = React.useRef<any>()\n  const featureHubGroupRef = React.useRef<any>()\n\n  // mapping of the <entity>_<markerId> with the leaflet layer\n  const [idLayerMapping, setIdLayerMapping] = useState<any>({})\n  const newIdLayerMapping = useRef<any>({})\n  const throttledSetLayer = throttle(() => {\n    console.log('The new Id layer mapping is - ', idLayerMapping)\n    setIdLayerMapping(newIdLayerMapping.current)\n  }, 2000)\n  const onMarkerAdd = (entity: string, id: string, layer: any) => {\n    newIdLayerMapping.current[entity + '__' + id] = layer\n    throttledSetLayer()\n  }\n\n  const onFeatureGroupAdd = (entity: string, layer: any) => {\n    const newIdLayerMapping = { ...idLayerMapping }\n    newIdLayerMapping[entity] = layer\n    setIdLayerMapping(newIdLayerMapping)\n    // console.log('The new Id layer mapping is - ', idLayerMapping)\n  }\n\n  const cluster = entities?.map((entity: string, index: number) => {\n    let markerList: any[] = []\n    let hubsList: any[] = []\n    //if entity is trip then separate markers from hubs\n    if (entity == 'trips') {\n      entitiesMap?.[entity]?.markers?.list.forEach((marker: any) => {\n        if (marker.entity == 'hub') {\n          hubsList.push(marker)\n        } else {\n          markerList.push(marker)\n        }\n      })\n    } else {\n      markerList = entitiesMap?.[entity]?.markers?.list\n    }\n\n    return (\n      entitiesMap?.[entity].permission && (\n        <React.Fragment>\n          <FeatureGroup key={entity + '_' + index} ref={featureGroupRef as any}>\n            <MarkerClusterGroup\n              key={entity}\n              spiderfyOnMaxZoom\n              onAdd={(e: any) => {\n                console.log('Added marker cluster group', e)\n                return onFeatureGroupAdd(entity, e?.target)\n              }}\n              showCoverageOnHover={false}\n              zoomToBoundsOnClick\n              removeOutsideVisibleBounds\n              maxClusterRadius={markerList.length > 100 ? 100 : 30}\n              chunkedLoading\n              chunkDelay={500}\n            >\n              {markerList.map((marker: any) => {\n                if (\n                  markerPermission(\n                    entitiesMap?.[entity]?.markers?.metaData?.[marker.id],\n                    entitiesMap?.[entity]?.legends,\n                    legendModel\n                  ) ||\n                  ignoreMarkerPermission\n                ) {\n                  const customIcon = marker.icon\n                    ? new LL.DivIcon({\n                        ...marker.icon\n                        // ,html: htmlDecode(marker.icon.html)\n                      })\n                    : new LL.DivIcon(iconsRef?.[marker.iconRef])\n\n                  return (\n                    // The actual marker which is being rendered\n                    <Marker\n                      key={marker.id}\n                      id={marker.id}\n                      onClick={() => map?.doubleClickZoom.disable()}\n                      onAdd={(e: any) =>\n                        onMarkerAdd(entity, marker.id, e?.target)\n                      }\n                      position={marker.position}\n                      icon={customIcon}\n                    >\n                      {/* Tooltip which shows on marker hover */}\n                      <Tooltip sticky direction='auto'>\n                        <span>\n                          {entitiesMap?.[entity]?.markers?.metaData?.[marker.id]\n                            ?.title\n                            ? entitiesMap?.[entity]?.markers?.metaData?.[\n                                marker.id\n                              ]?.title\n                            : marker.title}\n                        </span>\n                      </Tooltip>\n\n                      {/* Popup which opens up on marker click */}\n                      {popupRef && marker.popupRef && (\n                        <StyledPopUp\n                          keepInView\n                          onOpen={() => {\n                            map?.panTo(marker.position)\n                          }}\n                        >\n                          <LeafletInfowindow\n                            structures={popupRef}\n                            popupRef={marker.popupRef}\n                            google={google}\n                            latlngObj={{\n                              lat: parseFloat(\n                                entitiesMap?.[entity]?.markers?.metaData?.[\n                                  marker.id\n                                ]?.lat\n                              ),\n                              lng: parseFloat(\n                                entitiesMap?.[entity]?.markers?.metaData?.[\n                                  marker.id\n                                ]?.lng\n                              )\n                            }}\n                            data={\n                              entitiesMap?.[entity]?.markers?.metaData?.[\n                                marker.id\n                              ]\n                            }\n                          />\n                        </StyledPopUp>\n                      )}\n                    </Marker>\n                  )\n                } else {\n                  return null\n                }\n              })}\n            </MarkerClusterGroup>\n          </FeatureGroup>\n\n          {entity == 'trips' && hubsList.length && (\n            <FeatureGroup\n              key={entity + '_hub_' + index}\n              ref={featureHubGroupRef as any}\n            >\n              {hubsList.map((marker: any) => {\n                if (\n                  markerPermission(\n                    entitiesMap?.[entity]?.markers?.metaData?.[marker.id],\n                    entitiesMap?.[entity]?.legends,\n                    legendModel\n                  ) ||\n                  ignoreMarkerPermission\n                ) {\n                  const customIcon = marker.icon\n                    ? new LL.DivIcon({\n                        ...marker.icon\n                        // ,html: htmlDecode(marker.icon.html)\n                      })\n                    : new LL.DivIcon(iconsRef?.[marker.iconRef])\n                  return (\n                    // The actual marker which is being rendered\n                    <Marker\n                      key={marker.id}\n                      id={marker.id}\n                      onClick={() => map?.doubleClickZoom.disable()}\n                      // onAdd={(e: any) =>\n                      //   onMarkerAdd(entity, marker.id, e?.target)\n                      // }\n                      position={marker.position}\n                      icon={customIcon}\n                    >\n                      {/* Tooltip which shows on marker hover */}\n                      <Tooltip sticky direction='auto'>\n                        <span>{marker.title}</span>\n                      </Tooltip>\n                    </Marker>\n                  )\n                } else {\n                  return null\n                }\n              })}\n            </FeatureGroup>\n          )}\n        </React.Fragment>\n      )\n    )\n  })\n\n  const zoomToAllMarkers = () => {\n    const newMapBounds = featureGroupRef.current.leafletElement.getBounds()\n    if (map && newMapBounds && Object.keys(newMapBounds).length) {\n      map.fitBounds(featureGroupRef?.current?.leafletElement.getBounds(), {\n        maxZoom: 14,\n        duration: 0.5,\n        padding: LL.point(100, 100),\n        animate: true\n      })\n    }\n  }\n\n  useEffect(() => {\n    // fly the map to all the marker bounds in the map\n    if (map && featureGroupRef?.current?.leafletElement && !focusSearchPlace) {\n      if (focusMarkerId && idLayerMapping && idLayerMapping[focusMarkerId]) {\n        const entityLayer =\n          focusMarkerId.split('__')[0] &&\n          idLayerMapping[focusMarkerId.split('__')[0]]\n\n        const markerLayer = idLayerMapping[focusMarkerId]\n\n        if (entityLayer && markerLayer && map.hasLayer(markerLayer)) {\n          entityLayer.zoomToShowLayer(markerLayer, function () {\n            markerLayer.fireEvent('click').fireEvent('mouseout')\n          })\n        } else {\n          zoomToAllMarkers()\n        }\n      } else {\n        // in the default state, pan to the full layer containing all the markers\n        zoomToAllMarkers()\n      }\n    }\n  }, [entities, legendModel, focusMarkerId, focusSearchPlace])\n\n  return <Fragment>{cluster}</Fragment>\n}\n\nexport default React.memo(MarkerComponent)\n"]},"metadata":{},"sourceType":"module"}