{"ast":null,"code":"var _this = this,\n    _jsxFileName = \"/Users/farhanansari/Code/ui-library/src/components/organisms/ListView/utils/components/PaginationWrapper.tsx\";\n\nimport React, { useCallback } from 'react';\nimport PaginationBar from '../../../../molecules/PaginationBar';\nimport Box from '../../../../atoms/Box'; // const pageSizeList = [25, 50, 100, 200]\n\nvar defaultCallback = function defaultCallback(_) {};\n\nvar PaginationWrapper = function PaginationWrapper(_ref) {\n  var instance = _ref.instance,\n      _ref$totalRows = _ref.totalRows,\n      totalRows = _ref$totalRows === void 0 ? 0 : _ref$totalRows,\n      _ref$isTotalCountLoad = _ref.isTotalCountLoading,\n      isTotalCountLoading = _ref$isTotalCountLoad === void 0 ? false : _ref$isTotalCountLoad,\n      _ref$moreResultsExist = _ref.moreResultsExists,\n      moreResultsExists = _ref$moreResultsExist === void 0 ? false : _ref$moreResultsExist,\n      _ref$disableNext = _ref.disableNext,\n      disableNext = _ref$disableNext === void 0 ? false : _ref$disableNext,\n      _ref$BEDependentPagin = _ref.BEDependentPagination,\n      BEDependentPagination = _ref$BEDependentPagin === void 0 ? false : _ref$BEDependentPagin,\n      _ref$onPageChange = _ref.onPageChange,\n      onPageChange = _ref$onPageChange === void 0 ? defaultCallback : _ref$onPageChange,\n      _ref$loading = _ref.loading,\n      loading = _ref$loading === void 0 ? false : _ref$loading;\n  var _instance$state = instance.state,\n      pageIndex = _instance$state.pageIndex,\n      pageSize = _instance$state.pageSize,\n      gotoPage = instance.gotoPage,\n      setPageSize = instance.setPageSize;\n  var handleChangePage = useCallback(function (newPage) {\n    gotoPage(newPage);\n    setTimeout(function () {\n      onPageChange(newPage + 1, pageSize);\n    }, 0); // if (newPage === pageIndex + 1) {\n    //   console.log('next')\n    //   nextPage()\n    // } else if (newPage === pageIndex - 1) {\n    //   previousPage()\n    // } else {\n    //   gotoPage(newPage)\n    // }\n  }, [gotoPage]);\n  var handleChangeRowsPerPage = useCallback(function (value) {\n    setPageSize(value);\n    gotoPage(0);\n    setTimeout(function () {\n      onPageChange(1, value);\n    }, 0);\n  }, [setPageSize]);\n  return /*#__PURE__*/React.createElement(Box, {\n    mr: \"7px\",\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 70,\n      columnNumber: 5\n    }\n  }, /*#__PURE__*/React.createElement(PaginationBar, {\n    pageSize: pageSize,\n    pageNumber: pageIndex + 1,\n    isTotalCountLoading: isTotalCountLoading,\n    totalRows: totalRows,\n    onPageChange: handleChangePage,\n    onPageSizeChange: handleChangeRowsPerPage,\n    moreResultsExists: moreResultsExists,\n    disableNext: disableNext,\n    BEDependentPagination: BEDependentPagination,\n    loading: loading,\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 71,\n      columnNumber: 7\n    }\n  }));\n};\n\nPaginationWrapper.__docgenInfo = {\n  \"description\": \"\",\n  \"methods\": [],\n  \"displayName\": \"PaginationWrapper\",\n  \"props\": {\n    \"totalRows\": {\n      \"defaultValue\": {\n        \"value\": \"0\",\n        \"computed\": false\n      },\n      \"required\": false\n    },\n    \"isTotalCountLoading\": {\n      \"defaultValue\": {\n        \"value\": \"false\",\n        \"computed\": false\n      },\n      \"required\": false\n    },\n    \"moreResultsExists\": {\n      \"defaultValue\": {\n        \"value\": \"false\",\n        \"computed\": false\n      },\n      \"required\": false\n    },\n    \"disableNext\": {\n      \"defaultValue\": {\n        \"value\": \"false\",\n        \"computed\": false\n      },\n      \"required\": false\n    },\n    \"BEDependentPagination\": {\n      \"defaultValue\": {\n        \"value\": \"false\",\n        \"computed\": false\n      },\n      \"required\": false\n    },\n    \"onPageChange\": {\n      \"defaultValue\": {\n        \"value\": \"(_: number) => {}\",\n        \"computed\": false\n      },\n      \"required\": false\n    },\n    \"loading\": {\n      \"defaultValue\": {\n        \"value\": \"false\",\n        \"computed\": false\n      },\n      \"required\": false\n    }\n  }\n};\nexport default PaginationWrapper;\n\nif (typeof STORYBOOK_REACT_CLASSES !== \"undefined\") {\n  STORYBOOK_REACT_CLASSES[\"src/components/organisms/ListView/utils/components/PaginationWrapper.tsx\"] = {\n    name: \"PaginationWrapper\",\n    docgenInfo: PaginationWrapper.__docgenInfo,\n    path: \"src/components/organisms/ListView/utils/components/PaginationWrapper.tsx\"\n  };\n}","map":{"version":3,"sources":["/Users/farhanansari/Code/ui-library/src/components/organisms/ListView/utils/components/PaginationWrapper.tsx"],"names":["React","useCallback","PaginationBar","Box","defaultCallback","_","PaginationWrapper","instance","totalRows","isTotalCountLoading","moreResultsExists","disableNext","BEDependentPagination","onPageChange","loading","state","pageIndex","pageSize","gotoPage","setPageSize","handleChangePage","newPage","setTimeout","handleChangeRowsPerPage","value"],"mappings":";;;AAAA,OAAOA,KAAP,IAAmCC,WAAnC,QAAsD,OAAtD;AAEA,OAAOC,aAAP,MAA0B,qCAA1B;AAEA,OAAOC,GAAP,MAAgB,uBAAhB,C,CACA;;AAaA,IAAMC,eAAe,GAAG,SAAlBA,eAAkB,CAACC,CAAD,EAAe,CAAE,CAAzC;;AACA,IAAMC,iBAAiB,GAAG,SAApBA,iBAAoB,OASiB;AAAA,MARzCC,QAQyC,QARzCA,QAQyC;AAAA,4BAPzCC,SAOyC;AAAA,MAPzCA,SAOyC,+BAP7B,CAO6B;AAAA,mCANzCC,mBAMyC;AAAA,MANzCA,mBAMyC,sCANrB,KAMqB;AAAA,mCALzCC,iBAKyC;AAAA,MALzCA,iBAKyC,sCALtB,KAKsB;AAAA,8BAJzCC,WAIyC;AAAA,MAJzCA,WAIyC,iCAJ3B,KAI2B;AAAA,mCAHzCC,qBAGyC;AAAA,MAHzCA,qBAGyC,sCAHjB,KAGiB;AAAA,+BAFzCC,YAEyC;AAAA,MAFzCA,YAEyC,kCAF1BT,eAE0B;AAAA,0BADzCU,OACyC;AAAA,MADzCA,OACyC,6BAD/B,KAC+B;AAAA,wBASrCP,QATqC,CAEvCQ,KAFuC;AAAA,MAE9BC,SAF8B,mBAE9BA,SAF8B;AAAA,MAEnBC,QAFmB,mBAEnBA,QAFmB;AAAA,MAOvCC,QAPuC,GASrCX,QATqC,CAOvCW,QAPuC;AAAA,MAQvCC,WARuC,GASrCZ,QATqC,CAQvCY,WARuC;AAWzC,MAAMC,gBAAgB,GAAGnB,WAAW,CAClC,UAACoB,OAAD,EAAqB;AACnBH,IAAAA,QAAQ,CAACG,OAAD,CAAR;AACAC,IAAAA,UAAU,CAAC,YAAM;AACfT,MAAAA,YAAY,CAACQ,OAAO,GAAG,CAAX,EAAcJ,QAAd,CAAZ;AACD,KAFS,EAEP,CAFO,CAAV,CAFmB,CAKnB;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACD,GAdiC,EAelC,CAACC,QAAD,CAfkC,CAApC;AAkBA,MAAMK,uBAAuB,GAAGtB,WAAW,CACzC,UAACuB,KAAD,EAAW;AACTL,IAAAA,WAAW,CAACK,KAAD,CAAX;AACAN,IAAAA,QAAQ,CAAC,CAAD,CAAR;AACAI,IAAAA,UAAU,CAAC,YAAM;AACfT,MAAAA,YAAY,CAAC,CAAD,EAAIW,KAAJ,CAAZ;AACD,KAFS,EAEP,CAFO,CAAV;AAGD,GAPwC,EAQzC,CAACL,WAAD,CARyC,CAA3C;AAWA,sBACE,oBAAC,GAAD;AAAK,IAAA,EAAE,EAAC,KAAR;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,kBACE,oBAAC,aAAD;AACE,IAAA,QAAQ,EAAEF,QADZ;AAEE,IAAA,UAAU,EAAED,SAAS,GAAG,CAF1B;AAGE,IAAA,mBAAmB,EAAEP,mBAHvB;AAIE,IAAA,SAAS,EAAED,SAJb;AAKE,IAAA,YAAY,EAAEY,gBALhB;AAME,IAAA,gBAAgB,EAAEG,uBANpB;AAOE,IAAA,iBAAiB,EAAGb,iBAPtB;AAQE,IAAA,WAAW,EAAEC,WARf;AASE,IAAA,qBAAqB,EAAEC,qBATzB;AAUE,IAAA,OAAO,EAAEE,OAVX;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,IADF,CADF;AAgBD,CAjED;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;AAmEA,eAAeR,iBAAf","sourcesContent":["import React, { PropsWithChildren, useCallback } from 'react'\nimport { TableInstance } from 'react-table'\nimport PaginationBar from '../../../../molecules/PaginationBar'\nimport { IListViewRow } from '../../interfaces'\nimport Box from '../../../../atoms/Box'\n// const pageSizeList = [25, 50, 100, 200]\n\ninterface IPaginationProps {\n  instance: TableInstance<IListViewRow>\n  totalRows: number\n  isTotalCountLoading:boolean,\n  disableNext?: boolean,\n  moreResultsExists:boolean,\n  onPageChange?: (pageNumber: number, pageSize: number) => void,\n  loading?:boolean,\n  BEDependentPagination?: boolean\n}\n\nconst defaultCallback = (_: number) => {}\nconst PaginationWrapper = ({\n  instance,\n  totalRows = 0,\n  isTotalCountLoading=false,\n  moreResultsExists= false,\n  disableNext = false,\n  BEDependentPagination = false,\n  onPageChange = defaultCallback,\n  loading = false\n}: PropsWithChildren<IPaginationProps>) => {\n  const {\n    state: { pageIndex, pageSize },\n    // rows,\n    // pageCount,\n    // canPreviousPage,\n    // canNextPage,\n    gotoPage,\n    setPageSize\n  } = instance\n\n  const handleChangePage = useCallback(\n    (newPage: number) => {\n      gotoPage(newPage)\n      setTimeout(() => {\n        onPageChange(newPage + 1, pageSize)\n      }, 0)\n      // if (newPage === pageIndex + 1) {\n      //   console.log('next')\n      //   nextPage()\n      // } else if (newPage === pageIndex - 1) {\n      //   previousPage()\n      // } else {\n      //   gotoPage(newPage)\n      // }\n    },\n    [gotoPage]\n  )\n\n  const handleChangeRowsPerPage = useCallback(\n    (value) => {\n      setPageSize(value)\n      gotoPage(0)\n      setTimeout(() => {\n        onPageChange(1, value)\n      }, 0)\n    },\n    [setPageSize]\n  )\n\n  return (\n    <Box mr='7px'>\n      <PaginationBar\n        pageSize={pageSize}\n        pageNumber={pageIndex + 1}\n        isTotalCountLoading={isTotalCountLoading}\n        totalRows={totalRows}\n        onPageChange={handleChangePage}\n        onPageSizeChange={handleChangeRowsPerPage}\n        moreResultsExists ={moreResultsExists}\n        disableNext={disableNext}\n        BEDependentPagination={BEDependentPagination}\n        loading={loading}\n      />\n    </Box>\n  )\n}\n\nexport default PaginationWrapper\n"]},"metadata":{},"sourceType":"module"}