{"ast":null,"code":"var _this = this,\n    _jsxFileName = \"/Users/farhanansari/Code/ui-library/src/components/molecules/DropDown/Variants/InlineDashedDropdown.tsx\";\n\nimport React from 'react';\nimport Select, { components } from 'react-select';\nimport { Option } from '../CustomComponent';\nimport { InlineDashedStyled } from '../Styles';\nimport Position from '../../Position';\nimport FontIcon from '../../../atoms/FontIcon';\n\nvar InlineDashedDropdown = function InlineDashedDropdown(_ref) {\n  var defaultProps = _ref.defaultProps;\n  var options = defaultProps.options,\n      value = defaultProps.value,\n      isLoading = defaultProps.isLoading,\n      placeholder = defaultProps.placeholder,\n      onInputChange = defaultProps.onInputChange,\n      _onChange = defaultProps.onChange,\n      onFocus = defaultProps.onFocus,\n      isSearchable = defaultProps.isSearchable,\n      disabled = defaultProps.disabled;\n  return /*#__PURE__*/React.createElement(Position, {\n    type: \"relative\",\n    mt: \"-0.25em\",\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 27,\n      columnNumber: 5\n    }\n  }, /*#__PURE__*/React.createElement(Select, {\n    components: {\n      IndicatorSeparator: function IndicatorSeparator() {\n        return null;\n      },\n      DropdownIndicator: function DropdownIndicator(props) {\n        return /*#__PURE__*/React.createElement(components.DropdownIndicator, Object.assign({}, props, {\n          __self: _this,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 32,\n            columnNumber: 13\n          }\n        }), /*#__PURE__*/React.createElement(FontIcon, {\n          size: 8,\n          variant: \"triangle-down\",\n          color: \"black\",\n          __self: _this,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 33,\n            columnNumber: 15\n          }\n        }));\n      },\n      LoadingIndicator: function LoadingIndicator() {\n        return null;\n      },\n      SingleValue: function SingleValue(props) {\n        return /*#__PURE__*/React.createElement(components.SingleValue, Object.assign({}, props, {\n          __self: _this,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 38,\n            columnNumber: 13\n          }\n        }), /*#__PURE__*/React.createElement(\"span\", {\n          title: props.data.label,\n          __self: _this,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 39,\n            columnNumber: 15\n          }\n        }, props.children));\n      },\n      Option: Option //   Menu: (props) => (\n      //     <components.Menu {...props} className='menuAnimate' />\n      // )\n\n    },\n    styles: InlineDashedStyled(),\n    options: options,\n    value: value,\n    isLoading: isLoading,\n    placeholder: placeholder,\n    onInputChange: onInputChange,\n    onChange: function onChange(input) {\n      var obj = Array.from(document.querySelectorAll('.ui-tooltip'));\n      obj === null || obj === void 0 ? void 0 : obj.forEach(function (e) {\n        e.remove();\n      });\n      _onChange && _onChange(input);\n    },\n    onFocus: onFocus,\n    isSearchable: isSearchable,\n    isDisabled: disabled,\n    menuPlacement: \"auto\",\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 28,\n      columnNumber: 7\n    }\n  }));\n};\n\nexport default InlineDashedDropdown;","map":{"version":3,"sources":["/Users/farhanansari/Code/ui-library/src/components/molecules/DropDown/Variants/InlineDashedDropdown.tsx"],"names":["React","Select","components","Option","InlineDashedStyled","Position","FontIcon","InlineDashedDropdown","defaultProps","options","value","isLoading","placeholder","onInputChange","onChange","onFocus","isSearchable","disabled","IndicatorSeparator","DropdownIndicator","props","LoadingIndicator","SingleValue","data","label","children","input","obj","Array","from","document","querySelectorAll","forEach","e","remove"],"mappings":"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","sourcesContent":["import React from 'react'\nimport Select, { components } from 'react-select'\nimport { Option } from '../CustomComponent'\nimport { InlineDashedStyled } from '../Styles'\nimport { IDefaultProps } from '../interface'\nimport Position from '../../Position'\nimport FontIcon from '../../../atoms/FontIcon'\n\nconst InlineDashedDropdown = ({\n  defaultProps\n}: {\n  defaultProps: IDefaultProps\n}) => {\n  const {\n    options,\n    value,\n    isLoading,\n    placeholder,\n    onInputChange,\n    onChange,\n    onFocus,\n    isSearchable,\n    disabled\n  } = defaultProps\n\n  return (\n    <Position type='relative' mt='-0.25em'>\n      <Select\n        components={{\n          IndicatorSeparator: () => null,\n          DropdownIndicator: (props) => (\n            <components.DropdownIndicator {...props}>\n              <FontIcon size={8} variant='triangle-down' color='black' />\n            </components.DropdownIndicator>\n          ),\n          LoadingIndicator: () => null,\n          SingleValue: (props) => (\n            <components.SingleValue {...props}>\n              <span title={props.data.label}>{props.children}</span>\n            </components.SingleValue>\n          ),\n          Option\n          //   Menu: (props) => (\n          //     <components.Menu {...props} className='menuAnimate' />\n          // )\n        }}\n        styles={InlineDashedStyled()}\n        options={options}\n        value={value}\n        isLoading={isLoading}\n        placeholder={placeholder}\n        onInputChange={onInputChange}\n        onChange={(input: any) => {\n          const obj = Array.from(document.querySelectorAll('.ui-tooltip'))\n          obj?.forEach((e) => {\n            e.remove()\n          })\n          onChange && onChange(input)\n        }}\n        onFocus={onFocus}\n        isSearchable={isSearchable}\n        isDisabled={disabled}\n        menuPlacement='auto'\n      />\n    </Position>\n  )\n}\n\nexport default InlineDashedDropdown\n"]},"metadata":{},"sourceType":"module"}