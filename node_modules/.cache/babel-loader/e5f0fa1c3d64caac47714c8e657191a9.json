{"ast":null,"code":"import _objectSpread from \"/Users/farhanansari/Code/ui-library/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/objectSpread2\";\nimport { EditorState, Modifier, ContentState, convertFromRaw } from 'draft-js';\nimport htmlToDraft from 'html-to-draftjs';\nexport var insertMention = function insertMention(editorStateParam, mentionSuggestion, atEnd) {\n  var editorState = atEnd ? EditorState.moveFocusToEnd(editorStateParam) : editorStateParam;\n  var currentContent = editorStateParam.getCurrentContent();\n  var currentSelection = editorState.getSelection();\n  var text = mentionSuggestion.text,\n      value = mentionSuggestion.value,\n      url = mentionSuggestion.url;\n  var stateWithEntity = currentContent.createEntity('MENTION', 'IMMUTABLE', {\n    text: text,\n    value: value,\n    url: url\n  });\n  var entityKey = stateWithEntity.getLastCreatedEntityKey();\n  var stateWithText = Modifier.insertText(stateWithEntity, currentSelection, '@' + text, editorState.getCurrentInlineStyle(), entityKey);\n  return EditorState.push(editorState, stateWithText, 'apply-entity');\n};\nexport var convertHTMLToDraftState = function convertHTMLToDraftState(html, mentionSuggestions) {\n  var newHtml = html;\n\n  if (mentionSuggestions === null || mentionSuggestions === void 0 ? void 0 : mentionSuggestions.length) {\n    mentionSuggestions.forEach(function (suggestion) {\n      newHtml = newHtml.replace(\"<\".concat(suggestion.value, \">\"), \"<a href=\\\"\".concat(suggestion.url, \"\\\" class=\\\"wysiwyg-mention\\\" data-mention data-value=\\\"\").concat(suggestion.text, \"\\\">@\").concat(suggestion.text, \"</a>\"));\n    });\n  }\n\n  var blocksFromHtml = htmlToDraft(newHtml);\n  var contentBlocks = blocksFromHtml.contentBlocks,\n      entityMap = blocksFromHtml.entityMap;\n  var contentState = ContentState.createFromBlockArray(contentBlocks, entityMap);\n  return EditorState.createWithContent(contentState);\n};\nexport var generateEditorStateFromJSONString = function generateEditorStateFromJSONString(jsonString) {\n  var json = jsonString ? JSON.parse(jsonString) : {};\n  return EditorState.createWithContent(convertFromRaw(_objectSpread(_objectSpread({}, json), {}, {\n    entityMap: _objectSpread({}, (json === null || json === void 0 ? void 0 : json.entityMap) || {})\n  })));\n};","map":{"version":3,"sources":["/Users/farhanansari/Code/ui-library/src/components/organisms/RichTextEditor/apis.ts"],"names":["EditorState","Modifier","ContentState","convertFromRaw","htmlToDraft","insertMention","editorStateParam","mentionSuggestion","atEnd","editorState","moveFocusToEnd","currentContent","getCurrentContent","currentSelection","getSelection","text","value","url","stateWithEntity","createEntity","entityKey","getLastCreatedEntityKey","stateWithText","insertText","getCurrentInlineStyle","push","convertHTMLToDraftState","html","mentionSuggestions","newHtml","length","forEach","suggestion","replace","blocksFromHtml","contentBlocks","entityMap","contentState","createFromBlockArray","createWithContent","generateEditorStateFromJSONString","jsonString","json","JSON","parse"],"mappings":";AAAA,SAASA,WAAT,EAAsBC,QAAtB,EAAgCC,YAAhC,EAA8CC,cAA9C,QAAoE,UAApE;AACA,OAAOC,WAAP,MAAwB,iBAAxB;AAGA,OAAO,IAAMC,aAAa,GAAG,SAAhBA,aAAgB,CAC3BC,gBAD2B,EAE3BC,iBAF2B,EAG3BC,KAH2B,EAIxB;AACH,MAAMC,WAAW,GAAGD,KAAK,GACrBR,WAAW,CAACU,cAAZ,CAA2BJ,gBAA3B,CADqB,GAErBA,gBAFJ;AAGA,MAAMK,cAAc,GAAGL,gBAAgB,CAACM,iBAAjB,EAAvB;AACA,MAAMC,gBAAgB,GAAGJ,WAAW,CAACK,YAAZ,EAAzB;AALG,MAOKC,IAPL,GAO0BR,iBAP1B,CAOKQ,IAPL;AAAA,MAOWC,KAPX,GAO0BT,iBAP1B,CAOWS,KAPX;AAAA,MAOkBC,GAPlB,GAO0BV,iBAP1B,CAOkBU,GAPlB;AAQH,MAAMC,eAAe,GAAGP,cAAc,CAACQ,YAAf,CAA4B,SAA5B,EAAuC,WAAvC,EAAoD;AAC1EJ,IAAAA,IAAI,EAAJA,IAD0E;AAE1EC,IAAAA,KAAK,EAALA,KAF0E;AAG1EC,IAAAA,GAAG,EAAHA;AAH0E,GAApD,CAAxB;AAKA,MAAMG,SAAS,GAAGF,eAAe,CAACG,uBAAhB,EAAlB;AACA,MAAMC,aAAa,GAAGrB,QAAQ,CAACsB,UAAT,CACpBL,eADoB,EAEpBL,gBAFoB,EAGpB,MAAME,IAHc,EAIpBN,WAAW,CAACe,qBAAZ,EAJoB,EAKpBJ,SALoB,CAAtB;AAOA,SAAOpB,WAAW,CAACyB,IAAZ,CAAiBhB,WAAjB,EAA8Ba,aAA9B,EAA6C,cAA7C,CAAP;AACD,CA1BM;AA4BP,OAAO,IAAMI,uBAAuB,GAAG,SAA1BA,uBAA0B,CACrCC,IADqC,EAErCC,kBAFqC,EAGlC;AACH,MAAIC,OAAe,GAAGF,IAAtB;;AACA,MAAIC,kBAAJ,aAAIA,kBAAJ,uBAAIA,kBAAkB,CAAEE,MAAxB,EAAgC;AAC9BF,IAAAA,kBAAkB,CAACG,OAAnB,CAA2B,UAACC,UAAD,EAAgB;AACzCH,MAAAA,OAAO,GAAGA,OAAO,CAACI,OAAR,YACJD,UAAU,CAAChB,KADP,4BAEIgB,UAAU,CAACf,GAFf,oEAEwEe,UAAU,CAACjB,IAFnF,iBAE6FiB,UAAU,CAACjB,IAFxG,UAAV;AAID,KALD;AAMD;;AACD,MAAMmB,cAAc,GAAG9B,WAAW,CAACyB,OAAD,CAAlC;AAVG,MAWKM,aAXL,GAWkCD,cAXlC,CAWKC,aAXL;AAAA,MAWoBC,SAXpB,GAWkCF,cAXlC,CAWoBE,SAXpB;AAYH,MAAMC,YAAY,GAAGnC,YAAY,CAACoC,oBAAb,CACnBH,aADmB,EAEnBC,SAFmB,CAArB;AAIA,SAAOpC,WAAW,CAACuC,iBAAZ,CAA8BF,YAA9B,CAAP;AACD,CApBM;AAsBP,OAAO,IAAMG,iCAAiC,GAAG,SAApCA,iCAAoC,CAACC,UAAD,EAAwB;AACvE,MAAMC,IAAI,GAAGD,UAAU,GAAGE,IAAI,CAACC,KAAL,CAAWH,UAAX,CAAH,GAA4B,EAAnD;AACA,SAAOzC,WAAW,CAACuC,iBAAZ,CACLpC,cAAc,iCAAMuC,IAAN;AAAYN,IAAAA,SAAS,oBAAQ,CAAAM,IAAI,SAAJ,IAAAA,IAAI,WAAJ,YAAAA,IAAI,CAAEN,SAAN,KAAmB,EAA3B;AAArB,KADT,CAAP;AAGD,CALM","sourcesContent":["import { EditorState, Modifier, ContentState, convertFromRaw } from 'draft-js'\nimport htmlToDraft from 'html-to-draftjs'\nimport { IMentionSuggestion } from './interfaces'\n\nexport const insertMention = (\n  editorStateParam: EditorState,\n  mentionSuggestion: IMentionSuggestion,\n  atEnd?: boolean\n) => {\n  const editorState = atEnd\n    ? EditorState.moveFocusToEnd(editorStateParam)\n    : editorStateParam\n  const currentContent = editorStateParam.getCurrentContent()\n  const currentSelection = editorState.getSelection()\n\n  const { text, value, url } = mentionSuggestion\n  const stateWithEntity = currentContent.createEntity('MENTION', 'IMMUTABLE', {\n    text,\n    value,\n    url\n  })\n  const entityKey = stateWithEntity.getLastCreatedEntityKey()\n  const stateWithText = Modifier.insertText(\n    stateWithEntity,\n    currentSelection,\n    '@' + text,\n    editorState.getCurrentInlineStyle(),\n    entityKey\n  )\n  return EditorState.push(editorState, stateWithText, 'apply-entity')\n}\n\nexport const convertHTMLToDraftState = (\n  html: string,\n  mentionSuggestions?: IMentionSuggestion[]\n) => {\n  let newHtml: string = html\n  if (mentionSuggestions?.length) {\n    mentionSuggestions.forEach((suggestion) => {\n      newHtml = newHtml.replace(\n        `<${suggestion.value}>`,\n        `<a href=\"${suggestion.url}\" class=\"wysiwyg-mention\" data-mention data-value=\"${suggestion.text}\">@${suggestion.text}</a>`\n      )\n    })\n  }\n  const blocksFromHtml = htmlToDraft(newHtml)\n  const { contentBlocks, entityMap } = blocksFromHtml\n  const contentState = ContentState.createFromBlockArray(\n    contentBlocks,\n    entityMap\n  )\n  return EditorState.createWithContent(contentState)\n}\n\nexport const generateEditorStateFromJSONString = (jsonString: string) => {\n  const json = jsonString ? JSON.parse(jsonString) : {}\n  return EditorState.createWithContent(\n    convertFromRaw({ ...json, entityMap: { ...(json?.entityMap || {}) } })\n  )\n}\n"]},"metadata":{},"sourceType":"module"}