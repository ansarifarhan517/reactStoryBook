{"ast":null,"code":"import _defineProperty from \"/Users/farhanansari/Desktop/CODE/PrxProject/untitled folder/reactStoryBook/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/defineProperty\";\n\nvar _parameters;\n\n/* eslint-disable */\n// @ts-nocheck\n// @ts-ignore\nvar withSourceLoader = require('@storybook/source-loader/preview').withSource; // @ts-ignore\n\n\nvar addSourceDecorator = require(\"@storybook/source-loader/preview\").addSource; // @ts-ignore\n\n\nvar __SOURCE_PREFIX__ = \"/Users/farhanansari/Desktop/CODE/PrxProject/untitled folder/reactStoryBook/src/components/organisms/AdvancedFilter\"; // @ts-ignore\n\nvar __STORY__ = \"\\n\\n// @ts-nocheck\\n// @ts-ignore\\nvar withSourceLoader = require('@storybook/source-loader/preview').withSource;\\n// @ts-ignore\\nvar addSourceDecorator = require(\\\"@storybook/source-loader/preview\\\").addSource;\\n// @ts-ignore\\nvar __SOURCE_PREFIX__ = \\\"/Users/farhanansari/Desktop/CODE/PrxProject/untitled folder/reactStoryBook/src/components/organisms/AdvancedFilter\\\";\\n// @ts-ignore\\nvar __STORY__ = \\\"\\\\n\\\\n// @ts-nocheck\\\\n// @ts-ignore\\\\nvar withSourceLoader = require('@storybook/source-loader/preview').withSource;\\\\n// @ts-ignore\\\\nvar addSourceDecorator = require(\\\\\\\"@storybook/source-loader/preview\\\\\\\").addSource;\\\\n// @ts-ignore\\\\nvar __SOURCE_PREFIX__ = \\\\\\\"/Users/farhanansari/Desktop/CODE/PrxProject/untitled folder/reactStoryBook/src/components/organisms/AdvancedFilter\\\\\\\";\\\\n// @ts-ignore\\\\nvar __STORY__ = \\\\\\\"import React from 'react'\\\\\\\\nimport { path } from '..'\\\\\\\\nimport { withKnobs, boolean, object, text } from '@storybook/addon-knobs'\\\\\\\\nimport AdvancedFilter from '.'\\\\\\\\nimport ThemeWrapper from '../../../utilities/components/ThemeWrapper'\\\\\\\\nimport { IThirdElementValue, tAdvancedFilterChildren } from './interfaces'\\\\\\\\nimport { action } from '@storybook/addon-actions'\\\\\\\\nimport IconButton from '../../atoms/IconButton'\\\\\\\\nimport operationTypes from './Data/operationType'\\\\\\\\nimport columnsStructure from './Data/columnsStructure'\\\\\\\\nimport filterData from './Data/filterData'\\\\\\\\nimport ThirdElement from './ThirdElement/index'\\\\\\\\n\\\\\\\\nexport default {\\\\\\\\n  title: `${path}/AdvancedFilter`,\\\\\\\\n  decorators: [withKnobs],\\\\\\\\n  component: AdvancedFilter\\\\\\\\n}\\\\\\\\n\\\\\\\\nconst ThirdElementFormatter = (data: IThirdElementValue) => {\\\\\\\\n  switch (data?.type) {\\\\\\\\n    case 'calendar':\\\\\\\\n      return data.value\\\\\\\\n    default:\\\\\\\\n      return data?.label || data.value\\\\\\\\n  }\\\\\\\\n}\\\\\\\\n\\\\\\\\nexport const withPlayGround = () => (\\\\\\\\n  <ThemeWrapper>\\\\\\\\n    <AdvancedFilter\\\\\\\\n      showOpen={boolean('show Open', false)}\\\\\\\\n      backButton={boolean('back Button', false)}\\\\\\\\n      masterCondition={boolean('show Condition', true)}\\\\\\\\n      allowSort={boolean('show Sort', true)}\\\\\\\\n      allowFavourites={boolean('show favourites', true)}\\\\\\\\n      allowMultipleFilters={boolean('show Multiple Filters', true)}\\\\\\\\n      backButtonCallback={() => action('Back Button clicked')}\\\\\\\\n      chipsArray={object('preDefinedArrays', filterData)}\\\\\\\\n      dropDownOptions={object('columns Data', columnsStructure)}\\\\\\\\n      fieldOperation={object('operation Type', operationTypes)}\\\\\\\\n      onApply={(filterObject: any) => action('Apply clicked')(filterObject)}\\\\\\\\n      onRemove={(filterObject: any) =>\\\\\\\\n        action('on Remove Clicked')(filterObject)\\\\\\\\n      }\\\\\\\\n      onDelete={(filterObject: any) => action('Delete Clicked')(filterObject)}\\\\\\\\n      onSave={(filterObject: any) => action('on Save clicked')(filterObject)}\\\\\\\\n      onUpdate={(filterObject: any) =>\\\\\\\\n        action('on Update clicked')(filterObject)\\\\\\\\n      }\\\\\\\\n      appliedFilterId={text('AppliedFilterId', '5f92b95637c24c28eb950447')}\\\\\\\\n      onFavourite={(filterObject: any) =>\\\\\\\\n        action('Favourites CLicked')(filterObject)\\\\\\\\n      }\\\\\\\\n      onAddFilter={action('Add Filter Called')}\\\\\\\\n      onAddCondition={action('Add Condition Called')}\\\\\\\\n      ThirdElement={ThirdElement}\\\\\\\\n      ThirdElementFormatter={ThirdElementFormatter}\\\\\\\\n      saveTooltip='Save'\\\\\\\\n      duplicateTooltip='Create Duplicate'\\\\\\\\n      cancelTooltip='Cancel'\\\\\\\\n      removeFavouriteTooltip='Remove Favourite'\\\\\\\\n      markAsfavouriteTooltip='Mark as Favourite'\\\\\\\\n      style={{\\\\\\\\n        position: 'absolute',\\\\\\\\n        left: '0px'\\\\\\\\n      }}\\\\\\\\n    >\\\\\\\\n      {({ open, setOpen, chips }: tAdvancedFilterChildren) => (\\\\\\\\n        <>\\\\\\\\n          <IconButton\\\\\\\\n            onClick={() => setOpen && setOpen(!open)}\\\\\\\\n            intent='default'\\\\\\\\n            iconVariant='icomoon-funel'\\\\\\\\n            children={'Advanced Filter ' + chips?.length}\\\\\\\\n          />\\\\\\\\n        </>\\\\\\\\n      )}\\\\\\\\n    </AdvancedFilter>\\\\\\\\n  </ThemeWrapper>\\\\\\\\n)\\\\\\\\n\\\\\\\";\\\\n// @ts-ignore\\\\nvar __ADDS_MAP__ = {};\\\\n// @ts-ignore\\\\nvar __MAIN_FILE_LOCATION__ = \\\\\\\"/AdvancedFilter.stories.tsx\\\\\\\";\\\\n// @ts-ignore\\\\nvar __MODULE_DEPENDENCIES__ = [];\\\\n// @ts-ignore\\\\nvar __LOCAL_DEPENDENCIES__ = {};\\\\n// @ts-ignore\\\\nvar __IDS_TO_FRAMEWORKS__ = {};\\\\n        \\\\nimport React from 'react'\\\\nimport { path } from '..'\\\\nimport { withKnobs, boolean, object, text } from '@storybook/addon-knobs'\\\\nimport AdvancedFilter from '.'\\\\nimport ThemeWrapper from '../../../utilities/components/ThemeWrapper'\\\\nimport { IThirdElementValue, tAdvancedFilterChildren } from './interfaces'\\\\nimport { action } from '@storybook/addon-actions'\\\\nimport IconButton from '../../atoms/IconButton'\\\\nimport operationTypes from './Data/operationType'\\\\nimport columnsStructure from './Data/columnsStructure'\\\\nimport filterData from './Data/filterData'\\\\nimport ThirdElement from './ThirdElement/index'\\\\n\\\\nexport default {parameters: {\\\\\\\"storySource\\\\\\\":{\\\\\\\"source\\\\\\\":\\\\\\\"import React from 'react'\\\\\\\\nimport { path } from '..'\\\\\\\\nimport { withKnobs, boolean, object, text } from '@storybook/addon-knobs'\\\\\\\\nimport AdvancedFilter from '.'\\\\\\\\nimport ThemeWrapper from '../../../utilities/components/ThemeWrapper'\\\\\\\\nimport { IThirdElementValue, tAdvancedFilterChildren } from './interfaces'\\\\\\\\nimport { action } from '@storybook/addon-actions'\\\\\\\\nimport IconButton from '../../atoms/IconButton'\\\\\\\\nimport operationTypes from './Data/operationType'\\\\\\\\nimport columnsStructure from './Data/columnsStructure'\\\\\\\\nimport filterData from './Data/filterData'\\\\\\\\nimport ThirdElement from './ThirdElement/index'\\\\\\\\n\\\\\\\\nexport default {\\\\\\\\n  title: `${path}/AdvancedFilter`,\\\\\\\\n  decorators: [withKnobs],\\\\\\\\n  component: AdvancedFilter\\\\\\\\n}\\\\\\\\n\\\\\\\\nconst ThirdElementFormatter = (data: IThirdElementValue) => {\\\\\\\\n  switch (data?.type) {\\\\\\\\n    case 'calendar':\\\\\\\\n      return data.value\\\\\\\\n    default:\\\\\\\\n      return data?.label || data.value\\\\\\\\n  }\\\\\\\\n}\\\\\\\\n\\\\\\\\nexport const withPlayGround = () => (\\\\\\\\n  <ThemeWrapper>\\\\\\\\n    <AdvancedFilter\\\\\\\\n      showOpen={boolean('show Open', false)}\\\\\\\\n      backButton={boolean('back Button', false)}\\\\\\\\n      masterCondition={boolean('show Condition', true)}\\\\\\\\n      allowSort={boolean('show Sort', true)}\\\\\\\\n      allowFavourites={boolean('show favourites', true)}\\\\\\\\n      allowMultipleFilters={boolean('show Multiple Filters', true)}\\\\\\\\n      backButtonCallback={() => action('Back Button clicked')}\\\\\\\\n      chipsArray={object('preDefinedArrays', filterData)}\\\\\\\\n      dropDownOptions={object('columns Data', columnsStructure)}\\\\\\\\n      fieldOperation={object('operation Type', operationTypes)}\\\\\\\\n      onApply={(filterObject: any) => action('Apply clicked')(filterObject)}\\\\\\\\n      onRemove={(filterObject: any) =>\\\\\\\\n        action('on Remove Clicked')(filterObject)\\\\\\\\n      }\\\\\\\\n      onDelete={(filterObject: any) => action('Delete Clicked')(filterObject)}\\\\\\\\n      onSave={(filterObject: any) => action('on Save clicked')(filterObject)}\\\\\\\\n      onUpdate={(filterObject: any) =>\\\\\\\\n        action('on Update clicked')(filterObject)\\\\\\\\n      }\\\\\\\\n      appliedFilterId={text('AppliedFilterId', '5f92b95637c24c28eb950447')}\\\\\\\\n      onFavourite={(filterObject: any) =>\\\\\\\\n        action('Favourites CLicked')(filterObject)\\\\\\\\n      }\\\\\\\\n      onAddFilter={action('Add Filter Called')}\\\\\\\\n      onAddCondition={action('Add Condition Called')}\\\\\\\\n      ThirdElement={ThirdElement}\\\\\\\\n      ThirdElementFormatter={ThirdElementFormatter}\\\\\\\\n      saveTooltip='Save'\\\\\\\\n      duplicateTooltip='Create Duplicate'\\\\\\\\n      cancelTooltip='Cancel'\\\\\\\\n      removeFavouriteTooltip='Remove Favourite'\\\\\\\\n      markAsfavouriteTooltip='Mark as Favourite'\\\\\\\\n      style={{\\\\\\\\n        position: 'absolute',\\\\\\\\n        left: '0px'\\\\\\\\n      }}\\\\\\\\n    >\\\\\\\\n      {({ open, setOpen, chips }: tAdvancedFilterChildren) => (\\\\\\\\n        <>\\\\\\\\n          <IconButton\\\\\\\\n            onClick={() => setOpen && setOpen(!open)}\\\\\\\\n            intent='default'\\\\\\\\n            iconVariant='icomoon-funel'\\\\\\\\n            children={'Advanced Filter ' + chips?.length}\\\\\\\\n          />\\\\\\\\n        </>\\\\\\\\n      )}\\\\\\\\n    </AdvancedFilter>\\\\\\\\n  </ThemeWrapper>\\\\\\\\n)\\\\\\\\n\\\\\\\",\\\\\\\"locationsMap\\\\\\\":{}},},\\\\n  title: `${path}/AdvancedFilter`,\\\\n  decorators: [withKnobs],\\\\n  component: AdvancedFilter\\\\n}\\\\n\\\\nconst ThirdElementFormatter = (data: IThirdElementValue) => {\\\\n  switch (data?.type) {\\\\n    case 'calendar':\\\\n      return data.value\\\\n    default:\\\\n      return data?.label || data.value\\\\n  }\\\\n}\\\\n\\\\nexport const withPlayGround = addSourceDecorator(() => (\\\\n  <ThemeWrapper>\\\\n    <AdvancedFilter\\\\n      showOpen={boolean('show Open', false)}\\\\n      backButton={boolean('back Button', false)}\\\\n      masterCondition={boolean('show Condition', true)}\\\\n      allowSort={boolean('show Sort', true)}\\\\n      allowFavourites={boolean('show favourites', true)}\\\\n      allowMultipleFilters={boolean('show Multiple Filters', true)}\\\\n      backButtonCallback={() => action('Back Button clicked')}\\\\n      chipsArray={object('preDefinedArrays', filterData)}\\\\n      dropDownOptions={object('columns Data', columnsStructure)}\\\\n      fieldOperation={object('operation Type', operationTypes)}\\\\n      onApply={(filterObject: any) => action('Apply clicked')(filterObject)}\\\\n      onRemove={(filterObject: any) =>\\\\n        action('on Remove Clicked')(filterObject)\\\\n      }\\\\n      onDelete={(filterObject: any) => action('Delete Clicked')(filterObject)}\\\\n      onSave={(filterObject: any) => action('on Save clicked')(filterObject)}\\\\n      onUpdate={(filterObject: any) =>\\\\n        action('on Update clicked')(filterObject)\\\\n      }\\\\n      appliedFilterId={text('AppliedFilterId', '5f92b95637c24c28eb950447')}\\\\n      onFavourite={(filterObject: any) =>\\\\n        action('Favourites CLicked')(filterObject)\\\\n      }\\\\n      onAddFilter={action('Add Filter Called')}\\\\n      onAddCondition={action('Add Condition Called')}\\\\n      ThirdElement={ThirdElement}\\\\n      ThirdElementFormatter={ThirdElementFormatter}\\\\n      saveTooltip='Save'\\\\n      duplicateTooltip='Create Duplicate'\\\\n      cancelTooltip='Cancel'\\\\n      removeFavouriteTooltip='Remove Favourite'\\\\n      markAsfavouriteTooltip='Mark as Favourite'\\\\n      style={{\\\\n        position: 'absolute',\\\\n        left: '0px'\\\\n      }}\\\\n    >\\\\n      {({ open, setOpen, chips }: tAdvancedFilterChildren) => (\\\\n        <>\\\\n          <IconButton\\\\n            onClick={() => setOpen && setOpen(!open)}\\\\n            intent='default'\\\\n            iconVariant='icomoon-funel'\\\\n            children={'Advanced Filter ' + chips?.length}\\\\n          />\\\\n        </>\\\\n      )}\\\\n    </AdvancedFilter>\\\\n  </ThemeWrapper>\\\\n), {__STORY__, __ADDS_MAP__,__MAIN_FILE_LOCATION__,__MODULE_DEPENDENCIES__,__LOCAL_DEPENDENCIES__,__SOURCE_PREFIX__,__IDS_TO_FRAMEWORKS__});\\\";\\n// @ts-ignore\\nvar __ADDS_MAP__ = {};\\n// @ts-ignore\\nvar __MAIN_FILE_LOCATION__ = \\\"/AdvancedFilter.stories.tsx\\\";\\n// @ts-ignore\\nvar __MODULE_DEPENDENCIES__ = [];\\n// @ts-ignore\\nvar __LOCAL_DEPENDENCIES__ = {};\\n// @ts-ignore\\nvar __IDS_TO_FRAMEWORKS__ = {};\\n        \\n\\n\\n// @ts-nocheck\\n// @ts-ignore\\nvar withSourceLoader = require('@storybook/source-loader/preview').withSource;\\n// @ts-ignore\\nvar addSourceDecorator = require(\\\"@storybook/source-loader/preview\\\").addSource;\\n// @ts-ignore\\nvar __SOURCE_PREFIX__ = \\\"/Users/farhanansari/Desktop/CODE/PrxProject/untitled folder/reactStoryBook/src/components/organisms/AdvancedFilter\\\";\\n// @ts-ignore\\nvar __STORY__ = \\\"import React from 'react'\\\\nimport { path } from '..'\\\\nimport { withKnobs, boolean, object, text } from '@storybook/addon-knobs'\\\\nimport AdvancedFilter from '.'\\\\nimport ThemeWrapper from '../../../utilities/components/ThemeWrapper'\\\\nimport { IThirdElementValue, tAdvancedFilterChildren } from './interfaces'\\\\nimport { action } from '@storybook/addon-actions'\\\\nimport IconButton from '../../atoms/IconButton'\\\\nimport operationTypes from './Data/operationType'\\\\nimport columnsStructure from './Data/columnsStructure'\\\\nimport filterData from './Data/filterData'\\\\nimport ThirdElement from './ThirdElement/index'\\\\n\\\\nexport default {\\\\n  title: `${path}/AdvancedFilter`,\\\\n  decorators: [withKnobs],\\\\n  component: AdvancedFilter\\\\n}\\\\n\\\\nconst ThirdElementFormatter = (data: IThirdElementValue) => {\\\\n  switch (data?.type) {\\\\n    case 'calendar':\\\\n      return data.value\\\\n    default:\\\\n      return data?.label || data.value\\\\n  }\\\\n}\\\\n\\\\nexport const withPlayGround = () => (\\\\n  <ThemeWrapper>\\\\n    <AdvancedFilter\\\\n      showOpen={boolean('show Open', false)}\\\\n      backButton={boolean('back Button', false)}\\\\n      masterCondition={boolean('show Condition', true)}\\\\n      allowSort={boolean('show Sort', true)}\\\\n      allowFavourites={boolean('show favourites', true)}\\\\n      allowMultipleFilters={boolean('show Multiple Filters', true)}\\\\n      backButtonCallback={() => action('Back Button clicked')}\\\\n      chipsArray={object('preDefinedArrays', filterData)}\\\\n      dropDownOptions={object('columns Data', columnsStructure)}\\\\n      fieldOperation={object('operation Type', operationTypes)}\\\\n      onApply={(filterObject: any) => action('Apply clicked')(filterObject)}\\\\n      onRemove={(filterObject: any) =>\\\\n        action('on Remove Clicked')(filterObject)\\\\n      }\\\\n      onDelete={(filterObject: any) => action('Delete Clicked')(filterObject)}\\\\n      onSave={(filterObject: any) => action('on Save clicked')(filterObject)}\\\\n      onUpdate={(filterObject: any) =>\\\\n        action('on Update clicked')(filterObject)\\\\n      }\\\\n      appliedFilterId={text('AppliedFilterId', '5f92b95637c24c28eb950447')}\\\\n      onFavourite={(filterObject: any) =>\\\\n        action('Favourites CLicked')(filterObject)\\\\n      }\\\\n      onAddFilter={action('Add Filter Called')}\\\\n      onAddCondition={action('Add Condition Called')}\\\\n      ThirdElement={ThirdElement}\\\\n      ThirdElementFormatter={ThirdElementFormatter}\\\\n      saveTooltip='Save'\\\\n      duplicateTooltip='Create Duplicate'\\\\n      cancelTooltip='Cancel'\\\\n      removeFavouriteTooltip='Remove Favourite'\\\\n      markAsfavouriteTooltip='Mark as Favourite'\\\\n      style={{\\\\n        position: 'absolute',\\\\n        left: '0px'\\\\n      }}\\\\n    >\\\\n      {({ open, setOpen, chips }: tAdvancedFilterChildren) => (\\\\n        <>\\\\n          <IconButton\\\\n            onClick={() => setOpen && setOpen(!open)}\\\\n            intent='default'\\\\n            iconVariant='icomoon-funel'\\\\n            children={'Advanced Filter ' + chips?.length}\\\\n          />\\\\n        </>\\\\n      )}\\\\n    </AdvancedFilter>\\\\n  </ThemeWrapper>\\\\n)\\\\n\\\";\\n// @ts-ignore\\nvar __ADDS_MAP__ = {};\\n// @ts-ignore\\nvar __MAIN_FILE_LOCATION__ = \\\"/AdvancedFilter.stories.tsx\\\";\\n// @ts-ignore\\nvar __MODULE_DEPENDENCIES__ = [];\\n// @ts-ignore\\nvar __LOCAL_DEPENDENCIES__ = {};\\n// @ts-ignore\\nvar __IDS_TO_FRAMEWORKS__ = {};\\n        \\nimport React from 'react'\\nimport { path } from '..'\\nimport { withKnobs, boolean, object, text } from '@storybook/addon-knobs'\\nimport AdvancedFilter from '.'\\nimport ThemeWrapper from '../../../utilities/components/ThemeWrapper'\\nimport { IThirdElementValue, tAdvancedFilterChildren } from './interfaces'\\nimport { action } from '@storybook/addon-actions'\\nimport IconButton from '../../atoms/IconButton'\\nimport operationTypes from './Data/operationType'\\nimport columnsStructure from './Data/columnsStructure'\\nimport filterData from './Data/filterData'\\nimport ThirdElement from './ThirdElement/index'\\n\\nexport default {parameters: {\\\"storySource\\\":{\\\"source\\\":\\\"\\\\n\\\\n// @ts-nocheck\\\\n// @ts-ignore\\\\nvar withSourceLoader = require('@storybook/source-loader/preview').withSource;\\\\n// @ts-ignore\\\\nvar addSourceDecorator = require(\\\\\\\"@storybook/source-loader/preview\\\\\\\").addSource;\\\\n// @ts-ignore\\\\nvar __SOURCE_PREFIX__ = \\\\\\\"/Users/farhanansari/Desktop/CODE/PrxProject/untitled folder/reactStoryBook/src/components/organisms/AdvancedFilter\\\\\\\";\\\\n// @ts-ignore\\\\nvar __STORY__ = \\\\\\\"import React from 'react'\\\\\\\\nimport { path } from '..'\\\\\\\\nimport { withKnobs, boolean, object, text } from '@storybook/addon-knobs'\\\\\\\\nimport AdvancedFilter from '.'\\\\\\\\nimport ThemeWrapper from '../../../utilities/components/ThemeWrapper'\\\\\\\\nimport { IThirdElementValue, tAdvancedFilterChildren } from './interfaces'\\\\\\\\nimport { action } from '@storybook/addon-actions'\\\\\\\\nimport IconButton from '../../atoms/IconButton'\\\\\\\\nimport operationTypes from './Data/operationType'\\\\\\\\nimport columnsStructure from './Data/columnsStructure'\\\\\\\\nimport filterData from './Data/filterData'\\\\\\\\nimport ThirdElement from './ThirdElement/index'\\\\\\\\n\\\\\\\\nexport default {\\\\\\\\n  title: `${path}/AdvancedFilter`,\\\\\\\\n  decorators: [withKnobs],\\\\\\\\n  component: AdvancedFilter\\\\\\\\n}\\\\\\\\n\\\\\\\\nconst ThirdElementFormatter = (data: IThirdElementValue) => {\\\\\\\\n  switch (data?.type) {\\\\\\\\n    case 'calendar':\\\\\\\\n      return data.value\\\\\\\\n    default:\\\\\\\\n      return data?.label || data.value\\\\\\\\n  }\\\\\\\\n}\\\\\\\\n\\\\\\\\nexport const withPlayGround = () => (\\\\\\\\n  <ThemeWrapper>\\\\\\\\n    <AdvancedFilter\\\\\\\\n      showOpen={boolean('show Open', false)}\\\\\\\\n      backButton={boolean('back Button', false)}\\\\\\\\n      masterCondition={boolean('show Condition', true)}\\\\\\\\n      allowSort={boolean('show Sort', true)}\\\\\\\\n      allowFavourites={boolean('show favourites', true)}\\\\\\\\n      allowMultipleFilters={boolean('show Multiple Filters', true)}\\\\\\\\n      backButtonCallback={() => action('Back Button clicked')}\\\\\\\\n      chipsArray={object('preDefinedArrays', filterData)}\\\\\\\\n      dropDownOptions={object('columns Data', columnsStructure)}\\\\\\\\n      fieldOperation={object('operation Type', operationTypes)}\\\\\\\\n      onApply={(filterObject: any) => action('Apply clicked')(filterObject)}\\\\\\\\n      onRemove={(filterObject: any) =>\\\\\\\\n        action('on Remove Clicked')(filterObject)\\\\\\\\n      }\\\\\\\\n      onDelete={(filterObject: any) => action('Delete Clicked')(filterObject)}\\\\\\\\n      onSave={(filterObject: any) => action('on Save clicked')(filterObject)}\\\\\\\\n      onUpdate={(filterObject: any) =>\\\\\\\\n        action('on Update clicked')(filterObject)\\\\\\\\n      }\\\\\\\\n      appliedFilterId={text('AppliedFilterId', '5f92b95637c24c28eb950447')}\\\\\\\\n      onFavourite={(filterObject: any) =>\\\\\\\\n        action('Favourites CLicked')(filterObject)\\\\\\\\n      }\\\\\\\\n      onAddFilter={action('Add Filter Called')}\\\\\\\\n      onAddCondition={action('Add Condition Called')}\\\\\\\\n      ThirdElement={ThirdElement}\\\\\\\\n      ThirdElementFormatter={ThirdElementFormatter}\\\\\\\\n      saveTooltip='Save'\\\\\\\\n      duplicateTooltip='Create Duplicate'\\\\\\\\n      cancelTooltip='Cancel'\\\\\\\\n      removeFavouriteTooltip='Remove Favourite'\\\\\\\\n      markAsfavouriteTooltip='Mark as Favourite'\\\\\\\\n      style={{\\\\\\\\n        position: 'absolute',\\\\\\\\n        left: '0px'\\\\\\\\n      }}\\\\\\\\n    >\\\\\\\\n      {({ open, setOpen, chips }: tAdvancedFilterChildren) => (\\\\\\\\n        <>\\\\\\\\n          <IconButton\\\\\\\\n            onClick={() => setOpen && setOpen(!open)}\\\\\\\\n            intent='default'\\\\\\\\n            iconVariant='icomoon-funel'\\\\\\\\n            children={'Advanced Filter ' + chips?.length}\\\\\\\\n          />\\\\\\\\n        </>\\\\\\\\n      )}\\\\\\\\n    </AdvancedFilter>\\\\\\\\n  </ThemeWrapper>\\\\\\\\n)\\\\\\\\n\\\\\\\";\\\\n// @ts-ignore\\\\nvar __ADDS_MAP__ = {};\\\\n// @ts-ignore\\\\nvar __MAIN_FILE_LOCATION__ = \\\\\\\"/AdvancedFilter.stories.tsx\\\\\\\";\\\\n// @ts-ignore\\\\nvar __MODULE_DEPENDENCIES__ = [];\\\\n// @ts-ignore\\\\nvar __LOCAL_DEPENDENCIES__ = {};\\\\n// @ts-ignore\\\\nvar __IDS_TO_FRAMEWORKS__ = {};\\\\n        \\\\nimport React from 'react'\\\\nimport { path } from '..'\\\\nimport { withKnobs, boolean, object, text } from '@storybook/addon-knobs'\\\\nimport AdvancedFilter from '.'\\\\nimport ThemeWrapper from '../../../utilities/components/ThemeWrapper'\\\\nimport { IThirdElementValue, tAdvancedFilterChildren } from './interfaces'\\\\nimport { action } from '@storybook/addon-actions'\\\\nimport IconButton from '../../atoms/IconButton'\\\\nimport operationTypes from './Data/operationType'\\\\nimport columnsStructure from './Data/columnsStructure'\\\\nimport filterData from './Data/filterData'\\\\nimport ThirdElement from './ThirdElement/index'\\\\n\\\\nexport default {parameters: {\\\\\\\"storySource\\\\\\\":{\\\\\\\"source\\\\\\\":\\\\\\\"import React from 'react'\\\\\\\\nimport { path } from '..'\\\\\\\\nimport { withKnobs, boolean, object, text } from '@storybook/addon-knobs'\\\\\\\\nimport AdvancedFilter from '.'\\\\\\\\nimport ThemeWrapper from '../../../utilities/components/ThemeWrapper'\\\\\\\\nimport { IThirdElementValue, tAdvancedFilterChildren } from './interfaces'\\\\\\\\nimport { action } from '@storybook/addon-actions'\\\\\\\\nimport IconButton from '../../atoms/IconButton'\\\\\\\\nimport operationTypes from './Data/operationType'\\\\\\\\nimport columnsStructure from './Data/columnsStructure'\\\\\\\\nimport filterData from './Data/filterData'\\\\\\\\nimport ThirdElement from './ThirdElement/index'\\\\\\\\n\\\\\\\\nexport default {\\\\\\\\n  title: `${path}/AdvancedFilter`,\\\\\\\\n  decorators: [withKnobs],\\\\\\\\n  component: AdvancedFilter\\\\\\\\n}\\\\\\\\n\\\\\\\\nconst ThirdElementFormatter = (data: IThirdElementValue) => {\\\\\\\\n  switch (data?.type) {\\\\\\\\n    case 'calendar':\\\\\\\\n      return data.value\\\\\\\\n    default:\\\\\\\\n      return data?.label || data.value\\\\\\\\n  }\\\\\\\\n}\\\\\\\\n\\\\\\\\nexport const withPlayGround = () => (\\\\\\\\n  <ThemeWrapper>\\\\\\\\n    <AdvancedFilter\\\\\\\\n      showOpen={boolean('show Open', false)}\\\\\\\\n      backButton={boolean('back Button', false)}\\\\\\\\n      masterCondition={boolean('show Condition', true)}\\\\\\\\n      allowSort={boolean('show Sort', true)}\\\\\\\\n      allowFavourites={boolean('show favourites', true)}\\\\\\\\n      allowMultipleFilters={boolean('show Multiple Filters', true)}\\\\\\\\n      backButtonCallback={() => action('Back Button clicked')}\\\\\\\\n      chipsArray={object('preDefinedArrays', filterData)}\\\\\\\\n      dropDownOptions={object('columns Data', columnsStructure)}\\\\\\\\n      fieldOperation={object('operation Type', operationTypes)}\\\\\\\\n      onApply={(filterObject: any) => action('Apply clicked')(filterObject)}\\\\\\\\n      onRemove={(filterObject: any) =>\\\\\\\\n        action('on Remove Clicked')(filterObject)\\\\\\\\n      }\\\\\\\\n      onDelete={(filterObject: any) => action('Delete Clicked')(filterObject)}\\\\\\\\n      onSave={(filterObject: any) => action('on Save clicked')(filterObject)}\\\\\\\\n      onUpdate={(filterObject: any) =>\\\\\\\\n        action('on Update clicked')(filterObject)\\\\\\\\n      }\\\\\\\\n      appliedFilterId={text('AppliedFilterId', '5f92b95637c24c28eb950447')}\\\\\\\\n      onFavourite={(filterObject: any) =>\\\\\\\\n        action('Favourites CLicked')(filterObject)\\\\\\\\n      }\\\\\\\\n      onAddFilter={action('Add Filter Called')}\\\\\\\\n      onAddCondition={action('Add Condition Called')}\\\\\\\\n      ThirdElement={ThirdElement}\\\\\\\\n      ThirdElementFormatter={ThirdElementFormatter}\\\\\\\\n      saveTooltip='Save'\\\\\\\\n      duplicateTooltip='Create Duplicate'\\\\\\\\n      cancelTooltip='Cancel'\\\\\\\\n      removeFavouriteTooltip='Remove Favourite'\\\\\\\\n      markAsfavouriteTooltip='Mark as Favourite'\\\\\\\\n      style={{\\\\\\\\n        position: 'absolute',\\\\\\\\n        left: '0px'\\\\\\\\n      }}\\\\\\\\n    >\\\\\\\\n      {({ open, setOpen, chips }: tAdvancedFilterChildren) => (\\\\\\\\n        <>\\\\\\\\n          <IconButton\\\\\\\\n            onClick={() => setOpen && setOpen(!open)}\\\\\\\\n            intent='default'\\\\\\\\n            iconVariant='icomoon-funel'\\\\\\\\n            children={'Advanced Filter ' + chips?.length}\\\\\\\\n          />\\\\\\\\n        </>\\\\\\\\n      )}\\\\\\\\n    </AdvancedFilter>\\\\\\\\n  </ThemeWrapper>\\\\\\\\n)\\\\\\\\n\\\\\\\",\\\\\\\"locationsMap\\\\\\\":{}},},\\\\n  title: `${path}/AdvancedFilter`,\\\\n  decorators: [withKnobs],\\\\n  component: AdvancedFilter\\\\n}\\\\n\\\\nconst ThirdElementFormatter = (data: IThirdElementValue) => {\\\\n  switch (data?.type) {\\\\n    case 'calendar':\\\\n      return data.value\\\\n    default:\\\\n      return data?.label || data.value\\\\n  }\\\\n}\\\\n\\\\nexport const withPlayGround = addSourceDecorator(() => (\\\\n  <ThemeWrapper>\\\\n    <AdvancedFilter\\\\n      showOpen={boolean('show Open', false)}\\\\n      backButton={boolean('back Button', false)}\\\\n      masterCondition={boolean('show Condition', true)}\\\\n      allowSort={boolean('show Sort', true)}\\\\n      allowFavourites={boolean('show favourites', true)}\\\\n      allowMultipleFilters={boolean('show Multiple Filters', true)}\\\\n      backButtonCallback={() => action('Back Button clicked')}\\\\n      chipsArray={object('preDefinedArrays', filterData)}\\\\n      dropDownOptions={object('columns Data', columnsStructure)}\\\\n      fieldOperation={object('operation Type', operationTypes)}\\\\n      onApply={(filterObject: any) => action('Apply clicked')(filterObject)}\\\\n      onRemove={(filterObject: any) =>\\\\n        action('on Remove Clicked')(filterObject)\\\\n      }\\\\n      onDelete={(filterObject: any) => action('Delete Clicked')(filterObject)}\\\\n      onSave={(filterObject: any) => action('on Save clicked')(filterObject)}\\\\n      onUpdate={(filterObject: any) =>\\\\n        action('on Update clicked')(filterObject)\\\\n      }\\\\n      appliedFilterId={text('AppliedFilterId', '5f92b95637c24c28eb950447')}\\\\n      onFavourite={(filterObject: any) =>\\\\n        action('Favourites CLicked')(filterObject)\\\\n      }\\\\n      onAddFilter={action('Add Filter Called')}\\\\n      onAddCondition={action('Add Condition Called')}\\\\n      ThirdElement={ThirdElement}\\\\n      ThirdElementFormatter={ThirdElementFormatter}\\\\n      saveTooltip='Save'\\\\n      duplicateTooltip='Create Duplicate'\\\\n      cancelTooltip='Cancel'\\\\n      removeFavouriteTooltip='Remove Favourite'\\\\n      markAsfavouriteTooltip='Mark as Favourite'\\\\n      style={{\\\\n        position: 'absolute',\\\\n        left: '0px'\\\\n      }}\\\\n    >\\\\n      {({ open, setOpen, chips }: tAdvancedFilterChildren) => (\\\\n        <>\\\\n          <IconButton\\\\n            onClick={() => setOpen && setOpen(!open)}\\\\n            intent='default'\\\\n            iconVariant='icomoon-funel'\\\\n            children={'Advanced Filter ' + chips?.length}\\\\n          />\\\\n        </>\\\\n      )}\\\\n    </AdvancedFilter>\\\\n  </ThemeWrapper>\\\\n), {__STORY__, __ADDS_MAP__,__MAIN_FILE_LOCATION__,__MODULE_DEPENDENCIES__,__LOCAL_DEPENDENCIES__,__SOURCE_PREFIX__,__IDS_TO_FRAMEWORKS__});\\\",\\\"locationsMap\\\":{}},\\\"storySource\\\":{\\\"source\\\":\\\"import React from 'react'\\\\nimport { path } from '..'\\\\nimport { withKnobs, boolean, object, text } from '@storybook/addon-knobs'\\\\nimport AdvancedFilter from '.'\\\\nimport ThemeWrapper from '../../../utilities/components/ThemeWrapper'\\\\nimport { IThirdElementValue, tAdvancedFilterChildren } from './interfaces'\\\\nimport { action } from '@storybook/addon-actions'\\\\nimport IconButton from '../../atoms/IconButton'\\\\nimport operationTypes from './Data/operationType'\\\\nimport columnsStructure from './Data/columnsStructure'\\\\nimport filterData from './Data/filterData'\\\\nimport ThirdElement from './ThirdElement/index'\\\\n\\\\nexport default {\\\\n  title: `${path}/AdvancedFilter`,\\\\n  decorators: [withKnobs],\\\\n  component: AdvancedFilter\\\\n}\\\\n\\\\nconst ThirdElementFormatter = (data: IThirdElementValue) => {\\\\n  switch (data?.type) {\\\\n    case 'calendar':\\\\n      return data.value\\\\n    default:\\\\n      return data?.label || data.value\\\\n  }\\\\n}\\\\n\\\\nexport const withPlayGround = () => (\\\\n  <ThemeWrapper>\\\\n    <AdvancedFilter\\\\n      showOpen={boolean('show Open', false)}\\\\n      backButton={boolean('back Button', false)}\\\\n      masterCondition={boolean('show Condition', true)}\\\\n      allowSort={boolean('show Sort', true)}\\\\n      allowFavourites={boolean('show favourites', true)}\\\\n      allowMultipleFilters={boolean('show Multiple Filters', true)}\\\\n      backButtonCallback={() => action('Back Button clicked')}\\\\n      chipsArray={object('preDefinedArrays', filterData)}\\\\n      dropDownOptions={object('columns Data', columnsStructure)}\\\\n      fieldOperation={object('operation Type', operationTypes)}\\\\n      onApply={(filterObject: any) => action('Apply clicked')(filterObject)}\\\\n      onRemove={(filterObject: any) =>\\\\n        action('on Remove Clicked')(filterObject)\\\\n      }\\\\n      onDelete={(filterObject: any) => action('Delete Clicked')(filterObject)}\\\\n      onSave={(filterObject: any) => action('on Save clicked')(filterObject)}\\\\n      onUpdate={(filterObject: any) =>\\\\n        action('on Update clicked')(filterObject)\\\\n      }\\\\n      appliedFilterId={text('AppliedFilterId', '5f92b95637c24c28eb950447')}\\\\n      onFavourite={(filterObject: any) =>\\\\n        action('Favourites CLicked')(filterObject)\\\\n      }\\\\n      onAddFilter={action('Add Filter Called')}\\\\n      onAddCondition={action('Add Condition Called')}\\\\n      ThirdElement={ThirdElement}\\\\n      ThirdElementFormatter={ThirdElementFormatter}\\\\n      saveTooltip='Save'\\\\n      duplicateTooltip='Create Duplicate'\\\\n      cancelTooltip='Cancel'\\\\n      removeFavouriteTooltip='Remove Favourite'\\\\n      markAsfavouriteTooltip='Mark as Favourite'\\\\n      style={{\\\\n        position: 'absolute',\\\\n        left: '0px'\\\\n      }}\\\\n    >\\\\n      {({ open, setOpen, chips }: tAdvancedFilterChildren) => (\\\\n        <>\\\\n          <IconButton\\\\n            onClick={() => setOpen && setOpen(!open)}\\\\n            intent='default'\\\\n            iconVariant='icomoon-funel'\\\\n            children={'Advanced Filter ' + chips?.length}\\\\n          />\\\\n        </>\\\\n      )}\\\\n    </AdvancedFilter>\\\\n  </ThemeWrapper>\\\\n)\\\\n\\\",\\\"locationsMap\\\":{}},},\\n  title: `${path}/AdvancedFilter`,\\n  decorators: [withKnobs],\\n  component: AdvancedFilter\\n}\\n\\nconst ThirdElementFormatter = (data: IThirdElementValue) => {\\n  switch (data?.type) {\\n    case 'calendar':\\n      return data.value\\n    default:\\n      return data?.label || data.value\\n  }\\n}\\n\\nexport const withPlayGround = addSourceDecorator(addSourceDecorator(() => (\\n  <ThemeWrapper>\\n    <AdvancedFilter\\n      showOpen={boolean('show Open', false)}\\n      backButton={boolean('back Button', false)}\\n      masterCondition={boolean('show Condition', true)}\\n      allowSort={boolean('show Sort', true)}\\n      allowFavourites={boolean('show favourites', true)}\\n      allowMultipleFilters={boolean('show Multiple Filters', true)}\\n      backButtonCallback={() => action('Back Button clicked')}\\n      chipsArray={object('preDefinedArrays', filterData)}\\n      dropDownOptions={object('columns Data', columnsStructure)}\\n      fieldOperation={object('operation Type', operationTypes)}\\n      onApply={(filterObject: any) => action('Apply clicked')(filterObject)}\\n      onRemove={(filterObject: any) =>\\n        action('on Remove Clicked')(filterObject)\\n      }\\n      onDelete={(filterObject: any) => action('Delete Clicked')(filterObject)}\\n      onSave={(filterObject: any) => action('on Save clicked')(filterObject)}\\n      onUpdate={(filterObject: any) =>\\n        action('on Update clicked')(filterObject)\\n      }\\n      appliedFilterId={text('AppliedFilterId', '5f92b95637c24c28eb950447')}\\n      onFavourite={(filterObject: any) =>\\n        action('Favourites CLicked')(filterObject)\\n      }\\n      onAddFilter={action('Add Filter Called')}\\n      onAddCondition={action('Add Condition Called')}\\n      ThirdElement={ThirdElement}\\n      ThirdElementFormatter={ThirdElementFormatter}\\n      saveTooltip='Save'\\n      duplicateTooltip='Create Duplicate'\\n      cancelTooltip='Cancel'\\n      removeFavouriteTooltip='Remove Favourite'\\n      markAsfavouriteTooltip='Mark as Favourite'\\n      style={{\\n        position: 'absolute',\\n        left: '0px'\\n      }}\\n    >\\n      {({ open, setOpen, chips }: tAdvancedFilterChildren) => (\\n        <>\\n          <IconButton\\n            onClick={() => setOpen && setOpen(!open)}\\n            intent='default'\\n            iconVariant='icomoon-funel'\\n            children={'Advanced Filter ' + chips?.length}\\n          />\\n        </>\\n      )}\\n    </AdvancedFilter>\\n  </ThemeWrapper>\\n), {__STORY__, __ADDS_MAP__,__MAIN_FILE_LOCATION__,__MODULE_DEPENDENCIES__,__LOCAL_DEPENDENCIES__,__SOURCE_PREFIX__,__IDS_TO_FRAMEWORKS__}), {__STORY__, __ADDS_MAP__,__MAIN_FILE_LOCATION__,__MODULE_DEPENDENCIES__,__LOCAL_DEPENDENCIES__,__SOURCE_PREFIX__,__IDS_TO_FRAMEWORKS__});\"; // @ts-ignore\n\nvar __ADDS_MAP__ = {}; // @ts-ignore\n\nvar __MAIN_FILE_LOCATION__ = \"/AdvancedFilter.stories.tsx\"; // @ts-ignore\n\nvar __MODULE_DEPENDENCIES__ = []; // @ts-ignore\n\nvar __LOCAL_DEPENDENCIES__ = {}; // @ts-ignore\n\nvar __IDS_TO_FRAMEWORKS__ = {};\n/* eslint-disable */\n// @ts-nocheck\n// @ts-ignore\n\nvar withSourceLoader = require('@storybook/source-loader/preview').withSource; // @ts-ignore\n\n\nvar addSourceDecorator = require(\"@storybook/source-loader/preview\").addSource; // @ts-ignore\n\n\nvar __SOURCE_PREFIX__ = \"/Users/farhanansari/Desktop/CODE/PrxProject/untitled folder/reactStoryBook/src/components/organisms/AdvancedFilter\"; // @ts-ignore\n\nvar __STORY__ = \"\\n\\n// @ts-nocheck\\n// @ts-ignore\\nvar withSourceLoader = require('@storybook/source-loader/preview').withSource;\\n// @ts-ignore\\nvar addSourceDecorator = require(\\\"@storybook/source-loader/preview\\\").addSource;\\n// @ts-ignore\\nvar __SOURCE_PREFIX__ = \\\"/Users/farhanansari/Desktop/CODE/PrxProject/untitled folder/reactStoryBook/src/components/organisms/AdvancedFilter\\\";\\n// @ts-ignore\\nvar __STORY__ = \\\"import React from 'react'\\\\nimport { path } from '..'\\\\nimport { withKnobs, boolean, object, text } from '@storybook/addon-knobs'\\\\nimport AdvancedFilter from '.'\\\\nimport ThemeWrapper from '../../../utilities/components/ThemeWrapper'\\\\nimport { IThirdElementValue, tAdvancedFilterChildren } from './interfaces'\\\\nimport { action } from '@storybook/addon-actions'\\\\nimport IconButton from '../../atoms/IconButton'\\\\nimport operationTypes from './Data/operationType'\\\\nimport columnsStructure from './Data/columnsStructure'\\\\nimport filterData from './Data/filterData'\\\\nimport ThirdElement from './ThirdElement/index'\\\\n\\\\nexport default {\\\\n  title: `${path}/AdvancedFilter`,\\\\n  decorators: [withKnobs],\\\\n  component: AdvancedFilter\\\\n}\\\\n\\\\nconst ThirdElementFormatter = (data: IThirdElementValue) => {\\\\n  switch (data?.type) {\\\\n    case 'calendar':\\\\n      return data.value\\\\n    default:\\\\n      return data?.label || data.value\\\\n  }\\\\n}\\\\n\\\\nexport const withPlayGround = () => (\\\\n  <ThemeWrapper>\\\\n    <AdvancedFilter\\\\n      showOpen={boolean('show Open', false)}\\\\n      backButton={boolean('back Button', false)}\\\\n      masterCondition={boolean('show Condition', true)}\\\\n      allowSort={boolean('show Sort', true)}\\\\n      allowFavourites={boolean('show favourites', true)}\\\\n      allowMultipleFilters={boolean('show Multiple Filters', true)}\\\\n      backButtonCallback={() => action('Back Button clicked')}\\\\n      chipsArray={object('preDefinedArrays', filterData)}\\\\n      dropDownOptions={object('columns Data', columnsStructure)}\\\\n      fieldOperation={object('operation Type', operationTypes)}\\\\n      onApply={(filterObject: any) => action('Apply clicked')(filterObject)}\\\\n      onRemove={(filterObject: any) =>\\\\n        action('on Remove Clicked')(filterObject)\\\\n      }\\\\n      onDelete={(filterObject: any) => action('Delete Clicked')(filterObject)}\\\\n      onSave={(filterObject: any) => action('on Save clicked')(filterObject)}\\\\n      onUpdate={(filterObject: any) =>\\\\n        action('on Update clicked')(filterObject)\\\\n      }\\\\n      appliedFilterId={text('AppliedFilterId', '5f92b95637c24c28eb950447')}\\\\n      onFavourite={(filterObject: any) =>\\\\n        action('Favourites CLicked')(filterObject)\\\\n      }\\\\n      onAddFilter={action('Add Filter Called')}\\\\n      onAddCondition={action('Add Condition Called')}\\\\n      ThirdElement={ThirdElement}\\\\n      ThirdElementFormatter={ThirdElementFormatter}\\\\n      saveTooltip='Save'\\\\n      duplicateTooltip='Create Duplicate'\\\\n      cancelTooltip='Cancel'\\\\n      removeFavouriteTooltip='Remove Favourite'\\\\n      markAsfavouriteTooltip='Mark as Favourite'\\\\n      style={{\\\\n        position: 'absolute',\\\\n        left: '0px'\\\\n      }}\\\\n    >\\\\n      {({ open, setOpen, chips }: tAdvancedFilterChildren) => (\\\\n        <>\\\\n          <IconButton\\\\n            onClick={() => setOpen && setOpen(!open)}\\\\n            intent='default'\\\\n            iconVariant='icomoon-funel'\\\\n            children={'Advanced Filter ' + chips?.length}\\\\n          />\\\\n        </>\\\\n      )}\\\\n    </AdvancedFilter>\\\\n  </ThemeWrapper>\\\\n)\\\\n\\\";\\n// @ts-ignore\\nvar __ADDS_MAP__ = {};\\n// @ts-ignore\\nvar __MAIN_FILE_LOCATION__ = \\\"/AdvancedFilter.stories.tsx\\\";\\n// @ts-ignore\\nvar __MODULE_DEPENDENCIES__ = [];\\n// @ts-ignore\\nvar __LOCAL_DEPENDENCIES__ = {};\\n// @ts-ignore\\nvar __IDS_TO_FRAMEWORKS__ = {};\\n        \\nimport React from 'react'\\nimport { path } from '..'\\nimport { withKnobs, boolean, object, text } from '@storybook/addon-knobs'\\nimport AdvancedFilter from '.'\\nimport ThemeWrapper from '../../../utilities/components/ThemeWrapper'\\nimport { IThirdElementValue, tAdvancedFilterChildren } from './interfaces'\\nimport { action } from '@storybook/addon-actions'\\nimport IconButton from '../../atoms/IconButton'\\nimport operationTypes from './Data/operationType'\\nimport columnsStructure from './Data/columnsStructure'\\nimport filterData from './Data/filterData'\\nimport ThirdElement from './ThirdElement/index'\\n\\nexport default {parameters: {\\\"storySource\\\":{\\\"source\\\":\\\"import React from 'react'\\\\nimport { path } from '..'\\\\nimport { withKnobs, boolean, object, text } from '@storybook/addon-knobs'\\\\nimport AdvancedFilter from '.'\\\\nimport ThemeWrapper from '../../../utilities/components/ThemeWrapper'\\\\nimport { IThirdElementValue, tAdvancedFilterChildren } from './interfaces'\\\\nimport { action } from '@storybook/addon-actions'\\\\nimport IconButton from '../../atoms/IconButton'\\\\nimport operationTypes from './Data/operationType'\\\\nimport columnsStructure from './Data/columnsStructure'\\\\nimport filterData from './Data/filterData'\\\\nimport ThirdElement from './ThirdElement/index'\\\\n\\\\nexport default {\\\\n  title: `${path}/AdvancedFilter`,\\\\n  decorators: [withKnobs],\\\\n  component: AdvancedFilter\\\\n}\\\\n\\\\nconst ThirdElementFormatter = (data: IThirdElementValue) => {\\\\n  switch (data?.type) {\\\\n    case 'calendar':\\\\n      return data.value\\\\n    default:\\\\n      return data?.label || data.value\\\\n  }\\\\n}\\\\n\\\\nexport const withPlayGround = () => (\\\\n  <ThemeWrapper>\\\\n    <AdvancedFilter\\\\n      showOpen={boolean('show Open', false)}\\\\n      backButton={boolean('back Button', false)}\\\\n      masterCondition={boolean('show Condition', true)}\\\\n      allowSort={boolean('show Sort', true)}\\\\n      allowFavourites={boolean('show favourites', true)}\\\\n      allowMultipleFilters={boolean('show Multiple Filters', true)}\\\\n      backButtonCallback={() => action('Back Button clicked')}\\\\n      chipsArray={object('preDefinedArrays', filterData)}\\\\n      dropDownOptions={object('columns Data', columnsStructure)}\\\\n      fieldOperation={object('operation Type', operationTypes)}\\\\n      onApply={(filterObject: any) => action('Apply clicked')(filterObject)}\\\\n      onRemove={(filterObject: any) =>\\\\n        action('on Remove Clicked')(filterObject)\\\\n      }\\\\n      onDelete={(filterObject: any) => action('Delete Clicked')(filterObject)}\\\\n      onSave={(filterObject: any) => action('on Save clicked')(filterObject)}\\\\n      onUpdate={(filterObject: any) =>\\\\n        action('on Update clicked')(filterObject)\\\\n      }\\\\n      appliedFilterId={text('AppliedFilterId', '5f92b95637c24c28eb950447')}\\\\n      onFavourite={(filterObject: any) =>\\\\n        action('Favourites CLicked')(filterObject)\\\\n      }\\\\n      onAddFilter={action('Add Filter Called')}\\\\n      onAddCondition={action('Add Condition Called')}\\\\n      ThirdElement={ThirdElement}\\\\n      ThirdElementFormatter={ThirdElementFormatter}\\\\n      saveTooltip='Save'\\\\n      duplicateTooltip='Create Duplicate'\\\\n      cancelTooltip='Cancel'\\\\n      removeFavouriteTooltip='Remove Favourite'\\\\n      markAsfavouriteTooltip='Mark as Favourite'\\\\n      style={{\\\\n        position: 'absolute',\\\\n        left: '0px'\\\\n      }}\\\\n    >\\\\n      {({ open, setOpen, chips }: tAdvancedFilterChildren) => (\\\\n        <>\\\\n          <IconButton\\\\n            onClick={() => setOpen && setOpen(!open)}\\\\n            intent='default'\\\\n            iconVariant='icomoon-funel'\\\\n            children={'Advanced Filter ' + chips?.length}\\\\n          />\\\\n        </>\\\\n      )}\\\\n    </AdvancedFilter>\\\\n  </ThemeWrapper>\\\\n)\\\\n\\\",\\\"locationsMap\\\":{}},},\\n  title: `${path}/AdvancedFilter`,\\n  decorators: [withKnobs],\\n  component: AdvancedFilter\\n}\\n\\nconst ThirdElementFormatter = (data: IThirdElementValue) => {\\n  switch (data?.type) {\\n    case 'calendar':\\n      return data.value\\n    default:\\n      return data?.label || data.value\\n  }\\n}\\n\\nexport const withPlayGround = addSourceDecorator(() => (\\n  <ThemeWrapper>\\n    <AdvancedFilter\\n      showOpen={boolean('show Open', false)}\\n      backButton={boolean('back Button', false)}\\n      masterCondition={boolean('show Condition', true)}\\n      allowSort={boolean('show Sort', true)}\\n      allowFavourites={boolean('show favourites', true)}\\n      allowMultipleFilters={boolean('show Multiple Filters', true)}\\n      backButtonCallback={() => action('Back Button clicked')}\\n      chipsArray={object('preDefinedArrays', filterData)}\\n      dropDownOptions={object('columns Data', columnsStructure)}\\n      fieldOperation={object('operation Type', operationTypes)}\\n      onApply={(filterObject: any) => action('Apply clicked')(filterObject)}\\n      onRemove={(filterObject: any) =>\\n        action('on Remove Clicked')(filterObject)\\n      }\\n      onDelete={(filterObject: any) => action('Delete Clicked')(filterObject)}\\n      onSave={(filterObject: any) => action('on Save clicked')(filterObject)}\\n      onUpdate={(filterObject: any) =>\\n        action('on Update clicked')(filterObject)\\n      }\\n      appliedFilterId={text('AppliedFilterId', '5f92b95637c24c28eb950447')}\\n      onFavourite={(filterObject: any) =>\\n        action('Favourites CLicked')(filterObject)\\n      }\\n      onAddFilter={action('Add Filter Called')}\\n      onAddCondition={action('Add Condition Called')}\\n      ThirdElement={ThirdElement}\\n      ThirdElementFormatter={ThirdElementFormatter}\\n      saveTooltip='Save'\\n      duplicateTooltip='Create Duplicate'\\n      cancelTooltip='Cancel'\\n      removeFavouriteTooltip='Remove Favourite'\\n      markAsfavouriteTooltip='Mark as Favourite'\\n      style={{\\n        position: 'absolute',\\n        left: '0px'\\n      }}\\n    >\\n      {({ open, setOpen, chips }: tAdvancedFilterChildren) => (\\n        <>\\n          <IconButton\\n            onClick={() => setOpen && setOpen(!open)}\\n            intent='default'\\n            iconVariant='icomoon-funel'\\n            children={'Advanced Filter ' + chips?.length}\\n          />\\n        </>\\n      )}\\n    </AdvancedFilter>\\n  </ThemeWrapper>\\n), {__STORY__, __ADDS_MAP__,__MAIN_FILE_LOCATION__,__MODULE_DEPENDENCIES__,__LOCAL_DEPENDENCIES__,__SOURCE_PREFIX__,__IDS_TO_FRAMEWORKS__});\"; // @ts-ignore\n\nvar __ADDS_MAP__ = {}; // @ts-ignore\n\nvar __MAIN_FILE_LOCATION__ = \"/AdvancedFilter.stories.tsx\"; // @ts-ignore\n\nvar __MODULE_DEPENDENCIES__ = []; // @ts-ignore\n\nvar __LOCAL_DEPENDENCIES__ = {}; // @ts-ignore\n\nvar __IDS_TO_FRAMEWORKS__ = {};\n/* eslint-disable */\n// @ts-nocheck\n// @ts-ignore\n\nvar withSourceLoader = require('@storybook/source-loader/preview').withSource; // @ts-ignore\n\n\nvar addSourceDecorator = require(\"@storybook/source-loader/preview\").addSource; // @ts-ignore\n\n\nvar __SOURCE_PREFIX__ = \"/Users/farhanansari/Desktop/CODE/PrxProject/untitled folder/reactStoryBook/src/components/organisms/AdvancedFilter\"; // @ts-ignore\n\nvar __STORY__ = \"import React from 'react'\\nimport { path } from '..'\\nimport { withKnobs, boolean, object, text } from '@storybook/addon-knobs'\\nimport AdvancedFilter from '.'\\nimport ThemeWrapper from '../../../utilities/components/ThemeWrapper'\\nimport { IThirdElementValue, tAdvancedFilterChildren } from './interfaces'\\nimport { action } from '@storybook/addon-actions'\\nimport IconButton from '../../atoms/IconButton'\\nimport operationTypes from './Data/operationType'\\nimport columnsStructure from './Data/columnsStructure'\\nimport filterData from './Data/filterData'\\nimport ThirdElement from './ThirdElement/index'\\n\\nexport default {\\n  title: `${path}/AdvancedFilter`,\\n  decorators: [withKnobs],\\n  component: AdvancedFilter\\n}\\n\\nconst ThirdElementFormatter = (data: IThirdElementValue) => {\\n  switch (data?.type) {\\n    case 'calendar':\\n      return data.value\\n    default:\\n      return data?.label || data.value\\n  }\\n}\\n\\nexport const withPlayGround = () => (\\n  <ThemeWrapper>\\n    <AdvancedFilter\\n      showOpen={boolean('show Open', false)}\\n      backButton={boolean('back Button', false)}\\n      masterCondition={boolean('show Condition', true)}\\n      allowSort={boolean('show Sort', true)}\\n      allowFavourites={boolean('show favourites', true)}\\n      allowMultipleFilters={boolean('show Multiple Filters', true)}\\n      backButtonCallback={() => action('Back Button clicked')}\\n      chipsArray={object('preDefinedArrays', filterData)}\\n      dropDownOptions={object('columns Data', columnsStructure)}\\n      fieldOperation={object('operation Type', operationTypes)}\\n      onApply={(filterObject: any) => action('Apply clicked')(filterObject)}\\n      onRemove={(filterObject: any) =>\\n        action('on Remove Clicked')(filterObject)\\n      }\\n      onDelete={(filterObject: any) => action('Delete Clicked')(filterObject)}\\n      onSave={(filterObject: any) => action('on Save clicked')(filterObject)}\\n      onUpdate={(filterObject: any) =>\\n        action('on Update clicked')(filterObject)\\n      }\\n      appliedFilterId={text('AppliedFilterId', '5f92b95637c24c28eb950447')}\\n      onFavourite={(filterObject: any) =>\\n        action('Favourites CLicked')(filterObject)\\n      }\\n      onAddFilter={action('Add Filter Called')}\\n      onAddCondition={action('Add Condition Called')}\\n      ThirdElement={ThirdElement}\\n      ThirdElementFormatter={ThirdElementFormatter}\\n      saveTooltip='Save'\\n      duplicateTooltip='Create Duplicate'\\n      cancelTooltip='Cancel'\\n      removeFavouriteTooltip='Remove Favourite'\\n      markAsfavouriteTooltip='Mark as Favourite'\\n      style={{\\n        position: 'absolute',\\n        left: '0px'\\n      }}\\n    >\\n      {({ open, setOpen, chips }: tAdvancedFilterChildren) => (\\n        <>\\n          <IconButton\\n            onClick={() => setOpen && setOpen(!open)}\\n            intent='default'\\n            iconVariant='icomoon-funel'\\n            children={'Advanced Filter ' + chips?.length}\\n          />\\n        </>\\n      )}\\n    </AdvancedFilter>\\n  </ThemeWrapper>\\n)\\n\"; // @ts-ignore\n\nvar __ADDS_MAP__ = {}; // @ts-ignore\n\nvar __MAIN_FILE_LOCATION__ = \"/AdvancedFilter.stories.tsx\"; // @ts-ignore\n\nvar __MODULE_DEPENDENCIES__ = []; // @ts-ignore\n\nvar __LOCAL_DEPENDENCIES__ = {}; // @ts-ignore\n\nvar __IDS_TO_FRAMEWORKS__ = {};\nimport React from 'react';\nimport { path } from '..';\nimport { withKnobs, boolean as _boolean, object, text } from '@storybook/addon-knobs';\nimport AdvancedFilter from '.';\nimport ThemeWrapper from '../../../utilities/components/ThemeWrapper';\nimport { action } from '@storybook/addon-actions';\nimport IconButton from '../../atoms/IconButton';\nimport operationTypes from './Data/operationType';\nimport columnsStructure from './Data/columnsStructure';\nimport filterData from './Data/filterData';\nimport ThirdElement from './ThirdElement/index';\nexport default {\n  parameters: (_parameters = {\n    \"storySource\": {\n      \"source\": \"\\n\\n// @ts-nocheck\\n// @ts-ignore\\nvar withSourceLoader = require('@storybook/source-loader/preview').withSource;\\n// @ts-ignore\\nvar addSourceDecorator = require(\\\"@storybook/source-loader/preview\\\").addSource;\\n// @ts-ignore\\nvar __SOURCE_PREFIX__ = \\\"/Users/farhanansari/Desktop/CODE/PrxProject/untitled folder/reactStoryBook/src/components/organisms/AdvancedFilter\\\";\\n// @ts-ignore\\nvar __STORY__ = \\\"\\\\n\\\\n// @ts-nocheck\\\\n// @ts-ignore\\\\nvar withSourceLoader = require('@storybook/source-loader/preview').withSource;\\\\n// @ts-ignore\\\\nvar addSourceDecorator = require(\\\\\\\"@storybook/source-loader/preview\\\\\\\").addSource;\\\\n// @ts-ignore\\\\nvar __SOURCE_PREFIX__ = \\\\\\\"/Users/farhanansari/Desktop/CODE/PrxProject/untitled folder/reactStoryBook/src/components/organisms/AdvancedFilter\\\\\\\";\\\\n// @ts-ignore\\\\nvar __STORY__ = \\\\\\\"import React from 'react'\\\\\\\\nimport { path } from '..'\\\\\\\\nimport { withKnobs, boolean, object, text } from '@storybook/addon-knobs'\\\\\\\\nimport AdvancedFilter from '.'\\\\\\\\nimport ThemeWrapper from '../../../utilities/components/ThemeWrapper'\\\\\\\\nimport { IThirdElementValue, tAdvancedFilterChildren } from './interfaces'\\\\\\\\nimport { action } from '@storybook/addon-actions'\\\\\\\\nimport IconButton from '../../atoms/IconButton'\\\\\\\\nimport operationTypes from './Data/operationType'\\\\\\\\nimport columnsStructure from './Data/columnsStructure'\\\\\\\\nimport filterData from './Data/filterData'\\\\\\\\nimport ThirdElement from './ThirdElement/index'\\\\\\\\n\\\\\\\\nexport default {\\\\\\\\n  title: `${path}/AdvancedFilter`,\\\\\\\\n  decorators: [withKnobs],\\\\\\\\n  component: AdvancedFilter\\\\\\\\n}\\\\\\\\n\\\\\\\\nconst ThirdElementFormatter = (data: IThirdElementValue) => {\\\\\\\\n  switch (data?.type) {\\\\\\\\n    case 'calendar':\\\\\\\\n      return data.value\\\\\\\\n    default:\\\\\\\\n      return data?.label || data.value\\\\\\\\n  }\\\\\\\\n}\\\\\\\\n\\\\\\\\nexport const withPlayGround = () => (\\\\\\\\n  <ThemeWrapper>\\\\\\\\n    <AdvancedFilter\\\\\\\\n      showOpen={boolean('show Open', false)}\\\\\\\\n      backButton={boolean('back Button', false)}\\\\\\\\n      masterCondition={boolean('show Condition', true)}\\\\\\\\n      allowSort={boolean('show Sort', true)}\\\\\\\\n      allowFavourites={boolean('show favourites', true)}\\\\\\\\n      allowMultipleFilters={boolean('show Multiple Filters', true)}\\\\\\\\n      backButtonCallback={() => action('Back Button clicked')}\\\\\\\\n      chipsArray={object('preDefinedArrays', filterData)}\\\\\\\\n      dropDownOptions={object('columns Data', columnsStructure)}\\\\\\\\n      fieldOperation={object('operation Type', operationTypes)}\\\\\\\\n      onApply={(filterObject: any) => action('Apply clicked')(filterObject)}\\\\\\\\n      onRemove={(filterObject: any) =>\\\\\\\\n        action('on Remove Clicked')(filterObject)\\\\\\\\n      }\\\\\\\\n      onDelete={(filterObject: any) => action('Delete Clicked')(filterObject)}\\\\\\\\n      onSave={(filterObject: any) => action('on Save clicked')(filterObject)}\\\\\\\\n      onUpdate={(filterObject: any) =>\\\\\\\\n        action('on Update clicked')(filterObject)\\\\\\\\n      }\\\\\\\\n      appliedFilterId={text('AppliedFilterId', '5f92b95637c24c28eb950447')}\\\\\\\\n      onFavourite={(filterObject: any) =>\\\\\\\\n        action('Favourites CLicked')(filterObject)\\\\\\\\n      }\\\\\\\\n      onAddFilter={action('Add Filter Called')}\\\\\\\\n      onAddCondition={action('Add Condition Called')}\\\\\\\\n      ThirdElement={ThirdElement}\\\\\\\\n      ThirdElementFormatter={ThirdElementFormatter}\\\\\\\\n      saveTooltip='Save'\\\\\\\\n      duplicateTooltip='Create Duplicate'\\\\\\\\n      cancelTooltip='Cancel'\\\\\\\\n      removeFavouriteTooltip='Remove Favourite'\\\\\\\\n      markAsfavouriteTooltip='Mark as Favourite'\\\\\\\\n      style={{\\\\\\\\n        position: 'absolute',\\\\\\\\n        left: '0px'\\\\\\\\n      }}\\\\\\\\n    >\\\\\\\\n      {({ open, setOpen, chips }: tAdvancedFilterChildren) => (\\\\\\\\n        <>\\\\\\\\n          <IconButton\\\\\\\\n            onClick={() => setOpen && setOpen(!open)}\\\\\\\\n            intent='default'\\\\\\\\n            iconVariant='icomoon-funel'\\\\\\\\n            children={'Advanced Filter ' + chips?.length}\\\\\\\\n          />\\\\\\\\n        </>\\\\\\\\n      )}\\\\\\\\n    </AdvancedFilter>\\\\\\\\n  </ThemeWrapper>\\\\\\\\n)\\\\\\\\n\\\\\\\";\\\\n// @ts-ignore\\\\nvar __ADDS_MAP__ = {};\\\\n// @ts-ignore\\\\nvar __MAIN_FILE_LOCATION__ = \\\\\\\"/AdvancedFilter.stories.tsx\\\\\\\";\\\\n// @ts-ignore\\\\nvar __MODULE_DEPENDENCIES__ = [];\\\\n// @ts-ignore\\\\nvar __LOCAL_DEPENDENCIES__ = {};\\\\n// @ts-ignore\\\\nvar __IDS_TO_FRAMEWORKS__ = {};\\\\n        \\\\nimport React from 'react'\\\\nimport { path } from '..'\\\\nimport { withKnobs, boolean, object, text } from '@storybook/addon-knobs'\\\\nimport AdvancedFilter from '.'\\\\nimport ThemeWrapper from '../../../utilities/components/ThemeWrapper'\\\\nimport { IThirdElementValue, tAdvancedFilterChildren } from './interfaces'\\\\nimport { action } from '@storybook/addon-actions'\\\\nimport IconButton from '../../atoms/IconButton'\\\\nimport operationTypes from './Data/operationType'\\\\nimport columnsStructure from './Data/columnsStructure'\\\\nimport filterData from './Data/filterData'\\\\nimport ThirdElement from './ThirdElement/index'\\\\n\\\\nexport default {parameters: {\\\\\\\"storySource\\\\\\\":{\\\\\\\"source\\\\\\\":\\\\\\\"import React from 'react'\\\\\\\\nimport { path } from '..'\\\\\\\\nimport { withKnobs, boolean, object, text } from '@storybook/addon-knobs'\\\\\\\\nimport AdvancedFilter from '.'\\\\\\\\nimport ThemeWrapper from '../../../utilities/components/ThemeWrapper'\\\\\\\\nimport { IThirdElementValue, tAdvancedFilterChildren } from './interfaces'\\\\\\\\nimport { action } from '@storybook/addon-actions'\\\\\\\\nimport IconButton from '../../atoms/IconButton'\\\\\\\\nimport operationTypes from './Data/operationType'\\\\\\\\nimport columnsStructure from './Data/columnsStructure'\\\\\\\\nimport filterData from './Data/filterData'\\\\\\\\nimport ThirdElement from './ThirdElement/index'\\\\\\\\n\\\\\\\\nexport default {\\\\\\\\n  title: `${path}/AdvancedFilter`,\\\\\\\\n  decorators: [withKnobs],\\\\\\\\n  component: AdvancedFilter\\\\\\\\n}\\\\\\\\n\\\\\\\\nconst ThirdElementFormatter = (data: IThirdElementValue) => {\\\\\\\\n  switch (data?.type) {\\\\\\\\n    case 'calendar':\\\\\\\\n      return data.value\\\\\\\\n    default:\\\\\\\\n      return data?.label || data.value\\\\\\\\n  }\\\\\\\\n}\\\\\\\\n\\\\\\\\nexport const withPlayGround = () => (\\\\\\\\n  <ThemeWrapper>\\\\\\\\n    <AdvancedFilter\\\\\\\\n      showOpen={boolean('show Open', false)}\\\\\\\\n      backButton={boolean('back Button', false)}\\\\\\\\n      masterCondition={boolean('show Condition', true)}\\\\\\\\n      allowSort={boolean('show Sort', true)}\\\\\\\\n      allowFavourites={boolean('show favourites', true)}\\\\\\\\n      allowMultipleFilters={boolean('show Multiple Filters', true)}\\\\\\\\n      backButtonCallback={() => action('Back Button clicked')}\\\\\\\\n      chipsArray={object('preDefinedArrays', filterData)}\\\\\\\\n      dropDownOptions={object('columns Data', columnsStructure)}\\\\\\\\n      fieldOperation={object('operation Type', operationTypes)}\\\\\\\\n      onApply={(filterObject: any) => action('Apply clicked')(filterObject)}\\\\\\\\n      onRemove={(filterObject: any) =>\\\\\\\\n        action('on Remove Clicked')(filterObject)\\\\\\\\n      }\\\\\\\\n      onDelete={(filterObject: any) => action('Delete Clicked')(filterObject)}\\\\\\\\n      onSave={(filterObject: any) => action('on Save clicked')(filterObject)}\\\\\\\\n      onUpdate={(filterObject: any) =>\\\\\\\\n        action('on Update clicked')(filterObject)\\\\\\\\n      }\\\\\\\\n      appliedFilterId={text('AppliedFilterId', '5f92b95637c24c28eb950447')}\\\\\\\\n      onFavourite={(filterObject: any) =>\\\\\\\\n        action('Favourites CLicked')(filterObject)\\\\\\\\n      }\\\\\\\\n      onAddFilter={action('Add Filter Called')}\\\\\\\\n      onAddCondition={action('Add Condition Called')}\\\\\\\\n      ThirdElement={ThirdElement}\\\\\\\\n      ThirdElementFormatter={ThirdElementFormatter}\\\\\\\\n      saveTooltip='Save'\\\\\\\\n      duplicateTooltip='Create Duplicate'\\\\\\\\n      cancelTooltip='Cancel'\\\\\\\\n      removeFavouriteTooltip='Remove Favourite'\\\\\\\\n      markAsfavouriteTooltip='Mark as Favourite'\\\\\\\\n      style={{\\\\\\\\n        position: 'absolute',\\\\\\\\n        left: '0px'\\\\\\\\n      }}\\\\\\\\n    >\\\\\\\\n      {({ open, setOpen, chips }: tAdvancedFilterChildren) => (\\\\\\\\n        <>\\\\\\\\n          <IconButton\\\\\\\\n            onClick={() => setOpen && setOpen(!open)}\\\\\\\\n            intent='default'\\\\\\\\n            iconVariant='icomoon-funel'\\\\\\\\n            children={'Advanced Filter ' + chips?.length}\\\\\\\\n          />\\\\\\\\n        </>\\\\\\\\n      )}\\\\\\\\n    </AdvancedFilter>\\\\\\\\n  </ThemeWrapper>\\\\\\\\n)\\\\\\\\n\\\\\\\",\\\\\\\"locationsMap\\\\\\\":{}},},\\\\n  title: `${path}/AdvancedFilter`,\\\\n  decorators: [withKnobs],\\\\n  component: AdvancedFilter\\\\n}\\\\n\\\\nconst ThirdElementFormatter = (data: IThirdElementValue) => {\\\\n  switch (data?.type) {\\\\n    case 'calendar':\\\\n      return data.value\\\\n    default:\\\\n      return data?.label || data.value\\\\n  }\\\\n}\\\\n\\\\nexport const withPlayGround = addSourceDecorator(() => (\\\\n  <ThemeWrapper>\\\\n    <AdvancedFilter\\\\n      showOpen={boolean('show Open', false)}\\\\n      backButton={boolean('back Button', false)}\\\\n      masterCondition={boolean('show Condition', true)}\\\\n      allowSort={boolean('show Sort', true)}\\\\n      allowFavourites={boolean('show favourites', true)}\\\\n      allowMultipleFilters={boolean('show Multiple Filters', true)}\\\\n      backButtonCallback={() => action('Back Button clicked')}\\\\n      chipsArray={object('preDefinedArrays', filterData)}\\\\n      dropDownOptions={object('columns Data', columnsStructure)}\\\\n      fieldOperation={object('operation Type', operationTypes)}\\\\n      onApply={(filterObject: any) => action('Apply clicked')(filterObject)}\\\\n      onRemove={(filterObject: any) =>\\\\n        action('on Remove Clicked')(filterObject)\\\\n      }\\\\n      onDelete={(filterObject: any) => action('Delete Clicked')(filterObject)}\\\\n      onSave={(filterObject: any) => action('on Save clicked')(filterObject)}\\\\n      onUpdate={(filterObject: any) =>\\\\n        action('on Update clicked')(filterObject)\\\\n      }\\\\n      appliedFilterId={text('AppliedFilterId', '5f92b95637c24c28eb950447')}\\\\n      onFavourite={(filterObject: any) =>\\\\n        action('Favourites CLicked')(filterObject)\\\\n      }\\\\n      onAddFilter={action('Add Filter Called')}\\\\n      onAddCondition={action('Add Condition Called')}\\\\n      ThirdElement={ThirdElement}\\\\n      ThirdElementFormatter={ThirdElementFormatter}\\\\n      saveTooltip='Save'\\\\n      duplicateTooltip='Create Duplicate'\\\\n      cancelTooltip='Cancel'\\\\n      removeFavouriteTooltip='Remove Favourite'\\\\n      markAsfavouriteTooltip='Mark as Favourite'\\\\n      style={{\\\\n        position: 'absolute',\\\\n        left: '0px'\\\\n      }}\\\\n    >\\\\n      {({ open, setOpen, chips }: tAdvancedFilterChildren) => (\\\\n        <>\\\\n          <IconButton\\\\n            onClick={() => setOpen && setOpen(!open)}\\\\n            intent='default'\\\\n            iconVariant='icomoon-funel'\\\\n            children={'Advanced Filter ' + chips?.length}\\\\n          />\\\\n        </>\\\\n      )}\\\\n    </AdvancedFilter>\\\\n  </ThemeWrapper>\\\\n), {__STORY__, __ADDS_MAP__,__MAIN_FILE_LOCATION__,__MODULE_DEPENDENCIES__,__LOCAL_DEPENDENCIES__,__SOURCE_PREFIX__,__IDS_TO_FRAMEWORKS__});\\\";\\n// @ts-ignore\\nvar __ADDS_MAP__ = {};\\n// @ts-ignore\\nvar __MAIN_FILE_LOCATION__ = \\\"/AdvancedFilter.stories.tsx\\\";\\n// @ts-ignore\\nvar __MODULE_DEPENDENCIES__ = [];\\n// @ts-ignore\\nvar __LOCAL_DEPENDENCIES__ = {};\\n// @ts-ignore\\nvar __IDS_TO_FRAMEWORKS__ = {};\\n        \\n\\n\\n// @ts-nocheck\\n// @ts-ignore\\nvar withSourceLoader = require('@storybook/source-loader/preview').withSource;\\n// @ts-ignore\\nvar addSourceDecorator = require(\\\"@storybook/source-loader/preview\\\").addSource;\\n// @ts-ignore\\nvar __SOURCE_PREFIX__ = \\\"/Users/farhanansari/Desktop/CODE/PrxProject/untitled folder/reactStoryBook/src/components/organisms/AdvancedFilter\\\";\\n// @ts-ignore\\nvar __STORY__ = \\\"import React from 'react'\\\\nimport { path } from '..'\\\\nimport { withKnobs, boolean, object, text } from '@storybook/addon-knobs'\\\\nimport AdvancedFilter from '.'\\\\nimport ThemeWrapper from '../../../utilities/components/ThemeWrapper'\\\\nimport { IThirdElementValue, tAdvancedFilterChildren } from './interfaces'\\\\nimport { action } from '@storybook/addon-actions'\\\\nimport IconButton from '../../atoms/IconButton'\\\\nimport operationTypes from './Data/operationType'\\\\nimport columnsStructure from './Data/columnsStructure'\\\\nimport filterData from './Data/filterData'\\\\nimport ThirdElement from './ThirdElement/index'\\\\n\\\\nexport default {\\\\n  title: `${path}/AdvancedFilter`,\\\\n  decorators: [withKnobs],\\\\n  component: AdvancedFilter\\\\n}\\\\n\\\\nconst ThirdElementFormatter = (data: IThirdElementValue) => {\\\\n  switch (data?.type) {\\\\n    case 'calendar':\\\\n      return data.value\\\\n    default:\\\\n      return data?.label || data.value\\\\n  }\\\\n}\\\\n\\\\nexport const withPlayGround = () => (\\\\n  <ThemeWrapper>\\\\n    <AdvancedFilter\\\\n      showOpen={boolean('show Open', false)}\\\\n      backButton={boolean('back Button', false)}\\\\n      masterCondition={boolean('show Condition', true)}\\\\n      allowSort={boolean('show Sort', true)}\\\\n      allowFavourites={boolean('show favourites', true)}\\\\n      allowMultipleFilters={boolean('show Multiple Filters', true)}\\\\n      backButtonCallback={() => action('Back Button clicked')}\\\\n      chipsArray={object('preDefinedArrays', filterData)}\\\\n      dropDownOptions={object('columns Data', columnsStructure)}\\\\n      fieldOperation={object('operation Type', operationTypes)}\\\\n      onApply={(filterObject: any) => action('Apply clicked')(filterObject)}\\\\n      onRemove={(filterObject: any) =>\\\\n        action('on Remove Clicked')(filterObject)\\\\n      }\\\\n      onDelete={(filterObject: any) => action('Delete Clicked')(filterObject)}\\\\n      onSave={(filterObject: any) => action('on Save clicked')(filterObject)}\\\\n      onUpdate={(filterObject: any) =>\\\\n        action('on Update clicked')(filterObject)\\\\n      }\\\\n      appliedFilterId={text('AppliedFilterId', '5f92b95637c24c28eb950447')}\\\\n      onFavourite={(filterObject: any) =>\\\\n        action('Favourites CLicked')(filterObject)\\\\n      }\\\\n      onAddFilter={action('Add Filter Called')}\\\\n      onAddCondition={action('Add Condition Called')}\\\\n      ThirdElement={ThirdElement}\\\\n      ThirdElementFormatter={ThirdElementFormatter}\\\\n      saveTooltip='Save'\\\\n      duplicateTooltip='Create Duplicate'\\\\n      cancelTooltip='Cancel'\\\\n      removeFavouriteTooltip='Remove Favourite'\\\\n      markAsfavouriteTooltip='Mark as Favourite'\\\\n      style={{\\\\n        position: 'absolute',\\\\n        left: '0px'\\\\n      }}\\\\n    >\\\\n      {({ open, setOpen, chips }: tAdvancedFilterChildren) => (\\\\n        <>\\\\n          <IconButton\\\\n            onClick={() => setOpen && setOpen(!open)}\\\\n            intent='default'\\\\n            iconVariant='icomoon-funel'\\\\n            children={'Advanced Filter ' + chips?.length}\\\\n          />\\\\n        </>\\\\n      )}\\\\n    </AdvancedFilter>\\\\n  </ThemeWrapper>\\\\n)\\\\n\\\";\\n// @ts-ignore\\nvar __ADDS_MAP__ = {};\\n// @ts-ignore\\nvar __MAIN_FILE_LOCATION__ = \\\"/AdvancedFilter.stories.tsx\\\";\\n// @ts-ignore\\nvar __MODULE_DEPENDENCIES__ = [];\\n// @ts-ignore\\nvar __LOCAL_DEPENDENCIES__ = {};\\n// @ts-ignore\\nvar __IDS_TO_FRAMEWORKS__ = {};\\n        \\nimport React from 'react'\\nimport { path } from '..'\\nimport { withKnobs, boolean, object, text } from '@storybook/addon-knobs'\\nimport AdvancedFilter from '.'\\nimport ThemeWrapper from '../../../utilities/components/ThemeWrapper'\\nimport { IThirdElementValue, tAdvancedFilterChildren } from './interfaces'\\nimport { action } from '@storybook/addon-actions'\\nimport IconButton from '../../atoms/IconButton'\\nimport operationTypes from './Data/operationType'\\nimport columnsStructure from './Data/columnsStructure'\\nimport filterData from './Data/filterData'\\nimport ThirdElement from './ThirdElement/index'\\n\\nexport default {parameters: {\\\"storySource\\\":{\\\"source\\\":\\\"\\\\n\\\\n// @ts-nocheck\\\\n// @ts-ignore\\\\nvar withSourceLoader = require('@storybook/source-loader/preview').withSource;\\\\n// @ts-ignore\\\\nvar addSourceDecorator = require(\\\\\\\"@storybook/source-loader/preview\\\\\\\").addSource;\\\\n// @ts-ignore\\\\nvar __SOURCE_PREFIX__ = \\\\\\\"/Users/farhanansari/Desktop/CODE/PrxProject/untitled folder/reactStoryBook/src/components/organisms/AdvancedFilter\\\\\\\";\\\\n// @ts-ignore\\\\nvar __STORY__ = \\\\\\\"import React from 'react'\\\\\\\\nimport { path } from '..'\\\\\\\\nimport { withKnobs, boolean, object, text } from '@storybook/addon-knobs'\\\\\\\\nimport AdvancedFilter from '.'\\\\\\\\nimport ThemeWrapper from '../../../utilities/components/ThemeWrapper'\\\\\\\\nimport { IThirdElementValue, tAdvancedFilterChildren } from './interfaces'\\\\\\\\nimport { action } from '@storybook/addon-actions'\\\\\\\\nimport IconButton from '../../atoms/IconButton'\\\\\\\\nimport operationTypes from './Data/operationType'\\\\\\\\nimport columnsStructure from './Data/columnsStructure'\\\\\\\\nimport filterData from './Data/filterData'\\\\\\\\nimport ThirdElement from './ThirdElement/index'\\\\\\\\n\\\\\\\\nexport default {\\\\\\\\n  title: `${path}/AdvancedFilter`,\\\\\\\\n  decorators: [withKnobs],\\\\\\\\n  component: AdvancedFilter\\\\\\\\n}\\\\\\\\n\\\\\\\\nconst ThirdElementFormatter = (data: IThirdElementValue) => {\\\\\\\\n  switch (data?.type) {\\\\\\\\n    case 'calendar':\\\\\\\\n      return data.value\\\\\\\\n    default:\\\\\\\\n      return data?.label || data.value\\\\\\\\n  }\\\\\\\\n}\\\\\\\\n\\\\\\\\nexport const withPlayGround = () => (\\\\\\\\n  <ThemeWrapper>\\\\\\\\n    <AdvancedFilter\\\\\\\\n      showOpen={boolean('show Open', false)}\\\\\\\\n      backButton={boolean('back Button', false)}\\\\\\\\n      masterCondition={boolean('show Condition', true)}\\\\\\\\n      allowSort={boolean('show Sort', true)}\\\\\\\\n      allowFavourites={boolean('show favourites', true)}\\\\\\\\n      allowMultipleFilters={boolean('show Multiple Filters', true)}\\\\\\\\n      backButtonCallback={() => action('Back Button clicked')}\\\\\\\\n      chipsArray={object('preDefinedArrays', filterData)}\\\\\\\\n      dropDownOptions={object('columns Data', columnsStructure)}\\\\\\\\n      fieldOperation={object('operation Type', operationTypes)}\\\\\\\\n      onApply={(filterObject: any) => action('Apply clicked')(filterObject)}\\\\\\\\n      onRemove={(filterObject: any) =>\\\\\\\\n        action('on Remove Clicked')(filterObject)\\\\\\\\n      }\\\\\\\\n      onDelete={(filterObject: any) => action('Delete Clicked')(filterObject)}\\\\\\\\n      onSave={(filterObject: any) => action('on Save clicked')(filterObject)}\\\\\\\\n      onUpdate={(filterObject: any) =>\\\\\\\\n        action('on Update clicked')(filterObject)\\\\\\\\n      }\\\\\\\\n      appliedFilterId={text('AppliedFilterId', '5f92b95637c24c28eb950447')}\\\\\\\\n      onFavourite={(filterObject: any) =>\\\\\\\\n        action('Favourites CLicked')(filterObject)\\\\\\\\n      }\\\\\\\\n      onAddFilter={action('Add Filter Called')}\\\\\\\\n      onAddCondition={action('Add Condition Called')}\\\\\\\\n      ThirdElement={ThirdElement}\\\\\\\\n      ThirdElementFormatter={ThirdElementFormatter}\\\\\\\\n      saveTooltip='Save'\\\\\\\\n      duplicateTooltip='Create Duplicate'\\\\\\\\n      cancelTooltip='Cancel'\\\\\\\\n      removeFavouriteTooltip='Remove Favourite'\\\\\\\\n      markAsfavouriteTooltip='Mark as Favourite'\\\\\\\\n      style={{\\\\\\\\n        position: 'absolute',\\\\\\\\n        left: '0px'\\\\\\\\n      }}\\\\\\\\n    >\\\\\\\\n      {({ open, setOpen, chips }: tAdvancedFilterChildren) => (\\\\\\\\n        <>\\\\\\\\n          <IconButton\\\\\\\\n            onClick={() => setOpen && setOpen(!open)}\\\\\\\\n            intent='default'\\\\\\\\n            iconVariant='icomoon-funel'\\\\\\\\n            children={'Advanced Filter ' + chips?.length}\\\\\\\\n          />\\\\\\\\n        </>\\\\\\\\n      )}\\\\\\\\n    </AdvancedFilter>\\\\\\\\n  </ThemeWrapper>\\\\\\\\n)\\\\\\\\n\\\\\\\";\\\\n// @ts-ignore\\\\nvar __ADDS_MAP__ = {};\\\\n// @ts-ignore\\\\nvar __MAIN_FILE_LOCATION__ = \\\\\\\"/AdvancedFilter.stories.tsx\\\\\\\";\\\\n// @ts-ignore\\\\nvar __MODULE_DEPENDENCIES__ = [];\\\\n// @ts-ignore\\\\nvar __LOCAL_DEPENDENCIES__ = {};\\\\n// @ts-ignore\\\\nvar __IDS_TO_FRAMEWORKS__ = {};\\\\n        \\\\nimport React from 'react'\\\\nimport { path } from '..'\\\\nimport { withKnobs, boolean, object, text } from '@storybook/addon-knobs'\\\\nimport AdvancedFilter from '.'\\\\nimport ThemeWrapper from '../../../utilities/components/ThemeWrapper'\\\\nimport { IThirdElementValue, tAdvancedFilterChildren } from './interfaces'\\\\nimport { action } from '@storybook/addon-actions'\\\\nimport IconButton from '../../atoms/IconButton'\\\\nimport operationTypes from './Data/operationType'\\\\nimport columnsStructure from './Data/columnsStructure'\\\\nimport filterData from './Data/filterData'\\\\nimport ThirdElement from './ThirdElement/index'\\\\n\\\\nexport default {parameters: {\\\\\\\"storySource\\\\\\\":{\\\\\\\"source\\\\\\\":\\\\\\\"import React from 'react'\\\\\\\\nimport { path } from '..'\\\\\\\\nimport { withKnobs, boolean, object, text } from '@storybook/addon-knobs'\\\\\\\\nimport AdvancedFilter from '.'\\\\\\\\nimport ThemeWrapper from '../../../utilities/components/ThemeWrapper'\\\\\\\\nimport { IThirdElementValue, tAdvancedFilterChildren } from './interfaces'\\\\\\\\nimport { action } from '@storybook/addon-actions'\\\\\\\\nimport IconButton from '../../atoms/IconButton'\\\\\\\\nimport operationTypes from './Data/operationType'\\\\\\\\nimport columnsStructure from './Data/columnsStructure'\\\\\\\\nimport filterData from './Data/filterData'\\\\\\\\nimport ThirdElement from './ThirdElement/index'\\\\\\\\n\\\\\\\\nexport default {\\\\\\\\n  title: `${path}/AdvancedFilter`,\\\\\\\\n  decorators: [withKnobs],\\\\\\\\n  component: AdvancedFilter\\\\\\\\n}\\\\\\\\n\\\\\\\\nconst ThirdElementFormatter = (data: IThirdElementValue) => {\\\\\\\\n  switch (data?.type) {\\\\\\\\n    case 'calendar':\\\\\\\\n      return data.value\\\\\\\\n    default:\\\\\\\\n      return data?.label || data.value\\\\\\\\n  }\\\\\\\\n}\\\\\\\\n\\\\\\\\nexport const withPlayGround = () => (\\\\\\\\n  <ThemeWrapper>\\\\\\\\n    <AdvancedFilter\\\\\\\\n      showOpen={boolean('show Open', false)}\\\\\\\\n      backButton={boolean('back Button', false)}\\\\\\\\n      masterCondition={boolean('show Condition', true)}\\\\\\\\n      allowSort={boolean('show Sort', true)}\\\\\\\\n      allowFavourites={boolean('show favourites', true)}\\\\\\\\n      allowMultipleFilters={boolean('show Multiple Filters', true)}\\\\\\\\n      backButtonCallback={() => action('Back Button clicked')}\\\\\\\\n      chipsArray={object('preDefinedArrays', filterData)}\\\\\\\\n      dropDownOptions={object('columns Data', columnsStructure)}\\\\\\\\n      fieldOperation={object('operation Type', operationTypes)}\\\\\\\\n      onApply={(filterObject: any) => action('Apply clicked')(filterObject)}\\\\\\\\n      onRemove={(filterObject: any) =>\\\\\\\\n        action('on Remove Clicked')(filterObject)\\\\\\\\n      }\\\\\\\\n      onDelete={(filterObject: any) => action('Delete Clicked')(filterObject)}\\\\\\\\n      onSave={(filterObject: any) => action('on Save clicked')(filterObject)}\\\\\\\\n      onUpdate={(filterObject: any) =>\\\\\\\\n        action('on Update clicked')(filterObject)\\\\\\\\n      }\\\\\\\\n      appliedFilterId={text('AppliedFilterId', '5f92b95637c24c28eb950447')}\\\\\\\\n      onFavourite={(filterObject: any) =>\\\\\\\\n        action('Favourites CLicked')(filterObject)\\\\\\\\n      }\\\\\\\\n      onAddFilter={action('Add Filter Called')}\\\\\\\\n      onAddCondition={action('Add Condition Called')}\\\\\\\\n      ThirdElement={ThirdElement}\\\\\\\\n      ThirdElementFormatter={ThirdElementFormatter}\\\\\\\\n      saveTooltip='Save'\\\\\\\\n      duplicateTooltip='Create Duplicate'\\\\\\\\n      cancelTooltip='Cancel'\\\\\\\\n      removeFavouriteTooltip='Remove Favourite'\\\\\\\\n      markAsfavouriteTooltip='Mark as Favourite'\\\\\\\\n      style={{\\\\\\\\n        position: 'absolute',\\\\\\\\n        left: '0px'\\\\\\\\n      }}\\\\\\\\n    >\\\\\\\\n      {({ open, setOpen, chips }: tAdvancedFilterChildren) => (\\\\\\\\n        <>\\\\\\\\n          <IconButton\\\\\\\\n            onClick={() => setOpen && setOpen(!open)}\\\\\\\\n            intent='default'\\\\\\\\n            iconVariant='icomoon-funel'\\\\\\\\n            children={'Advanced Filter ' + chips?.length}\\\\\\\\n          />\\\\\\\\n        </>\\\\\\\\n      )}\\\\\\\\n    </AdvancedFilter>\\\\\\\\n  </ThemeWrapper>\\\\\\\\n)\\\\\\\\n\\\\\\\",\\\\\\\"locationsMap\\\\\\\":{}},},\\\\n  title: `${path}/AdvancedFilter`,\\\\n  decorators: [withKnobs],\\\\n  component: AdvancedFilter\\\\n}\\\\n\\\\nconst ThirdElementFormatter = (data: IThirdElementValue) => {\\\\n  switch (data?.type) {\\\\n    case 'calendar':\\\\n      return data.value\\\\n    default:\\\\n      return data?.label || data.value\\\\n  }\\\\n}\\\\n\\\\nexport const withPlayGround = addSourceDecorator(() => (\\\\n  <ThemeWrapper>\\\\n    <AdvancedFilter\\\\n      showOpen={boolean('show Open', false)}\\\\n      backButton={boolean('back Button', false)}\\\\n      masterCondition={boolean('show Condition', true)}\\\\n      allowSort={boolean('show Sort', true)}\\\\n      allowFavourites={boolean('show favourites', true)}\\\\n      allowMultipleFilters={boolean('show Multiple Filters', true)}\\\\n      backButtonCallback={() => action('Back Button clicked')}\\\\n      chipsArray={object('preDefinedArrays', filterData)}\\\\n      dropDownOptions={object('columns Data', columnsStructure)}\\\\n      fieldOperation={object('operation Type', operationTypes)}\\\\n      onApply={(filterObject: any) => action('Apply clicked')(filterObject)}\\\\n      onRemove={(filterObject: any) =>\\\\n        action('on Remove Clicked')(filterObject)\\\\n      }\\\\n      onDelete={(filterObject: any) => action('Delete Clicked')(filterObject)}\\\\n      onSave={(filterObject: any) => action('on Save clicked')(filterObject)}\\\\n      onUpdate={(filterObject: any) =>\\\\n        action('on Update clicked')(filterObject)\\\\n      }\\\\n      appliedFilterId={text('AppliedFilterId', '5f92b95637c24c28eb950447')}\\\\n      onFavourite={(filterObject: any) =>\\\\n        action('Favourites CLicked')(filterObject)\\\\n      }\\\\n      onAddFilter={action('Add Filter Called')}\\\\n      onAddCondition={action('Add Condition Called')}\\\\n      ThirdElement={ThirdElement}\\\\n      ThirdElementFormatter={ThirdElementFormatter}\\\\n      saveTooltip='Save'\\\\n      duplicateTooltip='Create Duplicate'\\\\n      cancelTooltip='Cancel'\\\\n      removeFavouriteTooltip='Remove Favourite'\\\\n      markAsfavouriteTooltip='Mark as Favourite'\\\\n      style={{\\\\n        position: 'absolute',\\\\n        left: '0px'\\\\n      }}\\\\n    >\\\\n      {({ open, setOpen, chips }: tAdvancedFilterChildren) => (\\\\n        <>\\\\n          <IconButton\\\\n            onClick={() => setOpen && setOpen(!open)}\\\\n            intent='default'\\\\n            iconVariant='icomoon-funel'\\\\n            children={'Advanced Filter ' + chips?.length}\\\\n          />\\\\n        </>\\\\n      )}\\\\n    </AdvancedFilter>\\\\n  </ThemeWrapper>\\\\n), {__STORY__, __ADDS_MAP__,__MAIN_FILE_LOCATION__,__MODULE_DEPENDENCIES__,__LOCAL_DEPENDENCIES__,__SOURCE_PREFIX__,__IDS_TO_FRAMEWORKS__});\\\",\\\"locationsMap\\\":{}},\\\"storySource\\\":{\\\"source\\\":\\\"import React from 'react'\\\\nimport { path } from '..'\\\\nimport { withKnobs, boolean, object, text } from '@storybook/addon-knobs'\\\\nimport AdvancedFilter from '.'\\\\nimport ThemeWrapper from '../../../utilities/components/ThemeWrapper'\\\\nimport { IThirdElementValue, tAdvancedFilterChildren } from './interfaces'\\\\nimport { action } from '@storybook/addon-actions'\\\\nimport IconButton from '../../atoms/IconButton'\\\\nimport operationTypes from './Data/operationType'\\\\nimport columnsStructure from './Data/columnsStructure'\\\\nimport filterData from './Data/filterData'\\\\nimport ThirdElement from './ThirdElement/index'\\\\n\\\\nexport default {\\\\n  title: `${path}/AdvancedFilter`,\\\\n  decorators: [withKnobs],\\\\n  component: AdvancedFilter\\\\n}\\\\n\\\\nconst ThirdElementFormatter = (data: IThirdElementValue) => {\\\\n  switch (data?.type) {\\\\n    case 'calendar':\\\\n      return data.value\\\\n    default:\\\\n      return data?.label || data.value\\\\n  }\\\\n}\\\\n\\\\nexport const withPlayGround = () => (\\\\n  <ThemeWrapper>\\\\n    <AdvancedFilter\\\\n      showOpen={boolean('show Open', false)}\\\\n      backButton={boolean('back Button', false)}\\\\n      masterCondition={boolean('show Condition', true)}\\\\n      allowSort={boolean('show Sort', true)}\\\\n      allowFavourites={boolean('show favourites', true)}\\\\n      allowMultipleFilters={boolean('show Multiple Filters', true)}\\\\n      backButtonCallback={() => action('Back Button clicked')}\\\\n      chipsArray={object('preDefinedArrays', filterData)}\\\\n      dropDownOptions={object('columns Data', columnsStructure)}\\\\n      fieldOperation={object('operation Type', operationTypes)}\\\\n      onApply={(filterObject: any) => action('Apply clicked')(filterObject)}\\\\n      onRemove={(filterObject: any) =>\\\\n        action('on Remove Clicked')(filterObject)\\\\n      }\\\\n      onDelete={(filterObject: any) => action('Delete Clicked')(filterObject)}\\\\n      onSave={(filterObject: any) => action('on Save clicked')(filterObject)}\\\\n      onUpdate={(filterObject: any) =>\\\\n        action('on Update clicked')(filterObject)\\\\n      }\\\\n      appliedFilterId={text('AppliedFilterId', '5f92b95637c24c28eb950447')}\\\\n      onFavourite={(filterObject: any) =>\\\\n        action('Favourites CLicked')(filterObject)\\\\n      }\\\\n      onAddFilter={action('Add Filter Called')}\\\\n      onAddCondition={action('Add Condition Called')}\\\\n      ThirdElement={ThirdElement}\\\\n      ThirdElementFormatter={ThirdElementFormatter}\\\\n      saveTooltip='Save'\\\\n      duplicateTooltip='Create Duplicate'\\\\n      cancelTooltip='Cancel'\\\\n      removeFavouriteTooltip='Remove Favourite'\\\\n      markAsfavouriteTooltip='Mark as Favourite'\\\\n      style={{\\\\n        position: 'absolute',\\\\n        left: '0px'\\\\n      }}\\\\n    >\\\\n      {({ open, setOpen, chips }: tAdvancedFilterChildren) => (\\\\n        <>\\\\n          <IconButton\\\\n            onClick={() => setOpen && setOpen(!open)}\\\\n            intent='default'\\\\n            iconVariant='icomoon-funel'\\\\n            children={'Advanced Filter ' + chips?.length}\\\\n          />\\\\n        </>\\\\n      )}\\\\n    </AdvancedFilter>\\\\n  </ThemeWrapper>\\\\n)\\\\n\\\",\\\"locationsMap\\\":{}},},\\n  title: `${path}/AdvancedFilter`,\\n  decorators: [withKnobs],\\n  component: AdvancedFilter\\n}\\n\\nconst ThirdElementFormatter = (data: IThirdElementValue) => {\\n  switch (data?.type) {\\n    case 'calendar':\\n      return data.value\\n    default:\\n      return data?.label || data.value\\n  }\\n}\\n\\nexport const withPlayGround = addSourceDecorator(addSourceDecorator(() => (\\n  <ThemeWrapper>\\n    <AdvancedFilter\\n      showOpen={boolean('show Open', false)}\\n      backButton={boolean('back Button', false)}\\n      masterCondition={boolean('show Condition', true)}\\n      allowSort={boolean('show Sort', true)}\\n      allowFavourites={boolean('show favourites', true)}\\n      allowMultipleFilters={boolean('show Multiple Filters', true)}\\n      backButtonCallback={() => action('Back Button clicked')}\\n      chipsArray={object('preDefinedArrays', filterData)}\\n      dropDownOptions={object('columns Data', columnsStructure)}\\n      fieldOperation={object('operation Type', operationTypes)}\\n      onApply={(filterObject: any) => action('Apply clicked')(filterObject)}\\n      onRemove={(filterObject: any) =>\\n        action('on Remove Clicked')(filterObject)\\n      }\\n      onDelete={(filterObject: any) => action('Delete Clicked')(filterObject)}\\n      onSave={(filterObject: any) => action('on Save clicked')(filterObject)}\\n      onUpdate={(filterObject: any) =>\\n        action('on Update clicked')(filterObject)\\n      }\\n      appliedFilterId={text('AppliedFilterId', '5f92b95637c24c28eb950447')}\\n      onFavourite={(filterObject: any) =>\\n        action('Favourites CLicked')(filterObject)\\n      }\\n      onAddFilter={action('Add Filter Called')}\\n      onAddCondition={action('Add Condition Called')}\\n      ThirdElement={ThirdElement}\\n      ThirdElementFormatter={ThirdElementFormatter}\\n      saveTooltip='Save'\\n      duplicateTooltip='Create Duplicate'\\n      cancelTooltip='Cancel'\\n      removeFavouriteTooltip='Remove Favourite'\\n      markAsfavouriteTooltip='Mark as Favourite'\\n      style={{\\n        position: 'absolute',\\n        left: '0px'\\n      }}\\n    >\\n      {({ open, setOpen, chips }: tAdvancedFilterChildren) => (\\n        <>\\n          <IconButton\\n            onClick={() => setOpen && setOpen(!open)}\\n            intent='default'\\n            iconVariant='icomoon-funel'\\n            children={'Advanced Filter ' + chips?.length}\\n          />\\n        </>\\n      )}\\n    </AdvancedFilter>\\n  </ThemeWrapper>\\n), {__STORY__, __ADDS_MAP__,__MAIN_FILE_LOCATION__,__MODULE_DEPENDENCIES__,__LOCAL_DEPENDENCIES__,__SOURCE_PREFIX__,__IDS_TO_FRAMEWORKS__}), {__STORY__, __ADDS_MAP__,__MAIN_FILE_LOCATION__,__MODULE_DEPENDENCIES__,__LOCAL_DEPENDENCIES__,__SOURCE_PREFIX__,__IDS_TO_FRAMEWORKS__});\",\n      \"locationsMap\": {}\n    }\n  }, _defineProperty(_parameters, \"storySource\", {\n    \"source\": \"\\n\\n// @ts-nocheck\\n// @ts-ignore\\nvar withSourceLoader = require('@storybook/source-loader/preview').withSource;\\n// @ts-ignore\\nvar addSourceDecorator = require(\\\"@storybook/source-loader/preview\\\").addSource;\\n// @ts-ignore\\nvar __SOURCE_PREFIX__ = \\\"/Users/farhanansari/Desktop/CODE/PrxProject/untitled folder/reactStoryBook/src/components/organisms/AdvancedFilter\\\";\\n// @ts-ignore\\nvar __STORY__ = \\\"import React from 'react'\\\\nimport { path } from '..'\\\\nimport { withKnobs, boolean, object, text } from '@storybook/addon-knobs'\\\\nimport AdvancedFilter from '.'\\\\nimport ThemeWrapper from '../../../utilities/components/ThemeWrapper'\\\\nimport { IThirdElementValue, tAdvancedFilterChildren } from './interfaces'\\\\nimport { action } from '@storybook/addon-actions'\\\\nimport IconButton from '../../atoms/IconButton'\\\\nimport operationTypes from './Data/operationType'\\\\nimport columnsStructure from './Data/columnsStructure'\\\\nimport filterData from './Data/filterData'\\\\nimport ThirdElement from './ThirdElement/index'\\\\n\\\\nexport default {\\\\n  title: `${path}/AdvancedFilter`,\\\\n  decorators: [withKnobs],\\\\n  component: AdvancedFilter\\\\n}\\\\n\\\\nconst ThirdElementFormatter = (data: IThirdElementValue) => {\\\\n  switch (data?.type) {\\\\n    case 'calendar':\\\\n      return data.value\\\\n    default:\\\\n      return data?.label || data.value\\\\n  }\\\\n}\\\\n\\\\nexport const withPlayGround = () => (\\\\n  <ThemeWrapper>\\\\n    <AdvancedFilter\\\\n      showOpen={boolean('show Open', false)}\\\\n      backButton={boolean('back Button', false)}\\\\n      masterCondition={boolean('show Condition', true)}\\\\n      allowSort={boolean('show Sort', true)}\\\\n      allowFavourites={boolean('show favourites', true)}\\\\n      allowMultipleFilters={boolean('show Multiple Filters', true)}\\\\n      backButtonCallback={() => action('Back Button clicked')}\\\\n      chipsArray={object('preDefinedArrays', filterData)}\\\\n      dropDownOptions={object('columns Data', columnsStructure)}\\\\n      fieldOperation={object('operation Type', operationTypes)}\\\\n      onApply={(filterObject: any) => action('Apply clicked')(filterObject)}\\\\n      onRemove={(filterObject: any) =>\\\\n        action('on Remove Clicked')(filterObject)\\\\n      }\\\\n      onDelete={(filterObject: any) => action('Delete Clicked')(filterObject)}\\\\n      onSave={(filterObject: any) => action('on Save clicked')(filterObject)}\\\\n      onUpdate={(filterObject: any) =>\\\\n        action('on Update clicked')(filterObject)\\\\n      }\\\\n      appliedFilterId={text('AppliedFilterId', '5f92b95637c24c28eb950447')}\\\\n      onFavourite={(filterObject: any) =>\\\\n        action('Favourites CLicked')(filterObject)\\\\n      }\\\\n      onAddFilter={action('Add Filter Called')}\\\\n      onAddCondition={action('Add Condition Called')}\\\\n      ThirdElement={ThirdElement}\\\\n      ThirdElementFormatter={ThirdElementFormatter}\\\\n      saveTooltip='Save'\\\\n      duplicateTooltip='Create Duplicate'\\\\n      cancelTooltip='Cancel'\\\\n      removeFavouriteTooltip='Remove Favourite'\\\\n      markAsfavouriteTooltip='Mark as Favourite'\\\\n      style={{\\\\n        position: 'absolute',\\\\n        left: '0px'\\\\n      }}\\\\n    >\\\\n      {({ open, setOpen, chips }: tAdvancedFilterChildren) => (\\\\n        <>\\\\n          <IconButton\\\\n            onClick={() => setOpen && setOpen(!open)}\\\\n            intent='default'\\\\n            iconVariant='icomoon-funel'\\\\n            children={'Advanced Filter ' + chips?.length}\\\\n          />\\\\n        </>\\\\n      )}\\\\n    </AdvancedFilter>\\\\n  </ThemeWrapper>\\\\n)\\\\n\\\";\\n// @ts-ignore\\nvar __ADDS_MAP__ = {};\\n// @ts-ignore\\nvar __MAIN_FILE_LOCATION__ = \\\"/AdvancedFilter.stories.tsx\\\";\\n// @ts-ignore\\nvar __MODULE_DEPENDENCIES__ = [];\\n// @ts-ignore\\nvar __LOCAL_DEPENDENCIES__ = {};\\n// @ts-ignore\\nvar __IDS_TO_FRAMEWORKS__ = {};\\n        \\nimport React from 'react'\\nimport { path } from '..'\\nimport { withKnobs, boolean, object, text } from '@storybook/addon-knobs'\\nimport AdvancedFilter from '.'\\nimport ThemeWrapper from '../../../utilities/components/ThemeWrapper'\\nimport { IThirdElementValue, tAdvancedFilterChildren } from './interfaces'\\nimport { action } from '@storybook/addon-actions'\\nimport IconButton from '../../atoms/IconButton'\\nimport operationTypes from './Data/operationType'\\nimport columnsStructure from './Data/columnsStructure'\\nimport filterData from './Data/filterData'\\nimport ThirdElement from './ThirdElement/index'\\n\\nexport default {parameters: {\\\"storySource\\\":{\\\"source\\\":\\\"import React from 'react'\\\\nimport { path } from '..'\\\\nimport { withKnobs, boolean, object, text } from '@storybook/addon-knobs'\\\\nimport AdvancedFilter from '.'\\\\nimport ThemeWrapper from '../../../utilities/components/ThemeWrapper'\\\\nimport { IThirdElementValue, tAdvancedFilterChildren } from './interfaces'\\\\nimport { action } from '@storybook/addon-actions'\\\\nimport IconButton from '../../atoms/IconButton'\\\\nimport operationTypes from './Data/operationType'\\\\nimport columnsStructure from './Data/columnsStructure'\\\\nimport filterData from './Data/filterData'\\\\nimport ThirdElement from './ThirdElement/index'\\\\n\\\\nexport default {\\\\n  title: `${path}/AdvancedFilter`,\\\\n  decorators: [withKnobs],\\\\n  component: AdvancedFilter\\\\n}\\\\n\\\\nconst ThirdElementFormatter = (data: IThirdElementValue) => {\\\\n  switch (data?.type) {\\\\n    case 'calendar':\\\\n      return data.value\\\\n    default:\\\\n      return data?.label || data.value\\\\n  }\\\\n}\\\\n\\\\nexport const withPlayGround = () => (\\\\n  <ThemeWrapper>\\\\n    <AdvancedFilter\\\\n      showOpen={boolean('show Open', false)}\\\\n      backButton={boolean('back Button', false)}\\\\n      masterCondition={boolean('show Condition', true)}\\\\n      allowSort={boolean('show Sort', true)}\\\\n      allowFavourites={boolean('show favourites', true)}\\\\n      allowMultipleFilters={boolean('show Multiple Filters', true)}\\\\n      backButtonCallback={() => action('Back Button clicked')}\\\\n      chipsArray={object('preDefinedArrays', filterData)}\\\\n      dropDownOptions={object('columns Data', columnsStructure)}\\\\n      fieldOperation={object('operation Type', operationTypes)}\\\\n      onApply={(filterObject: any) => action('Apply clicked')(filterObject)}\\\\n      onRemove={(filterObject: any) =>\\\\n        action('on Remove Clicked')(filterObject)\\\\n      }\\\\n      onDelete={(filterObject: any) => action('Delete Clicked')(filterObject)}\\\\n      onSave={(filterObject: any) => action('on Save clicked')(filterObject)}\\\\n      onUpdate={(filterObject: any) =>\\\\n        action('on Update clicked')(filterObject)\\\\n      }\\\\n      appliedFilterId={text('AppliedFilterId', '5f92b95637c24c28eb950447')}\\\\n      onFavourite={(filterObject: any) =>\\\\n        action('Favourites CLicked')(filterObject)\\\\n      }\\\\n      onAddFilter={action('Add Filter Called')}\\\\n      onAddCondition={action('Add Condition Called')}\\\\n      ThirdElement={ThirdElement}\\\\n      ThirdElementFormatter={ThirdElementFormatter}\\\\n      saveTooltip='Save'\\\\n      duplicateTooltip='Create Duplicate'\\\\n      cancelTooltip='Cancel'\\\\n      removeFavouriteTooltip='Remove Favourite'\\\\n      markAsfavouriteTooltip='Mark as Favourite'\\\\n      style={{\\\\n        position: 'absolute',\\\\n        left: '0px'\\\\n      }}\\\\n    >\\\\n      {({ open, setOpen, chips }: tAdvancedFilterChildren) => (\\\\n        <>\\\\n          <IconButton\\\\n            onClick={() => setOpen && setOpen(!open)}\\\\n            intent='default'\\\\n            iconVariant='icomoon-funel'\\\\n            children={'Advanced Filter ' + chips?.length}\\\\n          />\\\\n        </>\\\\n      )}\\\\n    </AdvancedFilter>\\\\n  </ThemeWrapper>\\\\n)\\\\n\\\",\\\"locationsMap\\\":{}},},\\n  title: `${path}/AdvancedFilter`,\\n  decorators: [withKnobs],\\n  component: AdvancedFilter\\n}\\n\\nconst ThirdElementFormatter = (data: IThirdElementValue) => {\\n  switch (data?.type) {\\n    case 'calendar':\\n      return data.value\\n    default:\\n      return data?.label || data.value\\n  }\\n}\\n\\nexport const withPlayGround = addSourceDecorator(() => (\\n  <ThemeWrapper>\\n    <AdvancedFilter\\n      showOpen={boolean('show Open', false)}\\n      backButton={boolean('back Button', false)}\\n      masterCondition={boolean('show Condition', true)}\\n      allowSort={boolean('show Sort', true)}\\n      allowFavourites={boolean('show favourites', true)}\\n      allowMultipleFilters={boolean('show Multiple Filters', true)}\\n      backButtonCallback={() => action('Back Button clicked')}\\n      chipsArray={object('preDefinedArrays', filterData)}\\n      dropDownOptions={object('columns Data', columnsStructure)}\\n      fieldOperation={object('operation Type', operationTypes)}\\n      onApply={(filterObject: any) => action('Apply clicked')(filterObject)}\\n      onRemove={(filterObject: any) =>\\n        action('on Remove Clicked')(filterObject)\\n      }\\n      onDelete={(filterObject: any) => action('Delete Clicked')(filterObject)}\\n      onSave={(filterObject: any) => action('on Save clicked')(filterObject)}\\n      onUpdate={(filterObject: any) =>\\n        action('on Update clicked')(filterObject)\\n      }\\n      appliedFilterId={text('AppliedFilterId', '5f92b95637c24c28eb950447')}\\n      onFavourite={(filterObject: any) =>\\n        action('Favourites CLicked')(filterObject)\\n      }\\n      onAddFilter={action('Add Filter Called')}\\n      onAddCondition={action('Add Condition Called')}\\n      ThirdElement={ThirdElement}\\n      ThirdElementFormatter={ThirdElementFormatter}\\n      saveTooltip='Save'\\n      duplicateTooltip='Create Duplicate'\\n      cancelTooltip='Cancel'\\n      removeFavouriteTooltip='Remove Favourite'\\n      markAsfavouriteTooltip='Mark as Favourite'\\n      style={{\\n        position: 'absolute',\\n        left: '0px'\\n      }}\\n    >\\n      {({ open, setOpen, chips }: tAdvancedFilterChildren) => (\\n        <>\\n          <IconButton\\n            onClick={() => setOpen && setOpen(!open)}\\n            intent='default'\\n            iconVariant='icomoon-funel'\\n            children={'Advanced Filter ' + chips?.length}\\n          />\\n        </>\\n      )}\\n    </AdvancedFilter>\\n  </ThemeWrapper>\\n), {__STORY__, __ADDS_MAP__,__MAIN_FILE_LOCATION__,__MODULE_DEPENDENCIES__,__LOCAL_DEPENDENCIES__,__SOURCE_PREFIX__,__IDS_TO_FRAMEWORKS__});\",\n    \"locationsMap\": {}\n  }), _defineProperty(_parameters, \"storySource\", {\n    \"source\": \"import React from 'react'\\nimport { path } from '..'\\nimport { withKnobs, boolean, object, text } from '@storybook/addon-knobs'\\nimport AdvancedFilter from '.'\\nimport ThemeWrapper from '../../../utilities/components/ThemeWrapper'\\nimport { IThirdElementValue, tAdvancedFilterChildren } from './interfaces'\\nimport { action } from '@storybook/addon-actions'\\nimport IconButton from '../../atoms/IconButton'\\nimport operationTypes from './Data/operationType'\\nimport columnsStructure from './Data/columnsStructure'\\nimport filterData from './Data/filterData'\\nimport ThirdElement from './ThirdElement/index'\\n\\nexport default {\\n  title: `${path}/AdvancedFilter`,\\n  decorators: [withKnobs],\\n  component: AdvancedFilter\\n}\\n\\nconst ThirdElementFormatter = (data: IThirdElementValue) => {\\n  switch (data?.type) {\\n    case 'calendar':\\n      return data.value\\n    default:\\n      return data?.label || data.value\\n  }\\n}\\n\\nexport const withPlayGround = () => (\\n  <ThemeWrapper>\\n    <AdvancedFilter\\n      showOpen={boolean('show Open', false)}\\n      backButton={boolean('back Button', false)}\\n      masterCondition={boolean('show Condition', true)}\\n      allowSort={boolean('show Sort', true)}\\n      allowFavourites={boolean('show favourites', true)}\\n      allowMultipleFilters={boolean('show Multiple Filters', true)}\\n      backButtonCallback={() => action('Back Button clicked')}\\n      chipsArray={object('preDefinedArrays', filterData)}\\n      dropDownOptions={object('columns Data', columnsStructure)}\\n      fieldOperation={object('operation Type', operationTypes)}\\n      onApply={(filterObject: any) => action('Apply clicked')(filterObject)}\\n      onRemove={(filterObject: any) =>\\n        action('on Remove Clicked')(filterObject)\\n      }\\n      onDelete={(filterObject: any) => action('Delete Clicked')(filterObject)}\\n      onSave={(filterObject: any) => action('on Save clicked')(filterObject)}\\n      onUpdate={(filterObject: any) =>\\n        action('on Update clicked')(filterObject)\\n      }\\n      appliedFilterId={text('AppliedFilterId', '5f92b95637c24c28eb950447')}\\n      onFavourite={(filterObject: any) =>\\n        action('Favourites CLicked')(filterObject)\\n      }\\n      onAddFilter={action('Add Filter Called')}\\n      onAddCondition={action('Add Condition Called')}\\n      ThirdElement={ThirdElement}\\n      ThirdElementFormatter={ThirdElementFormatter}\\n      saveTooltip='Save'\\n      duplicateTooltip='Create Duplicate'\\n      cancelTooltip='Cancel'\\n      removeFavouriteTooltip='Remove Favourite'\\n      markAsfavouriteTooltip='Mark as Favourite'\\n      style={{\\n        position: 'absolute',\\n        left: '0px'\\n      }}\\n    >\\n      {({ open, setOpen, chips }: tAdvancedFilterChildren) => (\\n        <>\\n          <IconButton\\n            onClick={() => setOpen && setOpen(!open)}\\n            intent='default'\\n            iconVariant='icomoon-funel'\\n            children={'Advanced Filter ' + chips?.length}\\n          />\\n        </>\\n      )}\\n    </AdvancedFilter>\\n  </ThemeWrapper>\\n)\\n\",\n    \"locationsMap\": {}\n  }), _parameters),\n  title: path + \"/AdvancedFilter\",\n  decorators: [withKnobs],\n  component: AdvancedFilter\n};\n\nvar ThirdElementFormatter = function ThirdElementFormatter(data) {\n  switch (data === null || data === void 0 ? void 0 : data.type) {\n    case 'calendar':\n      return data.value;\n\n    default:\n      return (data === null || data === void 0 ? void 0 : data.label) || data.value;\n  }\n};\n\nexport var withPlayGround = addSourceDecorator(addSourceDecorator(addSourceDecorator(function () {\n  return React.createElement(ThemeWrapper, null, React.createElement(AdvancedFilter, {\n    showOpen: _boolean('show Open', false),\n    backButton: _boolean('back Button', false),\n    masterCondition: _boolean('show Condition', true),\n    allowSort: _boolean('show Sort', true),\n    allowFavourites: _boolean('show favourites', true),\n    allowMultipleFilters: _boolean('show Multiple Filters', true),\n    backButtonCallback: function backButtonCallback() {\n      return action('Back Button clicked');\n    },\n    chipsArray: object('preDefinedArrays', filterData),\n    dropDownOptions: object('columns Data', columnsStructure),\n    fieldOperation: object('operation Type', operationTypes),\n    onApply: function onApply(filterObject) {\n      return action('Apply clicked')(filterObject);\n    },\n    onRemove: function onRemove(filterObject) {\n      return action('on Remove Clicked')(filterObject);\n    },\n    onDelete: function onDelete(filterObject) {\n      return action('Delete Clicked')(filterObject);\n    },\n    onSave: function onSave(filterObject) {\n      return action('on Save clicked')(filterObject);\n    },\n    onUpdate: function onUpdate(filterObject) {\n      return action('on Update clicked')(filterObject);\n    },\n    appliedFilterId: text('AppliedFilterId', '5f92b95637c24c28eb950447'),\n    onFavourite: function onFavourite(filterObject) {\n      return action('Favourites CLicked')(filterObject);\n    },\n    onAddFilter: action('Add Filter Called'),\n    onAddCondition: action('Add Condition Called'),\n    ThirdElement: ThirdElement,\n    ThirdElementFormatter: ThirdElementFormatter,\n    saveTooltip: 'Save',\n    duplicateTooltip: 'Create Duplicate',\n    cancelTooltip: 'Cancel',\n    removeFavouriteTooltip: 'Remove Favourite',\n    markAsfavouriteTooltip: 'Mark as Favourite',\n    style: {\n      position: 'absolute',\n      left: '0px'\n    }\n  }, function (_a) {\n    var open = _a.open,\n        setOpen = _a.setOpen,\n        chips = _a.chips;\n    return React.createElement(React.Fragment, null, React.createElement(IconButton, {\n      onClick: function onClick() {\n        return setOpen && setOpen(!open);\n      },\n      intent: 'default',\n      iconVariant: 'icomoon-funel',\n      children: 'Advanced Filter ' + (chips === null || chips === void 0 ? void 0 : chips.length)\n    }));\n  }));\n}, {\n  __STORY__: __STORY__,\n  __ADDS_MAP__: __ADDS_MAP__,\n  __MAIN_FILE_LOCATION__: __MAIN_FILE_LOCATION__,\n  __MODULE_DEPENDENCIES__: __MODULE_DEPENDENCIES__,\n  __LOCAL_DEPENDENCIES__: __LOCAL_DEPENDENCIES__,\n  __SOURCE_PREFIX__: __SOURCE_PREFIX__,\n  __IDS_TO_FRAMEWORKS__: __IDS_TO_FRAMEWORKS__\n}), {\n  __STORY__: __STORY__,\n  __ADDS_MAP__: __ADDS_MAP__,\n  __MAIN_FILE_LOCATION__: __MAIN_FILE_LOCATION__,\n  __MODULE_DEPENDENCIES__: __MODULE_DEPENDENCIES__,\n  __LOCAL_DEPENDENCIES__: __LOCAL_DEPENDENCIES__,\n  __SOURCE_PREFIX__: __SOURCE_PREFIX__,\n  __IDS_TO_FRAMEWORKS__: __IDS_TO_FRAMEWORKS__\n}), {\n  __STORY__: __STORY__,\n  __ADDS_MAP__: __ADDS_MAP__,\n  __MAIN_FILE_LOCATION__: __MAIN_FILE_LOCATION__,\n  __MODULE_DEPENDENCIES__: __MODULE_DEPENDENCIES__,\n  __LOCAL_DEPENDENCIES__: __LOCAL_DEPENDENCIES__,\n  __SOURCE_PREFIX__: __SOURCE_PREFIX__,\n  __IDS_TO_FRAMEWORKS__: __IDS_TO_FRAMEWORKS__\n});","map":{"version":3,"sources":["/Users/farhanansari/Desktop/CODE/PrxProject/untitled folder/reactStoryBook/node_modules/react-docgen-typescript-loader/dist/index.js!/Users/farhanansari/Desktop/CODE/PrxProject/untitled folder/reactStoryBook/node_modules/eslint-loader/dist/cjs.js??ref--6-0!/Users/farhanansari/Desktop/CODE/PrxProject/untitled folder/reactStoryBook/node_modules/@storybook/source-loader/dist/server/index.js??ref--11!/Users/farhanansari/Desktop/CODE/PrxProject/untitled folder/reactStoryBook/node_modules/@storybook/source-loader/dist/server/index.js!/Users/farhanansari/Desktop/CODE/PrxProject/untitled folder/reactStoryBook/node_modules/@storybook/source-loader/dist/server/index.js!/Users/farhanansari/Desktop/CODE/PrxProject/untitled folder/reactStoryBook/src/components/organisms/AdvancedFilter/AdvancedFilter.stories.tsx"],"names":[],"mappings":";;;;AACA;AACA;AACA;AACA,IAAI,gBAAgB,GAAG,OAAO,CAAC,kCAAD,CAAP,CAA4C,UAAnE,C,CACA;;;AACA,IAAI,kBAAkB,GAAG,OAAO,CAAC,kCAAD,CAAP,CAA4C,SAArE,C,CACA;;;AACA,IAAI,iBAAiB,GAAG,oHAAxB,C,CACA;;AACA,IAAI,SAAS,GAAG,iq/BAAhB,C,CACA;;AACA,IAAI,YAAY,GAAG,EAAnB,C,CACA;;AACA,IAAI,sBAAsB,GAAG,6BAA7B,C,CACA;;AACA,IAAI,uBAAuB,GAAG,EAA9B,C,CACA;;AACA,IAAI,sBAAsB,GAAG,EAA7B,C,CACA;;AACA,IAAI,qBAAqB,GAAG,EAA5B;AAGA;AACA;AACA;;AACA,IAAI,gBAAgB,GAAG,OAAO,CAAC,kCAAD,CAAP,CAA4C,UAAnE,C,CACA;;;AACA,IAAI,kBAAkB,GAAG,OAAO,CAAC,kCAAD,CAAP,CAA4C,SAArE,C,CACA;;;AACA,IAAI,iBAAiB,GAAG,oHAAxB,C,CACA;;AACA,IAAI,SAAS,GAAG,29TAAhB,C,CACA;;AACA,IAAI,YAAY,GAAG,EAAnB,C,CACA;;AACA,IAAI,sBAAsB,GAAG,6BAA7B,C,CACA;;AACA,IAAI,uBAAuB,GAAG,EAA9B,C,CACA;;AACA,IAAI,sBAAsB,GAAG,EAA7B,C,CACA;;AACA,IAAI,qBAAqB,GAAG,EAA5B;AAGA;AACA;AACA;;AACA,IAAI,gBAAgB,GAAG,OAAO,CAAC,kCAAD,CAAP,CAA4C,UAAnE,C,CACA;;;AACA,IAAI,kBAAkB,GAAG,OAAO,CAAC,kCAAD,CAAP,CAA4C,SAArE,C,CACA;;;AACA,IAAI,iBAAiB,GAAG,oHAAxB,C,CACA;;AACA,IAAI,SAAS,GAAG,q+FAAhB,C,CACA;;AACA,IAAI,YAAY,GAAG,EAAnB,C,CACA;;AACA,IAAI,sBAAsB,GAAG,6BAA7B,C,CACA;;AACA,IAAI,uBAAuB,GAAG,EAA9B,C,CACA;;AACA,IAAI,sBAAsB,GAAG,EAA7B,C,CACA;;AACA,IAAI,qBAAqB,GAAG,EAA5B;AAEA,OAAO,KAAP,MAAkB,OAAlB;AACA,SAAS,IAAT,QAAqB,IAArB;AACA,SAAS,SAAT,EAAoB,OAAO,IAAP,QAApB,EAA6B,MAA7B,EAAqC,IAArC,QAAiD,wBAAjD;AACA,OAAO,cAAP,MAA2B,GAA3B;AACA,OAAO,YAAP,MAAyB,4CAAzB;AAEA,SAAS,MAAT,QAAuB,0BAAvB;AACA,OAAO,UAAP,MAAuB,wBAAvB;AACA,OAAO,cAAP,MAA2B,sBAA3B;AACA,OAAO,gBAAP,MAA6B,yBAA7B;AACA,OAAO,UAAP,MAAuB,mBAAvB;AACA,OAAO,YAAP,MAAyB,sBAAzB;AAEA,eAAe;AAAC,EAAA,UAAU;AAAG,mBAAc;AAAC,gBAAS,iq/BAAV;AAA4q/B,sBAAe;AAA3r/B;AAAjB,iDAA8t/B;AAAC,cAAS,29TAAV;AAAs+T,oBAAe;AAAr/T,GAA9t/B,+CAAquzC;AAAC,cAAS,q+FAAV;AAAg/F,oBAAe;AAA//F,GAAruzC,eAAX;AACb,EAAA,KAAK,EAAK,IAAI,GAAA,iBADD;AAEb,EAAA,UAAU,EAAE,CAAC,SAAD,CAFC;AAGb,EAAA,SAAS,EAAE;AAHE,CAAf;;AAMA,IAAM,qBAAqB,GAAG,SAAxB,qBAAwB,CAAC,IAAD,EAAyB;AACrD,UAAQ,IAAI,KAAA,IAAJ,IAAA,IAAI,KAAA,KAAA,CAAJ,GAAI,KAAA,CAAJ,GAAA,IAAI,CAAE,IAAd;AACE,SAAK,UAAL;AACE,aAAO,IAAI,CAAC,KAAZ;;AACF;AACE,aAAO,CAAA,IAAI,KAAA,IAAJ,IAAA,IAAI,KAAA,KAAA,CAAJ,GAAI,KAAA,CAAJ,GAAA,IAAI,CAAE,KAAN,KAAe,IAAI,CAAC,KAA3B;AAJJ;AAMD,CAPD;;AASA,OAAO,IAAM,cAAc,GAAG,kBAAkB,CAAC,kBAAkB,CAAC,kBAAkB,CAAC,YAAA;AAAM,SAC3F,KAAA,CAAA,aAAA,CAAC,YAAD,EAAa,IAAb,EACE,KAAA,CAAA,aAAA,CAAC,cAAD,EAAe;AACb,IAAA,QAAQ,EAAE,QAAO,CAAC,WAAD,EAAc,KAAd,CADJ;AAEb,IAAA,UAAU,EAAE,QAAO,CAAC,aAAD,EAAgB,KAAhB,CAFN;AAGb,IAAA,eAAe,EAAE,QAAO,CAAC,gBAAD,EAAmB,IAAnB,CAHX;AAIb,IAAA,SAAS,EAAE,QAAO,CAAC,WAAD,EAAc,IAAd,CAJL;AAKb,IAAA,eAAe,EAAE,QAAO,CAAC,iBAAD,EAAoB,IAApB,CALX;AAMb,IAAA,oBAAoB,EAAE,QAAO,CAAC,uBAAD,EAA0B,IAA1B,CANhB;AAOb,IAAA,kBAAkB,EAAE,8BAAA;AAAM,aAAA,MAAM,CAAN,qBAAM,CAAN;AAA6B,KAP1C;AAQb,IAAA,UAAU,EAAE,MAAM,CAAC,kBAAD,EAAqB,UAArB,CARL;AASb,IAAA,eAAe,EAAE,MAAM,CAAC,cAAD,EAAiB,gBAAjB,CATV;AAUb,IAAA,cAAc,EAAE,MAAM,CAAC,gBAAD,EAAmB,cAAnB,CAVT;AAWb,IAAA,OAAO,EAAE,iBAAC,YAAD,EAAkB;AAAK,aAAA,MAAM,CAAC,eAAD,CAAN,CAAA,YAAA,CAAA;AAAqC,KAXxD;AAYb,IAAA,QAAQ,EAAE,kBAAC,YAAD,EAAkB;AAC1B,aAAA,MAAM,CAAC,mBAAD,CAAN,CAA4B,YAA5B,CAAA;AAAyC,KAb9B;AAeb,IAAA,QAAQ,EAAE,kBAAC,YAAD,EAAkB;AAAK,aAAA,MAAM,CAAC,gBAAD,CAAN,CAAA,YAAA,CAAA;AAAsC,KAf1D;AAgBb,IAAA,MAAM,EAAE,gBAAC,YAAD,EAAkB;AAAK,aAAA,MAAM,CAAC,iBAAD,CAAN,CAAA,YAAA,CAAA;AAAuC,KAhBzD;AAiBb,IAAA,QAAQ,EAAE,kBAAC,YAAD,EAAkB;AAC1B,aAAA,MAAM,CAAC,mBAAD,CAAN,CAA4B,YAA5B,CAAA;AAAyC,KAlB9B;AAoBb,IAAA,eAAe,EAAE,IAAI,CAAC,iBAAD,EAAoB,0BAApB,CApBR;AAqBb,IAAA,WAAW,EAAE,qBAAC,YAAD,EAAkB;AAC7B,aAAA,MAAM,CAAC,oBAAD,CAAN,CAA6B,YAA7B,CAAA;AAA0C,KAtB/B;AAwBb,IAAA,WAAW,EAAE,MAAM,CAAC,mBAAD,CAxBN;AAyBb,IAAA,cAAc,EAAE,MAAM,CAAC,sBAAD,CAzBT;AA0Bb,IAAA,YAAY,EAAE,YA1BD;AA2Bb,IAAA,qBAAqB,EAAE,qBA3BV;AA4Bb,IAAA,WAAW,EAAC,MA5BC;AA6Bb,IAAA,gBAAgB,EAAC,kBA7BJ;AA8Bb,IAAA,aAAa,EAAC,QA9BD;AA+Bb,IAAA,sBAAsB,EAAC,kBA/BV;AAgCb,IAAA,sBAAsB,EAAC,mBAhCV;AAiCb,IAAA,KAAK,EAAE;AACL,MAAA,QAAQ,EAAE,UADL;AAEL,MAAA,IAAI,EAAE;AAFD;AAjCM,GAAf,EAsCG,UAAC,EAAD,EAAkD;QAA/C,IAAI,GAAA,EAAA,CAAA,I;QAAE,OAAO,GAAA,EAAA,CAAA,O;QAAE,KAAK,GAAA,EAAA,CAAA,K;AAAgC,WACtD,KAAA,CAAA,aAAA,CAAA,KAAA,CAAA,QAAA,EAAA,IAAA,EACE,KAAA,CAAA,aAAA,CAAC,UAAD,EAAW;AACT,MAAA,OAAO,EAAE,mBAAA;AAAM,eAAA,OAAO,IAAI,OAAO,CAAC,CAAnB,IAAkB,CAAlB;AAAyB,OAD/B;AAET,MAAA,MAAM,EAAC,SAFE;AAGT,MAAA,WAAW,EAAC,eAHH;AAIT,MAAA,QAAQ,EAAE,sBAAqB,KAAK,KAAA,IAAL,IAAA,KAAK,KAAA,KAAA,CAAL,GAAK,KAAA,CAAL,GAAA,KAAK,CAAE,MAA5B;AAJD,KAAX,CADF,CADsD;AAxC+B,GAEzF,CADF,CAD2F;AAoD5F,CApDqF,EAoDnF;AAAC,EAAA,SAAS,EAAA,SAAV;AAAY,EAAA,YAAY,EAAA,YAAxB;AAAyB,EAAA,sBAAsB,EAAA,sBAA/C;AAAgD,EAAA,uBAAuB,EAAA,uBAAvE;AAAwE,EAAA,sBAAsB,EAAA,sBAA9F;AAA+F,EAAA,iBAAiB,EAAA,iBAAhH;AAAiH,EAAA,qBAAqB,EAAA;AAAtI,CApDmF,CAAnB,EAoD0E;AAAC,EAAA,SAAS,EAAA,SAAV;AAAY,EAAA,YAAY,EAAA,YAAxB;AAAyB,EAAA,sBAAsB,EAAA,sBAA/C;AAAgD,EAAA,uBAAuB,EAAA,uBAAvE;AAAwE,EAAA,sBAAsB,EAAA,sBAA9F;AAA+F,EAAA,iBAAiB,EAAA,iBAAhH;AAAiH,EAAA,qBAAqB,EAAA;AAAtI,CApD1E,CAAnB,EAoDuO;AAAC,EAAA,SAAS,EAAA,SAAV;AAAY,EAAA,YAAY,EAAA,YAAxB;AAAyB,EAAA,sBAAsB,EAAA,sBAA/C;AAAgD,EAAA,uBAAuB,EAAA,uBAAvE;AAAwE,EAAA,sBAAsB,EAAA,sBAA9F;AAA+F,EAAA,iBAAiB,EAAA,iBAAhH;AAAiH,EAAA,qBAAqB,EAAA;AAAtI,CApDvO,CAAzC","sourcesContent":["\n/* eslint-disable */\n// @ts-nocheck\n// @ts-ignore\nvar withSourceLoader = require('@storybook/source-loader/preview').withSource;\n// @ts-ignore\nvar addSourceDecorator = require(\"@storybook/source-loader/preview\").addSource;\n// @ts-ignore\nvar __SOURCE_PREFIX__ = \"/Users/farhanansari/Desktop/CODE/PrxProject/untitled folder/reactStoryBook/src/components/organisms/AdvancedFilter\";\n// @ts-ignore\nvar __STORY__ = \"\\n\\n// @ts-nocheck\\n// @ts-ignore\\nvar withSourceLoader = require('@storybook/source-loader/preview').withSource;\\n// @ts-ignore\\nvar addSourceDecorator = require(\\\"@storybook/source-loader/preview\\\").addSource;\\n// @ts-ignore\\nvar __SOURCE_PREFIX__ = \\\"/Users/farhanansari/Desktop/CODE/PrxProject/untitled folder/reactStoryBook/src/components/organisms/AdvancedFilter\\\";\\n// @ts-ignore\\nvar __STORY__ = \\\"\\\\n\\\\n// @ts-nocheck\\\\n// @ts-ignore\\\\nvar withSourceLoader = require('@storybook/source-loader/preview').withSource;\\\\n// @ts-ignore\\\\nvar addSourceDecorator = require(\\\\\\\"@storybook/source-loader/preview\\\\\\\").addSource;\\\\n// @ts-ignore\\\\nvar __SOURCE_PREFIX__ = \\\\\\\"/Users/farhanansari/Desktop/CODE/PrxProject/untitled folder/reactStoryBook/src/components/organisms/AdvancedFilter\\\\\\\";\\\\n// @ts-ignore\\\\nvar __STORY__ = \\\\\\\"import React from 'react'\\\\\\\\nimport { path } from '..'\\\\\\\\nimport { withKnobs, boolean, object, text } from '@storybook/addon-knobs'\\\\\\\\nimport AdvancedFilter from '.'\\\\\\\\nimport ThemeWrapper from '../../../utilities/components/ThemeWrapper'\\\\\\\\nimport { IThirdElementValue, tAdvancedFilterChildren } from './interfaces'\\\\\\\\nimport { action } from '@storybook/addon-actions'\\\\\\\\nimport IconButton from '../../atoms/IconButton'\\\\\\\\nimport operationTypes from './Data/operationType'\\\\\\\\nimport columnsStructure from './Data/columnsStructure'\\\\\\\\nimport filterData from './Data/filterData'\\\\\\\\nimport ThirdElement from './ThirdElement/index'\\\\\\\\n\\\\\\\\nexport default {\\\\\\\\n  title: `${path}/AdvancedFilter`,\\\\\\\\n  decorators: [withKnobs],\\\\\\\\n  component: AdvancedFilter\\\\\\\\n}\\\\\\\\n\\\\\\\\nconst ThirdElementFormatter = (data: IThirdElementValue) => {\\\\\\\\n  switch (data?.type) {\\\\\\\\n    case 'calendar':\\\\\\\\n      return data.value\\\\\\\\n    default:\\\\\\\\n      return data?.label || data.value\\\\\\\\n  }\\\\\\\\n}\\\\\\\\n\\\\\\\\nexport const withPlayGround = () => (\\\\\\\\n  <ThemeWrapper>\\\\\\\\n    <AdvancedFilter\\\\\\\\n      showOpen={boolean('show Open', false)}\\\\\\\\n      backButton={boolean('back Button', false)}\\\\\\\\n      masterCondition={boolean('show Condition', true)}\\\\\\\\n      allowSort={boolean('show Sort', true)}\\\\\\\\n      allowFavourites={boolean('show favourites', true)}\\\\\\\\n      allowMultipleFilters={boolean('show Multiple Filters', true)}\\\\\\\\n      backButtonCallback={() => action('Back Button clicked')}\\\\\\\\n      chipsArray={object('preDefinedArrays', filterData)}\\\\\\\\n      dropDownOptions={object('columns Data', columnsStructure)}\\\\\\\\n      fieldOperation={object('operation Type', operationTypes)}\\\\\\\\n      onApply={(filterObject: any) => action('Apply clicked')(filterObject)}\\\\\\\\n      onRemove={(filterObject: any) =>\\\\\\\\n        action('on Remove Clicked')(filterObject)\\\\\\\\n      }\\\\\\\\n      onDelete={(filterObject: any) => action('Delete Clicked')(filterObject)}\\\\\\\\n      onSave={(filterObject: any) => action('on Save clicked')(filterObject)}\\\\\\\\n      onUpdate={(filterObject: any) =>\\\\\\\\n        action('on Update clicked')(filterObject)\\\\\\\\n      }\\\\\\\\n      appliedFilterId={text('AppliedFilterId', '5f92b95637c24c28eb950447')}\\\\\\\\n      onFavourite={(filterObject: any) =>\\\\\\\\n        action('Favourites CLicked')(filterObject)\\\\\\\\n      }\\\\\\\\n      onAddFilter={action('Add Filter Called')}\\\\\\\\n      onAddCondition={action('Add Condition Called')}\\\\\\\\n      ThirdElement={ThirdElement}\\\\\\\\n      ThirdElementFormatter={ThirdElementFormatter}\\\\\\\\n      saveTooltip='Save'\\\\\\\\n      duplicateTooltip='Create Duplicate'\\\\\\\\n      cancelTooltip='Cancel'\\\\\\\\n      removeFavouriteTooltip='Remove Favourite'\\\\\\\\n      markAsfavouriteTooltip='Mark as Favourite'\\\\\\\\n      style={{\\\\\\\\n        position: 'absolute',\\\\\\\\n        left: '0px'\\\\\\\\n      }}\\\\\\\\n    >\\\\\\\\n      {({ open, setOpen, chips }: tAdvancedFilterChildren) => (\\\\\\\\n        <>\\\\\\\\n          <IconButton\\\\\\\\n            onClick={() => setOpen && setOpen(!open)}\\\\\\\\n            intent='default'\\\\\\\\n            iconVariant='icomoon-funel'\\\\\\\\n            children={'Advanced Filter ' + chips?.length}\\\\\\\\n          />\\\\\\\\n        </>\\\\\\\\n      )}\\\\\\\\n    </AdvancedFilter>\\\\\\\\n  </ThemeWrapper>\\\\\\\\n)\\\\\\\\n\\\\\\\";\\\\n// @ts-ignore\\\\nvar __ADDS_MAP__ = {};\\\\n// @ts-ignore\\\\nvar __MAIN_FILE_LOCATION__ = \\\\\\\"/AdvancedFilter.stories.tsx\\\\\\\";\\\\n// @ts-ignore\\\\nvar __MODULE_DEPENDENCIES__ = [];\\\\n// @ts-ignore\\\\nvar __LOCAL_DEPENDENCIES__ = {};\\\\n// @ts-ignore\\\\nvar __IDS_TO_FRAMEWORKS__ = {};\\\\n        \\\\nimport React from 'react'\\\\nimport { path } from '..'\\\\nimport { withKnobs, boolean, object, text } from '@storybook/addon-knobs'\\\\nimport AdvancedFilter from '.'\\\\nimport ThemeWrapper from '../../../utilities/components/ThemeWrapper'\\\\nimport { IThirdElementValue, tAdvancedFilterChildren } from './interfaces'\\\\nimport { action } from '@storybook/addon-actions'\\\\nimport IconButton from '../../atoms/IconButton'\\\\nimport operationTypes from './Data/operationType'\\\\nimport columnsStructure from './Data/columnsStructure'\\\\nimport filterData from './Data/filterData'\\\\nimport ThirdElement from './ThirdElement/index'\\\\n\\\\nexport default {parameters: {\\\\\\\"storySource\\\\\\\":{\\\\\\\"source\\\\\\\":\\\\\\\"import React from 'react'\\\\\\\\nimport { path } from '..'\\\\\\\\nimport { withKnobs, boolean, object, text } from '@storybook/addon-knobs'\\\\\\\\nimport AdvancedFilter from '.'\\\\\\\\nimport ThemeWrapper from '../../../utilities/components/ThemeWrapper'\\\\\\\\nimport { IThirdElementValue, tAdvancedFilterChildren } from './interfaces'\\\\\\\\nimport { action } from '@storybook/addon-actions'\\\\\\\\nimport IconButton from '../../atoms/IconButton'\\\\\\\\nimport operationTypes from './Data/operationType'\\\\\\\\nimport columnsStructure from './Data/columnsStructure'\\\\\\\\nimport filterData from './Data/filterData'\\\\\\\\nimport ThirdElement from './ThirdElement/index'\\\\\\\\n\\\\\\\\nexport default {\\\\\\\\n  title: `${path}/AdvancedFilter`,\\\\\\\\n  decorators: [withKnobs],\\\\\\\\n  component: AdvancedFilter\\\\\\\\n}\\\\\\\\n\\\\\\\\nconst ThirdElementFormatter = (data: IThirdElementValue) => {\\\\\\\\n  switch (data?.type) {\\\\\\\\n    case 'calendar':\\\\\\\\n      return data.value\\\\\\\\n    default:\\\\\\\\n      return data?.label || data.value\\\\\\\\n  }\\\\\\\\n}\\\\\\\\n\\\\\\\\nexport const withPlayGround = () => (\\\\\\\\n  <ThemeWrapper>\\\\\\\\n    <AdvancedFilter\\\\\\\\n      showOpen={boolean('show Open', false)}\\\\\\\\n      backButton={boolean('back Button', false)}\\\\\\\\n      masterCondition={boolean('show Condition', true)}\\\\\\\\n      allowSort={boolean('show Sort', true)}\\\\\\\\n      allowFavourites={boolean('show favourites', true)}\\\\\\\\n      allowMultipleFilters={boolean('show Multiple Filters', true)}\\\\\\\\n      backButtonCallback={() => action('Back Button clicked')}\\\\\\\\n      chipsArray={object('preDefinedArrays', filterData)}\\\\\\\\n      dropDownOptions={object('columns Data', columnsStructure)}\\\\\\\\n      fieldOperation={object('operation Type', operationTypes)}\\\\\\\\n      onApply={(filterObject: any) => action('Apply clicked')(filterObject)}\\\\\\\\n      onRemove={(filterObject: any) =>\\\\\\\\n        action('on Remove Clicked')(filterObject)\\\\\\\\n      }\\\\\\\\n      onDelete={(filterObject: any) => action('Delete Clicked')(filterObject)}\\\\\\\\n      onSave={(filterObject: any) => action('on Save clicked')(filterObject)}\\\\\\\\n      onUpdate={(filterObject: any) =>\\\\\\\\n        action('on Update clicked')(filterObject)\\\\\\\\n      }\\\\\\\\n      appliedFilterId={text('AppliedFilterId', '5f92b95637c24c28eb950447')}\\\\\\\\n      onFavourite={(filterObject: any) =>\\\\\\\\n        action('Favourites CLicked')(filterObject)\\\\\\\\n      }\\\\\\\\n      onAddFilter={action('Add Filter Called')}\\\\\\\\n      onAddCondition={action('Add Condition Called')}\\\\\\\\n      ThirdElement={ThirdElement}\\\\\\\\n      ThirdElementFormatter={ThirdElementFormatter}\\\\\\\\n      saveTooltip='Save'\\\\\\\\n      duplicateTooltip='Create Duplicate'\\\\\\\\n      cancelTooltip='Cancel'\\\\\\\\n      removeFavouriteTooltip='Remove Favourite'\\\\\\\\n      markAsfavouriteTooltip='Mark as Favourite'\\\\\\\\n      style={{\\\\\\\\n        position: 'absolute',\\\\\\\\n        left: '0px'\\\\\\\\n      }}\\\\\\\\n    >\\\\\\\\n      {({ open, setOpen, chips }: tAdvancedFilterChildren) => (\\\\\\\\n        <>\\\\\\\\n          <IconButton\\\\\\\\n            onClick={() => setOpen && setOpen(!open)}\\\\\\\\n            intent='default'\\\\\\\\n            iconVariant='icomoon-funel'\\\\\\\\n            children={'Advanced Filter ' + chips?.length}\\\\\\\\n          />\\\\\\\\n        </>\\\\\\\\n      )}\\\\\\\\n    </AdvancedFilter>\\\\\\\\n  </ThemeWrapper>\\\\\\\\n)\\\\\\\\n\\\\\\\",\\\\\\\"locationsMap\\\\\\\":{}},},\\\\n  title: `${path}/AdvancedFilter`,\\\\n  decorators: [withKnobs],\\\\n  component: AdvancedFilter\\\\n}\\\\n\\\\nconst ThirdElementFormatter = (data: IThirdElementValue) => {\\\\n  switch (data?.type) {\\\\n    case 'calendar':\\\\n      return data.value\\\\n    default:\\\\n      return data?.label || data.value\\\\n  }\\\\n}\\\\n\\\\nexport const withPlayGround = addSourceDecorator(() => (\\\\n  <ThemeWrapper>\\\\n    <AdvancedFilter\\\\n      showOpen={boolean('show Open', false)}\\\\n      backButton={boolean('back Button', false)}\\\\n      masterCondition={boolean('show Condition', true)}\\\\n      allowSort={boolean('show Sort', true)}\\\\n      allowFavourites={boolean('show favourites', true)}\\\\n      allowMultipleFilters={boolean('show Multiple Filters', true)}\\\\n      backButtonCallback={() => action('Back Button clicked')}\\\\n      chipsArray={object('preDefinedArrays', filterData)}\\\\n      dropDownOptions={object('columns Data', columnsStructure)}\\\\n      fieldOperation={object('operation Type', operationTypes)}\\\\n      onApply={(filterObject: any) => action('Apply clicked')(filterObject)}\\\\n      onRemove={(filterObject: any) =>\\\\n        action('on Remove Clicked')(filterObject)\\\\n      }\\\\n      onDelete={(filterObject: any) => action('Delete Clicked')(filterObject)}\\\\n      onSave={(filterObject: any) => action('on Save clicked')(filterObject)}\\\\n      onUpdate={(filterObject: any) =>\\\\n        action('on Update clicked')(filterObject)\\\\n      }\\\\n      appliedFilterId={text('AppliedFilterId', '5f92b95637c24c28eb950447')}\\\\n      onFavourite={(filterObject: any) =>\\\\n        action('Favourites CLicked')(filterObject)\\\\n      }\\\\n      onAddFilter={action('Add Filter Called')}\\\\n      onAddCondition={action('Add Condition Called')}\\\\n      ThirdElement={ThirdElement}\\\\n      ThirdElementFormatter={ThirdElementFormatter}\\\\n      saveTooltip='Save'\\\\n      duplicateTooltip='Create Duplicate'\\\\n      cancelTooltip='Cancel'\\\\n      removeFavouriteTooltip='Remove Favourite'\\\\n      markAsfavouriteTooltip='Mark as Favourite'\\\\n      style={{\\\\n        position: 'absolute',\\\\n        left: '0px'\\\\n      }}\\\\n    >\\\\n      {({ open, setOpen, chips }: tAdvancedFilterChildren) => (\\\\n        <>\\\\n          <IconButton\\\\n            onClick={() => setOpen && setOpen(!open)}\\\\n            intent='default'\\\\n            iconVariant='icomoon-funel'\\\\n            children={'Advanced Filter ' + chips?.length}\\\\n          />\\\\n        </>\\\\n      )}\\\\n    </AdvancedFilter>\\\\n  </ThemeWrapper>\\\\n), {__STORY__, __ADDS_MAP__,__MAIN_FILE_LOCATION__,__MODULE_DEPENDENCIES__,__LOCAL_DEPENDENCIES__,__SOURCE_PREFIX__,__IDS_TO_FRAMEWORKS__});\\\";\\n// @ts-ignore\\nvar __ADDS_MAP__ = {};\\n// @ts-ignore\\nvar __MAIN_FILE_LOCATION__ = \\\"/AdvancedFilter.stories.tsx\\\";\\n// @ts-ignore\\nvar __MODULE_DEPENDENCIES__ = [];\\n// @ts-ignore\\nvar __LOCAL_DEPENDENCIES__ = {};\\n// @ts-ignore\\nvar __IDS_TO_FRAMEWORKS__ = {};\\n        \\n\\n\\n// @ts-nocheck\\n// @ts-ignore\\nvar withSourceLoader = require('@storybook/source-loader/preview').withSource;\\n// @ts-ignore\\nvar addSourceDecorator = require(\\\"@storybook/source-loader/preview\\\").addSource;\\n// @ts-ignore\\nvar __SOURCE_PREFIX__ = \\\"/Users/farhanansari/Desktop/CODE/PrxProject/untitled folder/reactStoryBook/src/components/organisms/AdvancedFilter\\\";\\n// @ts-ignore\\nvar __STORY__ = \\\"import React from 'react'\\\\nimport { path } from '..'\\\\nimport { withKnobs, boolean, object, text } from '@storybook/addon-knobs'\\\\nimport AdvancedFilter from '.'\\\\nimport ThemeWrapper from '../../../utilities/components/ThemeWrapper'\\\\nimport { IThirdElementValue, tAdvancedFilterChildren } from './interfaces'\\\\nimport { action } from '@storybook/addon-actions'\\\\nimport IconButton from '../../atoms/IconButton'\\\\nimport operationTypes from './Data/operationType'\\\\nimport columnsStructure from './Data/columnsStructure'\\\\nimport filterData from './Data/filterData'\\\\nimport ThirdElement from './ThirdElement/index'\\\\n\\\\nexport default {\\\\n  title: `${path}/AdvancedFilter`,\\\\n  decorators: [withKnobs],\\\\n  component: AdvancedFilter\\\\n}\\\\n\\\\nconst ThirdElementFormatter = (data: IThirdElementValue) => {\\\\n  switch (data?.type) {\\\\n    case 'calendar':\\\\n      return data.value\\\\n    default:\\\\n      return data?.label || data.value\\\\n  }\\\\n}\\\\n\\\\nexport const withPlayGround = () => (\\\\n  <ThemeWrapper>\\\\n    <AdvancedFilter\\\\n      showOpen={boolean('show Open', false)}\\\\n      backButton={boolean('back Button', false)}\\\\n      masterCondition={boolean('show Condition', true)}\\\\n      allowSort={boolean('show Sort', true)}\\\\n      allowFavourites={boolean('show favourites', true)}\\\\n      allowMultipleFilters={boolean('show Multiple Filters', true)}\\\\n      backButtonCallback={() => action('Back Button clicked')}\\\\n      chipsArray={object('preDefinedArrays', filterData)}\\\\n      dropDownOptions={object('columns Data', columnsStructure)}\\\\n      fieldOperation={object('operation Type', operationTypes)}\\\\n      onApply={(filterObject: any) => action('Apply clicked')(filterObject)}\\\\n      onRemove={(filterObject: any) =>\\\\n        action('on Remove Clicked')(filterObject)\\\\n      }\\\\n      onDelete={(filterObject: any) => action('Delete Clicked')(filterObject)}\\\\n      onSave={(filterObject: any) => action('on Save clicked')(filterObject)}\\\\n      onUpdate={(filterObject: any) =>\\\\n        action('on Update clicked')(filterObject)\\\\n      }\\\\n      appliedFilterId={text('AppliedFilterId', '5f92b95637c24c28eb950447')}\\\\n      onFavourite={(filterObject: any) =>\\\\n        action('Favourites CLicked')(filterObject)\\\\n      }\\\\n      onAddFilter={action('Add Filter Called')}\\\\n      onAddCondition={action('Add Condition Called')}\\\\n      ThirdElement={ThirdElement}\\\\n      ThirdElementFormatter={ThirdElementFormatter}\\\\n      saveTooltip='Save'\\\\n      duplicateTooltip='Create Duplicate'\\\\n      cancelTooltip='Cancel'\\\\n      removeFavouriteTooltip='Remove Favourite'\\\\n      markAsfavouriteTooltip='Mark as Favourite'\\\\n      style={{\\\\n        position: 'absolute',\\\\n        left: '0px'\\\\n      }}\\\\n    >\\\\n      {({ open, setOpen, chips }: tAdvancedFilterChildren) => (\\\\n        <>\\\\n          <IconButton\\\\n            onClick={() => setOpen && setOpen(!open)}\\\\n            intent='default'\\\\n            iconVariant='icomoon-funel'\\\\n            children={'Advanced Filter ' + chips?.length}\\\\n          />\\\\n        </>\\\\n      )}\\\\n    </AdvancedFilter>\\\\n  </ThemeWrapper>\\\\n)\\\\n\\\";\\n// @ts-ignore\\nvar __ADDS_MAP__ = {};\\n// @ts-ignore\\nvar __MAIN_FILE_LOCATION__ = \\\"/AdvancedFilter.stories.tsx\\\";\\n// @ts-ignore\\nvar __MODULE_DEPENDENCIES__ = [];\\n// @ts-ignore\\nvar __LOCAL_DEPENDENCIES__ = {};\\n// @ts-ignore\\nvar __IDS_TO_FRAMEWORKS__ = {};\\n        \\nimport React from 'react'\\nimport { path } from '..'\\nimport { withKnobs, boolean, object, text } from '@storybook/addon-knobs'\\nimport AdvancedFilter from '.'\\nimport ThemeWrapper from '../../../utilities/components/ThemeWrapper'\\nimport { IThirdElementValue, tAdvancedFilterChildren } from './interfaces'\\nimport { action } from '@storybook/addon-actions'\\nimport IconButton from '../../atoms/IconButton'\\nimport operationTypes from './Data/operationType'\\nimport columnsStructure from './Data/columnsStructure'\\nimport filterData from './Data/filterData'\\nimport ThirdElement from './ThirdElement/index'\\n\\nexport default {parameters: {\\\"storySource\\\":{\\\"source\\\":\\\"\\\\n\\\\n// @ts-nocheck\\\\n// @ts-ignore\\\\nvar withSourceLoader = require('@storybook/source-loader/preview').withSource;\\\\n// @ts-ignore\\\\nvar addSourceDecorator = require(\\\\\\\"@storybook/source-loader/preview\\\\\\\").addSource;\\\\n// @ts-ignore\\\\nvar __SOURCE_PREFIX__ = \\\\\\\"/Users/farhanansari/Desktop/CODE/PrxProject/untitled folder/reactStoryBook/src/components/organisms/AdvancedFilter\\\\\\\";\\\\n// @ts-ignore\\\\nvar __STORY__ = \\\\\\\"import React from 'react'\\\\\\\\nimport { path } from '..'\\\\\\\\nimport { withKnobs, boolean, object, text } from '@storybook/addon-knobs'\\\\\\\\nimport AdvancedFilter from '.'\\\\\\\\nimport ThemeWrapper from '../../../utilities/components/ThemeWrapper'\\\\\\\\nimport { IThirdElementValue, tAdvancedFilterChildren } from './interfaces'\\\\\\\\nimport { action } from '@storybook/addon-actions'\\\\\\\\nimport IconButton from '../../atoms/IconButton'\\\\\\\\nimport operationTypes from './Data/operationType'\\\\\\\\nimport columnsStructure from './Data/columnsStructure'\\\\\\\\nimport filterData from './Data/filterData'\\\\\\\\nimport ThirdElement from './ThirdElement/index'\\\\\\\\n\\\\\\\\nexport default {\\\\\\\\n  title: `${path}/AdvancedFilter`,\\\\\\\\n  decorators: [withKnobs],\\\\\\\\n  component: AdvancedFilter\\\\\\\\n}\\\\\\\\n\\\\\\\\nconst ThirdElementFormatter = (data: IThirdElementValue) => {\\\\\\\\n  switch (data?.type) {\\\\\\\\n    case 'calendar':\\\\\\\\n      return data.value\\\\\\\\n    default:\\\\\\\\n      return data?.label || data.value\\\\\\\\n  }\\\\\\\\n}\\\\\\\\n\\\\\\\\nexport const withPlayGround = () => (\\\\\\\\n  <ThemeWrapper>\\\\\\\\n    <AdvancedFilter\\\\\\\\n      showOpen={boolean('show Open', false)}\\\\\\\\n      backButton={boolean('back Button', false)}\\\\\\\\n      masterCondition={boolean('show Condition', true)}\\\\\\\\n      allowSort={boolean('show Sort', true)}\\\\\\\\n      allowFavourites={boolean('show favourites', true)}\\\\\\\\n      allowMultipleFilters={boolean('show Multiple Filters', true)}\\\\\\\\n      backButtonCallback={() => action('Back Button clicked')}\\\\\\\\n      chipsArray={object('preDefinedArrays', filterData)}\\\\\\\\n      dropDownOptions={object('columns Data', columnsStructure)}\\\\\\\\n      fieldOperation={object('operation Type', operationTypes)}\\\\\\\\n      onApply={(filterObject: any) => action('Apply clicked')(filterObject)}\\\\\\\\n      onRemove={(filterObject: any) =>\\\\\\\\n        action('on Remove Clicked')(filterObject)\\\\\\\\n      }\\\\\\\\n      onDelete={(filterObject: any) => action('Delete Clicked')(filterObject)}\\\\\\\\n      onSave={(filterObject: any) => action('on Save clicked')(filterObject)}\\\\\\\\n      onUpdate={(filterObject: any) =>\\\\\\\\n        action('on Update clicked')(filterObject)\\\\\\\\n      }\\\\\\\\n      appliedFilterId={text('AppliedFilterId', '5f92b95637c24c28eb950447')}\\\\\\\\n      onFavourite={(filterObject: any) =>\\\\\\\\n        action('Favourites CLicked')(filterObject)\\\\\\\\n      }\\\\\\\\n      onAddFilter={action('Add Filter Called')}\\\\\\\\n      onAddCondition={action('Add Condition Called')}\\\\\\\\n      ThirdElement={ThirdElement}\\\\\\\\n      ThirdElementFormatter={ThirdElementFormatter}\\\\\\\\n      saveTooltip='Save'\\\\\\\\n      duplicateTooltip='Create Duplicate'\\\\\\\\n      cancelTooltip='Cancel'\\\\\\\\n      removeFavouriteTooltip='Remove Favourite'\\\\\\\\n      markAsfavouriteTooltip='Mark as Favourite'\\\\\\\\n      style={{\\\\\\\\n        position: 'absolute',\\\\\\\\n        left: '0px'\\\\\\\\n      }}\\\\\\\\n    >\\\\\\\\n      {({ open, setOpen, chips }: tAdvancedFilterChildren) => (\\\\\\\\n        <>\\\\\\\\n          <IconButton\\\\\\\\n            onClick={() => setOpen && setOpen(!open)}\\\\\\\\n            intent='default'\\\\\\\\n            iconVariant='icomoon-funel'\\\\\\\\n            children={'Advanced Filter ' + chips?.length}\\\\\\\\n          />\\\\\\\\n        </>\\\\\\\\n      )}\\\\\\\\n    </AdvancedFilter>\\\\\\\\n  </ThemeWrapper>\\\\\\\\n)\\\\\\\\n\\\\\\\";\\\\n// @ts-ignore\\\\nvar __ADDS_MAP__ = {};\\\\n// @ts-ignore\\\\nvar __MAIN_FILE_LOCATION__ = \\\\\\\"/AdvancedFilter.stories.tsx\\\\\\\";\\\\n// @ts-ignore\\\\nvar __MODULE_DEPENDENCIES__ = [];\\\\n// @ts-ignore\\\\nvar __LOCAL_DEPENDENCIES__ = {};\\\\n// @ts-ignore\\\\nvar __IDS_TO_FRAMEWORKS__ = {};\\\\n        \\\\nimport React from 'react'\\\\nimport { path } from '..'\\\\nimport { withKnobs, boolean, object, text } from '@storybook/addon-knobs'\\\\nimport AdvancedFilter from '.'\\\\nimport ThemeWrapper from '../../../utilities/components/ThemeWrapper'\\\\nimport { IThirdElementValue, tAdvancedFilterChildren } from './interfaces'\\\\nimport { action } from '@storybook/addon-actions'\\\\nimport IconButton from '../../atoms/IconButton'\\\\nimport operationTypes from './Data/operationType'\\\\nimport columnsStructure from './Data/columnsStructure'\\\\nimport filterData from './Data/filterData'\\\\nimport ThirdElement from './ThirdElement/index'\\\\n\\\\nexport default {parameters: {\\\\\\\"storySource\\\\\\\":{\\\\\\\"source\\\\\\\":\\\\\\\"import React from 'react'\\\\\\\\nimport { path } from '..'\\\\\\\\nimport { withKnobs, boolean, object, text } from '@storybook/addon-knobs'\\\\\\\\nimport AdvancedFilter from '.'\\\\\\\\nimport ThemeWrapper from '../../../utilities/components/ThemeWrapper'\\\\\\\\nimport { IThirdElementValue, tAdvancedFilterChildren } from './interfaces'\\\\\\\\nimport { action } from '@storybook/addon-actions'\\\\\\\\nimport IconButton from '../../atoms/IconButton'\\\\\\\\nimport operationTypes from './Data/operationType'\\\\\\\\nimport columnsStructure from './Data/columnsStructure'\\\\\\\\nimport filterData from './Data/filterData'\\\\\\\\nimport ThirdElement from './ThirdElement/index'\\\\\\\\n\\\\\\\\nexport default {\\\\\\\\n  title: `${path}/AdvancedFilter`,\\\\\\\\n  decorators: [withKnobs],\\\\\\\\n  component: AdvancedFilter\\\\\\\\n}\\\\\\\\n\\\\\\\\nconst ThirdElementFormatter = (data: IThirdElementValue) => {\\\\\\\\n  switch (data?.type) {\\\\\\\\n    case 'calendar':\\\\\\\\n      return data.value\\\\\\\\n    default:\\\\\\\\n      return data?.label || data.value\\\\\\\\n  }\\\\\\\\n}\\\\\\\\n\\\\\\\\nexport const withPlayGround = () => (\\\\\\\\n  <ThemeWrapper>\\\\\\\\n    <AdvancedFilter\\\\\\\\n      showOpen={boolean('show Open', false)}\\\\\\\\n      backButton={boolean('back Button', false)}\\\\\\\\n      masterCondition={boolean('show Condition', true)}\\\\\\\\n      allowSort={boolean('show Sort', true)}\\\\\\\\n      allowFavourites={boolean('show favourites', true)}\\\\\\\\n      allowMultipleFilters={boolean('show Multiple Filters', true)}\\\\\\\\n      backButtonCallback={() => action('Back Button clicked')}\\\\\\\\n      chipsArray={object('preDefinedArrays', filterData)}\\\\\\\\n      dropDownOptions={object('columns Data', columnsStructure)}\\\\\\\\n      fieldOperation={object('operation Type', operationTypes)}\\\\\\\\n      onApply={(filterObject: any) => action('Apply clicked')(filterObject)}\\\\\\\\n      onRemove={(filterObject: any) =>\\\\\\\\n        action('on Remove Clicked')(filterObject)\\\\\\\\n      }\\\\\\\\n      onDelete={(filterObject: any) => action('Delete Clicked')(filterObject)}\\\\\\\\n      onSave={(filterObject: any) => action('on Save clicked')(filterObject)}\\\\\\\\n      onUpdate={(filterObject: any) =>\\\\\\\\n        action('on Update clicked')(filterObject)\\\\\\\\n      }\\\\\\\\n      appliedFilterId={text('AppliedFilterId', '5f92b95637c24c28eb950447')}\\\\\\\\n      onFavourite={(filterObject: any) =>\\\\\\\\n        action('Favourites CLicked')(filterObject)\\\\\\\\n      }\\\\\\\\n      onAddFilter={action('Add Filter Called')}\\\\\\\\n      onAddCondition={action('Add Condition Called')}\\\\\\\\n      ThirdElement={ThirdElement}\\\\\\\\n      ThirdElementFormatter={ThirdElementFormatter}\\\\\\\\n      saveTooltip='Save'\\\\\\\\n      duplicateTooltip='Create Duplicate'\\\\\\\\n      cancelTooltip='Cancel'\\\\\\\\n      removeFavouriteTooltip='Remove Favourite'\\\\\\\\n      markAsfavouriteTooltip='Mark as Favourite'\\\\\\\\n      style={{\\\\\\\\n        position: 'absolute',\\\\\\\\n        left: '0px'\\\\\\\\n      }}\\\\\\\\n    >\\\\\\\\n      {({ open, setOpen, chips }: tAdvancedFilterChildren) => (\\\\\\\\n        <>\\\\\\\\n          <IconButton\\\\\\\\n            onClick={() => setOpen && setOpen(!open)}\\\\\\\\n            intent='default'\\\\\\\\n            iconVariant='icomoon-funel'\\\\\\\\n            children={'Advanced Filter ' + chips?.length}\\\\\\\\n          />\\\\\\\\n        </>\\\\\\\\n      )}\\\\\\\\n    </AdvancedFilter>\\\\\\\\n  </ThemeWrapper>\\\\\\\\n)\\\\\\\\n\\\\\\\",\\\\\\\"locationsMap\\\\\\\":{}},},\\\\n  title: `${path}/AdvancedFilter`,\\\\n  decorators: [withKnobs],\\\\n  component: AdvancedFilter\\\\n}\\\\n\\\\nconst ThirdElementFormatter = (data: IThirdElementValue) => {\\\\n  switch (data?.type) {\\\\n    case 'calendar':\\\\n      return data.value\\\\n    default:\\\\n      return data?.label || data.value\\\\n  }\\\\n}\\\\n\\\\nexport const withPlayGround = addSourceDecorator(() => (\\\\n  <ThemeWrapper>\\\\n    <AdvancedFilter\\\\n      showOpen={boolean('show Open', false)}\\\\n      backButton={boolean('back Button', false)}\\\\n      masterCondition={boolean('show Condition', true)}\\\\n      allowSort={boolean('show Sort', true)}\\\\n      allowFavourites={boolean('show favourites', true)}\\\\n      allowMultipleFilters={boolean('show Multiple Filters', true)}\\\\n      backButtonCallback={() => action('Back Button clicked')}\\\\n      chipsArray={object('preDefinedArrays', filterData)}\\\\n      dropDownOptions={object('columns Data', columnsStructure)}\\\\n      fieldOperation={object('operation Type', operationTypes)}\\\\n      onApply={(filterObject: any) => action('Apply clicked')(filterObject)}\\\\n      onRemove={(filterObject: any) =>\\\\n        action('on Remove Clicked')(filterObject)\\\\n      }\\\\n      onDelete={(filterObject: any) => action('Delete Clicked')(filterObject)}\\\\n      onSave={(filterObject: any) => action('on Save clicked')(filterObject)}\\\\n      onUpdate={(filterObject: any) =>\\\\n        action('on Update clicked')(filterObject)\\\\n      }\\\\n      appliedFilterId={text('AppliedFilterId', '5f92b95637c24c28eb950447')}\\\\n      onFavourite={(filterObject: any) =>\\\\n        action('Favourites CLicked')(filterObject)\\\\n      }\\\\n      onAddFilter={action('Add Filter Called')}\\\\n      onAddCondition={action('Add Condition Called')}\\\\n      ThirdElement={ThirdElement}\\\\n      ThirdElementFormatter={ThirdElementFormatter}\\\\n      saveTooltip='Save'\\\\n      duplicateTooltip='Create Duplicate'\\\\n      cancelTooltip='Cancel'\\\\n      removeFavouriteTooltip='Remove Favourite'\\\\n      markAsfavouriteTooltip='Mark as Favourite'\\\\n      style={{\\\\n        position: 'absolute',\\\\n        left: '0px'\\\\n      }}\\\\n    >\\\\n      {({ open, setOpen, chips }: tAdvancedFilterChildren) => (\\\\n        <>\\\\n          <IconButton\\\\n            onClick={() => setOpen && setOpen(!open)}\\\\n            intent='default'\\\\n            iconVariant='icomoon-funel'\\\\n            children={'Advanced Filter ' + chips?.length}\\\\n          />\\\\n        </>\\\\n      )}\\\\n    </AdvancedFilter>\\\\n  </ThemeWrapper>\\\\n), {__STORY__, __ADDS_MAP__,__MAIN_FILE_LOCATION__,__MODULE_DEPENDENCIES__,__LOCAL_DEPENDENCIES__,__SOURCE_PREFIX__,__IDS_TO_FRAMEWORKS__});\\\",\\\"locationsMap\\\":{}},\\\"storySource\\\":{\\\"source\\\":\\\"import React from 'react'\\\\nimport { path } from '..'\\\\nimport { withKnobs, boolean, object, text } from '@storybook/addon-knobs'\\\\nimport AdvancedFilter from '.'\\\\nimport ThemeWrapper from '../../../utilities/components/ThemeWrapper'\\\\nimport { IThirdElementValue, tAdvancedFilterChildren } from './interfaces'\\\\nimport { action } from '@storybook/addon-actions'\\\\nimport IconButton from '../../atoms/IconButton'\\\\nimport operationTypes from './Data/operationType'\\\\nimport columnsStructure from './Data/columnsStructure'\\\\nimport filterData from './Data/filterData'\\\\nimport ThirdElement from './ThirdElement/index'\\\\n\\\\nexport default {\\\\n  title: `${path}/AdvancedFilter`,\\\\n  decorators: [withKnobs],\\\\n  component: AdvancedFilter\\\\n}\\\\n\\\\nconst ThirdElementFormatter = (data: IThirdElementValue) => {\\\\n  switch (data?.type) {\\\\n    case 'calendar':\\\\n      return data.value\\\\n    default:\\\\n      return data?.label || data.value\\\\n  }\\\\n}\\\\n\\\\nexport const withPlayGround = () => (\\\\n  <ThemeWrapper>\\\\n    <AdvancedFilter\\\\n      showOpen={boolean('show Open', false)}\\\\n      backButton={boolean('back Button', false)}\\\\n      masterCondition={boolean('show Condition', true)}\\\\n      allowSort={boolean('show Sort', true)}\\\\n      allowFavourites={boolean('show favourites', true)}\\\\n      allowMultipleFilters={boolean('show Multiple Filters', true)}\\\\n      backButtonCallback={() => action('Back Button clicked')}\\\\n      chipsArray={object('preDefinedArrays', filterData)}\\\\n      dropDownOptions={object('columns Data', columnsStructure)}\\\\n      fieldOperation={object('operation Type', operationTypes)}\\\\n      onApply={(filterObject: any) => action('Apply clicked')(filterObject)}\\\\n      onRemove={(filterObject: any) =>\\\\n        action('on Remove Clicked')(filterObject)\\\\n      }\\\\n      onDelete={(filterObject: any) => action('Delete Clicked')(filterObject)}\\\\n      onSave={(filterObject: any) => action('on Save clicked')(filterObject)}\\\\n      onUpdate={(filterObject: any) =>\\\\n        action('on Update clicked')(filterObject)\\\\n      }\\\\n      appliedFilterId={text('AppliedFilterId', '5f92b95637c24c28eb950447')}\\\\n      onFavourite={(filterObject: any) =>\\\\n        action('Favourites CLicked')(filterObject)\\\\n      }\\\\n      onAddFilter={action('Add Filter Called')}\\\\n      onAddCondition={action('Add Condition Called')}\\\\n      ThirdElement={ThirdElement}\\\\n      ThirdElementFormatter={ThirdElementFormatter}\\\\n      saveTooltip='Save'\\\\n      duplicateTooltip='Create Duplicate'\\\\n      cancelTooltip='Cancel'\\\\n      removeFavouriteTooltip='Remove Favourite'\\\\n      markAsfavouriteTooltip='Mark as Favourite'\\\\n      style={{\\\\n        position: 'absolute',\\\\n        left: '0px'\\\\n      }}\\\\n    >\\\\n      {({ open, setOpen, chips }: tAdvancedFilterChildren) => (\\\\n        <>\\\\n          <IconButton\\\\n            onClick={() => setOpen && setOpen(!open)}\\\\n            intent='default'\\\\n            iconVariant='icomoon-funel'\\\\n            children={'Advanced Filter ' + chips?.length}\\\\n          />\\\\n        </>\\\\n      )}\\\\n    </AdvancedFilter>\\\\n  </ThemeWrapper>\\\\n)\\\\n\\\",\\\"locationsMap\\\":{}},},\\n  title: `${path}/AdvancedFilter`,\\n  decorators: [withKnobs],\\n  component: AdvancedFilter\\n}\\n\\nconst ThirdElementFormatter = (data: IThirdElementValue) => {\\n  switch (data?.type) {\\n    case 'calendar':\\n      return data.value\\n    default:\\n      return data?.label || data.value\\n  }\\n}\\n\\nexport const withPlayGround = addSourceDecorator(addSourceDecorator(() => (\\n  <ThemeWrapper>\\n    <AdvancedFilter\\n      showOpen={boolean('show Open', false)}\\n      backButton={boolean('back Button', false)}\\n      masterCondition={boolean('show Condition', true)}\\n      allowSort={boolean('show Sort', true)}\\n      allowFavourites={boolean('show favourites', true)}\\n      allowMultipleFilters={boolean('show Multiple Filters', true)}\\n      backButtonCallback={() => action('Back Button clicked')}\\n      chipsArray={object('preDefinedArrays', filterData)}\\n      dropDownOptions={object('columns Data', columnsStructure)}\\n      fieldOperation={object('operation Type', operationTypes)}\\n      onApply={(filterObject: any) => action('Apply clicked')(filterObject)}\\n      onRemove={(filterObject: any) =>\\n        action('on Remove Clicked')(filterObject)\\n      }\\n      onDelete={(filterObject: any) => action('Delete Clicked')(filterObject)}\\n      onSave={(filterObject: any) => action('on Save clicked')(filterObject)}\\n      onUpdate={(filterObject: any) =>\\n        action('on Update clicked')(filterObject)\\n      }\\n      appliedFilterId={text('AppliedFilterId', '5f92b95637c24c28eb950447')}\\n      onFavourite={(filterObject: any) =>\\n        action('Favourites CLicked')(filterObject)\\n      }\\n      onAddFilter={action('Add Filter Called')}\\n      onAddCondition={action('Add Condition Called')}\\n      ThirdElement={ThirdElement}\\n      ThirdElementFormatter={ThirdElementFormatter}\\n      saveTooltip='Save'\\n      duplicateTooltip='Create Duplicate'\\n      cancelTooltip='Cancel'\\n      removeFavouriteTooltip='Remove Favourite'\\n      markAsfavouriteTooltip='Mark as Favourite'\\n      style={{\\n        position: 'absolute',\\n        left: '0px'\\n      }}\\n    >\\n      {({ open, setOpen, chips }: tAdvancedFilterChildren) => (\\n        <>\\n          <IconButton\\n            onClick={() => setOpen && setOpen(!open)}\\n            intent='default'\\n            iconVariant='icomoon-funel'\\n            children={'Advanced Filter ' + chips?.length}\\n          />\\n        </>\\n      )}\\n    </AdvancedFilter>\\n  </ThemeWrapper>\\n), {__STORY__, __ADDS_MAP__,__MAIN_FILE_LOCATION__,__MODULE_DEPENDENCIES__,__LOCAL_DEPENDENCIES__,__SOURCE_PREFIX__,__IDS_TO_FRAMEWORKS__}), {__STORY__, __ADDS_MAP__,__MAIN_FILE_LOCATION__,__MODULE_DEPENDENCIES__,__LOCAL_DEPENDENCIES__,__SOURCE_PREFIX__,__IDS_TO_FRAMEWORKS__});\";\n// @ts-ignore\nvar __ADDS_MAP__ = {};\n// @ts-ignore\nvar __MAIN_FILE_LOCATION__ = \"/AdvancedFilter.stories.tsx\";\n// @ts-ignore\nvar __MODULE_DEPENDENCIES__ = [];\n// @ts-ignore\nvar __LOCAL_DEPENDENCIES__ = {};\n// @ts-ignore\nvar __IDS_TO_FRAMEWORKS__ = {};\n        \n\n/* eslint-disable */\n// @ts-nocheck\n// @ts-ignore\nvar withSourceLoader = require('@storybook/source-loader/preview').withSource;\n// @ts-ignore\nvar addSourceDecorator = require(\"@storybook/source-loader/preview\").addSource;\n// @ts-ignore\nvar __SOURCE_PREFIX__ = \"/Users/farhanansari/Desktop/CODE/PrxProject/untitled folder/reactStoryBook/src/components/organisms/AdvancedFilter\";\n// @ts-ignore\nvar __STORY__ = \"\\n\\n// @ts-nocheck\\n// @ts-ignore\\nvar withSourceLoader = require('@storybook/source-loader/preview').withSource;\\n// @ts-ignore\\nvar addSourceDecorator = require(\\\"@storybook/source-loader/preview\\\").addSource;\\n// @ts-ignore\\nvar __SOURCE_PREFIX__ = \\\"/Users/farhanansari/Desktop/CODE/PrxProject/untitled folder/reactStoryBook/src/components/organisms/AdvancedFilter\\\";\\n// @ts-ignore\\nvar __STORY__ = \\\"import React from 'react'\\\\nimport { path } from '..'\\\\nimport { withKnobs, boolean, object, text } from '@storybook/addon-knobs'\\\\nimport AdvancedFilter from '.'\\\\nimport ThemeWrapper from '../../../utilities/components/ThemeWrapper'\\\\nimport { IThirdElementValue, tAdvancedFilterChildren } from './interfaces'\\\\nimport { action } from '@storybook/addon-actions'\\\\nimport IconButton from '../../atoms/IconButton'\\\\nimport operationTypes from './Data/operationType'\\\\nimport columnsStructure from './Data/columnsStructure'\\\\nimport filterData from './Data/filterData'\\\\nimport ThirdElement from './ThirdElement/index'\\\\n\\\\nexport default {\\\\n  title: `${path}/AdvancedFilter`,\\\\n  decorators: [withKnobs],\\\\n  component: AdvancedFilter\\\\n}\\\\n\\\\nconst ThirdElementFormatter = (data: IThirdElementValue) => {\\\\n  switch (data?.type) {\\\\n    case 'calendar':\\\\n      return data.value\\\\n    default:\\\\n      return data?.label || data.value\\\\n  }\\\\n}\\\\n\\\\nexport const withPlayGround = () => (\\\\n  <ThemeWrapper>\\\\n    <AdvancedFilter\\\\n      showOpen={boolean('show Open', false)}\\\\n      backButton={boolean('back Button', false)}\\\\n      masterCondition={boolean('show Condition', true)}\\\\n      allowSort={boolean('show Sort', true)}\\\\n      allowFavourites={boolean('show favourites', true)}\\\\n      allowMultipleFilters={boolean('show Multiple Filters', true)}\\\\n      backButtonCallback={() => action('Back Button clicked')}\\\\n      chipsArray={object('preDefinedArrays', filterData)}\\\\n      dropDownOptions={object('columns Data', columnsStructure)}\\\\n      fieldOperation={object('operation Type', operationTypes)}\\\\n      onApply={(filterObject: any) => action('Apply clicked')(filterObject)}\\\\n      onRemove={(filterObject: any) =>\\\\n        action('on Remove Clicked')(filterObject)\\\\n      }\\\\n      onDelete={(filterObject: any) => action('Delete Clicked')(filterObject)}\\\\n      onSave={(filterObject: any) => action('on Save clicked')(filterObject)}\\\\n      onUpdate={(filterObject: any) =>\\\\n        action('on Update clicked')(filterObject)\\\\n      }\\\\n      appliedFilterId={text('AppliedFilterId', '5f92b95637c24c28eb950447')}\\\\n      onFavourite={(filterObject: any) =>\\\\n        action('Favourites CLicked')(filterObject)\\\\n      }\\\\n      onAddFilter={action('Add Filter Called')}\\\\n      onAddCondition={action('Add Condition Called')}\\\\n      ThirdElement={ThirdElement}\\\\n      ThirdElementFormatter={ThirdElementFormatter}\\\\n      saveTooltip='Save'\\\\n      duplicateTooltip='Create Duplicate'\\\\n      cancelTooltip='Cancel'\\\\n      removeFavouriteTooltip='Remove Favourite'\\\\n      markAsfavouriteTooltip='Mark as Favourite'\\\\n      style={{\\\\n        position: 'absolute',\\\\n        left: '0px'\\\\n      }}\\\\n    >\\\\n      {({ open, setOpen, chips }: tAdvancedFilterChildren) => (\\\\n        <>\\\\n          <IconButton\\\\n            onClick={() => setOpen && setOpen(!open)}\\\\n            intent='default'\\\\n            iconVariant='icomoon-funel'\\\\n            children={'Advanced Filter ' + chips?.length}\\\\n          />\\\\n        </>\\\\n      )}\\\\n    </AdvancedFilter>\\\\n  </ThemeWrapper>\\\\n)\\\\n\\\";\\n// @ts-ignore\\nvar __ADDS_MAP__ = {};\\n// @ts-ignore\\nvar __MAIN_FILE_LOCATION__ = \\\"/AdvancedFilter.stories.tsx\\\";\\n// @ts-ignore\\nvar __MODULE_DEPENDENCIES__ = [];\\n// @ts-ignore\\nvar __LOCAL_DEPENDENCIES__ = {};\\n// @ts-ignore\\nvar __IDS_TO_FRAMEWORKS__ = {};\\n        \\nimport React from 'react'\\nimport { path } from '..'\\nimport { withKnobs, boolean, object, text } from '@storybook/addon-knobs'\\nimport AdvancedFilter from '.'\\nimport ThemeWrapper from '../../../utilities/components/ThemeWrapper'\\nimport { IThirdElementValue, tAdvancedFilterChildren } from './interfaces'\\nimport { action } from '@storybook/addon-actions'\\nimport IconButton from '../../atoms/IconButton'\\nimport operationTypes from './Data/operationType'\\nimport columnsStructure from './Data/columnsStructure'\\nimport filterData from './Data/filterData'\\nimport ThirdElement from './ThirdElement/index'\\n\\nexport default {parameters: {\\\"storySource\\\":{\\\"source\\\":\\\"import React from 'react'\\\\nimport { path } from '..'\\\\nimport { withKnobs, boolean, object, text } from '@storybook/addon-knobs'\\\\nimport AdvancedFilter from '.'\\\\nimport ThemeWrapper from '../../../utilities/components/ThemeWrapper'\\\\nimport { IThirdElementValue, tAdvancedFilterChildren } from './interfaces'\\\\nimport { action } from '@storybook/addon-actions'\\\\nimport IconButton from '../../atoms/IconButton'\\\\nimport operationTypes from './Data/operationType'\\\\nimport columnsStructure from './Data/columnsStructure'\\\\nimport filterData from './Data/filterData'\\\\nimport ThirdElement from './ThirdElement/index'\\\\n\\\\nexport default {\\\\n  title: `${path}/AdvancedFilter`,\\\\n  decorators: [withKnobs],\\\\n  component: AdvancedFilter\\\\n}\\\\n\\\\nconst ThirdElementFormatter = (data: IThirdElementValue) => {\\\\n  switch (data?.type) {\\\\n    case 'calendar':\\\\n      return data.value\\\\n    default:\\\\n      return data?.label || data.value\\\\n  }\\\\n}\\\\n\\\\nexport const withPlayGround = () => (\\\\n  <ThemeWrapper>\\\\n    <AdvancedFilter\\\\n      showOpen={boolean('show Open', false)}\\\\n      backButton={boolean('back Button', false)}\\\\n      masterCondition={boolean('show Condition', true)}\\\\n      allowSort={boolean('show Sort', true)}\\\\n      allowFavourites={boolean('show favourites', true)}\\\\n      allowMultipleFilters={boolean('show Multiple Filters', true)}\\\\n      backButtonCallback={() => action('Back Button clicked')}\\\\n      chipsArray={object('preDefinedArrays', filterData)}\\\\n      dropDownOptions={object('columns Data', columnsStructure)}\\\\n      fieldOperation={object('operation Type', operationTypes)}\\\\n      onApply={(filterObject: any) => action('Apply clicked')(filterObject)}\\\\n      onRemove={(filterObject: any) =>\\\\n        action('on Remove Clicked')(filterObject)\\\\n      }\\\\n      onDelete={(filterObject: any) => action('Delete Clicked')(filterObject)}\\\\n      onSave={(filterObject: any) => action('on Save clicked')(filterObject)}\\\\n      onUpdate={(filterObject: any) =>\\\\n        action('on Update clicked')(filterObject)\\\\n      }\\\\n      appliedFilterId={text('AppliedFilterId', '5f92b95637c24c28eb950447')}\\\\n      onFavourite={(filterObject: any) =>\\\\n        action('Favourites CLicked')(filterObject)\\\\n      }\\\\n      onAddFilter={action('Add Filter Called')}\\\\n      onAddCondition={action('Add Condition Called')}\\\\n      ThirdElement={ThirdElement}\\\\n      ThirdElementFormatter={ThirdElementFormatter}\\\\n      saveTooltip='Save'\\\\n      duplicateTooltip='Create Duplicate'\\\\n      cancelTooltip='Cancel'\\\\n      removeFavouriteTooltip='Remove Favourite'\\\\n      markAsfavouriteTooltip='Mark as Favourite'\\\\n      style={{\\\\n        position: 'absolute',\\\\n        left: '0px'\\\\n      }}\\\\n    >\\\\n      {({ open, setOpen, chips }: tAdvancedFilterChildren) => (\\\\n        <>\\\\n          <IconButton\\\\n            onClick={() => setOpen && setOpen(!open)}\\\\n            intent='default'\\\\n            iconVariant='icomoon-funel'\\\\n            children={'Advanced Filter ' + chips?.length}\\\\n          />\\\\n        </>\\\\n      )}\\\\n    </AdvancedFilter>\\\\n  </ThemeWrapper>\\\\n)\\\\n\\\",\\\"locationsMap\\\":{}},},\\n  title: `${path}/AdvancedFilter`,\\n  decorators: [withKnobs],\\n  component: AdvancedFilter\\n}\\n\\nconst ThirdElementFormatter = (data: IThirdElementValue) => {\\n  switch (data?.type) {\\n    case 'calendar':\\n      return data.value\\n    default:\\n      return data?.label || data.value\\n  }\\n}\\n\\nexport const withPlayGround = addSourceDecorator(() => (\\n  <ThemeWrapper>\\n    <AdvancedFilter\\n      showOpen={boolean('show Open', false)}\\n      backButton={boolean('back Button', false)}\\n      masterCondition={boolean('show Condition', true)}\\n      allowSort={boolean('show Sort', true)}\\n      allowFavourites={boolean('show favourites', true)}\\n      allowMultipleFilters={boolean('show Multiple Filters', true)}\\n      backButtonCallback={() => action('Back Button clicked')}\\n      chipsArray={object('preDefinedArrays', filterData)}\\n      dropDownOptions={object('columns Data', columnsStructure)}\\n      fieldOperation={object('operation Type', operationTypes)}\\n      onApply={(filterObject: any) => action('Apply clicked')(filterObject)}\\n      onRemove={(filterObject: any) =>\\n        action('on Remove Clicked')(filterObject)\\n      }\\n      onDelete={(filterObject: any) => action('Delete Clicked')(filterObject)}\\n      onSave={(filterObject: any) => action('on Save clicked')(filterObject)}\\n      onUpdate={(filterObject: any) =>\\n        action('on Update clicked')(filterObject)\\n      }\\n      appliedFilterId={text('AppliedFilterId', '5f92b95637c24c28eb950447')}\\n      onFavourite={(filterObject: any) =>\\n        action('Favourites CLicked')(filterObject)\\n      }\\n      onAddFilter={action('Add Filter Called')}\\n      onAddCondition={action('Add Condition Called')}\\n      ThirdElement={ThirdElement}\\n      ThirdElementFormatter={ThirdElementFormatter}\\n      saveTooltip='Save'\\n      duplicateTooltip='Create Duplicate'\\n      cancelTooltip='Cancel'\\n      removeFavouriteTooltip='Remove Favourite'\\n      markAsfavouriteTooltip='Mark as Favourite'\\n      style={{\\n        position: 'absolute',\\n        left: '0px'\\n      }}\\n    >\\n      {({ open, setOpen, chips }: tAdvancedFilterChildren) => (\\n        <>\\n          <IconButton\\n            onClick={() => setOpen && setOpen(!open)}\\n            intent='default'\\n            iconVariant='icomoon-funel'\\n            children={'Advanced Filter ' + chips?.length}\\n          />\\n        </>\\n      )}\\n    </AdvancedFilter>\\n  </ThemeWrapper>\\n), {__STORY__, __ADDS_MAP__,__MAIN_FILE_LOCATION__,__MODULE_DEPENDENCIES__,__LOCAL_DEPENDENCIES__,__SOURCE_PREFIX__,__IDS_TO_FRAMEWORKS__});\";\n// @ts-ignore\nvar __ADDS_MAP__ = {};\n// @ts-ignore\nvar __MAIN_FILE_LOCATION__ = \"/AdvancedFilter.stories.tsx\";\n// @ts-ignore\nvar __MODULE_DEPENDENCIES__ = [];\n// @ts-ignore\nvar __LOCAL_DEPENDENCIES__ = {};\n// @ts-ignore\nvar __IDS_TO_FRAMEWORKS__ = {};\n        \n\n/* eslint-disable */\n// @ts-nocheck\n// @ts-ignore\nvar withSourceLoader = require('@storybook/source-loader/preview').withSource;\n// @ts-ignore\nvar addSourceDecorator = require(\"@storybook/source-loader/preview\").addSource;\n// @ts-ignore\nvar __SOURCE_PREFIX__ = \"/Users/farhanansari/Desktop/CODE/PrxProject/untitled folder/reactStoryBook/src/components/organisms/AdvancedFilter\";\n// @ts-ignore\nvar __STORY__ = \"import React from 'react'\\nimport { path } from '..'\\nimport { withKnobs, boolean, object, text } from '@storybook/addon-knobs'\\nimport AdvancedFilter from '.'\\nimport ThemeWrapper from '../../../utilities/components/ThemeWrapper'\\nimport { IThirdElementValue, tAdvancedFilterChildren } from './interfaces'\\nimport { action } from '@storybook/addon-actions'\\nimport IconButton from '../../atoms/IconButton'\\nimport operationTypes from './Data/operationType'\\nimport columnsStructure from './Data/columnsStructure'\\nimport filterData from './Data/filterData'\\nimport ThirdElement from './ThirdElement/index'\\n\\nexport default {\\n  title: `${path}/AdvancedFilter`,\\n  decorators: [withKnobs],\\n  component: AdvancedFilter\\n}\\n\\nconst ThirdElementFormatter = (data: IThirdElementValue) => {\\n  switch (data?.type) {\\n    case 'calendar':\\n      return data.value\\n    default:\\n      return data?.label || data.value\\n  }\\n}\\n\\nexport const withPlayGround = () => (\\n  <ThemeWrapper>\\n    <AdvancedFilter\\n      showOpen={boolean('show Open', false)}\\n      backButton={boolean('back Button', false)}\\n      masterCondition={boolean('show Condition', true)}\\n      allowSort={boolean('show Sort', true)}\\n      allowFavourites={boolean('show favourites', true)}\\n      allowMultipleFilters={boolean('show Multiple Filters', true)}\\n      backButtonCallback={() => action('Back Button clicked')}\\n      chipsArray={object('preDefinedArrays', filterData)}\\n      dropDownOptions={object('columns Data', columnsStructure)}\\n      fieldOperation={object('operation Type', operationTypes)}\\n      onApply={(filterObject: any) => action('Apply clicked')(filterObject)}\\n      onRemove={(filterObject: any) =>\\n        action('on Remove Clicked')(filterObject)\\n      }\\n      onDelete={(filterObject: any) => action('Delete Clicked')(filterObject)}\\n      onSave={(filterObject: any) => action('on Save clicked')(filterObject)}\\n      onUpdate={(filterObject: any) =>\\n        action('on Update clicked')(filterObject)\\n      }\\n      appliedFilterId={text('AppliedFilterId', '5f92b95637c24c28eb950447')}\\n      onFavourite={(filterObject: any) =>\\n        action('Favourites CLicked')(filterObject)\\n      }\\n      onAddFilter={action('Add Filter Called')}\\n      onAddCondition={action('Add Condition Called')}\\n      ThirdElement={ThirdElement}\\n      ThirdElementFormatter={ThirdElementFormatter}\\n      saveTooltip='Save'\\n      duplicateTooltip='Create Duplicate'\\n      cancelTooltip='Cancel'\\n      removeFavouriteTooltip='Remove Favourite'\\n      markAsfavouriteTooltip='Mark as Favourite'\\n      style={{\\n        position: 'absolute',\\n        left: '0px'\\n      }}\\n    >\\n      {({ open, setOpen, chips }: tAdvancedFilterChildren) => (\\n        <>\\n          <IconButton\\n            onClick={() => setOpen && setOpen(!open)}\\n            intent='default'\\n            iconVariant='icomoon-funel'\\n            children={'Advanced Filter ' + chips?.length}\\n          />\\n        </>\\n      )}\\n    </AdvancedFilter>\\n  </ThemeWrapper>\\n)\\n\";\n// @ts-ignore\nvar __ADDS_MAP__ = {};\n// @ts-ignore\nvar __MAIN_FILE_LOCATION__ = \"/AdvancedFilter.stories.tsx\";\n// @ts-ignore\nvar __MODULE_DEPENDENCIES__ = [];\n// @ts-ignore\nvar __LOCAL_DEPENDENCIES__ = {};\n// @ts-ignore\nvar __IDS_TO_FRAMEWORKS__ = {};\n        \nimport React from 'react'\nimport { path } from '..'\nimport { withKnobs, boolean, object, text } from '@storybook/addon-knobs'\nimport AdvancedFilter from '.'\nimport ThemeWrapper from '../../../utilities/components/ThemeWrapper'\nimport { IThirdElementValue, tAdvancedFilterChildren } from './interfaces'\nimport { action } from '@storybook/addon-actions'\nimport IconButton from '../../atoms/IconButton'\nimport operationTypes from './Data/operationType'\nimport columnsStructure from './Data/columnsStructure'\nimport filterData from './Data/filterData'\nimport ThirdElement from './ThirdElement/index'\n\nexport default {parameters: {\"storySource\":{\"source\":\"\\n\\n// @ts-nocheck\\n// @ts-ignore\\nvar withSourceLoader = require('@storybook/source-loader/preview').withSource;\\n// @ts-ignore\\nvar addSourceDecorator = require(\\\"@storybook/source-loader/preview\\\").addSource;\\n// @ts-ignore\\nvar __SOURCE_PREFIX__ = \\\"/Users/farhanansari/Desktop/CODE/PrxProject/untitled folder/reactStoryBook/src/components/organisms/AdvancedFilter\\\";\\n// @ts-ignore\\nvar __STORY__ = \\\"\\\\n\\\\n// @ts-nocheck\\\\n// @ts-ignore\\\\nvar withSourceLoader = require('@storybook/source-loader/preview').withSource;\\\\n// @ts-ignore\\\\nvar addSourceDecorator = require(\\\\\\\"@storybook/source-loader/preview\\\\\\\").addSource;\\\\n// @ts-ignore\\\\nvar __SOURCE_PREFIX__ = \\\\\\\"/Users/farhanansari/Desktop/CODE/PrxProject/untitled folder/reactStoryBook/src/components/organisms/AdvancedFilter\\\\\\\";\\\\n// @ts-ignore\\\\nvar __STORY__ = \\\\\\\"import React from 'react'\\\\\\\\nimport { path } from '..'\\\\\\\\nimport { withKnobs, boolean, object, text } from '@storybook/addon-knobs'\\\\\\\\nimport AdvancedFilter from '.'\\\\\\\\nimport ThemeWrapper from '../../../utilities/components/ThemeWrapper'\\\\\\\\nimport { IThirdElementValue, tAdvancedFilterChildren } from './interfaces'\\\\\\\\nimport { action } from '@storybook/addon-actions'\\\\\\\\nimport IconButton from '../../atoms/IconButton'\\\\\\\\nimport operationTypes from './Data/operationType'\\\\\\\\nimport columnsStructure from './Data/columnsStructure'\\\\\\\\nimport filterData from './Data/filterData'\\\\\\\\nimport ThirdElement from './ThirdElement/index'\\\\\\\\n\\\\\\\\nexport default {\\\\\\\\n  title: `${path}/AdvancedFilter`,\\\\\\\\n  decorators: [withKnobs],\\\\\\\\n  component: AdvancedFilter\\\\\\\\n}\\\\\\\\n\\\\\\\\nconst ThirdElementFormatter = (data: IThirdElementValue) => {\\\\\\\\n  switch (data?.type) {\\\\\\\\n    case 'calendar':\\\\\\\\n      return data.value\\\\\\\\n    default:\\\\\\\\n      return data?.label || data.value\\\\\\\\n  }\\\\\\\\n}\\\\\\\\n\\\\\\\\nexport const withPlayGround = () => (\\\\\\\\n  <ThemeWrapper>\\\\\\\\n    <AdvancedFilter\\\\\\\\n      showOpen={boolean('show Open', false)}\\\\\\\\n      backButton={boolean('back Button', false)}\\\\\\\\n      masterCondition={boolean('show Condition', true)}\\\\\\\\n      allowSort={boolean('show Sort', true)}\\\\\\\\n      allowFavourites={boolean('show favourites', true)}\\\\\\\\n      allowMultipleFilters={boolean('show Multiple Filters', true)}\\\\\\\\n      backButtonCallback={() => action('Back Button clicked')}\\\\\\\\n      chipsArray={object('preDefinedArrays', filterData)}\\\\\\\\n      dropDownOptions={object('columns Data', columnsStructure)}\\\\\\\\n      fieldOperation={object('operation Type', operationTypes)}\\\\\\\\n      onApply={(filterObject: any) => action('Apply clicked')(filterObject)}\\\\\\\\n      onRemove={(filterObject: any) =>\\\\\\\\n        action('on Remove Clicked')(filterObject)\\\\\\\\n      }\\\\\\\\n      onDelete={(filterObject: any) => action('Delete Clicked')(filterObject)}\\\\\\\\n      onSave={(filterObject: any) => action('on Save clicked')(filterObject)}\\\\\\\\n      onUpdate={(filterObject: any) =>\\\\\\\\n        action('on Update clicked')(filterObject)\\\\\\\\n      }\\\\\\\\n      appliedFilterId={text('AppliedFilterId', '5f92b95637c24c28eb950447')}\\\\\\\\n      onFavourite={(filterObject: any) =>\\\\\\\\n        action('Favourites CLicked')(filterObject)\\\\\\\\n      }\\\\\\\\n      onAddFilter={action('Add Filter Called')}\\\\\\\\n      onAddCondition={action('Add Condition Called')}\\\\\\\\n      ThirdElement={ThirdElement}\\\\\\\\n      ThirdElementFormatter={ThirdElementFormatter}\\\\\\\\n      saveTooltip='Save'\\\\\\\\n      duplicateTooltip='Create Duplicate'\\\\\\\\n      cancelTooltip='Cancel'\\\\\\\\n      removeFavouriteTooltip='Remove Favourite'\\\\\\\\n      markAsfavouriteTooltip='Mark as Favourite'\\\\\\\\n      style={{\\\\\\\\n        position: 'absolute',\\\\\\\\n        left: '0px'\\\\\\\\n      }}\\\\\\\\n    >\\\\\\\\n      {({ open, setOpen, chips }: tAdvancedFilterChildren) => (\\\\\\\\n        <>\\\\\\\\n          <IconButton\\\\\\\\n            onClick={() => setOpen && setOpen(!open)}\\\\\\\\n            intent='default'\\\\\\\\n            iconVariant='icomoon-funel'\\\\\\\\n            children={'Advanced Filter ' + chips?.length}\\\\\\\\n          />\\\\\\\\n        </>\\\\\\\\n      )}\\\\\\\\n    </AdvancedFilter>\\\\\\\\n  </ThemeWrapper>\\\\\\\\n)\\\\\\\\n\\\\\\\";\\\\n// @ts-ignore\\\\nvar __ADDS_MAP__ = {};\\\\n// @ts-ignore\\\\nvar __MAIN_FILE_LOCATION__ = \\\\\\\"/AdvancedFilter.stories.tsx\\\\\\\";\\\\n// @ts-ignore\\\\nvar __MODULE_DEPENDENCIES__ = [];\\\\n// @ts-ignore\\\\nvar __LOCAL_DEPENDENCIES__ = {};\\\\n// @ts-ignore\\\\nvar __IDS_TO_FRAMEWORKS__ = {};\\\\n        \\\\nimport React from 'react'\\\\nimport { path } from '..'\\\\nimport { withKnobs, boolean, object, text } from '@storybook/addon-knobs'\\\\nimport AdvancedFilter from '.'\\\\nimport ThemeWrapper from '../../../utilities/components/ThemeWrapper'\\\\nimport { IThirdElementValue, tAdvancedFilterChildren } from './interfaces'\\\\nimport { action } from '@storybook/addon-actions'\\\\nimport IconButton from '../../atoms/IconButton'\\\\nimport operationTypes from './Data/operationType'\\\\nimport columnsStructure from './Data/columnsStructure'\\\\nimport filterData from './Data/filterData'\\\\nimport ThirdElement from './ThirdElement/index'\\\\n\\\\nexport default {parameters: {\\\\\\\"storySource\\\\\\\":{\\\\\\\"source\\\\\\\":\\\\\\\"import React from 'react'\\\\\\\\nimport { path } from '..'\\\\\\\\nimport { withKnobs, boolean, object, text } from '@storybook/addon-knobs'\\\\\\\\nimport AdvancedFilter from '.'\\\\\\\\nimport ThemeWrapper from '../../../utilities/components/ThemeWrapper'\\\\\\\\nimport { IThirdElementValue, tAdvancedFilterChildren } from './interfaces'\\\\\\\\nimport { action } from '@storybook/addon-actions'\\\\\\\\nimport IconButton from '../../atoms/IconButton'\\\\\\\\nimport operationTypes from './Data/operationType'\\\\\\\\nimport columnsStructure from './Data/columnsStructure'\\\\\\\\nimport filterData from './Data/filterData'\\\\\\\\nimport ThirdElement from './ThirdElement/index'\\\\\\\\n\\\\\\\\nexport default {\\\\\\\\n  title: `${path}/AdvancedFilter`,\\\\\\\\n  decorators: [withKnobs],\\\\\\\\n  component: AdvancedFilter\\\\\\\\n}\\\\\\\\n\\\\\\\\nconst ThirdElementFormatter = (data: IThirdElementValue) => {\\\\\\\\n  switch (data?.type) {\\\\\\\\n    case 'calendar':\\\\\\\\n      return data.value\\\\\\\\n    default:\\\\\\\\n      return data?.label || data.value\\\\\\\\n  }\\\\\\\\n}\\\\\\\\n\\\\\\\\nexport const withPlayGround = () => (\\\\\\\\n  <ThemeWrapper>\\\\\\\\n    <AdvancedFilter\\\\\\\\n      showOpen={boolean('show Open', false)}\\\\\\\\n      backButton={boolean('back Button', false)}\\\\\\\\n      masterCondition={boolean('show Condition', true)}\\\\\\\\n      allowSort={boolean('show Sort', true)}\\\\\\\\n      allowFavourites={boolean('show favourites', true)}\\\\\\\\n      allowMultipleFilters={boolean('show Multiple Filters', true)}\\\\\\\\n      backButtonCallback={() => action('Back Button clicked')}\\\\\\\\n      chipsArray={object('preDefinedArrays', filterData)}\\\\\\\\n      dropDownOptions={object('columns Data', columnsStructure)}\\\\\\\\n      fieldOperation={object('operation Type', operationTypes)}\\\\\\\\n      onApply={(filterObject: any) => action('Apply clicked')(filterObject)}\\\\\\\\n      onRemove={(filterObject: any) =>\\\\\\\\n        action('on Remove Clicked')(filterObject)\\\\\\\\n      }\\\\\\\\n      onDelete={(filterObject: any) => action('Delete Clicked')(filterObject)}\\\\\\\\n      onSave={(filterObject: any) => action('on Save clicked')(filterObject)}\\\\\\\\n      onUpdate={(filterObject: any) =>\\\\\\\\n        action('on Update clicked')(filterObject)\\\\\\\\n      }\\\\\\\\n      appliedFilterId={text('AppliedFilterId', '5f92b95637c24c28eb950447')}\\\\\\\\n      onFavourite={(filterObject: any) =>\\\\\\\\n        action('Favourites CLicked')(filterObject)\\\\\\\\n      }\\\\\\\\n      onAddFilter={action('Add Filter Called')}\\\\\\\\n      onAddCondition={action('Add Condition Called')}\\\\\\\\n      ThirdElement={ThirdElement}\\\\\\\\n      ThirdElementFormatter={ThirdElementFormatter}\\\\\\\\n      saveTooltip='Save'\\\\\\\\n      duplicateTooltip='Create Duplicate'\\\\\\\\n      cancelTooltip='Cancel'\\\\\\\\n      removeFavouriteTooltip='Remove Favourite'\\\\\\\\n      markAsfavouriteTooltip='Mark as Favourite'\\\\\\\\n      style={{\\\\\\\\n        position: 'absolute',\\\\\\\\n        left: '0px'\\\\\\\\n      }}\\\\\\\\n    >\\\\\\\\n      {({ open, setOpen, chips }: tAdvancedFilterChildren) => (\\\\\\\\n        <>\\\\\\\\n          <IconButton\\\\\\\\n            onClick={() => setOpen && setOpen(!open)}\\\\\\\\n            intent='default'\\\\\\\\n            iconVariant='icomoon-funel'\\\\\\\\n            children={'Advanced Filter ' + chips?.length}\\\\\\\\n          />\\\\\\\\n        </>\\\\\\\\n      )}\\\\\\\\n    </AdvancedFilter>\\\\\\\\n  </ThemeWrapper>\\\\\\\\n)\\\\\\\\n\\\\\\\",\\\\\\\"locationsMap\\\\\\\":{}},},\\\\n  title: `${path}/AdvancedFilter`,\\\\n  decorators: [withKnobs],\\\\n  component: AdvancedFilter\\\\n}\\\\n\\\\nconst ThirdElementFormatter = (data: IThirdElementValue) => {\\\\n  switch (data?.type) {\\\\n    case 'calendar':\\\\n      return data.value\\\\n    default:\\\\n      return data?.label || data.value\\\\n  }\\\\n}\\\\n\\\\nexport const withPlayGround = addSourceDecorator(() => (\\\\n  <ThemeWrapper>\\\\n    <AdvancedFilter\\\\n      showOpen={boolean('show Open', false)}\\\\n      backButton={boolean('back Button', false)}\\\\n      masterCondition={boolean('show Condition', true)}\\\\n      allowSort={boolean('show Sort', true)}\\\\n      allowFavourites={boolean('show favourites', true)}\\\\n      allowMultipleFilters={boolean('show Multiple Filters', true)}\\\\n      backButtonCallback={() => action('Back Button clicked')}\\\\n      chipsArray={object('preDefinedArrays', filterData)}\\\\n      dropDownOptions={object('columns Data', columnsStructure)}\\\\n      fieldOperation={object('operation Type', operationTypes)}\\\\n      onApply={(filterObject: any) => action('Apply clicked')(filterObject)}\\\\n      onRemove={(filterObject: any) =>\\\\n        action('on Remove Clicked')(filterObject)\\\\n      }\\\\n      onDelete={(filterObject: any) => action('Delete Clicked')(filterObject)}\\\\n      onSave={(filterObject: any) => action('on Save clicked')(filterObject)}\\\\n      onUpdate={(filterObject: any) =>\\\\n        action('on Update clicked')(filterObject)\\\\n      }\\\\n      appliedFilterId={text('AppliedFilterId', '5f92b95637c24c28eb950447')}\\\\n      onFavourite={(filterObject: any) =>\\\\n        action('Favourites CLicked')(filterObject)\\\\n      }\\\\n      onAddFilter={action('Add Filter Called')}\\\\n      onAddCondition={action('Add Condition Called')}\\\\n      ThirdElement={ThirdElement}\\\\n      ThirdElementFormatter={ThirdElementFormatter}\\\\n      saveTooltip='Save'\\\\n      duplicateTooltip='Create Duplicate'\\\\n      cancelTooltip='Cancel'\\\\n      removeFavouriteTooltip='Remove Favourite'\\\\n      markAsfavouriteTooltip='Mark as Favourite'\\\\n      style={{\\\\n        position: 'absolute',\\\\n        left: '0px'\\\\n      }}\\\\n    >\\\\n      {({ open, setOpen, chips }: tAdvancedFilterChildren) => (\\\\n        <>\\\\n          <IconButton\\\\n            onClick={() => setOpen && setOpen(!open)}\\\\n            intent='default'\\\\n            iconVariant='icomoon-funel'\\\\n            children={'Advanced Filter ' + chips?.length}\\\\n          />\\\\n        </>\\\\n      )}\\\\n    </AdvancedFilter>\\\\n  </ThemeWrapper>\\\\n), {__STORY__, __ADDS_MAP__,__MAIN_FILE_LOCATION__,__MODULE_DEPENDENCIES__,__LOCAL_DEPENDENCIES__,__SOURCE_PREFIX__,__IDS_TO_FRAMEWORKS__});\\\";\\n// @ts-ignore\\nvar __ADDS_MAP__ = {};\\n// @ts-ignore\\nvar __MAIN_FILE_LOCATION__ = \\\"/AdvancedFilter.stories.tsx\\\";\\n// @ts-ignore\\nvar __MODULE_DEPENDENCIES__ = [];\\n// @ts-ignore\\nvar __LOCAL_DEPENDENCIES__ = {};\\n// @ts-ignore\\nvar __IDS_TO_FRAMEWORKS__ = {};\\n        \\n\\n\\n// @ts-nocheck\\n// @ts-ignore\\nvar withSourceLoader = require('@storybook/source-loader/preview').withSource;\\n// @ts-ignore\\nvar addSourceDecorator = require(\\\"@storybook/source-loader/preview\\\").addSource;\\n// @ts-ignore\\nvar __SOURCE_PREFIX__ = \\\"/Users/farhanansari/Desktop/CODE/PrxProject/untitled folder/reactStoryBook/src/components/organisms/AdvancedFilter\\\";\\n// @ts-ignore\\nvar __STORY__ = \\\"import React from 'react'\\\\nimport { path } from '..'\\\\nimport { withKnobs, boolean, object, text } from '@storybook/addon-knobs'\\\\nimport AdvancedFilter from '.'\\\\nimport ThemeWrapper from '../../../utilities/components/ThemeWrapper'\\\\nimport { IThirdElementValue, tAdvancedFilterChildren } from './interfaces'\\\\nimport { action } from '@storybook/addon-actions'\\\\nimport IconButton from '../../atoms/IconButton'\\\\nimport operationTypes from './Data/operationType'\\\\nimport columnsStructure from './Data/columnsStructure'\\\\nimport filterData from './Data/filterData'\\\\nimport ThirdElement from './ThirdElement/index'\\\\n\\\\nexport default {\\\\n  title: `${path}/AdvancedFilter`,\\\\n  decorators: [withKnobs],\\\\n  component: AdvancedFilter\\\\n}\\\\n\\\\nconst ThirdElementFormatter = (data: IThirdElementValue) => {\\\\n  switch (data?.type) {\\\\n    case 'calendar':\\\\n      return data.value\\\\n    default:\\\\n      return data?.label || data.value\\\\n  }\\\\n}\\\\n\\\\nexport const withPlayGround = () => (\\\\n  <ThemeWrapper>\\\\n    <AdvancedFilter\\\\n      showOpen={boolean('show Open', false)}\\\\n      backButton={boolean('back Button', false)}\\\\n      masterCondition={boolean('show Condition', true)}\\\\n      allowSort={boolean('show Sort', true)}\\\\n      allowFavourites={boolean('show favourites', true)}\\\\n      allowMultipleFilters={boolean('show Multiple Filters', true)}\\\\n      backButtonCallback={() => action('Back Button clicked')}\\\\n      chipsArray={object('preDefinedArrays', filterData)}\\\\n      dropDownOptions={object('columns Data', columnsStructure)}\\\\n      fieldOperation={object('operation Type', operationTypes)}\\\\n      onApply={(filterObject: any) => action('Apply clicked')(filterObject)}\\\\n      onRemove={(filterObject: any) =>\\\\n        action('on Remove Clicked')(filterObject)\\\\n      }\\\\n      onDelete={(filterObject: any) => action('Delete Clicked')(filterObject)}\\\\n      onSave={(filterObject: any) => action('on Save clicked')(filterObject)}\\\\n      onUpdate={(filterObject: any) =>\\\\n        action('on Update clicked')(filterObject)\\\\n      }\\\\n      appliedFilterId={text('AppliedFilterId', '5f92b95637c24c28eb950447')}\\\\n      onFavourite={(filterObject: any) =>\\\\n        action('Favourites CLicked')(filterObject)\\\\n      }\\\\n      onAddFilter={action('Add Filter Called')}\\\\n      onAddCondition={action('Add Condition Called')}\\\\n      ThirdElement={ThirdElement}\\\\n      ThirdElementFormatter={ThirdElementFormatter}\\\\n      saveTooltip='Save'\\\\n      duplicateTooltip='Create Duplicate'\\\\n      cancelTooltip='Cancel'\\\\n      removeFavouriteTooltip='Remove Favourite'\\\\n      markAsfavouriteTooltip='Mark as Favourite'\\\\n      style={{\\\\n        position: 'absolute',\\\\n        left: '0px'\\\\n      }}\\\\n    >\\\\n      {({ open, setOpen, chips }: tAdvancedFilterChildren) => (\\\\n        <>\\\\n          <IconButton\\\\n            onClick={() => setOpen && setOpen(!open)}\\\\n            intent='default'\\\\n            iconVariant='icomoon-funel'\\\\n            children={'Advanced Filter ' + chips?.length}\\\\n          />\\\\n        </>\\\\n      )}\\\\n    </AdvancedFilter>\\\\n  </ThemeWrapper>\\\\n)\\\\n\\\";\\n// @ts-ignore\\nvar __ADDS_MAP__ = {};\\n// @ts-ignore\\nvar __MAIN_FILE_LOCATION__ = \\\"/AdvancedFilter.stories.tsx\\\";\\n// @ts-ignore\\nvar __MODULE_DEPENDENCIES__ = [];\\n// @ts-ignore\\nvar __LOCAL_DEPENDENCIES__ = {};\\n// @ts-ignore\\nvar __IDS_TO_FRAMEWORKS__ = {};\\n        \\nimport React from 'react'\\nimport { path } from '..'\\nimport { withKnobs, boolean, object, text } from '@storybook/addon-knobs'\\nimport AdvancedFilter from '.'\\nimport ThemeWrapper from '../../../utilities/components/ThemeWrapper'\\nimport { IThirdElementValue, tAdvancedFilterChildren } from './interfaces'\\nimport { action } from '@storybook/addon-actions'\\nimport IconButton from '../../atoms/IconButton'\\nimport operationTypes from './Data/operationType'\\nimport columnsStructure from './Data/columnsStructure'\\nimport filterData from './Data/filterData'\\nimport ThirdElement from './ThirdElement/index'\\n\\nexport default {parameters: {\\\"storySource\\\":{\\\"source\\\":\\\"\\\\n\\\\n// @ts-nocheck\\\\n// @ts-ignore\\\\nvar withSourceLoader = require('@storybook/source-loader/preview').withSource;\\\\n// @ts-ignore\\\\nvar addSourceDecorator = require(\\\\\\\"@storybook/source-loader/preview\\\\\\\").addSource;\\\\n// @ts-ignore\\\\nvar __SOURCE_PREFIX__ = \\\\\\\"/Users/farhanansari/Desktop/CODE/PrxProject/untitled folder/reactStoryBook/src/components/organisms/AdvancedFilter\\\\\\\";\\\\n// @ts-ignore\\\\nvar __STORY__ = \\\\\\\"import React from 'react'\\\\\\\\nimport { path } from '..'\\\\\\\\nimport { withKnobs, boolean, object, text } from '@storybook/addon-knobs'\\\\\\\\nimport AdvancedFilter from '.'\\\\\\\\nimport ThemeWrapper from '../../../utilities/components/ThemeWrapper'\\\\\\\\nimport { IThirdElementValue, tAdvancedFilterChildren } from './interfaces'\\\\\\\\nimport { action } from '@storybook/addon-actions'\\\\\\\\nimport IconButton from '../../atoms/IconButton'\\\\\\\\nimport operationTypes from './Data/operationType'\\\\\\\\nimport columnsStructure from './Data/columnsStructure'\\\\\\\\nimport filterData from './Data/filterData'\\\\\\\\nimport ThirdElement from './ThirdElement/index'\\\\\\\\n\\\\\\\\nexport default {\\\\\\\\n  title: `${path}/AdvancedFilter`,\\\\\\\\n  decorators: [withKnobs],\\\\\\\\n  component: AdvancedFilter\\\\\\\\n}\\\\\\\\n\\\\\\\\nconst ThirdElementFormatter = (data: IThirdElementValue) => {\\\\\\\\n  switch (data?.type) {\\\\\\\\n    case 'calendar':\\\\\\\\n      return data.value\\\\\\\\n    default:\\\\\\\\n      return data?.label || data.value\\\\\\\\n  }\\\\\\\\n}\\\\\\\\n\\\\\\\\nexport const withPlayGround = () => (\\\\\\\\n  <ThemeWrapper>\\\\\\\\n    <AdvancedFilter\\\\\\\\n      showOpen={boolean('show Open', false)}\\\\\\\\n      backButton={boolean('back Button', false)}\\\\\\\\n      masterCondition={boolean('show Condition', true)}\\\\\\\\n      allowSort={boolean('show Sort', true)}\\\\\\\\n      allowFavourites={boolean('show favourites', true)}\\\\\\\\n      allowMultipleFilters={boolean('show Multiple Filters', true)}\\\\\\\\n      backButtonCallback={() => action('Back Button clicked')}\\\\\\\\n      chipsArray={object('preDefinedArrays', filterData)}\\\\\\\\n      dropDownOptions={object('columns Data', columnsStructure)}\\\\\\\\n      fieldOperation={object('operation Type', operationTypes)}\\\\\\\\n      onApply={(filterObject: any) => action('Apply clicked')(filterObject)}\\\\\\\\n      onRemove={(filterObject: any) =>\\\\\\\\n        action('on Remove Clicked')(filterObject)\\\\\\\\n      }\\\\\\\\n      onDelete={(filterObject: any) => action('Delete Clicked')(filterObject)}\\\\\\\\n      onSave={(filterObject: any) => action('on Save clicked')(filterObject)}\\\\\\\\n      onUpdate={(filterObject: any) =>\\\\\\\\n        action('on Update clicked')(filterObject)\\\\\\\\n      }\\\\\\\\n      appliedFilterId={text('AppliedFilterId', '5f92b95637c24c28eb950447')}\\\\\\\\n      onFavourite={(filterObject: any) =>\\\\\\\\n        action('Favourites CLicked')(filterObject)\\\\\\\\n      }\\\\\\\\n      onAddFilter={action('Add Filter Called')}\\\\\\\\n      onAddCondition={action('Add Condition Called')}\\\\\\\\n      ThirdElement={ThirdElement}\\\\\\\\n      ThirdElementFormatter={ThirdElementFormatter}\\\\\\\\n      saveTooltip='Save'\\\\\\\\n      duplicateTooltip='Create Duplicate'\\\\\\\\n      cancelTooltip='Cancel'\\\\\\\\n      removeFavouriteTooltip='Remove Favourite'\\\\\\\\n      markAsfavouriteTooltip='Mark as Favourite'\\\\\\\\n      style={{\\\\\\\\n        position: 'absolute',\\\\\\\\n        left: '0px'\\\\\\\\n      }}\\\\\\\\n    >\\\\\\\\n      {({ open, setOpen, chips }: tAdvancedFilterChildren) => (\\\\\\\\n        <>\\\\\\\\n          <IconButton\\\\\\\\n            onClick={() => setOpen && setOpen(!open)}\\\\\\\\n            intent='default'\\\\\\\\n            iconVariant='icomoon-funel'\\\\\\\\n            children={'Advanced Filter ' + chips?.length}\\\\\\\\n          />\\\\\\\\n        </>\\\\\\\\n      )}\\\\\\\\n    </AdvancedFilter>\\\\\\\\n  </ThemeWrapper>\\\\\\\\n)\\\\\\\\n\\\\\\\";\\\\n// @ts-ignore\\\\nvar __ADDS_MAP__ = {};\\\\n// @ts-ignore\\\\nvar __MAIN_FILE_LOCATION__ = \\\\\\\"/AdvancedFilter.stories.tsx\\\\\\\";\\\\n// @ts-ignore\\\\nvar __MODULE_DEPENDENCIES__ = [];\\\\n// @ts-ignore\\\\nvar __LOCAL_DEPENDENCIES__ = {};\\\\n// @ts-ignore\\\\nvar __IDS_TO_FRAMEWORKS__ = {};\\\\n        \\\\nimport React from 'react'\\\\nimport { path } from '..'\\\\nimport { withKnobs, boolean, object, text } from '@storybook/addon-knobs'\\\\nimport AdvancedFilter from '.'\\\\nimport ThemeWrapper from '../../../utilities/components/ThemeWrapper'\\\\nimport { IThirdElementValue, tAdvancedFilterChildren } from './interfaces'\\\\nimport { action } from '@storybook/addon-actions'\\\\nimport IconButton from '../../atoms/IconButton'\\\\nimport operationTypes from './Data/operationType'\\\\nimport columnsStructure from './Data/columnsStructure'\\\\nimport filterData from './Data/filterData'\\\\nimport ThirdElement from './ThirdElement/index'\\\\n\\\\nexport default {parameters: {\\\\\\\"storySource\\\\\\\":{\\\\\\\"source\\\\\\\":\\\\\\\"import React from 'react'\\\\\\\\nimport { path } from '..'\\\\\\\\nimport { withKnobs, boolean, object, text } from '@storybook/addon-knobs'\\\\\\\\nimport AdvancedFilter from '.'\\\\\\\\nimport ThemeWrapper from '../../../utilities/components/ThemeWrapper'\\\\\\\\nimport { IThirdElementValue, tAdvancedFilterChildren } from './interfaces'\\\\\\\\nimport { action } from '@storybook/addon-actions'\\\\\\\\nimport IconButton from '../../atoms/IconButton'\\\\\\\\nimport operationTypes from './Data/operationType'\\\\\\\\nimport columnsStructure from './Data/columnsStructure'\\\\\\\\nimport filterData from './Data/filterData'\\\\\\\\nimport ThirdElement from './ThirdElement/index'\\\\\\\\n\\\\\\\\nexport default {\\\\\\\\n  title: `${path}/AdvancedFilter`,\\\\\\\\n  decorators: [withKnobs],\\\\\\\\n  component: AdvancedFilter\\\\\\\\n}\\\\\\\\n\\\\\\\\nconst ThirdElementFormatter = (data: IThirdElementValue) => {\\\\\\\\n  switch (data?.type) {\\\\\\\\n    case 'calendar':\\\\\\\\n      return data.value\\\\\\\\n    default:\\\\\\\\n      return data?.label || data.value\\\\\\\\n  }\\\\\\\\n}\\\\\\\\n\\\\\\\\nexport const withPlayGround = () => (\\\\\\\\n  <ThemeWrapper>\\\\\\\\n    <AdvancedFilter\\\\\\\\n      showOpen={boolean('show Open', false)}\\\\\\\\n      backButton={boolean('back Button', false)}\\\\\\\\n      masterCondition={boolean('show Condition', true)}\\\\\\\\n      allowSort={boolean('show Sort', true)}\\\\\\\\n      allowFavourites={boolean('show favourites', true)}\\\\\\\\n      allowMultipleFilters={boolean('show Multiple Filters', true)}\\\\\\\\n      backButtonCallback={() => action('Back Button clicked')}\\\\\\\\n      chipsArray={object('preDefinedArrays', filterData)}\\\\\\\\n      dropDownOptions={object('columns Data', columnsStructure)}\\\\\\\\n      fieldOperation={object('operation Type', operationTypes)}\\\\\\\\n      onApply={(filterObject: any) => action('Apply clicked')(filterObject)}\\\\\\\\n      onRemove={(filterObject: any) =>\\\\\\\\n        action('on Remove Clicked')(filterObject)\\\\\\\\n      }\\\\\\\\n      onDelete={(filterObject: any) => action('Delete Clicked')(filterObject)}\\\\\\\\n      onSave={(filterObject: any) => action('on Save clicked')(filterObject)}\\\\\\\\n      onUpdate={(filterObject: any) =>\\\\\\\\n        action('on Update clicked')(filterObject)\\\\\\\\n      }\\\\\\\\n      appliedFilterId={text('AppliedFilterId', '5f92b95637c24c28eb950447')}\\\\\\\\n      onFavourite={(filterObject: any) =>\\\\\\\\n        action('Favourites CLicked')(filterObject)\\\\\\\\n      }\\\\\\\\n      onAddFilter={action('Add Filter Called')}\\\\\\\\n      onAddCondition={action('Add Condition Called')}\\\\\\\\n      ThirdElement={ThirdElement}\\\\\\\\n      ThirdElementFormatter={ThirdElementFormatter}\\\\\\\\n      saveTooltip='Save'\\\\\\\\n      duplicateTooltip='Create Duplicate'\\\\\\\\n      cancelTooltip='Cancel'\\\\\\\\n      removeFavouriteTooltip='Remove Favourite'\\\\\\\\n      markAsfavouriteTooltip='Mark as Favourite'\\\\\\\\n      style={{\\\\\\\\n        position: 'absolute',\\\\\\\\n        left: '0px'\\\\\\\\n      }}\\\\\\\\n    >\\\\\\\\n      {({ open, setOpen, chips }: tAdvancedFilterChildren) => (\\\\\\\\n        <>\\\\\\\\n          <IconButton\\\\\\\\n            onClick={() => setOpen && setOpen(!open)}\\\\\\\\n            intent='default'\\\\\\\\n            iconVariant='icomoon-funel'\\\\\\\\n            children={'Advanced Filter ' + chips?.length}\\\\\\\\n          />\\\\\\\\n        </>\\\\\\\\n      )}\\\\\\\\n    </AdvancedFilter>\\\\\\\\n  </ThemeWrapper>\\\\\\\\n)\\\\\\\\n\\\\\\\",\\\\\\\"locationsMap\\\\\\\":{}},},\\\\n  title: `${path}/AdvancedFilter`,\\\\n  decorators: [withKnobs],\\\\n  component: AdvancedFilter\\\\n}\\\\n\\\\nconst ThirdElementFormatter = (data: IThirdElementValue) => {\\\\n  switch (data?.type) {\\\\n    case 'calendar':\\\\n      return data.value\\\\n    default:\\\\n      return data?.label || data.value\\\\n  }\\\\n}\\\\n\\\\nexport const withPlayGround = addSourceDecorator(() => (\\\\n  <ThemeWrapper>\\\\n    <AdvancedFilter\\\\n      showOpen={boolean('show Open', false)}\\\\n      backButton={boolean('back Button', false)}\\\\n      masterCondition={boolean('show Condition', true)}\\\\n      allowSort={boolean('show Sort', true)}\\\\n      allowFavourites={boolean('show favourites', true)}\\\\n      allowMultipleFilters={boolean('show Multiple Filters', true)}\\\\n      backButtonCallback={() => action('Back Button clicked')}\\\\n      chipsArray={object('preDefinedArrays', filterData)}\\\\n      dropDownOptions={object('columns Data', columnsStructure)}\\\\n      fieldOperation={object('operation Type', operationTypes)}\\\\n      onApply={(filterObject: any) => action('Apply clicked')(filterObject)}\\\\n      onRemove={(filterObject: any) =>\\\\n        action('on Remove Clicked')(filterObject)\\\\n      }\\\\n      onDelete={(filterObject: any) => action('Delete Clicked')(filterObject)}\\\\n      onSave={(filterObject: any) => action('on Save clicked')(filterObject)}\\\\n      onUpdate={(filterObject: any) =>\\\\n        action('on Update clicked')(filterObject)\\\\n      }\\\\n      appliedFilterId={text('AppliedFilterId', '5f92b95637c24c28eb950447')}\\\\n      onFavourite={(filterObject: any) =>\\\\n        action('Favourites CLicked')(filterObject)\\\\n      }\\\\n      onAddFilter={action('Add Filter Called')}\\\\n      onAddCondition={action('Add Condition Called')}\\\\n      ThirdElement={ThirdElement}\\\\n      ThirdElementFormatter={ThirdElementFormatter}\\\\n      saveTooltip='Save'\\\\n      duplicateTooltip='Create Duplicate'\\\\n      cancelTooltip='Cancel'\\\\n      removeFavouriteTooltip='Remove Favourite'\\\\n      markAsfavouriteTooltip='Mark as Favourite'\\\\n      style={{\\\\n        position: 'absolute',\\\\n        left: '0px'\\\\n      }}\\\\n    >\\\\n      {({ open, setOpen, chips }: tAdvancedFilterChildren) => (\\\\n        <>\\\\n          <IconButton\\\\n            onClick={() => setOpen && setOpen(!open)}\\\\n            intent='default'\\\\n            iconVariant='icomoon-funel'\\\\n            children={'Advanced Filter ' + chips?.length}\\\\n          />\\\\n        </>\\\\n      )}\\\\n    </AdvancedFilter>\\\\n  </ThemeWrapper>\\\\n), {__STORY__, __ADDS_MAP__,__MAIN_FILE_LOCATION__,__MODULE_DEPENDENCIES__,__LOCAL_DEPENDENCIES__,__SOURCE_PREFIX__,__IDS_TO_FRAMEWORKS__});\\\",\\\"locationsMap\\\":{}},\\\"storySource\\\":{\\\"source\\\":\\\"import React from 'react'\\\\nimport { path } from '..'\\\\nimport { withKnobs, boolean, object, text } from '@storybook/addon-knobs'\\\\nimport AdvancedFilter from '.'\\\\nimport ThemeWrapper from '../../../utilities/components/ThemeWrapper'\\\\nimport { IThirdElementValue, tAdvancedFilterChildren } from './interfaces'\\\\nimport { action } from '@storybook/addon-actions'\\\\nimport IconButton from '../../atoms/IconButton'\\\\nimport operationTypes from './Data/operationType'\\\\nimport columnsStructure from './Data/columnsStructure'\\\\nimport filterData from './Data/filterData'\\\\nimport ThirdElement from './ThirdElement/index'\\\\n\\\\nexport default {\\\\n  title: `${path}/AdvancedFilter`,\\\\n  decorators: [withKnobs],\\\\n  component: AdvancedFilter\\\\n}\\\\n\\\\nconst ThirdElementFormatter = (data: IThirdElementValue) => {\\\\n  switch (data?.type) {\\\\n    case 'calendar':\\\\n      return data.value\\\\n    default:\\\\n      return data?.label || data.value\\\\n  }\\\\n}\\\\n\\\\nexport const withPlayGround = () => (\\\\n  <ThemeWrapper>\\\\n    <AdvancedFilter\\\\n      showOpen={boolean('show Open', false)}\\\\n      backButton={boolean('back Button', false)}\\\\n      masterCondition={boolean('show Condition', true)}\\\\n      allowSort={boolean('show Sort', true)}\\\\n      allowFavourites={boolean('show favourites', true)}\\\\n      allowMultipleFilters={boolean('show Multiple Filters', true)}\\\\n      backButtonCallback={() => action('Back Button clicked')}\\\\n      chipsArray={object('preDefinedArrays', filterData)}\\\\n      dropDownOptions={object('columns Data', columnsStructure)}\\\\n      fieldOperation={object('operation Type', operationTypes)}\\\\n      onApply={(filterObject: any) => action('Apply clicked')(filterObject)}\\\\n      onRemove={(filterObject: any) =>\\\\n        action('on Remove Clicked')(filterObject)\\\\n      }\\\\n      onDelete={(filterObject: any) => action('Delete Clicked')(filterObject)}\\\\n      onSave={(filterObject: any) => action('on Save clicked')(filterObject)}\\\\n      onUpdate={(filterObject: any) =>\\\\n        action('on Update clicked')(filterObject)\\\\n      }\\\\n      appliedFilterId={text('AppliedFilterId', '5f92b95637c24c28eb950447')}\\\\n      onFavourite={(filterObject: any) =>\\\\n        action('Favourites CLicked')(filterObject)\\\\n      }\\\\n      onAddFilter={action('Add Filter Called')}\\\\n      onAddCondition={action('Add Condition Called')}\\\\n      ThirdElement={ThirdElement}\\\\n      ThirdElementFormatter={ThirdElementFormatter}\\\\n      saveTooltip='Save'\\\\n      duplicateTooltip='Create Duplicate'\\\\n      cancelTooltip='Cancel'\\\\n      removeFavouriteTooltip='Remove Favourite'\\\\n      markAsfavouriteTooltip='Mark as Favourite'\\\\n      style={{\\\\n        position: 'absolute',\\\\n        left: '0px'\\\\n      }}\\\\n    >\\\\n      {({ open, setOpen, chips }: tAdvancedFilterChildren) => (\\\\n        <>\\\\n          <IconButton\\\\n            onClick={() => setOpen && setOpen(!open)}\\\\n            intent='default'\\\\n            iconVariant='icomoon-funel'\\\\n            children={'Advanced Filter ' + chips?.length}\\\\n          />\\\\n        </>\\\\n      )}\\\\n    </AdvancedFilter>\\\\n  </ThemeWrapper>\\\\n)\\\\n\\\",\\\"locationsMap\\\":{}},},\\n  title: `${path}/AdvancedFilter`,\\n  decorators: [withKnobs],\\n  component: AdvancedFilter\\n}\\n\\nconst ThirdElementFormatter = (data: IThirdElementValue) => {\\n  switch (data?.type) {\\n    case 'calendar':\\n      return data.value\\n    default:\\n      return data?.label || data.value\\n  }\\n}\\n\\nexport const withPlayGround = addSourceDecorator(addSourceDecorator(() => (\\n  <ThemeWrapper>\\n    <AdvancedFilter\\n      showOpen={boolean('show Open', false)}\\n      backButton={boolean('back Button', false)}\\n      masterCondition={boolean('show Condition', true)}\\n      allowSort={boolean('show Sort', true)}\\n      allowFavourites={boolean('show favourites', true)}\\n      allowMultipleFilters={boolean('show Multiple Filters', true)}\\n      backButtonCallback={() => action('Back Button clicked')}\\n      chipsArray={object('preDefinedArrays', filterData)}\\n      dropDownOptions={object('columns Data', columnsStructure)}\\n      fieldOperation={object('operation Type', operationTypes)}\\n      onApply={(filterObject: any) => action('Apply clicked')(filterObject)}\\n      onRemove={(filterObject: any) =>\\n        action('on Remove Clicked')(filterObject)\\n      }\\n      onDelete={(filterObject: any) => action('Delete Clicked')(filterObject)}\\n      onSave={(filterObject: any) => action('on Save clicked')(filterObject)}\\n      onUpdate={(filterObject: any) =>\\n        action('on Update clicked')(filterObject)\\n      }\\n      appliedFilterId={text('AppliedFilterId', '5f92b95637c24c28eb950447')}\\n      onFavourite={(filterObject: any) =>\\n        action('Favourites CLicked')(filterObject)\\n      }\\n      onAddFilter={action('Add Filter Called')}\\n      onAddCondition={action('Add Condition Called')}\\n      ThirdElement={ThirdElement}\\n      ThirdElementFormatter={ThirdElementFormatter}\\n      saveTooltip='Save'\\n      duplicateTooltip='Create Duplicate'\\n      cancelTooltip='Cancel'\\n      removeFavouriteTooltip='Remove Favourite'\\n      markAsfavouriteTooltip='Mark as Favourite'\\n      style={{\\n        position: 'absolute',\\n        left: '0px'\\n      }}\\n    >\\n      {({ open, setOpen, chips }: tAdvancedFilterChildren) => (\\n        <>\\n          <IconButton\\n            onClick={() => setOpen && setOpen(!open)}\\n            intent='default'\\n            iconVariant='icomoon-funel'\\n            children={'Advanced Filter ' + chips?.length}\\n          />\\n        </>\\n      )}\\n    </AdvancedFilter>\\n  </ThemeWrapper>\\n), {__STORY__, __ADDS_MAP__,__MAIN_FILE_LOCATION__,__MODULE_DEPENDENCIES__,__LOCAL_DEPENDENCIES__,__SOURCE_PREFIX__,__IDS_TO_FRAMEWORKS__}), {__STORY__, __ADDS_MAP__,__MAIN_FILE_LOCATION__,__MODULE_DEPENDENCIES__,__LOCAL_DEPENDENCIES__,__SOURCE_PREFIX__,__IDS_TO_FRAMEWORKS__});\",\"locationsMap\":{}},\"storySource\":{\"source\":\"\\n\\n// @ts-nocheck\\n// @ts-ignore\\nvar withSourceLoader = require('@storybook/source-loader/preview').withSource;\\n// @ts-ignore\\nvar addSourceDecorator = require(\\\"@storybook/source-loader/preview\\\").addSource;\\n// @ts-ignore\\nvar __SOURCE_PREFIX__ = \\\"/Users/farhanansari/Desktop/CODE/PrxProject/untitled folder/reactStoryBook/src/components/organisms/AdvancedFilter\\\";\\n// @ts-ignore\\nvar __STORY__ = \\\"import React from 'react'\\\\nimport { path } from '..'\\\\nimport { withKnobs, boolean, object, text } from '@storybook/addon-knobs'\\\\nimport AdvancedFilter from '.'\\\\nimport ThemeWrapper from '../../../utilities/components/ThemeWrapper'\\\\nimport { IThirdElementValue, tAdvancedFilterChildren } from './interfaces'\\\\nimport { action } from '@storybook/addon-actions'\\\\nimport IconButton from '../../atoms/IconButton'\\\\nimport operationTypes from './Data/operationType'\\\\nimport columnsStructure from './Data/columnsStructure'\\\\nimport filterData from './Data/filterData'\\\\nimport ThirdElement from './ThirdElement/index'\\\\n\\\\nexport default {\\\\n  title: `${path}/AdvancedFilter`,\\\\n  decorators: [withKnobs],\\\\n  component: AdvancedFilter\\\\n}\\\\n\\\\nconst ThirdElementFormatter = (data: IThirdElementValue) => {\\\\n  switch (data?.type) {\\\\n    case 'calendar':\\\\n      return data.value\\\\n    default:\\\\n      return data?.label || data.value\\\\n  }\\\\n}\\\\n\\\\nexport const withPlayGround = () => (\\\\n  <ThemeWrapper>\\\\n    <AdvancedFilter\\\\n      showOpen={boolean('show Open', false)}\\\\n      backButton={boolean('back Button', false)}\\\\n      masterCondition={boolean('show Condition', true)}\\\\n      allowSort={boolean('show Sort', true)}\\\\n      allowFavourites={boolean('show favourites', true)}\\\\n      allowMultipleFilters={boolean('show Multiple Filters', true)}\\\\n      backButtonCallback={() => action('Back Button clicked')}\\\\n      chipsArray={object('preDefinedArrays', filterData)}\\\\n      dropDownOptions={object('columns Data', columnsStructure)}\\\\n      fieldOperation={object('operation Type', operationTypes)}\\\\n      onApply={(filterObject: any) => action('Apply clicked')(filterObject)}\\\\n      onRemove={(filterObject: any) =>\\\\n        action('on Remove Clicked')(filterObject)\\\\n      }\\\\n      onDelete={(filterObject: any) => action('Delete Clicked')(filterObject)}\\\\n      onSave={(filterObject: any) => action('on Save clicked')(filterObject)}\\\\n      onUpdate={(filterObject: any) =>\\\\n        action('on Update clicked')(filterObject)\\\\n      }\\\\n      appliedFilterId={text('AppliedFilterId', '5f92b95637c24c28eb950447')}\\\\n      onFavourite={(filterObject: any) =>\\\\n        action('Favourites CLicked')(filterObject)\\\\n      }\\\\n      onAddFilter={action('Add Filter Called')}\\\\n      onAddCondition={action('Add Condition Called')}\\\\n      ThirdElement={ThirdElement}\\\\n      ThirdElementFormatter={ThirdElementFormatter}\\\\n      saveTooltip='Save'\\\\n      duplicateTooltip='Create Duplicate'\\\\n      cancelTooltip='Cancel'\\\\n      removeFavouriteTooltip='Remove Favourite'\\\\n      markAsfavouriteTooltip='Mark as Favourite'\\\\n      style={{\\\\n        position: 'absolute',\\\\n        left: '0px'\\\\n      }}\\\\n    >\\\\n      {({ open, setOpen, chips }: tAdvancedFilterChildren) => (\\\\n        <>\\\\n          <IconButton\\\\n            onClick={() => setOpen && setOpen(!open)}\\\\n            intent='default'\\\\n            iconVariant='icomoon-funel'\\\\n            children={'Advanced Filter ' + chips?.length}\\\\n          />\\\\n        </>\\\\n      )}\\\\n    </AdvancedFilter>\\\\n  </ThemeWrapper>\\\\n)\\\\n\\\";\\n// @ts-ignore\\nvar __ADDS_MAP__ = {};\\n// @ts-ignore\\nvar __MAIN_FILE_LOCATION__ = \\\"/AdvancedFilter.stories.tsx\\\";\\n// @ts-ignore\\nvar __MODULE_DEPENDENCIES__ = [];\\n// @ts-ignore\\nvar __LOCAL_DEPENDENCIES__ = {};\\n// @ts-ignore\\nvar __IDS_TO_FRAMEWORKS__ = {};\\n        \\nimport React from 'react'\\nimport { path } from '..'\\nimport { withKnobs, boolean, object, text } from '@storybook/addon-knobs'\\nimport AdvancedFilter from '.'\\nimport ThemeWrapper from '../../../utilities/components/ThemeWrapper'\\nimport { IThirdElementValue, tAdvancedFilterChildren } from './interfaces'\\nimport { action } from '@storybook/addon-actions'\\nimport IconButton from '../../atoms/IconButton'\\nimport operationTypes from './Data/operationType'\\nimport columnsStructure from './Data/columnsStructure'\\nimport filterData from './Data/filterData'\\nimport ThirdElement from './ThirdElement/index'\\n\\nexport default {parameters: {\\\"storySource\\\":{\\\"source\\\":\\\"import React from 'react'\\\\nimport { path } from '..'\\\\nimport { withKnobs, boolean, object, text } from '@storybook/addon-knobs'\\\\nimport AdvancedFilter from '.'\\\\nimport ThemeWrapper from '../../../utilities/components/ThemeWrapper'\\\\nimport { IThirdElementValue, tAdvancedFilterChildren } from './interfaces'\\\\nimport { action } from '@storybook/addon-actions'\\\\nimport IconButton from '../../atoms/IconButton'\\\\nimport operationTypes from './Data/operationType'\\\\nimport columnsStructure from './Data/columnsStructure'\\\\nimport filterData from './Data/filterData'\\\\nimport ThirdElement from './ThirdElement/index'\\\\n\\\\nexport default {\\\\n  title: `${path}/AdvancedFilter`,\\\\n  decorators: [withKnobs],\\\\n  component: AdvancedFilter\\\\n}\\\\n\\\\nconst ThirdElementFormatter = (data: IThirdElementValue) => {\\\\n  switch (data?.type) {\\\\n    case 'calendar':\\\\n      return data.value\\\\n    default:\\\\n      return data?.label || data.value\\\\n  }\\\\n}\\\\n\\\\nexport const withPlayGround = () => (\\\\n  <ThemeWrapper>\\\\n    <AdvancedFilter\\\\n      showOpen={boolean('show Open', false)}\\\\n      backButton={boolean('back Button', false)}\\\\n      masterCondition={boolean('show Condition', true)}\\\\n      allowSort={boolean('show Sort', true)}\\\\n      allowFavourites={boolean('show favourites', true)}\\\\n      allowMultipleFilters={boolean('show Multiple Filters', true)}\\\\n      backButtonCallback={() => action('Back Button clicked')}\\\\n      chipsArray={object('preDefinedArrays', filterData)}\\\\n      dropDownOptions={object('columns Data', columnsStructure)}\\\\n      fieldOperation={object('operation Type', operationTypes)}\\\\n      onApply={(filterObject: any) => action('Apply clicked')(filterObject)}\\\\n      onRemove={(filterObject: any) =>\\\\n        action('on Remove Clicked')(filterObject)\\\\n      }\\\\n      onDelete={(filterObject: any) => action('Delete Clicked')(filterObject)}\\\\n      onSave={(filterObject: any) => action('on Save clicked')(filterObject)}\\\\n      onUpdate={(filterObject: any) =>\\\\n        action('on Update clicked')(filterObject)\\\\n      }\\\\n      appliedFilterId={text('AppliedFilterId', '5f92b95637c24c28eb950447')}\\\\n      onFavourite={(filterObject: any) =>\\\\n        action('Favourites CLicked')(filterObject)\\\\n      }\\\\n      onAddFilter={action('Add Filter Called')}\\\\n      onAddCondition={action('Add Condition Called')}\\\\n      ThirdElement={ThirdElement}\\\\n      ThirdElementFormatter={ThirdElementFormatter}\\\\n      saveTooltip='Save'\\\\n      duplicateTooltip='Create Duplicate'\\\\n      cancelTooltip='Cancel'\\\\n      removeFavouriteTooltip='Remove Favourite'\\\\n      markAsfavouriteTooltip='Mark as Favourite'\\\\n      style={{\\\\n        position: 'absolute',\\\\n        left: '0px'\\\\n      }}\\\\n    >\\\\n      {({ open, setOpen, chips }: tAdvancedFilterChildren) => (\\\\n        <>\\\\n          <IconButton\\\\n            onClick={() => setOpen && setOpen(!open)}\\\\n            intent='default'\\\\n            iconVariant='icomoon-funel'\\\\n            children={'Advanced Filter ' + chips?.length}\\\\n          />\\\\n        </>\\\\n      )}\\\\n    </AdvancedFilter>\\\\n  </ThemeWrapper>\\\\n)\\\\n\\\",\\\"locationsMap\\\":{}},},\\n  title: `${path}/AdvancedFilter`,\\n  decorators: [withKnobs],\\n  component: AdvancedFilter\\n}\\n\\nconst ThirdElementFormatter = (data: IThirdElementValue) => {\\n  switch (data?.type) {\\n    case 'calendar':\\n      return data.value\\n    default:\\n      return data?.label || data.value\\n  }\\n}\\n\\nexport const withPlayGround = addSourceDecorator(() => (\\n  <ThemeWrapper>\\n    <AdvancedFilter\\n      showOpen={boolean('show Open', false)}\\n      backButton={boolean('back Button', false)}\\n      masterCondition={boolean('show Condition', true)}\\n      allowSort={boolean('show Sort', true)}\\n      allowFavourites={boolean('show favourites', true)}\\n      allowMultipleFilters={boolean('show Multiple Filters', true)}\\n      backButtonCallback={() => action('Back Button clicked')}\\n      chipsArray={object('preDefinedArrays', filterData)}\\n      dropDownOptions={object('columns Data', columnsStructure)}\\n      fieldOperation={object('operation Type', operationTypes)}\\n      onApply={(filterObject: any) => action('Apply clicked')(filterObject)}\\n      onRemove={(filterObject: any) =>\\n        action('on Remove Clicked')(filterObject)\\n      }\\n      onDelete={(filterObject: any) => action('Delete Clicked')(filterObject)}\\n      onSave={(filterObject: any) => action('on Save clicked')(filterObject)}\\n      onUpdate={(filterObject: any) =>\\n        action('on Update clicked')(filterObject)\\n      }\\n      appliedFilterId={text('AppliedFilterId', '5f92b95637c24c28eb950447')}\\n      onFavourite={(filterObject: any) =>\\n        action('Favourites CLicked')(filterObject)\\n      }\\n      onAddFilter={action('Add Filter Called')}\\n      onAddCondition={action('Add Condition Called')}\\n      ThirdElement={ThirdElement}\\n      ThirdElementFormatter={ThirdElementFormatter}\\n      saveTooltip='Save'\\n      duplicateTooltip='Create Duplicate'\\n      cancelTooltip='Cancel'\\n      removeFavouriteTooltip='Remove Favourite'\\n      markAsfavouriteTooltip='Mark as Favourite'\\n      style={{\\n        position: 'absolute',\\n        left: '0px'\\n      }}\\n    >\\n      {({ open, setOpen, chips }: tAdvancedFilterChildren) => (\\n        <>\\n          <IconButton\\n            onClick={() => setOpen && setOpen(!open)}\\n            intent='default'\\n            iconVariant='icomoon-funel'\\n            children={'Advanced Filter ' + chips?.length}\\n          />\\n        </>\\n      )}\\n    </AdvancedFilter>\\n  </ThemeWrapper>\\n), {__STORY__, __ADDS_MAP__,__MAIN_FILE_LOCATION__,__MODULE_DEPENDENCIES__,__LOCAL_DEPENDENCIES__,__SOURCE_PREFIX__,__IDS_TO_FRAMEWORKS__});\",\"locationsMap\":{}},\"storySource\":{\"source\":\"import React from 'react'\\nimport { path } from '..'\\nimport { withKnobs, boolean, object, text } from '@storybook/addon-knobs'\\nimport AdvancedFilter from '.'\\nimport ThemeWrapper from '../../../utilities/components/ThemeWrapper'\\nimport { IThirdElementValue, tAdvancedFilterChildren } from './interfaces'\\nimport { action } from '@storybook/addon-actions'\\nimport IconButton from '../../atoms/IconButton'\\nimport operationTypes from './Data/operationType'\\nimport columnsStructure from './Data/columnsStructure'\\nimport filterData from './Data/filterData'\\nimport ThirdElement from './ThirdElement/index'\\n\\nexport default {\\n  title: `${path}/AdvancedFilter`,\\n  decorators: [withKnobs],\\n  component: AdvancedFilter\\n}\\n\\nconst ThirdElementFormatter = (data: IThirdElementValue) => {\\n  switch (data?.type) {\\n    case 'calendar':\\n      return data.value\\n    default:\\n      return data?.label || data.value\\n  }\\n}\\n\\nexport const withPlayGround = () => (\\n  <ThemeWrapper>\\n    <AdvancedFilter\\n      showOpen={boolean('show Open', false)}\\n      backButton={boolean('back Button', false)}\\n      masterCondition={boolean('show Condition', true)}\\n      allowSort={boolean('show Sort', true)}\\n      allowFavourites={boolean('show favourites', true)}\\n      allowMultipleFilters={boolean('show Multiple Filters', true)}\\n      backButtonCallback={() => action('Back Button clicked')}\\n      chipsArray={object('preDefinedArrays', filterData)}\\n      dropDownOptions={object('columns Data', columnsStructure)}\\n      fieldOperation={object('operation Type', operationTypes)}\\n      onApply={(filterObject: any) => action('Apply clicked')(filterObject)}\\n      onRemove={(filterObject: any) =>\\n        action('on Remove Clicked')(filterObject)\\n      }\\n      onDelete={(filterObject: any) => action('Delete Clicked')(filterObject)}\\n      onSave={(filterObject: any) => action('on Save clicked')(filterObject)}\\n      onUpdate={(filterObject: any) =>\\n        action('on Update clicked')(filterObject)\\n      }\\n      appliedFilterId={text('AppliedFilterId', '5f92b95637c24c28eb950447')}\\n      onFavourite={(filterObject: any) =>\\n        action('Favourites CLicked')(filterObject)\\n      }\\n      onAddFilter={action('Add Filter Called')}\\n      onAddCondition={action('Add Condition Called')}\\n      ThirdElement={ThirdElement}\\n      ThirdElementFormatter={ThirdElementFormatter}\\n      saveTooltip='Save'\\n      duplicateTooltip='Create Duplicate'\\n      cancelTooltip='Cancel'\\n      removeFavouriteTooltip='Remove Favourite'\\n      markAsfavouriteTooltip='Mark as Favourite'\\n      style={{\\n        position: 'absolute',\\n        left: '0px'\\n      }}\\n    >\\n      {({ open, setOpen, chips }: tAdvancedFilterChildren) => (\\n        <>\\n          <IconButton\\n            onClick={() => setOpen && setOpen(!open)}\\n            intent='default'\\n            iconVariant='icomoon-funel'\\n            children={'Advanced Filter ' + chips?.length}\\n          />\\n        </>\\n      )}\\n    </AdvancedFilter>\\n  </ThemeWrapper>\\n)\\n\",\"locationsMap\":{}},},\n  title: `${path}/AdvancedFilter`,\n  decorators: [withKnobs],\n  component: AdvancedFilter\n}\n\nconst ThirdElementFormatter = (data: IThirdElementValue) => {\n  switch (data?.type) {\n    case 'calendar':\n      return data.value\n    default:\n      return data?.label || data.value\n  }\n}\n\nexport const withPlayGround = addSourceDecorator(addSourceDecorator(addSourceDecorator(() => (\n  <ThemeWrapper>\n    <AdvancedFilter\n      showOpen={boolean('show Open', false)}\n      backButton={boolean('back Button', false)}\n      masterCondition={boolean('show Condition', true)}\n      allowSort={boolean('show Sort', true)}\n      allowFavourites={boolean('show favourites', true)}\n      allowMultipleFilters={boolean('show Multiple Filters', true)}\n      backButtonCallback={() => action('Back Button clicked')}\n      chipsArray={object('preDefinedArrays', filterData)}\n      dropDownOptions={object('columns Data', columnsStructure)}\n      fieldOperation={object('operation Type', operationTypes)}\n      onApply={(filterObject: any) => action('Apply clicked')(filterObject)}\n      onRemove={(filterObject: any) =>\n        action('on Remove Clicked')(filterObject)\n      }\n      onDelete={(filterObject: any) => action('Delete Clicked')(filterObject)}\n      onSave={(filterObject: any) => action('on Save clicked')(filterObject)}\n      onUpdate={(filterObject: any) =>\n        action('on Update clicked')(filterObject)\n      }\n      appliedFilterId={text('AppliedFilterId', '5f92b95637c24c28eb950447')}\n      onFavourite={(filterObject: any) =>\n        action('Favourites CLicked')(filterObject)\n      }\n      onAddFilter={action('Add Filter Called')}\n      onAddCondition={action('Add Condition Called')}\n      ThirdElement={ThirdElement}\n      ThirdElementFormatter={ThirdElementFormatter}\n      saveTooltip='Save'\n      duplicateTooltip='Create Duplicate'\n      cancelTooltip='Cancel'\n      removeFavouriteTooltip='Remove Favourite'\n      markAsfavouriteTooltip='Mark as Favourite'\n      style={{\n        position: 'absolute',\n        left: '0px'\n      }}\n    >\n      {({ open, setOpen, chips }: tAdvancedFilterChildren) => (\n        <>\n          <IconButton\n            onClick={() => setOpen && setOpen(!open)}\n            intent='default'\n            iconVariant='icomoon-funel'\n            children={'Advanced Filter ' + chips?.length}\n          />\n        </>\n      )}\n    </AdvancedFilter>\n  </ThemeWrapper>\n), {__STORY__, __ADDS_MAP__,__MAIN_FILE_LOCATION__,__MODULE_DEPENDENCIES__,__LOCAL_DEPENDENCIES__,__SOURCE_PREFIX__,__IDS_TO_FRAMEWORKS__}), {__STORY__, __ADDS_MAP__,__MAIN_FILE_LOCATION__,__MODULE_DEPENDENCIES__,__LOCAL_DEPENDENCIES__,__SOURCE_PREFIX__,__IDS_TO_FRAMEWORKS__}), {__STORY__, __ADDS_MAP__,__MAIN_FILE_LOCATION__,__MODULE_DEPENDENCIES__,__LOCAL_DEPENDENCIES__,__SOURCE_PREFIX__,__IDS_TO_FRAMEWORKS__});"],"sourceRoot":""},"metadata":{},"sourceType":"module"}