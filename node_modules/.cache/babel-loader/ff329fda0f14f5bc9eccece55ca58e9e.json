{"ast":null,"code":"import _objectSpread from \"/Users/farhanansari/Desktop/CODE/PrxProject/untitled folder/reactStoryBook/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/objectSpread2\";\nimport _slicedToArray from \"/Users/farhanansari/Desktop/CODE/PrxProject/untitled folder/reactStoryBook/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/slicedToArray\";\nimport _taggedTemplateLiteral from \"/Users/farhanansari/Desktop/CODE/PrxProject/untitled folder/reactStoryBook/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/taggedTemplateLiteral\";\n\nvar _this = this,\n    _jsxFileName = \"/Users/farhanansari/Desktop/CODE/PrxProject/untitled folder/reactStoryBook/src/components/molecules/DropDown/Variants/FormSelect.tsx\";\n\nfunction _templateObject3() {\n  var data = _taggedTemplateLiteral([\"\\n  width: 100%;\\n\"]);\n\n  _templateObject3 = function _templateObject3() {\n    return data;\n  };\n\n  return data;\n}\n\nfunction _templateObject2() {\n  var data = _taggedTemplateLiteral([\"\\n  background-color: \", \";\\n  color: \", \";\\n  display: flex;\\n  justify-content: center;\\n  align-items: center;\\n  min-width: 40px;\\n  box-sizing: border-box;\\n\"]);\n\n  _templateObject2 = function _templateObject2() {\n    return data;\n  };\n\n  return data;\n}\n\nfunction _templateObject() {\n  var data = _taggedTemplateLiteral([\"\\n  background-color: white;\\n  .react-select__option.react-select__option--is-selected {\\n    background-color: \", \";\\n  }\\n\"]);\n\n  _templateObject = function _templateObject() {\n    return data;\n  };\n\n  return data;\n}\n\nimport React, { useMemo } from 'react';\nimport Select, { components } from 'react-select';\nimport InputLabel from '../../InputLabel';\nimport Position from '../../Position';\nimport ErrorTooltip from '../../ErrorTooltip';\nimport { FormSelectStyled } from '../Styles';\nimport FontIcon from '../../../atoms/FontIcon';\nimport { LoadingIndicator, SingleValue as _SingleValue, DropdownIndicator as _DropdownIndicator, Option as _Option } from '../CustomComponent';\nimport styled from 'styled-components';\nimport ToolTip from '../../Tooltip';\nvar FormSelectWrapper = styled.div(_templateObject(), function (_ref) {\n  var _theme$colors, _theme$colors$primary;\n\n  var theme = _ref.theme;\n  return theme === null || theme === void 0 ? void 0 : (_theme$colors = theme.colors) === null || _theme$colors === void 0 ? void 0 : (_theme$colors$primary = _theme$colors.primary) === null || _theme$colors$primary === void 0 ? void 0 : _theme$colors$primary.main;\n});\nvar FontIconStyled = styled.div(_templateObject2(), function (_ref2) {\n  var _theme$colors2;\n\n  var theme = _ref2.theme;\n  return theme === null || theme === void 0 ? void 0 : (_theme$colors2 = theme.colors) === null || _theme$colors2 === void 0 ? void 0 : _theme$colors2.primary.main;\n}, function (_ref3) {\n  var _theme$colors3;\n\n  var theme = _ref3.theme;\n  return theme === null || theme === void 0 ? void 0 : (_theme$colors3 = theme.colors) === null || _theme$colors3 === void 0 ? void 0 : _theme$colors3.primary.contrastText;\n});\nvar SelectContainerStyled = styled.div(_templateObject3());\n\nvar FormSelect = function FormSelect(_ref4) {\n  var error = _ref4.error,\n      errorMessage = _ref4.errorMessage,\n      label = _ref4.label,\n      required = _ref4.required,\n      defaultProps = _ref4.defaultProps,\n      showDescription = _ref4.showDescription,\n      showDropdownIndicator = _ref4.showDropdownIndicator,\n      showNoDataText = _ref4.showNoDataText,\n      showCrossIcon = _ref4.showCrossIcon,\n      _ref4$isSortable = _ref4.isSortable,\n      isSortable = _ref4$isSortable === void 0 ? true : _ref4$isSortable;\n  var options = defaultProps.options,\n      value = defaultProps.value,\n      isLoading = defaultProps.isLoading,\n      _defaultProps$placeho = defaultProps.placeholder,\n      placeholder = _defaultProps$placeho === void 0 ? '' : _defaultProps$placeho,\n      onInputChange = defaultProps.onInputChange,\n      _onChange = defaultProps.onChange,\n      onFocus = defaultProps.onFocus,\n      isSearchable = defaultProps.isSearchable,\n      onMenuOpen = defaultProps.onMenuOpen,\n      onMenuClose = defaultProps.onMenuClose,\n      isMenuOpen = defaultProps.isMenuOpen,\n      tooltipMessage = defaultProps.tooltipMessage,\n      disabled = defaultProps.disabled,\n      labelColor = defaultProps.labelColor,\n      limitOptionsList = defaultProps.limitOptionsList,\n      arrowPlacement = defaultProps.arrowPlacement,\n      messagePlacement = defaultProps.messagePlacement,\n      tooltipDirection = defaultProps.tooltipDirection,\n      align = defaultProps.align,\n      withIcon = defaultProps.withIcon,\n      iconVariant = defaultProps.iconVariant,\n      iconSize = defaultProps.iconSize,\n      iconStyle = defaultProps.iconStyle,\n      onIconClick = defaultProps.onIconClick,\n      fullWidth = defaultProps.fullWidth;\n  var resultLimit = limitOptionsList || 25;\n  var i = 0;\n\n  var _React$useState = React.useState(),\n      _React$useState2 = _slicedToArray(_React$useState, 2),\n      input = _React$useState2[0],\n      setInput = _React$useState2[1];\n\n  var onInputChangeWrapper = function onInputChangeWrapper(newValue, actionMeta) {\n    setInput(newValue);\n    onInputChange && onInputChange(newValue, actionMeta);\n  };\n\n  var optionsMemo = useMemo(function () {\n    var alphaNumericSort = function alphaNumericSort(opti) {\n      var sorter = function sorter(currentLabel, newLabel) {\n        var isNumber = function isNumber(v) {\n          return (+v).toString() === v;\n        };\n\n        var currentLabelPart = currentLabel.label.match(/\\d+|\\D+/g);\n        var newLabelPart = newLabel.label.match(/\\d+|\\D+/g);\n        var i = 0;\n        var len = Math.min(currentLabelPart.length, newLabelPart.length);\n\n        while (i < len && currentLabelPart[i] === newLabelPart[i]) {\n          i++;\n        }\n\n        ;\n\n        if (i === len) {\n          return currentLabelPart.length - newLabelPart.length;\n        }\n\n        ;\n\n        if (isNumber(currentLabelPart[i]) && isNumber(newLabelPart[i])) {\n          return currentLabelPart[i] - newLabelPart[i];\n        }\n\n        ;\n        return currentLabelPart[i].localeCompare(newLabelPart[i]);\n      };\n\n      opti.sort(sorter);\n    };\n\n    isSortable && alphaNumericSort(options);\n    var newdropdownoptions = options === null || options === void 0 ? void 0 : options.filter(function (dropdownOption) {\n      if (input) {\n        var _dropdownOption$label, _input$toString;\n\n        return (dropdownOption === null || dropdownOption === void 0 ? void 0 : (_dropdownOption$label = dropdownOption.label) === null || _dropdownOption$label === void 0 ? void 0 : _dropdownOption$label.toLowerCase().indexOf(input === null || input === void 0 ? void 0 : (_input$toString = input.toString()) === null || _input$toString === void 0 ? void 0 : _input$toString.toLowerCase())) >= 0 && i++ < resultLimit;\n      } else {\n        return i++ < resultLimit;\n      }\n    });\n\n    var sortByLabel = function sortByLabel(a, b) {\n      return a.label.localeCompare(b.label, undefined, {\n        numeric: true\n      });\n    };\n\n    var newlist = isSortable ? newdropdownoptions.sort(sortByLabel) : newdropdownoptions;\n    return newlist;\n  }, [input, options]);\n  return /*#__PURE__*/React.createElement(FormSelectWrapper, {\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 130,\n      columnNumber: 5\n    }\n  }, /*#__PURE__*/React.createElement(Position, {\n    type: \"relative\",\n    display: withIcon ? 'flex' : 'block',\n    alignItems: \"stretch\",\n    fullWidth: fullWidth,\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 131,\n      columnNumber: 7\n    }\n  }, label && /*#__PURE__*/React.createElement(Position, {\n    type: \"absolute\",\n    top: withIcon ? '10px' : '-7px',\n    left: \"10px\",\n    zIndex: \"100\",\n    style: {\n      maxWidth: 'calc(100% - 20px)'\n    },\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 138,\n      columnNumber: 11\n    }\n  }, /*#__PURE__*/React.createElement(ToolTip, {\n    message: tooltipMessage,\n    hover: true,\n    hide: !tooltipMessage || isMenuOpen,\n    arrowPlacement: arrowPlacement || 'center',\n    messagePlacement: messagePlacement || 'center',\n    tooltipDirection: tooltipDirection || 'bottom',\n    align: align || 'center',\n    isWordWrap: true,\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 145,\n      columnNumber: 13\n    }\n  }, /*#__PURE__*/React.createElement(InputLabel, {\n    children: label,\n    color: labelColor,\n    required: required,\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 155,\n      columnNumber: 15\n    }\n  }))), /*#__PURE__*/React.createElement(SelectContainerStyled, {\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 163,\n      columnNumber: 9\n    }\n  }, /*#__PURE__*/React.createElement(Select, {\n    components: {\n      IndicatorSeparator: function IndicatorSeparator() {\n        return null;\n      },\n      DropdownIndicator: function DropdownIndicator(props) {\n        return /*#__PURE__*/React.createElement(_DropdownIndicator, Object.assign({\n          showDropdownIndicator: showDropdownIndicator\n        }, props, {\n          __self: _this,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 168,\n            columnNumber: 17\n          }\n        }));\n      },\n      LoadingIndicator: LoadingIndicator,\n      ClearIndicator: function ClearIndicator() {\n        return showCrossIcon === false ? null : /*#__PURE__*/React.createElement(\"div\", {\n          __self: _this,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 175,\n            columnNumber: 57\n          }\n        });\n      },\n      SingleValue: function SingleValue(props) {\n        return /*#__PURE__*/React.createElement(_SingleValue, Object.assign({\n          showCrossIcon: showCrossIcon\n        }, props, {\n          __self: _this,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 178,\n            columnNumber: 17\n          }\n        }));\n      },\n      Option: function Option(props) {\n        return /*#__PURE__*/React.createElement(_Option, Object.assign({\n          showDescription: showDescription\n        }, props, {\n          __self: _this,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 181,\n            columnNumber: 17\n          }\n        }));\n      },\n      Menu: function Menu(props) {\n        return /*#__PURE__*/React.createElement(components.Menu, Object.assign({}, props, {\n          className: \"menuAnimate\",\n          __self: _this,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 184,\n            columnNumber: 17\n          }\n        }));\n      }\n    },\n    styles: FormSelectStyled(error),\n    noOptionsMessage: function noOptionsMessage() {\n      return showNoDataText ? 'No Data Available' : null;\n    },\n    options: optionsMemo,\n    value: value,\n    isLoading: isLoading,\n    placeholder: placeholder,\n    onInputChange: onInputChangeWrapper,\n    isClearable: showCrossIcon === false,\n    onChange: function onChange(input) {\n      i = 0;\n      var obj = Array.from(document.querySelectorAll('.ui-tooltip'));\n      obj === null || obj === void 0 ? void 0 : obj.forEach(function (e) {\n        e.remove();\n      });\n      _onChange && _onChange(input);\n    },\n    onFocus: onFocus,\n    isSearchable: isSearchable,\n    onMenuOpen: onMenuOpen,\n    onMenuClose: onMenuClose,\n    menuIsOpen: isMenuOpen,\n    menuPlacement: \"auto\",\n    closeMenuOnSelect: true,\n    maxMenuHeight: 200,\n    isDisabled: disabled // openMenuOnClick\n    ,\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 164,\n      columnNumber: 11\n    }\n  })), withIcon && /*#__PURE__*/React.createElement(\"div\", {\n    style: {\n      minHeight: '40PX'\n    },\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 220,\n      columnNumber: 11\n    }\n  }, /*#__PURE__*/React.createElement(FontIconStyled, {\n    style: _objectSpread(_objectSpread({}, label ? {\n      margin: '18px 0px 0',\n      minHeight: '40px',\n      height: 'auto'\n    } : {\n      margin: '0px',\n      minHeight: '40px',\n      height: 'auto'\n    }), iconStyle),\n    onClick: onIconClick,\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 221,\n      columnNumber: 13\n    }\n  }, /*#__PURE__*/React.createElement(FontIcon, {\n    variant: iconVariant || 'calender',\n    color: \"white\",\n    size: iconSize,\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 234,\n      columnNumber: 15\n    }\n  }))), error && errorMessage && /*#__PURE__*/React.createElement(Position, {\n    type: \"absolute\",\n    top: \"-7.5px\",\n    right: \"-6.5px\",\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 244,\n      columnNumber: 11\n    }\n  }, /*#__PURE__*/React.createElement(ErrorTooltip, {\n    message: errorMessage,\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 245,\n      columnNumber: 13\n    }\n  }))));\n};\n\nexport default React.memo(FormSelect);","map":{"version":3,"sources":["/Users/farhanansari/Desktop/CODE/PrxProject/untitled folder/reactStoryBook/src/components/molecules/DropDown/Variants/FormSelect.tsx"],"names":["React","useMemo","Select","components","InputLabel","Position","ErrorTooltip","FormSelectStyled","FontIcon","LoadingIndicator","SingleValue","DropdownIndicator","Option","styled","ToolTip","FormSelectWrapper","div","theme","colors","primary","main","FontIconStyled","contrastText","SelectContainerStyled","FormSelect","error","errorMessage","label","required","defaultProps","showDescription","showDropdownIndicator","showNoDataText","showCrossIcon","isSortable","options","value","isLoading","placeholder","onInputChange","onChange","onFocus","isSearchable","onMenuOpen","onMenuClose","isMenuOpen","tooltipMessage","disabled","labelColor","limitOptionsList","arrowPlacement","messagePlacement","tooltipDirection","align","withIcon","iconVariant","iconSize","iconStyle","onIconClick","fullWidth","resultLimit","i","useState","input","setInput","onInputChangeWrapper","newValue","actionMeta","optionsMemo","alphaNumericSort","opti","sorter","currentLabel","newLabel","isNumber","v","toString","currentLabelPart","match","newLabelPart","len","Math","min","length","localeCompare","sort","newdropdownoptions","filter","dropdownOption","toLowerCase","indexOf","sortByLabel","a","b","undefined","numeric","newlist","maxWidth","IndicatorSeparator","props","ClearIndicator","Menu","obj","Array","from","document","querySelectorAll","forEach","e","remove","minHeight","margin","height","memo"],"mappings":";;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;AAAA,OAAOA,KAAP,IAAgBC,OAAhB,QAA+B,OAA/B;AACA,OAAOC,MAAP,IAAiBC,UAAjB,QAAoD,cAApD;AACA,OAAOC,UAAP,MAAuB,kBAAvB;AACA,OAAOC,QAAP,MAAqB,gBAArB;AACA,OAAOC,YAAP,MAAyB,oBAAzB;AACA,SAASC,gBAAT,QAAiC,WAAjC;AAEA,OAAOC,QAAP,MAAqB,yBAArB;AAEA,SACEC,gBADF,EAEEC,WAAW,IAAXA,YAFF,EAGEC,iBAAiB,IAAjBA,kBAHF,EAIEC,MAAM,IAANA,OAJF,QAKO,oBALP;AAMA,OAAOC,MAAP,MAAmB,mBAAnB;AACA,OAAOC,OAAP,MAAoB,eAApB;AAEA,IAAMC,iBAAiB,GAAGF,MAAM,CAACG,GAAV,oBAGC;AAAA;;AAAA,MAAGC,KAAH,QAAGA,KAAH;AAAA,SAAeA,KAAf,aAAeA,KAAf,wCAAeA,KAAK,CAAEC,MAAtB,2EAAe,cAAeC,OAA9B,0DAAe,sBAAwBC,IAAvC;AAAA,CAHD,CAAvB;AAOA,IAAMC,cAAc,GAAGR,MAAM,CAACG,GAAV,qBACE;AAAA;;AAAA,MAAGC,KAAH,SAAGA,KAAH;AAAA,SAAeA,KAAf,aAAeA,KAAf,yCAAeA,KAAK,CAAEC,MAAtB,mDAAe,eAAeC,OAAf,CAAuBC,IAAtC;AAAA,CADF,EAET;AAAA;;AAAA,MAAGH,KAAH,SAAGA,KAAH;AAAA,SAAeA,KAAf,aAAeA,KAAf,yCAAeA,KAAK,CAAEC,MAAtB,mDAAe,eAAeC,OAAf,CAAuBG,YAAtC;AAAA,CAFS,CAApB;AAUA,IAAMC,qBAAqB,GAAGV,MAAM,CAACG,GAAV,oBAA3B;;AAIA,IAAMQ,UAAU,GAAG,SAAbA,UAAa,QAWA;AAAA,MAVjBC,KAUiB,SAVjBA,KAUiB;AAAA,MATjBC,YASiB,SATjBA,YASiB;AAAA,MARjBC,KAQiB,SARjBA,KAQiB;AAAA,MAPjBC,QAOiB,SAPjBA,QAOiB;AAAA,MANjBC,YAMiB,SANjBA,YAMiB;AAAA,MALjBC,eAKiB,SALjBA,eAKiB;AAAA,MAJjBC,qBAIiB,SAJjBA,qBAIiB;AAAA,MAHjBC,cAGiB,SAHjBA,cAGiB;AAAA,MAFjBC,aAEiB,SAFjBA,aAEiB;AAAA,+BADjBC,UACiB;AAAA,MADjBA,UACiB,iCADJ,IACI;AAAA,MAEfC,OAFe,GA2BbN,YA3Ba,CAEfM,OAFe;AAAA,MAGfC,KAHe,GA2BbP,YA3Ba,CAGfO,KAHe;AAAA,MAIfC,SAJe,GA2BbR,YA3Ba,CAIfQ,SAJe;AAAA,8BA2BbR,YA3Ba,CAKfS,WALe;AAAA,MAKfA,WALe,sCAKD,EALC;AAAA,MAMfC,aANe,GA2BbV,YA3Ba,CAMfU,aANe;AAAA,MAOfC,SAPe,GA2BbX,YA3Ba,CAOfW,QAPe;AAAA,MAQfC,OARe,GA2BbZ,YA3Ba,CAQfY,OARe;AAAA,MASfC,YATe,GA2Bbb,YA3Ba,CASfa,YATe;AAAA,MAUfC,UAVe,GA2Bbd,YA3Ba,CAUfc,UAVe;AAAA,MAWfC,WAXe,GA2Bbf,YA3Ba,CAWfe,WAXe;AAAA,MAYfC,UAZe,GA2BbhB,YA3Ba,CAYfgB,UAZe;AAAA,MAafC,cAbe,GA2BbjB,YA3Ba,CAafiB,cAbe;AAAA,MAcfC,QAde,GA2BblB,YA3Ba,CAcfkB,QAde;AAAA,MAefC,UAfe,GA2BbnB,YA3Ba,CAefmB,UAfe;AAAA,MAgBfC,gBAhBe,GA2BbpB,YA3Ba,CAgBfoB,gBAhBe;AAAA,MAiBfC,cAjBe,GA2BbrB,YA3Ba,CAiBfqB,cAjBe;AAAA,MAkBfC,gBAlBe,GA2BbtB,YA3Ba,CAkBfsB,gBAlBe;AAAA,MAmBfC,gBAnBe,GA2BbvB,YA3Ba,CAmBfuB,gBAnBe;AAAA,MAoBfC,KApBe,GA2BbxB,YA3Ba,CAoBfwB,KApBe;AAAA,MAqBfC,QArBe,GA2BbzB,YA3Ba,CAqBfyB,QArBe;AAAA,MAsBfC,WAtBe,GA2Bb1B,YA3Ba,CAsBf0B,WAtBe;AAAA,MAuBfC,QAvBe,GA2Bb3B,YA3Ba,CAuBf2B,QAvBe;AAAA,MAwBfC,SAxBe,GA2Bb5B,YA3Ba,CAwBf4B,SAxBe;AAAA,MAyBfC,WAzBe,GA2Bb7B,YA3Ba,CAyBf6B,WAzBe;AAAA,MA0BfC,SA1Be,GA2Bb9B,YA3Ba,CA0Bf8B,SA1Be;AA4BjB,MAAMC,WAAW,GAAGX,gBAAgB,IAAI,EAAxC;AACA,MAAIY,CAAC,GAAG,CAAR;;AA7BiB,wBA8BS7D,KAAK,CAAC8D,QAAN,EA9BT;AAAA;AAAA,MA8BVC,KA9BU;AAAA,MA8BHC,QA9BG;;AAgCjB,MAAMC,oBAAoB,GAAG,SAAvBA,oBAAuB,CAC3BC,QAD2B,EAE3BC,UAF2B,EAGxB;AACHH,IAAAA,QAAQ,CAACE,QAAD,CAAR;AACA3B,IAAAA,aAAa,IAAIA,aAAa,CAAC2B,QAAD,EAAWC,UAAX,CAA9B;AACD,GAND;;AASA,MAAMC,WAAW,GAAGnE,OAAO,CAAC,YAAM;AAEhC,QAAMoE,gBAAgB,GAAG,SAAnBA,gBAAmB,CAACC,IAAD,EAAgB;AACvC,UAAMC,MAAM,GAAG,SAATA,MAAS,CAACC,YAAD,EAAmBC,QAAnB,EAAoC;AAChD,YAAMC,QAAQ,GAAG,SAAXA,QAAW,CAACC,CAAD;AAAA,iBAAW,CAAC,CAACA,CAAF,EAAKC,QAAL,OAAoBD,CAA/B;AAAA,SAAjB;;AACA,YAAME,gBAAgB,GAAGL,YAAY,CAAC7C,KAAb,CAAmBmD,KAAnB,CAAyB,UAAzB,CAAzB;AACA,YAAMC,YAAY,GAAGN,QAAQ,CAAC9C,KAAT,CAAemD,KAAf,CAAqB,UAArB,CAArB;AACA,YAAIjB,CAAC,GAAG,CAAR;AACA,YAAImB,GAAG,GAAGC,IAAI,CAACC,GAAL,CAASL,gBAAgB,CAACM,MAA1B,EAAkCJ,YAAY,CAACI,MAA/C,CAAV;;AACA,eAAOtB,CAAC,GAAGmB,GAAJ,IAAWH,gBAAgB,CAAChB,CAAD,CAAhB,KAAwBkB,YAAY,CAAClB,CAAD,CAAtD,EAA2D;AAAEA,UAAAA,CAAC;AAAK;;AAAA;;AAChE,YAAIA,CAAC,KAAKmB,GAAV,EAAe;AACZ,iBAAOH,gBAAgB,CAACM,MAAjB,GAA0BJ,YAAY,CAACI,MAA9C;AACL;;AAAA;;AACD,YAAIT,QAAQ,CAACG,gBAAgB,CAAChB,CAAD,CAAjB,CAAR,IAAiCa,QAAQ,CAACK,YAAY,CAAClB,CAAD,CAAb,CAA7C,EAAgE;AAC7D,iBAAOgB,gBAAgB,CAAChB,CAAD,CAAhB,GAAsBkB,YAAY,CAAClB,CAAD,CAAzC;AACF;;AAAA;AACD,eAAOgB,gBAAgB,CAAChB,CAAD,CAAhB,CAAoBuB,aAApB,CAAkCL,YAAY,CAAClB,CAAD,CAA9C,CAAP;AAA4D,OAb/D;;AAcGS,MAAAA,IAAI,CAACe,IAAL,CAAUd,MAAV;AACL,KAhBA;;AAiBDrC,IAAAA,UAAU,IAAImC,gBAAgB,CAAClC,OAAD,CAA9B;AACC,QAAMmD,kBAAkB,GAAGnD,OAAH,aAAGA,OAAH,uBAAGA,OAAO,CAAEoD,MAAT,CAAgB,UAACC,cAAD,EAAuC;AAChF,UAAIzB,KAAJ,EAAW;AAAA;;AACT,eACE,CAAAyB,cAAc,SAAd,IAAAA,cAAc,WAAd,qCAAAA,cAAc,CAAE7D,KAAhB,gFACI8D,WADJ,GAEGC,OAFH,CAEW3B,KAFX,aAEWA,KAFX,0CAEWA,KAAK,CAAEa,QAAP,EAFX,oDAEW,gBAAmBa,WAAnB,EAFX,MAEgD,CAFhD,IAEqD5B,CAAC,KAAKD,WAH7D;AAKD,OAND,MAMO;AACL,eAAOC,CAAC,KAAKD,WAAb;AACD;AACF,KAV0B,CAA3B;;AAYA,QAAM+B,WAAW,GAAG,SAAdA,WAAc,CAACC,CAAD,EAAuBC,CAAvB;AAAA,aAAgDD,CAAC,CAACjE,KAAF,CAAQyD,aAAR,CAAsBS,CAAC,CAAClE,KAAxB,EAA+BmE,SAA/B,EAA0C;AAAEC,QAAAA,OAAO,EAAE;AAAX,OAA1C,CAAhD;AAAA,KAApB;;AACA,QAAMC,OAAO,GAAG9D,UAAU,GAAGoD,kBAAkB,CAACD,IAAnB,CAAwBM,WAAxB,CAAH,GAAyCL,kBAAnE;AACA,WAAOU,OAAP;AACD,GAnC0B,EAmCxB,CAACjC,KAAD,EAAQ5B,OAAR,CAnCwB,CAA3B;AAqCA,sBACE,oBAAC,iBAAD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,kBACE,oBAAC,QAAD;AACE,IAAA,IAAI,EAAC,UADP;AAEE,IAAA,OAAO,EAAEmB,QAAQ,GAAG,MAAH,GAAY,OAF/B;AAGE,IAAA,UAAU,EAAC,SAHb;AAIE,IAAA,SAAS,EAAEK,SAJb;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KAMGhC,KAAK,iBACJ,oBAAC,QAAD;AACE,IAAA,IAAI,EAAC,UADP;AAEE,IAAA,GAAG,EAAE2B,QAAQ,GAAG,MAAH,GAAY,MAF3B;AAGE,IAAA,IAAI,EAAC,MAHP;AAIE,IAAA,MAAM,EAAC,KAJT;AAKE,IAAA,KAAK,EAAE;AAAE2C,MAAAA,QAAQ,EAAE;AAAZ,KALT;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,kBAOE,oBAAC,OAAD;AACE,IAAA,OAAO,EAAEnD,cADX;AAEE,IAAA,KAAK,MAFP;AAGE,IAAA,IAAI,EAAE,CAACA,cAAD,IAAmBD,UAH3B;AAIE,IAAA,cAAc,EAAEK,cAAc,IAAI,QAJpC;AAKE,IAAA,gBAAgB,EAAEC,gBAAgB,IAAI,QALxC;AAME,IAAA,gBAAgB,EAAEC,gBAAgB,IAAI,QANxC;AAOE,IAAA,KAAK,EAAEC,KAAK,IAAI,QAPlB;AAQE,IAAA,UAAU,MARZ;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,kBAUE,oBAAC,UAAD;AACE,IAAA,QAAQ,EAAE1B,KADZ;AAEE,IAAA,KAAK,EAAEqB,UAFT;AAGE,IAAA,QAAQ,EAAEpB,QAHZ;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,IAVF,CAPF,CAPJ,eAgCE,oBAAC,qBAAD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,kBACE,oBAAC,MAAD;AACE,IAAA,UAAU,EAAE;AACVsE,MAAAA,kBAAkB,EAAE;AAAA,eAAM,IAAN;AAAA,OADV;AAEVvF,MAAAA,iBAAiB,EAAE,2BAACwF,KAAD;AAAA,4BACjB,oBAAC,kBAAD;AACE,UAAA,qBAAqB,EAAEpE;AADzB,WAEMoE,KAFN;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,WADiB;AAAA,OAFT;AAQV1F,MAAAA,gBAAgB,EAAhBA,gBARU;AASV2F,MAAAA,cAAc,EAAE,0BAAM;AACpB,eAAOnE,aAAa,KAAK,KAAlB,GAA0B,IAA1B,gBAAiC;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,UAAxC;AACD,OAXS;AAYVvB,MAAAA,WAAW,EAAE,qBAACyF,KAAD;AAAA,4BACX,oBAAC,YAAD;AAAa,UAAA,aAAa,EAAElE;AAA5B,WAA+CkE,KAA/C;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,WADW;AAAA,OAZH;AAeVvF,MAAAA,MAAM,EAAE,gBAACuF,KAAD;AAAA,4BACN,oBAAC,OAAD;AAAQ,UAAA,eAAe,EAAErE;AAAzB,WAA8CqE,KAA9C;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,WADM;AAAA,OAfE;AAkBVE,MAAAA,IAAI,EAAE,cAACF,KAAD;AAAA,4BACJ,oBAAC,UAAD,CAAY,IAAZ,oBAAqBA,KAArB;AAA4B,UAAA,SAAS,EAAC,aAAtC;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,WADI;AAAA;AAlBI,KADd;AAuBE,IAAA,MAAM,EAAE5F,gBAAgB,CAACkB,KAAD,CAvB1B;AAwBE,IAAA,gBAAgB,EAAE;AAAA,aAChBO,cAAc,GAAG,mBAAH,GAAyB,IADvB;AAAA,KAxBpB;AA2BE,IAAA,OAAO,EAAEoC,WA3BX;AA4BE,IAAA,KAAK,EAAEhC,KA5BT;AA6BE,IAAA,SAAS,EAAEC,SA7Bb;AA8BE,IAAA,WAAW,EAAEC,WA9Bf;AA+BE,IAAA,aAAa,EAAE2B,oBA/BjB;AAgCE,IAAA,WAAW,EAAEhC,aAAa,KAAK,KAhCjC;AAiCE,IAAA,QAAQ,EAAE,kBAAC8B,KAAD,EAAgB;AACxBF,MAAAA,CAAC,GAAG,CAAJ;AACA,UAAMyC,GAAG,GAAGC,KAAK,CAACC,IAAN,CAAWC,QAAQ,CAACC,gBAAT,CAA0B,aAA1B,CAAX,CAAZ;AACAJ,MAAAA,GAAG,SAAH,IAAAA,GAAG,WAAH,YAAAA,GAAG,CAAEK,OAAL,CAAa,UAACC,CAAD,EAAO;AAClBA,QAAAA,CAAC,CAACC,MAAF;AACD,OAFD;AAGArE,MAAAA,SAAQ,IAAIA,SAAQ,CAACuB,KAAD,CAApB;AACD,KAxCH;AAyCE,IAAA,OAAO,EAAEtB,OAzCX;AA0CE,IAAA,YAAY,EAAEC,YA1ChB;AA2CE,IAAA,UAAU,EAAEC,UA3Cd;AA4CE,IAAA,WAAW,EAAEC,WA5Cf;AA6CE,IAAA,UAAU,EAAEC,UA7Cd;AA8CE,IAAA,aAAa,EAAC,MA9ChB;AA+CE,IAAA,iBAAiB,MA/CnB;AAgDE,IAAA,aAAa,EAAE,GAhDjB;AAiDE,IAAA,UAAU,EAAEE,QAjDd,CAkDE;AAlDF;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,IADF,CAhCF,EAwFGO,QAAQ,iBACP;AAAK,IAAA,KAAK,EAAE;AAAEwD,MAAAA,SAAS,EAAE;AAAb,KAAZ;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,kBACE,oBAAC,cAAD;AACE,IAAA,KAAK,kCACCnF,KAAK,GACL;AACEoF,MAAAA,MAAM,EAAE,YADV;AAEED,MAAAA,SAAS,EAAE,MAFb;AAGEE,MAAAA,MAAM,EAAE;AAHV,KADK,GAML;AAAED,MAAAA,MAAM,EAAE,KAAV;AAAiBD,MAAAA,SAAS,EAAE,MAA5B;AAAoCE,MAAAA,MAAM,EAAE;AAA5C,KAPD,GAQAvD,SARA,CADP;AAWE,IAAA,OAAO,EAAEC,WAXX;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,kBAaE,oBAAC,QAAD;AACE,IAAA,OAAO,EAAEH,WAAW,IAAI,UAD1B;AAEE,IAAA,KAAK,EAAC,OAFR;AAGE,IAAA,IAAI,EAAEC,QAHR;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,IAbF,CADF,CAzFJ,EAgHG/B,KAAK,IAAIC,YAAT,iBACC,oBAAC,QAAD;AAAU,IAAA,IAAI,EAAC,UAAf;AAA0B,IAAA,GAAG,EAAC,QAA9B;AAAuC,IAAA,KAAK,EAAC,QAA7C;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,kBACE,oBAAC,YAAD;AAAc,IAAA,OAAO,EAAEA,YAAvB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,IADF,CAjHJ,CADF,CADF;AA0HD,CAnND;;AAqNA,eAAe1B,KAAK,CAACiH,IAAN,CAAWzF,UAAX,CAAf","sourcesContent":["import React, { useMemo } from 'react'\nimport Select, { components, InputActionMeta } from 'react-select'\nimport InputLabel from '../../InputLabel'\nimport Position from '../../Position'\nimport ErrorTooltip from '../../ErrorTooltip'\nimport { FormSelectStyled } from '../Styles'\nimport { IFormSelect } from '../interface'\nimport FontIcon from '../../../atoms/FontIcon'\n\nimport {\n  LoadingIndicator,\n  SingleValue,\n  DropdownIndicator,\n  Option\n} from '../CustomComponent'\nimport styled from 'styled-components'\nimport ToolTip from '../../Tooltip'\n\nconst FormSelectWrapper = styled.div`\n  background-color: white;\n  .react-select__option.react-select__option--is-selected {\n    background-color: ${({ theme }) => theme?.colors?.primary?.main};\n  }\n`\n\nconst FontIconStyled = styled.div`\n  background-color: ${({ theme }) => theme?.colors?.primary.main};\n  color: ${({ theme }) => theme?.colors?.primary.contrastText};\n  display: flex;\n  justify-content: center;\n  align-items: center;\n  min-width: 40px;\n  box-sizing: border-box;\n`\n\nconst SelectContainerStyled = styled.div`\n  width: 100%;\n`\n\nconst FormSelect = ({\n  error,\n  errorMessage,\n  label,\n  required,\n  defaultProps,\n  showDescription,\n  showDropdownIndicator,\n  showNoDataText,\n  showCrossIcon,\n  isSortable = true\n}: IFormSelect) => {\n  const {\n    options,\n    value,\n    isLoading,\n    placeholder = '',\n    onInputChange,\n    onChange,\n    onFocus,\n    isSearchable,\n    onMenuOpen,\n    onMenuClose,\n    isMenuOpen,\n    tooltipMessage,\n    disabled,\n    labelColor,\n    limitOptionsList,\n    arrowPlacement,\n    messagePlacement,\n    tooltipDirection,\n    align,\n    withIcon,\n    iconVariant,\n    iconSize,\n    iconStyle,\n    onIconClick,\n    fullWidth\n  } = defaultProps\n  const resultLimit = limitOptionsList || 25\n  let i = 0\n  const [input, setInput] = React.useState<any>()\n\n  const onInputChangeWrapper = (\n    newValue: string,\n    actionMeta: InputActionMeta\n  ) => {\n    setInput(newValue)\n    onInputChange && onInputChange(newValue, actionMeta)\n  }\n\n\n  const optionsMemo = useMemo(() => {\n    \n    const alphaNumericSort = (opti : any) => {\n      const sorter = (currentLabel:any, newLabel:any) => {\n         const isNumber = (v:any) => (+v).toString() === v;\n         const currentLabelPart = currentLabel.label.match(/\\d+|\\D+/g);\n         const newLabelPart = newLabel.label.match(/\\d+|\\D+/g);\n         let i = 0; \n         let len = Math.min(currentLabelPart.length, newLabelPart.length);\n         while (i < len && currentLabelPart[i] === newLabelPart[i]) { i++; };\n            if (i === len) {\n               return currentLabelPart.length - newLabelPart.length;\n         };\n         if (isNumber(currentLabelPart[i]) && isNumber(newLabelPart[i])) {\n            return currentLabelPart[i] - newLabelPart[i];\n         };\n         return currentLabelPart[i].localeCompare(newLabelPart[i]); };\n         opti.sort(sorter);\n   };\n   isSortable && alphaNumericSort(options);\n    const newdropdownoptions = options?.filter((dropdownOption: { label: string }) => {\n      if (input) {\n        return (\n          dropdownOption?.label\n            ?.toLowerCase()\n            .indexOf(input?.toString()?.toLowerCase()) >= 0 && i++ < resultLimit\n        )\n      } else {\n        return i++ < resultLimit\n      }\n    })\n    \n    const sortByLabel = (a: { label: string }, b: { label: string }) => a.label.localeCompare(b.label, undefined, { numeric: true });\n    const newlist = isSortable ? newdropdownoptions.sort(sortByLabel): newdropdownoptions\n    return newlist\n  }, [input, options])\n\n  return (\n    <FormSelectWrapper>\n      <Position\n        type='relative'\n        display={withIcon ? 'flex' : 'block'}\n        alignItems='stretch'\n        fullWidth={fullWidth}\n      >\n        {label && (\n          <Position\n            type='absolute'\n            top={withIcon ? '10px' : '-7px'}\n            left='10px'\n            zIndex='100'\n            style={{ maxWidth: 'calc(100% - 20px)' }}\n          >\n            <ToolTip\n              message={tooltipMessage}\n              hover\n              hide={!tooltipMessage || isMenuOpen}\n              arrowPlacement={arrowPlacement || 'center'}\n              messagePlacement={messagePlacement || 'center'}\n              tooltipDirection={tooltipDirection || 'bottom'}\n              align={align || 'center'}\n              isWordWrap\n            >\n              <InputLabel\n                children={label}\n                color={labelColor}\n                required={required}\n              />\n            </ToolTip>\n          </Position>\n        )}\n        <SelectContainerStyled>\n          <Select\n            components={{\n              IndicatorSeparator: () => null,\n              DropdownIndicator: (props) => (\n                <DropdownIndicator\n                  showDropdownIndicator={showDropdownIndicator}\n                  {...props}\n                />\n              ),\n              LoadingIndicator,\n              ClearIndicator: () => {\n                return showCrossIcon === false ? null : <div />\n              },\n              SingleValue: (props) => (\n                <SingleValue showCrossIcon={showCrossIcon} {...props} />\n              ),\n              Option: (props) => (\n                <Option showDescription={showDescription} {...props} />\n              ),\n              Menu: (props) => (\n                <components.Menu {...props} className='menuAnimate' />\n              )\n            }}\n            styles={FormSelectStyled(error)}\n            noOptionsMessage={() =>\n              showNoDataText ? 'No Data Available' : null\n            }\n            options={optionsMemo}\n            value={value}\n            isLoading={isLoading}\n            placeholder={placeholder}\n            onInputChange={onInputChangeWrapper}\n            isClearable={showCrossIcon === false}\n            onChange={(input: any) => {\n              i = 0\n              const obj = Array.from(document.querySelectorAll('.ui-tooltip'))\n              obj?.forEach((e) => {\n                e.remove()\n              })\n              onChange && onChange(input)\n            }}\n            onFocus={onFocus}\n            isSearchable={isSearchable}\n            onMenuOpen={onMenuOpen}\n            onMenuClose={onMenuClose}\n            menuIsOpen={isMenuOpen}\n            menuPlacement='auto'\n            closeMenuOnSelect\n            maxMenuHeight={200}\n            isDisabled={disabled}\n            // openMenuOnClick\n          />\n        </SelectContainerStyled>\n\n        {/*  For Icon */}\n        {withIcon && (\n          <div style={{ minHeight: '40PX' }}>\n            <FontIconStyled\n              style={{\n                ...(label\n                  ? {\n                      margin: '18px 0px 0',\n                      minHeight: '40px',\n                      height: 'auto'\n                    }\n                  : { margin: '0px', minHeight: '40px', height: 'auto' }),\n                ...iconStyle\n              }}\n              onClick={onIconClick}\n            >\n              <FontIcon\n                variant={iconVariant || 'calender'}\n                color='white'\n                size={iconSize}\n              />\n            </FontIconStyled>\n          </div>\n        )}\n\n        {error && errorMessage && (\n          <Position type='absolute' top='-7.5px' right='-6.5px'>\n            <ErrorTooltip message={errorMessage} />\n          </Position>\n        )}\n      </Position>\n    </FormSelectWrapper>\n  )\n}\n\nexport default React.memo(FormSelect)\n"]},"metadata":{},"sourceType":"module"}