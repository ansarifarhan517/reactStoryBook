{"ast":null,"code":"import _objectSpread from \"/Users/farhanansari/Code/ui-library/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/objectSpread2\";\nimport _slicedToArray from \"/Users/farhanansari/Code/ui-library/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/slicedToArray\";\n\nvar _this = this,\n    _jsxFileName = \"/Users/farhanansari/Code/ui-library/src/components/atoms/Map/SubComponent/Marker.tsx\";\n\nimport LL from 'leaflet';\nimport React, { Fragment, useEffect, useRef, useState } from 'react';\nimport { Marker, Tooltip, useLeaflet, FeatureGroup } from 'react-leaflet';\nimport MarkerClusterGroup from 'react-leaflet-markercluster';\nimport { StyledPopUp } from '../StyledMap';\nimport LeafletInfowindow from '../utils/LeafletInfowindow';\nimport throttle from '../../../../utilities/Throttle';\nimport { arrayEquals } from '../../../organisms/AdvancedFilter/components/Utils';\n\n// from given metadata or users data, if status is matching with legends status like checked,allowed then show cluster\nvar markerPermission = function markerPermission(metaData, legends, legendModel) {\n  var permission = false;\n  legends === null || legends === void 0 ? void 0 : legends.forEach(function (legend) {\n    var _legendModel$legend, _legendModel$legend2, _legendModel$legend3;\n\n    if ((legendModel === null || legendModel === void 0 ? void 0 : (_legendModel$legend = legendModel[legend]) === null || _legendModel$legend === void 0 ? void 0 : _legendModel$legend.checked) && (legendModel === null || legendModel === void 0 ? void 0 : (_legendModel$legend2 = legendModel[legend]) === null || _legendModel$legend2 === void 0 ? void 0 : _legendModel$legend2.allow) && (legendModel === null || legendModel === void 0 ? void 0 : (_legendModel$legend3 = legendModel[legend]) === null || _legendModel$legend3 === void 0 ? void 0 : _legendModel$legend3.allow(metaData))) {\n      permission = true;\n    }\n  });\n  return permission;\n}; // const htmlDecode = (input: string) => {\n//   var e = document.createElement('div')\n//   e.innerHTML = input\n//   return e.childNodes.length === 0 ? '' : e.childNodes[0].nodeValue\n// }\n\n\nvar MarkerComponent = function MarkerComponent(_ref) {\n  var entitiesMap = _ref.entitiesMap,\n      entities = _ref.entities,\n      legendModel = _ref.legendModel,\n      iconsRef = _ref.iconsRef,\n      popupRef = _ref.popupRef,\n      focusMarkerId = _ref.focusMarkerId,\n      focusSearchPlace = _ref.focusSearchPlace,\n      ignoreMarkerPermission = _ref.ignoreMarkerPermission;\n\n  var _useLeaflet = useLeaflet(),\n      map = _useLeaflet.map;\n\n  var featureGroupRef = React.useRef();\n  var featureHubGroupRef = React.useRef(); // mapping of the <entity>_<markerId> with the leaflet layer\n\n  var _useState = useState({}),\n      _useState2 = _slicedToArray(_useState, 2),\n      idLayerMapping = _useState2[0],\n      setIdLayerMapping = _useState2[1];\n\n  var newIdLayerMapping = useRef({});\n  var throttledSetLayer = throttle(function () {\n    console.log('The new Id layer mapping is - ', idLayerMapping);\n    setIdLayerMapping(newIdLayerMapping.current);\n  }, 2000);\n\n  var onMarkerAdd = function onMarkerAdd(entity, id, layer) {\n    newIdLayerMapping.current[entity + '__' + id] = layer;\n    throttledSetLayer();\n  };\n\n  var onFeatureGroupAdd = function onFeatureGroupAdd(entity, layer) {\n    var newIdLayerMapping = _objectSpread({}, idLayerMapping);\n\n    newIdLayerMapping[entity] = layer;\n    setIdLayerMapping(newIdLayerMapping); // console.log('The new Id layer mapping is - ', idLayerMapping)\n  };\n\n  var cluster = entities === null || entities === void 0 ? void 0 : entities.map(function (entity, index) {\n    var _entitiesMap$entity, _entitiesMap$entity$m, _markers$filter;\n\n    var markers = (entitiesMap === null || entitiesMap === void 0 ? void 0 : (_entitiesMap$entity = entitiesMap[entity]) === null || _entitiesMap$entity === void 0 ? void 0 : (_entitiesMap$entity$m = _entitiesMap$entity.markers) === null || _entitiesMap$entity$m === void 0 ? void 0 : _entitiesMap$entity$m.list) || [];\n    var hubsList = [];\n    var markerList = [];\n    markers === null || markers === void 0 ? void 0 : (_markers$filter = markers.filter(function (markerObj) {\n      return !arrayEquals(markerObj === null || markerObj === void 0 ? void 0 : markerObj.position, [-200, -200]) && (markerObj === null || markerObj === void 0 ? void 0 : markerObj.lat) !== -200 && (markerObj === null || markerObj === void 0 ? void 0 : markerObj.lng) !== -200;\n    })) === null || _markers$filter === void 0 ? void 0 : _markers$filter.forEach(function (marker) {\n      if (entity === 'trips' && marker.entity === 'hub') {\n        hubsList.push(marker);\n      } else {\n        markerList.push(marker);\n      }\n    });\n\n    if (!(entitiesMap === null || entitiesMap === void 0 ? void 0 : entitiesMap[entity].permission)) {\n      return null;\n    }\n\n    return /*#__PURE__*/React.createElement(React.Fragment, {\n      key: entity + '_' + index,\n      __self: _this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 103,\n        columnNumber: 7\n      }\n    }, /*#__PURE__*/React.createElement(FeatureGroup, {\n      ref: featureGroupRef,\n      __self: _this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 104,\n        columnNumber: 9\n      }\n    }, /*#__PURE__*/React.createElement(MarkerClusterGroup, {\n      key: entity,\n      spiderfyOnMaxZoom: true,\n      onAdd: function onAdd(e) {\n        return onFeatureGroupAdd(entity, e === null || e === void 0 ? void 0 : e.target);\n      },\n      showCoverageOnHover: false,\n      zoomToBoundsOnClick: true,\n      removeOutsideVisibleBounds: true,\n      maxClusterRadius: markerList.length > 100 ? 100 : 30,\n      chunkedLoading: true,\n      chunkDelay: 500,\n      __self: _this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 105,\n        columnNumber: 11\n      }\n    }, markerList.map(function (marker) {\n      var _entitiesMap$entity2, _entitiesMap$entity2$, _entitiesMap$entity2$2, _entitiesMap$entity3;\n\n      if (markerPermission(entitiesMap === null || entitiesMap === void 0 ? void 0 : (_entitiesMap$entity2 = entitiesMap[entity]) === null || _entitiesMap$entity2 === void 0 ? void 0 : (_entitiesMap$entity2$ = _entitiesMap$entity2.markers) === null || _entitiesMap$entity2$ === void 0 ? void 0 : (_entitiesMap$entity2$2 = _entitiesMap$entity2$.metaData) === null || _entitiesMap$entity2$2 === void 0 ? void 0 : _entitiesMap$entity2$2[marker.id], entitiesMap === null || entitiesMap === void 0 ? void 0 : (_entitiesMap$entity3 = entitiesMap[entity]) === null || _entitiesMap$entity3 === void 0 ? void 0 : _entitiesMap$entity3.legends, legendModel) || ignoreMarkerPermission) {\n        var _entitiesMap$entity4, _entitiesMap$entity4$, _entitiesMap$entity4$2, _entitiesMap$entity4$3, _entitiesMap$entity5, _entitiesMap$entity5$, _entitiesMap$entity5$2, _entitiesMap$entity5$3, _entitiesMap$entity6, _entitiesMap$entity6$, _entitiesMap$entity6$2, _entitiesMap$entity6$3, _entitiesMap$entity7, _entitiesMap$entity7$, _entitiesMap$entity7$2;\n\n        var customIcon = marker.icon ? new LL.DivIcon(_objectSpread({}, marker.icon)) : new LL.DivIcon(iconsRef === null || iconsRef === void 0 ? void 0 : iconsRef[marker.iconRef]);\n        return /*#__PURE__*/React.createElement(Marker, {\n          key: marker.id,\n          id: marker.id,\n          onClick: function onClick() {\n            return map === null || map === void 0 ? void 0 : map.doubleClickZoom.disable();\n          },\n          onAdd: function onAdd(e) {\n            return onMarkerAdd(entity, marker.id, e === null || e === void 0 ? void 0 : e.target);\n          },\n          position: marker.position,\n          icon: customIcon,\n          __self: _this,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 132,\n            columnNumber: 19\n          }\n        }, /*#__PURE__*/React.createElement(Tooltip, {\n          sticky: true,\n          direction: \"auto\",\n          __self: _this,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 142,\n            columnNumber: 21\n          }\n        }, /*#__PURE__*/React.createElement(\"span\", {\n          __self: _this,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 143,\n            columnNumber: 23\n          }\n        }, (entitiesMap === null || entitiesMap === void 0 ? void 0 : (_entitiesMap$entity4 = entitiesMap[entity]) === null || _entitiesMap$entity4 === void 0 ? void 0 : (_entitiesMap$entity4$ = _entitiesMap$entity4.markers) === null || _entitiesMap$entity4$ === void 0 ? void 0 : (_entitiesMap$entity4$2 = _entitiesMap$entity4$.metaData) === null || _entitiesMap$entity4$2 === void 0 ? void 0 : (_entitiesMap$entity4$3 = _entitiesMap$entity4$2[marker.id]) === null || _entitiesMap$entity4$3 === void 0 ? void 0 : _entitiesMap$entity4$3.title) || marker.title)), popupRef && marker.popupRef && /*#__PURE__*/React.createElement(StyledPopUp, {\n          keepInView: true,\n          onOpen: function onOpen() {\n            return map === null || map === void 0 ? void 0 : map.panTo(marker.position);\n          },\n          __self: _this,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 149,\n            columnNumber: 23\n          }\n        }, /*#__PURE__*/React.createElement(LeafletInfowindow, {\n          structures: popupRef,\n          popupRef: marker.popupRef,\n          google: google,\n          latlngObj: {\n            lat: parseFloat(entitiesMap === null || entitiesMap === void 0 ? void 0 : (_entitiesMap$entity5 = entitiesMap[entity]) === null || _entitiesMap$entity5 === void 0 ? void 0 : (_entitiesMap$entity5$ = _entitiesMap$entity5.markers) === null || _entitiesMap$entity5$ === void 0 ? void 0 : (_entitiesMap$entity5$2 = _entitiesMap$entity5$.metaData) === null || _entitiesMap$entity5$2 === void 0 ? void 0 : (_entitiesMap$entity5$3 = _entitiesMap$entity5$2[marker.id]) === null || _entitiesMap$entity5$3 === void 0 ? void 0 : _entitiesMap$entity5$3.lat),\n            lng: parseFloat(entitiesMap === null || entitiesMap === void 0 ? void 0 : (_entitiesMap$entity6 = entitiesMap[entity]) === null || _entitiesMap$entity6 === void 0 ? void 0 : (_entitiesMap$entity6$ = _entitiesMap$entity6.markers) === null || _entitiesMap$entity6$ === void 0 ? void 0 : (_entitiesMap$entity6$2 = _entitiesMap$entity6$.metaData) === null || _entitiesMap$entity6$2 === void 0 ? void 0 : (_entitiesMap$entity6$3 = _entitiesMap$entity6$2[marker.id]) === null || _entitiesMap$entity6$3 === void 0 ? void 0 : _entitiesMap$entity6$3.lng)\n          },\n          data: entitiesMap === null || entitiesMap === void 0 ? void 0 : (_entitiesMap$entity7 = entitiesMap[entity]) === null || _entitiesMap$entity7 === void 0 ? void 0 : (_entitiesMap$entity7$ = _entitiesMap$entity7.markers) === null || _entitiesMap$entity7$ === void 0 ? void 0 : (_entitiesMap$entity7$2 = _entitiesMap$entity7$.metaData) === null || _entitiesMap$entity7$2 === void 0 ? void 0 : _entitiesMap$entity7$2[marker.id],\n          __self: _this,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 153,\n            columnNumber: 25\n          }\n        })));\n      } else {\n        return null;\n      }\n    }))), entity === 'trips' && hubsList.length > 0 && /*#__PURE__*/React.createElement(FeatureGroup, {\n      key: entity + '_hub_' + index,\n      ref: featureHubGroupRef,\n      __self: _this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 187,\n        columnNumber: 11\n      }\n    }, hubsList.map(function (marker) {\n      var _entitiesMap$entity8, _entitiesMap$entity8$, _entitiesMap$entity8$2, _entitiesMap$entity9;\n\n      if (markerPermission(entitiesMap === null || entitiesMap === void 0 ? void 0 : (_entitiesMap$entity8 = entitiesMap[entity]) === null || _entitiesMap$entity8 === void 0 ? void 0 : (_entitiesMap$entity8$ = _entitiesMap$entity8.markers) === null || _entitiesMap$entity8$ === void 0 ? void 0 : (_entitiesMap$entity8$2 = _entitiesMap$entity8$.metaData) === null || _entitiesMap$entity8$2 === void 0 ? void 0 : _entitiesMap$entity8$2[marker.id], entitiesMap === null || entitiesMap === void 0 ? void 0 : (_entitiesMap$entity9 = entitiesMap[entity]) === null || _entitiesMap$entity9 === void 0 ? void 0 : _entitiesMap$entity9.legends, legendModel) || ignoreMarkerPermission) {\n        var customIcon = marker.icon ? new LL.DivIcon(_objectSpread({}, marker.icon)) : new LL.DivIcon(iconsRef === null || iconsRef === void 0 ? void 0 : iconsRef[marker.iconRef]);\n        return /*#__PURE__*/React.createElement(Marker, {\n          key: marker.id,\n          id: marker.id,\n          onClick: function onClick() {\n            return map === null || map === void 0 ? void 0 : map.doubleClickZoom.disable();\n          },\n          position: marker.position,\n          icon: customIcon,\n          __self: _this,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 206,\n            columnNumber: 19\n          }\n        }, /*#__PURE__*/React.createElement(Tooltip, {\n          sticky: true,\n          direction: \"auto\",\n          __self: _this,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 213,\n            columnNumber: 21\n          }\n        }, /*#__PURE__*/React.createElement(\"span\", {\n          __self: _this,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 214,\n            columnNumber: 23\n          }\n        }, marker.title)));\n      } else {\n        return null;\n      }\n    })));\n  });\n\n  var zoomToAllMarkers = function zoomToAllMarkers() {\n    var newMapBounds = featureGroupRef.current.leafletElement.getBounds();\n\n    if (map && newMapBounds && Object.keys(newMapBounds).length) {\n      var _featureGroupRef$curr;\n\n      map.fitBounds(featureGroupRef === null || featureGroupRef === void 0 ? void 0 : (_featureGroupRef$curr = featureGroupRef.current) === null || _featureGroupRef$curr === void 0 ? void 0 : _featureGroupRef$curr.leafletElement.getBounds(), {\n        maxZoom: 14,\n        duration: 0.5,\n        padding: LL.point(100, 100),\n        animate: true\n      });\n    }\n  };\n\n  useEffect(function () {\n    var _featureGroupRef$curr2;\n\n    // fly the map to all the marker bounds in the map\n    if (map && (featureGroupRef === null || featureGroupRef === void 0 ? void 0 : (_featureGroupRef$curr2 = featureGroupRef.current) === null || _featureGroupRef$curr2 === void 0 ? void 0 : _featureGroupRef$curr2.leafletElement) && !focusSearchPlace) {\n      if (focusMarkerId && idLayerMapping && idLayerMapping[focusMarkerId]) {\n        var entityLayer = focusMarkerId.split('__')[0] && idLayerMapping[focusMarkerId.split('__')[0]];\n        var markerLayer = idLayerMapping[focusMarkerId];\n\n        if (entityLayer && markerLayer && map.hasLayer(markerLayer)) {\n          entityLayer.zoomToShowLayer(markerLayer, function () {\n            markerLayer.fireEvent('click').fireEvent('mouseout');\n          });\n        } else {\n          zoomToAllMarkers();\n        }\n      } else {\n        // in the default state, pan to the full layer containing all the markers\n        zoomToAllMarkers();\n      }\n    }\n  }, [entities, legendModel, focusMarkerId, focusSearchPlace]);\n  return /*#__PURE__*/React.createElement(Fragment, {\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 264,\n      columnNumber: 10\n    }\n  }, cluster);\n};\n\nexport default React.memo(MarkerComponent);","map":{"version":3,"sources":["/Users/farhanansari/Code/ui-library/src/components/atoms/Map/SubComponent/Marker.tsx"],"names":["LL","React","Fragment","useEffect","useRef","useState","Marker","Tooltip","useLeaflet","FeatureGroup","MarkerClusterGroup","StyledPopUp","LeafletInfowindow","throttle","arrayEquals","markerPermission","metaData","legends","legendModel","permission","forEach","legend","checked","allow","MarkerComponent","entitiesMap","entities","iconsRef","popupRef","focusMarkerId","focusSearchPlace","ignoreMarkerPermission","map","featureGroupRef","featureHubGroupRef","idLayerMapping","setIdLayerMapping","newIdLayerMapping","throttledSetLayer","console","log","current","onMarkerAdd","entity","id","layer","onFeatureGroupAdd","cluster","index","markers","list","hubsList","markerList","filter","markerObj","position","lat","lng","marker","push","e","target","length","customIcon","icon","DivIcon","iconRef","doubleClickZoom","disable","title","panTo","google","parseFloat","zoomToAllMarkers","newMapBounds","leafletElement","getBounds","Object","keys","fitBounds","maxZoom","duration","padding","point","animate","entityLayer","split","markerLayer","hasLayer","zoomToShowLayer","fireEvent","memo"],"mappings":"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","sourcesContent":["import LL from 'leaflet'\nimport React, { Fragment, useEffect, useRef, useState } from 'react'\nimport { Marker, Tooltip, useLeaflet, FeatureGroup } from 'react-leaflet'\nimport MarkerClusterGroup from 'react-leaflet-markercluster'\nimport { IEntity } from '../interfaces.d'\nimport { StyledPopUp } from '../StyledMap'\nimport LeafletInfowindow from '../utils/LeafletInfowindow'\nimport throttle from '../../../../utilities/Throttle'\nimport { arrayEquals } from '../../../organisms/AdvancedFilter/components/Utils'\n\ninterface IMarker {\n  entitiesMap: { [name: string]: IEntity }\n  entities: string[]\n  legendModel: any\n  popupRef?: any\n  iconsRef: any\n  google: any\n  focusMarkerId?: string\n  geocoding: any\n  focusSearchPlace: boolean\n  ignoreMarkerPermission?: boolean\n}\n// from given metadata or users data, if status is matching with legends status like checked,allowed then show cluster\nconst markerPermission = (metaData: any, legends: any, legendModel: any) => {\n  let permission = false\n  legends?.forEach((legend: any) => {\n    if (\n      legendModel?.[legend]?.checked &&\n      legendModel?.[legend]?.allow &&\n      legendModel?.[legend]?.allow(metaData)\n    ) {\n      permission = true\n    }\n  })\n  return permission\n}\n\n// const htmlDecode = (input: string) => {\n//   var e = document.createElement('div')\n//   e.innerHTML = input\n//   return e.childNodes.length === 0 ? '' : e.childNodes[0].nodeValue\n// }\n\nconst MarkerComponent = ({\n  entitiesMap,\n  entities,\n  legendModel,\n  iconsRef,\n  popupRef,\n  focusMarkerId,\n  focusSearchPlace,\n  ignoreMarkerPermission\n}: IMarker) => {\n  const { map } = useLeaflet()\n\n  const featureGroupRef = React.useRef<any>()\n  const featureHubGroupRef = React.useRef<any>()\n\n  // mapping of the <entity>_<markerId> with the leaflet layer\n  const [idLayerMapping, setIdLayerMapping] = useState<any>({})\n  const newIdLayerMapping = useRef<any>({})\n  const throttledSetLayer = throttle(() => {\n    console.log('The new Id layer mapping is - ', idLayerMapping)\n    setIdLayerMapping(newIdLayerMapping.current)\n  }, 2000)\n  const onMarkerAdd = (entity: string, id: string, layer: any) => {\n    newIdLayerMapping.current[entity + '__' + id] = layer\n    throttledSetLayer()\n  }\n\n  const onFeatureGroupAdd = (entity: string, layer: any) => {\n    const newIdLayerMapping = { ...idLayerMapping }\n    newIdLayerMapping[entity] = layer\n    setIdLayerMapping(newIdLayerMapping)\n    // console.log('The new Id layer mapping is - ', idLayerMapping)\n  }\n\n  const cluster = entities?.map((entity: string, index: number) => {\n    const markers = entitiesMap?.[entity]?.markers?.list || []\n    const hubsList: any = []\n    const markerList: any = []\n\n    markers\n      ?.filter(\n        (markerObj: any) =>\n          !arrayEquals(markerObj?.position, [-200, -200]) &&\n          markerObj?.lat !== -200 &&\n          markerObj?.lng !== -200\n      )\n      ?.forEach((marker: any) => {\n        if (entity === 'trips' && marker.entity === 'hub') {\n          hubsList.push(marker)\n        } else {\n          markerList.push(marker)\n        }\n      })\n\n    if (!entitiesMap?.[entity].permission) {\n      return null\n    }\n\n    return (\n      <React.Fragment key={entity + '_' + index}>\n        <FeatureGroup ref={featureGroupRef as any}>\n          <MarkerClusterGroup\n            key={entity}\n            spiderfyOnMaxZoom\n            onAdd={(e: any) => onFeatureGroupAdd(entity, e?.target)}\n            showCoverageOnHover={false}\n            zoomToBoundsOnClick\n            removeOutsideVisibleBounds\n            maxClusterRadius={markerList.length > 100 ? 100 : 30}\n            chunkedLoading\n            chunkDelay={500}\n          >\n            {markerList.map((marker: any) => {\n              if (\n                markerPermission(\n                  entitiesMap?.[entity]?.markers?.metaData?.[marker.id],\n                  entitiesMap?.[entity]?.legends,\n                  legendModel\n                ) ||\n                ignoreMarkerPermission\n              ) {\n                const customIcon = marker.icon\n                  ? new LL.DivIcon({\n                      ...marker.icon\n                    })\n                  : new LL.DivIcon(iconsRef?.[marker.iconRef])\n\n                return (\n                  <Marker\n                    key={marker.id}\n                    id={marker.id}\n                    onClick={() => map?.doubleClickZoom.disable()}\n                    onAdd={(e: any) =>\n                      onMarkerAdd(entity, marker.id, e?.target)\n                    }\n                    position={marker.position}\n                    icon={customIcon}\n                  >\n                    <Tooltip sticky direction='auto'>\n                      <span>\n                        {entitiesMap?.[entity]?.markers?.metaData?.[marker.id]\n                          ?.title || marker.title}\n                      </span>\n                    </Tooltip>\n                    {popupRef && marker.popupRef && (\n                      <StyledPopUp\n                        keepInView\n                        onOpen={() => map?.panTo(marker.position)}\n                      >\n                        <LeafletInfowindow\n                          structures={popupRef}\n                          popupRef={marker.popupRef}\n                          google={google}\n                          latlngObj={{\n                            lat: parseFloat(\n                              entitiesMap?.[entity]?.markers?.metaData?.[\n                                marker.id\n                              ]?.lat\n                            ),\n                            lng: parseFloat(\n                              entitiesMap?.[entity]?.markers?.metaData?.[\n                                marker.id\n                              ]?.lng\n                            )\n                          }}\n                          data={\n                            entitiesMap?.[entity]?.markers?.metaData?.[\n                              marker.id\n                            ]\n                          }\n                        />\n                      </StyledPopUp>\n                    )}\n                  </Marker>\n                )\n              } else {\n                return null\n              }\n            })}\n          </MarkerClusterGroup>\n        </FeatureGroup>\n\n        {entity === 'trips' && hubsList.length > 0 && (\n          <FeatureGroup\n            key={entity + '_hub_' + index}\n            ref={featureHubGroupRef as any}\n          >\n            {hubsList.map((marker: any) => {\n              if (\n                markerPermission(\n                  entitiesMap?.[entity]?.markers?.metaData?.[marker.id],\n                  entitiesMap?.[entity]?.legends,\n                  legendModel\n                ) ||\n                ignoreMarkerPermission\n              ) {\n                const customIcon = marker.icon\n                  ? new LL.DivIcon({\n                      ...marker.icon\n                    })\n                  : new LL.DivIcon(iconsRef?.[marker.iconRef])\n                return (\n                  <Marker\n                    key={marker.id}\n                    id={marker.id}\n                    onClick={() => map?.doubleClickZoom.disable()}\n                    position={marker.position}\n                    icon={customIcon}\n                  >\n                    <Tooltip sticky direction='auto'>\n                      <span>{marker.title}</span>\n                    </Tooltip>\n                  </Marker>\n                )\n              } else {\n                return null\n              }\n            })}\n          </FeatureGroup>\n        )}\n      </React.Fragment>\n    )\n  })\n\n  const zoomToAllMarkers = () => {\n    const newMapBounds = featureGroupRef.current.leafletElement.getBounds()\n    if (map && newMapBounds && Object.keys(newMapBounds).length) {\n      map.fitBounds(featureGroupRef?.current?.leafletElement.getBounds(), {\n        maxZoom: 14,\n        duration: 0.5,\n        padding: LL.point(100, 100),\n        animate: true\n      })\n    }\n  }\n\n  useEffect(() => {\n    // fly the map to all the marker bounds in the map\n    if (map && featureGroupRef?.current?.leafletElement && !focusSearchPlace) {\n      if (focusMarkerId && idLayerMapping && idLayerMapping[focusMarkerId]) {\n        const entityLayer =\n          focusMarkerId.split('__')[0] &&\n          idLayerMapping[focusMarkerId.split('__')[0]]\n\n        const markerLayer = idLayerMapping[focusMarkerId]\n\n        if (entityLayer && markerLayer && map.hasLayer(markerLayer)) {\n          entityLayer.zoomToShowLayer(markerLayer, function () {\n            markerLayer.fireEvent('click').fireEvent('mouseout')\n          })\n        } else {\n          zoomToAllMarkers()\n        }\n      } else {\n        // in the default state, pan to the full layer containing all the markers\n        zoomToAllMarkers()\n      }\n    }\n  }, [entities, legendModel, focusMarkerId, focusSearchPlace])\n\n  return <Fragment>{cluster}</Fragment>\n}\n\nexport default React.memo(MarkerComponent)\n"]},"metadata":{},"sourceType":"module"}