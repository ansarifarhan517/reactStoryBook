{"ast":null,"code":"var _this = this,\n    _jsxFileName = \"/Users/farhanansari/Code/ui-library/src/components/molecules/IconDropdown/Variant/MultiLevelBreadCrumb.tsx\";\n\nimport React from 'react';\nimport { StyledDropdownContainer, StyledDropdownItem, StyledMultiLevelItem } from '../StyledIconDropdown'; // import { Option } from '../subComponents/Options'\n\nvar MultiLevelBreadCrumb = function MultiLevelBreadCrumb(_ref) {\n  var defaultProps = _ref.defaultProps,\n      handleOutsideChange = _ref.handleOutsideChange;\n  var options = defaultProps.options,\n      value = defaultProps.value,\n      menuIsOpen = defaultProps.menuIsOpen,\n      onChange = defaultProps.onChange;\n\n  var handleOnChange = function handleOnChange(input) {\n    var option = value;\n\n    if ((input === null || input === void 0 ? void 0 : input.value) === (option === null || option === void 0 ? void 0 : option.value) && handleOutsideChange) {\n      handleOutsideChange(option.value);\n    } else {\n      onChange && onChange(input);\n    }\n  };\n\n  var MultiLevelButtonsList = function MultiLevelButtonsList(_ref2) {\n    var options = _ref2.options,\n        _ref2$defaultOpen = _ref2.defaultOpen,\n        defaultOpen = _ref2$defaultOpen === void 0 ? 'left' : _ref2$defaultOpen,\n        childLevel = _ref2.childLevel,\n        handleOnClick = _ref2.handleOnClick;\n    return /*#__PURE__*/React.createElement(StyledDropdownContainer, {\n      className: childLevel ? defaultOpen == 'left' ? \"dropdown-item-right-\".concat(childLevel) : \"dropdown-item-left-\".concat(childLevel) : '',\n      __self: _this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 44,\n        columnNumber: 7\n      }\n    }, options.map(function (item) {\n      var _item$options;\n\n      if (item === null || item === void 0 ? void 0 : (_item$options = item.options) === null || _item$options === void 0 ? void 0 : _item$options.length) {\n        return /*#__PURE__*/React.createElement(StyledMultiLevelItem, {\n          containterIdentifier: \"child-\".concat(item.id),\n          key: \"child-\".concat(item.id),\n          __self: _this,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 56,\n            columnNumber: 15\n          }\n        }, /*#__PURE__*/React.createElement(StyledDropdownItem, {\n          __self: _this,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 57,\n            columnNumber: 17\n          }\n        }, /*#__PURE__*/React.createElement(\"div\", {\n          className: \"hasChildren\",\n          __self: _this,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 58,\n            columnNumber: 19\n          }\n        }, /*#__PURE__*/React.createElement(\"div\", {\n          __self: _this,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 59,\n            columnNumber: 21\n          }\n        }, item.label), /*#__PURE__*/React.createElement(\"i\", {\n          className: \"icon ui-library-icons icon-angle-right-thin\",\n          __self: _this,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 60,\n            columnNumber: 21\n          }\n        })), /*#__PURE__*/React.createElement(MultiLevelButtonsList, {\n          options: item.options,\n          defaultOpen: defaultOpen,\n          childLevel: \"child-\".concat(item.id),\n          handleOnClick: handleOnClick,\n          __self: _this,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 62,\n            columnNumber: 19\n          }\n        })));\n      }\n\n      return /*#__PURE__*/React.createElement(StyledDropdownItem, {\n        onClick: function onClick() {\n          handleOnClick && handleOnClick(item);\n        },\n        title: item.label,\n        key: item.id,\n        __self: _this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 74,\n          columnNumber: 13\n        }\n      }, item.label);\n    }));\n  };\n\n  return /*#__PURE__*/React.createElement(React.Fragment, null, menuIsOpen && /*#__PURE__*/React.createElement(MultiLevelButtonsList, {\n    options: options,\n    defaultOpen: 'right',\n    handleOnClick: handleOnChange,\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 92,\n      columnNumber: 13\n    }\n  }));\n};\n\nexport default MultiLevelBreadCrumb;","map":{"version":3,"sources":["/Users/farhanansari/Code/ui-library/src/components/molecules/IconDropdown/Variant/MultiLevelBreadCrumb.tsx"],"names":["React","StyledDropdownContainer","StyledDropdownItem","StyledMultiLevelItem","MultiLevelBreadCrumb","defaultProps","handleOutsideChange","options","value","menuIsOpen","onChange","handleOnChange","input","option","MultiLevelButtonsList","defaultOpen","childLevel","handleOnClick","map","item","length","id","label"],"mappings":"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","sourcesContent":["import React from 'react'\nimport { IIconDropdown, OptionType } from '../../DropDown/interface'\nimport { StyledDropdownContainer, StyledDropdownItem, StyledMultiLevelItem } from '../StyledIconDropdown'\n// import { Option } from '../subComponents/Options'\n\nconst MultiLevelBreadCrumb = ({\n  defaultProps,\n  handleOutsideChange\n}: {\n  defaultProps: IIconDropdown\n  handleOutsideChange: (value: string) => void\n}) => {\n  const {\n    options,\n    value,\n    menuIsOpen,\n    onChange\n  } = defaultProps\n\n  const handleOnChange = (input: OptionType) => {\n    const option = value as OptionType\n    if (input?.value === option?.value && handleOutsideChange) {\n      handleOutsideChange(option.value)\n    } else {\n      onChange && onChange(input)\n    }\n  }\n\n  interface IRecursiveProps extends React.HTMLAttributes<HTMLDivElement> {\n    options: any\n    defaultOpen?: 'right' | 'left'\n    childLevel?: string,\n    handleOnClick: (input: OptionType) => void\n  }\n\n  const MultiLevelButtonsList = ({\n    options,\n    defaultOpen = 'left',\n    childLevel,\n    handleOnClick\n  }: IRecursiveProps) => {\n\n    return (\n      <StyledDropdownContainer\n        className={\n          childLevel\n            ? defaultOpen == 'left'\n              ? `dropdown-item-right-${childLevel}`\n              : `dropdown-item-left-${childLevel}`\n            : ''\n        }\n      >\n        {options.map((item: any) => {\n          if (item?.options?.length) {\n            return (\n              <StyledMultiLevelItem containterIdentifier={`child-${item.id}`} key={`child-${item.id}`}>\n                <StyledDropdownItem>\n                  <div className='hasChildren'>\n                    <div>{item.label}</div>\n                    <i className='icon ui-library-icons icon-angle-right-thin' />\n                  </div>\n                  <MultiLevelButtonsList\n                    options={item.options}\n                    defaultOpen={defaultOpen}\n                    childLevel={`child-${item.id}`}\n                    handleOnClick={handleOnClick}\n                  />\n                </StyledDropdownItem>\n              </StyledMultiLevelItem>\n            )\n          }\n\n          return (\n            <StyledDropdownItem\n              onClick={() => {\n                handleOnClick && handleOnClick(item)\n              }}\n              title={item.label}\n              key={item.id}\n            >\n              {item.label}\n            </StyledDropdownItem>\n          )\n        })}\n      </StyledDropdownContainer>\n    )\n  }\n\n  return (\n    <>\n        {menuIsOpen && \n            <MultiLevelButtonsList\n                    options={options}\n                    defaultOpen={'right'}\n                    handleOnClick={handleOnChange}\n            />\n        }\n    </>\n  )\n}\n\nexport default MultiLevelBreadCrumb"]},"metadata":{},"sourceType":"module"}