{"ast":null,"code":"import _defineProperty from \"/Users/farhanansari/Code/ui-library/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/defineProperty\";\n\nvar _parameters;\n\n/* eslint-disable */\n// @ts-nocheck\n// @ts-ignore\nvar withSourceLoader = require('@storybook/source-loader/preview').withSource; // @ts-ignore\n\n\nvar addSourceDecorator = require(\"@storybook/source-loader/preview\").addSource; // @ts-ignore\n\n\nvar __SOURCE_PREFIX__ = \"/Users/farhanansari/Code/ui-library/src/components/atoms/Loader\"; // @ts-ignore\n\nvar __STORY__ = \"\\n\\n// @ts-nocheck\\n// @ts-ignore\\nvar withSourceLoader = require('@storybook/source-loader/preview').withSource;\\n// @ts-ignore\\nvar addSourceDecorator = require(\\\"@storybook/source-loader/preview\\\").addSource;\\n// @ts-ignore\\nvar __SOURCE_PREFIX__ = \\\"/Users/farhanansari/Code/ui-library/src/components/atoms/Loader\\\";\\n// @ts-ignore\\nvar __STORY__ = \\\"\\\\n\\\\n// @ts-nocheck\\\\n// @ts-ignore\\\\nvar withSourceLoader = require('@storybook/source-loader/preview').withSource;\\\\n// @ts-ignore\\\\nvar addSourceDecorator = require(\\\\\\\"@storybook/source-loader/preview\\\\\\\").addSource;\\\\n// @ts-ignore\\\\nvar __SOURCE_PREFIX__ = \\\\\\\"/Users/farhanansari/Code/ui-library/src/components/atoms/Loader\\\\\\\";\\\\n// @ts-ignore\\\\nvar __STORY__ = \\\\\\\"import React from 'react'\\\\\\\\n\\\\\\\\nimport { path } from '..'\\\\\\\\nimport ThemeWrapper from '../../../utilities/components/ThemeWrapper'\\\\\\\\n\\\\\\\\nimport LoaderComponent, { tLoaderSpeed } from '.'\\\\\\\\nimport Position from '../../molecules/Position'\\\\\\\\nimport Typography from '../Typography'\\\\\\\\nimport Box from '../Box'\\\\\\\\nimport { boolean, number } from '@storybook/addon-knobs'\\\\\\\\n\\\\\\\\nexport default {\\\\\\\\n  title: `${path}/Loader`,\\\\\\\\n  component: LoaderComponent\\\\\\\\n}\\\\\\\\n\\\\\\\\nexport const Loader = () => (\\\\\\\\n  <ThemeWrapper>\\\\\\\\n    <Position my='3em' p='3em' type='relative' border={1}>\\\\\\\\n      <Typography>You can use \\\\\\\\\\\\\\\"center\\\\\\\\\\\\\\\" Prop to center the Loader</Typography>\\\\\\\\n      <Typography>\\\\\\\\n        You can use \\\\\\\\\\\\\\\"fadeBackground\\\\\\\\\\\\\\\" prop to fade the background of the\\\\\\\\n        enclosing <strong>Relative</strong> Parent.\\\\\\\\n      </Typography>\\\\\\\\n      <Box my='1em' p='1em' bgColor='grey.50'>\\\\\\\\n        <Typography>\\\\\\\\n          Pro Tip1: \\\\\\\\\\\\\\\"fadeBackground\\\\\\\\\\\\\\\" will work only if \\\\\\\\\\\\\\\"center\\\\\\\\\\\\\\\" prop is true.{' '}\\\\\\\\n        </Typography>\\\\\\\\n      </Box>\\\\\\\\n      <Box my='1em' p='1em' bgColor='grey.50'>\\\\\\\\n        <Typography>\\\\\\\\n          Pro Tip2: Loader component expects its parent component to be\\\\\\\\n          positioned as <strong>Relative</strong>\\\\\\\\n        </Typography>\\\\\\\\n      </Box>\\\\\\\\n\\\\\\\\n      <LoaderComponent\\\\\\\\n        center={boolean('center', false)}\\\\\\\\n        fadeBackground={boolean('fadeBackground', false)}\\\\\\\\n        speed={number('speed', 1, { min: 1, max: 5 }) as tLoaderSpeed}\\\\\\\\n      />\\\\\\\\n    </Position>\\\\\\\\n  </ThemeWrapper>\\\\\\\\n)\\\\\\\\n\\\\\\\";\\\\n// @ts-ignore\\\\nvar __ADDS_MAP__ = {};\\\\n// @ts-ignore\\\\nvar __MAIN_FILE_LOCATION__ = \\\\\\\"/Loader.stories.tsx\\\\\\\";\\\\n// @ts-ignore\\\\nvar __MODULE_DEPENDENCIES__ = [];\\\\n// @ts-ignore\\\\nvar __LOCAL_DEPENDENCIES__ = {};\\\\n// @ts-ignore\\\\nvar __IDS_TO_FRAMEWORKS__ = {};\\\\n        \\\\nimport React from 'react'\\\\n\\\\nimport { path } from '..'\\\\nimport ThemeWrapper from '../../../utilities/components/ThemeWrapper'\\\\n\\\\nimport LoaderComponent, { tLoaderSpeed } from '.'\\\\nimport Position from '../../molecules/Position'\\\\nimport Typography from '../Typography'\\\\nimport Box from '../Box'\\\\nimport { boolean, number } from '@storybook/addon-knobs'\\\\n\\\\nexport default {parameters: {\\\\\\\"storySource\\\\\\\":{\\\\\\\"source\\\\\\\":\\\\\\\"import React from 'react'\\\\\\\\n\\\\\\\\nimport { path } from '..'\\\\\\\\nimport ThemeWrapper from '../../../utilities/components/ThemeWrapper'\\\\\\\\n\\\\\\\\nimport LoaderComponent, { tLoaderSpeed } from '.'\\\\\\\\nimport Position from '../../molecules/Position'\\\\\\\\nimport Typography from '../Typography'\\\\\\\\nimport Box from '../Box'\\\\\\\\nimport { boolean, number } from '@storybook/addon-knobs'\\\\\\\\n\\\\\\\\nexport default {\\\\\\\\n  title: `${path}/Loader`,\\\\\\\\n  component: LoaderComponent\\\\\\\\n}\\\\\\\\n\\\\\\\\nexport const Loader = () => (\\\\\\\\n  <ThemeWrapper>\\\\\\\\n    <Position my='3em' p='3em' type='relative' border={1}>\\\\\\\\n      <Typography>You can use \\\\\\\\\\\\\\\"center\\\\\\\\\\\\\\\" Prop to center the Loader</Typography>\\\\\\\\n      <Typography>\\\\\\\\n        You can use \\\\\\\\\\\\\\\"fadeBackground\\\\\\\\\\\\\\\" prop to fade the background of the\\\\\\\\n        enclosing <strong>Relative</strong> Parent.\\\\\\\\n      </Typography>\\\\\\\\n      <Box my='1em' p='1em' bgColor='grey.50'>\\\\\\\\n        <Typography>\\\\\\\\n          Pro Tip1: \\\\\\\\\\\\\\\"fadeBackground\\\\\\\\\\\\\\\" will work only if \\\\\\\\\\\\\\\"center\\\\\\\\\\\\\\\" prop is true.{' '}\\\\\\\\n        </Typography>\\\\\\\\n      </Box>\\\\\\\\n      <Box my='1em' p='1em' bgColor='grey.50'>\\\\\\\\n        <Typography>\\\\\\\\n          Pro Tip2: Loader component expects its parent component to be\\\\\\\\n          positioned as <strong>Relative</strong>\\\\\\\\n        </Typography>\\\\\\\\n      </Box>\\\\\\\\n\\\\\\\\n      <LoaderComponent\\\\\\\\n        center={boolean('center', false)}\\\\\\\\n        fadeBackground={boolean('fadeBackground', false)}\\\\\\\\n        speed={number('speed', 1, { min: 1, max: 5 }) as tLoaderSpeed}\\\\\\\\n      />\\\\\\\\n    </Position>\\\\\\\\n  </ThemeWrapper>\\\\\\\\n)\\\\\\\\n\\\\\\\",\\\\\\\"locationsMap\\\\\\\":{}},},\\\\n  title: `${path}/Loader`,\\\\n  component: LoaderComponent\\\\n}\\\\n\\\\nexport const Loader = addSourceDecorator(() => (\\\\n  <ThemeWrapper>\\\\n    <Position my='3em' p='3em' type='relative' border={1}>\\\\n      <Typography>You can use \\\\\\\"center\\\\\\\" Prop to center the Loader</Typography>\\\\n      <Typography>\\\\n        You can use \\\\\\\"fadeBackground\\\\\\\" prop to fade the background of the\\\\n        enclosing <strong>Relative</strong> Parent.\\\\n      </Typography>\\\\n      <Box my='1em' p='1em' bgColor='grey.50'>\\\\n        <Typography>\\\\n          Pro Tip1: \\\\\\\"fadeBackground\\\\\\\" will work only if \\\\\\\"center\\\\\\\" prop is true.{' '}\\\\n        </Typography>\\\\n      </Box>\\\\n      <Box my='1em' p='1em' bgColor='grey.50'>\\\\n        <Typography>\\\\n          Pro Tip2: Loader component expects its parent component to be\\\\n          positioned as <strong>Relative</strong>\\\\n        </Typography>\\\\n      </Box>\\\\n\\\\n      <LoaderComponent\\\\n        center={boolean('center', false)}\\\\n        fadeBackground={boolean('fadeBackground', false)}\\\\n        speed={number('speed', 1, { min: 1, max: 5 }) as tLoaderSpeed}\\\\n      />\\\\n    </Position>\\\\n  </ThemeWrapper>\\\\n), {__STORY__, __ADDS_MAP__,__MAIN_FILE_LOCATION__,__MODULE_DEPENDENCIES__,__LOCAL_DEPENDENCIES__,__SOURCE_PREFIX__,__IDS_TO_FRAMEWORKS__});\\\";\\n// @ts-ignore\\nvar __ADDS_MAP__ = {};\\n// @ts-ignore\\nvar __MAIN_FILE_LOCATION__ = \\\"/Loader.stories.tsx\\\";\\n// @ts-ignore\\nvar __MODULE_DEPENDENCIES__ = [];\\n// @ts-ignore\\nvar __LOCAL_DEPENDENCIES__ = {};\\n// @ts-ignore\\nvar __IDS_TO_FRAMEWORKS__ = {};\\n        \\n\\n\\n// @ts-nocheck\\n// @ts-ignore\\nvar withSourceLoader = require('@storybook/source-loader/preview').withSource;\\n// @ts-ignore\\nvar addSourceDecorator = require(\\\"@storybook/source-loader/preview\\\").addSource;\\n// @ts-ignore\\nvar __SOURCE_PREFIX__ = \\\"/Users/farhanansari/Code/ui-library/src/components/atoms/Loader\\\";\\n// @ts-ignore\\nvar __STORY__ = \\\"import React from 'react'\\\\n\\\\nimport { path } from '..'\\\\nimport ThemeWrapper from '../../../utilities/components/ThemeWrapper'\\\\n\\\\nimport LoaderComponent, { tLoaderSpeed } from '.'\\\\nimport Position from '../../molecules/Position'\\\\nimport Typography from '../Typography'\\\\nimport Box from '../Box'\\\\nimport { boolean, number } from '@storybook/addon-knobs'\\\\n\\\\nexport default {\\\\n  title: `${path}/Loader`,\\\\n  component: LoaderComponent\\\\n}\\\\n\\\\nexport const Loader = () => (\\\\n  <ThemeWrapper>\\\\n    <Position my='3em' p='3em' type='relative' border={1}>\\\\n      <Typography>You can use \\\\\\\"center\\\\\\\" Prop to center the Loader</Typography>\\\\n      <Typography>\\\\n        You can use \\\\\\\"fadeBackground\\\\\\\" prop to fade the background of the\\\\n        enclosing <strong>Relative</strong> Parent.\\\\n      </Typography>\\\\n      <Box my='1em' p='1em' bgColor='grey.50'>\\\\n        <Typography>\\\\n          Pro Tip1: \\\\\\\"fadeBackground\\\\\\\" will work only if \\\\\\\"center\\\\\\\" prop is true.{' '}\\\\n        </Typography>\\\\n      </Box>\\\\n      <Box my='1em' p='1em' bgColor='grey.50'>\\\\n        <Typography>\\\\n          Pro Tip2: Loader component expects its parent component to be\\\\n          positioned as <strong>Relative</strong>\\\\n        </Typography>\\\\n      </Box>\\\\n\\\\n      <LoaderComponent\\\\n        center={boolean('center', false)}\\\\n        fadeBackground={boolean('fadeBackground', false)}\\\\n        speed={number('speed', 1, { min: 1, max: 5 }) as tLoaderSpeed}\\\\n      />\\\\n    </Position>\\\\n  </ThemeWrapper>\\\\n)\\\\n\\\";\\n// @ts-ignore\\nvar __ADDS_MAP__ = {};\\n// @ts-ignore\\nvar __MAIN_FILE_LOCATION__ = \\\"/Loader.stories.tsx\\\";\\n// @ts-ignore\\nvar __MODULE_DEPENDENCIES__ = [];\\n// @ts-ignore\\nvar __LOCAL_DEPENDENCIES__ = {};\\n// @ts-ignore\\nvar __IDS_TO_FRAMEWORKS__ = {};\\n        \\nimport React from 'react'\\n\\nimport { path } from '..'\\nimport ThemeWrapper from '../../../utilities/components/ThemeWrapper'\\n\\nimport LoaderComponent, { tLoaderSpeed } from '.'\\nimport Position from '../../molecules/Position'\\nimport Typography from '../Typography'\\nimport Box from '../Box'\\nimport { boolean, number } from '@storybook/addon-knobs'\\n\\nexport default {parameters: {\\\"storySource\\\":{\\\"source\\\":\\\"\\\\n\\\\n// @ts-nocheck\\\\n// @ts-ignore\\\\nvar withSourceLoader = require('@storybook/source-loader/preview').withSource;\\\\n// @ts-ignore\\\\nvar addSourceDecorator = require(\\\\\\\"@storybook/source-loader/preview\\\\\\\").addSource;\\\\n// @ts-ignore\\\\nvar __SOURCE_PREFIX__ = \\\\\\\"/Users/farhanansari/Code/ui-library/src/components/atoms/Loader\\\\\\\";\\\\n// @ts-ignore\\\\nvar __STORY__ = \\\\\\\"import React from 'react'\\\\\\\\n\\\\\\\\nimport { path } from '..'\\\\\\\\nimport ThemeWrapper from '../../../utilities/components/ThemeWrapper'\\\\\\\\n\\\\\\\\nimport LoaderComponent, { tLoaderSpeed } from '.'\\\\\\\\nimport Position from '../../molecules/Position'\\\\\\\\nimport Typography from '../Typography'\\\\\\\\nimport Box from '../Box'\\\\\\\\nimport { boolean, number } from '@storybook/addon-knobs'\\\\\\\\n\\\\\\\\nexport default {\\\\\\\\n  title: `${path}/Loader`,\\\\\\\\n  component: LoaderComponent\\\\\\\\n}\\\\\\\\n\\\\\\\\nexport const Loader = () => (\\\\\\\\n  <ThemeWrapper>\\\\\\\\n    <Position my='3em' p='3em' type='relative' border={1}>\\\\\\\\n      <Typography>You can use \\\\\\\\\\\\\\\"center\\\\\\\\\\\\\\\" Prop to center the Loader</Typography>\\\\\\\\n      <Typography>\\\\\\\\n        You can use \\\\\\\\\\\\\\\"fadeBackground\\\\\\\\\\\\\\\" prop to fade the background of the\\\\\\\\n        enclosing <strong>Relative</strong> Parent.\\\\\\\\n      </Typography>\\\\\\\\n      <Box my='1em' p='1em' bgColor='grey.50'>\\\\\\\\n        <Typography>\\\\\\\\n          Pro Tip1: \\\\\\\\\\\\\\\"fadeBackground\\\\\\\\\\\\\\\" will work only if \\\\\\\\\\\\\\\"center\\\\\\\\\\\\\\\" prop is true.{' '}\\\\\\\\n        </Typography>\\\\\\\\n      </Box>\\\\\\\\n      <Box my='1em' p='1em' bgColor='grey.50'>\\\\\\\\n        <Typography>\\\\\\\\n          Pro Tip2: Loader component expects its parent component to be\\\\\\\\n          positioned as <strong>Relative</strong>\\\\\\\\n        </Typography>\\\\\\\\n      </Box>\\\\\\\\n\\\\\\\\n      <LoaderComponent\\\\\\\\n        center={boolean('center', false)}\\\\\\\\n        fadeBackground={boolean('fadeBackground', false)}\\\\\\\\n        speed={number('speed', 1, { min: 1, max: 5 }) as tLoaderSpeed}\\\\\\\\n      />\\\\\\\\n    </Position>\\\\\\\\n  </ThemeWrapper>\\\\\\\\n)\\\\\\\\n\\\\\\\";\\\\n// @ts-ignore\\\\nvar __ADDS_MAP__ = {};\\\\n// @ts-ignore\\\\nvar __MAIN_FILE_LOCATION__ = \\\\\\\"/Loader.stories.tsx\\\\\\\";\\\\n// @ts-ignore\\\\nvar __MODULE_DEPENDENCIES__ = [];\\\\n// @ts-ignore\\\\nvar __LOCAL_DEPENDENCIES__ = {};\\\\n// @ts-ignore\\\\nvar __IDS_TO_FRAMEWORKS__ = {};\\\\n        \\\\nimport React from 'react'\\\\n\\\\nimport { path } from '..'\\\\nimport ThemeWrapper from '../../../utilities/components/ThemeWrapper'\\\\n\\\\nimport LoaderComponent, { tLoaderSpeed } from '.'\\\\nimport Position from '../../molecules/Position'\\\\nimport Typography from '../Typography'\\\\nimport Box from '../Box'\\\\nimport { boolean, number } from '@storybook/addon-knobs'\\\\n\\\\nexport default {parameters: {\\\\\\\"storySource\\\\\\\":{\\\\\\\"source\\\\\\\":\\\\\\\"import React from 'react'\\\\\\\\n\\\\\\\\nimport { path } from '..'\\\\\\\\nimport ThemeWrapper from '../../../utilities/components/ThemeWrapper'\\\\\\\\n\\\\\\\\nimport LoaderComponent, { tLoaderSpeed } from '.'\\\\\\\\nimport Position from '../../molecules/Position'\\\\\\\\nimport Typography from '../Typography'\\\\\\\\nimport Box from '../Box'\\\\\\\\nimport { boolean, number } from '@storybook/addon-knobs'\\\\\\\\n\\\\\\\\nexport default {\\\\\\\\n  title: `${path}/Loader`,\\\\\\\\n  component: LoaderComponent\\\\\\\\n}\\\\\\\\n\\\\\\\\nexport const Loader = () => (\\\\\\\\n  <ThemeWrapper>\\\\\\\\n    <Position my='3em' p='3em' type='relative' border={1}>\\\\\\\\n      <Typography>You can use \\\\\\\\\\\\\\\"center\\\\\\\\\\\\\\\" Prop to center the Loader</Typography>\\\\\\\\n      <Typography>\\\\\\\\n        You can use \\\\\\\\\\\\\\\"fadeBackground\\\\\\\\\\\\\\\" prop to fade the background of the\\\\\\\\n        enclosing <strong>Relative</strong> Parent.\\\\\\\\n      </Typography>\\\\\\\\n      <Box my='1em' p='1em' bgColor='grey.50'>\\\\\\\\n        <Typography>\\\\\\\\n          Pro Tip1: \\\\\\\\\\\\\\\"fadeBackground\\\\\\\\\\\\\\\" will work only if \\\\\\\\\\\\\\\"center\\\\\\\\\\\\\\\" prop is true.{' '}\\\\\\\\n        </Typography>\\\\\\\\n      </Box>\\\\\\\\n      <Box my='1em' p='1em' bgColor='grey.50'>\\\\\\\\n        <Typography>\\\\\\\\n          Pro Tip2: Loader component expects its parent component to be\\\\\\\\n          positioned as <strong>Relative</strong>\\\\\\\\n        </Typography>\\\\\\\\n      </Box>\\\\\\\\n\\\\\\\\n      <LoaderComponent\\\\\\\\n        center={boolean('center', false)}\\\\\\\\n        fadeBackground={boolean('fadeBackground', false)}\\\\\\\\n        speed={number('speed', 1, { min: 1, max: 5 }) as tLoaderSpeed}\\\\\\\\n      />\\\\\\\\n    </Position>\\\\\\\\n  </ThemeWrapper>\\\\\\\\n)\\\\\\\\n\\\\\\\",\\\\\\\"locationsMap\\\\\\\":{}},},\\\\n  title: `${path}/Loader`,\\\\n  component: LoaderComponent\\\\n}\\\\n\\\\nexport const Loader = addSourceDecorator(() => (\\\\n  <ThemeWrapper>\\\\n    <Position my='3em' p='3em' type='relative' border={1}>\\\\n      <Typography>You can use \\\\\\\"center\\\\\\\" Prop to center the Loader</Typography>\\\\n      <Typography>\\\\n        You can use \\\\\\\"fadeBackground\\\\\\\" prop to fade the background of the\\\\n        enclosing <strong>Relative</strong> Parent.\\\\n      </Typography>\\\\n      <Box my='1em' p='1em' bgColor='grey.50'>\\\\n        <Typography>\\\\n          Pro Tip1: \\\\\\\"fadeBackground\\\\\\\" will work only if \\\\\\\"center\\\\\\\" prop is true.{' '}\\\\n        </Typography>\\\\n      </Box>\\\\n      <Box my='1em' p='1em' bgColor='grey.50'>\\\\n        <Typography>\\\\n          Pro Tip2: Loader component expects its parent component to be\\\\n          positioned as <strong>Relative</strong>\\\\n        </Typography>\\\\n      </Box>\\\\n\\\\n      <LoaderComponent\\\\n        center={boolean('center', false)}\\\\n        fadeBackground={boolean('fadeBackground', false)}\\\\n        speed={number('speed', 1, { min: 1, max: 5 }) as tLoaderSpeed}\\\\n      />\\\\n    </Position>\\\\n  </ThemeWrapper>\\\\n), {__STORY__, __ADDS_MAP__,__MAIN_FILE_LOCATION__,__MODULE_DEPENDENCIES__,__LOCAL_DEPENDENCIES__,__SOURCE_PREFIX__,__IDS_TO_FRAMEWORKS__});\\\",\\\"locationsMap\\\":{}},\\\"storySource\\\":{\\\"source\\\":\\\"import React from 'react'\\\\n\\\\nimport { path } from '..'\\\\nimport ThemeWrapper from '../../../utilities/components/ThemeWrapper'\\\\n\\\\nimport LoaderComponent, { tLoaderSpeed } from '.'\\\\nimport Position from '../../molecules/Position'\\\\nimport Typography from '../Typography'\\\\nimport Box from '../Box'\\\\nimport { boolean, number } from '@storybook/addon-knobs'\\\\n\\\\nexport default {\\\\n  title: `${path}/Loader`,\\\\n  component: LoaderComponent\\\\n}\\\\n\\\\nexport const Loader = () => (\\\\n  <ThemeWrapper>\\\\n    <Position my='3em' p='3em' type='relative' border={1}>\\\\n      <Typography>You can use \\\\\\\"center\\\\\\\" Prop to center the Loader</Typography>\\\\n      <Typography>\\\\n        You can use \\\\\\\"fadeBackground\\\\\\\" prop to fade the background of the\\\\n        enclosing <strong>Relative</strong> Parent.\\\\n      </Typography>\\\\n      <Box my='1em' p='1em' bgColor='grey.50'>\\\\n        <Typography>\\\\n          Pro Tip1: \\\\\\\"fadeBackground\\\\\\\" will work only if \\\\\\\"center\\\\\\\" prop is true.{' '}\\\\n        </Typography>\\\\n      </Box>\\\\n      <Box my='1em' p='1em' bgColor='grey.50'>\\\\n        <Typography>\\\\n          Pro Tip2: Loader component expects its parent component to be\\\\n          positioned as <strong>Relative</strong>\\\\n        </Typography>\\\\n      </Box>\\\\n\\\\n      <LoaderComponent\\\\n        center={boolean('center', false)}\\\\n        fadeBackground={boolean('fadeBackground', false)}\\\\n        speed={number('speed', 1, { min: 1, max: 5 }) as tLoaderSpeed}\\\\n      />\\\\n    </Position>\\\\n  </ThemeWrapper>\\\\n)\\\\n\\\",\\\"locationsMap\\\":{}},},\\n  title: `${path}/Loader`,\\n  component: LoaderComponent\\n}\\n\\nexport const Loader = addSourceDecorator(addSourceDecorator(() => (\\n  <ThemeWrapper>\\n    <Position my='3em' p='3em' type='relative' border={1}>\\n      <Typography>You can use \\\"center\\\" Prop to center the Loader</Typography>\\n      <Typography>\\n        You can use \\\"fadeBackground\\\" prop to fade the background of the\\n        enclosing <strong>Relative</strong> Parent.\\n      </Typography>\\n      <Box my='1em' p='1em' bgColor='grey.50'>\\n        <Typography>\\n          Pro Tip1: \\\"fadeBackground\\\" will work only if \\\"center\\\" prop is true.{' '}\\n        </Typography>\\n      </Box>\\n      <Box my='1em' p='1em' bgColor='grey.50'>\\n        <Typography>\\n          Pro Tip2: Loader component expects its parent component to be\\n          positioned as <strong>Relative</strong>\\n        </Typography>\\n      </Box>\\n\\n      <LoaderComponent\\n        center={boolean('center', false)}\\n        fadeBackground={boolean('fadeBackground', false)}\\n        speed={number('speed', 1, { min: 1, max: 5 }) as tLoaderSpeed}\\n      />\\n    </Position>\\n  </ThemeWrapper>\\n), {__STORY__, __ADDS_MAP__,__MAIN_FILE_LOCATION__,__MODULE_DEPENDENCIES__,__LOCAL_DEPENDENCIES__,__SOURCE_PREFIX__,__IDS_TO_FRAMEWORKS__}), {__STORY__, __ADDS_MAP__,__MAIN_FILE_LOCATION__,__MODULE_DEPENDENCIES__,__LOCAL_DEPENDENCIES__,__SOURCE_PREFIX__,__IDS_TO_FRAMEWORKS__});\"; // @ts-ignore\n\nvar __ADDS_MAP__ = {}; // @ts-ignore\n\nvar __MAIN_FILE_LOCATION__ = \"/Loader.stories.tsx\"; // @ts-ignore\n\nvar __MODULE_DEPENDENCIES__ = []; // @ts-ignore\n\nvar __LOCAL_DEPENDENCIES__ = {}; // @ts-ignore\n\nvar __IDS_TO_FRAMEWORKS__ = {};\n/* eslint-disable */\n// @ts-nocheck\n// @ts-ignore\n\nvar withSourceLoader = require('@storybook/source-loader/preview').withSource; // @ts-ignore\n\n\nvar addSourceDecorator = require(\"@storybook/source-loader/preview\").addSource; // @ts-ignore\n\n\nvar __SOURCE_PREFIX__ = \"/Users/farhanansari/Code/ui-library/src/components/atoms/Loader\"; // @ts-ignore\n\nvar __STORY__ = \"\\n\\n// @ts-nocheck\\n// @ts-ignore\\nvar withSourceLoader = require('@storybook/source-loader/preview').withSource;\\n// @ts-ignore\\nvar addSourceDecorator = require(\\\"@storybook/source-loader/preview\\\").addSource;\\n// @ts-ignore\\nvar __SOURCE_PREFIX__ = \\\"/Users/farhanansari/Code/ui-library/src/components/atoms/Loader\\\";\\n// @ts-ignore\\nvar __STORY__ = \\\"import React from 'react'\\\\n\\\\nimport { path } from '..'\\\\nimport ThemeWrapper from '../../../utilities/components/ThemeWrapper'\\\\n\\\\nimport LoaderComponent, { tLoaderSpeed } from '.'\\\\nimport Position from '../../molecules/Position'\\\\nimport Typography from '../Typography'\\\\nimport Box from '../Box'\\\\nimport { boolean, number } from '@storybook/addon-knobs'\\\\n\\\\nexport default {\\\\n  title: `${path}/Loader`,\\\\n  component: LoaderComponent\\\\n}\\\\n\\\\nexport const Loader = () => (\\\\n  <ThemeWrapper>\\\\n    <Position my='3em' p='3em' type='relative' border={1}>\\\\n      <Typography>You can use \\\\\\\"center\\\\\\\" Prop to center the Loader</Typography>\\\\n      <Typography>\\\\n        You can use \\\\\\\"fadeBackground\\\\\\\" prop to fade the background of the\\\\n        enclosing <strong>Relative</strong> Parent.\\\\n      </Typography>\\\\n      <Box my='1em' p='1em' bgColor='grey.50'>\\\\n        <Typography>\\\\n          Pro Tip1: \\\\\\\"fadeBackground\\\\\\\" will work only if \\\\\\\"center\\\\\\\" prop is true.{' '}\\\\n        </Typography>\\\\n      </Box>\\\\n      <Box my='1em' p='1em' bgColor='grey.50'>\\\\n        <Typography>\\\\n          Pro Tip2: Loader component expects its parent component to be\\\\n          positioned as <strong>Relative</strong>\\\\n        </Typography>\\\\n      </Box>\\\\n\\\\n      <LoaderComponent\\\\n        center={boolean('center', false)}\\\\n        fadeBackground={boolean('fadeBackground', false)}\\\\n        speed={number('speed', 1, { min: 1, max: 5 }) as tLoaderSpeed}\\\\n      />\\\\n    </Position>\\\\n  </ThemeWrapper>\\\\n)\\\\n\\\";\\n// @ts-ignore\\nvar __ADDS_MAP__ = {};\\n// @ts-ignore\\nvar __MAIN_FILE_LOCATION__ = \\\"/Loader.stories.tsx\\\";\\n// @ts-ignore\\nvar __MODULE_DEPENDENCIES__ = [];\\n// @ts-ignore\\nvar __LOCAL_DEPENDENCIES__ = {};\\n// @ts-ignore\\nvar __IDS_TO_FRAMEWORKS__ = {};\\n        \\nimport React from 'react'\\n\\nimport { path } from '..'\\nimport ThemeWrapper from '../../../utilities/components/ThemeWrapper'\\n\\nimport LoaderComponent, { tLoaderSpeed } from '.'\\nimport Position from '../../molecules/Position'\\nimport Typography from '../Typography'\\nimport Box from '../Box'\\nimport { boolean, number } from '@storybook/addon-knobs'\\n\\nexport default {parameters: {\\\"storySource\\\":{\\\"source\\\":\\\"import React from 'react'\\\\n\\\\nimport { path } from '..'\\\\nimport ThemeWrapper from '../../../utilities/components/ThemeWrapper'\\\\n\\\\nimport LoaderComponent, { tLoaderSpeed } from '.'\\\\nimport Position from '../../molecules/Position'\\\\nimport Typography from '../Typography'\\\\nimport Box from '../Box'\\\\nimport { boolean, number } from '@storybook/addon-knobs'\\\\n\\\\nexport default {\\\\n  title: `${path}/Loader`,\\\\n  component: LoaderComponent\\\\n}\\\\n\\\\nexport const Loader = () => (\\\\n  <ThemeWrapper>\\\\n    <Position my='3em' p='3em' type='relative' border={1}>\\\\n      <Typography>You can use \\\\\\\"center\\\\\\\" Prop to center the Loader</Typography>\\\\n      <Typography>\\\\n        You can use \\\\\\\"fadeBackground\\\\\\\" prop to fade the background of the\\\\n        enclosing <strong>Relative</strong> Parent.\\\\n      </Typography>\\\\n      <Box my='1em' p='1em' bgColor='grey.50'>\\\\n        <Typography>\\\\n          Pro Tip1: \\\\\\\"fadeBackground\\\\\\\" will work only if \\\\\\\"center\\\\\\\" prop is true.{' '}\\\\n        </Typography>\\\\n      </Box>\\\\n      <Box my='1em' p='1em' bgColor='grey.50'>\\\\n        <Typography>\\\\n          Pro Tip2: Loader component expects its parent component to be\\\\n          positioned as <strong>Relative</strong>\\\\n        </Typography>\\\\n      </Box>\\\\n\\\\n      <LoaderComponent\\\\n        center={boolean('center', false)}\\\\n        fadeBackground={boolean('fadeBackground', false)}\\\\n        speed={number('speed', 1, { min: 1, max: 5 }) as tLoaderSpeed}\\\\n      />\\\\n    </Position>\\\\n  </ThemeWrapper>\\\\n)\\\\n\\\",\\\"locationsMap\\\":{}},},\\n  title: `${path}/Loader`,\\n  component: LoaderComponent\\n}\\n\\nexport const Loader = addSourceDecorator(() => (\\n  <ThemeWrapper>\\n    <Position my='3em' p='3em' type='relative' border={1}>\\n      <Typography>You can use \\\"center\\\" Prop to center the Loader</Typography>\\n      <Typography>\\n        You can use \\\"fadeBackground\\\" prop to fade the background of the\\n        enclosing <strong>Relative</strong> Parent.\\n      </Typography>\\n      <Box my='1em' p='1em' bgColor='grey.50'>\\n        <Typography>\\n          Pro Tip1: \\\"fadeBackground\\\" will work only if \\\"center\\\" prop is true.{' '}\\n        </Typography>\\n      </Box>\\n      <Box my='1em' p='1em' bgColor='grey.50'>\\n        <Typography>\\n          Pro Tip2: Loader component expects its parent component to be\\n          positioned as <strong>Relative</strong>\\n        </Typography>\\n      </Box>\\n\\n      <LoaderComponent\\n        center={boolean('center', false)}\\n        fadeBackground={boolean('fadeBackground', false)}\\n        speed={number('speed', 1, { min: 1, max: 5 }) as tLoaderSpeed}\\n      />\\n    </Position>\\n  </ThemeWrapper>\\n), {__STORY__, __ADDS_MAP__,__MAIN_FILE_LOCATION__,__MODULE_DEPENDENCIES__,__LOCAL_DEPENDENCIES__,__SOURCE_PREFIX__,__IDS_TO_FRAMEWORKS__});\"; // @ts-ignore\n\nvar __ADDS_MAP__ = {}; // @ts-ignore\n\nvar __MAIN_FILE_LOCATION__ = \"/Loader.stories.tsx\"; // @ts-ignore\n\nvar __MODULE_DEPENDENCIES__ = []; // @ts-ignore\n\nvar __LOCAL_DEPENDENCIES__ = {}; // @ts-ignore\n\nvar __IDS_TO_FRAMEWORKS__ = {};\n/* eslint-disable */\n// @ts-nocheck\n// @ts-ignore\n\nvar withSourceLoader = require('@storybook/source-loader/preview').withSource; // @ts-ignore\n\n\nvar addSourceDecorator = require(\"@storybook/source-loader/preview\").addSource; // @ts-ignore\n\n\nvar __SOURCE_PREFIX__ = \"/Users/farhanansari/Code/ui-library/src/components/atoms/Loader\"; // @ts-ignore\n\nvar __STORY__ = \"import React from 'react'\\n\\nimport { path } from '..'\\nimport ThemeWrapper from '../../../utilities/components/ThemeWrapper'\\n\\nimport LoaderComponent, { tLoaderSpeed } from '.'\\nimport Position from '../../molecules/Position'\\nimport Typography from '../Typography'\\nimport Box from '../Box'\\nimport { boolean, number } from '@storybook/addon-knobs'\\n\\nexport default {\\n  title: `${path}/Loader`,\\n  component: LoaderComponent\\n}\\n\\nexport const Loader = () => (\\n  <ThemeWrapper>\\n    <Position my='3em' p='3em' type='relative' border={1}>\\n      <Typography>You can use \\\"center\\\" Prop to center the Loader</Typography>\\n      <Typography>\\n        You can use \\\"fadeBackground\\\" prop to fade the background of the\\n        enclosing <strong>Relative</strong> Parent.\\n      </Typography>\\n      <Box my='1em' p='1em' bgColor='grey.50'>\\n        <Typography>\\n          Pro Tip1: \\\"fadeBackground\\\" will work only if \\\"center\\\" prop is true.{' '}\\n        </Typography>\\n      </Box>\\n      <Box my='1em' p='1em' bgColor='grey.50'>\\n        <Typography>\\n          Pro Tip2: Loader component expects its parent component to be\\n          positioned as <strong>Relative</strong>\\n        </Typography>\\n      </Box>\\n\\n      <LoaderComponent\\n        center={boolean('center', false)}\\n        fadeBackground={boolean('fadeBackground', false)}\\n        speed={number('speed', 1, { min: 1, max: 5 }) as tLoaderSpeed}\\n      />\\n    </Position>\\n  </ThemeWrapper>\\n)\\n\"; // @ts-ignore\n\nvar __ADDS_MAP__ = {}; // @ts-ignore\n\nvar __MAIN_FILE_LOCATION__ = \"/Loader.stories.tsx\"; // @ts-ignore\n\nvar __MODULE_DEPENDENCIES__ = []; // @ts-ignore\n\nvar __LOCAL_DEPENDENCIES__ = {}; // @ts-ignore\n\nvar __IDS_TO_FRAMEWORKS__ = {};\nimport React from 'react';\nimport { path } from '..';\nimport ThemeWrapper from '../../../utilities/components/ThemeWrapper';\nimport LoaderComponent from '.';\nimport Position from '../../molecules/Position';\nimport Typography from '../Typography';\nimport Box from '../Box';\nimport { boolean as _boolean, number } from '@storybook/addon-knobs';\nexport default {\n  parameters: (_parameters = {\n    \"storySource\": {\n      \"source\": \"\\n\\n// @ts-nocheck\\n// @ts-ignore\\nvar withSourceLoader = require('@storybook/source-loader/preview').withSource;\\n// @ts-ignore\\nvar addSourceDecorator = require(\\\"@storybook/source-loader/preview\\\").addSource;\\n// @ts-ignore\\nvar __SOURCE_PREFIX__ = \\\"/Users/farhanansari/Code/ui-library/src/components/atoms/Loader\\\";\\n// @ts-ignore\\nvar __STORY__ = \\\"\\\\n\\\\n// @ts-nocheck\\\\n// @ts-ignore\\\\nvar withSourceLoader = require('@storybook/source-loader/preview').withSource;\\\\n// @ts-ignore\\\\nvar addSourceDecorator = require(\\\\\\\"@storybook/source-loader/preview\\\\\\\").addSource;\\\\n// @ts-ignore\\\\nvar __SOURCE_PREFIX__ = \\\\\\\"/Users/farhanansari/Code/ui-library/src/components/atoms/Loader\\\\\\\";\\\\n// @ts-ignore\\\\nvar __STORY__ = \\\\\\\"import React from 'react'\\\\\\\\n\\\\\\\\nimport { path } from '..'\\\\\\\\nimport ThemeWrapper from '../../../utilities/components/ThemeWrapper'\\\\\\\\n\\\\\\\\nimport LoaderComponent, { tLoaderSpeed } from '.'\\\\\\\\nimport Position from '../../molecules/Position'\\\\\\\\nimport Typography from '../Typography'\\\\\\\\nimport Box from '../Box'\\\\\\\\nimport { boolean, number } from '@storybook/addon-knobs'\\\\\\\\n\\\\\\\\nexport default {\\\\\\\\n  title: `${path}/Loader`,\\\\\\\\n  component: LoaderComponent\\\\\\\\n}\\\\\\\\n\\\\\\\\nexport const Loader = () => (\\\\\\\\n  <ThemeWrapper>\\\\\\\\n    <Position my='3em' p='3em' type='relative' border={1}>\\\\\\\\n      <Typography>You can use \\\\\\\\\\\\\\\"center\\\\\\\\\\\\\\\" Prop to center the Loader</Typography>\\\\\\\\n      <Typography>\\\\\\\\n        You can use \\\\\\\\\\\\\\\"fadeBackground\\\\\\\\\\\\\\\" prop to fade the background of the\\\\\\\\n        enclosing <strong>Relative</strong> Parent.\\\\\\\\n      </Typography>\\\\\\\\n      <Box my='1em' p='1em' bgColor='grey.50'>\\\\\\\\n        <Typography>\\\\\\\\n          Pro Tip1: \\\\\\\\\\\\\\\"fadeBackground\\\\\\\\\\\\\\\" will work only if \\\\\\\\\\\\\\\"center\\\\\\\\\\\\\\\" prop is true.{' '}\\\\\\\\n        </Typography>\\\\\\\\n      </Box>\\\\\\\\n      <Box my='1em' p='1em' bgColor='grey.50'>\\\\\\\\n        <Typography>\\\\\\\\n          Pro Tip2: Loader component expects its parent component to be\\\\\\\\n          positioned as <strong>Relative</strong>\\\\\\\\n        </Typography>\\\\\\\\n      </Box>\\\\\\\\n\\\\\\\\n      <LoaderComponent\\\\\\\\n        center={boolean('center', false)}\\\\\\\\n        fadeBackground={boolean('fadeBackground', false)}\\\\\\\\n        speed={number('speed', 1, { min: 1, max: 5 }) as tLoaderSpeed}\\\\\\\\n      />\\\\\\\\n    </Position>\\\\\\\\n  </ThemeWrapper>\\\\\\\\n)\\\\\\\\n\\\\\\\";\\\\n// @ts-ignore\\\\nvar __ADDS_MAP__ = {};\\\\n// @ts-ignore\\\\nvar __MAIN_FILE_LOCATION__ = \\\\\\\"/Loader.stories.tsx\\\\\\\";\\\\n// @ts-ignore\\\\nvar __MODULE_DEPENDENCIES__ = [];\\\\n// @ts-ignore\\\\nvar __LOCAL_DEPENDENCIES__ = {};\\\\n// @ts-ignore\\\\nvar __IDS_TO_FRAMEWORKS__ = {};\\\\n        \\\\nimport React from 'react'\\\\n\\\\nimport { path } from '..'\\\\nimport ThemeWrapper from '../../../utilities/components/ThemeWrapper'\\\\n\\\\nimport LoaderComponent, { tLoaderSpeed } from '.'\\\\nimport Position from '../../molecules/Position'\\\\nimport Typography from '../Typography'\\\\nimport Box from '../Box'\\\\nimport { boolean, number } from '@storybook/addon-knobs'\\\\n\\\\nexport default {parameters: {\\\\\\\"storySource\\\\\\\":{\\\\\\\"source\\\\\\\":\\\\\\\"import React from 'react'\\\\\\\\n\\\\\\\\nimport { path } from '..'\\\\\\\\nimport ThemeWrapper from '../../../utilities/components/ThemeWrapper'\\\\\\\\n\\\\\\\\nimport LoaderComponent, { tLoaderSpeed } from '.'\\\\\\\\nimport Position from '../../molecules/Position'\\\\\\\\nimport Typography from '../Typography'\\\\\\\\nimport Box from '../Box'\\\\\\\\nimport { boolean, number } from '@storybook/addon-knobs'\\\\\\\\n\\\\\\\\nexport default {\\\\\\\\n  title: `${path}/Loader`,\\\\\\\\n  component: LoaderComponent\\\\\\\\n}\\\\\\\\n\\\\\\\\nexport const Loader = () => (\\\\\\\\n  <ThemeWrapper>\\\\\\\\n    <Position my='3em' p='3em' type='relative' border={1}>\\\\\\\\n      <Typography>You can use \\\\\\\\\\\\\\\"center\\\\\\\\\\\\\\\" Prop to center the Loader</Typography>\\\\\\\\n      <Typography>\\\\\\\\n        You can use \\\\\\\\\\\\\\\"fadeBackground\\\\\\\\\\\\\\\" prop to fade the background of the\\\\\\\\n        enclosing <strong>Relative</strong> Parent.\\\\\\\\n      </Typography>\\\\\\\\n      <Box my='1em' p='1em' bgColor='grey.50'>\\\\\\\\n        <Typography>\\\\\\\\n          Pro Tip1: \\\\\\\\\\\\\\\"fadeBackground\\\\\\\\\\\\\\\" will work only if \\\\\\\\\\\\\\\"center\\\\\\\\\\\\\\\" prop is true.{' '}\\\\\\\\n        </Typography>\\\\\\\\n      </Box>\\\\\\\\n      <Box my='1em' p='1em' bgColor='grey.50'>\\\\\\\\n        <Typography>\\\\\\\\n          Pro Tip2: Loader component expects its parent component to be\\\\\\\\n          positioned as <strong>Relative</strong>\\\\\\\\n        </Typography>\\\\\\\\n      </Box>\\\\\\\\n\\\\\\\\n      <LoaderComponent\\\\\\\\n        center={boolean('center', false)}\\\\\\\\n        fadeBackground={boolean('fadeBackground', false)}\\\\\\\\n        speed={number('speed', 1, { min: 1, max: 5 }) as tLoaderSpeed}\\\\\\\\n      />\\\\\\\\n    </Position>\\\\\\\\n  </ThemeWrapper>\\\\\\\\n)\\\\\\\\n\\\\\\\",\\\\\\\"locationsMap\\\\\\\":{}},},\\\\n  title: `${path}/Loader`,\\\\n  component: LoaderComponent\\\\n}\\\\n\\\\nexport const Loader = addSourceDecorator(() => (\\\\n  <ThemeWrapper>\\\\n    <Position my='3em' p='3em' type='relative' border={1}>\\\\n      <Typography>You can use \\\\\\\"center\\\\\\\" Prop to center the Loader</Typography>\\\\n      <Typography>\\\\n        You can use \\\\\\\"fadeBackground\\\\\\\" prop to fade the background of the\\\\n        enclosing <strong>Relative</strong> Parent.\\\\n      </Typography>\\\\n      <Box my='1em' p='1em' bgColor='grey.50'>\\\\n        <Typography>\\\\n          Pro Tip1: \\\\\\\"fadeBackground\\\\\\\" will work only if \\\\\\\"center\\\\\\\" prop is true.{' '}\\\\n        </Typography>\\\\n      </Box>\\\\n      <Box my='1em' p='1em' bgColor='grey.50'>\\\\n        <Typography>\\\\n          Pro Tip2: Loader component expects its parent component to be\\\\n          positioned as <strong>Relative</strong>\\\\n        </Typography>\\\\n      </Box>\\\\n\\\\n      <LoaderComponent\\\\n        center={boolean('center', false)}\\\\n        fadeBackground={boolean('fadeBackground', false)}\\\\n        speed={number('speed', 1, { min: 1, max: 5 }) as tLoaderSpeed}\\\\n      />\\\\n    </Position>\\\\n  </ThemeWrapper>\\\\n), {__STORY__, __ADDS_MAP__,__MAIN_FILE_LOCATION__,__MODULE_DEPENDENCIES__,__LOCAL_DEPENDENCIES__,__SOURCE_PREFIX__,__IDS_TO_FRAMEWORKS__});\\\";\\n// @ts-ignore\\nvar __ADDS_MAP__ = {};\\n// @ts-ignore\\nvar __MAIN_FILE_LOCATION__ = \\\"/Loader.stories.tsx\\\";\\n// @ts-ignore\\nvar __MODULE_DEPENDENCIES__ = [];\\n// @ts-ignore\\nvar __LOCAL_DEPENDENCIES__ = {};\\n// @ts-ignore\\nvar __IDS_TO_FRAMEWORKS__ = {};\\n        \\n\\n\\n// @ts-nocheck\\n// @ts-ignore\\nvar withSourceLoader = require('@storybook/source-loader/preview').withSource;\\n// @ts-ignore\\nvar addSourceDecorator = require(\\\"@storybook/source-loader/preview\\\").addSource;\\n// @ts-ignore\\nvar __SOURCE_PREFIX__ = \\\"/Users/farhanansari/Code/ui-library/src/components/atoms/Loader\\\";\\n// @ts-ignore\\nvar __STORY__ = \\\"import React from 'react'\\\\n\\\\nimport { path } from '..'\\\\nimport ThemeWrapper from '../../../utilities/components/ThemeWrapper'\\\\n\\\\nimport LoaderComponent, { tLoaderSpeed } from '.'\\\\nimport Position from '../../molecules/Position'\\\\nimport Typography from '../Typography'\\\\nimport Box from '../Box'\\\\nimport { boolean, number } from '@storybook/addon-knobs'\\\\n\\\\nexport default {\\\\n  title: `${path}/Loader`,\\\\n  component: LoaderComponent\\\\n}\\\\n\\\\nexport const Loader = () => (\\\\n  <ThemeWrapper>\\\\n    <Position my='3em' p='3em' type='relative' border={1}>\\\\n      <Typography>You can use \\\\\\\"center\\\\\\\" Prop to center the Loader</Typography>\\\\n      <Typography>\\\\n        You can use \\\\\\\"fadeBackground\\\\\\\" prop to fade the background of the\\\\n        enclosing <strong>Relative</strong> Parent.\\\\n      </Typography>\\\\n      <Box my='1em' p='1em' bgColor='grey.50'>\\\\n        <Typography>\\\\n          Pro Tip1: \\\\\\\"fadeBackground\\\\\\\" will work only if \\\\\\\"center\\\\\\\" prop is true.{' '}\\\\n        </Typography>\\\\n      </Box>\\\\n      <Box my='1em' p='1em' bgColor='grey.50'>\\\\n        <Typography>\\\\n          Pro Tip2: Loader component expects its parent component to be\\\\n          positioned as <strong>Relative</strong>\\\\n        </Typography>\\\\n      </Box>\\\\n\\\\n      <LoaderComponent\\\\n        center={boolean('center', false)}\\\\n        fadeBackground={boolean('fadeBackground', false)}\\\\n        speed={number('speed', 1, { min: 1, max: 5 }) as tLoaderSpeed}\\\\n      />\\\\n    </Position>\\\\n  </ThemeWrapper>\\\\n)\\\\n\\\";\\n// @ts-ignore\\nvar __ADDS_MAP__ = {};\\n// @ts-ignore\\nvar __MAIN_FILE_LOCATION__ = \\\"/Loader.stories.tsx\\\";\\n// @ts-ignore\\nvar __MODULE_DEPENDENCIES__ = [];\\n// @ts-ignore\\nvar __LOCAL_DEPENDENCIES__ = {};\\n// @ts-ignore\\nvar __IDS_TO_FRAMEWORKS__ = {};\\n        \\nimport React from 'react'\\n\\nimport { path } from '..'\\nimport ThemeWrapper from '../../../utilities/components/ThemeWrapper'\\n\\nimport LoaderComponent, { tLoaderSpeed } from '.'\\nimport Position from '../../molecules/Position'\\nimport Typography from '../Typography'\\nimport Box from '../Box'\\nimport { boolean, number } from '@storybook/addon-knobs'\\n\\nexport default {parameters: {\\\"storySource\\\":{\\\"source\\\":\\\"\\\\n\\\\n// @ts-nocheck\\\\n// @ts-ignore\\\\nvar withSourceLoader = require('@storybook/source-loader/preview').withSource;\\\\n// @ts-ignore\\\\nvar addSourceDecorator = require(\\\\\\\"@storybook/source-loader/preview\\\\\\\").addSource;\\\\n// @ts-ignore\\\\nvar __SOURCE_PREFIX__ = \\\\\\\"/Users/farhanansari/Code/ui-library/src/components/atoms/Loader\\\\\\\";\\\\n// @ts-ignore\\\\nvar __STORY__ = \\\\\\\"import React from 'react'\\\\\\\\n\\\\\\\\nimport { path } from '..'\\\\\\\\nimport ThemeWrapper from '../../../utilities/components/ThemeWrapper'\\\\\\\\n\\\\\\\\nimport LoaderComponent, { tLoaderSpeed } from '.'\\\\\\\\nimport Position from '../../molecules/Position'\\\\\\\\nimport Typography from '../Typography'\\\\\\\\nimport Box from '../Box'\\\\\\\\nimport { boolean, number } from '@storybook/addon-knobs'\\\\\\\\n\\\\\\\\nexport default {\\\\\\\\n  title: `${path}/Loader`,\\\\\\\\n  component: LoaderComponent\\\\\\\\n}\\\\\\\\n\\\\\\\\nexport const Loader = () => (\\\\\\\\n  <ThemeWrapper>\\\\\\\\n    <Position my='3em' p='3em' type='relative' border={1}>\\\\\\\\n      <Typography>You can use \\\\\\\\\\\\\\\"center\\\\\\\\\\\\\\\" Prop to center the Loader</Typography>\\\\\\\\n      <Typography>\\\\\\\\n        You can use \\\\\\\\\\\\\\\"fadeBackground\\\\\\\\\\\\\\\" prop to fade the background of the\\\\\\\\n        enclosing <strong>Relative</strong> Parent.\\\\\\\\n      </Typography>\\\\\\\\n      <Box my='1em' p='1em' bgColor='grey.50'>\\\\\\\\n        <Typography>\\\\\\\\n          Pro Tip1: \\\\\\\\\\\\\\\"fadeBackground\\\\\\\\\\\\\\\" will work only if \\\\\\\\\\\\\\\"center\\\\\\\\\\\\\\\" prop is true.{' '}\\\\\\\\n        </Typography>\\\\\\\\n      </Box>\\\\\\\\n      <Box my='1em' p='1em' bgColor='grey.50'>\\\\\\\\n        <Typography>\\\\\\\\n          Pro Tip2: Loader component expects its parent component to be\\\\\\\\n          positioned as <strong>Relative</strong>\\\\\\\\n        </Typography>\\\\\\\\n      </Box>\\\\\\\\n\\\\\\\\n      <LoaderComponent\\\\\\\\n        center={boolean('center', false)}\\\\\\\\n        fadeBackground={boolean('fadeBackground', false)}\\\\\\\\n        speed={number('speed', 1, { min: 1, max: 5 }) as tLoaderSpeed}\\\\\\\\n      />\\\\\\\\n    </Position>\\\\\\\\n  </ThemeWrapper>\\\\\\\\n)\\\\\\\\n\\\\\\\";\\\\n// @ts-ignore\\\\nvar __ADDS_MAP__ = {};\\\\n// @ts-ignore\\\\nvar __MAIN_FILE_LOCATION__ = \\\\\\\"/Loader.stories.tsx\\\\\\\";\\\\n// @ts-ignore\\\\nvar __MODULE_DEPENDENCIES__ = [];\\\\n// @ts-ignore\\\\nvar __LOCAL_DEPENDENCIES__ = {};\\\\n// @ts-ignore\\\\nvar __IDS_TO_FRAMEWORKS__ = {};\\\\n        \\\\nimport React from 'react'\\\\n\\\\nimport { path } from '..'\\\\nimport ThemeWrapper from '../../../utilities/components/ThemeWrapper'\\\\n\\\\nimport LoaderComponent, { tLoaderSpeed } from '.'\\\\nimport Position from '../../molecules/Position'\\\\nimport Typography from '../Typography'\\\\nimport Box from '../Box'\\\\nimport { boolean, number } from '@storybook/addon-knobs'\\\\n\\\\nexport default {parameters: {\\\\\\\"storySource\\\\\\\":{\\\\\\\"source\\\\\\\":\\\\\\\"import React from 'react'\\\\\\\\n\\\\\\\\nimport { path } from '..'\\\\\\\\nimport ThemeWrapper from '../../../utilities/components/ThemeWrapper'\\\\\\\\n\\\\\\\\nimport LoaderComponent, { tLoaderSpeed } from '.'\\\\\\\\nimport Position from '../../molecules/Position'\\\\\\\\nimport Typography from '../Typography'\\\\\\\\nimport Box from '../Box'\\\\\\\\nimport { boolean, number } from '@storybook/addon-knobs'\\\\\\\\n\\\\\\\\nexport default {\\\\\\\\n  title: `${path}/Loader`,\\\\\\\\n  component: LoaderComponent\\\\\\\\n}\\\\\\\\n\\\\\\\\nexport const Loader = () => (\\\\\\\\n  <ThemeWrapper>\\\\\\\\n    <Position my='3em' p='3em' type='relative' border={1}>\\\\\\\\n      <Typography>You can use \\\\\\\\\\\\\\\"center\\\\\\\\\\\\\\\" Prop to center the Loader</Typography>\\\\\\\\n      <Typography>\\\\\\\\n        You can use \\\\\\\\\\\\\\\"fadeBackground\\\\\\\\\\\\\\\" prop to fade the background of the\\\\\\\\n        enclosing <strong>Relative</strong> Parent.\\\\\\\\n      </Typography>\\\\\\\\n      <Box my='1em' p='1em' bgColor='grey.50'>\\\\\\\\n        <Typography>\\\\\\\\n          Pro Tip1: \\\\\\\\\\\\\\\"fadeBackground\\\\\\\\\\\\\\\" will work only if \\\\\\\\\\\\\\\"center\\\\\\\\\\\\\\\" prop is true.{' '}\\\\\\\\n        </Typography>\\\\\\\\n      </Box>\\\\\\\\n      <Box my='1em' p='1em' bgColor='grey.50'>\\\\\\\\n        <Typography>\\\\\\\\n          Pro Tip2: Loader component expects its parent component to be\\\\\\\\n          positioned as <strong>Relative</strong>\\\\\\\\n        </Typography>\\\\\\\\n      </Box>\\\\\\\\n\\\\\\\\n      <LoaderComponent\\\\\\\\n        center={boolean('center', false)}\\\\\\\\n        fadeBackground={boolean('fadeBackground', false)}\\\\\\\\n        speed={number('speed', 1, { min: 1, max: 5 }) as tLoaderSpeed}\\\\\\\\n      />\\\\\\\\n    </Position>\\\\\\\\n  </ThemeWrapper>\\\\\\\\n)\\\\\\\\n\\\\\\\",\\\\\\\"locationsMap\\\\\\\":{}},},\\\\n  title: `${path}/Loader`,\\\\n  component: LoaderComponent\\\\n}\\\\n\\\\nexport const Loader = addSourceDecorator(() => (\\\\n  <ThemeWrapper>\\\\n    <Position my='3em' p='3em' type='relative' border={1}>\\\\n      <Typography>You can use \\\\\\\"center\\\\\\\" Prop to center the Loader</Typography>\\\\n      <Typography>\\\\n        You can use \\\\\\\"fadeBackground\\\\\\\" prop to fade the background of the\\\\n        enclosing <strong>Relative</strong> Parent.\\\\n      </Typography>\\\\n      <Box my='1em' p='1em' bgColor='grey.50'>\\\\n        <Typography>\\\\n          Pro Tip1: \\\\\\\"fadeBackground\\\\\\\" will work only if \\\\\\\"center\\\\\\\" prop is true.{' '}\\\\n        </Typography>\\\\n      </Box>\\\\n      <Box my='1em' p='1em' bgColor='grey.50'>\\\\n        <Typography>\\\\n          Pro Tip2: Loader component expects its parent component to be\\\\n          positioned as <strong>Relative</strong>\\\\n        </Typography>\\\\n      </Box>\\\\n\\\\n      <LoaderComponent\\\\n        center={boolean('center', false)}\\\\n        fadeBackground={boolean('fadeBackground', false)}\\\\n        speed={number('speed', 1, { min: 1, max: 5 }) as tLoaderSpeed}\\\\n      />\\\\n    </Position>\\\\n  </ThemeWrapper>\\\\n), {__STORY__, __ADDS_MAP__,__MAIN_FILE_LOCATION__,__MODULE_DEPENDENCIES__,__LOCAL_DEPENDENCIES__,__SOURCE_PREFIX__,__IDS_TO_FRAMEWORKS__});\\\",\\\"locationsMap\\\":{}},\\\"storySource\\\":{\\\"source\\\":\\\"import React from 'react'\\\\n\\\\nimport { path } from '..'\\\\nimport ThemeWrapper from '../../../utilities/components/ThemeWrapper'\\\\n\\\\nimport LoaderComponent, { tLoaderSpeed } from '.'\\\\nimport Position from '../../molecules/Position'\\\\nimport Typography from '../Typography'\\\\nimport Box from '../Box'\\\\nimport { boolean, number } from '@storybook/addon-knobs'\\\\n\\\\nexport default {\\\\n  title: `${path}/Loader`,\\\\n  component: LoaderComponent\\\\n}\\\\n\\\\nexport const Loader = () => (\\\\n  <ThemeWrapper>\\\\n    <Position my='3em' p='3em' type='relative' border={1}>\\\\n      <Typography>You can use \\\\\\\"center\\\\\\\" Prop to center the Loader</Typography>\\\\n      <Typography>\\\\n        You can use \\\\\\\"fadeBackground\\\\\\\" prop to fade the background of the\\\\n        enclosing <strong>Relative</strong> Parent.\\\\n      </Typography>\\\\n      <Box my='1em' p='1em' bgColor='grey.50'>\\\\n        <Typography>\\\\n          Pro Tip1: \\\\\\\"fadeBackground\\\\\\\" will work only if \\\\\\\"center\\\\\\\" prop is true.{' '}\\\\n        </Typography>\\\\n      </Box>\\\\n      <Box my='1em' p='1em' bgColor='grey.50'>\\\\n        <Typography>\\\\n          Pro Tip2: Loader component expects its parent component to be\\\\n          positioned as <strong>Relative</strong>\\\\n        </Typography>\\\\n      </Box>\\\\n\\\\n      <LoaderComponent\\\\n        center={boolean('center', false)}\\\\n        fadeBackground={boolean('fadeBackground', false)}\\\\n        speed={number('speed', 1, { min: 1, max: 5 }) as tLoaderSpeed}\\\\n      />\\\\n    </Position>\\\\n  </ThemeWrapper>\\\\n)\\\\n\\\",\\\"locationsMap\\\":{}},},\\n  title: `${path}/Loader`,\\n  component: LoaderComponent\\n}\\n\\nexport const Loader = addSourceDecorator(addSourceDecorator(() => (\\n  <ThemeWrapper>\\n    <Position my='3em' p='3em' type='relative' border={1}>\\n      <Typography>You can use \\\"center\\\" Prop to center the Loader</Typography>\\n      <Typography>\\n        You can use \\\"fadeBackground\\\" prop to fade the background of the\\n        enclosing <strong>Relative</strong> Parent.\\n      </Typography>\\n      <Box my='1em' p='1em' bgColor='grey.50'>\\n        <Typography>\\n          Pro Tip1: \\\"fadeBackground\\\" will work only if \\\"center\\\" prop is true.{' '}\\n        </Typography>\\n      </Box>\\n      <Box my='1em' p='1em' bgColor='grey.50'>\\n        <Typography>\\n          Pro Tip2: Loader component expects its parent component to be\\n          positioned as <strong>Relative</strong>\\n        </Typography>\\n      </Box>\\n\\n      <LoaderComponent\\n        center={boolean('center', false)}\\n        fadeBackground={boolean('fadeBackground', false)}\\n        speed={number('speed', 1, { min: 1, max: 5 }) as tLoaderSpeed}\\n      />\\n    </Position>\\n  </ThemeWrapper>\\n), {__STORY__, __ADDS_MAP__,__MAIN_FILE_LOCATION__,__MODULE_DEPENDENCIES__,__LOCAL_DEPENDENCIES__,__SOURCE_PREFIX__,__IDS_TO_FRAMEWORKS__}), {__STORY__, __ADDS_MAP__,__MAIN_FILE_LOCATION__,__MODULE_DEPENDENCIES__,__LOCAL_DEPENDENCIES__,__SOURCE_PREFIX__,__IDS_TO_FRAMEWORKS__});\",\n      \"locationsMap\": {}\n    }\n  }, _defineProperty(_parameters, \"storySource\", {\n    \"source\": \"\\n\\n// @ts-nocheck\\n// @ts-ignore\\nvar withSourceLoader = require('@storybook/source-loader/preview').withSource;\\n// @ts-ignore\\nvar addSourceDecorator = require(\\\"@storybook/source-loader/preview\\\").addSource;\\n// @ts-ignore\\nvar __SOURCE_PREFIX__ = \\\"/Users/farhanansari/Code/ui-library/src/components/atoms/Loader\\\";\\n// @ts-ignore\\nvar __STORY__ = \\\"import React from 'react'\\\\n\\\\nimport { path } from '..'\\\\nimport ThemeWrapper from '../../../utilities/components/ThemeWrapper'\\\\n\\\\nimport LoaderComponent, { tLoaderSpeed } from '.'\\\\nimport Position from '../../molecules/Position'\\\\nimport Typography from '../Typography'\\\\nimport Box from '../Box'\\\\nimport { boolean, number } from '@storybook/addon-knobs'\\\\n\\\\nexport default {\\\\n  title: `${path}/Loader`,\\\\n  component: LoaderComponent\\\\n}\\\\n\\\\nexport const Loader = () => (\\\\n  <ThemeWrapper>\\\\n    <Position my='3em' p='3em' type='relative' border={1}>\\\\n      <Typography>You can use \\\\\\\"center\\\\\\\" Prop to center the Loader</Typography>\\\\n      <Typography>\\\\n        You can use \\\\\\\"fadeBackground\\\\\\\" prop to fade the background of the\\\\n        enclosing <strong>Relative</strong> Parent.\\\\n      </Typography>\\\\n      <Box my='1em' p='1em' bgColor='grey.50'>\\\\n        <Typography>\\\\n          Pro Tip1: \\\\\\\"fadeBackground\\\\\\\" will work only if \\\\\\\"center\\\\\\\" prop is true.{' '}\\\\n        </Typography>\\\\n      </Box>\\\\n      <Box my='1em' p='1em' bgColor='grey.50'>\\\\n        <Typography>\\\\n          Pro Tip2: Loader component expects its parent component to be\\\\n          positioned as <strong>Relative</strong>\\\\n        </Typography>\\\\n      </Box>\\\\n\\\\n      <LoaderComponent\\\\n        center={boolean('center', false)}\\\\n        fadeBackground={boolean('fadeBackground', false)}\\\\n        speed={number('speed', 1, { min: 1, max: 5 }) as tLoaderSpeed}\\\\n      />\\\\n    </Position>\\\\n  </ThemeWrapper>\\\\n)\\\\n\\\";\\n// @ts-ignore\\nvar __ADDS_MAP__ = {};\\n// @ts-ignore\\nvar __MAIN_FILE_LOCATION__ = \\\"/Loader.stories.tsx\\\";\\n// @ts-ignore\\nvar __MODULE_DEPENDENCIES__ = [];\\n// @ts-ignore\\nvar __LOCAL_DEPENDENCIES__ = {};\\n// @ts-ignore\\nvar __IDS_TO_FRAMEWORKS__ = {};\\n        \\nimport React from 'react'\\n\\nimport { path } from '..'\\nimport ThemeWrapper from '../../../utilities/components/ThemeWrapper'\\n\\nimport LoaderComponent, { tLoaderSpeed } from '.'\\nimport Position from '../../molecules/Position'\\nimport Typography from '../Typography'\\nimport Box from '../Box'\\nimport { boolean, number } from '@storybook/addon-knobs'\\n\\nexport default {parameters: {\\\"storySource\\\":{\\\"source\\\":\\\"import React from 'react'\\\\n\\\\nimport { path } from '..'\\\\nimport ThemeWrapper from '../../../utilities/components/ThemeWrapper'\\\\n\\\\nimport LoaderComponent, { tLoaderSpeed } from '.'\\\\nimport Position from '../../molecules/Position'\\\\nimport Typography from '../Typography'\\\\nimport Box from '../Box'\\\\nimport { boolean, number } from '@storybook/addon-knobs'\\\\n\\\\nexport default {\\\\n  title: `${path}/Loader`,\\\\n  component: LoaderComponent\\\\n}\\\\n\\\\nexport const Loader = () => (\\\\n  <ThemeWrapper>\\\\n    <Position my='3em' p='3em' type='relative' border={1}>\\\\n      <Typography>You can use \\\\\\\"center\\\\\\\" Prop to center the Loader</Typography>\\\\n      <Typography>\\\\n        You can use \\\\\\\"fadeBackground\\\\\\\" prop to fade the background of the\\\\n        enclosing <strong>Relative</strong> Parent.\\\\n      </Typography>\\\\n      <Box my='1em' p='1em' bgColor='grey.50'>\\\\n        <Typography>\\\\n          Pro Tip1: \\\\\\\"fadeBackground\\\\\\\" will work only if \\\\\\\"center\\\\\\\" prop is true.{' '}\\\\n        </Typography>\\\\n      </Box>\\\\n      <Box my='1em' p='1em' bgColor='grey.50'>\\\\n        <Typography>\\\\n          Pro Tip2: Loader component expects its parent component to be\\\\n          positioned as <strong>Relative</strong>\\\\n        </Typography>\\\\n      </Box>\\\\n\\\\n      <LoaderComponent\\\\n        center={boolean('center', false)}\\\\n        fadeBackground={boolean('fadeBackground', false)}\\\\n        speed={number('speed', 1, { min: 1, max: 5 }) as tLoaderSpeed}\\\\n      />\\\\n    </Position>\\\\n  </ThemeWrapper>\\\\n)\\\\n\\\",\\\"locationsMap\\\":{}},},\\n  title: `${path}/Loader`,\\n  component: LoaderComponent\\n}\\n\\nexport const Loader = addSourceDecorator(() => (\\n  <ThemeWrapper>\\n    <Position my='3em' p='3em' type='relative' border={1}>\\n      <Typography>You can use \\\"center\\\" Prop to center the Loader</Typography>\\n      <Typography>\\n        You can use \\\"fadeBackground\\\" prop to fade the background of the\\n        enclosing <strong>Relative</strong> Parent.\\n      </Typography>\\n      <Box my='1em' p='1em' bgColor='grey.50'>\\n        <Typography>\\n          Pro Tip1: \\\"fadeBackground\\\" will work only if \\\"center\\\" prop is true.{' '}\\n        </Typography>\\n      </Box>\\n      <Box my='1em' p='1em' bgColor='grey.50'>\\n        <Typography>\\n          Pro Tip2: Loader component expects its parent component to be\\n          positioned as <strong>Relative</strong>\\n        </Typography>\\n      </Box>\\n\\n      <LoaderComponent\\n        center={boolean('center', false)}\\n        fadeBackground={boolean('fadeBackground', false)}\\n        speed={number('speed', 1, { min: 1, max: 5 }) as tLoaderSpeed}\\n      />\\n    </Position>\\n  </ThemeWrapper>\\n), {__STORY__, __ADDS_MAP__,__MAIN_FILE_LOCATION__,__MODULE_DEPENDENCIES__,__LOCAL_DEPENDENCIES__,__SOURCE_PREFIX__,__IDS_TO_FRAMEWORKS__});\",\n    \"locationsMap\": {}\n  }), _defineProperty(_parameters, \"storySource\", {\n    \"source\": \"import React from 'react'\\n\\nimport { path } from '..'\\nimport ThemeWrapper from '../../../utilities/components/ThemeWrapper'\\n\\nimport LoaderComponent, { tLoaderSpeed } from '.'\\nimport Position from '../../molecules/Position'\\nimport Typography from '../Typography'\\nimport Box from '../Box'\\nimport { boolean, number } from '@storybook/addon-knobs'\\n\\nexport default {\\n  title: `${path}/Loader`,\\n  component: LoaderComponent\\n}\\n\\nexport const Loader = () => (\\n  <ThemeWrapper>\\n    <Position my='3em' p='3em' type='relative' border={1}>\\n      <Typography>You can use \\\"center\\\" Prop to center the Loader</Typography>\\n      <Typography>\\n        You can use \\\"fadeBackground\\\" prop to fade the background of the\\n        enclosing <strong>Relative</strong> Parent.\\n      </Typography>\\n      <Box my='1em' p='1em' bgColor='grey.50'>\\n        <Typography>\\n          Pro Tip1: \\\"fadeBackground\\\" will work only if \\\"center\\\" prop is true.{' '}\\n        </Typography>\\n      </Box>\\n      <Box my='1em' p='1em' bgColor='grey.50'>\\n        <Typography>\\n          Pro Tip2: Loader component expects its parent component to be\\n          positioned as <strong>Relative</strong>\\n        </Typography>\\n      </Box>\\n\\n      <LoaderComponent\\n        center={boolean('center', false)}\\n        fadeBackground={boolean('fadeBackground', false)}\\n        speed={number('speed', 1, { min: 1, max: 5 }) as tLoaderSpeed}\\n      />\\n    </Position>\\n  </ThemeWrapper>\\n)\\n\",\n    \"locationsMap\": {}\n  }), _parameters),\n  title: path + \"/Loader\",\n  component: LoaderComponent\n};\nexport var Loader = addSourceDecorator(addSourceDecorator(addSourceDecorator(function () {\n  return React.createElement(ThemeWrapper, null, React.createElement(Position, {\n    my: '3em',\n    p: '3em',\n    type: 'relative',\n    border: 1\n  }, React.createElement(Typography, null, \"You can use \\\"center\\\" Prop to center the Loader\"), React.createElement(Typography, null, \"You can use \\\"fadeBackground\\\" prop to fade the background of the enclosing \", React.createElement(\"strong\", null, \"Relative\"), \" Parent.\"), React.createElement(Box, {\n    my: '1em',\n    p: '1em',\n    bgColor: 'grey.50'\n  }, React.createElement(Typography, null, \"Pro Tip1: \\\"fadeBackground\\\" will work only if \\\"center\\\" prop is true.\", ' ')), React.createElement(Box, {\n    my: '1em',\n    p: '1em',\n    bgColor: 'grey.50'\n  }, React.createElement(Typography, null, \"Pro Tip2: Loader component expects its parent component to be positioned as \", React.createElement(\"strong\", null, \"Relative\"))), React.createElement(LoaderComponent, {\n    center: _boolean('center', false),\n    fadeBackground: _boolean('fadeBackground', false),\n    speed: number('speed', 1, {\n      min: 1,\n      max: 5\n    })\n  })));\n}, {\n  __STORY__: __STORY__,\n  __ADDS_MAP__: __ADDS_MAP__,\n  __MAIN_FILE_LOCATION__: __MAIN_FILE_LOCATION__,\n  __MODULE_DEPENDENCIES__: __MODULE_DEPENDENCIES__,\n  __LOCAL_DEPENDENCIES__: __LOCAL_DEPENDENCIES__,\n  __SOURCE_PREFIX__: __SOURCE_PREFIX__,\n  __IDS_TO_FRAMEWORKS__: __IDS_TO_FRAMEWORKS__\n}), {\n  __STORY__: __STORY__,\n  __ADDS_MAP__: __ADDS_MAP__,\n  __MAIN_FILE_LOCATION__: __MAIN_FILE_LOCATION__,\n  __MODULE_DEPENDENCIES__: __MODULE_DEPENDENCIES__,\n  __LOCAL_DEPENDENCIES__: __LOCAL_DEPENDENCIES__,\n  __SOURCE_PREFIX__: __SOURCE_PREFIX__,\n  __IDS_TO_FRAMEWORKS__: __IDS_TO_FRAMEWORKS__\n}), {\n  __STORY__: __STORY__,\n  __ADDS_MAP__: __ADDS_MAP__,\n  __MAIN_FILE_LOCATION__: __MAIN_FILE_LOCATION__,\n  __MODULE_DEPENDENCIES__: __MODULE_DEPENDENCIES__,\n  __LOCAL_DEPENDENCIES__: __LOCAL_DEPENDENCIES__,\n  __SOURCE_PREFIX__: __SOURCE_PREFIX__,\n  __IDS_TO_FRAMEWORKS__: __IDS_TO_FRAMEWORKS__\n});","map":{"version":3,"sources":["/Users/farhanansari/Code/ui-library/node_modules/react-docgen-typescript-loader/dist/index.js!/Users/farhanansari/Code/ui-library/node_modules/eslint-loader/dist/cjs.js??ref--6-0!/Users/farhanansari/Code/ui-library/node_modules/@storybook/source-loader/dist/server/index.js??ref--11!/Users/farhanansari/Code/ui-library/node_modules/@storybook/source-loader/dist/server/index.js!/Users/farhanansari/Code/ui-library/node_modules/@storybook/source-loader/dist/server/index.js!/Users/farhanansari/Code/ui-library/src/components/atoms/Loader/Loader.stories.tsx"],"names":[],"mappings":";;;;AACA;AACA;AACA;AACA,IAAI,gBAAgB,GAAG,OAAO,CAAC,kCAAD,CAAP,CAA4C,UAAnE,C,CACA;;;AACA,IAAI,kBAAkB,GAAG,OAAO,CAAC,kCAAD,CAAP,CAA4C,SAArE,C,CACA;;;AACA,IAAI,iBAAiB,GAAG,iEAAxB,C,CACA;;AACA,IAAI,SAAS,GAAG,wxiBAAhB,C,CACA;;AACA,IAAI,YAAY,GAAG,EAAnB,C,CACA;;AACA,IAAI,sBAAsB,GAAG,qBAA7B,C,CACA;;AACA,IAAI,uBAAuB,GAAG,EAA9B,C,CACA;;AACA,IAAI,sBAAsB,GAAG,EAA7B,C,CACA;;AACA,IAAI,qBAAqB,GAAG,EAA5B;AAGA;AACA;AACA;;AACA,IAAI,gBAAgB,GAAG,OAAO,CAAC,kCAAD,CAAP,CAA4C,UAAnE,C,CACA;;;AACA,IAAI,kBAAkB,GAAG,OAAO,CAAC,kCAAD,CAAP,CAA4C,SAArE,C,CACA;;;AACA,IAAI,iBAAiB,GAAG,iEAAxB,C,CACA;;AACA,IAAI,SAAS,GAAG,uwKAAhB,C,CACA;;AACA,IAAI,YAAY,GAAG,EAAnB,C,CACA;;AACA,IAAI,sBAAsB,GAAG,qBAA7B,C,CACA;;AACA,IAAI,uBAAuB,GAAG,EAA9B,C,CACA;;AACA,IAAI,sBAAsB,GAAG,EAA7B,C,CACA;;AACA,IAAI,qBAAqB,GAAG,EAA5B;AAGA;AACA;AACA;;AACA,IAAI,gBAAgB,GAAG,OAAO,CAAC,kCAAD,CAAP,CAA4C,UAAnE,C,CACA;;;AACA,IAAI,kBAAkB,GAAG,OAAO,CAAC,kCAAD,CAAP,CAA4C,SAArE,C,CACA;;;AACA,IAAI,iBAAiB,GAAG,iEAAxB,C,CACA;;AACA,IAAI,SAAS,GAAG,g8CAAhB,C,CACA;;AACA,IAAI,YAAY,GAAG,EAAnB,C,CACA;;AACA,IAAI,sBAAsB,GAAG,qBAA7B,C,CACA;;AACA,IAAI,uBAAuB,GAAG,EAA9B,C,CACA;;AACA,IAAI,sBAAsB,GAAG,EAA7B,C,CACA;;AACA,IAAI,qBAAqB,GAAG,EAA5B;AAEA,OAAO,KAAP,MAAkB,OAAlB;AAEA,SAAS,IAAT,QAAqB,IAArB;AACA,OAAO,YAAP,MAAyB,4CAAzB;AAEA,OAAO,eAAP,MAA8C,GAA9C;AACA,OAAO,QAAP,MAAqB,0BAArB;AACA,OAAO,UAAP,MAAuB,eAAvB;AACA,OAAO,GAAP,MAAgB,QAAhB;AACA,SAAS,OAAO,IAAP,QAAT,EAAkB,MAAlB,QAAgC,wBAAhC;AAEA,eAAe;AAAC,EAAA,UAAU;AAAG,mBAAc;AAAC,gBAAS,wxiBAAV;AAAmyiB,sBAAe;AAAlziB;AAAjB,iDAAq1iB;AAAC,cAAS,uwKAAV;AAAkxK,oBAAe;AAAjyK,GAAr1iB,+CAAwotB;AAAC,cAAS,g8CAAV;AAA28C,oBAAe;AAA19C,GAAxotB,eAAX;AACb,EAAA,KAAK,EAAK,IAAI,GAAA,SADD;AAEb,EAAA,SAAS,EAAE;AAFE,CAAf;AAKA,OAAO,IAAM,MAAM,GAAG,kBAAkB,CAAC,kBAAkB,CAAC,kBAAkB,CAAC,YAAA;AAAM,SACnF,KAAA,CAAA,aAAA,CAAC,YAAD,EAAa,IAAb,EACE,KAAA,CAAA,aAAA,CAAC,QAAD,EAAS;AAAC,IAAA,EAAE,EAAC,KAAJ;AAAU,IAAA,CAAC,EAAC,KAAZ;AAAkB,IAAA,IAAI,EAAC,UAAvB;AAAkC,IAAA,MAAM,EAAE;AAA1C,GAAT,EACE,KAAA,CAAA,aAAA,CAAC,UAAD,EAAW,IAAX,EAAW,kDAAX,CADF,EAEE,KAAA,CAAA,aAAA,CAAC,UAAD,EAAW,IAAX,E,8EAAA,EAEY,KAAA,CAAA,aAAA,CAAA,QAAA,EAAA,IAAA,EAAA,UAAA,CAFZ,EAGa,UAHb,CAFF,EAME,KAAA,CAAA,aAAA,CAAC,GAAD,EAAI;AAAC,IAAA,EAAE,EAAC,KAAJ;AAAU,IAAA,CAAC,EAAC,KAAZ;AAAkB,IAAA,OAAO,EAAC;AAA1B,GAAJ,EACE,KAAA,CAAA,aAAA,CAAC,UAAD,EAAW,IAAX,E,yEAAA,EACsE,GADtE,CADF,CANF,EAWE,KAAA,CAAA,aAAA,CAAC,GAAD,EAAI;AAAC,IAAA,EAAE,EAAC,KAAJ;AAAU,IAAA,CAAC,EAAC,KAAZ;AAAkB,IAAA,OAAO,EAAC;AAA1B,GAAJ,EACE,KAAA,CAAA,aAAA,CAAC,UAAD,EAAW,IAAX,E,8EAAA,EAEgB,KAAA,CAAA,aAAA,CAAA,QAAA,EAAA,IAAA,EAAA,UAAA,CAFhB,CADF,CAXF,EAkBE,KAAA,CAAA,aAAA,CAAC,eAAD,EAAgB;AACd,IAAA,MAAM,EAAE,QAAO,CAAC,QAAD,EAAW,KAAX,CADD;AAEd,IAAA,cAAc,EAAE,QAAO,CAAC,gBAAD,EAAmB,KAAnB,CAFT;AAGd,IAAA,KAAK,EAAE,MAAM,CAAC,OAAD,EAAU,CAAV,EAAa;AAAE,MAAA,GAAG,EAAE,CAAP;AAAU,MAAA,GAAG,EAvBsC;AAuBnD,KAAb;AAHC,GAAhB,CAlBF,CADF,CADmF;AA2BpF,CA3B6E,EA2B3E;AAAC,EAAA,SAAS,EAAA,SAAV;AAAY,EAAA,YAAY,EAAA,YAAxB;AAAyB,EAAA,sBAAsB,EAAA,sBAA/C;AAAgD,EAAA,uBAAuB,EAAA,uBAAvE;AAAwE,EAAA,sBAAsB,EAAA,sBAA9F;AAA+F,EAAA,iBAAiB,EAAA,iBAAhH;AAAiH,EAAA,qBAAqB,EAAA;AAAtI,CA3B2E,CAAnB,EA2BkF;AAAC,EAAA,SAAS,EAAA,SAAV;AAAY,EAAA,YAAY,EAAA,YAAxB;AAAyB,EAAA,sBAAsB,EAAA,sBAA/C;AAAgD,EAAA,uBAAuB,EAAA,uBAAvE;AAAwE,EAAA,sBAAsB,EAAA,sBAA9F;AAA+F,EAAA,iBAAiB,EAAA,iBAAhH;AAAiH,EAAA,qBAAqB,EAAA;AAAtI,CA3BlF,CAAnB,EA2B+O;AAAC,EAAA,SAAS,EAAA,SAAV;AAAY,EAAA,YAAY,EAAA,YAAxB;AAAyB,EAAA,sBAAsB,EAAA,sBAA/C;AAAgD,EAAA,uBAAuB,EAAA,uBAAvE;AAAwE,EAAA,sBAAsB,EAAA,sBAA9F;AAA+F,EAAA,iBAAiB,EAAA,iBAAhH;AAAiH,EAAA,qBAAqB,EAAA;AAAtI,CA3B/O,CAAjC","sourcesContent":["\n/* eslint-disable */\n// @ts-nocheck\n// @ts-ignore\nvar withSourceLoader = require('@storybook/source-loader/preview').withSource;\n// @ts-ignore\nvar addSourceDecorator = require(\"@storybook/source-loader/preview\").addSource;\n// @ts-ignore\nvar __SOURCE_PREFIX__ = \"/Users/farhanansari/Code/ui-library/src/components/atoms/Loader\";\n// @ts-ignore\nvar __STORY__ = \"\\n\\n// @ts-nocheck\\n// @ts-ignore\\nvar withSourceLoader = require('@storybook/source-loader/preview').withSource;\\n// @ts-ignore\\nvar addSourceDecorator = require(\\\"@storybook/source-loader/preview\\\").addSource;\\n// @ts-ignore\\nvar __SOURCE_PREFIX__ = \\\"/Users/farhanansari/Code/ui-library/src/components/atoms/Loader\\\";\\n// @ts-ignore\\nvar __STORY__ = \\\"\\\\n\\\\n// @ts-nocheck\\\\n// @ts-ignore\\\\nvar withSourceLoader = require('@storybook/source-loader/preview').withSource;\\\\n// @ts-ignore\\\\nvar addSourceDecorator = require(\\\\\\\"@storybook/source-loader/preview\\\\\\\").addSource;\\\\n// @ts-ignore\\\\nvar __SOURCE_PREFIX__ = \\\\\\\"/Users/farhanansari/Code/ui-library/src/components/atoms/Loader\\\\\\\";\\\\n// @ts-ignore\\\\nvar __STORY__ = \\\\\\\"import React from 'react'\\\\\\\\n\\\\\\\\nimport { path } from '..'\\\\\\\\nimport ThemeWrapper from '../../../utilities/components/ThemeWrapper'\\\\\\\\n\\\\\\\\nimport LoaderComponent, { tLoaderSpeed } from '.'\\\\\\\\nimport Position from '../../molecules/Position'\\\\\\\\nimport Typography from '../Typography'\\\\\\\\nimport Box from '../Box'\\\\\\\\nimport { boolean, number } from '@storybook/addon-knobs'\\\\\\\\n\\\\\\\\nexport default {\\\\\\\\n  title: `${path}/Loader`,\\\\\\\\n  component: LoaderComponent\\\\\\\\n}\\\\\\\\n\\\\\\\\nexport const Loader = () => (\\\\\\\\n  <ThemeWrapper>\\\\\\\\n    <Position my='3em' p='3em' type='relative' border={1}>\\\\\\\\n      <Typography>You can use \\\\\\\\\\\\\\\"center\\\\\\\\\\\\\\\" Prop to center the Loader</Typography>\\\\\\\\n      <Typography>\\\\\\\\n        You can use \\\\\\\\\\\\\\\"fadeBackground\\\\\\\\\\\\\\\" prop to fade the background of the\\\\\\\\n        enclosing <strong>Relative</strong> Parent.\\\\\\\\n      </Typography>\\\\\\\\n      <Box my='1em' p='1em' bgColor='grey.50'>\\\\\\\\n        <Typography>\\\\\\\\n          Pro Tip1: \\\\\\\\\\\\\\\"fadeBackground\\\\\\\\\\\\\\\" will work only if \\\\\\\\\\\\\\\"center\\\\\\\\\\\\\\\" prop is true.{' '}\\\\\\\\n        </Typography>\\\\\\\\n      </Box>\\\\\\\\n      <Box my='1em' p='1em' bgColor='grey.50'>\\\\\\\\n        <Typography>\\\\\\\\n          Pro Tip2: Loader component expects its parent component to be\\\\\\\\n          positioned as <strong>Relative</strong>\\\\\\\\n        </Typography>\\\\\\\\n      </Box>\\\\\\\\n\\\\\\\\n      <LoaderComponent\\\\\\\\n        center={boolean('center', false)}\\\\\\\\n        fadeBackground={boolean('fadeBackground', false)}\\\\\\\\n        speed={number('speed', 1, { min: 1, max: 5 }) as tLoaderSpeed}\\\\\\\\n      />\\\\\\\\n    </Position>\\\\\\\\n  </ThemeWrapper>\\\\\\\\n)\\\\\\\\n\\\\\\\";\\\\n// @ts-ignore\\\\nvar __ADDS_MAP__ = {};\\\\n// @ts-ignore\\\\nvar __MAIN_FILE_LOCATION__ = \\\\\\\"/Loader.stories.tsx\\\\\\\";\\\\n// @ts-ignore\\\\nvar __MODULE_DEPENDENCIES__ = [];\\\\n// @ts-ignore\\\\nvar __LOCAL_DEPENDENCIES__ = {};\\\\n// @ts-ignore\\\\nvar __IDS_TO_FRAMEWORKS__ = {};\\\\n        \\\\nimport React from 'react'\\\\n\\\\nimport { path } from '..'\\\\nimport ThemeWrapper from '../../../utilities/components/ThemeWrapper'\\\\n\\\\nimport LoaderComponent, { tLoaderSpeed } from '.'\\\\nimport Position from '../../molecules/Position'\\\\nimport Typography from '../Typography'\\\\nimport Box from '../Box'\\\\nimport { boolean, number } from '@storybook/addon-knobs'\\\\n\\\\nexport default {parameters: {\\\\\\\"storySource\\\\\\\":{\\\\\\\"source\\\\\\\":\\\\\\\"import React from 'react'\\\\\\\\n\\\\\\\\nimport { path } from '..'\\\\\\\\nimport ThemeWrapper from '../../../utilities/components/ThemeWrapper'\\\\\\\\n\\\\\\\\nimport LoaderComponent, { tLoaderSpeed } from '.'\\\\\\\\nimport Position from '../../molecules/Position'\\\\\\\\nimport Typography from '../Typography'\\\\\\\\nimport Box from '../Box'\\\\\\\\nimport { boolean, number } from '@storybook/addon-knobs'\\\\\\\\n\\\\\\\\nexport default {\\\\\\\\n  title: `${path}/Loader`,\\\\\\\\n  component: LoaderComponent\\\\\\\\n}\\\\\\\\n\\\\\\\\nexport const Loader = () => (\\\\\\\\n  <ThemeWrapper>\\\\\\\\n    <Position my='3em' p='3em' type='relative' border={1}>\\\\\\\\n      <Typography>You can use \\\\\\\\\\\\\\\"center\\\\\\\\\\\\\\\" Prop to center the Loader</Typography>\\\\\\\\n      <Typography>\\\\\\\\n        You can use \\\\\\\\\\\\\\\"fadeBackground\\\\\\\\\\\\\\\" prop to fade the background of the\\\\\\\\n        enclosing <strong>Relative</strong> Parent.\\\\\\\\n      </Typography>\\\\\\\\n      <Box my='1em' p='1em' bgColor='grey.50'>\\\\\\\\n        <Typography>\\\\\\\\n          Pro Tip1: \\\\\\\\\\\\\\\"fadeBackground\\\\\\\\\\\\\\\" will work only if \\\\\\\\\\\\\\\"center\\\\\\\\\\\\\\\" prop is true.{' '}\\\\\\\\n        </Typography>\\\\\\\\n      </Box>\\\\\\\\n      <Box my='1em' p='1em' bgColor='grey.50'>\\\\\\\\n        <Typography>\\\\\\\\n          Pro Tip2: Loader component expects its parent component to be\\\\\\\\n          positioned as <strong>Relative</strong>\\\\\\\\n        </Typography>\\\\\\\\n      </Box>\\\\\\\\n\\\\\\\\n      <LoaderComponent\\\\\\\\n        center={boolean('center', false)}\\\\\\\\n        fadeBackground={boolean('fadeBackground', false)}\\\\\\\\n        speed={number('speed', 1, { min: 1, max: 5 }) as tLoaderSpeed}\\\\\\\\n      />\\\\\\\\n    </Position>\\\\\\\\n  </ThemeWrapper>\\\\\\\\n)\\\\\\\\n\\\\\\\",\\\\\\\"locationsMap\\\\\\\":{}},},\\\\n  title: `${path}/Loader`,\\\\n  component: LoaderComponent\\\\n}\\\\n\\\\nexport const Loader = addSourceDecorator(() => (\\\\n  <ThemeWrapper>\\\\n    <Position my='3em' p='3em' type='relative' border={1}>\\\\n      <Typography>You can use \\\\\\\"center\\\\\\\" Prop to center the Loader</Typography>\\\\n      <Typography>\\\\n        You can use \\\\\\\"fadeBackground\\\\\\\" prop to fade the background of the\\\\n        enclosing <strong>Relative</strong> Parent.\\\\n      </Typography>\\\\n      <Box my='1em' p='1em' bgColor='grey.50'>\\\\n        <Typography>\\\\n          Pro Tip1: \\\\\\\"fadeBackground\\\\\\\" will work only if \\\\\\\"center\\\\\\\" prop is true.{' '}\\\\n        </Typography>\\\\n      </Box>\\\\n      <Box my='1em' p='1em' bgColor='grey.50'>\\\\n        <Typography>\\\\n          Pro Tip2: Loader component expects its parent component to be\\\\n          positioned as <strong>Relative</strong>\\\\n        </Typography>\\\\n      </Box>\\\\n\\\\n      <LoaderComponent\\\\n        center={boolean('center', false)}\\\\n        fadeBackground={boolean('fadeBackground', false)}\\\\n        speed={number('speed', 1, { min: 1, max: 5 }) as tLoaderSpeed}\\\\n      />\\\\n    </Position>\\\\n  </ThemeWrapper>\\\\n), {__STORY__, __ADDS_MAP__,__MAIN_FILE_LOCATION__,__MODULE_DEPENDENCIES__,__LOCAL_DEPENDENCIES__,__SOURCE_PREFIX__,__IDS_TO_FRAMEWORKS__});\\\";\\n// @ts-ignore\\nvar __ADDS_MAP__ = {};\\n// @ts-ignore\\nvar __MAIN_FILE_LOCATION__ = \\\"/Loader.stories.tsx\\\";\\n// @ts-ignore\\nvar __MODULE_DEPENDENCIES__ = [];\\n// @ts-ignore\\nvar __LOCAL_DEPENDENCIES__ = {};\\n// @ts-ignore\\nvar __IDS_TO_FRAMEWORKS__ = {};\\n        \\n\\n\\n// @ts-nocheck\\n// @ts-ignore\\nvar withSourceLoader = require('@storybook/source-loader/preview').withSource;\\n// @ts-ignore\\nvar addSourceDecorator = require(\\\"@storybook/source-loader/preview\\\").addSource;\\n// @ts-ignore\\nvar __SOURCE_PREFIX__ = \\\"/Users/farhanansari/Code/ui-library/src/components/atoms/Loader\\\";\\n// @ts-ignore\\nvar __STORY__ = \\\"import React from 'react'\\\\n\\\\nimport { path } from '..'\\\\nimport ThemeWrapper from '../../../utilities/components/ThemeWrapper'\\\\n\\\\nimport LoaderComponent, { tLoaderSpeed } from '.'\\\\nimport Position from '../../molecules/Position'\\\\nimport Typography from '../Typography'\\\\nimport Box from '../Box'\\\\nimport { boolean, number } from '@storybook/addon-knobs'\\\\n\\\\nexport default {\\\\n  title: `${path}/Loader`,\\\\n  component: LoaderComponent\\\\n}\\\\n\\\\nexport const Loader = () => (\\\\n  <ThemeWrapper>\\\\n    <Position my='3em' p='3em' type='relative' border={1}>\\\\n      <Typography>You can use \\\\\\\"center\\\\\\\" Prop to center the Loader</Typography>\\\\n      <Typography>\\\\n        You can use \\\\\\\"fadeBackground\\\\\\\" prop to fade the background of the\\\\n        enclosing <strong>Relative</strong> Parent.\\\\n      </Typography>\\\\n      <Box my='1em' p='1em' bgColor='grey.50'>\\\\n        <Typography>\\\\n          Pro Tip1: \\\\\\\"fadeBackground\\\\\\\" will work only if \\\\\\\"center\\\\\\\" prop is true.{' '}\\\\n        </Typography>\\\\n      </Box>\\\\n      <Box my='1em' p='1em' bgColor='grey.50'>\\\\n        <Typography>\\\\n          Pro Tip2: Loader component expects its parent component to be\\\\n          positioned as <strong>Relative</strong>\\\\n        </Typography>\\\\n      </Box>\\\\n\\\\n      <LoaderComponent\\\\n        center={boolean('center', false)}\\\\n        fadeBackground={boolean('fadeBackground', false)}\\\\n        speed={number('speed', 1, { min: 1, max: 5 }) as tLoaderSpeed}\\\\n      />\\\\n    </Position>\\\\n  </ThemeWrapper>\\\\n)\\\\n\\\";\\n// @ts-ignore\\nvar __ADDS_MAP__ = {};\\n// @ts-ignore\\nvar __MAIN_FILE_LOCATION__ = \\\"/Loader.stories.tsx\\\";\\n// @ts-ignore\\nvar __MODULE_DEPENDENCIES__ = [];\\n// @ts-ignore\\nvar __LOCAL_DEPENDENCIES__ = {};\\n// @ts-ignore\\nvar __IDS_TO_FRAMEWORKS__ = {};\\n        \\nimport React from 'react'\\n\\nimport { path } from '..'\\nimport ThemeWrapper from '../../../utilities/components/ThemeWrapper'\\n\\nimport LoaderComponent, { tLoaderSpeed } from '.'\\nimport Position from '../../molecules/Position'\\nimport Typography from '../Typography'\\nimport Box from '../Box'\\nimport { boolean, number } from '@storybook/addon-knobs'\\n\\nexport default {parameters: {\\\"storySource\\\":{\\\"source\\\":\\\"\\\\n\\\\n// @ts-nocheck\\\\n// @ts-ignore\\\\nvar withSourceLoader = require('@storybook/source-loader/preview').withSource;\\\\n// @ts-ignore\\\\nvar addSourceDecorator = require(\\\\\\\"@storybook/source-loader/preview\\\\\\\").addSource;\\\\n// @ts-ignore\\\\nvar __SOURCE_PREFIX__ = \\\\\\\"/Users/farhanansari/Code/ui-library/src/components/atoms/Loader\\\\\\\";\\\\n// @ts-ignore\\\\nvar __STORY__ = \\\\\\\"import React from 'react'\\\\\\\\n\\\\\\\\nimport { path } from '..'\\\\\\\\nimport ThemeWrapper from '../../../utilities/components/ThemeWrapper'\\\\\\\\n\\\\\\\\nimport LoaderComponent, { tLoaderSpeed } from '.'\\\\\\\\nimport Position from '../../molecules/Position'\\\\\\\\nimport Typography from '../Typography'\\\\\\\\nimport Box from '../Box'\\\\\\\\nimport { boolean, number } from '@storybook/addon-knobs'\\\\\\\\n\\\\\\\\nexport default {\\\\\\\\n  title: `${path}/Loader`,\\\\\\\\n  component: LoaderComponent\\\\\\\\n}\\\\\\\\n\\\\\\\\nexport const Loader = () => (\\\\\\\\n  <ThemeWrapper>\\\\\\\\n    <Position my='3em' p='3em' type='relative' border={1}>\\\\\\\\n      <Typography>You can use \\\\\\\\\\\\\\\"center\\\\\\\\\\\\\\\" Prop to center the Loader</Typography>\\\\\\\\n      <Typography>\\\\\\\\n        You can use \\\\\\\\\\\\\\\"fadeBackground\\\\\\\\\\\\\\\" prop to fade the background of the\\\\\\\\n        enclosing <strong>Relative</strong> Parent.\\\\\\\\n      </Typography>\\\\\\\\n      <Box my='1em' p='1em' bgColor='grey.50'>\\\\\\\\n        <Typography>\\\\\\\\n          Pro Tip1: \\\\\\\\\\\\\\\"fadeBackground\\\\\\\\\\\\\\\" will work only if \\\\\\\\\\\\\\\"center\\\\\\\\\\\\\\\" prop is true.{' '}\\\\\\\\n        </Typography>\\\\\\\\n      </Box>\\\\\\\\n      <Box my='1em' p='1em' bgColor='grey.50'>\\\\\\\\n        <Typography>\\\\\\\\n          Pro Tip2: Loader component expects its parent component to be\\\\\\\\n          positioned as <strong>Relative</strong>\\\\\\\\n        </Typography>\\\\\\\\n      </Box>\\\\\\\\n\\\\\\\\n      <LoaderComponent\\\\\\\\n        center={boolean('center', false)}\\\\\\\\n        fadeBackground={boolean('fadeBackground', false)}\\\\\\\\n        speed={number('speed', 1, { min: 1, max: 5 }) as tLoaderSpeed}\\\\\\\\n      />\\\\\\\\n    </Position>\\\\\\\\n  </ThemeWrapper>\\\\\\\\n)\\\\\\\\n\\\\\\\";\\\\n// @ts-ignore\\\\nvar __ADDS_MAP__ = {};\\\\n// @ts-ignore\\\\nvar __MAIN_FILE_LOCATION__ = \\\\\\\"/Loader.stories.tsx\\\\\\\";\\\\n// @ts-ignore\\\\nvar __MODULE_DEPENDENCIES__ = [];\\\\n// @ts-ignore\\\\nvar __LOCAL_DEPENDENCIES__ = {};\\\\n// @ts-ignore\\\\nvar __IDS_TO_FRAMEWORKS__ = {};\\\\n        \\\\nimport React from 'react'\\\\n\\\\nimport { path } from '..'\\\\nimport ThemeWrapper from '../../../utilities/components/ThemeWrapper'\\\\n\\\\nimport LoaderComponent, { tLoaderSpeed } from '.'\\\\nimport Position from '../../molecules/Position'\\\\nimport Typography from '../Typography'\\\\nimport Box from '../Box'\\\\nimport { boolean, number } from '@storybook/addon-knobs'\\\\n\\\\nexport default {parameters: {\\\\\\\"storySource\\\\\\\":{\\\\\\\"source\\\\\\\":\\\\\\\"import React from 'react'\\\\\\\\n\\\\\\\\nimport { path } from '..'\\\\\\\\nimport ThemeWrapper from '../../../utilities/components/ThemeWrapper'\\\\\\\\n\\\\\\\\nimport LoaderComponent, { tLoaderSpeed } from '.'\\\\\\\\nimport Position from '../../molecules/Position'\\\\\\\\nimport Typography from '../Typography'\\\\\\\\nimport Box from '../Box'\\\\\\\\nimport { boolean, number } from '@storybook/addon-knobs'\\\\\\\\n\\\\\\\\nexport default {\\\\\\\\n  title: `${path}/Loader`,\\\\\\\\n  component: LoaderComponent\\\\\\\\n}\\\\\\\\n\\\\\\\\nexport const Loader = () => (\\\\\\\\n  <ThemeWrapper>\\\\\\\\n    <Position my='3em' p='3em' type='relative' border={1}>\\\\\\\\n      <Typography>You can use \\\\\\\\\\\\\\\"center\\\\\\\\\\\\\\\" Prop to center the Loader</Typography>\\\\\\\\n      <Typography>\\\\\\\\n        You can use \\\\\\\\\\\\\\\"fadeBackground\\\\\\\\\\\\\\\" prop to fade the background of the\\\\\\\\n        enclosing <strong>Relative</strong> Parent.\\\\\\\\n      </Typography>\\\\\\\\n      <Box my='1em' p='1em' bgColor='grey.50'>\\\\\\\\n        <Typography>\\\\\\\\n          Pro Tip1: \\\\\\\\\\\\\\\"fadeBackground\\\\\\\\\\\\\\\" will work only if \\\\\\\\\\\\\\\"center\\\\\\\\\\\\\\\" prop is true.{' '}\\\\\\\\n        </Typography>\\\\\\\\n      </Box>\\\\\\\\n      <Box my='1em' p='1em' bgColor='grey.50'>\\\\\\\\n        <Typography>\\\\\\\\n          Pro Tip2: Loader component expects its parent component to be\\\\\\\\n          positioned as <strong>Relative</strong>\\\\\\\\n        </Typography>\\\\\\\\n      </Box>\\\\\\\\n\\\\\\\\n      <LoaderComponent\\\\\\\\n        center={boolean('center', false)}\\\\\\\\n        fadeBackground={boolean('fadeBackground', false)}\\\\\\\\n        speed={number('speed', 1, { min: 1, max: 5 }) as tLoaderSpeed}\\\\\\\\n      />\\\\\\\\n    </Position>\\\\\\\\n  </ThemeWrapper>\\\\\\\\n)\\\\\\\\n\\\\\\\",\\\\\\\"locationsMap\\\\\\\":{}},},\\\\n  title: `${path}/Loader`,\\\\n  component: LoaderComponent\\\\n}\\\\n\\\\nexport const Loader = addSourceDecorator(() => (\\\\n  <ThemeWrapper>\\\\n    <Position my='3em' p='3em' type='relative' border={1}>\\\\n      <Typography>You can use \\\\\\\"center\\\\\\\" Prop to center the Loader</Typography>\\\\n      <Typography>\\\\n        You can use \\\\\\\"fadeBackground\\\\\\\" prop to fade the background of the\\\\n        enclosing <strong>Relative</strong> Parent.\\\\n      </Typography>\\\\n      <Box my='1em' p='1em' bgColor='grey.50'>\\\\n        <Typography>\\\\n          Pro Tip1: \\\\\\\"fadeBackground\\\\\\\" will work only if \\\\\\\"center\\\\\\\" prop is true.{' '}\\\\n        </Typography>\\\\n      </Box>\\\\n      <Box my='1em' p='1em' bgColor='grey.50'>\\\\n        <Typography>\\\\n          Pro Tip2: Loader component expects its parent component to be\\\\n          positioned as <strong>Relative</strong>\\\\n        </Typography>\\\\n      </Box>\\\\n\\\\n      <LoaderComponent\\\\n        center={boolean('center', false)}\\\\n        fadeBackground={boolean('fadeBackground', false)}\\\\n        speed={number('speed', 1, { min: 1, max: 5 }) as tLoaderSpeed}\\\\n      />\\\\n    </Position>\\\\n  </ThemeWrapper>\\\\n), {__STORY__, __ADDS_MAP__,__MAIN_FILE_LOCATION__,__MODULE_DEPENDENCIES__,__LOCAL_DEPENDENCIES__,__SOURCE_PREFIX__,__IDS_TO_FRAMEWORKS__});\\\",\\\"locationsMap\\\":{}},\\\"storySource\\\":{\\\"source\\\":\\\"import React from 'react'\\\\n\\\\nimport { path } from '..'\\\\nimport ThemeWrapper from '../../../utilities/components/ThemeWrapper'\\\\n\\\\nimport LoaderComponent, { tLoaderSpeed } from '.'\\\\nimport Position from '../../molecules/Position'\\\\nimport Typography from '../Typography'\\\\nimport Box from '../Box'\\\\nimport { boolean, number } from '@storybook/addon-knobs'\\\\n\\\\nexport default {\\\\n  title: `${path}/Loader`,\\\\n  component: LoaderComponent\\\\n}\\\\n\\\\nexport const Loader = () => (\\\\n  <ThemeWrapper>\\\\n    <Position my='3em' p='3em' type='relative' border={1}>\\\\n      <Typography>You can use \\\\\\\"center\\\\\\\" Prop to center the Loader</Typography>\\\\n      <Typography>\\\\n        You can use \\\\\\\"fadeBackground\\\\\\\" prop to fade the background of the\\\\n        enclosing <strong>Relative</strong> Parent.\\\\n      </Typography>\\\\n      <Box my='1em' p='1em' bgColor='grey.50'>\\\\n        <Typography>\\\\n          Pro Tip1: \\\\\\\"fadeBackground\\\\\\\" will work only if \\\\\\\"center\\\\\\\" prop is true.{' '}\\\\n        </Typography>\\\\n      </Box>\\\\n      <Box my='1em' p='1em' bgColor='grey.50'>\\\\n        <Typography>\\\\n          Pro Tip2: Loader component expects its parent component to be\\\\n          positioned as <strong>Relative</strong>\\\\n        </Typography>\\\\n      </Box>\\\\n\\\\n      <LoaderComponent\\\\n        center={boolean('center', false)}\\\\n        fadeBackground={boolean('fadeBackground', false)}\\\\n        speed={number('speed', 1, { min: 1, max: 5 }) as tLoaderSpeed}\\\\n      />\\\\n    </Position>\\\\n  </ThemeWrapper>\\\\n)\\\\n\\\",\\\"locationsMap\\\":{}},},\\n  title: `${path}/Loader`,\\n  component: LoaderComponent\\n}\\n\\nexport const Loader = addSourceDecorator(addSourceDecorator(() => (\\n  <ThemeWrapper>\\n    <Position my='3em' p='3em' type='relative' border={1}>\\n      <Typography>You can use \\\"center\\\" Prop to center the Loader</Typography>\\n      <Typography>\\n        You can use \\\"fadeBackground\\\" prop to fade the background of the\\n        enclosing <strong>Relative</strong> Parent.\\n      </Typography>\\n      <Box my='1em' p='1em' bgColor='grey.50'>\\n        <Typography>\\n          Pro Tip1: \\\"fadeBackground\\\" will work only if \\\"center\\\" prop is true.{' '}\\n        </Typography>\\n      </Box>\\n      <Box my='1em' p='1em' bgColor='grey.50'>\\n        <Typography>\\n          Pro Tip2: Loader component expects its parent component to be\\n          positioned as <strong>Relative</strong>\\n        </Typography>\\n      </Box>\\n\\n      <LoaderComponent\\n        center={boolean('center', false)}\\n        fadeBackground={boolean('fadeBackground', false)}\\n        speed={number('speed', 1, { min: 1, max: 5 }) as tLoaderSpeed}\\n      />\\n    </Position>\\n  </ThemeWrapper>\\n), {__STORY__, __ADDS_MAP__,__MAIN_FILE_LOCATION__,__MODULE_DEPENDENCIES__,__LOCAL_DEPENDENCIES__,__SOURCE_PREFIX__,__IDS_TO_FRAMEWORKS__}), {__STORY__, __ADDS_MAP__,__MAIN_FILE_LOCATION__,__MODULE_DEPENDENCIES__,__LOCAL_DEPENDENCIES__,__SOURCE_PREFIX__,__IDS_TO_FRAMEWORKS__});\";\n// @ts-ignore\nvar __ADDS_MAP__ = {};\n// @ts-ignore\nvar __MAIN_FILE_LOCATION__ = \"/Loader.stories.tsx\";\n// @ts-ignore\nvar __MODULE_DEPENDENCIES__ = [];\n// @ts-ignore\nvar __LOCAL_DEPENDENCIES__ = {};\n// @ts-ignore\nvar __IDS_TO_FRAMEWORKS__ = {};\n        \n\n/* eslint-disable */\n// @ts-nocheck\n// @ts-ignore\nvar withSourceLoader = require('@storybook/source-loader/preview').withSource;\n// @ts-ignore\nvar addSourceDecorator = require(\"@storybook/source-loader/preview\").addSource;\n// @ts-ignore\nvar __SOURCE_PREFIX__ = \"/Users/farhanansari/Code/ui-library/src/components/atoms/Loader\";\n// @ts-ignore\nvar __STORY__ = \"\\n\\n// @ts-nocheck\\n// @ts-ignore\\nvar withSourceLoader = require('@storybook/source-loader/preview').withSource;\\n// @ts-ignore\\nvar addSourceDecorator = require(\\\"@storybook/source-loader/preview\\\").addSource;\\n// @ts-ignore\\nvar __SOURCE_PREFIX__ = \\\"/Users/farhanansari/Code/ui-library/src/components/atoms/Loader\\\";\\n// @ts-ignore\\nvar __STORY__ = \\\"import React from 'react'\\\\n\\\\nimport { path } from '..'\\\\nimport ThemeWrapper from '../../../utilities/components/ThemeWrapper'\\\\n\\\\nimport LoaderComponent, { tLoaderSpeed } from '.'\\\\nimport Position from '../../molecules/Position'\\\\nimport Typography from '../Typography'\\\\nimport Box from '../Box'\\\\nimport { boolean, number } from '@storybook/addon-knobs'\\\\n\\\\nexport default {\\\\n  title: `${path}/Loader`,\\\\n  component: LoaderComponent\\\\n}\\\\n\\\\nexport const Loader = () => (\\\\n  <ThemeWrapper>\\\\n    <Position my='3em' p='3em' type='relative' border={1}>\\\\n      <Typography>You can use \\\\\\\"center\\\\\\\" Prop to center the Loader</Typography>\\\\n      <Typography>\\\\n        You can use \\\\\\\"fadeBackground\\\\\\\" prop to fade the background of the\\\\n        enclosing <strong>Relative</strong> Parent.\\\\n      </Typography>\\\\n      <Box my='1em' p='1em' bgColor='grey.50'>\\\\n        <Typography>\\\\n          Pro Tip1: \\\\\\\"fadeBackground\\\\\\\" will work only if \\\\\\\"center\\\\\\\" prop is true.{' '}\\\\n        </Typography>\\\\n      </Box>\\\\n      <Box my='1em' p='1em' bgColor='grey.50'>\\\\n        <Typography>\\\\n          Pro Tip2: Loader component expects its parent component to be\\\\n          positioned as <strong>Relative</strong>\\\\n        </Typography>\\\\n      </Box>\\\\n\\\\n      <LoaderComponent\\\\n        center={boolean('center', false)}\\\\n        fadeBackground={boolean('fadeBackground', false)}\\\\n        speed={number('speed', 1, { min: 1, max: 5 }) as tLoaderSpeed}\\\\n      />\\\\n    </Position>\\\\n  </ThemeWrapper>\\\\n)\\\\n\\\";\\n// @ts-ignore\\nvar __ADDS_MAP__ = {};\\n// @ts-ignore\\nvar __MAIN_FILE_LOCATION__ = \\\"/Loader.stories.tsx\\\";\\n// @ts-ignore\\nvar __MODULE_DEPENDENCIES__ = [];\\n// @ts-ignore\\nvar __LOCAL_DEPENDENCIES__ = {};\\n// @ts-ignore\\nvar __IDS_TO_FRAMEWORKS__ = {};\\n        \\nimport React from 'react'\\n\\nimport { path } from '..'\\nimport ThemeWrapper from '../../../utilities/components/ThemeWrapper'\\n\\nimport LoaderComponent, { tLoaderSpeed } from '.'\\nimport Position from '../../molecules/Position'\\nimport Typography from '../Typography'\\nimport Box from '../Box'\\nimport { boolean, number } from '@storybook/addon-knobs'\\n\\nexport default {parameters: {\\\"storySource\\\":{\\\"source\\\":\\\"import React from 'react'\\\\n\\\\nimport { path } from '..'\\\\nimport ThemeWrapper from '../../../utilities/components/ThemeWrapper'\\\\n\\\\nimport LoaderComponent, { tLoaderSpeed } from '.'\\\\nimport Position from '../../molecules/Position'\\\\nimport Typography from '../Typography'\\\\nimport Box from '../Box'\\\\nimport { boolean, number } from '@storybook/addon-knobs'\\\\n\\\\nexport default {\\\\n  title: `${path}/Loader`,\\\\n  component: LoaderComponent\\\\n}\\\\n\\\\nexport const Loader = () => (\\\\n  <ThemeWrapper>\\\\n    <Position my='3em' p='3em' type='relative' border={1}>\\\\n      <Typography>You can use \\\\\\\"center\\\\\\\" Prop to center the Loader</Typography>\\\\n      <Typography>\\\\n        You can use \\\\\\\"fadeBackground\\\\\\\" prop to fade the background of the\\\\n        enclosing <strong>Relative</strong> Parent.\\\\n      </Typography>\\\\n      <Box my='1em' p='1em' bgColor='grey.50'>\\\\n        <Typography>\\\\n          Pro Tip1: \\\\\\\"fadeBackground\\\\\\\" will work only if \\\\\\\"center\\\\\\\" prop is true.{' '}\\\\n        </Typography>\\\\n      </Box>\\\\n      <Box my='1em' p='1em' bgColor='grey.50'>\\\\n        <Typography>\\\\n          Pro Tip2: Loader component expects its parent component to be\\\\n          positioned as <strong>Relative</strong>\\\\n        </Typography>\\\\n      </Box>\\\\n\\\\n      <LoaderComponent\\\\n        center={boolean('center', false)}\\\\n        fadeBackground={boolean('fadeBackground', false)}\\\\n        speed={number('speed', 1, { min: 1, max: 5 }) as tLoaderSpeed}\\\\n      />\\\\n    </Position>\\\\n  </ThemeWrapper>\\\\n)\\\\n\\\",\\\"locationsMap\\\":{}},},\\n  title: `${path}/Loader`,\\n  component: LoaderComponent\\n}\\n\\nexport const Loader = addSourceDecorator(() => (\\n  <ThemeWrapper>\\n    <Position my='3em' p='3em' type='relative' border={1}>\\n      <Typography>You can use \\\"center\\\" Prop to center the Loader</Typography>\\n      <Typography>\\n        You can use \\\"fadeBackground\\\" prop to fade the background of the\\n        enclosing <strong>Relative</strong> Parent.\\n      </Typography>\\n      <Box my='1em' p='1em' bgColor='grey.50'>\\n        <Typography>\\n          Pro Tip1: \\\"fadeBackground\\\" will work only if \\\"center\\\" prop is true.{' '}\\n        </Typography>\\n      </Box>\\n      <Box my='1em' p='1em' bgColor='grey.50'>\\n        <Typography>\\n          Pro Tip2: Loader component expects its parent component to be\\n          positioned as <strong>Relative</strong>\\n        </Typography>\\n      </Box>\\n\\n      <LoaderComponent\\n        center={boolean('center', false)}\\n        fadeBackground={boolean('fadeBackground', false)}\\n        speed={number('speed', 1, { min: 1, max: 5 }) as tLoaderSpeed}\\n      />\\n    </Position>\\n  </ThemeWrapper>\\n), {__STORY__, __ADDS_MAP__,__MAIN_FILE_LOCATION__,__MODULE_DEPENDENCIES__,__LOCAL_DEPENDENCIES__,__SOURCE_PREFIX__,__IDS_TO_FRAMEWORKS__});\";\n// @ts-ignore\nvar __ADDS_MAP__ = {};\n// @ts-ignore\nvar __MAIN_FILE_LOCATION__ = \"/Loader.stories.tsx\";\n// @ts-ignore\nvar __MODULE_DEPENDENCIES__ = [];\n// @ts-ignore\nvar __LOCAL_DEPENDENCIES__ = {};\n// @ts-ignore\nvar __IDS_TO_FRAMEWORKS__ = {};\n        \n\n/* eslint-disable */\n// @ts-nocheck\n// @ts-ignore\nvar withSourceLoader = require('@storybook/source-loader/preview').withSource;\n// @ts-ignore\nvar addSourceDecorator = require(\"@storybook/source-loader/preview\").addSource;\n// @ts-ignore\nvar __SOURCE_PREFIX__ = \"/Users/farhanansari/Code/ui-library/src/components/atoms/Loader\";\n// @ts-ignore\nvar __STORY__ = \"import React from 'react'\\n\\nimport { path } from '..'\\nimport ThemeWrapper from '../../../utilities/components/ThemeWrapper'\\n\\nimport LoaderComponent, { tLoaderSpeed } from '.'\\nimport Position from '../../molecules/Position'\\nimport Typography from '../Typography'\\nimport Box from '../Box'\\nimport { boolean, number } from '@storybook/addon-knobs'\\n\\nexport default {\\n  title: `${path}/Loader`,\\n  component: LoaderComponent\\n}\\n\\nexport const Loader = () => (\\n  <ThemeWrapper>\\n    <Position my='3em' p='3em' type='relative' border={1}>\\n      <Typography>You can use \\\"center\\\" Prop to center the Loader</Typography>\\n      <Typography>\\n        You can use \\\"fadeBackground\\\" prop to fade the background of the\\n        enclosing <strong>Relative</strong> Parent.\\n      </Typography>\\n      <Box my='1em' p='1em' bgColor='grey.50'>\\n        <Typography>\\n          Pro Tip1: \\\"fadeBackground\\\" will work only if \\\"center\\\" prop is true.{' '}\\n        </Typography>\\n      </Box>\\n      <Box my='1em' p='1em' bgColor='grey.50'>\\n        <Typography>\\n          Pro Tip2: Loader component expects its parent component to be\\n          positioned as <strong>Relative</strong>\\n        </Typography>\\n      </Box>\\n\\n      <LoaderComponent\\n        center={boolean('center', false)}\\n        fadeBackground={boolean('fadeBackground', false)}\\n        speed={number('speed', 1, { min: 1, max: 5 }) as tLoaderSpeed}\\n      />\\n    </Position>\\n  </ThemeWrapper>\\n)\\n\";\n// @ts-ignore\nvar __ADDS_MAP__ = {};\n// @ts-ignore\nvar __MAIN_FILE_LOCATION__ = \"/Loader.stories.tsx\";\n// @ts-ignore\nvar __MODULE_DEPENDENCIES__ = [];\n// @ts-ignore\nvar __LOCAL_DEPENDENCIES__ = {};\n// @ts-ignore\nvar __IDS_TO_FRAMEWORKS__ = {};\n        \nimport React from 'react'\n\nimport { path } from '..'\nimport ThemeWrapper from '../../../utilities/components/ThemeWrapper'\n\nimport LoaderComponent, { tLoaderSpeed } from '.'\nimport Position from '../../molecules/Position'\nimport Typography from '../Typography'\nimport Box from '../Box'\nimport { boolean, number } from '@storybook/addon-knobs'\n\nexport default {parameters: {\"storySource\":{\"source\":\"\\n\\n// @ts-nocheck\\n// @ts-ignore\\nvar withSourceLoader = require('@storybook/source-loader/preview').withSource;\\n// @ts-ignore\\nvar addSourceDecorator = require(\\\"@storybook/source-loader/preview\\\").addSource;\\n// @ts-ignore\\nvar __SOURCE_PREFIX__ = \\\"/Users/farhanansari/Code/ui-library/src/components/atoms/Loader\\\";\\n// @ts-ignore\\nvar __STORY__ = \\\"\\\\n\\\\n// @ts-nocheck\\\\n// @ts-ignore\\\\nvar withSourceLoader = require('@storybook/source-loader/preview').withSource;\\\\n// @ts-ignore\\\\nvar addSourceDecorator = require(\\\\\\\"@storybook/source-loader/preview\\\\\\\").addSource;\\\\n// @ts-ignore\\\\nvar __SOURCE_PREFIX__ = \\\\\\\"/Users/farhanansari/Code/ui-library/src/components/atoms/Loader\\\\\\\";\\\\n// @ts-ignore\\\\nvar __STORY__ = \\\\\\\"import React from 'react'\\\\\\\\n\\\\\\\\nimport { path } from '..'\\\\\\\\nimport ThemeWrapper from '../../../utilities/components/ThemeWrapper'\\\\\\\\n\\\\\\\\nimport LoaderComponent, { tLoaderSpeed } from '.'\\\\\\\\nimport Position from '../../molecules/Position'\\\\\\\\nimport Typography from '../Typography'\\\\\\\\nimport Box from '../Box'\\\\\\\\nimport { boolean, number } from '@storybook/addon-knobs'\\\\\\\\n\\\\\\\\nexport default {\\\\\\\\n  title: `${path}/Loader`,\\\\\\\\n  component: LoaderComponent\\\\\\\\n}\\\\\\\\n\\\\\\\\nexport const Loader = () => (\\\\\\\\n  <ThemeWrapper>\\\\\\\\n    <Position my='3em' p='3em' type='relative' border={1}>\\\\\\\\n      <Typography>You can use \\\\\\\\\\\\\\\"center\\\\\\\\\\\\\\\" Prop to center the Loader</Typography>\\\\\\\\n      <Typography>\\\\\\\\n        You can use \\\\\\\\\\\\\\\"fadeBackground\\\\\\\\\\\\\\\" prop to fade the background of the\\\\\\\\n        enclosing <strong>Relative</strong> Parent.\\\\\\\\n      </Typography>\\\\\\\\n      <Box my='1em' p='1em' bgColor='grey.50'>\\\\\\\\n        <Typography>\\\\\\\\n          Pro Tip1: \\\\\\\\\\\\\\\"fadeBackground\\\\\\\\\\\\\\\" will work only if \\\\\\\\\\\\\\\"center\\\\\\\\\\\\\\\" prop is true.{' '}\\\\\\\\n        </Typography>\\\\\\\\n      </Box>\\\\\\\\n      <Box my='1em' p='1em' bgColor='grey.50'>\\\\\\\\n        <Typography>\\\\\\\\n          Pro Tip2: Loader component expects its parent component to be\\\\\\\\n          positioned as <strong>Relative</strong>\\\\\\\\n        </Typography>\\\\\\\\n      </Box>\\\\\\\\n\\\\\\\\n      <LoaderComponent\\\\\\\\n        center={boolean('center', false)}\\\\\\\\n        fadeBackground={boolean('fadeBackground', false)}\\\\\\\\n        speed={number('speed', 1, { min: 1, max: 5 }) as tLoaderSpeed}\\\\\\\\n      />\\\\\\\\n    </Position>\\\\\\\\n  </ThemeWrapper>\\\\\\\\n)\\\\\\\\n\\\\\\\";\\\\n// @ts-ignore\\\\nvar __ADDS_MAP__ = {};\\\\n// @ts-ignore\\\\nvar __MAIN_FILE_LOCATION__ = \\\\\\\"/Loader.stories.tsx\\\\\\\";\\\\n// @ts-ignore\\\\nvar __MODULE_DEPENDENCIES__ = [];\\\\n// @ts-ignore\\\\nvar __LOCAL_DEPENDENCIES__ = {};\\\\n// @ts-ignore\\\\nvar __IDS_TO_FRAMEWORKS__ = {};\\\\n        \\\\nimport React from 'react'\\\\n\\\\nimport { path } from '..'\\\\nimport ThemeWrapper from '../../../utilities/components/ThemeWrapper'\\\\n\\\\nimport LoaderComponent, { tLoaderSpeed } from '.'\\\\nimport Position from '../../molecules/Position'\\\\nimport Typography from '../Typography'\\\\nimport Box from '../Box'\\\\nimport { boolean, number } from '@storybook/addon-knobs'\\\\n\\\\nexport default {parameters: {\\\\\\\"storySource\\\\\\\":{\\\\\\\"source\\\\\\\":\\\\\\\"import React from 'react'\\\\\\\\n\\\\\\\\nimport { path } from '..'\\\\\\\\nimport ThemeWrapper from '../../../utilities/components/ThemeWrapper'\\\\\\\\n\\\\\\\\nimport LoaderComponent, { tLoaderSpeed } from '.'\\\\\\\\nimport Position from '../../molecules/Position'\\\\\\\\nimport Typography from '../Typography'\\\\\\\\nimport Box from '../Box'\\\\\\\\nimport { boolean, number } from '@storybook/addon-knobs'\\\\\\\\n\\\\\\\\nexport default {\\\\\\\\n  title: `${path}/Loader`,\\\\\\\\n  component: LoaderComponent\\\\\\\\n}\\\\\\\\n\\\\\\\\nexport const Loader = () => (\\\\\\\\n  <ThemeWrapper>\\\\\\\\n    <Position my='3em' p='3em' type='relative' border={1}>\\\\\\\\n      <Typography>You can use \\\\\\\\\\\\\\\"center\\\\\\\\\\\\\\\" Prop to center the Loader</Typography>\\\\\\\\n      <Typography>\\\\\\\\n        You can use \\\\\\\\\\\\\\\"fadeBackground\\\\\\\\\\\\\\\" prop to fade the background of the\\\\\\\\n        enclosing <strong>Relative</strong> Parent.\\\\\\\\n      </Typography>\\\\\\\\n      <Box my='1em' p='1em' bgColor='grey.50'>\\\\\\\\n        <Typography>\\\\\\\\n          Pro Tip1: \\\\\\\\\\\\\\\"fadeBackground\\\\\\\\\\\\\\\" will work only if \\\\\\\\\\\\\\\"center\\\\\\\\\\\\\\\" prop is true.{' '}\\\\\\\\n        </Typography>\\\\\\\\n      </Box>\\\\\\\\n      <Box my='1em' p='1em' bgColor='grey.50'>\\\\\\\\n        <Typography>\\\\\\\\n          Pro Tip2: Loader component expects its parent component to be\\\\\\\\n          positioned as <strong>Relative</strong>\\\\\\\\n        </Typography>\\\\\\\\n      </Box>\\\\\\\\n\\\\\\\\n      <LoaderComponent\\\\\\\\n        center={boolean('center', false)}\\\\\\\\n        fadeBackground={boolean('fadeBackground', false)}\\\\\\\\n        speed={number('speed', 1, { min: 1, max: 5 }) as tLoaderSpeed}\\\\\\\\n      />\\\\\\\\n    </Position>\\\\\\\\n  </ThemeWrapper>\\\\\\\\n)\\\\\\\\n\\\\\\\",\\\\\\\"locationsMap\\\\\\\":{}},},\\\\n  title: `${path}/Loader`,\\\\n  component: LoaderComponent\\\\n}\\\\n\\\\nexport const Loader = addSourceDecorator(() => (\\\\n  <ThemeWrapper>\\\\n    <Position my='3em' p='3em' type='relative' border={1}>\\\\n      <Typography>You can use \\\\\\\"center\\\\\\\" Prop to center the Loader</Typography>\\\\n      <Typography>\\\\n        You can use \\\\\\\"fadeBackground\\\\\\\" prop to fade the background of the\\\\n        enclosing <strong>Relative</strong> Parent.\\\\n      </Typography>\\\\n      <Box my='1em' p='1em' bgColor='grey.50'>\\\\n        <Typography>\\\\n          Pro Tip1: \\\\\\\"fadeBackground\\\\\\\" will work only if \\\\\\\"center\\\\\\\" prop is true.{' '}\\\\n        </Typography>\\\\n      </Box>\\\\n      <Box my='1em' p='1em' bgColor='grey.50'>\\\\n        <Typography>\\\\n          Pro Tip2: Loader component expects its parent component to be\\\\n          positioned as <strong>Relative</strong>\\\\n        </Typography>\\\\n      </Box>\\\\n\\\\n      <LoaderComponent\\\\n        center={boolean('center', false)}\\\\n        fadeBackground={boolean('fadeBackground', false)}\\\\n        speed={number('speed', 1, { min: 1, max: 5 }) as tLoaderSpeed}\\\\n      />\\\\n    </Position>\\\\n  </ThemeWrapper>\\\\n), {__STORY__, __ADDS_MAP__,__MAIN_FILE_LOCATION__,__MODULE_DEPENDENCIES__,__LOCAL_DEPENDENCIES__,__SOURCE_PREFIX__,__IDS_TO_FRAMEWORKS__});\\\";\\n// @ts-ignore\\nvar __ADDS_MAP__ = {};\\n// @ts-ignore\\nvar __MAIN_FILE_LOCATION__ = \\\"/Loader.stories.tsx\\\";\\n// @ts-ignore\\nvar __MODULE_DEPENDENCIES__ = [];\\n// @ts-ignore\\nvar __LOCAL_DEPENDENCIES__ = {};\\n// @ts-ignore\\nvar __IDS_TO_FRAMEWORKS__ = {};\\n        \\n\\n\\n// @ts-nocheck\\n// @ts-ignore\\nvar withSourceLoader = require('@storybook/source-loader/preview').withSource;\\n// @ts-ignore\\nvar addSourceDecorator = require(\\\"@storybook/source-loader/preview\\\").addSource;\\n// @ts-ignore\\nvar __SOURCE_PREFIX__ = \\\"/Users/farhanansari/Code/ui-library/src/components/atoms/Loader\\\";\\n// @ts-ignore\\nvar __STORY__ = \\\"import React from 'react'\\\\n\\\\nimport { path } from '..'\\\\nimport ThemeWrapper from '../../../utilities/components/ThemeWrapper'\\\\n\\\\nimport LoaderComponent, { tLoaderSpeed } from '.'\\\\nimport Position from '../../molecules/Position'\\\\nimport Typography from '../Typography'\\\\nimport Box from '../Box'\\\\nimport { boolean, number } from '@storybook/addon-knobs'\\\\n\\\\nexport default {\\\\n  title: `${path}/Loader`,\\\\n  component: LoaderComponent\\\\n}\\\\n\\\\nexport const Loader = () => (\\\\n  <ThemeWrapper>\\\\n    <Position my='3em' p='3em' type='relative' border={1}>\\\\n      <Typography>You can use \\\\\\\"center\\\\\\\" Prop to center the Loader</Typography>\\\\n      <Typography>\\\\n        You can use \\\\\\\"fadeBackground\\\\\\\" prop to fade the background of the\\\\n        enclosing <strong>Relative</strong> Parent.\\\\n      </Typography>\\\\n      <Box my='1em' p='1em' bgColor='grey.50'>\\\\n        <Typography>\\\\n          Pro Tip1: \\\\\\\"fadeBackground\\\\\\\" will work only if \\\\\\\"center\\\\\\\" prop is true.{' '}\\\\n        </Typography>\\\\n      </Box>\\\\n      <Box my='1em' p='1em' bgColor='grey.50'>\\\\n        <Typography>\\\\n          Pro Tip2: Loader component expects its parent component to be\\\\n          positioned as <strong>Relative</strong>\\\\n        </Typography>\\\\n      </Box>\\\\n\\\\n      <LoaderComponent\\\\n        center={boolean('center', false)}\\\\n        fadeBackground={boolean('fadeBackground', false)}\\\\n        speed={number('speed', 1, { min: 1, max: 5 }) as tLoaderSpeed}\\\\n      />\\\\n    </Position>\\\\n  </ThemeWrapper>\\\\n)\\\\n\\\";\\n// @ts-ignore\\nvar __ADDS_MAP__ = {};\\n// @ts-ignore\\nvar __MAIN_FILE_LOCATION__ = \\\"/Loader.stories.tsx\\\";\\n// @ts-ignore\\nvar __MODULE_DEPENDENCIES__ = [];\\n// @ts-ignore\\nvar __LOCAL_DEPENDENCIES__ = {};\\n// @ts-ignore\\nvar __IDS_TO_FRAMEWORKS__ = {};\\n        \\nimport React from 'react'\\n\\nimport { path } from '..'\\nimport ThemeWrapper from '../../../utilities/components/ThemeWrapper'\\n\\nimport LoaderComponent, { tLoaderSpeed } from '.'\\nimport Position from '../../molecules/Position'\\nimport Typography from '../Typography'\\nimport Box from '../Box'\\nimport { boolean, number } from '@storybook/addon-knobs'\\n\\nexport default {parameters: {\\\"storySource\\\":{\\\"source\\\":\\\"\\\\n\\\\n// @ts-nocheck\\\\n// @ts-ignore\\\\nvar withSourceLoader = require('@storybook/source-loader/preview').withSource;\\\\n// @ts-ignore\\\\nvar addSourceDecorator = require(\\\\\\\"@storybook/source-loader/preview\\\\\\\").addSource;\\\\n// @ts-ignore\\\\nvar __SOURCE_PREFIX__ = \\\\\\\"/Users/farhanansari/Code/ui-library/src/components/atoms/Loader\\\\\\\";\\\\n// @ts-ignore\\\\nvar __STORY__ = \\\\\\\"import React from 'react'\\\\\\\\n\\\\\\\\nimport { path } from '..'\\\\\\\\nimport ThemeWrapper from '../../../utilities/components/ThemeWrapper'\\\\\\\\n\\\\\\\\nimport LoaderComponent, { tLoaderSpeed } from '.'\\\\\\\\nimport Position from '../../molecules/Position'\\\\\\\\nimport Typography from '../Typography'\\\\\\\\nimport Box from '../Box'\\\\\\\\nimport { boolean, number } from '@storybook/addon-knobs'\\\\\\\\n\\\\\\\\nexport default {\\\\\\\\n  title: `${path}/Loader`,\\\\\\\\n  component: LoaderComponent\\\\\\\\n}\\\\\\\\n\\\\\\\\nexport const Loader = () => (\\\\\\\\n  <ThemeWrapper>\\\\\\\\n    <Position my='3em' p='3em' type='relative' border={1}>\\\\\\\\n      <Typography>You can use \\\\\\\\\\\\\\\"center\\\\\\\\\\\\\\\" Prop to center the Loader</Typography>\\\\\\\\n      <Typography>\\\\\\\\n        You can use \\\\\\\\\\\\\\\"fadeBackground\\\\\\\\\\\\\\\" prop to fade the background of the\\\\\\\\n        enclosing <strong>Relative</strong> Parent.\\\\\\\\n      </Typography>\\\\\\\\n      <Box my='1em' p='1em' bgColor='grey.50'>\\\\\\\\n        <Typography>\\\\\\\\n          Pro Tip1: \\\\\\\\\\\\\\\"fadeBackground\\\\\\\\\\\\\\\" will work only if \\\\\\\\\\\\\\\"center\\\\\\\\\\\\\\\" prop is true.{' '}\\\\\\\\n        </Typography>\\\\\\\\n      </Box>\\\\\\\\n      <Box my='1em' p='1em' bgColor='grey.50'>\\\\\\\\n        <Typography>\\\\\\\\n          Pro Tip2: Loader component expects its parent component to be\\\\\\\\n          positioned as <strong>Relative</strong>\\\\\\\\n        </Typography>\\\\\\\\n      </Box>\\\\\\\\n\\\\\\\\n      <LoaderComponent\\\\\\\\n        center={boolean('center', false)}\\\\\\\\n        fadeBackground={boolean('fadeBackground', false)}\\\\\\\\n        speed={number('speed', 1, { min: 1, max: 5 }) as tLoaderSpeed}\\\\\\\\n      />\\\\\\\\n    </Position>\\\\\\\\n  </ThemeWrapper>\\\\\\\\n)\\\\\\\\n\\\\\\\";\\\\n// @ts-ignore\\\\nvar __ADDS_MAP__ = {};\\\\n// @ts-ignore\\\\nvar __MAIN_FILE_LOCATION__ = \\\\\\\"/Loader.stories.tsx\\\\\\\";\\\\n// @ts-ignore\\\\nvar __MODULE_DEPENDENCIES__ = [];\\\\n// @ts-ignore\\\\nvar __LOCAL_DEPENDENCIES__ = {};\\\\n// @ts-ignore\\\\nvar __IDS_TO_FRAMEWORKS__ = {};\\\\n        \\\\nimport React from 'react'\\\\n\\\\nimport { path } from '..'\\\\nimport ThemeWrapper from '../../../utilities/components/ThemeWrapper'\\\\n\\\\nimport LoaderComponent, { tLoaderSpeed } from '.'\\\\nimport Position from '../../molecules/Position'\\\\nimport Typography from '../Typography'\\\\nimport Box from '../Box'\\\\nimport { boolean, number } from '@storybook/addon-knobs'\\\\n\\\\nexport default {parameters: {\\\\\\\"storySource\\\\\\\":{\\\\\\\"source\\\\\\\":\\\\\\\"import React from 'react'\\\\\\\\n\\\\\\\\nimport { path } from '..'\\\\\\\\nimport ThemeWrapper from '../../../utilities/components/ThemeWrapper'\\\\\\\\n\\\\\\\\nimport LoaderComponent, { tLoaderSpeed } from '.'\\\\\\\\nimport Position from '../../molecules/Position'\\\\\\\\nimport Typography from '../Typography'\\\\\\\\nimport Box from '../Box'\\\\\\\\nimport { boolean, number } from '@storybook/addon-knobs'\\\\\\\\n\\\\\\\\nexport default {\\\\\\\\n  title: `${path}/Loader`,\\\\\\\\n  component: LoaderComponent\\\\\\\\n}\\\\\\\\n\\\\\\\\nexport const Loader = () => (\\\\\\\\n  <ThemeWrapper>\\\\\\\\n    <Position my='3em' p='3em' type='relative' border={1}>\\\\\\\\n      <Typography>You can use \\\\\\\\\\\\\\\"center\\\\\\\\\\\\\\\" Prop to center the Loader</Typography>\\\\\\\\n      <Typography>\\\\\\\\n        You can use \\\\\\\\\\\\\\\"fadeBackground\\\\\\\\\\\\\\\" prop to fade the background of the\\\\\\\\n        enclosing <strong>Relative</strong> Parent.\\\\\\\\n      </Typography>\\\\\\\\n      <Box my='1em' p='1em' bgColor='grey.50'>\\\\\\\\n        <Typography>\\\\\\\\n          Pro Tip1: \\\\\\\\\\\\\\\"fadeBackground\\\\\\\\\\\\\\\" will work only if \\\\\\\\\\\\\\\"center\\\\\\\\\\\\\\\" prop is true.{' '}\\\\\\\\n        </Typography>\\\\\\\\n      </Box>\\\\\\\\n      <Box my='1em' p='1em' bgColor='grey.50'>\\\\\\\\n        <Typography>\\\\\\\\n          Pro Tip2: Loader component expects its parent component to be\\\\\\\\n          positioned as <strong>Relative</strong>\\\\\\\\n        </Typography>\\\\\\\\n      </Box>\\\\\\\\n\\\\\\\\n      <LoaderComponent\\\\\\\\n        center={boolean('center', false)}\\\\\\\\n        fadeBackground={boolean('fadeBackground', false)}\\\\\\\\n        speed={number('speed', 1, { min: 1, max: 5 }) as tLoaderSpeed}\\\\\\\\n      />\\\\\\\\n    </Position>\\\\\\\\n  </ThemeWrapper>\\\\\\\\n)\\\\\\\\n\\\\\\\",\\\\\\\"locationsMap\\\\\\\":{}},},\\\\n  title: `${path}/Loader`,\\\\n  component: LoaderComponent\\\\n}\\\\n\\\\nexport const Loader = addSourceDecorator(() => (\\\\n  <ThemeWrapper>\\\\n    <Position my='3em' p='3em' type='relative' border={1}>\\\\n      <Typography>You can use \\\\\\\"center\\\\\\\" Prop to center the Loader</Typography>\\\\n      <Typography>\\\\n        You can use \\\\\\\"fadeBackground\\\\\\\" prop to fade the background of the\\\\n        enclosing <strong>Relative</strong> Parent.\\\\n      </Typography>\\\\n      <Box my='1em' p='1em' bgColor='grey.50'>\\\\n        <Typography>\\\\n          Pro Tip1: \\\\\\\"fadeBackground\\\\\\\" will work only if \\\\\\\"center\\\\\\\" prop is true.{' '}\\\\n        </Typography>\\\\n      </Box>\\\\n      <Box my='1em' p='1em' bgColor='grey.50'>\\\\n        <Typography>\\\\n          Pro Tip2: Loader component expects its parent component to be\\\\n          positioned as <strong>Relative</strong>\\\\n        </Typography>\\\\n      </Box>\\\\n\\\\n      <LoaderComponent\\\\n        center={boolean('center', false)}\\\\n        fadeBackground={boolean('fadeBackground', false)}\\\\n        speed={number('speed', 1, { min: 1, max: 5 }) as tLoaderSpeed}\\\\n      />\\\\n    </Position>\\\\n  </ThemeWrapper>\\\\n), {__STORY__, __ADDS_MAP__,__MAIN_FILE_LOCATION__,__MODULE_DEPENDENCIES__,__LOCAL_DEPENDENCIES__,__SOURCE_PREFIX__,__IDS_TO_FRAMEWORKS__});\\\",\\\"locationsMap\\\":{}},\\\"storySource\\\":{\\\"source\\\":\\\"import React from 'react'\\\\n\\\\nimport { path } from '..'\\\\nimport ThemeWrapper from '../../../utilities/components/ThemeWrapper'\\\\n\\\\nimport LoaderComponent, { tLoaderSpeed } from '.'\\\\nimport Position from '../../molecules/Position'\\\\nimport Typography from '../Typography'\\\\nimport Box from '../Box'\\\\nimport { boolean, number } from '@storybook/addon-knobs'\\\\n\\\\nexport default {\\\\n  title: `${path}/Loader`,\\\\n  component: LoaderComponent\\\\n}\\\\n\\\\nexport const Loader = () => (\\\\n  <ThemeWrapper>\\\\n    <Position my='3em' p='3em' type='relative' border={1}>\\\\n      <Typography>You can use \\\\\\\"center\\\\\\\" Prop to center the Loader</Typography>\\\\n      <Typography>\\\\n        You can use \\\\\\\"fadeBackground\\\\\\\" prop to fade the background of the\\\\n        enclosing <strong>Relative</strong> Parent.\\\\n      </Typography>\\\\n      <Box my='1em' p='1em' bgColor='grey.50'>\\\\n        <Typography>\\\\n          Pro Tip1: \\\\\\\"fadeBackground\\\\\\\" will work only if \\\\\\\"center\\\\\\\" prop is true.{' '}\\\\n        </Typography>\\\\n      </Box>\\\\n      <Box my='1em' p='1em' bgColor='grey.50'>\\\\n        <Typography>\\\\n          Pro Tip2: Loader component expects its parent component to be\\\\n          positioned as <strong>Relative</strong>\\\\n        </Typography>\\\\n      </Box>\\\\n\\\\n      <LoaderComponent\\\\n        center={boolean('center', false)}\\\\n        fadeBackground={boolean('fadeBackground', false)}\\\\n        speed={number('speed', 1, { min: 1, max: 5 }) as tLoaderSpeed}\\\\n      />\\\\n    </Position>\\\\n  </ThemeWrapper>\\\\n)\\\\n\\\",\\\"locationsMap\\\":{}},},\\n  title: `${path}/Loader`,\\n  component: LoaderComponent\\n}\\n\\nexport const Loader = addSourceDecorator(addSourceDecorator(() => (\\n  <ThemeWrapper>\\n    <Position my='3em' p='3em' type='relative' border={1}>\\n      <Typography>You can use \\\"center\\\" Prop to center the Loader</Typography>\\n      <Typography>\\n        You can use \\\"fadeBackground\\\" prop to fade the background of the\\n        enclosing <strong>Relative</strong> Parent.\\n      </Typography>\\n      <Box my='1em' p='1em' bgColor='grey.50'>\\n        <Typography>\\n          Pro Tip1: \\\"fadeBackground\\\" will work only if \\\"center\\\" prop is true.{' '}\\n        </Typography>\\n      </Box>\\n      <Box my='1em' p='1em' bgColor='grey.50'>\\n        <Typography>\\n          Pro Tip2: Loader component expects its parent component to be\\n          positioned as <strong>Relative</strong>\\n        </Typography>\\n      </Box>\\n\\n      <LoaderComponent\\n        center={boolean('center', false)}\\n        fadeBackground={boolean('fadeBackground', false)}\\n        speed={number('speed', 1, { min: 1, max: 5 }) as tLoaderSpeed}\\n      />\\n    </Position>\\n  </ThemeWrapper>\\n), {__STORY__, __ADDS_MAP__,__MAIN_FILE_LOCATION__,__MODULE_DEPENDENCIES__,__LOCAL_DEPENDENCIES__,__SOURCE_PREFIX__,__IDS_TO_FRAMEWORKS__}), {__STORY__, __ADDS_MAP__,__MAIN_FILE_LOCATION__,__MODULE_DEPENDENCIES__,__LOCAL_DEPENDENCIES__,__SOURCE_PREFIX__,__IDS_TO_FRAMEWORKS__});\",\"locationsMap\":{}},\"storySource\":{\"source\":\"\\n\\n// @ts-nocheck\\n// @ts-ignore\\nvar withSourceLoader = require('@storybook/source-loader/preview').withSource;\\n// @ts-ignore\\nvar addSourceDecorator = require(\\\"@storybook/source-loader/preview\\\").addSource;\\n// @ts-ignore\\nvar __SOURCE_PREFIX__ = \\\"/Users/farhanansari/Code/ui-library/src/components/atoms/Loader\\\";\\n// @ts-ignore\\nvar __STORY__ = \\\"import React from 'react'\\\\n\\\\nimport { path } from '..'\\\\nimport ThemeWrapper from '../../../utilities/components/ThemeWrapper'\\\\n\\\\nimport LoaderComponent, { tLoaderSpeed } from '.'\\\\nimport Position from '../../molecules/Position'\\\\nimport Typography from '../Typography'\\\\nimport Box from '../Box'\\\\nimport { boolean, number } from '@storybook/addon-knobs'\\\\n\\\\nexport default {\\\\n  title: `${path}/Loader`,\\\\n  component: LoaderComponent\\\\n}\\\\n\\\\nexport const Loader = () => (\\\\n  <ThemeWrapper>\\\\n    <Position my='3em' p='3em' type='relative' border={1}>\\\\n      <Typography>You can use \\\\\\\"center\\\\\\\" Prop to center the Loader</Typography>\\\\n      <Typography>\\\\n        You can use \\\\\\\"fadeBackground\\\\\\\" prop to fade the background of the\\\\n        enclosing <strong>Relative</strong> Parent.\\\\n      </Typography>\\\\n      <Box my='1em' p='1em' bgColor='grey.50'>\\\\n        <Typography>\\\\n          Pro Tip1: \\\\\\\"fadeBackground\\\\\\\" will work only if \\\\\\\"center\\\\\\\" prop is true.{' '}\\\\n        </Typography>\\\\n      </Box>\\\\n      <Box my='1em' p='1em' bgColor='grey.50'>\\\\n        <Typography>\\\\n          Pro Tip2: Loader component expects its parent component to be\\\\n          positioned as <strong>Relative</strong>\\\\n        </Typography>\\\\n      </Box>\\\\n\\\\n      <LoaderComponent\\\\n        center={boolean('center', false)}\\\\n        fadeBackground={boolean('fadeBackground', false)}\\\\n        speed={number('speed', 1, { min: 1, max: 5 }) as tLoaderSpeed}\\\\n      />\\\\n    </Position>\\\\n  </ThemeWrapper>\\\\n)\\\\n\\\";\\n// @ts-ignore\\nvar __ADDS_MAP__ = {};\\n// @ts-ignore\\nvar __MAIN_FILE_LOCATION__ = \\\"/Loader.stories.tsx\\\";\\n// @ts-ignore\\nvar __MODULE_DEPENDENCIES__ = [];\\n// @ts-ignore\\nvar __LOCAL_DEPENDENCIES__ = {};\\n// @ts-ignore\\nvar __IDS_TO_FRAMEWORKS__ = {};\\n        \\nimport React from 'react'\\n\\nimport { path } from '..'\\nimport ThemeWrapper from '../../../utilities/components/ThemeWrapper'\\n\\nimport LoaderComponent, { tLoaderSpeed } from '.'\\nimport Position from '../../molecules/Position'\\nimport Typography from '../Typography'\\nimport Box from '../Box'\\nimport { boolean, number } from '@storybook/addon-knobs'\\n\\nexport default {parameters: {\\\"storySource\\\":{\\\"source\\\":\\\"import React from 'react'\\\\n\\\\nimport { path } from '..'\\\\nimport ThemeWrapper from '../../../utilities/components/ThemeWrapper'\\\\n\\\\nimport LoaderComponent, { tLoaderSpeed } from '.'\\\\nimport Position from '../../molecules/Position'\\\\nimport Typography from '../Typography'\\\\nimport Box from '../Box'\\\\nimport { boolean, number } from '@storybook/addon-knobs'\\\\n\\\\nexport default {\\\\n  title: `${path}/Loader`,\\\\n  component: LoaderComponent\\\\n}\\\\n\\\\nexport const Loader = () => (\\\\n  <ThemeWrapper>\\\\n    <Position my='3em' p='3em' type='relative' border={1}>\\\\n      <Typography>You can use \\\\\\\"center\\\\\\\" Prop to center the Loader</Typography>\\\\n      <Typography>\\\\n        You can use \\\\\\\"fadeBackground\\\\\\\" prop to fade the background of the\\\\n        enclosing <strong>Relative</strong> Parent.\\\\n      </Typography>\\\\n      <Box my='1em' p='1em' bgColor='grey.50'>\\\\n        <Typography>\\\\n          Pro Tip1: \\\\\\\"fadeBackground\\\\\\\" will work only if \\\\\\\"center\\\\\\\" prop is true.{' '}\\\\n        </Typography>\\\\n      </Box>\\\\n      <Box my='1em' p='1em' bgColor='grey.50'>\\\\n        <Typography>\\\\n          Pro Tip2: Loader component expects its parent component to be\\\\n          positioned as <strong>Relative</strong>\\\\n        </Typography>\\\\n      </Box>\\\\n\\\\n      <LoaderComponent\\\\n        center={boolean('center', false)}\\\\n        fadeBackground={boolean('fadeBackground', false)}\\\\n        speed={number('speed', 1, { min: 1, max: 5 }) as tLoaderSpeed}\\\\n      />\\\\n    </Position>\\\\n  </ThemeWrapper>\\\\n)\\\\n\\\",\\\"locationsMap\\\":{}},},\\n  title: `${path}/Loader`,\\n  component: LoaderComponent\\n}\\n\\nexport const Loader = addSourceDecorator(() => (\\n  <ThemeWrapper>\\n    <Position my='3em' p='3em' type='relative' border={1}>\\n      <Typography>You can use \\\"center\\\" Prop to center the Loader</Typography>\\n      <Typography>\\n        You can use \\\"fadeBackground\\\" prop to fade the background of the\\n        enclosing <strong>Relative</strong> Parent.\\n      </Typography>\\n      <Box my='1em' p='1em' bgColor='grey.50'>\\n        <Typography>\\n          Pro Tip1: \\\"fadeBackground\\\" will work only if \\\"center\\\" prop is true.{' '}\\n        </Typography>\\n      </Box>\\n      <Box my='1em' p='1em' bgColor='grey.50'>\\n        <Typography>\\n          Pro Tip2: Loader component expects its parent component to be\\n          positioned as <strong>Relative</strong>\\n        </Typography>\\n      </Box>\\n\\n      <LoaderComponent\\n        center={boolean('center', false)}\\n        fadeBackground={boolean('fadeBackground', false)}\\n        speed={number('speed', 1, { min: 1, max: 5 }) as tLoaderSpeed}\\n      />\\n    </Position>\\n  </ThemeWrapper>\\n), {__STORY__, __ADDS_MAP__,__MAIN_FILE_LOCATION__,__MODULE_DEPENDENCIES__,__LOCAL_DEPENDENCIES__,__SOURCE_PREFIX__,__IDS_TO_FRAMEWORKS__});\",\"locationsMap\":{}},\"storySource\":{\"source\":\"import React from 'react'\\n\\nimport { path } from '..'\\nimport ThemeWrapper from '../../../utilities/components/ThemeWrapper'\\n\\nimport LoaderComponent, { tLoaderSpeed } from '.'\\nimport Position from '../../molecules/Position'\\nimport Typography from '../Typography'\\nimport Box from '../Box'\\nimport { boolean, number } from '@storybook/addon-knobs'\\n\\nexport default {\\n  title: `${path}/Loader`,\\n  component: LoaderComponent\\n}\\n\\nexport const Loader = () => (\\n  <ThemeWrapper>\\n    <Position my='3em' p='3em' type='relative' border={1}>\\n      <Typography>You can use \\\"center\\\" Prop to center the Loader</Typography>\\n      <Typography>\\n        You can use \\\"fadeBackground\\\" prop to fade the background of the\\n        enclosing <strong>Relative</strong> Parent.\\n      </Typography>\\n      <Box my='1em' p='1em' bgColor='grey.50'>\\n        <Typography>\\n          Pro Tip1: \\\"fadeBackground\\\" will work only if \\\"center\\\" prop is true.{' '}\\n        </Typography>\\n      </Box>\\n      <Box my='1em' p='1em' bgColor='grey.50'>\\n        <Typography>\\n          Pro Tip2: Loader component expects its parent component to be\\n          positioned as <strong>Relative</strong>\\n        </Typography>\\n      </Box>\\n\\n      <LoaderComponent\\n        center={boolean('center', false)}\\n        fadeBackground={boolean('fadeBackground', false)}\\n        speed={number('speed', 1, { min: 1, max: 5 }) as tLoaderSpeed}\\n      />\\n    </Position>\\n  </ThemeWrapper>\\n)\\n\",\"locationsMap\":{}},},\n  title: `${path}/Loader`,\n  component: LoaderComponent\n}\n\nexport const Loader = addSourceDecorator(addSourceDecorator(addSourceDecorator(() => (\n  <ThemeWrapper>\n    <Position my='3em' p='3em' type='relative' border={1}>\n      <Typography>You can use \"center\" Prop to center the Loader</Typography>\n      <Typography>\n        You can use \"fadeBackground\" prop to fade the background of the\n        enclosing <strong>Relative</strong> Parent.\n      </Typography>\n      <Box my='1em' p='1em' bgColor='grey.50'>\n        <Typography>\n          Pro Tip1: \"fadeBackground\" will work only if \"center\" prop is true.{' '}\n        </Typography>\n      </Box>\n      <Box my='1em' p='1em' bgColor='grey.50'>\n        <Typography>\n          Pro Tip2: Loader component expects its parent component to be\n          positioned as <strong>Relative</strong>\n        </Typography>\n      </Box>\n\n      <LoaderComponent\n        center={boolean('center', false)}\n        fadeBackground={boolean('fadeBackground', false)}\n        speed={number('speed', 1, { min: 1, max: 5 }) as tLoaderSpeed}\n      />\n    </Position>\n  </ThemeWrapper>\n), {__STORY__, __ADDS_MAP__,__MAIN_FILE_LOCATION__,__MODULE_DEPENDENCIES__,__LOCAL_DEPENDENCIES__,__SOURCE_PREFIX__,__IDS_TO_FRAMEWORKS__}), {__STORY__, __ADDS_MAP__,__MAIN_FILE_LOCATION__,__MODULE_DEPENDENCIES__,__LOCAL_DEPENDENCIES__,__SOURCE_PREFIX__,__IDS_TO_FRAMEWORKS__}), {__STORY__, __ADDS_MAP__,__MAIN_FILE_LOCATION__,__MODULE_DEPENDENCIES__,__LOCAL_DEPENDENCIES__,__SOURCE_PREFIX__,__IDS_TO_FRAMEWORKS__});"],"sourceRoot":""},"metadata":{},"sourceType":"module"}