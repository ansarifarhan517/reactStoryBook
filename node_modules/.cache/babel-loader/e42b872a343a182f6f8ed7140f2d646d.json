{"ast":null,"code":"import _defineProperty from \"/Users/farhanansari/Code/ui-library/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/defineProperty\";\n\nvar _parameters;\n\n/* eslint-disable */\n// @ts-nocheck\n// @ts-ignore\nvar withSourceLoader = require('@storybook/source-loader/preview').withSource; // @ts-ignore\n\n\nvar addSourceDecorator = require(\"@storybook/source-loader/preview\").addSource; // @ts-ignore\n\n\nvar __SOURCE_PREFIX__ = \"/Users/farhanansari/Code/ui-library/src/components/atoms/CheckboxFieldGroup\"; // @ts-ignore\n\nvar __STORY__ = \"\\n\\n// @ts-nocheck\\n// @ts-ignore\\nvar withSourceLoader = require('@storybook/source-loader/preview').withSource;\\n// @ts-ignore\\nvar addSourceDecorator = require(\\\"@storybook/source-loader/preview\\\").addSource;\\n// @ts-ignore\\nvar __SOURCE_PREFIX__ = \\\"/Users/farhanansari/Code/ui-library/src/components/atoms/CheckboxFieldGroup\\\";\\n// @ts-ignore\\nvar __STORY__ = \\\"\\\\n\\\\n// @ts-nocheck\\\\n// @ts-ignore\\\\nvar withSourceLoader = require('@storybook/source-loader/preview').withSource;\\\\n// @ts-ignore\\\\nvar addSourceDecorator = require(\\\\\\\"@storybook/source-loader/preview\\\\\\\").addSource;\\\\n// @ts-ignore\\\\nvar __SOURCE_PREFIX__ = \\\\\\\"/Users/farhanansari/Code/ui-library/src/components/atoms/CheckboxFieldGroup\\\\\\\";\\\\n// @ts-ignore\\\\nvar __STORY__ = \\\\\\\"import React from 'react'\\\\\\\\nimport { path } from '..'\\\\\\\\nimport CheckboxFieldGroup from '.'\\\\\\\\nimport {\\\\\\\\n  withKnobs,\\\\\\\\n  boolean,\\\\\\\\n  radios,\\\\\\\\n  number,\\\\\\\\n  text\\\\\\\\n} from '@storybook/addon-knobs'\\\\\\\\nimport { action } from '@storybook/addon-actions'\\\\\\\\nimport ThemeWrapper from '../../../utilities/components/ThemeWrapper'\\\\\\\\nimport Checkbox, { tCheckboxSize } from '../Checkbox'\\\\\\\\n\\\\\\\\nimport Card from '../Card'\\\\\\\\n\\\\\\\\nexport default {\\\\\\\\n  title: `${path}/CheckboxFieldGroup`,\\\\\\\\n  decorators: [withKnobs],\\\\\\\\n  component: CheckboxFieldGroup\\\\\\\\n}\\\\\\\\n\\\\\\\\nconst radioOptions = {\\\\\\\\n  size: { sm: 'sm', md: 'md', lg: 'lg' }\\\\\\\\n}\\\\\\\\n\\\\\\\\nexport const withDefault = () => (\\\\\\\\n  <ThemeWrapper>\\\\\\\\n    <Card>\\\\\\\\n      <CheckboxFieldGroup\\\\\\\\n        id='defaultCheckboxFieldGroup'\\\\\\\\n        orientation={boolean('orientation', false)}\\\\\\\\n        spacing={number('spacing', 10)}\\\\\\\\n        variant='default'\\\\\\\\n        width='400px'\\\\\\\\n        label='Gender'\\\\\\\\n        labelColor={text('Group Label Color', 'black')}\\\\\\\\n      >\\\\\\\\n        <Checkbox\\\\\\\\n          id='checkbox1'\\\\\\\\n          onChange={action('CheckboxField 1 Changed')}\\\\\\\\n          disabled={boolean('disabled', false, 'CheckboxField 1')}\\\\\\\\n          checked={boolean('checked', true, 'CheckboxField 1')}\\\\\\\\n          name={text('name', 'gender', 'CheckboxField 1')}\\\\\\\\n          value={text('value', 'Male', 'CheckboxField 1')}\\\\\\\\n          label={text('label', 'Male', 'CheckboxField 1')}\\\\\\\\n          checkboxSize={\\\\\\\\n            radios('size', radioOptions.size, 'sm') as tCheckboxSize\\\\\\\\n          }\\\\\\\\n          labelColor={text('Label Color', 'black')}\\\\\\\\n        />\\\\\\\\n        <Checkbox\\\\\\\\n          id='checkbox2'\\\\\\\\n          onChange={action('CheckboxField 2 Changed')}\\\\\\\\n          disabled={boolean('disabled', false, 'CheckboxField 2')}\\\\\\\\n          checked={boolean('checked', true, 'CheckboxField 2')}\\\\\\\\n          name={text('name', 'gender', 'CheckboxField 2')}\\\\\\\\n          value={text('value', 'Female', 'CheckboxField 2')}\\\\\\\\n          label={text('label', 'Female', 'CheckboxField 2')}\\\\\\\\n          checkboxSize={\\\\\\\\n            radios('size', radioOptions.size, 'sm') as tCheckboxSize\\\\\\\\n          }\\\\\\\\n          labelColor={text('Label Color', 'black')}\\\\\\\\n        />\\\\\\\\n        <Checkbox\\\\\\\\n          id='checkbox3'\\\\\\\\n          onChange={action('CheckboxField 3 Changed')}\\\\\\\\n          disabled={boolean('disabled', false, 'CheckboxField 3')}\\\\\\\\n          checked={boolean('checked', true, 'CheckboxField 3')}\\\\\\\\n          name={text('name', 'gender', 'CheckboxField 3')}\\\\\\\\n          value={text('value', 'Others', 'CheckboxField 3')}\\\\\\\\n          label={text('label', 'Others', 'CheckboxField 3')}\\\\\\\\n          checkboxSize={\\\\\\\\n            radios('size', radioOptions.size, 'sm') as tCheckboxSize\\\\\\\\n          }\\\\\\\\n          labelColor={text('Label Color', 'black')}\\\\\\\\n        />\\\\\\\\n      </CheckboxFieldGroup>\\\\\\\\n    </Card>\\\\\\\\n  </ThemeWrapper>\\\\\\\\n)\\\\\\\\n\\\\\\\\nexport const withForm = () => (\\\\\\\\n  <ThemeWrapper>\\\\\\\\n    <Card>\\\\\\\\n      <CheckboxFieldGroup\\\\\\\\n        id='CheckboxFieldGroup2'\\\\\\\\n        orientation={boolean('orientation', false)}\\\\\\\\n        spacing={number('spacing', 10)}\\\\\\\\n        variant='form'\\\\\\\\n        label='Gender'\\\\\\\\n        width={text('width', '50%')}\\\\\\\\n        labelColor={text('Group Label Color', 'black')}\\\\\\\\n        error={boolean('error', true)}\\\\\\\\n        errorMessage={text('errorMessage', 'Some Field Error')}\\\\\\\\n        required={boolean('required', false)}\\\\\\\\n      >\\\\\\\\n        <Checkbox\\\\\\\\n          id='checkbox1'\\\\\\\\n          onChange={action('CheckboxField 1 Changed')}\\\\\\\\n          disabled={boolean('disabled', false, 'CheckboxField 1')}\\\\\\\\n          checked={boolean('checked', true, 'CheckboxField 1')}\\\\\\\\n          name={text('name', 'gender', 'CheckboxField 1')}\\\\\\\\n          value={text('value', 'Male', 'CheckboxField 1')}\\\\\\\\n          label={text('label', 'Male', 'CheckboxField 1')}\\\\\\\\n          checkboxSize={\\\\\\\\n            radios('size', radioOptions.size, 'sm') as tCheckboxSize\\\\\\\\n          }\\\\\\\\n          labelColor={text('Label Color', 'black')}\\\\\\\\n        />\\\\\\\\n        <Checkbox\\\\\\\\n          id='checkbox2'\\\\\\\\n          onChange={action('CheckboxField 2 Changed')}\\\\\\\\n          disabled={boolean('disabled', false, 'CheckboxField 2')}\\\\\\\\n          checked={boolean('checked', true, 'CheckboxField 2')}\\\\\\\\n          name={text('name', 'gender', 'CheckboxField 2')}\\\\\\\\n          value={text('value', 'Female', 'CheckboxField 2')}\\\\\\\\n          label={text('label', 'Female', 'CheckboxField 2')}\\\\\\\\n          checkboxSize={\\\\\\\\n            radios('size', radioOptions.size, 'sm') as tCheckboxSize\\\\\\\\n          }\\\\\\\\n        />\\\\\\\\n        <Checkbox\\\\\\\\n          id='checkbox3'\\\\\\\\n          onChange={action('CheckboxField 3 Changed')}\\\\\\\\n          disabled={boolean('disabled', false, 'CheckboxField 3')}\\\\\\\\n          checked={boolean('checked', true, 'CheckboxField 3')}\\\\\\\\n          name={text('name', 'gender', 'CheckboxField 3')}\\\\\\\\n          value={text('value', 'Others', 'CheckboxField 3')}\\\\\\\\n          label={text('label', 'Others', 'CheckboxField 3')}\\\\\\\\n          checkboxSize={\\\\\\\\n            radios('size', radioOptions.size, 'sm') as tCheckboxSize\\\\\\\\n          }\\\\\\\\n          labelColor={text('Label Color', 'black')}\\\\\\\\n        />\\\\\\\\n      </CheckboxFieldGroup>\\\\\\\\n    </Card>\\\\\\\\n  </ThemeWrapper>\\\\\\\\n)\\\\\\\\n\\\\\\\";\\\\n// @ts-ignore\\\\nvar __ADDS_MAP__ = {};\\\\n// @ts-ignore\\\\nvar __MAIN_FILE_LOCATION__ = \\\\\\\"/CheckboxFieldGroup.stories.tsx\\\\\\\";\\\\n// @ts-ignore\\\\nvar __MODULE_DEPENDENCIES__ = [];\\\\n// @ts-ignore\\\\nvar __LOCAL_DEPENDENCIES__ = {};\\\\n// @ts-ignore\\\\nvar __IDS_TO_FRAMEWORKS__ = {};\\\\n        \\\\nimport React from 'react'\\\\nimport { path } from '..'\\\\nimport CheckboxFieldGroup from '.'\\\\nimport {\\\\n  withKnobs,\\\\n  boolean,\\\\n  radios,\\\\n  number,\\\\n  text\\\\n} from '@storybook/addon-knobs'\\\\nimport { action } from '@storybook/addon-actions'\\\\nimport ThemeWrapper from '../../../utilities/components/ThemeWrapper'\\\\nimport Checkbox, { tCheckboxSize } from '../Checkbox'\\\\n\\\\nimport Card from '../Card'\\\\n\\\\nexport default {parameters: {\\\\\\\"storySource\\\\\\\":{\\\\\\\"source\\\\\\\":\\\\\\\"import React from 'react'\\\\\\\\nimport { path } from '..'\\\\\\\\nimport CheckboxFieldGroup from '.'\\\\\\\\nimport {\\\\\\\\n  withKnobs,\\\\\\\\n  boolean,\\\\\\\\n  radios,\\\\\\\\n  number,\\\\\\\\n  text\\\\\\\\n} from '@storybook/addon-knobs'\\\\\\\\nimport { action } from '@storybook/addon-actions'\\\\\\\\nimport ThemeWrapper from '../../../utilities/components/ThemeWrapper'\\\\\\\\nimport Checkbox, { tCheckboxSize } from '../Checkbox'\\\\\\\\n\\\\\\\\nimport Card from '../Card'\\\\\\\\n\\\\\\\\nexport default {\\\\\\\\n  title: `${path}/CheckboxFieldGroup`,\\\\\\\\n  decorators: [withKnobs],\\\\\\\\n  component: CheckboxFieldGroup\\\\\\\\n}\\\\\\\\n\\\\\\\\nconst radioOptions = {\\\\\\\\n  size: { sm: 'sm', md: 'md', lg: 'lg' }\\\\\\\\n}\\\\\\\\n\\\\\\\\nexport const withDefault = () => (\\\\\\\\n  <ThemeWrapper>\\\\\\\\n    <Card>\\\\\\\\n      <CheckboxFieldGroup\\\\\\\\n        id='defaultCheckboxFieldGroup'\\\\\\\\n        orientation={boolean('orientation', false)}\\\\\\\\n        spacing={number('spacing', 10)}\\\\\\\\n        variant='default'\\\\\\\\n        width='400px'\\\\\\\\n        label='Gender'\\\\\\\\n        labelColor={text('Group Label Color', 'black')}\\\\\\\\n      >\\\\\\\\n        <Checkbox\\\\\\\\n          id='checkbox1'\\\\\\\\n          onChange={action('CheckboxField 1 Changed')}\\\\\\\\n          disabled={boolean('disabled', false, 'CheckboxField 1')}\\\\\\\\n          checked={boolean('checked', true, 'CheckboxField 1')}\\\\\\\\n          name={text('name', 'gender', 'CheckboxField 1')}\\\\\\\\n          value={text('value', 'Male', 'CheckboxField 1')}\\\\\\\\n          label={text('label', 'Male', 'CheckboxField 1')}\\\\\\\\n          checkboxSize={\\\\\\\\n            radios('size', radioOptions.size, 'sm') as tCheckboxSize\\\\\\\\n          }\\\\\\\\n          labelColor={text('Label Color', 'black')}\\\\\\\\n        />\\\\\\\\n        <Checkbox\\\\\\\\n          id='checkbox2'\\\\\\\\n          onChange={action('CheckboxField 2 Changed')}\\\\\\\\n          disabled={boolean('disabled', false, 'CheckboxField 2')}\\\\\\\\n          checked={boolean('checked', true, 'CheckboxField 2')}\\\\\\\\n          name={text('name', 'gender', 'CheckboxField 2')}\\\\\\\\n          value={text('value', 'Female', 'CheckboxField 2')}\\\\\\\\n          label={text('label', 'Female', 'CheckboxField 2')}\\\\\\\\n          checkboxSize={\\\\\\\\n            radios('size', radioOptions.size, 'sm') as tCheckboxSize\\\\\\\\n          }\\\\\\\\n          labelColor={text('Label Color', 'black')}\\\\\\\\n        />\\\\\\\\n        <Checkbox\\\\\\\\n          id='checkbox3'\\\\\\\\n          onChange={action('CheckboxField 3 Changed')}\\\\\\\\n          disabled={boolean('disabled', false, 'CheckboxField 3')}\\\\\\\\n          checked={boolean('checked', true, 'CheckboxField 3')}\\\\\\\\n          name={text('name', 'gender', 'CheckboxField 3')}\\\\\\\\n          value={text('value', 'Others', 'CheckboxField 3')}\\\\\\\\n          label={text('label', 'Others', 'CheckboxField 3')}\\\\\\\\n          checkboxSize={\\\\\\\\n            radios('size', radioOptions.size, 'sm') as tCheckboxSize\\\\\\\\n          }\\\\\\\\n          labelColor={text('Label Color', 'black')}\\\\\\\\n        />\\\\\\\\n      </CheckboxFieldGroup>\\\\\\\\n    </Card>\\\\\\\\n  </ThemeWrapper>\\\\\\\\n)\\\\\\\\n\\\\\\\\nexport const withForm = () => (\\\\\\\\n  <ThemeWrapper>\\\\\\\\n    <Card>\\\\\\\\n      <CheckboxFieldGroup\\\\\\\\n        id='CheckboxFieldGroup2'\\\\\\\\n        orientation={boolean('orientation', false)}\\\\\\\\n        spacing={number('spacing', 10)}\\\\\\\\n        variant='form'\\\\\\\\n        label='Gender'\\\\\\\\n        width={text('width', '50%')}\\\\\\\\n        labelColor={text('Group Label Color', 'black')}\\\\\\\\n        error={boolean('error', true)}\\\\\\\\n        errorMessage={text('errorMessage', 'Some Field Error')}\\\\\\\\n        required={boolean('required', false)}\\\\\\\\n      >\\\\\\\\n        <Checkbox\\\\\\\\n          id='checkbox1'\\\\\\\\n          onChange={action('CheckboxField 1 Changed')}\\\\\\\\n          disabled={boolean('disabled', false, 'CheckboxField 1')}\\\\\\\\n          checked={boolean('checked', true, 'CheckboxField 1')}\\\\\\\\n          name={text('name', 'gender', 'CheckboxField 1')}\\\\\\\\n          value={text('value', 'Male', 'CheckboxField 1')}\\\\\\\\n          label={text('label', 'Male', 'CheckboxField 1')}\\\\\\\\n          checkboxSize={\\\\\\\\n            radios('size', radioOptions.size, 'sm') as tCheckboxSize\\\\\\\\n          }\\\\\\\\n          labelColor={text('Label Color', 'black')}\\\\\\\\n        />\\\\\\\\n        <Checkbox\\\\\\\\n          id='checkbox2'\\\\\\\\n          onChange={action('CheckboxField 2 Changed')}\\\\\\\\n          disabled={boolean('disabled', false, 'CheckboxField 2')}\\\\\\\\n          checked={boolean('checked', true, 'CheckboxField 2')}\\\\\\\\n          name={text('name', 'gender', 'CheckboxField 2')}\\\\\\\\n          value={text('value', 'Female', 'CheckboxField 2')}\\\\\\\\n          label={text('label', 'Female', 'CheckboxField 2')}\\\\\\\\n          checkboxSize={\\\\\\\\n            radios('size', radioOptions.size, 'sm') as tCheckboxSize\\\\\\\\n          }\\\\\\\\n        />\\\\\\\\n        <Checkbox\\\\\\\\n          id='checkbox3'\\\\\\\\n          onChange={action('CheckboxField 3 Changed')}\\\\\\\\n          disabled={boolean('disabled', false, 'CheckboxField 3')}\\\\\\\\n          checked={boolean('checked', true, 'CheckboxField 3')}\\\\\\\\n          name={text('name', 'gender', 'CheckboxField 3')}\\\\\\\\n          value={text('value', 'Others', 'CheckboxField 3')}\\\\\\\\n          label={text('label', 'Others', 'CheckboxField 3')}\\\\\\\\n          checkboxSize={\\\\\\\\n            radios('size', radioOptions.size, 'sm') as tCheckboxSize\\\\\\\\n          }\\\\\\\\n          labelColor={text('Label Color', 'black')}\\\\\\\\n        />\\\\\\\\n      </CheckboxFieldGroup>\\\\\\\\n    </Card>\\\\\\\\n  </ThemeWrapper>\\\\\\\\n)\\\\\\\\n\\\\\\\",\\\\\\\"locationsMap\\\\\\\":{}},},\\\\n  title: `${path}/CheckboxFieldGroup`,\\\\n  decorators: [withKnobs],\\\\n  component: CheckboxFieldGroup\\\\n}\\\\n\\\\nconst radioOptions = {\\\\n  size: { sm: 'sm', md: 'md', lg: 'lg' }\\\\n}\\\\n\\\\nexport const withDefault = addSourceDecorator(() => (\\\\n  <ThemeWrapper>\\\\n    <Card>\\\\n      <CheckboxFieldGroup\\\\n        id='defaultCheckboxFieldGroup'\\\\n        orientation={boolean('orientation', false)}\\\\n        spacing={number('spacing', 10)}\\\\n        variant='default'\\\\n        width='400px'\\\\n        label='Gender'\\\\n        labelColor={text('Group Label Color', 'black')}\\\\n      >\\\\n        <Checkbox\\\\n          id='checkbox1'\\\\n          onChange={action('CheckboxField 1 Changed')}\\\\n          disabled={boolean('disabled', false, 'CheckboxField 1')}\\\\n          checked={boolean('checked', true, 'CheckboxField 1')}\\\\n          name={text('name', 'gender', 'CheckboxField 1')}\\\\n          value={text('value', 'Male', 'CheckboxField 1')}\\\\n          label={text('label', 'Male', 'CheckboxField 1')}\\\\n          checkboxSize={\\\\n            radios('size', radioOptions.size, 'sm') as tCheckboxSize\\\\n          }\\\\n          labelColor={text('Label Color', 'black')}\\\\n        />\\\\n        <Checkbox\\\\n          id='checkbox2'\\\\n          onChange={action('CheckboxField 2 Changed')}\\\\n          disabled={boolean('disabled', false, 'CheckboxField 2')}\\\\n          checked={boolean('checked', true, 'CheckboxField 2')}\\\\n          name={text('name', 'gender', 'CheckboxField 2')}\\\\n          value={text('value', 'Female', 'CheckboxField 2')}\\\\n          label={text('label', 'Female', 'CheckboxField 2')}\\\\n          checkboxSize={\\\\n            radios('size', radioOptions.size, 'sm') as tCheckboxSize\\\\n          }\\\\n          labelColor={text('Label Color', 'black')}\\\\n        />\\\\n        <Checkbox\\\\n          id='checkbox3'\\\\n          onChange={action('CheckboxField 3 Changed')}\\\\n          disabled={boolean('disabled', false, 'CheckboxField 3')}\\\\n          checked={boolean('checked', true, 'CheckboxField 3')}\\\\n          name={text('name', 'gender', 'CheckboxField 3')}\\\\n          value={text('value', 'Others', 'CheckboxField 3')}\\\\n          label={text('label', 'Others', 'CheckboxField 3')}\\\\n          checkboxSize={\\\\n            radios('size', radioOptions.size, 'sm') as tCheckboxSize\\\\n          }\\\\n          labelColor={text('Label Color', 'black')}\\\\n        />\\\\n      </CheckboxFieldGroup>\\\\n    </Card>\\\\n  </ThemeWrapper>\\\\n), {__STORY__, __ADDS_MAP__,__MAIN_FILE_LOCATION__,__MODULE_DEPENDENCIES__,__LOCAL_DEPENDENCIES__,__SOURCE_PREFIX__,__IDS_TO_FRAMEWORKS__});\\\\n\\\\nexport const withForm = addSourceDecorator(() => (\\\\n  <ThemeWrapper>\\\\n    <Card>\\\\n      <CheckboxFieldGroup\\\\n        id='CheckboxFieldGroup2'\\\\n        orientation={boolean('orientation', false)}\\\\n        spacing={number('spacing', 10)}\\\\n        variant='form'\\\\n        label='Gender'\\\\n        width={text('width', '50%')}\\\\n        labelColor={text('Group Label Color', 'black')}\\\\n        error={boolean('error', true)}\\\\n        errorMessage={text('errorMessage', 'Some Field Error')}\\\\n        required={boolean('required', false)}\\\\n      >\\\\n        <Checkbox\\\\n          id='checkbox1'\\\\n          onChange={action('CheckboxField 1 Changed')}\\\\n          disabled={boolean('disabled', false, 'CheckboxField 1')}\\\\n          checked={boolean('checked', true, 'CheckboxField 1')}\\\\n          name={text('name', 'gender', 'CheckboxField 1')}\\\\n          value={text('value', 'Male', 'CheckboxField 1')}\\\\n          label={text('label', 'Male', 'CheckboxField 1')}\\\\n          checkboxSize={\\\\n            radios('size', radioOptions.size, 'sm') as tCheckboxSize\\\\n          }\\\\n          labelColor={text('Label Color', 'black')}\\\\n        />\\\\n        <Checkbox\\\\n          id='checkbox2'\\\\n          onChange={action('CheckboxField 2 Changed')}\\\\n          disabled={boolean('disabled', false, 'CheckboxField 2')}\\\\n          checked={boolean('checked', true, 'CheckboxField 2')}\\\\n          name={text('name', 'gender', 'CheckboxField 2')}\\\\n          value={text('value', 'Female', 'CheckboxField 2')}\\\\n          label={text('label', 'Female', 'CheckboxField 2')}\\\\n          checkboxSize={\\\\n            radios('size', radioOptions.size, 'sm') as tCheckboxSize\\\\n          }\\\\n        />\\\\n        <Checkbox\\\\n          id='checkbox3'\\\\n          onChange={action('CheckboxField 3 Changed')}\\\\n          disabled={boolean('disabled', false, 'CheckboxField 3')}\\\\n          checked={boolean('checked', true, 'CheckboxField 3')}\\\\n          name={text('name', 'gender', 'CheckboxField 3')}\\\\n          value={text('value', 'Others', 'CheckboxField 3')}\\\\n          label={text('label', 'Others', 'CheckboxField 3')}\\\\n          checkboxSize={\\\\n            radios('size', radioOptions.size, 'sm') as tCheckboxSize\\\\n          }\\\\n          labelColor={text('Label Color', 'black')}\\\\n        />\\\\n      </CheckboxFieldGroup>\\\\n    </Card>\\\\n  </ThemeWrapper>\\\\n), {__STORY__, __ADDS_MAP__,__MAIN_FILE_LOCATION__,__MODULE_DEPENDENCIES__,__LOCAL_DEPENDENCIES__,__SOURCE_PREFIX__,__IDS_TO_FRAMEWORKS__});\\\";\\n// @ts-ignore\\nvar __ADDS_MAP__ = {};\\n// @ts-ignore\\nvar __MAIN_FILE_LOCATION__ = \\\"/CheckboxFieldGroup.stories.tsx\\\";\\n// @ts-ignore\\nvar __MODULE_DEPENDENCIES__ = [];\\n// @ts-ignore\\nvar __LOCAL_DEPENDENCIES__ = {};\\n// @ts-ignore\\nvar __IDS_TO_FRAMEWORKS__ = {};\\n        \\n\\n\\n// @ts-nocheck\\n// @ts-ignore\\nvar withSourceLoader = require('@storybook/source-loader/preview').withSource;\\n// @ts-ignore\\nvar addSourceDecorator = require(\\\"@storybook/source-loader/preview\\\").addSource;\\n// @ts-ignore\\nvar __SOURCE_PREFIX__ = \\\"/Users/farhanansari/Code/ui-library/src/components/atoms/CheckboxFieldGroup\\\";\\n// @ts-ignore\\nvar __STORY__ = \\\"import React from 'react'\\\\nimport { path } from '..'\\\\nimport CheckboxFieldGroup from '.'\\\\nimport {\\\\n  withKnobs,\\\\n  boolean,\\\\n  radios,\\\\n  number,\\\\n  text\\\\n} from '@storybook/addon-knobs'\\\\nimport { action } from '@storybook/addon-actions'\\\\nimport ThemeWrapper from '../../../utilities/components/ThemeWrapper'\\\\nimport Checkbox, { tCheckboxSize } from '../Checkbox'\\\\n\\\\nimport Card from '../Card'\\\\n\\\\nexport default {\\\\n  title: `${path}/CheckboxFieldGroup`,\\\\n  decorators: [withKnobs],\\\\n  component: CheckboxFieldGroup\\\\n}\\\\n\\\\nconst radioOptions = {\\\\n  size: { sm: 'sm', md: 'md', lg: 'lg' }\\\\n}\\\\n\\\\nexport const withDefault = () => (\\\\n  <ThemeWrapper>\\\\n    <Card>\\\\n      <CheckboxFieldGroup\\\\n        id='defaultCheckboxFieldGroup'\\\\n        orientation={boolean('orientation', false)}\\\\n        spacing={number('spacing', 10)}\\\\n        variant='default'\\\\n        width='400px'\\\\n        label='Gender'\\\\n        labelColor={text('Group Label Color', 'black')}\\\\n      >\\\\n        <Checkbox\\\\n          id='checkbox1'\\\\n          onChange={action('CheckboxField 1 Changed')}\\\\n          disabled={boolean('disabled', false, 'CheckboxField 1')}\\\\n          checked={boolean('checked', true, 'CheckboxField 1')}\\\\n          name={text('name', 'gender', 'CheckboxField 1')}\\\\n          value={text('value', 'Male', 'CheckboxField 1')}\\\\n          label={text('label', 'Male', 'CheckboxField 1')}\\\\n          checkboxSize={\\\\n            radios('size', radioOptions.size, 'sm') as tCheckboxSize\\\\n          }\\\\n          labelColor={text('Label Color', 'black')}\\\\n        />\\\\n        <Checkbox\\\\n          id='checkbox2'\\\\n          onChange={action('CheckboxField 2 Changed')}\\\\n          disabled={boolean('disabled', false, 'CheckboxField 2')}\\\\n          checked={boolean('checked', true, 'CheckboxField 2')}\\\\n          name={text('name', 'gender', 'CheckboxField 2')}\\\\n          value={text('value', 'Female', 'CheckboxField 2')}\\\\n          label={text('label', 'Female', 'CheckboxField 2')}\\\\n          checkboxSize={\\\\n            radios('size', radioOptions.size, 'sm') as tCheckboxSize\\\\n          }\\\\n          labelColor={text('Label Color', 'black')}\\\\n        />\\\\n        <Checkbox\\\\n          id='checkbox3'\\\\n          onChange={action('CheckboxField 3 Changed')}\\\\n          disabled={boolean('disabled', false, 'CheckboxField 3')}\\\\n          checked={boolean('checked', true, 'CheckboxField 3')}\\\\n          name={text('name', 'gender', 'CheckboxField 3')}\\\\n          value={text('value', 'Others', 'CheckboxField 3')}\\\\n          label={text('label', 'Others', 'CheckboxField 3')}\\\\n          checkboxSize={\\\\n            radios('size', radioOptions.size, 'sm') as tCheckboxSize\\\\n          }\\\\n          labelColor={text('Label Color', 'black')}\\\\n        />\\\\n      </CheckboxFieldGroup>\\\\n    </Card>\\\\n  </ThemeWrapper>\\\\n)\\\\n\\\\nexport const withForm = () => (\\\\n  <ThemeWrapper>\\\\n    <Card>\\\\n      <CheckboxFieldGroup\\\\n        id='CheckboxFieldGroup2'\\\\n        orientation={boolean('orientation', false)}\\\\n        spacing={number('spacing', 10)}\\\\n        variant='form'\\\\n        label='Gender'\\\\n        width={text('width', '50%')}\\\\n        labelColor={text('Group Label Color', 'black')}\\\\n        error={boolean('error', true)}\\\\n        errorMessage={text('errorMessage', 'Some Field Error')}\\\\n        required={boolean('required', false)}\\\\n      >\\\\n        <Checkbox\\\\n          id='checkbox1'\\\\n          onChange={action('CheckboxField 1 Changed')}\\\\n          disabled={boolean('disabled', false, 'CheckboxField 1')}\\\\n          checked={boolean('checked', true, 'CheckboxField 1')}\\\\n          name={text('name', 'gender', 'CheckboxField 1')}\\\\n          value={text('value', 'Male', 'CheckboxField 1')}\\\\n          label={text('label', 'Male', 'CheckboxField 1')}\\\\n          checkboxSize={\\\\n            radios('size', radioOptions.size, 'sm') as tCheckboxSize\\\\n          }\\\\n          labelColor={text('Label Color', 'black')}\\\\n        />\\\\n        <Checkbox\\\\n          id='checkbox2'\\\\n          onChange={action('CheckboxField 2 Changed')}\\\\n          disabled={boolean('disabled', false, 'CheckboxField 2')}\\\\n          checked={boolean('checked', true, 'CheckboxField 2')}\\\\n          name={text('name', 'gender', 'CheckboxField 2')}\\\\n          value={text('value', 'Female', 'CheckboxField 2')}\\\\n          label={text('label', 'Female', 'CheckboxField 2')}\\\\n          checkboxSize={\\\\n            radios('size', radioOptions.size, 'sm') as tCheckboxSize\\\\n          }\\\\n        />\\\\n        <Checkbox\\\\n          id='checkbox3'\\\\n          onChange={action('CheckboxField 3 Changed')}\\\\n          disabled={boolean('disabled', false, 'CheckboxField 3')}\\\\n          checked={boolean('checked', true, 'CheckboxField 3')}\\\\n          name={text('name', 'gender', 'CheckboxField 3')}\\\\n          value={text('value', 'Others', 'CheckboxField 3')}\\\\n          label={text('label', 'Others', 'CheckboxField 3')}\\\\n          checkboxSize={\\\\n            radios('size', radioOptions.size, 'sm') as tCheckboxSize\\\\n          }\\\\n          labelColor={text('Label Color', 'black')}\\\\n        />\\\\n      </CheckboxFieldGroup>\\\\n    </Card>\\\\n  </ThemeWrapper>\\\\n)\\\\n\\\";\\n// @ts-ignore\\nvar __ADDS_MAP__ = {};\\n// @ts-ignore\\nvar __MAIN_FILE_LOCATION__ = \\\"/CheckboxFieldGroup.stories.tsx\\\";\\n// @ts-ignore\\nvar __MODULE_DEPENDENCIES__ = [];\\n// @ts-ignore\\nvar __LOCAL_DEPENDENCIES__ = {};\\n// @ts-ignore\\nvar __IDS_TO_FRAMEWORKS__ = {};\\n        \\nimport React from 'react'\\nimport { path } from '..'\\nimport CheckboxFieldGroup from '.'\\nimport {\\n  withKnobs,\\n  boolean,\\n  radios,\\n  number,\\n  text\\n} from '@storybook/addon-knobs'\\nimport { action } from '@storybook/addon-actions'\\nimport ThemeWrapper from '../../../utilities/components/ThemeWrapper'\\nimport Checkbox, { tCheckboxSize } from '../Checkbox'\\n\\nimport Card from '../Card'\\n\\nexport default {parameters: {\\\"storySource\\\":{\\\"source\\\":\\\"\\\\n\\\\n// @ts-nocheck\\\\n// @ts-ignore\\\\nvar withSourceLoader = require('@storybook/source-loader/preview').withSource;\\\\n// @ts-ignore\\\\nvar addSourceDecorator = require(\\\\\\\"@storybook/source-loader/preview\\\\\\\").addSource;\\\\n// @ts-ignore\\\\nvar __SOURCE_PREFIX__ = \\\\\\\"/Users/farhanansari/Code/ui-library/src/components/atoms/CheckboxFieldGroup\\\\\\\";\\\\n// @ts-ignore\\\\nvar __STORY__ = \\\\\\\"import React from 'react'\\\\\\\\nimport { path } from '..'\\\\\\\\nimport CheckboxFieldGroup from '.'\\\\\\\\nimport {\\\\\\\\n  withKnobs,\\\\\\\\n  boolean,\\\\\\\\n  radios,\\\\\\\\n  number,\\\\\\\\n  text\\\\\\\\n} from '@storybook/addon-knobs'\\\\\\\\nimport { action } from '@storybook/addon-actions'\\\\\\\\nimport ThemeWrapper from '../../../utilities/components/ThemeWrapper'\\\\\\\\nimport Checkbox, { tCheckboxSize } from '../Checkbox'\\\\\\\\n\\\\\\\\nimport Card from '../Card'\\\\\\\\n\\\\\\\\nexport default {\\\\\\\\n  title: `${path}/CheckboxFieldGroup`,\\\\\\\\n  decorators: [withKnobs],\\\\\\\\n  component: CheckboxFieldGroup\\\\\\\\n}\\\\\\\\n\\\\\\\\nconst radioOptions = {\\\\\\\\n  size: { sm: 'sm', md: 'md', lg: 'lg' }\\\\\\\\n}\\\\\\\\n\\\\\\\\nexport const withDefault = () => (\\\\\\\\n  <ThemeWrapper>\\\\\\\\n    <Card>\\\\\\\\n      <CheckboxFieldGroup\\\\\\\\n        id='defaultCheckboxFieldGroup'\\\\\\\\n        orientation={boolean('orientation', false)}\\\\\\\\n        spacing={number('spacing', 10)}\\\\\\\\n        variant='default'\\\\\\\\n        width='400px'\\\\\\\\n        label='Gender'\\\\\\\\n        labelColor={text('Group Label Color', 'black')}\\\\\\\\n      >\\\\\\\\n        <Checkbox\\\\\\\\n          id='checkbox1'\\\\\\\\n          onChange={action('CheckboxField 1 Changed')}\\\\\\\\n          disabled={boolean('disabled', false, 'CheckboxField 1')}\\\\\\\\n          checked={boolean('checked', true, 'CheckboxField 1')}\\\\\\\\n          name={text('name', 'gender', 'CheckboxField 1')}\\\\\\\\n          value={text('value', 'Male', 'CheckboxField 1')}\\\\\\\\n          label={text('label', 'Male', 'CheckboxField 1')}\\\\\\\\n          checkboxSize={\\\\\\\\n            radios('size', radioOptions.size, 'sm') as tCheckboxSize\\\\\\\\n          }\\\\\\\\n          labelColor={text('Label Color', 'black')}\\\\\\\\n        />\\\\\\\\n        <Checkbox\\\\\\\\n          id='checkbox2'\\\\\\\\n          onChange={action('CheckboxField 2 Changed')}\\\\\\\\n          disabled={boolean('disabled', false, 'CheckboxField 2')}\\\\\\\\n          checked={boolean('checked', true, 'CheckboxField 2')}\\\\\\\\n          name={text('name', 'gender', 'CheckboxField 2')}\\\\\\\\n          value={text('value', 'Female', 'CheckboxField 2')}\\\\\\\\n          label={text('label', 'Female', 'CheckboxField 2')}\\\\\\\\n          checkboxSize={\\\\\\\\n            radios('size', radioOptions.size, 'sm') as tCheckboxSize\\\\\\\\n          }\\\\\\\\n          labelColor={text('Label Color', 'black')}\\\\\\\\n        />\\\\\\\\n        <Checkbox\\\\\\\\n          id='checkbox3'\\\\\\\\n          onChange={action('CheckboxField 3 Changed')}\\\\\\\\n          disabled={boolean('disabled', false, 'CheckboxField 3')}\\\\\\\\n          checked={boolean('checked', true, 'CheckboxField 3')}\\\\\\\\n          name={text('name', 'gender', 'CheckboxField 3')}\\\\\\\\n          value={text('value', 'Others', 'CheckboxField 3')}\\\\\\\\n          label={text('label', 'Others', 'CheckboxField 3')}\\\\\\\\n          checkboxSize={\\\\\\\\n            radios('size', radioOptions.size, 'sm') as tCheckboxSize\\\\\\\\n          }\\\\\\\\n          labelColor={text('Label Color', 'black')}\\\\\\\\n        />\\\\\\\\n      </CheckboxFieldGroup>\\\\\\\\n    </Card>\\\\\\\\n  </ThemeWrapper>\\\\\\\\n)\\\\\\\\n\\\\\\\\nexport const withForm = () => (\\\\\\\\n  <ThemeWrapper>\\\\\\\\n    <Card>\\\\\\\\n      <CheckboxFieldGroup\\\\\\\\n        id='CheckboxFieldGroup2'\\\\\\\\n        orientation={boolean('orientation', false)}\\\\\\\\n        spacing={number('spacing', 10)}\\\\\\\\n        variant='form'\\\\\\\\n        label='Gender'\\\\\\\\n        width={text('width', '50%')}\\\\\\\\n        labelColor={text('Group Label Color', 'black')}\\\\\\\\n        error={boolean('error', true)}\\\\\\\\n        errorMessage={text('errorMessage', 'Some Field Error')}\\\\\\\\n        required={boolean('required', false)}\\\\\\\\n      >\\\\\\\\n        <Checkbox\\\\\\\\n          id='checkbox1'\\\\\\\\n          onChange={action('CheckboxField 1 Changed')}\\\\\\\\n          disabled={boolean('disabled', false, 'CheckboxField 1')}\\\\\\\\n          checked={boolean('checked', true, 'CheckboxField 1')}\\\\\\\\n          name={text('name', 'gender', 'CheckboxField 1')}\\\\\\\\n          value={text('value', 'Male', 'CheckboxField 1')}\\\\\\\\n          label={text('label', 'Male', 'CheckboxField 1')}\\\\\\\\n          checkboxSize={\\\\\\\\n            radios('size', radioOptions.size, 'sm') as tCheckboxSize\\\\\\\\n          }\\\\\\\\n          labelColor={text('Label Color', 'black')}\\\\\\\\n        />\\\\\\\\n        <Checkbox\\\\\\\\n          id='checkbox2'\\\\\\\\n          onChange={action('CheckboxField 2 Changed')}\\\\\\\\n          disabled={boolean('disabled', false, 'CheckboxField 2')}\\\\\\\\n          checked={boolean('checked', true, 'CheckboxField 2')}\\\\\\\\n          name={text('name', 'gender', 'CheckboxField 2')}\\\\\\\\n          value={text('value', 'Female', 'CheckboxField 2')}\\\\\\\\n          label={text('label', 'Female', 'CheckboxField 2')}\\\\\\\\n          checkboxSize={\\\\\\\\n            radios('size', radioOptions.size, 'sm') as tCheckboxSize\\\\\\\\n          }\\\\\\\\n        />\\\\\\\\n        <Checkbox\\\\\\\\n          id='checkbox3'\\\\\\\\n          onChange={action('CheckboxField 3 Changed')}\\\\\\\\n          disabled={boolean('disabled', false, 'CheckboxField 3')}\\\\\\\\n          checked={boolean('checked', true, 'CheckboxField 3')}\\\\\\\\n          name={text('name', 'gender', 'CheckboxField 3')}\\\\\\\\n          value={text('value', 'Others', 'CheckboxField 3')}\\\\\\\\n          label={text('label', 'Others', 'CheckboxField 3')}\\\\\\\\n          checkboxSize={\\\\\\\\n            radios('size', radioOptions.size, 'sm') as tCheckboxSize\\\\\\\\n          }\\\\\\\\n          labelColor={text('Label Color', 'black')}\\\\\\\\n        />\\\\\\\\n      </CheckboxFieldGroup>\\\\\\\\n    </Card>\\\\\\\\n  </ThemeWrapper>\\\\\\\\n)\\\\\\\\n\\\\\\\";\\\\n// @ts-ignore\\\\nvar __ADDS_MAP__ = {};\\\\n// @ts-ignore\\\\nvar __MAIN_FILE_LOCATION__ = \\\\\\\"/CheckboxFieldGroup.stories.tsx\\\\\\\";\\\\n// @ts-ignore\\\\nvar __MODULE_DEPENDENCIES__ = [];\\\\n// @ts-ignore\\\\nvar __LOCAL_DEPENDENCIES__ = {};\\\\n// @ts-ignore\\\\nvar __IDS_TO_FRAMEWORKS__ = {};\\\\n        \\\\nimport React from 'react'\\\\nimport { path } from '..'\\\\nimport CheckboxFieldGroup from '.'\\\\nimport {\\\\n  withKnobs,\\\\n  boolean,\\\\n  radios,\\\\n  number,\\\\n  text\\\\n} from '@storybook/addon-knobs'\\\\nimport { action } from '@storybook/addon-actions'\\\\nimport ThemeWrapper from '../../../utilities/components/ThemeWrapper'\\\\nimport Checkbox, { tCheckboxSize } from '../Checkbox'\\\\n\\\\nimport Card from '../Card'\\\\n\\\\nexport default {parameters: {\\\\\\\"storySource\\\\\\\":{\\\\\\\"source\\\\\\\":\\\\\\\"import React from 'react'\\\\\\\\nimport { path } from '..'\\\\\\\\nimport CheckboxFieldGroup from '.'\\\\\\\\nimport {\\\\\\\\n  withKnobs,\\\\\\\\n  boolean,\\\\\\\\n  radios,\\\\\\\\n  number,\\\\\\\\n  text\\\\\\\\n} from '@storybook/addon-knobs'\\\\\\\\nimport { action } from '@storybook/addon-actions'\\\\\\\\nimport ThemeWrapper from '../../../utilities/components/ThemeWrapper'\\\\\\\\nimport Checkbox, { tCheckboxSize } from '../Checkbox'\\\\\\\\n\\\\\\\\nimport Card from '../Card'\\\\\\\\n\\\\\\\\nexport default {\\\\\\\\n  title: `${path}/CheckboxFieldGroup`,\\\\\\\\n  decorators: [withKnobs],\\\\\\\\n  component: CheckboxFieldGroup\\\\\\\\n}\\\\\\\\n\\\\\\\\nconst radioOptions = {\\\\\\\\n  size: { sm: 'sm', md: 'md', lg: 'lg' }\\\\\\\\n}\\\\\\\\n\\\\\\\\nexport const withDefault = () => (\\\\\\\\n  <ThemeWrapper>\\\\\\\\n    <Card>\\\\\\\\n      <CheckboxFieldGroup\\\\\\\\n        id='defaultCheckboxFieldGroup'\\\\\\\\n        orientation={boolean('orientation', false)}\\\\\\\\n        spacing={number('spacing', 10)}\\\\\\\\n        variant='default'\\\\\\\\n        width='400px'\\\\\\\\n        label='Gender'\\\\\\\\n        labelColor={text('Group Label Color', 'black')}\\\\\\\\n      >\\\\\\\\n        <Checkbox\\\\\\\\n          id='checkbox1'\\\\\\\\n          onChange={action('CheckboxField 1 Changed')}\\\\\\\\n          disabled={boolean('disabled', false, 'CheckboxField 1')}\\\\\\\\n          checked={boolean('checked', true, 'CheckboxField 1')}\\\\\\\\n          name={text('name', 'gender', 'CheckboxField 1')}\\\\\\\\n          value={text('value', 'Male', 'CheckboxField 1')}\\\\\\\\n          label={text('label', 'Male', 'CheckboxField 1')}\\\\\\\\n          checkboxSize={\\\\\\\\n            radios('size', radioOptions.size, 'sm') as tCheckboxSize\\\\\\\\n          }\\\\\\\\n          labelColor={text('Label Color', 'black')}\\\\\\\\n        />\\\\\\\\n        <Checkbox\\\\\\\\n          id='checkbox2'\\\\\\\\n          onChange={action('CheckboxField 2 Changed')}\\\\\\\\n          disabled={boolean('disabled', false, 'CheckboxField 2')}\\\\\\\\n          checked={boolean('checked', true, 'CheckboxField 2')}\\\\\\\\n          name={text('name', 'gender', 'CheckboxField 2')}\\\\\\\\n          value={text('value', 'Female', 'CheckboxField 2')}\\\\\\\\n          label={text('label', 'Female', 'CheckboxField 2')}\\\\\\\\n          checkboxSize={\\\\\\\\n            radios('size', radioOptions.size, 'sm') as tCheckboxSize\\\\\\\\n          }\\\\\\\\n          labelColor={text('Label Color', 'black')}\\\\\\\\n        />\\\\\\\\n        <Checkbox\\\\\\\\n          id='checkbox3'\\\\\\\\n          onChange={action('CheckboxField 3 Changed')}\\\\\\\\n          disabled={boolean('disabled', false, 'CheckboxField 3')}\\\\\\\\n          checked={boolean('checked', true, 'CheckboxField 3')}\\\\\\\\n          name={text('name', 'gender', 'CheckboxField 3')}\\\\\\\\n          value={text('value', 'Others', 'CheckboxField 3')}\\\\\\\\n          label={text('label', 'Others', 'CheckboxField 3')}\\\\\\\\n          checkboxSize={\\\\\\\\n            radios('size', radioOptions.size, 'sm') as tCheckboxSize\\\\\\\\n          }\\\\\\\\n          labelColor={text('Label Color', 'black')}\\\\\\\\n        />\\\\\\\\n      </CheckboxFieldGroup>\\\\\\\\n    </Card>\\\\\\\\n  </ThemeWrapper>\\\\\\\\n)\\\\\\\\n\\\\\\\\nexport const withForm = () => (\\\\\\\\n  <ThemeWrapper>\\\\\\\\n    <Card>\\\\\\\\n      <CheckboxFieldGroup\\\\\\\\n        id='CheckboxFieldGroup2'\\\\\\\\n        orientation={boolean('orientation', false)}\\\\\\\\n        spacing={number('spacing', 10)}\\\\\\\\n        variant='form'\\\\\\\\n        label='Gender'\\\\\\\\n        width={text('width', '50%')}\\\\\\\\n        labelColor={text('Group Label Color', 'black')}\\\\\\\\n        error={boolean('error', true)}\\\\\\\\n        errorMessage={text('errorMessage', 'Some Field Error')}\\\\\\\\n        required={boolean('required', false)}\\\\\\\\n      >\\\\\\\\n        <Checkbox\\\\\\\\n          id='checkbox1'\\\\\\\\n          onChange={action('CheckboxField 1 Changed')}\\\\\\\\n          disabled={boolean('disabled', false, 'CheckboxField 1')}\\\\\\\\n          checked={boolean('checked', true, 'CheckboxField 1')}\\\\\\\\n          name={text('name', 'gender', 'CheckboxField 1')}\\\\\\\\n          value={text('value', 'Male', 'CheckboxField 1')}\\\\\\\\n          label={text('label', 'Male', 'CheckboxField 1')}\\\\\\\\n          checkboxSize={\\\\\\\\n            radios('size', radioOptions.size, 'sm') as tCheckboxSize\\\\\\\\n          }\\\\\\\\n          labelColor={text('Label Color', 'black')}\\\\\\\\n        />\\\\\\\\n        <Checkbox\\\\\\\\n          id='checkbox2'\\\\\\\\n          onChange={action('CheckboxField 2 Changed')}\\\\\\\\n          disabled={boolean('disabled', false, 'CheckboxField 2')}\\\\\\\\n          checked={boolean('checked', true, 'CheckboxField 2')}\\\\\\\\n          name={text('name', 'gender', 'CheckboxField 2')}\\\\\\\\n          value={text('value', 'Female', 'CheckboxField 2')}\\\\\\\\n          label={text('label', 'Female', 'CheckboxField 2')}\\\\\\\\n          checkboxSize={\\\\\\\\n            radios('size', radioOptions.size, 'sm') as tCheckboxSize\\\\\\\\n          }\\\\\\\\n        />\\\\\\\\n        <Checkbox\\\\\\\\n          id='checkbox3'\\\\\\\\n          onChange={action('CheckboxField 3 Changed')}\\\\\\\\n          disabled={boolean('disabled', false, 'CheckboxField 3')}\\\\\\\\n          checked={boolean('checked', true, 'CheckboxField 3')}\\\\\\\\n          name={text('name', 'gender', 'CheckboxField 3')}\\\\\\\\n          value={text('value', 'Others', 'CheckboxField 3')}\\\\\\\\n          label={text('label', 'Others', 'CheckboxField 3')}\\\\\\\\n          checkboxSize={\\\\\\\\n            radios('size', radioOptions.size, 'sm') as tCheckboxSize\\\\\\\\n          }\\\\\\\\n          labelColor={text('Label Color', 'black')}\\\\\\\\n        />\\\\\\\\n      </CheckboxFieldGroup>\\\\\\\\n    </Card>\\\\\\\\n  </ThemeWrapper>\\\\\\\\n)\\\\\\\\n\\\\\\\",\\\\\\\"locationsMap\\\\\\\":{}},},\\\\n  title: `${path}/CheckboxFieldGroup`,\\\\n  decorators: [withKnobs],\\\\n  component: CheckboxFieldGroup\\\\n}\\\\n\\\\nconst radioOptions = {\\\\n  size: { sm: 'sm', md: 'md', lg: 'lg' }\\\\n}\\\\n\\\\nexport const withDefault = addSourceDecorator(() => (\\\\n  <ThemeWrapper>\\\\n    <Card>\\\\n      <CheckboxFieldGroup\\\\n        id='defaultCheckboxFieldGroup'\\\\n        orientation={boolean('orientation', false)}\\\\n        spacing={number('spacing', 10)}\\\\n        variant='default'\\\\n        width='400px'\\\\n        label='Gender'\\\\n        labelColor={text('Group Label Color', 'black')}\\\\n      >\\\\n        <Checkbox\\\\n          id='checkbox1'\\\\n          onChange={action('CheckboxField 1 Changed')}\\\\n          disabled={boolean('disabled', false, 'CheckboxField 1')}\\\\n          checked={boolean('checked', true, 'CheckboxField 1')}\\\\n          name={text('name', 'gender', 'CheckboxField 1')}\\\\n          value={text('value', 'Male', 'CheckboxField 1')}\\\\n          label={text('label', 'Male', 'CheckboxField 1')}\\\\n          checkboxSize={\\\\n            radios('size', radioOptions.size, 'sm') as tCheckboxSize\\\\n          }\\\\n          labelColor={text('Label Color', 'black')}\\\\n        />\\\\n        <Checkbox\\\\n          id='checkbox2'\\\\n          onChange={action('CheckboxField 2 Changed')}\\\\n          disabled={boolean('disabled', false, 'CheckboxField 2')}\\\\n          checked={boolean('checked', true, 'CheckboxField 2')}\\\\n          name={text('name', 'gender', 'CheckboxField 2')}\\\\n          value={text('value', 'Female', 'CheckboxField 2')}\\\\n          label={text('label', 'Female', 'CheckboxField 2')}\\\\n          checkboxSize={\\\\n            radios('size', radioOptions.size, 'sm') as tCheckboxSize\\\\n          }\\\\n          labelColor={text('Label Color', 'black')}\\\\n        />\\\\n        <Checkbox\\\\n          id='checkbox3'\\\\n          onChange={action('CheckboxField 3 Changed')}\\\\n          disabled={boolean('disabled', false, 'CheckboxField 3')}\\\\n          checked={boolean('checked', true, 'CheckboxField 3')}\\\\n          name={text('name', 'gender', 'CheckboxField 3')}\\\\n          value={text('value', 'Others', 'CheckboxField 3')}\\\\n          label={text('label', 'Others', 'CheckboxField 3')}\\\\n          checkboxSize={\\\\n            radios('size', radioOptions.size, 'sm') as tCheckboxSize\\\\n          }\\\\n          labelColor={text('Label Color', 'black')}\\\\n        />\\\\n      </CheckboxFieldGroup>\\\\n    </Card>\\\\n  </ThemeWrapper>\\\\n), {__STORY__, __ADDS_MAP__,__MAIN_FILE_LOCATION__,__MODULE_DEPENDENCIES__,__LOCAL_DEPENDENCIES__,__SOURCE_PREFIX__,__IDS_TO_FRAMEWORKS__});\\\\n\\\\nexport const withForm = addSourceDecorator(() => (\\\\n  <ThemeWrapper>\\\\n    <Card>\\\\n      <CheckboxFieldGroup\\\\n        id='CheckboxFieldGroup2'\\\\n        orientation={boolean('orientation', false)}\\\\n        spacing={number('spacing', 10)}\\\\n        variant='form'\\\\n        label='Gender'\\\\n        width={text('width', '50%')}\\\\n        labelColor={text('Group Label Color', 'black')}\\\\n        error={boolean('error', true)}\\\\n        errorMessage={text('errorMessage', 'Some Field Error')}\\\\n        required={boolean('required', false)}\\\\n      >\\\\n        <Checkbox\\\\n          id='checkbox1'\\\\n          onChange={action('CheckboxField 1 Changed')}\\\\n          disabled={boolean('disabled', false, 'CheckboxField 1')}\\\\n          checked={boolean('checked', true, 'CheckboxField 1')}\\\\n          name={text('name', 'gender', 'CheckboxField 1')}\\\\n          value={text('value', 'Male', 'CheckboxField 1')}\\\\n          label={text('label', 'Male', 'CheckboxField 1')}\\\\n          checkboxSize={\\\\n            radios('size', radioOptions.size, 'sm') as tCheckboxSize\\\\n          }\\\\n          labelColor={text('Label Color', 'black')}\\\\n        />\\\\n        <Checkbox\\\\n          id='checkbox2'\\\\n          onChange={action('CheckboxField 2 Changed')}\\\\n          disabled={boolean('disabled', false, 'CheckboxField 2')}\\\\n          checked={boolean('checked', true, 'CheckboxField 2')}\\\\n          name={text('name', 'gender', 'CheckboxField 2')}\\\\n          value={text('value', 'Female', 'CheckboxField 2')}\\\\n          label={text('label', 'Female', 'CheckboxField 2')}\\\\n          checkboxSize={\\\\n            radios('size', radioOptions.size, 'sm') as tCheckboxSize\\\\n          }\\\\n        />\\\\n        <Checkbox\\\\n          id='checkbox3'\\\\n          onChange={action('CheckboxField 3 Changed')}\\\\n          disabled={boolean('disabled', false, 'CheckboxField 3')}\\\\n          checked={boolean('checked', true, 'CheckboxField 3')}\\\\n          name={text('name', 'gender', 'CheckboxField 3')}\\\\n          value={text('value', 'Others', 'CheckboxField 3')}\\\\n          label={text('label', 'Others', 'CheckboxField 3')}\\\\n          checkboxSize={\\\\n            radios('size', radioOptions.size, 'sm') as tCheckboxSize\\\\n          }\\\\n          labelColor={text('Label Color', 'black')}\\\\n        />\\\\n      </CheckboxFieldGroup>\\\\n    </Card>\\\\n  </ThemeWrapper>\\\\n), {__STORY__, __ADDS_MAP__,__MAIN_FILE_LOCATION__,__MODULE_DEPENDENCIES__,__LOCAL_DEPENDENCIES__,__SOURCE_PREFIX__,__IDS_TO_FRAMEWORKS__});\\\",\\\"locationsMap\\\":{}},\\\"storySource\\\":{\\\"source\\\":\\\"import React from 'react'\\\\nimport { path } from '..'\\\\nimport CheckboxFieldGroup from '.'\\\\nimport {\\\\n  withKnobs,\\\\n  boolean,\\\\n  radios,\\\\n  number,\\\\n  text\\\\n} from '@storybook/addon-knobs'\\\\nimport { action } from '@storybook/addon-actions'\\\\nimport ThemeWrapper from '../../../utilities/components/ThemeWrapper'\\\\nimport Checkbox, { tCheckboxSize } from '../Checkbox'\\\\n\\\\nimport Card from '../Card'\\\\n\\\\nexport default {\\\\n  title: `${path}/CheckboxFieldGroup`,\\\\n  decorators: [withKnobs],\\\\n  component: CheckboxFieldGroup\\\\n}\\\\n\\\\nconst radioOptions = {\\\\n  size: { sm: 'sm', md: 'md', lg: 'lg' }\\\\n}\\\\n\\\\nexport const withDefault = () => (\\\\n  <ThemeWrapper>\\\\n    <Card>\\\\n      <CheckboxFieldGroup\\\\n        id='defaultCheckboxFieldGroup'\\\\n        orientation={boolean('orientation', false)}\\\\n        spacing={number('spacing', 10)}\\\\n        variant='default'\\\\n        width='400px'\\\\n        label='Gender'\\\\n        labelColor={text('Group Label Color', 'black')}\\\\n      >\\\\n        <Checkbox\\\\n          id='checkbox1'\\\\n          onChange={action('CheckboxField 1 Changed')}\\\\n          disabled={boolean('disabled', false, 'CheckboxField 1')}\\\\n          checked={boolean('checked', true, 'CheckboxField 1')}\\\\n          name={text('name', 'gender', 'CheckboxField 1')}\\\\n          value={text('value', 'Male', 'CheckboxField 1')}\\\\n          label={text('label', 'Male', 'CheckboxField 1')}\\\\n          checkboxSize={\\\\n            radios('size', radioOptions.size, 'sm') as tCheckboxSize\\\\n          }\\\\n          labelColor={text('Label Color', 'black')}\\\\n        />\\\\n        <Checkbox\\\\n          id='checkbox2'\\\\n          onChange={action('CheckboxField 2 Changed')}\\\\n          disabled={boolean('disabled', false, 'CheckboxField 2')}\\\\n          checked={boolean('checked', true, 'CheckboxField 2')}\\\\n          name={text('name', 'gender', 'CheckboxField 2')}\\\\n          value={text('value', 'Female', 'CheckboxField 2')}\\\\n          label={text('label', 'Female', 'CheckboxField 2')}\\\\n          checkboxSize={\\\\n            radios('size', radioOptions.size, 'sm') as tCheckboxSize\\\\n          }\\\\n          labelColor={text('Label Color', 'black')}\\\\n        />\\\\n        <Checkbox\\\\n          id='checkbox3'\\\\n          onChange={action('CheckboxField 3 Changed')}\\\\n          disabled={boolean('disabled', false, 'CheckboxField 3')}\\\\n          checked={boolean('checked', true, 'CheckboxField 3')}\\\\n          name={text('name', 'gender', 'CheckboxField 3')}\\\\n          value={text('value', 'Others', 'CheckboxField 3')}\\\\n          label={text('label', 'Others', 'CheckboxField 3')}\\\\n          checkboxSize={\\\\n            radios('size', radioOptions.size, 'sm') as tCheckboxSize\\\\n          }\\\\n          labelColor={text('Label Color', 'black')}\\\\n        />\\\\n      </CheckboxFieldGroup>\\\\n    </Card>\\\\n  </ThemeWrapper>\\\\n)\\\\n\\\\nexport const withForm = () => (\\\\n  <ThemeWrapper>\\\\n    <Card>\\\\n      <CheckboxFieldGroup\\\\n        id='CheckboxFieldGroup2'\\\\n        orientation={boolean('orientation', false)}\\\\n        spacing={number('spacing', 10)}\\\\n        variant='form'\\\\n        label='Gender'\\\\n        width={text('width', '50%')}\\\\n        labelColor={text('Group Label Color', 'black')}\\\\n        error={boolean('error', true)}\\\\n        errorMessage={text('errorMessage', 'Some Field Error')}\\\\n        required={boolean('required', false)}\\\\n      >\\\\n        <Checkbox\\\\n          id='checkbox1'\\\\n          onChange={action('CheckboxField 1 Changed')}\\\\n          disabled={boolean('disabled', false, 'CheckboxField 1')}\\\\n          checked={boolean('checked', true, 'CheckboxField 1')}\\\\n          name={text('name', 'gender', 'CheckboxField 1')}\\\\n          value={text('value', 'Male', 'CheckboxField 1')}\\\\n          label={text('label', 'Male', 'CheckboxField 1')}\\\\n          checkboxSize={\\\\n            radios('size', radioOptions.size, 'sm') as tCheckboxSize\\\\n          }\\\\n          labelColor={text('Label Color', 'black')}\\\\n        />\\\\n        <Checkbox\\\\n          id='checkbox2'\\\\n          onChange={action('CheckboxField 2 Changed')}\\\\n          disabled={boolean('disabled', false, 'CheckboxField 2')}\\\\n          checked={boolean('checked', true, 'CheckboxField 2')}\\\\n          name={text('name', 'gender', 'CheckboxField 2')}\\\\n          value={text('value', 'Female', 'CheckboxField 2')}\\\\n          label={text('label', 'Female', 'CheckboxField 2')}\\\\n          checkboxSize={\\\\n            radios('size', radioOptions.size, 'sm') as tCheckboxSize\\\\n          }\\\\n        />\\\\n        <Checkbox\\\\n          id='checkbox3'\\\\n          onChange={action('CheckboxField 3 Changed')}\\\\n          disabled={boolean('disabled', false, 'CheckboxField 3')}\\\\n          checked={boolean('checked', true, 'CheckboxField 3')}\\\\n          name={text('name', 'gender', 'CheckboxField 3')}\\\\n          value={text('value', 'Others', 'CheckboxField 3')}\\\\n          label={text('label', 'Others', 'CheckboxField 3')}\\\\n          checkboxSize={\\\\n            radios('size', radioOptions.size, 'sm') as tCheckboxSize\\\\n          }\\\\n          labelColor={text('Label Color', 'black')}\\\\n        />\\\\n      </CheckboxFieldGroup>\\\\n    </Card>\\\\n  </ThemeWrapper>\\\\n)\\\\n\\\",\\\"locationsMap\\\":{}},},\\n  title: `${path}/CheckboxFieldGroup`,\\n  decorators: [withKnobs],\\n  component: CheckboxFieldGroup\\n}\\n\\nconst radioOptions = {\\n  size: { sm: 'sm', md: 'md', lg: 'lg' }\\n}\\n\\nexport const withDefault = addSourceDecorator(addSourceDecorator(() => (\\n  <ThemeWrapper>\\n    <Card>\\n      <CheckboxFieldGroup\\n        id='defaultCheckboxFieldGroup'\\n        orientation={boolean('orientation', false)}\\n        spacing={number('spacing', 10)}\\n        variant='default'\\n        width='400px'\\n        label='Gender'\\n        labelColor={text('Group Label Color', 'black')}\\n      >\\n        <Checkbox\\n          id='checkbox1'\\n          onChange={action('CheckboxField 1 Changed')}\\n          disabled={boolean('disabled', false, 'CheckboxField 1')}\\n          checked={boolean('checked', true, 'CheckboxField 1')}\\n          name={text('name', 'gender', 'CheckboxField 1')}\\n          value={text('value', 'Male', 'CheckboxField 1')}\\n          label={text('label', 'Male', 'CheckboxField 1')}\\n          checkboxSize={\\n            radios('size', radioOptions.size, 'sm') as tCheckboxSize\\n          }\\n          labelColor={text('Label Color', 'black')}\\n        />\\n        <Checkbox\\n          id='checkbox2'\\n          onChange={action('CheckboxField 2 Changed')}\\n          disabled={boolean('disabled', false, 'CheckboxField 2')}\\n          checked={boolean('checked', true, 'CheckboxField 2')}\\n          name={text('name', 'gender', 'CheckboxField 2')}\\n          value={text('value', 'Female', 'CheckboxField 2')}\\n          label={text('label', 'Female', 'CheckboxField 2')}\\n          checkboxSize={\\n            radios('size', radioOptions.size, 'sm') as tCheckboxSize\\n          }\\n          labelColor={text('Label Color', 'black')}\\n        />\\n        <Checkbox\\n          id='checkbox3'\\n          onChange={action('CheckboxField 3 Changed')}\\n          disabled={boolean('disabled', false, 'CheckboxField 3')}\\n          checked={boolean('checked', true, 'CheckboxField 3')}\\n          name={text('name', 'gender', 'CheckboxField 3')}\\n          value={text('value', 'Others', 'CheckboxField 3')}\\n          label={text('label', 'Others', 'CheckboxField 3')}\\n          checkboxSize={\\n            radios('size', radioOptions.size, 'sm') as tCheckboxSize\\n          }\\n          labelColor={text('Label Color', 'black')}\\n        />\\n      </CheckboxFieldGroup>\\n    </Card>\\n  </ThemeWrapper>\\n), {__STORY__, __ADDS_MAP__,__MAIN_FILE_LOCATION__,__MODULE_DEPENDENCIES__,__LOCAL_DEPENDENCIES__,__SOURCE_PREFIX__,__IDS_TO_FRAMEWORKS__}), {__STORY__, __ADDS_MAP__,__MAIN_FILE_LOCATION__,__MODULE_DEPENDENCIES__,__LOCAL_DEPENDENCIES__,__SOURCE_PREFIX__,__IDS_TO_FRAMEWORKS__});;\\n\\nexport const withForm = addSourceDecorator(addSourceDecorator(() => (\\n  <ThemeWrapper>\\n    <Card>\\n      <CheckboxFieldGroup\\n        id='CheckboxFieldGroup2'\\n        orientation={boolean('orientation', false)}\\n        spacing={number('spacing', 10)}\\n        variant='form'\\n        label='Gender'\\n        width={text('width', '50%')}\\n        labelColor={text('Group Label Color', 'black')}\\n        error={boolean('error', true)}\\n        errorMessage={text('errorMessage', 'Some Field Error')}\\n        required={boolean('required', false)}\\n      >\\n        <Checkbox\\n          id='checkbox1'\\n          onChange={action('CheckboxField 1 Changed')}\\n          disabled={boolean('disabled', false, 'CheckboxField 1')}\\n          checked={boolean('checked', true, 'CheckboxField 1')}\\n          name={text('name', 'gender', 'CheckboxField 1')}\\n          value={text('value', 'Male', 'CheckboxField 1')}\\n          label={text('label', 'Male', 'CheckboxField 1')}\\n          checkboxSize={\\n            radios('size', radioOptions.size, 'sm') as tCheckboxSize\\n          }\\n          labelColor={text('Label Color', 'black')}\\n        />\\n        <Checkbox\\n          id='checkbox2'\\n          onChange={action('CheckboxField 2 Changed')}\\n          disabled={boolean('disabled', false, 'CheckboxField 2')}\\n          checked={boolean('checked', true, 'CheckboxField 2')}\\n          name={text('name', 'gender', 'CheckboxField 2')}\\n          value={text('value', 'Female', 'CheckboxField 2')}\\n          label={text('label', 'Female', 'CheckboxField 2')}\\n          checkboxSize={\\n            radios('size', radioOptions.size, 'sm') as tCheckboxSize\\n          }\\n        />\\n        <Checkbox\\n          id='checkbox3'\\n          onChange={action('CheckboxField 3 Changed')}\\n          disabled={boolean('disabled', false, 'CheckboxField 3')}\\n          checked={boolean('checked', true, 'CheckboxField 3')}\\n          name={text('name', 'gender', 'CheckboxField 3')}\\n          value={text('value', 'Others', 'CheckboxField 3')}\\n          label={text('label', 'Others', 'CheckboxField 3')}\\n          checkboxSize={\\n            radios('size', radioOptions.size, 'sm') as tCheckboxSize\\n          }\\n          labelColor={text('Label Color', 'black')}\\n        />\\n      </CheckboxFieldGroup>\\n    </Card>\\n  </ThemeWrapper>\\n), {__STORY__, __ADDS_MAP__,__MAIN_FILE_LOCATION__,__MODULE_DEPENDENCIES__,__LOCAL_DEPENDENCIES__,__SOURCE_PREFIX__,__IDS_TO_FRAMEWORKS__}), {__STORY__, __ADDS_MAP__,__MAIN_FILE_LOCATION__,__MODULE_DEPENDENCIES__,__LOCAL_DEPENDENCIES__,__SOURCE_PREFIX__,__IDS_TO_FRAMEWORKS__});\"; // @ts-ignore\n\nvar __ADDS_MAP__ = {}; // @ts-ignore\n\nvar __MAIN_FILE_LOCATION__ = \"/CheckboxFieldGroup.stories.tsx\"; // @ts-ignore\n\nvar __MODULE_DEPENDENCIES__ = []; // @ts-ignore\n\nvar __LOCAL_DEPENDENCIES__ = {}; // @ts-ignore\n\nvar __IDS_TO_FRAMEWORKS__ = {};\n/* eslint-disable */\n// @ts-nocheck\n// @ts-ignore\n\nvar withSourceLoader = require('@storybook/source-loader/preview').withSource; // @ts-ignore\n\n\nvar addSourceDecorator = require(\"@storybook/source-loader/preview\").addSource; // @ts-ignore\n\n\nvar __SOURCE_PREFIX__ = \"/Users/farhanansari/Code/ui-library/src/components/atoms/CheckboxFieldGroup\"; // @ts-ignore\n\nvar __STORY__ = \"\\n\\n// @ts-nocheck\\n// @ts-ignore\\nvar withSourceLoader = require('@storybook/source-loader/preview').withSource;\\n// @ts-ignore\\nvar addSourceDecorator = require(\\\"@storybook/source-loader/preview\\\").addSource;\\n// @ts-ignore\\nvar __SOURCE_PREFIX__ = \\\"/Users/farhanansari/Code/ui-library/src/components/atoms/CheckboxFieldGroup\\\";\\n// @ts-ignore\\nvar __STORY__ = \\\"import React from 'react'\\\\nimport { path } from '..'\\\\nimport CheckboxFieldGroup from '.'\\\\nimport {\\\\n  withKnobs,\\\\n  boolean,\\\\n  radios,\\\\n  number,\\\\n  text\\\\n} from '@storybook/addon-knobs'\\\\nimport { action } from '@storybook/addon-actions'\\\\nimport ThemeWrapper from '../../../utilities/components/ThemeWrapper'\\\\nimport Checkbox, { tCheckboxSize } from '../Checkbox'\\\\n\\\\nimport Card from '../Card'\\\\n\\\\nexport default {\\\\n  title: `${path}/CheckboxFieldGroup`,\\\\n  decorators: [withKnobs],\\\\n  component: CheckboxFieldGroup\\\\n}\\\\n\\\\nconst radioOptions = {\\\\n  size: { sm: 'sm', md: 'md', lg: 'lg' }\\\\n}\\\\n\\\\nexport const withDefault = () => (\\\\n  <ThemeWrapper>\\\\n    <Card>\\\\n      <CheckboxFieldGroup\\\\n        id='defaultCheckboxFieldGroup'\\\\n        orientation={boolean('orientation', false)}\\\\n        spacing={number('spacing', 10)}\\\\n        variant='default'\\\\n        width='400px'\\\\n        label='Gender'\\\\n        labelColor={text('Group Label Color', 'black')}\\\\n      >\\\\n        <Checkbox\\\\n          id='checkbox1'\\\\n          onChange={action('CheckboxField 1 Changed')}\\\\n          disabled={boolean('disabled', false, 'CheckboxField 1')}\\\\n          checked={boolean('checked', true, 'CheckboxField 1')}\\\\n          name={text('name', 'gender', 'CheckboxField 1')}\\\\n          value={text('value', 'Male', 'CheckboxField 1')}\\\\n          label={text('label', 'Male', 'CheckboxField 1')}\\\\n          checkboxSize={\\\\n            radios('size', radioOptions.size, 'sm') as tCheckboxSize\\\\n          }\\\\n          labelColor={text('Label Color', 'black')}\\\\n        />\\\\n        <Checkbox\\\\n          id='checkbox2'\\\\n          onChange={action('CheckboxField 2 Changed')}\\\\n          disabled={boolean('disabled', false, 'CheckboxField 2')}\\\\n          checked={boolean('checked', true, 'CheckboxField 2')}\\\\n          name={text('name', 'gender', 'CheckboxField 2')}\\\\n          value={text('value', 'Female', 'CheckboxField 2')}\\\\n          label={text('label', 'Female', 'CheckboxField 2')}\\\\n          checkboxSize={\\\\n            radios('size', radioOptions.size, 'sm') as tCheckboxSize\\\\n          }\\\\n          labelColor={text('Label Color', 'black')}\\\\n        />\\\\n        <Checkbox\\\\n          id='checkbox3'\\\\n          onChange={action('CheckboxField 3 Changed')}\\\\n          disabled={boolean('disabled', false, 'CheckboxField 3')}\\\\n          checked={boolean('checked', true, 'CheckboxField 3')}\\\\n          name={text('name', 'gender', 'CheckboxField 3')}\\\\n          value={text('value', 'Others', 'CheckboxField 3')}\\\\n          label={text('label', 'Others', 'CheckboxField 3')}\\\\n          checkboxSize={\\\\n            radios('size', radioOptions.size, 'sm') as tCheckboxSize\\\\n          }\\\\n          labelColor={text('Label Color', 'black')}\\\\n        />\\\\n      </CheckboxFieldGroup>\\\\n    </Card>\\\\n  </ThemeWrapper>\\\\n)\\\\n\\\\nexport const withForm = () => (\\\\n  <ThemeWrapper>\\\\n    <Card>\\\\n      <CheckboxFieldGroup\\\\n        id='CheckboxFieldGroup2'\\\\n        orientation={boolean('orientation', false)}\\\\n        spacing={number('spacing', 10)}\\\\n        variant='form'\\\\n        label='Gender'\\\\n        width={text('width', '50%')}\\\\n        labelColor={text('Group Label Color', 'black')}\\\\n        error={boolean('error', true)}\\\\n        errorMessage={text('errorMessage', 'Some Field Error')}\\\\n        required={boolean('required', false)}\\\\n      >\\\\n        <Checkbox\\\\n          id='checkbox1'\\\\n          onChange={action('CheckboxField 1 Changed')}\\\\n          disabled={boolean('disabled', false, 'CheckboxField 1')}\\\\n          checked={boolean('checked', true, 'CheckboxField 1')}\\\\n          name={text('name', 'gender', 'CheckboxField 1')}\\\\n          value={text('value', 'Male', 'CheckboxField 1')}\\\\n          label={text('label', 'Male', 'CheckboxField 1')}\\\\n          checkboxSize={\\\\n            radios('size', radioOptions.size, 'sm') as tCheckboxSize\\\\n          }\\\\n          labelColor={text('Label Color', 'black')}\\\\n        />\\\\n        <Checkbox\\\\n          id='checkbox2'\\\\n          onChange={action('CheckboxField 2 Changed')}\\\\n          disabled={boolean('disabled', false, 'CheckboxField 2')}\\\\n          checked={boolean('checked', true, 'CheckboxField 2')}\\\\n          name={text('name', 'gender', 'CheckboxField 2')}\\\\n          value={text('value', 'Female', 'CheckboxField 2')}\\\\n          label={text('label', 'Female', 'CheckboxField 2')}\\\\n          checkboxSize={\\\\n            radios('size', radioOptions.size, 'sm') as tCheckboxSize\\\\n          }\\\\n        />\\\\n        <Checkbox\\\\n          id='checkbox3'\\\\n          onChange={action('CheckboxField 3 Changed')}\\\\n          disabled={boolean('disabled', false, 'CheckboxField 3')}\\\\n          checked={boolean('checked', true, 'CheckboxField 3')}\\\\n          name={text('name', 'gender', 'CheckboxField 3')}\\\\n          value={text('value', 'Others', 'CheckboxField 3')}\\\\n          label={text('label', 'Others', 'CheckboxField 3')}\\\\n          checkboxSize={\\\\n            radios('size', radioOptions.size, 'sm') as tCheckboxSize\\\\n          }\\\\n          labelColor={text('Label Color', 'black')}\\\\n        />\\\\n      </CheckboxFieldGroup>\\\\n    </Card>\\\\n  </ThemeWrapper>\\\\n)\\\\n\\\";\\n// @ts-ignore\\nvar __ADDS_MAP__ = {};\\n// @ts-ignore\\nvar __MAIN_FILE_LOCATION__ = \\\"/CheckboxFieldGroup.stories.tsx\\\";\\n// @ts-ignore\\nvar __MODULE_DEPENDENCIES__ = [];\\n// @ts-ignore\\nvar __LOCAL_DEPENDENCIES__ = {};\\n// @ts-ignore\\nvar __IDS_TO_FRAMEWORKS__ = {};\\n        \\nimport React from 'react'\\nimport { path } from '..'\\nimport CheckboxFieldGroup from '.'\\nimport {\\n  withKnobs,\\n  boolean,\\n  radios,\\n  number,\\n  text\\n} from '@storybook/addon-knobs'\\nimport { action } from '@storybook/addon-actions'\\nimport ThemeWrapper from '../../../utilities/components/ThemeWrapper'\\nimport Checkbox, { tCheckboxSize } from '../Checkbox'\\n\\nimport Card from '../Card'\\n\\nexport default {parameters: {\\\"storySource\\\":{\\\"source\\\":\\\"import React from 'react'\\\\nimport { path } from '..'\\\\nimport CheckboxFieldGroup from '.'\\\\nimport {\\\\n  withKnobs,\\\\n  boolean,\\\\n  radios,\\\\n  number,\\\\n  text\\\\n} from '@storybook/addon-knobs'\\\\nimport { action } from '@storybook/addon-actions'\\\\nimport ThemeWrapper from '../../../utilities/components/ThemeWrapper'\\\\nimport Checkbox, { tCheckboxSize } from '../Checkbox'\\\\n\\\\nimport Card from '../Card'\\\\n\\\\nexport default {\\\\n  title: `${path}/CheckboxFieldGroup`,\\\\n  decorators: [withKnobs],\\\\n  component: CheckboxFieldGroup\\\\n}\\\\n\\\\nconst radioOptions = {\\\\n  size: { sm: 'sm', md: 'md', lg: 'lg' }\\\\n}\\\\n\\\\nexport const withDefault = () => (\\\\n  <ThemeWrapper>\\\\n    <Card>\\\\n      <CheckboxFieldGroup\\\\n        id='defaultCheckboxFieldGroup'\\\\n        orientation={boolean('orientation', false)}\\\\n        spacing={number('spacing', 10)}\\\\n        variant='default'\\\\n        width='400px'\\\\n        label='Gender'\\\\n        labelColor={text('Group Label Color', 'black')}\\\\n      >\\\\n        <Checkbox\\\\n          id='checkbox1'\\\\n          onChange={action('CheckboxField 1 Changed')}\\\\n          disabled={boolean('disabled', false, 'CheckboxField 1')}\\\\n          checked={boolean('checked', true, 'CheckboxField 1')}\\\\n          name={text('name', 'gender', 'CheckboxField 1')}\\\\n          value={text('value', 'Male', 'CheckboxField 1')}\\\\n          label={text('label', 'Male', 'CheckboxField 1')}\\\\n          checkboxSize={\\\\n            radios('size', radioOptions.size, 'sm') as tCheckboxSize\\\\n          }\\\\n          labelColor={text('Label Color', 'black')}\\\\n        />\\\\n        <Checkbox\\\\n          id='checkbox2'\\\\n          onChange={action('CheckboxField 2 Changed')}\\\\n          disabled={boolean('disabled', false, 'CheckboxField 2')}\\\\n          checked={boolean('checked', true, 'CheckboxField 2')}\\\\n          name={text('name', 'gender', 'CheckboxField 2')}\\\\n          value={text('value', 'Female', 'CheckboxField 2')}\\\\n          label={text('label', 'Female', 'CheckboxField 2')}\\\\n          checkboxSize={\\\\n            radios('size', radioOptions.size, 'sm') as tCheckboxSize\\\\n          }\\\\n          labelColor={text('Label Color', 'black')}\\\\n        />\\\\n        <Checkbox\\\\n          id='checkbox3'\\\\n          onChange={action('CheckboxField 3 Changed')}\\\\n          disabled={boolean('disabled', false, 'CheckboxField 3')}\\\\n          checked={boolean('checked', true, 'CheckboxField 3')}\\\\n          name={text('name', 'gender', 'CheckboxField 3')}\\\\n          value={text('value', 'Others', 'CheckboxField 3')}\\\\n          label={text('label', 'Others', 'CheckboxField 3')}\\\\n          checkboxSize={\\\\n            radios('size', radioOptions.size, 'sm') as tCheckboxSize\\\\n          }\\\\n          labelColor={text('Label Color', 'black')}\\\\n        />\\\\n      </CheckboxFieldGroup>\\\\n    </Card>\\\\n  </ThemeWrapper>\\\\n)\\\\n\\\\nexport const withForm = () => (\\\\n  <ThemeWrapper>\\\\n    <Card>\\\\n      <CheckboxFieldGroup\\\\n        id='CheckboxFieldGroup2'\\\\n        orientation={boolean('orientation', false)}\\\\n        spacing={number('spacing', 10)}\\\\n        variant='form'\\\\n        label='Gender'\\\\n        width={text('width', '50%')}\\\\n        labelColor={text('Group Label Color', 'black')}\\\\n        error={boolean('error', true)}\\\\n        errorMessage={text('errorMessage', 'Some Field Error')}\\\\n        required={boolean('required', false)}\\\\n      >\\\\n        <Checkbox\\\\n          id='checkbox1'\\\\n          onChange={action('CheckboxField 1 Changed')}\\\\n          disabled={boolean('disabled', false, 'CheckboxField 1')}\\\\n          checked={boolean('checked', true, 'CheckboxField 1')}\\\\n          name={text('name', 'gender', 'CheckboxField 1')}\\\\n          value={text('value', 'Male', 'CheckboxField 1')}\\\\n          label={text('label', 'Male', 'CheckboxField 1')}\\\\n          checkboxSize={\\\\n            radios('size', radioOptions.size, 'sm') as tCheckboxSize\\\\n          }\\\\n          labelColor={text('Label Color', 'black')}\\\\n        />\\\\n        <Checkbox\\\\n          id='checkbox2'\\\\n          onChange={action('CheckboxField 2 Changed')}\\\\n          disabled={boolean('disabled', false, 'CheckboxField 2')}\\\\n          checked={boolean('checked', true, 'CheckboxField 2')}\\\\n          name={text('name', 'gender', 'CheckboxField 2')}\\\\n          value={text('value', 'Female', 'CheckboxField 2')}\\\\n          label={text('label', 'Female', 'CheckboxField 2')}\\\\n          checkboxSize={\\\\n            radios('size', radioOptions.size, 'sm') as tCheckboxSize\\\\n          }\\\\n        />\\\\n        <Checkbox\\\\n          id='checkbox3'\\\\n          onChange={action('CheckboxField 3 Changed')}\\\\n          disabled={boolean('disabled', false, 'CheckboxField 3')}\\\\n          checked={boolean('checked', true, 'CheckboxField 3')}\\\\n          name={text('name', 'gender', 'CheckboxField 3')}\\\\n          value={text('value', 'Others', 'CheckboxField 3')}\\\\n          label={text('label', 'Others', 'CheckboxField 3')}\\\\n          checkboxSize={\\\\n            radios('size', radioOptions.size, 'sm') as tCheckboxSize\\\\n          }\\\\n          labelColor={text('Label Color', 'black')}\\\\n        />\\\\n      </CheckboxFieldGroup>\\\\n    </Card>\\\\n  </ThemeWrapper>\\\\n)\\\\n\\\",\\\"locationsMap\\\":{}},},\\n  title: `${path}/CheckboxFieldGroup`,\\n  decorators: [withKnobs],\\n  component: CheckboxFieldGroup\\n}\\n\\nconst radioOptions = {\\n  size: { sm: 'sm', md: 'md', lg: 'lg' }\\n}\\n\\nexport const withDefault = addSourceDecorator(() => (\\n  <ThemeWrapper>\\n    <Card>\\n      <CheckboxFieldGroup\\n        id='defaultCheckboxFieldGroup'\\n        orientation={boolean('orientation', false)}\\n        spacing={number('spacing', 10)}\\n        variant='default'\\n        width='400px'\\n        label='Gender'\\n        labelColor={text('Group Label Color', 'black')}\\n      >\\n        <Checkbox\\n          id='checkbox1'\\n          onChange={action('CheckboxField 1 Changed')}\\n          disabled={boolean('disabled', false, 'CheckboxField 1')}\\n          checked={boolean('checked', true, 'CheckboxField 1')}\\n          name={text('name', 'gender', 'CheckboxField 1')}\\n          value={text('value', 'Male', 'CheckboxField 1')}\\n          label={text('label', 'Male', 'CheckboxField 1')}\\n          checkboxSize={\\n            radios('size', radioOptions.size, 'sm') as tCheckboxSize\\n          }\\n          labelColor={text('Label Color', 'black')}\\n        />\\n        <Checkbox\\n          id='checkbox2'\\n          onChange={action('CheckboxField 2 Changed')}\\n          disabled={boolean('disabled', false, 'CheckboxField 2')}\\n          checked={boolean('checked', true, 'CheckboxField 2')}\\n          name={text('name', 'gender', 'CheckboxField 2')}\\n          value={text('value', 'Female', 'CheckboxField 2')}\\n          label={text('label', 'Female', 'CheckboxField 2')}\\n          checkboxSize={\\n            radios('size', radioOptions.size, 'sm') as tCheckboxSize\\n          }\\n          labelColor={text('Label Color', 'black')}\\n        />\\n        <Checkbox\\n          id='checkbox3'\\n          onChange={action('CheckboxField 3 Changed')}\\n          disabled={boolean('disabled', false, 'CheckboxField 3')}\\n          checked={boolean('checked', true, 'CheckboxField 3')}\\n          name={text('name', 'gender', 'CheckboxField 3')}\\n          value={text('value', 'Others', 'CheckboxField 3')}\\n          label={text('label', 'Others', 'CheckboxField 3')}\\n          checkboxSize={\\n            radios('size', radioOptions.size, 'sm') as tCheckboxSize\\n          }\\n          labelColor={text('Label Color', 'black')}\\n        />\\n      </CheckboxFieldGroup>\\n    </Card>\\n  </ThemeWrapper>\\n), {__STORY__, __ADDS_MAP__,__MAIN_FILE_LOCATION__,__MODULE_DEPENDENCIES__,__LOCAL_DEPENDENCIES__,__SOURCE_PREFIX__,__IDS_TO_FRAMEWORKS__});\\n\\nexport const withForm = addSourceDecorator(() => (\\n  <ThemeWrapper>\\n    <Card>\\n      <CheckboxFieldGroup\\n        id='CheckboxFieldGroup2'\\n        orientation={boolean('orientation', false)}\\n        spacing={number('spacing', 10)}\\n        variant='form'\\n        label='Gender'\\n        width={text('width', '50%')}\\n        labelColor={text('Group Label Color', 'black')}\\n        error={boolean('error', true)}\\n        errorMessage={text('errorMessage', 'Some Field Error')}\\n        required={boolean('required', false)}\\n      >\\n        <Checkbox\\n          id='checkbox1'\\n          onChange={action('CheckboxField 1 Changed')}\\n          disabled={boolean('disabled', false, 'CheckboxField 1')}\\n          checked={boolean('checked', true, 'CheckboxField 1')}\\n          name={text('name', 'gender', 'CheckboxField 1')}\\n          value={text('value', 'Male', 'CheckboxField 1')}\\n          label={text('label', 'Male', 'CheckboxField 1')}\\n          checkboxSize={\\n            radios('size', radioOptions.size, 'sm') as tCheckboxSize\\n          }\\n          labelColor={text('Label Color', 'black')}\\n        />\\n        <Checkbox\\n          id='checkbox2'\\n          onChange={action('CheckboxField 2 Changed')}\\n          disabled={boolean('disabled', false, 'CheckboxField 2')}\\n          checked={boolean('checked', true, 'CheckboxField 2')}\\n          name={text('name', 'gender', 'CheckboxField 2')}\\n          value={text('value', 'Female', 'CheckboxField 2')}\\n          label={text('label', 'Female', 'CheckboxField 2')}\\n          checkboxSize={\\n            radios('size', radioOptions.size, 'sm') as tCheckboxSize\\n          }\\n        />\\n        <Checkbox\\n          id='checkbox3'\\n          onChange={action('CheckboxField 3 Changed')}\\n          disabled={boolean('disabled', false, 'CheckboxField 3')}\\n          checked={boolean('checked', true, 'CheckboxField 3')}\\n          name={text('name', 'gender', 'CheckboxField 3')}\\n          value={text('value', 'Others', 'CheckboxField 3')}\\n          label={text('label', 'Others', 'CheckboxField 3')}\\n          checkboxSize={\\n            radios('size', radioOptions.size, 'sm') as tCheckboxSize\\n          }\\n          labelColor={text('Label Color', 'black')}\\n        />\\n      </CheckboxFieldGroup>\\n    </Card>\\n  </ThemeWrapper>\\n), {__STORY__, __ADDS_MAP__,__MAIN_FILE_LOCATION__,__MODULE_DEPENDENCIES__,__LOCAL_DEPENDENCIES__,__SOURCE_PREFIX__,__IDS_TO_FRAMEWORKS__});\"; // @ts-ignore\n\nvar __ADDS_MAP__ = {}; // @ts-ignore\n\nvar __MAIN_FILE_LOCATION__ = \"/CheckboxFieldGroup.stories.tsx\"; // @ts-ignore\n\nvar __MODULE_DEPENDENCIES__ = []; // @ts-ignore\n\nvar __LOCAL_DEPENDENCIES__ = {}; // @ts-ignore\n\nvar __IDS_TO_FRAMEWORKS__ = {};\n/* eslint-disable */\n// @ts-nocheck\n// @ts-ignore\n\nvar withSourceLoader = require('@storybook/source-loader/preview').withSource; // @ts-ignore\n\n\nvar addSourceDecorator = require(\"@storybook/source-loader/preview\").addSource; // @ts-ignore\n\n\nvar __SOURCE_PREFIX__ = \"/Users/farhanansari/Code/ui-library/src/components/atoms/CheckboxFieldGroup\"; // @ts-ignore\n\nvar __STORY__ = \"import React from 'react'\\nimport { path } from '..'\\nimport CheckboxFieldGroup from '.'\\nimport {\\n  withKnobs,\\n  boolean,\\n  radios,\\n  number,\\n  text\\n} from '@storybook/addon-knobs'\\nimport { action } from '@storybook/addon-actions'\\nimport ThemeWrapper from '../../../utilities/components/ThemeWrapper'\\nimport Checkbox, { tCheckboxSize } from '../Checkbox'\\n\\nimport Card from '../Card'\\n\\nexport default {\\n  title: `${path}/CheckboxFieldGroup`,\\n  decorators: [withKnobs],\\n  component: CheckboxFieldGroup\\n}\\n\\nconst radioOptions = {\\n  size: { sm: 'sm', md: 'md', lg: 'lg' }\\n}\\n\\nexport const withDefault = () => (\\n  <ThemeWrapper>\\n    <Card>\\n      <CheckboxFieldGroup\\n        id='defaultCheckboxFieldGroup'\\n        orientation={boolean('orientation', false)}\\n        spacing={number('spacing', 10)}\\n        variant='default'\\n        width='400px'\\n        label='Gender'\\n        labelColor={text('Group Label Color', 'black')}\\n      >\\n        <Checkbox\\n          id='checkbox1'\\n          onChange={action('CheckboxField 1 Changed')}\\n          disabled={boolean('disabled', false, 'CheckboxField 1')}\\n          checked={boolean('checked', true, 'CheckboxField 1')}\\n          name={text('name', 'gender', 'CheckboxField 1')}\\n          value={text('value', 'Male', 'CheckboxField 1')}\\n          label={text('label', 'Male', 'CheckboxField 1')}\\n          checkboxSize={\\n            radios('size', radioOptions.size, 'sm') as tCheckboxSize\\n          }\\n          labelColor={text('Label Color', 'black')}\\n        />\\n        <Checkbox\\n          id='checkbox2'\\n          onChange={action('CheckboxField 2 Changed')}\\n          disabled={boolean('disabled', false, 'CheckboxField 2')}\\n          checked={boolean('checked', true, 'CheckboxField 2')}\\n          name={text('name', 'gender', 'CheckboxField 2')}\\n          value={text('value', 'Female', 'CheckboxField 2')}\\n          label={text('label', 'Female', 'CheckboxField 2')}\\n          checkboxSize={\\n            radios('size', radioOptions.size, 'sm') as tCheckboxSize\\n          }\\n          labelColor={text('Label Color', 'black')}\\n        />\\n        <Checkbox\\n          id='checkbox3'\\n          onChange={action('CheckboxField 3 Changed')}\\n          disabled={boolean('disabled', false, 'CheckboxField 3')}\\n          checked={boolean('checked', true, 'CheckboxField 3')}\\n          name={text('name', 'gender', 'CheckboxField 3')}\\n          value={text('value', 'Others', 'CheckboxField 3')}\\n          label={text('label', 'Others', 'CheckboxField 3')}\\n          checkboxSize={\\n            radios('size', radioOptions.size, 'sm') as tCheckboxSize\\n          }\\n          labelColor={text('Label Color', 'black')}\\n        />\\n      </CheckboxFieldGroup>\\n    </Card>\\n  </ThemeWrapper>\\n)\\n\\nexport const withForm = () => (\\n  <ThemeWrapper>\\n    <Card>\\n      <CheckboxFieldGroup\\n        id='CheckboxFieldGroup2'\\n        orientation={boolean('orientation', false)}\\n        spacing={number('spacing', 10)}\\n        variant='form'\\n        label='Gender'\\n        width={text('width', '50%')}\\n        labelColor={text('Group Label Color', 'black')}\\n        error={boolean('error', true)}\\n        errorMessage={text('errorMessage', 'Some Field Error')}\\n        required={boolean('required', false)}\\n      >\\n        <Checkbox\\n          id='checkbox1'\\n          onChange={action('CheckboxField 1 Changed')}\\n          disabled={boolean('disabled', false, 'CheckboxField 1')}\\n          checked={boolean('checked', true, 'CheckboxField 1')}\\n          name={text('name', 'gender', 'CheckboxField 1')}\\n          value={text('value', 'Male', 'CheckboxField 1')}\\n          label={text('label', 'Male', 'CheckboxField 1')}\\n          checkboxSize={\\n            radios('size', radioOptions.size, 'sm') as tCheckboxSize\\n          }\\n          labelColor={text('Label Color', 'black')}\\n        />\\n        <Checkbox\\n          id='checkbox2'\\n          onChange={action('CheckboxField 2 Changed')}\\n          disabled={boolean('disabled', false, 'CheckboxField 2')}\\n          checked={boolean('checked', true, 'CheckboxField 2')}\\n          name={text('name', 'gender', 'CheckboxField 2')}\\n          value={text('value', 'Female', 'CheckboxField 2')}\\n          label={text('label', 'Female', 'CheckboxField 2')}\\n          checkboxSize={\\n            radios('size', radioOptions.size, 'sm') as tCheckboxSize\\n          }\\n        />\\n        <Checkbox\\n          id='checkbox3'\\n          onChange={action('CheckboxField 3 Changed')}\\n          disabled={boolean('disabled', false, 'CheckboxField 3')}\\n          checked={boolean('checked', true, 'CheckboxField 3')}\\n          name={text('name', 'gender', 'CheckboxField 3')}\\n          value={text('value', 'Others', 'CheckboxField 3')}\\n          label={text('label', 'Others', 'CheckboxField 3')}\\n          checkboxSize={\\n            radios('size', radioOptions.size, 'sm') as tCheckboxSize\\n          }\\n          labelColor={text('Label Color', 'black')}\\n        />\\n      </CheckboxFieldGroup>\\n    </Card>\\n  </ThemeWrapper>\\n)\\n\"; // @ts-ignore\n\nvar __ADDS_MAP__ = {}; // @ts-ignore\n\nvar __MAIN_FILE_LOCATION__ = \"/CheckboxFieldGroup.stories.tsx\"; // @ts-ignore\n\nvar __MODULE_DEPENDENCIES__ = []; // @ts-ignore\n\nvar __LOCAL_DEPENDENCIES__ = {}; // @ts-ignore\n\nvar __IDS_TO_FRAMEWORKS__ = {};\nimport React from 'react';\nimport { path } from '..';\nimport CheckboxFieldGroup from '.';\nimport { withKnobs, boolean as _boolean, radios, number, text } from '@storybook/addon-knobs';\nimport { action } from '@storybook/addon-actions';\nimport ThemeWrapper from '../../../utilities/components/ThemeWrapper';\nimport Checkbox from '../Checkbox';\nimport Card from '../Card';\nexport default {\n  parameters: (_parameters = {\n    \"storySource\": {\n      \"source\": \"\\n\\n// @ts-nocheck\\n// @ts-ignore\\nvar withSourceLoader = require('@storybook/source-loader/preview').withSource;\\n// @ts-ignore\\nvar addSourceDecorator = require(\\\"@storybook/source-loader/preview\\\").addSource;\\n// @ts-ignore\\nvar __SOURCE_PREFIX__ = \\\"/Users/farhanansari/Code/ui-library/src/components/atoms/CheckboxFieldGroup\\\";\\n// @ts-ignore\\nvar __STORY__ = \\\"\\\\n\\\\n// @ts-nocheck\\\\n// @ts-ignore\\\\nvar withSourceLoader = require('@storybook/source-loader/preview').withSource;\\\\n// @ts-ignore\\\\nvar addSourceDecorator = require(\\\\\\\"@storybook/source-loader/preview\\\\\\\").addSource;\\\\n// @ts-ignore\\\\nvar __SOURCE_PREFIX__ = \\\\\\\"/Users/farhanansari/Code/ui-library/src/components/atoms/CheckboxFieldGroup\\\\\\\";\\\\n// @ts-ignore\\\\nvar __STORY__ = \\\\\\\"import React from 'react'\\\\\\\\nimport { path } from '..'\\\\\\\\nimport CheckboxFieldGroup from '.'\\\\\\\\nimport {\\\\\\\\n  withKnobs,\\\\\\\\n  boolean,\\\\\\\\n  radios,\\\\\\\\n  number,\\\\\\\\n  text\\\\\\\\n} from '@storybook/addon-knobs'\\\\\\\\nimport { action } from '@storybook/addon-actions'\\\\\\\\nimport ThemeWrapper from '../../../utilities/components/ThemeWrapper'\\\\\\\\nimport Checkbox, { tCheckboxSize } from '../Checkbox'\\\\\\\\n\\\\\\\\nimport Card from '../Card'\\\\\\\\n\\\\\\\\nexport default {\\\\\\\\n  title: `${path}/CheckboxFieldGroup`,\\\\\\\\n  decorators: [withKnobs],\\\\\\\\n  component: CheckboxFieldGroup\\\\\\\\n}\\\\\\\\n\\\\\\\\nconst radioOptions = {\\\\\\\\n  size: { sm: 'sm', md: 'md', lg: 'lg' }\\\\\\\\n}\\\\\\\\n\\\\\\\\nexport const withDefault = () => (\\\\\\\\n  <ThemeWrapper>\\\\\\\\n    <Card>\\\\\\\\n      <CheckboxFieldGroup\\\\\\\\n        id='defaultCheckboxFieldGroup'\\\\\\\\n        orientation={boolean('orientation', false)}\\\\\\\\n        spacing={number('spacing', 10)}\\\\\\\\n        variant='default'\\\\\\\\n        width='400px'\\\\\\\\n        label='Gender'\\\\\\\\n        labelColor={text('Group Label Color', 'black')}\\\\\\\\n      >\\\\\\\\n        <Checkbox\\\\\\\\n          id='checkbox1'\\\\\\\\n          onChange={action('CheckboxField 1 Changed')}\\\\\\\\n          disabled={boolean('disabled', false, 'CheckboxField 1')}\\\\\\\\n          checked={boolean('checked', true, 'CheckboxField 1')}\\\\\\\\n          name={text('name', 'gender', 'CheckboxField 1')}\\\\\\\\n          value={text('value', 'Male', 'CheckboxField 1')}\\\\\\\\n          label={text('label', 'Male', 'CheckboxField 1')}\\\\\\\\n          checkboxSize={\\\\\\\\n            radios('size', radioOptions.size, 'sm') as tCheckboxSize\\\\\\\\n          }\\\\\\\\n          labelColor={text('Label Color', 'black')}\\\\\\\\n        />\\\\\\\\n        <Checkbox\\\\\\\\n          id='checkbox2'\\\\\\\\n          onChange={action('CheckboxField 2 Changed')}\\\\\\\\n          disabled={boolean('disabled', false, 'CheckboxField 2')}\\\\\\\\n          checked={boolean('checked', true, 'CheckboxField 2')}\\\\\\\\n          name={text('name', 'gender', 'CheckboxField 2')}\\\\\\\\n          value={text('value', 'Female', 'CheckboxField 2')}\\\\\\\\n          label={text('label', 'Female', 'CheckboxField 2')}\\\\\\\\n          checkboxSize={\\\\\\\\n            radios('size', radioOptions.size, 'sm') as tCheckboxSize\\\\\\\\n          }\\\\\\\\n          labelColor={text('Label Color', 'black')}\\\\\\\\n        />\\\\\\\\n        <Checkbox\\\\\\\\n          id='checkbox3'\\\\\\\\n          onChange={action('CheckboxField 3 Changed')}\\\\\\\\n          disabled={boolean('disabled', false, 'CheckboxField 3')}\\\\\\\\n          checked={boolean('checked', true, 'CheckboxField 3')}\\\\\\\\n          name={text('name', 'gender', 'CheckboxField 3')}\\\\\\\\n          value={text('value', 'Others', 'CheckboxField 3')}\\\\\\\\n          label={text('label', 'Others', 'CheckboxField 3')}\\\\\\\\n          checkboxSize={\\\\\\\\n            radios('size', radioOptions.size, 'sm') as tCheckboxSize\\\\\\\\n          }\\\\\\\\n          labelColor={text('Label Color', 'black')}\\\\\\\\n        />\\\\\\\\n      </CheckboxFieldGroup>\\\\\\\\n    </Card>\\\\\\\\n  </ThemeWrapper>\\\\\\\\n)\\\\\\\\n\\\\\\\\nexport const withForm = () => (\\\\\\\\n  <ThemeWrapper>\\\\\\\\n    <Card>\\\\\\\\n      <CheckboxFieldGroup\\\\\\\\n        id='CheckboxFieldGroup2'\\\\\\\\n        orientation={boolean('orientation', false)}\\\\\\\\n        spacing={number('spacing', 10)}\\\\\\\\n        variant='form'\\\\\\\\n        label='Gender'\\\\\\\\n        width={text('width', '50%')}\\\\\\\\n        labelColor={text('Group Label Color', 'black')}\\\\\\\\n        error={boolean('error', true)}\\\\\\\\n        errorMessage={text('errorMessage', 'Some Field Error')}\\\\\\\\n        required={boolean('required', false)}\\\\\\\\n      >\\\\\\\\n        <Checkbox\\\\\\\\n          id='checkbox1'\\\\\\\\n          onChange={action('CheckboxField 1 Changed')}\\\\\\\\n          disabled={boolean('disabled', false, 'CheckboxField 1')}\\\\\\\\n          checked={boolean('checked', true, 'CheckboxField 1')}\\\\\\\\n          name={text('name', 'gender', 'CheckboxField 1')}\\\\\\\\n          value={text('value', 'Male', 'CheckboxField 1')}\\\\\\\\n          label={text('label', 'Male', 'CheckboxField 1')}\\\\\\\\n          checkboxSize={\\\\\\\\n            radios('size', radioOptions.size, 'sm') as tCheckboxSize\\\\\\\\n          }\\\\\\\\n          labelColor={text('Label Color', 'black')}\\\\\\\\n        />\\\\\\\\n        <Checkbox\\\\\\\\n          id='checkbox2'\\\\\\\\n          onChange={action('CheckboxField 2 Changed')}\\\\\\\\n          disabled={boolean('disabled', false, 'CheckboxField 2')}\\\\\\\\n          checked={boolean('checked', true, 'CheckboxField 2')}\\\\\\\\n          name={text('name', 'gender', 'CheckboxField 2')}\\\\\\\\n          value={text('value', 'Female', 'CheckboxField 2')}\\\\\\\\n          label={text('label', 'Female', 'CheckboxField 2')}\\\\\\\\n          checkboxSize={\\\\\\\\n            radios('size', radioOptions.size, 'sm') as tCheckboxSize\\\\\\\\n          }\\\\\\\\n        />\\\\\\\\n        <Checkbox\\\\\\\\n          id='checkbox3'\\\\\\\\n          onChange={action('CheckboxField 3 Changed')}\\\\\\\\n          disabled={boolean('disabled', false, 'CheckboxField 3')}\\\\\\\\n          checked={boolean('checked', true, 'CheckboxField 3')}\\\\\\\\n          name={text('name', 'gender', 'CheckboxField 3')}\\\\\\\\n          value={text('value', 'Others', 'CheckboxField 3')}\\\\\\\\n          label={text('label', 'Others', 'CheckboxField 3')}\\\\\\\\n          checkboxSize={\\\\\\\\n            radios('size', radioOptions.size, 'sm') as tCheckboxSize\\\\\\\\n          }\\\\\\\\n          labelColor={text('Label Color', 'black')}\\\\\\\\n        />\\\\\\\\n      </CheckboxFieldGroup>\\\\\\\\n    </Card>\\\\\\\\n  </ThemeWrapper>\\\\\\\\n)\\\\\\\\n\\\\\\\";\\\\n// @ts-ignore\\\\nvar __ADDS_MAP__ = {};\\\\n// @ts-ignore\\\\nvar __MAIN_FILE_LOCATION__ = \\\\\\\"/CheckboxFieldGroup.stories.tsx\\\\\\\";\\\\n// @ts-ignore\\\\nvar __MODULE_DEPENDENCIES__ = [];\\\\n// @ts-ignore\\\\nvar __LOCAL_DEPENDENCIES__ = {};\\\\n// @ts-ignore\\\\nvar __IDS_TO_FRAMEWORKS__ = {};\\\\n        \\\\nimport React from 'react'\\\\nimport { path } from '..'\\\\nimport CheckboxFieldGroup from '.'\\\\nimport {\\\\n  withKnobs,\\\\n  boolean,\\\\n  radios,\\\\n  number,\\\\n  text\\\\n} from '@storybook/addon-knobs'\\\\nimport { action } from '@storybook/addon-actions'\\\\nimport ThemeWrapper from '../../../utilities/components/ThemeWrapper'\\\\nimport Checkbox, { tCheckboxSize } from '../Checkbox'\\\\n\\\\nimport Card from '../Card'\\\\n\\\\nexport default {parameters: {\\\\\\\"storySource\\\\\\\":{\\\\\\\"source\\\\\\\":\\\\\\\"import React from 'react'\\\\\\\\nimport { path } from '..'\\\\\\\\nimport CheckboxFieldGroup from '.'\\\\\\\\nimport {\\\\\\\\n  withKnobs,\\\\\\\\n  boolean,\\\\\\\\n  radios,\\\\\\\\n  number,\\\\\\\\n  text\\\\\\\\n} from '@storybook/addon-knobs'\\\\\\\\nimport { action } from '@storybook/addon-actions'\\\\\\\\nimport ThemeWrapper from '../../../utilities/components/ThemeWrapper'\\\\\\\\nimport Checkbox, { tCheckboxSize } from '../Checkbox'\\\\\\\\n\\\\\\\\nimport Card from '../Card'\\\\\\\\n\\\\\\\\nexport default {\\\\\\\\n  title: `${path}/CheckboxFieldGroup`,\\\\\\\\n  decorators: [withKnobs],\\\\\\\\n  component: CheckboxFieldGroup\\\\\\\\n}\\\\\\\\n\\\\\\\\nconst radioOptions = {\\\\\\\\n  size: { sm: 'sm', md: 'md', lg: 'lg' }\\\\\\\\n}\\\\\\\\n\\\\\\\\nexport const withDefault = () => (\\\\\\\\n  <ThemeWrapper>\\\\\\\\n    <Card>\\\\\\\\n      <CheckboxFieldGroup\\\\\\\\n        id='defaultCheckboxFieldGroup'\\\\\\\\n        orientation={boolean('orientation', false)}\\\\\\\\n        spacing={number('spacing', 10)}\\\\\\\\n        variant='default'\\\\\\\\n        width='400px'\\\\\\\\n        label='Gender'\\\\\\\\n        labelColor={text('Group Label Color', 'black')}\\\\\\\\n      >\\\\\\\\n        <Checkbox\\\\\\\\n          id='checkbox1'\\\\\\\\n          onChange={action('CheckboxField 1 Changed')}\\\\\\\\n          disabled={boolean('disabled', false, 'CheckboxField 1')}\\\\\\\\n          checked={boolean('checked', true, 'CheckboxField 1')}\\\\\\\\n          name={text('name', 'gender', 'CheckboxField 1')}\\\\\\\\n          value={text('value', 'Male', 'CheckboxField 1')}\\\\\\\\n          label={text('label', 'Male', 'CheckboxField 1')}\\\\\\\\n          checkboxSize={\\\\\\\\n            radios('size', radioOptions.size, 'sm') as tCheckboxSize\\\\\\\\n          }\\\\\\\\n          labelColor={text('Label Color', 'black')}\\\\\\\\n        />\\\\\\\\n        <Checkbox\\\\\\\\n          id='checkbox2'\\\\\\\\n          onChange={action('CheckboxField 2 Changed')}\\\\\\\\n          disabled={boolean('disabled', false, 'CheckboxField 2')}\\\\\\\\n          checked={boolean('checked', true, 'CheckboxField 2')}\\\\\\\\n          name={text('name', 'gender', 'CheckboxField 2')}\\\\\\\\n          value={text('value', 'Female', 'CheckboxField 2')}\\\\\\\\n          label={text('label', 'Female', 'CheckboxField 2')}\\\\\\\\n          checkboxSize={\\\\\\\\n            radios('size', radioOptions.size, 'sm') as tCheckboxSize\\\\\\\\n          }\\\\\\\\n          labelColor={text('Label Color', 'black')}\\\\\\\\n        />\\\\\\\\n        <Checkbox\\\\\\\\n          id='checkbox3'\\\\\\\\n          onChange={action('CheckboxField 3 Changed')}\\\\\\\\n          disabled={boolean('disabled', false, 'CheckboxField 3')}\\\\\\\\n          checked={boolean('checked', true, 'CheckboxField 3')}\\\\\\\\n          name={text('name', 'gender', 'CheckboxField 3')}\\\\\\\\n          value={text('value', 'Others', 'CheckboxField 3')}\\\\\\\\n          label={text('label', 'Others', 'CheckboxField 3')}\\\\\\\\n          checkboxSize={\\\\\\\\n            radios('size', radioOptions.size, 'sm') as tCheckboxSize\\\\\\\\n          }\\\\\\\\n          labelColor={text('Label Color', 'black')}\\\\\\\\n        />\\\\\\\\n      </CheckboxFieldGroup>\\\\\\\\n    </Card>\\\\\\\\n  </ThemeWrapper>\\\\\\\\n)\\\\\\\\n\\\\\\\\nexport const withForm = () => (\\\\\\\\n  <ThemeWrapper>\\\\\\\\n    <Card>\\\\\\\\n      <CheckboxFieldGroup\\\\\\\\n        id='CheckboxFieldGroup2'\\\\\\\\n        orientation={boolean('orientation', false)}\\\\\\\\n        spacing={number('spacing', 10)}\\\\\\\\n        variant='form'\\\\\\\\n        label='Gender'\\\\\\\\n        width={text('width', '50%')}\\\\\\\\n        labelColor={text('Group Label Color', 'black')}\\\\\\\\n        error={boolean('error', true)}\\\\\\\\n        errorMessage={text('errorMessage', 'Some Field Error')}\\\\\\\\n        required={boolean('required', false)}\\\\\\\\n      >\\\\\\\\n        <Checkbox\\\\\\\\n          id='checkbox1'\\\\\\\\n          onChange={action('CheckboxField 1 Changed')}\\\\\\\\n          disabled={boolean('disabled', false, 'CheckboxField 1')}\\\\\\\\n          checked={boolean('checked', true, 'CheckboxField 1')}\\\\\\\\n          name={text('name', 'gender', 'CheckboxField 1')}\\\\\\\\n          value={text('value', 'Male', 'CheckboxField 1')}\\\\\\\\n          label={text('label', 'Male', 'CheckboxField 1')}\\\\\\\\n          checkboxSize={\\\\\\\\n            radios('size', radioOptions.size, 'sm') as tCheckboxSize\\\\\\\\n          }\\\\\\\\n          labelColor={text('Label Color', 'black')}\\\\\\\\n        />\\\\\\\\n        <Checkbox\\\\\\\\n          id='checkbox2'\\\\\\\\n          onChange={action('CheckboxField 2 Changed')}\\\\\\\\n          disabled={boolean('disabled', false, 'CheckboxField 2')}\\\\\\\\n          checked={boolean('checked', true, 'CheckboxField 2')}\\\\\\\\n          name={text('name', 'gender', 'CheckboxField 2')}\\\\\\\\n          value={text('value', 'Female', 'CheckboxField 2')}\\\\\\\\n          label={text('label', 'Female', 'CheckboxField 2')}\\\\\\\\n          checkboxSize={\\\\\\\\n            radios('size', radioOptions.size, 'sm') as tCheckboxSize\\\\\\\\n          }\\\\\\\\n        />\\\\\\\\n        <Checkbox\\\\\\\\n          id='checkbox3'\\\\\\\\n          onChange={action('CheckboxField 3 Changed')}\\\\\\\\n          disabled={boolean('disabled', false, 'CheckboxField 3')}\\\\\\\\n          checked={boolean('checked', true, 'CheckboxField 3')}\\\\\\\\n          name={text('name', 'gender', 'CheckboxField 3')}\\\\\\\\n          value={text('value', 'Others', 'CheckboxField 3')}\\\\\\\\n          label={text('label', 'Others', 'CheckboxField 3')}\\\\\\\\n          checkboxSize={\\\\\\\\n            radios('size', radioOptions.size, 'sm') as tCheckboxSize\\\\\\\\n          }\\\\\\\\n          labelColor={text('Label Color', 'black')}\\\\\\\\n        />\\\\\\\\n      </CheckboxFieldGroup>\\\\\\\\n    </Card>\\\\\\\\n  </ThemeWrapper>\\\\\\\\n)\\\\\\\\n\\\\\\\",\\\\\\\"locationsMap\\\\\\\":{}},},\\\\n  title: `${path}/CheckboxFieldGroup`,\\\\n  decorators: [withKnobs],\\\\n  component: CheckboxFieldGroup\\\\n}\\\\n\\\\nconst radioOptions = {\\\\n  size: { sm: 'sm', md: 'md', lg: 'lg' }\\\\n}\\\\n\\\\nexport const withDefault = addSourceDecorator(() => (\\\\n  <ThemeWrapper>\\\\n    <Card>\\\\n      <CheckboxFieldGroup\\\\n        id='defaultCheckboxFieldGroup'\\\\n        orientation={boolean('orientation', false)}\\\\n        spacing={number('spacing', 10)}\\\\n        variant='default'\\\\n        width='400px'\\\\n        label='Gender'\\\\n        labelColor={text('Group Label Color', 'black')}\\\\n      >\\\\n        <Checkbox\\\\n          id='checkbox1'\\\\n          onChange={action('CheckboxField 1 Changed')}\\\\n          disabled={boolean('disabled', false, 'CheckboxField 1')}\\\\n          checked={boolean('checked', true, 'CheckboxField 1')}\\\\n          name={text('name', 'gender', 'CheckboxField 1')}\\\\n          value={text('value', 'Male', 'CheckboxField 1')}\\\\n          label={text('label', 'Male', 'CheckboxField 1')}\\\\n          checkboxSize={\\\\n            radios('size', radioOptions.size, 'sm') as tCheckboxSize\\\\n          }\\\\n          labelColor={text('Label Color', 'black')}\\\\n        />\\\\n        <Checkbox\\\\n          id='checkbox2'\\\\n          onChange={action('CheckboxField 2 Changed')}\\\\n          disabled={boolean('disabled', false, 'CheckboxField 2')}\\\\n          checked={boolean('checked', true, 'CheckboxField 2')}\\\\n          name={text('name', 'gender', 'CheckboxField 2')}\\\\n          value={text('value', 'Female', 'CheckboxField 2')}\\\\n          label={text('label', 'Female', 'CheckboxField 2')}\\\\n          checkboxSize={\\\\n            radios('size', radioOptions.size, 'sm') as tCheckboxSize\\\\n          }\\\\n          labelColor={text('Label Color', 'black')}\\\\n        />\\\\n        <Checkbox\\\\n          id='checkbox3'\\\\n          onChange={action('CheckboxField 3 Changed')}\\\\n          disabled={boolean('disabled', false, 'CheckboxField 3')}\\\\n          checked={boolean('checked', true, 'CheckboxField 3')}\\\\n          name={text('name', 'gender', 'CheckboxField 3')}\\\\n          value={text('value', 'Others', 'CheckboxField 3')}\\\\n          label={text('label', 'Others', 'CheckboxField 3')}\\\\n          checkboxSize={\\\\n            radios('size', radioOptions.size, 'sm') as tCheckboxSize\\\\n          }\\\\n          labelColor={text('Label Color', 'black')}\\\\n        />\\\\n      </CheckboxFieldGroup>\\\\n    </Card>\\\\n  </ThemeWrapper>\\\\n), {__STORY__, __ADDS_MAP__,__MAIN_FILE_LOCATION__,__MODULE_DEPENDENCIES__,__LOCAL_DEPENDENCIES__,__SOURCE_PREFIX__,__IDS_TO_FRAMEWORKS__});\\\\n\\\\nexport const withForm = addSourceDecorator(() => (\\\\n  <ThemeWrapper>\\\\n    <Card>\\\\n      <CheckboxFieldGroup\\\\n        id='CheckboxFieldGroup2'\\\\n        orientation={boolean('orientation', false)}\\\\n        spacing={number('spacing', 10)}\\\\n        variant='form'\\\\n        label='Gender'\\\\n        width={text('width', '50%')}\\\\n        labelColor={text('Group Label Color', 'black')}\\\\n        error={boolean('error', true)}\\\\n        errorMessage={text('errorMessage', 'Some Field Error')}\\\\n        required={boolean('required', false)}\\\\n      >\\\\n        <Checkbox\\\\n          id='checkbox1'\\\\n          onChange={action('CheckboxField 1 Changed')}\\\\n          disabled={boolean('disabled', false, 'CheckboxField 1')}\\\\n          checked={boolean('checked', true, 'CheckboxField 1')}\\\\n          name={text('name', 'gender', 'CheckboxField 1')}\\\\n          value={text('value', 'Male', 'CheckboxField 1')}\\\\n          label={text('label', 'Male', 'CheckboxField 1')}\\\\n          checkboxSize={\\\\n            radios('size', radioOptions.size, 'sm') as tCheckboxSize\\\\n          }\\\\n          labelColor={text('Label Color', 'black')}\\\\n        />\\\\n        <Checkbox\\\\n          id='checkbox2'\\\\n          onChange={action('CheckboxField 2 Changed')}\\\\n          disabled={boolean('disabled', false, 'CheckboxField 2')}\\\\n          checked={boolean('checked', true, 'CheckboxField 2')}\\\\n          name={text('name', 'gender', 'CheckboxField 2')}\\\\n          value={text('value', 'Female', 'CheckboxField 2')}\\\\n          label={text('label', 'Female', 'CheckboxField 2')}\\\\n          checkboxSize={\\\\n            radios('size', radioOptions.size, 'sm') as tCheckboxSize\\\\n          }\\\\n        />\\\\n        <Checkbox\\\\n          id='checkbox3'\\\\n          onChange={action('CheckboxField 3 Changed')}\\\\n          disabled={boolean('disabled', false, 'CheckboxField 3')}\\\\n          checked={boolean('checked', true, 'CheckboxField 3')}\\\\n          name={text('name', 'gender', 'CheckboxField 3')}\\\\n          value={text('value', 'Others', 'CheckboxField 3')}\\\\n          label={text('label', 'Others', 'CheckboxField 3')}\\\\n          checkboxSize={\\\\n            radios('size', radioOptions.size, 'sm') as tCheckboxSize\\\\n          }\\\\n          labelColor={text('Label Color', 'black')}\\\\n        />\\\\n      </CheckboxFieldGroup>\\\\n    </Card>\\\\n  </ThemeWrapper>\\\\n), {__STORY__, __ADDS_MAP__,__MAIN_FILE_LOCATION__,__MODULE_DEPENDENCIES__,__LOCAL_DEPENDENCIES__,__SOURCE_PREFIX__,__IDS_TO_FRAMEWORKS__});\\\";\\n// @ts-ignore\\nvar __ADDS_MAP__ = {};\\n// @ts-ignore\\nvar __MAIN_FILE_LOCATION__ = \\\"/CheckboxFieldGroup.stories.tsx\\\";\\n// @ts-ignore\\nvar __MODULE_DEPENDENCIES__ = [];\\n// @ts-ignore\\nvar __LOCAL_DEPENDENCIES__ = {};\\n// @ts-ignore\\nvar __IDS_TO_FRAMEWORKS__ = {};\\n        \\n\\n\\n// @ts-nocheck\\n// @ts-ignore\\nvar withSourceLoader = require('@storybook/source-loader/preview').withSource;\\n// @ts-ignore\\nvar addSourceDecorator = require(\\\"@storybook/source-loader/preview\\\").addSource;\\n// @ts-ignore\\nvar __SOURCE_PREFIX__ = \\\"/Users/farhanansari/Code/ui-library/src/components/atoms/CheckboxFieldGroup\\\";\\n// @ts-ignore\\nvar __STORY__ = \\\"import React from 'react'\\\\nimport { path } from '..'\\\\nimport CheckboxFieldGroup from '.'\\\\nimport {\\\\n  withKnobs,\\\\n  boolean,\\\\n  radios,\\\\n  number,\\\\n  text\\\\n} from '@storybook/addon-knobs'\\\\nimport { action } from '@storybook/addon-actions'\\\\nimport ThemeWrapper from '../../../utilities/components/ThemeWrapper'\\\\nimport Checkbox, { tCheckboxSize } from '../Checkbox'\\\\n\\\\nimport Card from '../Card'\\\\n\\\\nexport default {\\\\n  title: `${path}/CheckboxFieldGroup`,\\\\n  decorators: [withKnobs],\\\\n  component: CheckboxFieldGroup\\\\n}\\\\n\\\\nconst radioOptions = {\\\\n  size: { sm: 'sm', md: 'md', lg: 'lg' }\\\\n}\\\\n\\\\nexport const withDefault = () => (\\\\n  <ThemeWrapper>\\\\n    <Card>\\\\n      <CheckboxFieldGroup\\\\n        id='defaultCheckboxFieldGroup'\\\\n        orientation={boolean('orientation', false)}\\\\n        spacing={number('spacing', 10)}\\\\n        variant='default'\\\\n        width='400px'\\\\n        label='Gender'\\\\n        labelColor={text('Group Label Color', 'black')}\\\\n      >\\\\n        <Checkbox\\\\n          id='checkbox1'\\\\n          onChange={action('CheckboxField 1 Changed')}\\\\n          disabled={boolean('disabled', false, 'CheckboxField 1')}\\\\n          checked={boolean('checked', true, 'CheckboxField 1')}\\\\n          name={text('name', 'gender', 'CheckboxField 1')}\\\\n          value={text('value', 'Male', 'CheckboxField 1')}\\\\n          label={text('label', 'Male', 'CheckboxField 1')}\\\\n          checkboxSize={\\\\n            radios('size', radioOptions.size, 'sm') as tCheckboxSize\\\\n          }\\\\n          labelColor={text('Label Color', 'black')}\\\\n        />\\\\n        <Checkbox\\\\n          id='checkbox2'\\\\n          onChange={action('CheckboxField 2 Changed')}\\\\n          disabled={boolean('disabled', false, 'CheckboxField 2')}\\\\n          checked={boolean('checked', true, 'CheckboxField 2')}\\\\n          name={text('name', 'gender', 'CheckboxField 2')}\\\\n          value={text('value', 'Female', 'CheckboxField 2')}\\\\n          label={text('label', 'Female', 'CheckboxField 2')}\\\\n          checkboxSize={\\\\n            radios('size', radioOptions.size, 'sm') as tCheckboxSize\\\\n          }\\\\n          labelColor={text('Label Color', 'black')}\\\\n        />\\\\n        <Checkbox\\\\n          id='checkbox3'\\\\n          onChange={action('CheckboxField 3 Changed')}\\\\n          disabled={boolean('disabled', false, 'CheckboxField 3')}\\\\n          checked={boolean('checked', true, 'CheckboxField 3')}\\\\n          name={text('name', 'gender', 'CheckboxField 3')}\\\\n          value={text('value', 'Others', 'CheckboxField 3')}\\\\n          label={text('label', 'Others', 'CheckboxField 3')}\\\\n          checkboxSize={\\\\n            radios('size', radioOptions.size, 'sm') as tCheckboxSize\\\\n          }\\\\n          labelColor={text('Label Color', 'black')}\\\\n        />\\\\n      </CheckboxFieldGroup>\\\\n    </Card>\\\\n  </ThemeWrapper>\\\\n)\\\\n\\\\nexport const withForm = () => (\\\\n  <ThemeWrapper>\\\\n    <Card>\\\\n      <CheckboxFieldGroup\\\\n        id='CheckboxFieldGroup2'\\\\n        orientation={boolean('orientation', false)}\\\\n        spacing={number('spacing', 10)}\\\\n        variant='form'\\\\n        label='Gender'\\\\n        width={text('width', '50%')}\\\\n        labelColor={text('Group Label Color', 'black')}\\\\n        error={boolean('error', true)}\\\\n        errorMessage={text('errorMessage', 'Some Field Error')}\\\\n        required={boolean('required', false)}\\\\n      >\\\\n        <Checkbox\\\\n          id='checkbox1'\\\\n          onChange={action('CheckboxField 1 Changed')}\\\\n          disabled={boolean('disabled', false, 'CheckboxField 1')}\\\\n          checked={boolean('checked', true, 'CheckboxField 1')}\\\\n          name={text('name', 'gender', 'CheckboxField 1')}\\\\n          value={text('value', 'Male', 'CheckboxField 1')}\\\\n          label={text('label', 'Male', 'CheckboxField 1')}\\\\n          checkboxSize={\\\\n            radios('size', radioOptions.size, 'sm') as tCheckboxSize\\\\n          }\\\\n          labelColor={text('Label Color', 'black')}\\\\n        />\\\\n        <Checkbox\\\\n          id='checkbox2'\\\\n          onChange={action('CheckboxField 2 Changed')}\\\\n          disabled={boolean('disabled', false, 'CheckboxField 2')}\\\\n          checked={boolean('checked', true, 'CheckboxField 2')}\\\\n          name={text('name', 'gender', 'CheckboxField 2')}\\\\n          value={text('value', 'Female', 'CheckboxField 2')}\\\\n          label={text('label', 'Female', 'CheckboxField 2')}\\\\n          checkboxSize={\\\\n            radios('size', radioOptions.size, 'sm') as tCheckboxSize\\\\n          }\\\\n        />\\\\n        <Checkbox\\\\n          id='checkbox3'\\\\n          onChange={action('CheckboxField 3 Changed')}\\\\n          disabled={boolean('disabled', false, 'CheckboxField 3')}\\\\n          checked={boolean('checked', true, 'CheckboxField 3')}\\\\n          name={text('name', 'gender', 'CheckboxField 3')}\\\\n          value={text('value', 'Others', 'CheckboxField 3')}\\\\n          label={text('label', 'Others', 'CheckboxField 3')}\\\\n          checkboxSize={\\\\n            radios('size', radioOptions.size, 'sm') as tCheckboxSize\\\\n          }\\\\n          labelColor={text('Label Color', 'black')}\\\\n        />\\\\n      </CheckboxFieldGroup>\\\\n    </Card>\\\\n  </ThemeWrapper>\\\\n)\\\\n\\\";\\n// @ts-ignore\\nvar __ADDS_MAP__ = {};\\n// @ts-ignore\\nvar __MAIN_FILE_LOCATION__ = \\\"/CheckboxFieldGroup.stories.tsx\\\";\\n// @ts-ignore\\nvar __MODULE_DEPENDENCIES__ = [];\\n// @ts-ignore\\nvar __LOCAL_DEPENDENCIES__ = {};\\n// @ts-ignore\\nvar __IDS_TO_FRAMEWORKS__ = {};\\n        \\nimport React from 'react'\\nimport { path } from '..'\\nimport CheckboxFieldGroup from '.'\\nimport {\\n  withKnobs,\\n  boolean,\\n  radios,\\n  number,\\n  text\\n} from '@storybook/addon-knobs'\\nimport { action } from '@storybook/addon-actions'\\nimport ThemeWrapper from '../../../utilities/components/ThemeWrapper'\\nimport Checkbox, { tCheckboxSize } from '../Checkbox'\\n\\nimport Card from '../Card'\\n\\nexport default {parameters: {\\\"storySource\\\":{\\\"source\\\":\\\"\\\\n\\\\n// @ts-nocheck\\\\n// @ts-ignore\\\\nvar withSourceLoader = require('@storybook/source-loader/preview').withSource;\\\\n// @ts-ignore\\\\nvar addSourceDecorator = require(\\\\\\\"@storybook/source-loader/preview\\\\\\\").addSource;\\\\n// @ts-ignore\\\\nvar __SOURCE_PREFIX__ = \\\\\\\"/Users/farhanansari/Code/ui-library/src/components/atoms/CheckboxFieldGroup\\\\\\\";\\\\n// @ts-ignore\\\\nvar __STORY__ = \\\\\\\"import React from 'react'\\\\\\\\nimport { path } from '..'\\\\\\\\nimport CheckboxFieldGroup from '.'\\\\\\\\nimport {\\\\\\\\n  withKnobs,\\\\\\\\n  boolean,\\\\\\\\n  radios,\\\\\\\\n  number,\\\\\\\\n  text\\\\\\\\n} from '@storybook/addon-knobs'\\\\\\\\nimport { action } from '@storybook/addon-actions'\\\\\\\\nimport ThemeWrapper from '../../../utilities/components/ThemeWrapper'\\\\\\\\nimport Checkbox, { tCheckboxSize } from '../Checkbox'\\\\\\\\n\\\\\\\\nimport Card from '../Card'\\\\\\\\n\\\\\\\\nexport default {\\\\\\\\n  title: `${path}/CheckboxFieldGroup`,\\\\\\\\n  decorators: [withKnobs],\\\\\\\\n  component: CheckboxFieldGroup\\\\\\\\n}\\\\\\\\n\\\\\\\\nconst radioOptions = {\\\\\\\\n  size: { sm: 'sm', md: 'md', lg: 'lg' }\\\\\\\\n}\\\\\\\\n\\\\\\\\nexport const withDefault = () => (\\\\\\\\n  <ThemeWrapper>\\\\\\\\n    <Card>\\\\\\\\n      <CheckboxFieldGroup\\\\\\\\n        id='defaultCheckboxFieldGroup'\\\\\\\\n        orientation={boolean('orientation', false)}\\\\\\\\n        spacing={number('spacing', 10)}\\\\\\\\n        variant='default'\\\\\\\\n        width='400px'\\\\\\\\n        label='Gender'\\\\\\\\n        labelColor={text('Group Label Color', 'black')}\\\\\\\\n      >\\\\\\\\n        <Checkbox\\\\\\\\n          id='checkbox1'\\\\\\\\n          onChange={action('CheckboxField 1 Changed')}\\\\\\\\n          disabled={boolean('disabled', false, 'CheckboxField 1')}\\\\\\\\n          checked={boolean('checked', true, 'CheckboxField 1')}\\\\\\\\n          name={text('name', 'gender', 'CheckboxField 1')}\\\\\\\\n          value={text('value', 'Male', 'CheckboxField 1')}\\\\\\\\n          label={text('label', 'Male', 'CheckboxField 1')}\\\\\\\\n          checkboxSize={\\\\\\\\n            radios('size', radioOptions.size, 'sm') as tCheckboxSize\\\\\\\\n          }\\\\\\\\n          labelColor={text('Label Color', 'black')}\\\\\\\\n        />\\\\\\\\n        <Checkbox\\\\\\\\n          id='checkbox2'\\\\\\\\n          onChange={action('CheckboxField 2 Changed')}\\\\\\\\n          disabled={boolean('disabled', false, 'CheckboxField 2')}\\\\\\\\n          checked={boolean('checked', true, 'CheckboxField 2')}\\\\\\\\n          name={text('name', 'gender', 'CheckboxField 2')}\\\\\\\\n          value={text('value', 'Female', 'CheckboxField 2')}\\\\\\\\n          label={text('label', 'Female', 'CheckboxField 2')}\\\\\\\\n          checkboxSize={\\\\\\\\n            radios('size', radioOptions.size, 'sm') as tCheckboxSize\\\\\\\\n          }\\\\\\\\n          labelColor={text('Label Color', 'black')}\\\\\\\\n        />\\\\\\\\n        <Checkbox\\\\\\\\n          id='checkbox3'\\\\\\\\n          onChange={action('CheckboxField 3 Changed')}\\\\\\\\n          disabled={boolean('disabled', false, 'CheckboxField 3')}\\\\\\\\n          checked={boolean('checked', true, 'CheckboxField 3')}\\\\\\\\n          name={text('name', 'gender', 'CheckboxField 3')}\\\\\\\\n          value={text('value', 'Others', 'CheckboxField 3')}\\\\\\\\n          label={text('label', 'Others', 'CheckboxField 3')}\\\\\\\\n          checkboxSize={\\\\\\\\n            radios('size', radioOptions.size, 'sm') as tCheckboxSize\\\\\\\\n          }\\\\\\\\n          labelColor={text('Label Color', 'black')}\\\\\\\\n        />\\\\\\\\n      </CheckboxFieldGroup>\\\\\\\\n    </Card>\\\\\\\\n  </ThemeWrapper>\\\\\\\\n)\\\\\\\\n\\\\\\\\nexport const withForm = () => (\\\\\\\\n  <ThemeWrapper>\\\\\\\\n    <Card>\\\\\\\\n      <CheckboxFieldGroup\\\\\\\\n        id='CheckboxFieldGroup2'\\\\\\\\n        orientation={boolean('orientation', false)}\\\\\\\\n        spacing={number('spacing', 10)}\\\\\\\\n        variant='form'\\\\\\\\n        label='Gender'\\\\\\\\n        width={text('width', '50%')}\\\\\\\\n        labelColor={text('Group Label Color', 'black')}\\\\\\\\n        error={boolean('error', true)}\\\\\\\\n        errorMessage={text('errorMessage', 'Some Field Error')}\\\\\\\\n        required={boolean('required', false)}\\\\\\\\n      >\\\\\\\\n        <Checkbox\\\\\\\\n          id='checkbox1'\\\\\\\\n          onChange={action('CheckboxField 1 Changed')}\\\\\\\\n          disabled={boolean('disabled', false, 'CheckboxField 1')}\\\\\\\\n          checked={boolean('checked', true, 'CheckboxField 1')}\\\\\\\\n          name={text('name', 'gender', 'CheckboxField 1')}\\\\\\\\n          value={text('value', 'Male', 'CheckboxField 1')}\\\\\\\\n          label={text('label', 'Male', 'CheckboxField 1')}\\\\\\\\n          checkboxSize={\\\\\\\\n            radios('size', radioOptions.size, 'sm') as tCheckboxSize\\\\\\\\n          }\\\\\\\\n          labelColor={text('Label Color', 'black')}\\\\\\\\n        />\\\\\\\\n        <Checkbox\\\\\\\\n          id='checkbox2'\\\\\\\\n          onChange={action('CheckboxField 2 Changed')}\\\\\\\\n          disabled={boolean('disabled', false, 'CheckboxField 2')}\\\\\\\\n          checked={boolean('checked', true, 'CheckboxField 2')}\\\\\\\\n          name={text('name', 'gender', 'CheckboxField 2')}\\\\\\\\n          value={text('value', 'Female', 'CheckboxField 2')}\\\\\\\\n          label={text('label', 'Female', 'CheckboxField 2')}\\\\\\\\n          checkboxSize={\\\\\\\\n            radios('size', radioOptions.size, 'sm') as tCheckboxSize\\\\\\\\n          }\\\\\\\\n        />\\\\\\\\n        <Checkbox\\\\\\\\n          id='checkbox3'\\\\\\\\n          onChange={action('CheckboxField 3 Changed')}\\\\\\\\n          disabled={boolean('disabled', false, 'CheckboxField 3')}\\\\\\\\n          checked={boolean('checked', true, 'CheckboxField 3')}\\\\\\\\n          name={text('name', 'gender', 'CheckboxField 3')}\\\\\\\\n          value={text('value', 'Others', 'CheckboxField 3')}\\\\\\\\n          label={text('label', 'Others', 'CheckboxField 3')}\\\\\\\\n          checkboxSize={\\\\\\\\n            radios('size', radioOptions.size, 'sm') as tCheckboxSize\\\\\\\\n          }\\\\\\\\n          labelColor={text('Label Color', 'black')}\\\\\\\\n        />\\\\\\\\n      </CheckboxFieldGroup>\\\\\\\\n    </Card>\\\\\\\\n  </ThemeWrapper>\\\\\\\\n)\\\\\\\\n\\\\\\\";\\\\n// @ts-ignore\\\\nvar __ADDS_MAP__ = {};\\\\n// @ts-ignore\\\\nvar __MAIN_FILE_LOCATION__ = \\\\\\\"/CheckboxFieldGroup.stories.tsx\\\\\\\";\\\\n// @ts-ignore\\\\nvar __MODULE_DEPENDENCIES__ = [];\\\\n// @ts-ignore\\\\nvar __LOCAL_DEPENDENCIES__ = {};\\\\n// @ts-ignore\\\\nvar __IDS_TO_FRAMEWORKS__ = {};\\\\n        \\\\nimport React from 'react'\\\\nimport { path } from '..'\\\\nimport CheckboxFieldGroup from '.'\\\\nimport {\\\\n  withKnobs,\\\\n  boolean,\\\\n  radios,\\\\n  number,\\\\n  text\\\\n} from '@storybook/addon-knobs'\\\\nimport { action } from '@storybook/addon-actions'\\\\nimport ThemeWrapper from '../../../utilities/components/ThemeWrapper'\\\\nimport Checkbox, { tCheckboxSize } from '../Checkbox'\\\\n\\\\nimport Card from '../Card'\\\\n\\\\nexport default {parameters: {\\\\\\\"storySource\\\\\\\":{\\\\\\\"source\\\\\\\":\\\\\\\"import React from 'react'\\\\\\\\nimport { path } from '..'\\\\\\\\nimport CheckboxFieldGroup from '.'\\\\\\\\nimport {\\\\\\\\n  withKnobs,\\\\\\\\n  boolean,\\\\\\\\n  radios,\\\\\\\\n  number,\\\\\\\\n  text\\\\\\\\n} from '@storybook/addon-knobs'\\\\\\\\nimport { action } from '@storybook/addon-actions'\\\\\\\\nimport ThemeWrapper from '../../../utilities/components/ThemeWrapper'\\\\\\\\nimport Checkbox, { tCheckboxSize } from '../Checkbox'\\\\\\\\n\\\\\\\\nimport Card from '../Card'\\\\\\\\n\\\\\\\\nexport default {\\\\\\\\n  title: `${path}/CheckboxFieldGroup`,\\\\\\\\n  decorators: [withKnobs],\\\\\\\\n  component: CheckboxFieldGroup\\\\\\\\n}\\\\\\\\n\\\\\\\\nconst radioOptions = {\\\\\\\\n  size: { sm: 'sm', md: 'md', lg: 'lg' }\\\\\\\\n}\\\\\\\\n\\\\\\\\nexport const withDefault = () => (\\\\\\\\n  <ThemeWrapper>\\\\\\\\n    <Card>\\\\\\\\n      <CheckboxFieldGroup\\\\\\\\n        id='defaultCheckboxFieldGroup'\\\\\\\\n        orientation={boolean('orientation', false)}\\\\\\\\n        spacing={number('spacing', 10)}\\\\\\\\n        variant='default'\\\\\\\\n        width='400px'\\\\\\\\n        label='Gender'\\\\\\\\n        labelColor={text('Group Label Color', 'black')}\\\\\\\\n      >\\\\\\\\n        <Checkbox\\\\\\\\n          id='checkbox1'\\\\\\\\n          onChange={action('CheckboxField 1 Changed')}\\\\\\\\n          disabled={boolean('disabled', false, 'CheckboxField 1')}\\\\\\\\n          checked={boolean('checked', true, 'CheckboxField 1')}\\\\\\\\n          name={text('name', 'gender', 'CheckboxField 1')}\\\\\\\\n          value={text('value', 'Male', 'CheckboxField 1')}\\\\\\\\n          label={text('label', 'Male', 'CheckboxField 1')}\\\\\\\\n          checkboxSize={\\\\\\\\n            radios('size', radioOptions.size, 'sm') as tCheckboxSize\\\\\\\\n          }\\\\\\\\n          labelColor={text('Label Color', 'black')}\\\\\\\\n        />\\\\\\\\n        <Checkbox\\\\\\\\n          id='checkbox2'\\\\\\\\n          onChange={action('CheckboxField 2 Changed')}\\\\\\\\n          disabled={boolean('disabled', false, 'CheckboxField 2')}\\\\\\\\n          checked={boolean('checked', true, 'CheckboxField 2')}\\\\\\\\n          name={text('name', 'gender', 'CheckboxField 2')}\\\\\\\\n          value={text('value', 'Female', 'CheckboxField 2')}\\\\\\\\n          label={text('label', 'Female', 'CheckboxField 2')}\\\\\\\\n          checkboxSize={\\\\\\\\n            radios('size', radioOptions.size, 'sm') as tCheckboxSize\\\\\\\\n          }\\\\\\\\n          labelColor={text('Label Color', 'black')}\\\\\\\\n        />\\\\\\\\n        <Checkbox\\\\\\\\n          id='checkbox3'\\\\\\\\n          onChange={action('CheckboxField 3 Changed')}\\\\\\\\n          disabled={boolean('disabled', false, 'CheckboxField 3')}\\\\\\\\n          checked={boolean('checked', true, 'CheckboxField 3')}\\\\\\\\n          name={text('name', 'gender', 'CheckboxField 3')}\\\\\\\\n          value={text('value', 'Others', 'CheckboxField 3')}\\\\\\\\n          label={text('label', 'Others', 'CheckboxField 3')}\\\\\\\\n          checkboxSize={\\\\\\\\n            radios('size', radioOptions.size, 'sm') as tCheckboxSize\\\\\\\\n          }\\\\\\\\n          labelColor={text('Label Color', 'black')}\\\\\\\\n        />\\\\\\\\n      </CheckboxFieldGroup>\\\\\\\\n    </Card>\\\\\\\\n  </ThemeWrapper>\\\\\\\\n)\\\\\\\\n\\\\\\\\nexport const withForm = () => (\\\\\\\\n  <ThemeWrapper>\\\\\\\\n    <Card>\\\\\\\\n      <CheckboxFieldGroup\\\\\\\\n        id='CheckboxFieldGroup2'\\\\\\\\n        orientation={boolean('orientation', false)}\\\\\\\\n        spacing={number('spacing', 10)}\\\\\\\\n        variant='form'\\\\\\\\n        label='Gender'\\\\\\\\n        width={text('width', '50%')}\\\\\\\\n        labelColor={text('Group Label Color', 'black')}\\\\\\\\n        error={boolean('error', true)}\\\\\\\\n        errorMessage={text('errorMessage', 'Some Field Error')}\\\\\\\\n        required={boolean('required', false)}\\\\\\\\n      >\\\\\\\\n        <Checkbox\\\\\\\\n          id='checkbox1'\\\\\\\\n          onChange={action('CheckboxField 1 Changed')}\\\\\\\\n          disabled={boolean('disabled', false, 'CheckboxField 1')}\\\\\\\\n          checked={boolean('checked', true, 'CheckboxField 1')}\\\\\\\\n          name={text('name', 'gender', 'CheckboxField 1')}\\\\\\\\n          value={text('value', 'Male', 'CheckboxField 1')}\\\\\\\\n          label={text('label', 'Male', 'CheckboxField 1')}\\\\\\\\n          checkboxSize={\\\\\\\\n            radios('size', radioOptions.size, 'sm') as tCheckboxSize\\\\\\\\n          }\\\\\\\\n          labelColor={text('Label Color', 'black')}\\\\\\\\n        />\\\\\\\\n        <Checkbox\\\\\\\\n          id='checkbox2'\\\\\\\\n          onChange={action('CheckboxField 2 Changed')}\\\\\\\\n          disabled={boolean('disabled', false, 'CheckboxField 2')}\\\\\\\\n          checked={boolean('checked', true, 'CheckboxField 2')}\\\\\\\\n          name={text('name', 'gender', 'CheckboxField 2')}\\\\\\\\n          value={text('value', 'Female', 'CheckboxField 2')}\\\\\\\\n          label={text('label', 'Female', 'CheckboxField 2')}\\\\\\\\n          checkboxSize={\\\\\\\\n            radios('size', radioOptions.size, 'sm') as tCheckboxSize\\\\\\\\n          }\\\\\\\\n        />\\\\\\\\n        <Checkbox\\\\\\\\n          id='checkbox3'\\\\\\\\n          onChange={action('CheckboxField 3 Changed')}\\\\\\\\n          disabled={boolean('disabled', false, 'CheckboxField 3')}\\\\\\\\n          checked={boolean('checked', true, 'CheckboxField 3')}\\\\\\\\n          name={text('name', 'gender', 'CheckboxField 3')}\\\\\\\\n          value={text('value', 'Others', 'CheckboxField 3')}\\\\\\\\n          label={text('label', 'Others', 'CheckboxField 3')}\\\\\\\\n          checkboxSize={\\\\\\\\n            radios('size', radioOptions.size, 'sm') as tCheckboxSize\\\\\\\\n          }\\\\\\\\n          labelColor={text('Label Color', 'black')}\\\\\\\\n        />\\\\\\\\n      </CheckboxFieldGroup>\\\\\\\\n    </Card>\\\\\\\\n  </ThemeWrapper>\\\\\\\\n)\\\\\\\\n\\\\\\\",\\\\\\\"locationsMap\\\\\\\":{}},},\\\\n  title: `${path}/CheckboxFieldGroup`,\\\\n  decorators: [withKnobs],\\\\n  component: CheckboxFieldGroup\\\\n}\\\\n\\\\nconst radioOptions = {\\\\n  size: { sm: 'sm', md: 'md', lg: 'lg' }\\\\n}\\\\n\\\\nexport const withDefault = addSourceDecorator(() => (\\\\n  <ThemeWrapper>\\\\n    <Card>\\\\n      <CheckboxFieldGroup\\\\n        id='defaultCheckboxFieldGroup'\\\\n        orientation={boolean('orientation', false)}\\\\n        spacing={number('spacing', 10)}\\\\n        variant='default'\\\\n        width='400px'\\\\n        label='Gender'\\\\n        labelColor={text('Group Label Color', 'black')}\\\\n      >\\\\n        <Checkbox\\\\n          id='checkbox1'\\\\n          onChange={action('CheckboxField 1 Changed')}\\\\n          disabled={boolean('disabled', false, 'CheckboxField 1')}\\\\n          checked={boolean('checked', true, 'CheckboxField 1')}\\\\n          name={text('name', 'gender', 'CheckboxField 1')}\\\\n          value={text('value', 'Male', 'CheckboxField 1')}\\\\n          label={text('label', 'Male', 'CheckboxField 1')}\\\\n          checkboxSize={\\\\n            radios('size', radioOptions.size, 'sm') as tCheckboxSize\\\\n          }\\\\n          labelColor={text('Label Color', 'black')}\\\\n        />\\\\n        <Checkbox\\\\n          id='checkbox2'\\\\n          onChange={action('CheckboxField 2 Changed')}\\\\n          disabled={boolean('disabled', false, 'CheckboxField 2')}\\\\n          checked={boolean('checked', true, 'CheckboxField 2')}\\\\n          name={text('name', 'gender', 'CheckboxField 2')}\\\\n          value={text('value', 'Female', 'CheckboxField 2')}\\\\n          label={text('label', 'Female', 'CheckboxField 2')}\\\\n          checkboxSize={\\\\n            radios('size', radioOptions.size, 'sm') as tCheckboxSize\\\\n          }\\\\n          labelColor={text('Label Color', 'black')}\\\\n        />\\\\n        <Checkbox\\\\n          id='checkbox3'\\\\n          onChange={action('CheckboxField 3 Changed')}\\\\n          disabled={boolean('disabled', false, 'CheckboxField 3')}\\\\n          checked={boolean('checked', true, 'CheckboxField 3')}\\\\n          name={text('name', 'gender', 'CheckboxField 3')}\\\\n          value={text('value', 'Others', 'CheckboxField 3')}\\\\n          label={text('label', 'Others', 'CheckboxField 3')}\\\\n          checkboxSize={\\\\n            radios('size', radioOptions.size, 'sm') as tCheckboxSize\\\\n          }\\\\n          labelColor={text('Label Color', 'black')}\\\\n        />\\\\n      </CheckboxFieldGroup>\\\\n    </Card>\\\\n  </ThemeWrapper>\\\\n), {__STORY__, __ADDS_MAP__,__MAIN_FILE_LOCATION__,__MODULE_DEPENDENCIES__,__LOCAL_DEPENDENCIES__,__SOURCE_PREFIX__,__IDS_TO_FRAMEWORKS__});\\\\n\\\\nexport const withForm = addSourceDecorator(() => (\\\\n  <ThemeWrapper>\\\\n    <Card>\\\\n      <CheckboxFieldGroup\\\\n        id='CheckboxFieldGroup2'\\\\n        orientation={boolean('orientation', false)}\\\\n        spacing={number('spacing', 10)}\\\\n        variant='form'\\\\n        label='Gender'\\\\n        width={text('width', '50%')}\\\\n        labelColor={text('Group Label Color', 'black')}\\\\n        error={boolean('error', true)}\\\\n        errorMessage={text('errorMessage', 'Some Field Error')}\\\\n        required={boolean('required', false)}\\\\n      >\\\\n        <Checkbox\\\\n          id='checkbox1'\\\\n          onChange={action('CheckboxField 1 Changed')}\\\\n          disabled={boolean('disabled', false, 'CheckboxField 1')}\\\\n          checked={boolean('checked', true, 'CheckboxField 1')}\\\\n          name={text('name', 'gender', 'CheckboxField 1')}\\\\n          value={text('value', 'Male', 'CheckboxField 1')}\\\\n          label={text('label', 'Male', 'CheckboxField 1')}\\\\n          checkboxSize={\\\\n            radios('size', radioOptions.size, 'sm') as tCheckboxSize\\\\n          }\\\\n          labelColor={text('Label Color', 'black')}\\\\n        />\\\\n        <Checkbox\\\\n          id='checkbox2'\\\\n          onChange={action('CheckboxField 2 Changed')}\\\\n          disabled={boolean('disabled', false, 'CheckboxField 2')}\\\\n          checked={boolean('checked', true, 'CheckboxField 2')}\\\\n          name={text('name', 'gender', 'CheckboxField 2')}\\\\n          value={text('value', 'Female', 'CheckboxField 2')}\\\\n          label={text('label', 'Female', 'CheckboxField 2')}\\\\n          checkboxSize={\\\\n            radios('size', radioOptions.size, 'sm') as tCheckboxSize\\\\n          }\\\\n        />\\\\n        <Checkbox\\\\n          id='checkbox3'\\\\n          onChange={action('CheckboxField 3 Changed')}\\\\n          disabled={boolean('disabled', false, 'CheckboxField 3')}\\\\n          checked={boolean('checked', true, 'CheckboxField 3')}\\\\n          name={text('name', 'gender', 'CheckboxField 3')}\\\\n          value={text('value', 'Others', 'CheckboxField 3')}\\\\n          label={text('label', 'Others', 'CheckboxField 3')}\\\\n          checkboxSize={\\\\n            radios('size', radioOptions.size, 'sm') as tCheckboxSize\\\\n          }\\\\n          labelColor={text('Label Color', 'black')}\\\\n        />\\\\n      </CheckboxFieldGroup>\\\\n    </Card>\\\\n  </ThemeWrapper>\\\\n), {__STORY__, __ADDS_MAP__,__MAIN_FILE_LOCATION__,__MODULE_DEPENDENCIES__,__LOCAL_DEPENDENCIES__,__SOURCE_PREFIX__,__IDS_TO_FRAMEWORKS__});\\\",\\\"locationsMap\\\":{}},\\\"storySource\\\":{\\\"source\\\":\\\"import React from 'react'\\\\nimport { path } from '..'\\\\nimport CheckboxFieldGroup from '.'\\\\nimport {\\\\n  withKnobs,\\\\n  boolean,\\\\n  radios,\\\\n  number,\\\\n  text\\\\n} from '@storybook/addon-knobs'\\\\nimport { action } from '@storybook/addon-actions'\\\\nimport ThemeWrapper from '../../../utilities/components/ThemeWrapper'\\\\nimport Checkbox, { tCheckboxSize } from '../Checkbox'\\\\n\\\\nimport Card from '../Card'\\\\n\\\\nexport default {\\\\n  title: `${path}/CheckboxFieldGroup`,\\\\n  decorators: [withKnobs],\\\\n  component: CheckboxFieldGroup\\\\n}\\\\n\\\\nconst radioOptions = {\\\\n  size: { sm: 'sm', md: 'md', lg: 'lg' }\\\\n}\\\\n\\\\nexport const withDefault = () => (\\\\n  <ThemeWrapper>\\\\n    <Card>\\\\n      <CheckboxFieldGroup\\\\n        id='defaultCheckboxFieldGroup'\\\\n        orientation={boolean('orientation', false)}\\\\n        spacing={number('spacing', 10)}\\\\n        variant='default'\\\\n        width='400px'\\\\n        label='Gender'\\\\n        labelColor={text('Group Label Color', 'black')}\\\\n      >\\\\n        <Checkbox\\\\n          id='checkbox1'\\\\n          onChange={action('CheckboxField 1 Changed')}\\\\n          disabled={boolean('disabled', false, 'CheckboxField 1')}\\\\n          checked={boolean('checked', true, 'CheckboxField 1')}\\\\n          name={text('name', 'gender', 'CheckboxField 1')}\\\\n          value={text('value', 'Male', 'CheckboxField 1')}\\\\n          label={text('label', 'Male', 'CheckboxField 1')}\\\\n          checkboxSize={\\\\n            radios('size', radioOptions.size, 'sm') as tCheckboxSize\\\\n          }\\\\n          labelColor={text('Label Color', 'black')}\\\\n        />\\\\n        <Checkbox\\\\n          id='checkbox2'\\\\n          onChange={action('CheckboxField 2 Changed')}\\\\n          disabled={boolean('disabled', false, 'CheckboxField 2')}\\\\n          checked={boolean('checked', true, 'CheckboxField 2')}\\\\n          name={text('name', 'gender', 'CheckboxField 2')}\\\\n          value={text('value', 'Female', 'CheckboxField 2')}\\\\n          label={text('label', 'Female', 'CheckboxField 2')}\\\\n          checkboxSize={\\\\n            radios('size', radioOptions.size, 'sm') as tCheckboxSize\\\\n          }\\\\n          labelColor={text('Label Color', 'black')}\\\\n        />\\\\n        <Checkbox\\\\n          id='checkbox3'\\\\n          onChange={action('CheckboxField 3 Changed')}\\\\n          disabled={boolean('disabled', false, 'CheckboxField 3')}\\\\n          checked={boolean('checked', true, 'CheckboxField 3')}\\\\n          name={text('name', 'gender', 'CheckboxField 3')}\\\\n          value={text('value', 'Others', 'CheckboxField 3')}\\\\n          label={text('label', 'Others', 'CheckboxField 3')}\\\\n          checkboxSize={\\\\n            radios('size', radioOptions.size, 'sm') as tCheckboxSize\\\\n          }\\\\n          labelColor={text('Label Color', 'black')}\\\\n        />\\\\n      </CheckboxFieldGroup>\\\\n    </Card>\\\\n  </ThemeWrapper>\\\\n)\\\\n\\\\nexport const withForm = () => (\\\\n  <ThemeWrapper>\\\\n    <Card>\\\\n      <CheckboxFieldGroup\\\\n        id='CheckboxFieldGroup2'\\\\n        orientation={boolean('orientation', false)}\\\\n        spacing={number('spacing', 10)}\\\\n        variant='form'\\\\n        label='Gender'\\\\n        width={text('width', '50%')}\\\\n        labelColor={text('Group Label Color', 'black')}\\\\n        error={boolean('error', true)}\\\\n        errorMessage={text('errorMessage', 'Some Field Error')}\\\\n        required={boolean('required', false)}\\\\n      >\\\\n        <Checkbox\\\\n          id='checkbox1'\\\\n          onChange={action('CheckboxField 1 Changed')}\\\\n          disabled={boolean('disabled', false, 'CheckboxField 1')}\\\\n          checked={boolean('checked', true, 'CheckboxField 1')}\\\\n          name={text('name', 'gender', 'CheckboxField 1')}\\\\n          value={text('value', 'Male', 'CheckboxField 1')}\\\\n          label={text('label', 'Male', 'CheckboxField 1')}\\\\n          checkboxSize={\\\\n            radios('size', radioOptions.size, 'sm') as tCheckboxSize\\\\n          }\\\\n          labelColor={text('Label Color', 'black')}\\\\n        />\\\\n        <Checkbox\\\\n          id='checkbox2'\\\\n          onChange={action('CheckboxField 2 Changed')}\\\\n          disabled={boolean('disabled', false, 'CheckboxField 2')}\\\\n          checked={boolean('checked', true, 'CheckboxField 2')}\\\\n          name={text('name', 'gender', 'CheckboxField 2')}\\\\n          value={text('value', 'Female', 'CheckboxField 2')}\\\\n          label={text('label', 'Female', 'CheckboxField 2')}\\\\n          checkboxSize={\\\\n            radios('size', radioOptions.size, 'sm') as tCheckboxSize\\\\n          }\\\\n        />\\\\n        <Checkbox\\\\n          id='checkbox3'\\\\n          onChange={action('CheckboxField 3 Changed')}\\\\n          disabled={boolean('disabled', false, 'CheckboxField 3')}\\\\n          checked={boolean('checked', true, 'CheckboxField 3')}\\\\n          name={text('name', 'gender', 'CheckboxField 3')}\\\\n          value={text('value', 'Others', 'CheckboxField 3')}\\\\n          label={text('label', 'Others', 'CheckboxField 3')}\\\\n          checkboxSize={\\\\n            radios('size', radioOptions.size, 'sm') as tCheckboxSize\\\\n          }\\\\n          labelColor={text('Label Color', 'black')}\\\\n        />\\\\n      </CheckboxFieldGroup>\\\\n    </Card>\\\\n  </ThemeWrapper>\\\\n)\\\\n\\\",\\\"locationsMap\\\":{}},},\\n  title: `${path}/CheckboxFieldGroup`,\\n  decorators: [withKnobs],\\n  component: CheckboxFieldGroup\\n}\\n\\nconst radioOptions = {\\n  size: { sm: 'sm', md: 'md', lg: 'lg' }\\n}\\n\\nexport const withDefault = addSourceDecorator(addSourceDecorator(() => (\\n  <ThemeWrapper>\\n    <Card>\\n      <CheckboxFieldGroup\\n        id='defaultCheckboxFieldGroup'\\n        orientation={boolean('orientation', false)}\\n        spacing={number('spacing', 10)}\\n        variant='default'\\n        width='400px'\\n        label='Gender'\\n        labelColor={text('Group Label Color', 'black')}\\n      >\\n        <Checkbox\\n          id='checkbox1'\\n          onChange={action('CheckboxField 1 Changed')}\\n          disabled={boolean('disabled', false, 'CheckboxField 1')}\\n          checked={boolean('checked', true, 'CheckboxField 1')}\\n          name={text('name', 'gender', 'CheckboxField 1')}\\n          value={text('value', 'Male', 'CheckboxField 1')}\\n          label={text('label', 'Male', 'CheckboxField 1')}\\n          checkboxSize={\\n            radios('size', radioOptions.size, 'sm') as tCheckboxSize\\n          }\\n          labelColor={text('Label Color', 'black')}\\n        />\\n        <Checkbox\\n          id='checkbox2'\\n          onChange={action('CheckboxField 2 Changed')}\\n          disabled={boolean('disabled', false, 'CheckboxField 2')}\\n          checked={boolean('checked', true, 'CheckboxField 2')}\\n          name={text('name', 'gender', 'CheckboxField 2')}\\n          value={text('value', 'Female', 'CheckboxField 2')}\\n          label={text('label', 'Female', 'CheckboxField 2')}\\n          checkboxSize={\\n            radios('size', radioOptions.size, 'sm') as tCheckboxSize\\n          }\\n          labelColor={text('Label Color', 'black')}\\n        />\\n        <Checkbox\\n          id='checkbox3'\\n          onChange={action('CheckboxField 3 Changed')}\\n          disabled={boolean('disabled', false, 'CheckboxField 3')}\\n          checked={boolean('checked', true, 'CheckboxField 3')}\\n          name={text('name', 'gender', 'CheckboxField 3')}\\n          value={text('value', 'Others', 'CheckboxField 3')}\\n          label={text('label', 'Others', 'CheckboxField 3')}\\n          checkboxSize={\\n            radios('size', radioOptions.size, 'sm') as tCheckboxSize\\n          }\\n          labelColor={text('Label Color', 'black')}\\n        />\\n      </CheckboxFieldGroup>\\n    </Card>\\n  </ThemeWrapper>\\n), {__STORY__, __ADDS_MAP__,__MAIN_FILE_LOCATION__,__MODULE_DEPENDENCIES__,__LOCAL_DEPENDENCIES__,__SOURCE_PREFIX__,__IDS_TO_FRAMEWORKS__}), {__STORY__, __ADDS_MAP__,__MAIN_FILE_LOCATION__,__MODULE_DEPENDENCIES__,__LOCAL_DEPENDENCIES__,__SOURCE_PREFIX__,__IDS_TO_FRAMEWORKS__});;\\n\\nexport const withForm = addSourceDecorator(addSourceDecorator(() => (\\n  <ThemeWrapper>\\n    <Card>\\n      <CheckboxFieldGroup\\n        id='CheckboxFieldGroup2'\\n        orientation={boolean('orientation', false)}\\n        spacing={number('spacing', 10)}\\n        variant='form'\\n        label='Gender'\\n        width={text('width', '50%')}\\n        labelColor={text('Group Label Color', 'black')}\\n        error={boolean('error', true)}\\n        errorMessage={text('errorMessage', 'Some Field Error')}\\n        required={boolean('required', false)}\\n      >\\n        <Checkbox\\n          id='checkbox1'\\n          onChange={action('CheckboxField 1 Changed')}\\n          disabled={boolean('disabled', false, 'CheckboxField 1')}\\n          checked={boolean('checked', true, 'CheckboxField 1')}\\n          name={text('name', 'gender', 'CheckboxField 1')}\\n          value={text('value', 'Male', 'CheckboxField 1')}\\n          label={text('label', 'Male', 'CheckboxField 1')}\\n          checkboxSize={\\n            radios('size', radioOptions.size, 'sm') as tCheckboxSize\\n          }\\n          labelColor={text('Label Color', 'black')}\\n        />\\n        <Checkbox\\n          id='checkbox2'\\n          onChange={action('CheckboxField 2 Changed')}\\n          disabled={boolean('disabled', false, 'CheckboxField 2')}\\n          checked={boolean('checked', true, 'CheckboxField 2')}\\n          name={text('name', 'gender', 'CheckboxField 2')}\\n          value={text('value', 'Female', 'CheckboxField 2')}\\n          label={text('label', 'Female', 'CheckboxField 2')}\\n          checkboxSize={\\n            radios('size', radioOptions.size, 'sm') as tCheckboxSize\\n          }\\n        />\\n        <Checkbox\\n          id='checkbox3'\\n          onChange={action('CheckboxField 3 Changed')}\\n          disabled={boolean('disabled', false, 'CheckboxField 3')}\\n          checked={boolean('checked', true, 'CheckboxField 3')}\\n          name={text('name', 'gender', 'CheckboxField 3')}\\n          value={text('value', 'Others', 'CheckboxField 3')}\\n          label={text('label', 'Others', 'CheckboxField 3')}\\n          checkboxSize={\\n            radios('size', radioOptions.size, 'sm') as tCheckboxSize\\n          }\\n          labelColor={text('Label Color', 'black')}\\n        />\\n      </CheckboxFieldGroup>\\n    </Card>\\n  </ThemeWrapper>\\n), {__STORY__, __ADDS_MAP__,__MAIN_FILE_LOCATION__,__MODULE_DEPENDENCIES__,__LOCAL_DEPENDENCIES__,__SOURCE_PREFIX__,__IDS_TO_FRAMEWORKS__}), {__STORY__, __ADDS_MAP__,__MAIN_FILE_LOCATION__,__MODULE_DEPENDENCIES__,__LOCAL_DEPENDENCIES__,__SOURCE_PREFIX__,__IDS_TO_FRAMEWORKS__});\",\n      \"locationsMap\": {}\n    }\n  }, _defineProperty(_parameters, \"storySource\", {\n    \"source\": \"\\n\\n// @ts-nocheck\\n// @ts-ignore\\nvar withSourceLoader = require('@storybook/source-loader/preview').withSource;\\n// @ts-ignore\\nvar addSourceDecorator = require(\\\"@storybook/source-loader/preview\\\").addSource;\\n// @ts-ignore\\nvar __SOURCE_PREFIX__ = \\\"/Users/farhanansari/Code/ui-library/src/components/atoms/CheckboxFieldGroup\\\";\\n// @ts-ignore\\nvar __STORY__ = \\\"import React from 'react'\\\\nimport { path } from '..'\\\\nimport CheckboxFieldGroup from '.'\\\\nimport {\\\\n  withKnobs,\\\\n  boolean,\\\\n  radios,\\\\n  number,\\\\n  text\\\\n} from '@storybook/addon-knobs'\\\\nimport { action } from '@storybook/addon-actions'\\\\nimport ThemeWrapper from '../../../utilities/components/ThemeWrapper'\\\\nimport Checkbox, { tCheckboxSize } from '../Checkbox'\\\\n\\\\nimport Card from '../Card'\\\\n\\\\nexport default {\\\\n  title: `${path}/CheckboxFieldGroup`,\\\\n  decorators: [withKnobs],\\\\n  component: CheckboxFieldGroup\\\\n}\\\\n\\\\nconst radioOptions = {\\\\n  size: { sm: 'sm', md: 'md', lg: 'lg' }\\\\n}\\\\n\\\\nexport const withDefault = () => (\\\\n  <ThemeWrapper>\\\\n    <Card>\\\\n      <CheckboxFieldGroup\\\\n        id='defaultCheckboxFieldGroup'\\\\n        orientation={boolean('orientation', false)}\\\\n        spacing={number('spacing', 10)}\\\\n        variant='default'\\\\n        width='400px'\\\\n        label='Gender'\\\\n        labelColor={text('Group Label Color', 'black')}\\\\n      >\\\\n        <Checkbox\\\\n          id='checkbox1'\\\\n          onChange={action('CheckboxField 1 Changed')}\\\\n          disabled={boolean('disabled', false, 'CheckboxField 1')}\\\\n          checked={boolean('checked', true, 'CheckboxField 1')}\\\\n          name={text('name', 'gender', 'CheckboxField 1')}\\\\n          value={text('value', 'Male', 'CheckboxField 1')}\\\\n          label={text('label', 'Male', 'CheckboxField 1')}\\\\n          checkboxSize={\\\\n            radios('size', radioOptions.size, 'sm') as tCheckboxSize\\\\n          }\\\\n          labelColor={text('Label Color', 'black')}\\\\n        />\\\\n        <Checkbox\\\\n          id='checkbox2'\\\\n          onChange={action('CheckboxField 2 Changed')}\\\\n          disabled={boolean('disabled', false, 'CheckboxField 2')}\\\\n          checked={boolean('checked', true, 'CheckboxField 2')}\\\\n          name={text('name', 'gender', 'CheckboxField 2')}\\\\n          value={text('value', 'Female', 'CheckboxField 2')}\\\\n          label={text('label', 'Female', 'CheckboxField 2')}\\\\n          checkboxSize={\\\\n            radios('size', radioOptions.size, 'sm') as tCheckboxSize\\\\n          }\\\\n          labelColor={text('Label Color', 'black')}\\\\n        />\\\\n        <Checkbox\\\\n          id='checkbox3'\\\\n          onChange={action('CheckboxField 3 Changed')}\\\\n          disabled={boolean('disabled', false, 'CheckboxField 3')}\\\\n          checked={boolean('checked', true, 'CheckboxField 3')}\\\\n          name={text('name', 'gender', 'CheckboxField 3')}\\\\n          value={text('value', 'Others', 'CheckboxField 3')}\\\\n          label={text('label', 'Others', 'CheckboxField 3')}\\\\n          checkboxSize={\\\\n            radios('size', radioOptions.size, 'sm') as tCheckboxSize\\\\n          }\\\\n          labelColor={text('Label Color', 'black')}\\\\n        />\\\\n      </CheckboxFieldGroup>\\\\n    </Card>\\\\n  </ThemeWrapper>\\\\n)\\\\n\\\\nexport const withForm = () => (\\\\n  <ThemeWrapper>\\\\n    <Card>\\\\n      <CheckboxFieldGroup\\\\n        id='CheckboxFieldGroup2'\\\\n        orientation={boolean('orientation', false)}\\\\n        spacing={number('spacing', 10)}\\\\n        variant='form'\\\\n        label='Gender'\\\\n        width={text('width', '50%')}\\\\n        labelColor={text('Group Label Color', 'black')}\\\\n        error={boolean('error', true)}\\\\n        errorMessage={text('errorMessage', 'Some Field Error')}\\\\n        required={boolean('required', false)}\\\\n      >\\\\n        <Checkbox\\\\n          id='checkbox1'\\\\n          onChange={action('CheckboxField 1 Changed')}\\\\n          disabled={boolean('disabled', false, 'CheckboxField 1')}\\\\n          checked={boolean('checked', true, 'CheckboxField 1')}\\\\n          name={text('name', 'gender', 'CheckboxField 1')}\\\\n          value={text('value', 'Male', 'CheckboxField 1')}\\\\n          label={text('label', 'Male', 'CheckboxField 1')}\\\\n          checkboxSize={\\\\n            radios('size', radioOptions.size, 'sm') as tCheckboxSize\\\\n          }\\\\n          labelColor={text('Label Color', 'black')}\\\\n        />\\\\n        <Checkbox\\\\n          id='checkbox2'\\\\n          onChange={action('CheckboxField 2 Changed')}\\\\n          disabled={boolean('disabled', false, 'CheckboxField 2')}\\\\n          checked={boolean('checked', true, 'CheckboxField 2')}\\\\n          name={text('name', 'gender', 'CheckboxField 2')}\\\\n          value={text('value', 'Female', 'CheckboxField 2')}\\\\n          label={text('label', 'Female', 'CheckboxField 2')}\\\\n          checkboxSize={\\\\n            radios('size', radioOptions.size, 'sm') as tCheckboxSize\\\\n          }\\\\n        />\\\\n        <Checkbox\\\\n          id='checkbox3'\\\\n          onChange={action('CheckboxField 3 Changed')}\\\\n          disabled={boolean('disabled', false, 'CheckboxField 3')}\\\\n          checked={boolean('checked', true, 'CheckboxField 3')}\\\\n          name={text('name', 'gender', 'CheckboxField 3')}\\\\n          value={text('value', 'Others', 'CheckboxField 3')}\\\\n          label={text('label', 'Others', 'CheckboxField 3')}\\\\n          checkboxSize={\\\\n            radios('size', radioOptions.size, 'sm') as tCheckboxSize\\\\n          }\\\\n          labelColor={text('Label Color', 'black')}\\\\n        />\\\\n      </CheckboxFieldGroup>\\\\n    </Card>\\\\n  </ThemeWrapper>\\\\n)\\\\n\\\";\\n// @ts-ignore\\nvar __ADDS_MAP__ = {};\\n// @ts-ignore\\nvar __MAIN_FILE_LOCATION__ = \\\"/CheckboxFieldGroup.stories.tsx\\\";\\n// @ts-ignore\\nvar __MODULE_DEPENDENCIES__ = [];\\n// @ts-ignore\\nvar __LOCAL_DEPENDENCIES__ = {};\\n// @ts-ignore\\nvar __IDS_TO_FRAMEWORKS__ = {};\\n        \\nimport React from 'react'\\nimport { path } from '..'\\nimport CheckboxFieldGroup from '.'\\nimport {\\n  withKnobs,\\n  boolean,\\n  radios,\\n  number,\\n  text\\n} from '@storybook/addon-knobs'\\nimport { action } from '@storybook/addon-actions'\\nimport ThemeWrapper from '../../../utilities/components/ThemeWrapper'\\nimport Checkbox, { tCheckboxSize } from '../Checkbox'\\n\\nimport Card from '../Card'\\n\\nexport default {parameters: {\\\"storySource\\\":{\\\"source\\\":\\\"import React from 'react'\\\\nimport { path } from '..'\\\\nimport CheckboxFieldGroup from '.'\\\\nimport {\\\\n  withKnobs,\\\\n  boolean,\\\\n  radios,\\\\n  number,\\\\n  text\\\\n} from '@storybook/addon-knobs'\\\\nimport { action } from '@storybook/addon-actions'\\\\nimport ThemeWrapper from '../../../utilities/components/ThemeWrapper'\\\\nimport Checkbox, { tCheckboxSize } from '../Checkbox'\\\\n\\\\nimport Card from '../Card'\\\\n\\\\nexport default {\\\\n  title: `${path}/CheckboxFieldGroup`,\\\\n  decorators: [withKnobs],\\\\n  component: CheckboxFieldGroup\\\\n}\\\\n\\\\nconst radioOptions = {\\\\n  size: { sm: 'sm', md: 'md', lg: 'lg' }\\\\n}\\\\n\\\\nexport const withDefault = () => (\\\\n  <ThemeWrapper>\\\\n    <Card>\\\\n      <CheckboxFieldGroup\\\\n        id='defaultCheckboxFieldGroup'\\\\n        orientation={boolean('orientation', false)}\\\\n        spacing={number('spacing', 10)}\\\\n        variant='default'\\\\n        width='400px'\\\\n        label='Gender'\\\\n        labelColor={text('Group Label Color', 'black')}\\\\n      >\\\\n        <Checkbox\\\\n          id='checkbox1'\\\\n          onChange={action('CheckboxField 1 Changed')}\\\\n          disabled={boolean('disabled', false, 'CheckboxField 1')}\\\\n          checked={boolean('checked', true, 'CheckboxField 1')}\\\\n          name={text('name', 'gender', 'CheckboxField 1')}\\\\n          value={text('value', 'Male', 'CheckboxField 1')}\\\\n          label={text('label', 'Male', 'CheckboxField 1')}\\\\n          checkboxSize={\\\\n            radios('size', radioOptions.size, 'sm') as tCheckboxSize\\\\n          }\\\\n          labelColor={text('Label Color', 'black')}\\\\n        />\\\\n        <Checkbox\\\\n          id='checkbox2'\\\\n          onChange={action('CheckboxField 2 Changed')}\\\\n          disabled={boolean('disabled', false, 'CheckboxField 2')}\\\\n          checked={boolean('checked', true, 'CheckboxField 2')}\\\\n          name={text('name', 'gender', 'CheckboxField 2')}\\\\n          value={text('value', 'Female', 'CheckboxField 2')}\\\\n          label={text('label', 'Female', 'CheckboxField 2')}\\\\n          checkboxSize={\\\\n            radios('size', radioOptions.size, 'sm') as tCheckboxSize\\\\n          }\\\\n          labelColor={text('Label Color', 'black')}\\\\n        />\\\\n        <Checkbox\\\\n          id='checkbox3'\\\\n          onChange={action('CheckboxField 3 Changed')}\\\\n          disabled={boolean('disabled', false, 'CheckboxField 3')}\\\\n          checked={boolean('checked', true, 'CheckboxField 3')}\\\\n          name={text('name', 'gender', 'CheckboxField 3')}\\\\n          value={text('value', 'Others', 'CheckboxField 3')}\\\\n          label={text('label', 'Others', 'CheckboxField 3')}\\\\n          checkboxSize={\\\\n            radios('size', radioOptions.size, 'sm') as tCheckboxSize\\\\n          }\\\\n          labelColor={text('Label Color', 'black')}\\\\n        />\\\\n      </CheckboxFieldGroup>\\\\n    </Card>\\\\n  </ThemeWrapper>\\\\n)\\\\n\\\\nexport const withForm = () => (\\\\n  <ThemeWrapper>\\\\n    <Card>\\\\n      <CheckboxFieldGroup\\\\n        id='CheckboxFieldGroup2'\\\\n        orientation={boolean('orientation', false)}\\\\n        spacing={number('spacing', 10)}\\\\n        variant='form'\\\\n        label='Gender'\\\\n        width={text('width', '50%')}\\\\n        labelColor={text('Group Label Color', 'black')}\\\\n        error={boolean('error', true)}\\\\n        errorMessage={text('errorMessage', 'Some Field Error')}\\\\n        required={boolean('required', false)}\\\\n      >\\\\n        <Checkbox\\\\n          id='checkbox1'\\\\n          onChange={action('CheckboxField 1 Changed')}\\\\n          disabled={boolean('disabled', false, 'CheckboxField 1')}\\\\n          checked={boolean('checked', true, 'CheckboxField 1')}\\\\n          name={text('name', 'gender', 'CheckboxField 1')}\\\\n          value={text('value', 'Male', 'CheckboxField 1')}\\\\n          label={text('label', 'Male', 'CheckboxField 1')}\\\\n          checkboxSize={\\\\n            radios('size', radioOptions.size, 'sm') as tCheckboxSize\\\\n          }\\\\n          labelColor={text('Label Color', 'black')}\\\\n        />\\\\n        <Checkbox\\\\n          id='checkbox2'\\\\n          onChange={action('CheckboxField 2 Changed')}\\\\n          disabled={boolean('disabled', false, 'CheckboxField 2')}\\\\n          checked={boolean('checked', true, 'CheckboxField 2')}\\\\n          name={text('name', 'gender', 'CheckboxField 2')}\\\\n          value={text('value', 'Female', 'CheckboxField 2')}\\\\n          label={text('label', 'Female', 'CheckboxField 2')}\\\\n          checkboxSize={\\\\n            radios('size', radioOptions.size, 'sm') as tCheckboxSize\\\\n          }\\\\n        />\\\\n        <Checkbox\\\\n          id='checkbox3'\\\\n          onChange={action('CheckboxField 3 Changed')}\\\\n          disabled={boolean('disabled', false, 'CheckboxField 3')}\\\\n          checked={boolean('checked', true, 'CheckboxField 3')}\\\\n          name={text('name', 'gender', 'CheckboxField 3')}\\\\n          value={text('value', 'Others', 'CheckboxField 3')}\\\\n          label={text('label', 'Others', 'CheckboxField 3')}\\\\n          checkboxSize={\\\\n            radios('size', radioOptions.size, 'sm') as tCheckboxSize\\\\n          }\\\\n          labelColor={text('Label Color', 'black')}\\\\n        />\\\\n      </CheckboxFieldGroup>\\\\n    </Card>\\\\n  </ThemeWrapper>\\\\n)\\\\n\\\",\\\"locationsMap\\\":{}},},\\n  title: `${path}/CheckboxFieldGroup`,\\n  decorators: [withKnobs],\\n  component: CheckboxFieldGroup\\n}\\n\\nconst radioOptions = {\\n  size: { sm: 'sm', md: 'md', lg: 'lg' }\\n}\\n\\nexport const withDefault = addSourceDecorator(() => (\\n  <ThemeWrapper>\\n    <Card>\\n      <CheckboxFieldGroup\\n        id='defaultCheckboxFieldGroup'\\n        orientation={boolean('orientation', false)}\\n        spacing={number('spacing', 10)}\\n        variant='default'\\n        width='400px'\\n        label='Gender'\\n        labelColor={text('Group Label Color', 'black')}\\n      >\\n        <Checkbox\\n          id='checkbox1'\\n          onChange={action('CheckboxField 1 Changed')}\\n          disabled={boolean('disabled', false, 'CheckboxField 1')}\\n          checked={boolean('checked', true, 'CheckboxField 1')}\\n          name={text('name', 'gender', 'CheckboxField 1')}\\n          value={text('value', 'Male', 'CheckboxField 1')}\\n          label={text('label', 'Male', 'CheckboxField 1')}\\n          checkboxSize={\\n            radios('size', radioOptions.size, 'sm') as tCheckboxSize\\n          }\\n          labelColor={text('Label Color', 'black')}\\n        />\\n        <Checkbox\\n          id='checkbox2'\\n          onChange={action('CheckboxField 2 Changed')}\\n          disabled={boolean('disabled', false, 'CheckboxField 2')}\\n          checked={boolean('checked', true, 'CheckboxField 2')}\\n          name={text('name', 'gender', 'CheckboxField 2')}\\n          value={text('value', 'Female', 'CheckboxField 2')}\\n          label={text('label', 'Female', 'CheckboxField 2')}\\n          checkboxSize={\\n            radios('size', radioOptions.size, 'sm') as tCheckboxSize\\n          }\\n          labelColor={text('Label Color', 'black')}\\n        />\\n        <Checkbox\\n          id='checkbox3'\\n          onChange={action('CheckboxField 3 Changed')}\\n          disabled={boolean('disabled', false, 'CheckboxField 3')}\\n          checked={boolean('checked', true, 'CheckboxField 3')}\\n          name={text('name', 'gender', 'CheckboxField 3')}\\n          value={text('value', 'Others', 'CheckboxField 3')}\\n          label={text('label', 'Others', 'CheckboxField 3')}\\n          checkboxSize={\\n            radios('size', radioOptions.size, 'sm') as tCheckboxSize\\n          }\\n          labelColor={text('Label Color', 'black')}\\n        />\\n      </CheckboxFieldGroup>\\n    </Card>\\n  </ThemeWrapper>\\n), {__STORY__, __ADDS_MAP__,__MAIN_FILE_LOCATION__,__MODULE_DEPENDENCIES__,__LOCAL_DEPENDENCIES__,__SOURCE_PREFIX__,__IDS_TO_FRAMEWORKS__});\\n\\nexport const withForm = addSourceDecorator(() => (\\n  <ThemeWrapper>\\n    <Card>\\n      <CheckboxFieldGroup\\n        id='CheckboxFieldGroup2'\\n        orientation={boolean('orientation', false)}\\n        spacing={number('spacing', 10)}\\n        variant='form'\\n        label='Gender'\\n        width={text('width', '50%')}\\n        labelColor={text('Group Label Color', 'black')}\\n        error={boolean('error', true)}\\n        errorMessage={text('errorMessage', 'Some Field Error')}\\n        required={boolean('required', false)}\\n      >\\n        <Checkbox\\n          id='checkbox1'\\n          onChange={action('CheckboxField 1 Changed')}\\n          disabled={boolean('disabled', false, 'CheckboxField 1')}\\n          checked={boolean('checked', true, 'CheckboxField 1')}\\n          name={text('name', 'gender', 'CheckboxField 1')}\\n          value={text('value', 'Male', 'CheckboxField 1')}\\n          label={text('label', 'Male', 'CheckboxField 1')}\\n          checkboxSize={\\n            radios('size', radioOptions.size, 'sm') as tCheckboxSize\\n          }\\n          labelColor={text('Label Color', 'black')}\\n        />\\n        <Checkbox\\n          id='checkbox2'\\n          onChange={action('CheckboxField 2 Changed')}\\n          disabled={boolean('disabled', false, 'CheckboxField 2')}\\n          checked={boolean('checked', true, 'CheckboxField 2')}\\n          name={text('name', 'gender', 'CheckboxField 2')}\\n          value={text('value', 'Female', 'CheckboxField 2')}\\n          label={text('label', 'Female', 'CheckboxField 2')}\\n          checkboxSize={\\n            radios('size', radioOptions.size, 'sm') as tCheckboxSize\\n          }\\n        />\\n        <Checkbox\\n          id='checkbox3'\\n          onChange={action('CheckboxField 3 Changed')}\\n          disabled={boolean('disabled', false, 'CheckboxField 3')}\\n          checked={boolean('checked', true, 'CheckboxField 3')}\\n          name={text('name', 'gender', 'CheckboxField 3')}\\n          value={text('value', 'Others', 'CheckboxField 3')}\\n          label={text('label', 'Others', 'CheckboxField 3')}\\n          checkboxSize={\\n            radios('size', radioOptions.size, 'sm') as tCheckboxSize\\n          }\\n          labelColor={text('Label Color', 'black')}\\n        />\\n      </CheckboxFieldGroup>\\n    </Card>\\n  </ThemeWrapper>\\n), {__STORY__, __ADDS_MAP__,__MAIN_FILE_LOCATION__,__MODULE_DEPENDENCIES__,__LOCAL_DEPENDENCIES__,__SOURCE_PREFIX__,__IDS_TO_FRAMEWORKS__});\",\n    \"locationsMap\": {}\n  }), _defineProperty(_parameters, \"storySource\", {\n    \"source\": \"import React from 'react'\\nimport { path } from '..'\\nimport CheckboxFieldGroup from '.'\\nimport {\\n  withKnobs,\\n  boolean,\\n  radios,\\n  number,\\n  text\\n} from '@storybook/addon-knobs'\\nimport { action } from '@storybook/addon-actions'\\nimport ThemeWrapper from '../../../utilities/components/ThemeWrapper'\\nimport Checkbox, { tCheckboxSize } from '../Checkbox'\\n\\nimport Card from '../Card'\\n\\nexport default {\\n  title: `${path}/CheckboxFieldGroup`,\\n  decorators: [withKnobs],\\n  component: CheckboxFieldGroup\\n}\\n\\nconst radioOptions = {\\n  size: { sm: 'sm', md: 'md', lg: 'lg' }\\n}\\n\\nexport const withDefault = () => (\\n  <ThemeWrapper>\\n    <Card>\\n      <CheckboxFieldGroup\\n        id='defaultCheckboxFieldGroup'\\n        orientation={boolean('orientation', false)}\\n        spacing={number('spacing', 10)}\\n        variant='default'\\n        width='400px'\\n        label='Gender'\\n        labelColor={text('Group Label Color', 'black')}\\n      >\\n        <Checkbox\\n          id='checkbox1'\\n          onChange={action('CheckboxField 1 Changed')}\\n          disabled={boolean('disabled', false, 'CheckboxField 1')}\\n          checked={boolean('checked', true, 'CheckboxField 1')}\\n          name={text('name', 'gender', 'CheckboxField 1')}\\n          value={text('value', 'Male', 'CheckboxField 1')}\\n          label={text('label', 'Male', 'CheckboxField 1')}\\n          checkboxSize={\\n            radios('size', radioOptions.size, 'sm') as tCheckboxSize\\n          }\\n          labelColor={text('Label Color', 'black')}\\n        />\\n        <Checkbox\\n          id='checkbox2'\\n          onChange={action('CheckboxField 2 Changed')}\\n          disabled={boolean('disabled', false, 'CheckboxField 2')}\\n          checked={boolean('checked', true, 'CheckboxField 2')}\\n          name={text('name', 'gender', 'CheckboxField 2')}\\n          value={text('value', 'Female', 'CheckboxField 2')}\\n          label={text('label', 'Female', 'CheckboxField 2')}\\n          checkboxSize={\\n            radios('size', radioOptions.size, 'sm') as tCheckboxSize\\n          }\\n          labelColor={text('Label Color', 'black')}\\n        />\\n        <Checkbox\\n          id='checkbox3'\\n          onChange={action('CheckboxField 3 Changed')}\\n          disabled={boolean('disabled', false, 'CheckboxField 3')}\\n          checked={boolean('checked', true, 'CheckboxField 3')}\\n          name={text('name', 'gender', 'CheckboxField 3')}\\n          value={text('value', 'Others', 'CheckboxField 3')}\\n          label={text('label', 'Others', 'CheckboxField 3')}\\n          checkboxSize={\\n            radios('size', radioOptions.size, 'sm') as tCheckboxSize\\n          }\\n          labelColor={text('Label Color', 'black')}\\n        />\\n      </CheckboxFieldGroup>\\n    </Card>\\n  </ThemeWrapper>\\n)\\n\\nexport const withForm = () => (\\n  <ThemeWrapper>\\n    <Card>\\n      <CheckboxFieldGroup\\n        id='CheckboxFieldGroup2'\\n        orientation={boolean('orientation', false)}\\n        spacing={number('spacing', 10)}\\n        variant='form'\\n        label='Gender'\\n        width={text('width', '50%')}\\n        labelColor={text('Group Label Color', 'black')}\\n        error={boolean('error', true)}\\n        errorMessage={text('errorMessage', 'Some Field Error')}\\n        required={boolean('required', false)}\\n      >\\n        <Checkbox\\n          id='checkbox1'\\n          onChange={action('CheckboxField 1 Changed')}\\n          disabled={boolean('disabled', false, 'CheckboxField 1')}\\n          checked={boolean('checked', true, 'CheckboxField 1')}\\n          name={text('name', 'gender', 'CheckboxField 1')}\\n          value={text('value', 'Male', 'CheckboxField 1')}\\n          label={text('label', 'Male', 'CheckboxField 1')}\\n          checkboxSize={\\n            radios('size', radioOptions.size, 'sm') as tCheckboxSize\\n          }\\n          labelColor={text('Label Color', 'black')}\\n        />\\n        <Checkbox\\n          id='checkbox2'\\n          onChange={action('CheckboxField 2 Changed')}\\n          disabled={boolean('disabled', false, 'CheckboxField 2')}\\n          checked={boolean('checked', true, 'CheckboxField 2')}\\n          name={text('name', 'gender', 'CheckboxField 2')}\\n          value={text('value', 'Female', 'CheckboxField 2')}\\n          label={text('label', 'Female', 'CheckboxField 2')}\\n          checkboxSize={\\n            radios('size', radioOptions.size, 'sm') as tCheckboxSize\\n          }\\n        />\\n        <Checkbox\\n          id='checkbox3'\\n          onChange={action('CheckboxField 3 Changed')}\\n          disabled={boolean('disabled', false, 'CheckboxField 3')}\\n          checked={boolean('checked', true, 'CheckboxField 3')}\\n          name={text('name', 'gender', 'CheckboxField 3')}\\n          value={text('value', 'Others', 'CheckboxField 3')}\\n          label={text('label', 'Others', 'CheckboxField 3')}\\n          checkboxSize={\\n            radios('size', radioOptions.size, 'sm') as tCheckboxSize\\n          }\\n          labelColor={text('Label Color', 'black')}\\n        />\\n      </CheckboxFieldGroup>\\n    </Card>\\n  </ThemeWrapper>\\n)\\n\",\n    \"locationsMap\": {}\n  }), _parameters),\n  title: path + \"/CheckboxFieldGroup\",\n  decorators: [withKnobs],\n  component: CheckboxFieldGroup\n};\nvar radioOptions = {\n  size: {\n    sm: 'sm',\n    md: 'md',\n    lg: 'lg'\n  }\n};\nexport var withDefault = addSourceDecorator(addSourceDecorator(addSourceDecorator(function () {\n  return React.createElement(ThemeWrapper, null, React.createElement(Card, null, React.createElement(CheckboxFieldGroup, {\n    id: 'defaultCheckboxFieldGroup',\n    orientation: _boolean('orientation', false),\n    spacing: number('spacing', 10),\n    variant: 'default',\n    width: '400px',\n    label: 'Gender',\n    labelColor: text('Group Label Color', 'black')\n  }, React.createElement(Checkbox, {\n    id: 'checkbox1',\n    onChange: action('CheckboxField 1 Changed'),\n    disabled: _boolean('disabled', false, 'CheckboxField 1'),\n    checked: _boolean('checked', true, 'CheckboxField 1'),\n    name: text('name', 'gender', 'CheckboxField 1'),\n    value: text('value', 'Male', 'CheckboxField 1'),\n    label: text('label', 'Male', 'CheckboxField 1'),\n    checkboxSize: radios('size', radioOptions.size, 'sm'),\n    labelColor: text('Label Color', 'black')\n  }), React.createElement(Checkbox, {\n    id: 'checkbox2',\n    onChange: action('CheckboxField 2 Changed'),\n    disabled: _boolean('disabled', false, 'CheckboxField 2'),\n    checked: _boolean('checked', true, 'CheckboxField 2'),\n    name: text('name', 'gender', 'CheckboxField 2'),\n    value: text('value', 'Female', 'CheckboxField 2'),\n    label: text('label', 'Female', 'CheckboxField 2'),\n    checkboxSize: radios('size', radioOptions.size, 'sm'),\n    labelColor: text('Label Color', 'black')\n  }), React.createElement(Checkbox, {\n    id: 'checkbox3',\n    onChange: action('CheckboxField 3 Changed'),\n    disabled: _boolean('disabled', false, 'CheckboxField 3'),\n    checked: _boolean('checked', true, 'CheckboxField 3'),\n    name: text('name', 'gender', 'CheckboxField 3'),\n    value: text('value', 'Others', 'CheckboxField 3'),\n    label: text('label', 'Others', 'CheckboxField 3'),\n    checkboxSize: radios('size', radioOptions.size, 'sm'),\n    labelColor: text('Label Color', 'black')\n  }))));\n}, {\n  __STORY__: __STORY__,\n  __ADDS_MAP__: __ADDS_MAP__,\n  __MAIN_FILE_LOCATION__: __MAIN_FILE_LOCATION__,\n  __MODULE_DEPENDENCIES__: __MODULE_DEPENDENCIES__,\n  __LOCAL_DEPENDENCIES__: __LOCAL_DEPENDENCIES__,\n  __SOURCE_PREFIX__: __SOURCE_PREFIX__,\n  __IDS_TO_FRAMEWORKS__: __IDS_TO_FRAMEWORKS__\n}), {\n  __STORY__: __STORY__,\n  __ADDS_MAP__: __ADDS_MAP__,\n  __MAIN_FILE_LOCATION__: __MAIN_FILE_LOCATION__,\n  __MODULE_DEPENDENCIES__: __MODULE_DEPENDENCIES__,\n  __LOCAL_DEPENDENCIES__: __LOCAL_DEPENDENCIES__,\n  __SOURCE_PREFIX__: __SOURCE_PREFIX__,\n  __IDS_TO_FRAMEWORKS__: __IDS_TO_FRAMEWORKS__\n}), {\n  __STORY__: __STORY__,\n  __ADDS_MAP__: __ADDS_MAP__,\n  __MAIN_FILE_LOCATION__: __MAIN_FILE_LOCATION__,\n  __MODULE_DEPENDENCIES__: __MODULE_DEPENDENCIES__,\n  __LOCAL_DEPENDENCIES__: __LOCAL_DEPENDENCIES__,\n  __SOURCE_PREFIX__: __SOURCE_PREFIX__,\n  __IDS_TO_FRAMEWORKS__: __IDS_TO_FRAMEWORKS__\n});\n;\n;\nexport var withForm = addSourceDecorator(addSourceDecorator(addSourceDecorator(function () {\n  return React.createElement(ThemeWrapper, null, React.createElement(Card, null, React.createElement(CheckboxFieldGroup, {\n    id: 'CheckboxFieldGroup2',\n    orientation: _boolean('orientation', false),\n    spacing: number('spacing', 10),\n    variant: 'form',\n    label: 'Gender',\n    width: text('width', '50%'),\n    labelColor: text('Group Label Color', 'black'),\n    error: _boolean('error', true),\n    errorMessage: text('errorMessage', 'Some Field Error'),\n    required: _boolean('required', false)\n  }, React.createElement(Checkbox, {\n    id: 'checkbox1',\n    onChange: action('CheckboxField 1 Changed'),\n    disabled: _boolean('disabled', false, 'CheckboxField 1'),\n    checked: _boolean('checked', true, 'CheckboxField 1'),\n    name: text('name', 'gender', 'CheckboxField 1'),\n    value: text('value', 'Male', 'CheckboxField 1'),\n    label: text('label', 'Male', 'CheckboxField 1'),\n    checkboxSize: radios('size', radioOptions.size, 'sm'),\n    labelColor: text('Label Color', 'black')\n  }), React.createElement(Checkbox, {\n    id: 'checkbox2',\n    onChange: action('CheckboxField 2 Changed'),\n    disabled: _boolean('disabled', false, 'CheckboxField 2'),\n    checked: _boolean('checked', true, 'CheckboxField 2'),\n    name: text('name', 'gender', 'CheckboxField 2'),\n    value: text('value', 'Female', 'CheckboxField 2'),\n    label: text('label', 'Female', 'CheckboxField 2'),\n    checkboxSize: radios('size', radioOptions.size, 'sm')\n  }), React.createElement(Checkbox, {\n    id: 'checkbox3',\n    onChange: action('CheckboxField 3 Changed'),\n    disabled: _boolean('disabled', false, 'CheckboxField 3'),\n    checked: _boolean('checked', true, 'CheckboxField 3'),\n    name: text('name', 'gender', 'CheckboxField 3'),\n    value: text('value', 'Others', 'CheckboxField 3'),\n    label: text('label', 'Others', 'CheckboxField 3'),\n    checkboxSize: radios('size', radioOptions.size, 'sm'),\n    labelColor: text('Label Color', 'black')\n  }))));\n}, {\n  __STORY__: __STORY__,\n  __ADDS_MAP__: __ADDS_MAP__,\n  __MAIN_FILE_LOCATION__: __MAIN_FILE_LOCATION__,\n  __MODULE_DEPENDENCIES__: __MODULE_DEPENDENCIES__,\n  __LOCAL_DEPENDENCIES__: __LOCAL_DEPENDENCIES__,\n  __SOURCE_PREFIX__: __SOURCE_PREFIX__,\n  __IDS_TO_FRAMEWORKS__: __IDS_TO_FRAMEWORKS__\n}), {\n  __STORY__: __STORY__,\n  __ADDS_MAP__: __ADDS_MAP__,\n  __MAIN_FILE_LOCATION__: __MAIN_FILE_LOCATION__,\n  __MODULE_DEPENDENCIES__: __MODULE_DEPENDENCIES__,\n  __LOCAL_DEPENDENCIES__: __LOCAL_DEPENDENCIES__,\n  __SOURCE_PREFIX__: __SOURCE_PREFIX__,\n  __IDS_TO_FRAMEWORKS__: __IDS_TO_FRAMEWORKS__\n}), {\n  __STORY__: __STORY__,\n  __ADDS_MAP__: __ADDS_MAP__,\n  __MAIN_FILE_LOCATION__: __MAIN_FILE_LOCATION__,\n  __MODULE_DEPENDENCIES__: __MODULE_DEPENDENCIES__,\n  __LOCAL_DEPENDENCIES__: __LOCAL_DEPENDENCIES__,\n  __SOURCE_PREFIX__: __SOURCE_PREFIX__,\n  __IDS_TO_FRAMEWORKS__: __IDS_TO_FRAMEWORKS__\n});","map":{"version":3,"sources":["/Users/farhanansari/Code/ui-library/node_modules/react-docgen-typescript-loader/dist/index.js!/Users/farhanansari/Code/ui-library/node_modules/eslint-loader/dist/cjs.js??ref--6-0!/Users/farhanansari/Code/ui-library/node_modules/@storybook/source-loader/dist/server/index.js??ref--11!/Users/farhanansari/Code/ui-library/node_modules/@storybook/source-loader/dist/server/index.js!/Users/farhanansari/Code/ui-library/node_modules/@storybook/source-loader/dist/server/index.js!/Users/farhanansari/Code/ui-library/src/components/atoms/CheckboxFieldGroup/CheckboxFieldGroup.stories.tsx"],"names":[],"mappings":";;;;AACA;AACA;AACA;AACA,IAAI,gBAAgB,GAAG,OAAO,CAAC,kCAAD,CAAP,CAA4C,UAAnE,C,CACA;;;AACA,IAAI,kBAAkB,GAAG,OAAO,CAAC,kCAAD,CAAP,CAA4C,SAArE,C,CACA;;;AACA,IAAI,iBAAiB,GAAG,6EAAxB,C,CACA;;AACA,IAAI,SAAS,GAAG,ypmDAAhB,C,CACA;;AACA,IAAI,YAAY,GAAG,EAAnB,C,CACA;;AACA,IAAI,sBAAsB,GAAG,iCAA7B,C,CACA;;AACA,IAAI,uBAAuB,GAAG,EAA9B,C,CACA;;AACA,IAAI,sBAAsB,GAAG,EAA7B,C,CACA;;AACA,IAAI,qBAAqB,GAAG,EAA5B;AAGA;AACA;AACA;;AACA,IAAI,gBAAgB,GAAG,OAAO,CAAC,kCAAD,CAAP,CAA4C,UAAnE,C,CACA;;;AACA,IAAI,kBAAkB,GAAG,OAAO,CAAC,kCAAD,CAAP,CAA4C,SAArE,C,CACA;;;AACA,IAAI,iBAAiB,GAAG,6EAAxB,C,CACA;;AACA,IAAI,SAAS,GAAG,8ugBAAhB,C,CACA;;AACA,IAAI,YAAY,GAAG,EAAnB,C,CACA;;AACA,IAAI,sBAAsB,GAAG,iCAA7B,C,CACA;;AACA,IAAI,uBAAuB,GAAG,EAA9B,C,CACA;;AACA,IAAI,sBAAsB,GAAG,EAA7B,C,CACA;;AACA,IAAI,qBAAqB,GAAG,EAA5B;AAGA;AACA;AACA;;AACA,IAAI,gBAAgB,GAAG,OAAO,CAAC,kCAAD,CAAP,CAA4C,UAAnE,C,CACA;;;AACA,IAAI,kBAAkB,GAAG,OAAO,CAAC,kCAAD,CAAP,CAA4C,SAArE,C,CACA;;;AACA,IAAI,iBAAiB,GAAG,6EAAxB,C,CACA;;AACA,IAAI,SAAS,GAAG,i/JAAhB,C,CACA;;AACA,IAAI,YAAY,GAAG,EAAnB,C,CACA;;AACA,IAAI,sBAAsB,GAAG,iCAA7B,C,CACA;;AACA,IAAI,uBAAuB,GAAG,EAA9B,C,CACA;;AACA,IAAI,sBAAsB,GAAG,EAA7B,C,CACA;;AACA,IAAI,qBAAqB,GAAG,EAA5B;AAEA,OAAO,KAAP,MAAkB,OAAlB;AACA,SAAS,IAAT,QAAqB,IAArB;AACA,OAAO,kBAAP,MAA+B,GAA/B;AACA,SACE,SADF,EAEE,OAAO,IAAP,QAFF,EAGE,MAHF,EAIE,MAJF,EAKE,IALF,QAMO,wBANP;AAOA,SAAS,MAAT,QAAuB,0BAAvB;AACA,OAAO,YAAP,MAAyB,4CAAzB;AACA,OAAO,QAAP,MAAwC,aAAxC;AAEA,OAAO,IAAP,MAAiB,SAAjB;AAEA,eAAe;AAAC,EAAA,UAAU;AAAG,mBAAc;AAAC,gBAAS,ypmDAAV;AAAoqmD,sBAAe;AAAnrmD;AAAjB,iDAAstmD;AAAC,cAAS,8ugBAAV;AAAyvgB,oBAAe;AAAxwgB,GAAttmD,+CAAg/mE;AAAC,cAAS,i/JAAV;AAA4/J,oBAAe;AAA3gK,GAAh/mE,eAAX;AACb,EAAA,KAAK,EAAK,IAAI,GAAA,qBADD;AAEb,EAAA,UAAU,EAAE,CAAC,SAAD,CAFC;AAGb,EAAA,SAAS,EAAE;AAHE,CAAf;AAMA,IAAM,YAAY,GAAG;AACnB,EAAA,IAAI,EAAE;AAAE,IAAA,EAAE,EAAE,IAAN;AAAY,IAAA,EAAE,EAAE,IAAhB;AAAsB,IAAA,EAAE,EAAE;AAA1B;AADa,CAArB;AAIA,OAAO,IAAM,WAAW,GAAG,kBAAkB,CAAC,kBAAkB,CAAC,kBAAkB,CAAC,YAAA;AAAM,SACxF,KAAA,CAAA,aAAA,CAAC,YAAD,EAAa,IAAb,EACE,KAAA,CAAA,aAAA,CAAC,IAAD,EAAK,IAAL,EACE,KAAA,CAAA,aAAA,CAAC,kBAAD,EAAmB;AACjB,IAAA,EAAE,EAAC,2BADc;AAEjB,IAAA,WAAW,EAAE,QAAO,CAAC,aAAD,EAAgB,KAAhB,CAFH;AAGjB,IAAA,OAAO,EAAE,MAAM,CAAC,SAAD,EAAY,EAAZ,CAHE;AAIjB,IAAA,OAAO,EAAC,SAJS;AAKjB,IAAA,KAAK,EAAC,OALW;AAMjB,IAAA,KAAK,EAAC,QANW;AAOjB,IAAA,UAAU,EAAE,IAAI,CAAC,mBAAD,EAAsB,OAAtB;AAPC,GAAnB,EASE,KAAA,CAAA,aAAA,CAAC,QAAD,EAAS;AACP,IAAA,EAAE,EAAC,WADI;AAEP,IAAA,QAAQ,EAAE,MAAM,CAAC,yBAAD,CAFT;AAGP,IAAA,QAAQ,EAAE,QAAO,CAAC,UAAD,EAAa,KAAb,EAAoB,iBAApB,CAHV;AAIP,IAAA,OAAO,EAAE,QAAO,CAAC,SAAD,EAAY,IAAZ,EAAkB,iBAAlB,CAJT;AAKP,IAAA,IAAI,EAAE,IAAI,CAAC,MAAD,EAAS,QAAT,EAAmB,iBAAnB,CALH;AAMP,IAAA,KAAK,EAAE,IAAI,CAAC,OAAD,EAAU,MAAV,EAAkB,iBAAlB,CANJ;AAOP,IAAA,KAAK,EAAE,IAAI,CAAC,OAAD,EAAU,MAAV,EAAkB,iBAAlB,CAPJ;AAQP,IAAA,YAAY,EACV,MAAM,CAAC,MAAD,EAAS,YAAY,CAAC,IAAtB,EAA4B,IAA5B,CATD;AAWP,IAAA,UAAU,EAAE,IAAI,CAAC,aAAD,EAAgB,OAAhB;AAXT,GAAT,CATF,EAsBE,KAAA,CAAA,aAAA,CAAC,QAAD,EAAS;AACP,IAAA,EAAE,EAAC,WADI;AAEP,IAAA,QAAQ,EAAE,MAAM,CAAC,yBAAD,CAFT;AAGP,IAAA,QAAQ,EAAE,QAAO,CAAC,UAAD,EAAa,KAAb,EAAoB,iBAApB,CAHV;AAIP,IAAA,OAAO,EAAE,QAAO,CAAC,SAAD,EAAY,IAAZ,EAAkB,iBAAlB,CAJT;AAKP,IAAA,IAAI,EAAE,IAAI,CAAC,MAAD,EAAS,QAAT,EAAmB,iBAAnB,CALH;AAMP,IAAA,KAAK,EAAE,IAAI,CAAC,OAAD,EAAU,QAAV,EAAoB,iBAApB,CANJ;AAOP,IAAA,KAAK,EAAE,IAAI,CAAC,OAAD,EAAU,QAAV,EAAoB,iBAApB,CAPJ;AAQP,IAAA,YAAY,EACV,MAAM,CAAC,MAAD,EAAS,YAAY,CAAC,IAAtB,EAA4B,IAA5B,CATD;AAWP,IAAA,UAAU,EAAE,IAAI,CAAC,aAAD,EAAgB,OAAhB;AAXT,GAAT,CAtBF,EAmCE,KAAA,CAAA,aAAA,CAAC,QAAD,EAAS;AACP,IAAA,EAAE,EAAC,WADI;AAEP,IAAA,QAAQ,EAAE,MAAM,CAAC,yBAAD,CAFT;AAGP,IAAA,QAAQ,EAAE,QAAO,CAAC,UAAD,EAAa,KAAb,EAAoB,iBAApB,CAHV;AAIP,IAAA,OAAO,EAAE,QAAO,CAAC,SAAD,EAAY,IAAZ,EAAkB,iBAAlB,CAJT;AAKP,IAAA,IAAI,EAAE,IAAI,CAAC,MAAD,EAAS,QAAT,EAAmB,iBAAnB,CALH;AAMP,IAAA,KAAK,EAAE,IAAI,CAAC,OAAD,EAAU,QAAV,EAAoB,iBAApB,CANJ;AAOP,IAAA,KAAK,EAAE,IAAI,CAAC,OAAD,EAAU,QAAV,EAAoB,iBAApB,CAPJ;AAQP,IAAA,YAAY,EACV,MAAM,CAAC,MAAD,EAAS,YAAY,CAAC,IAAtB,EAA4B,IAA5B,CATD;AAWP,IAAA,UAAU,EAAE,IAAI,CAAC,aAAD,EAjDgE,OAiDhE;AAXT,GAAT,CAnCF,CADF,CADF,CADwF;AAsDzF,CAtDkF,EAsDhF;AAAC,EAAA,SAAS,EAAA,SAAV;AAAY,EAAA,YAAY,EAAA,YAAxB;AAAyB,EAAA,sBAAsB,EAAA,sBAA/C;AAAgD,EAAA,uBAAuB,EAAA,uBAAvE;AAAwE,EAAA,sBAAsB,EAAA,sBAA9F;AAA+F,EAAA,iBAAiB,EAAA,iBAAhH;AAAiH,EAAA,qBAAqB,EAAA;AAAtI,CAtDgF,CAAnB,EAsD6E;AAAC,EAAA,SAAS,EAAA,SAAV;AAAY,EAAA,YAAY,EAAA,YAAxB;AAAyB,EAAA,sBAAsB,EAAA,sBAA/C;AAAgD,EAAA,uBAAuB,EAAA,uBAAvE;AAAwE,EAAA,sBAAsB,EAAA,sBAA9F;AAA+F,EAAA,iBAAiB,EAAA,iBAAhH;AAAiH,EAAA,qBAAqB,EAAA;AAAtI,CAtD7E,CAAnB,EAsD0O;AAAC,EAAA,SAAS,EAAA,SAAV;AAAY,EAAA,YAAY,EAAA,YAAxB;AAAyB,EAAA,sBAAsB,EAAA,sBAA/C;AAAgD,EAAA,uBAAuB,EAAA,uBAAvE;AAAwE,EAAA,sBAAsB,EAAA,sBAA9F;AAA+F,EAAA,iBAAiB,EAAA,iBAAhH;AAAiH,EAAA,qBAAqB,EAAA;AAAtI,CAtD1O,CAAtC;AAsDyZ;AAAC;AAEja,OAAO,IAAM,QAAQ,GAAG,kBAAkB,CAAC,kBAAkB,CAAC,kBAAkB,CAAC,YAAA;AAAM,SACrF,KAAA,CAAA,aAAA,CAAC,YAAD,EAAa,IAAb,EACE,KAAA,CAAA,aAAA,CAAC,IAAD,EAAK,IAAL,EACE,KAAA,CAAA,aAAA,CAAC,kBAAD,EAAmB;AACjB,IAAA,EAAE,EAAC,qBADc;AAEjB,IAAA,WAAW,EAAE,QAAO,CAAC,aAAD,EAAgB,KAAhB,CAFH;AAGjB,IAAA,OAAO,EAAE,MAAM,CAAC,SAAD,EAAY,EAAZ,CAHE;AAIjB,IAAA,OAAO,EAAC,MAJS;AAKjB,IAAA,KAAK,EAAC,QALW;AAMjB,IAAA,KAAK,EAAE,IAAI,CAAC,OAAD,EAAU,KAAV,CANM;AAOjB,IAAA,UAAU,EAAE,IAAI,CAAC,mBAAD,EAAsB,OAAtB,CAPC;AAQjB,IAAA,KAAK,EAAE,QAAO,CAAC,OAAD,EAAU,IAAV,CARG;AASjB,IAAA,YAAY,EAAE,IAAI,CAAC,cAAD,EAAiB,kBAAjB,CATD;AAUjB,IAAA,QAAQ,EAAE,QAAO,CAAC,UAAD,EAAa,KAAb;AAVA,GAAnB,EAYE,KAAA,CAAA,aAAA,CAAC,QAAD,EAAS;AACP,IAAA,EAAE,EAAC,WADI;AAEP,IAAA,QAAQ,EAAE,MAAM,CAAC,yBAAD,CAFT;AAGP,IAAA,QAAQ,EAAE,QAAO,CAAC,UAAD,EAAa,KAAb,EAAoB,iBAApB,CAHV;AAIP,IAAA,OAAO,EAAE,QAAO,CAAC,SAAD,EAAY,IAAZ,EAAkB,iBAAlB,CAJT;AAKP,IAAA,IAAI,EAAE,IAAI,CAAC,MAAD,EAAS,QAAT,EAAmB,iBAAnB,CALH;AAMP,IAAA,KAAK,EAAE,IAAI,CAAC,OAAD,EAAU,MAAV,EAAkB,iBAAlB,CANJ;AAOP,IAAA,KAAK,EAAE,IAAI,CAAC,OAAD,EAAU,MAAV,EAAkB,iBAAlB,CAPJ;AAQP,IAAA,YAAY,EACV,MAAM,CAAC,MAAD,EAAS,YAAY,CAAC,IAAtB,EAA4B,IAA5B,CATD;AAWP,IAAA,UAAU,EAAE,IAAI,CAAC,aAAD,EAAgB,OAAhB;AAXT,GAAT,CAZF,EAyBE,KAAA,CAAA,aAAA,CAAC,QAAD,EAAS;AACP,IAAA,EAAE,EAAC,WADI;AAEP,IAAA,QAAQ,EAAE,MAAM,CAAC,yBAAD,CAFT;AAGP,IAAA,QAAQ,EAAE,QAAO,CAAC,UAAD,EAAa,KAAb,EAAoB,iBAApB,CAHV;AAIP,IAAA,OAAO,EAAE,QAAO,CAAC,SAAD,EAAY,IAAZ,EAAkB,iBAAlB,CAJT;AAKP,IAAA,IAAI,EAAE,IAAI,CAAC,MAAD,EAAS,QAAT,EAAmB,iBAAnB,CALH;AAMP,IAAA,KAAK,EAAE,IAAI,CAAC,OAAD,EAAU,QAAV,EAAoB,iBAApB,CANJ;AAOP,IAAA,KAAK,EAAE,IAAI,CAAC,OAAD,EAAU,QAAV,EAAoB,iBAApB,CAPJ;AAQP,IAAA,YAAY,EACV,MAAM,CAAC,MAAD,EAAS,YAAY,CAAC,IAAtB,EAA4B,IAA5B;AATD,GAAT,CAzBF,EAqCE,KAAA,CAAA,aAAA,CAAC,QAAD,EAAS;AACP,IAAA,EAAE,EAAC,WADI;AAEP,IAAA,QAAQ,EAAE,MAAM,CAAC,yBAAD,CAFT;AAGP,IAAA,QAAQ,EAAE,QAAO,CAAC,UAAD,EAAa,KAAb,EAAoB,iBAApB,CAHV;AAIP,IAAA,OAAO,EAAE,QAAO,CAAC,SAAD,EAAY,IAAZ,EAAkB,iBAAlB,CAJT;AAKP,IAAA,IAAI,EAAE,IAAI,CAAC,MAAD,EAAS,QAAT,EAAmB,iBAAnB,CALH;AAMP,IAAA,KAAK,EAAE,IAAI,CAAC,OAAD,EAAU,QAAV,EAAoB,iBAApB,CANJ;AAOP,IAAA,KAAK,EAAE,IAAI,CAAC,OAAD,EAAU,QAAV,EAAoB,iBAApB,CAPJ;AAQP,IAAA,YAAY,EACV,MAAM,CAAC,MAAD,EAAS,YAAY,CAAC,IAAtB,EAA4B,IAA5B,CATD;AAWP,IAAA,UAAU,EAAE,IAAI,CAAC,aAAD,EAnD6D,OAmD7D;AAXT,GAAT,CArCF,CADF,CADF,CADqF;AAwDtF,CAxD+E,EAwD7E;AAAC,EAAA,SAAS,EAAA,SAAV;AAAY,EAAA,YAAY,EAAA,YAAxB;AAAyB,EAAA,sBAAsB,EAAA,sBAA/C;AAAgD,EAAA,uBAAuB,EAAA,uBAAvE;AAAwE,EAAA,sBAAsB,EAAA,sBAA9F;AAA+F,EAAA,iBAAiB,EAAA,iBAAhH;AAAiH,EAAA,qBAAqB,EAAA;AAAtI,CAxD6E,CAAnB,EAwDgF;AAAC,EAAA,SAAS,EAAA,SAAV;AAAY,EAAA,YAAY,EAAA,YAAxB;AAAyB,EAAA,sBAAsB,EAAA,sBAA/C;AAAgD,EAAA,uBAAuB,EAAA,uBAAvE;AAAwE,EAAA,sBAAsB,EAAA,sBAA9F;AAA+F,EAAA,iBAAiB,EAAA,iBAAhH;AAAiH,EAAA,qBAAqB,EAAA;AAAtI,CAxDhF,CAAnB,EAwD6O;AAAC,EAAA,SAAS,EAAA,SAAV;AAAY,EAAA,YAAY,EAAA,YAAxB;AAAyB,EAAA,sBAAsB,EAAA,sBAA/C;AAAgD,EAAA,uBAAuB,EAAA,uBAAvE;AAAwE,EAAA,sBAAsB,EAAA,sBAA9F;AAA+F,EAAA,iBAAiB,EAAA,iBAAhH;AAAiH,EAAA,qBAAqB,EAAA;AAAtI,CAxD7O,CAAnC","sourcesContent":["\n/* eslint-disable */\n// @ts-nocheck\n// @ts-ignore\nvar withSourceLoader = require('@storybook/source-loader/preview').withSource;\n// @ts-ignore\nvar addSourceDecorator = require(\"@storybook/source-loader/preview\").addSource;\n// @ts-ignore\nvar __SOURCE_PREFIX__ = \"/Users/farhanansari/Code/ui-library/src/components/atoms/CheckboxFieldGroup\";\n// @ts-ignore\nvar __STORY__ = \"\\n\\n// @ts-nocheck\\n// @ts-ignore\\nvar withSourceLoader = require('@storybook/source-loader/preview').withSource;\\n// @ts-ignore\\nvar addSourceDecorator = require(\\\"@storybook/source-loader/preview\\\").addSource;\\n// @ts-ignore\\nvar __SOURCE_PREFIX__ = \\\"/Users/farhanansari/Code/ui-library/src/components/atoms/CheckboxFieldGroup\\\";\\n// @ts-ignore\\nvar __STORY__ = \\\"\\\\n\\\\n// @ts-nocheck\\\\n// @ts-ignore\\\\nvar withSourceLoader = require('@storybook/source-loader/preview').withSource;\\\\n// @ts-ignore\\\\nvar addSourceDecorator = require(\\\\\\\"@storybook/source-loader/preview\\\\\\\").addSource;\\\\n// @ts-ignore\\\\nvar __SOURCE_PREFIX__ = \\\\\\\"/Users/farhanansari/Code/ui-library/src/components/atoms/CheckboxFieldGroup\\\\\\\";\\\\n// @ts-ignore\\\\nvar __STORY__ = \\\\\\\"import React from 'react'\\\\\\\\nimport { path } from '..'\\\\\\\\nimport CheckboxFieldGroup from '.'\\\\\\\\nimport {\\\\\\\\n  withKnobs,\\\\\\\\n  boolean,\\\\\\\\n  radios,\\\\\\\\n  number,\\\\\\\\n  text\\\\\\\\n} from '@storybook/addon-knobs'\\\\\\\\nimport { action } from '@storybook/addon-actions'\\\\\\\\nimport ThemeWrapper from '../../../utilities/components/ThemeWrapper'\\\\\\\\nimport Checkbox, { tCheckboxSize } from '../Checkbox'\\\\\\\\n\\\\\\\\nimport Card from '../Card'\\\\\\\\n\\\\\\\\nexport default {\\\\\\\\n  title: `${path}/CheckboxFieldGroup`,\\\\\\\\n  decorators: [withKnobs],\\\\\\\\n  component: CheckboxFieldGroup\\\\\\\\n}\\\\\\\\n\\\\\\\\nconst radioOptions = {\\\\\\\\n  size: { sm: 'sm', md: 'md', lg: 'lg' }\\\\\\\\n}\\\\\\\\n\\\\\\\\nexport const withDefault = () => (\\\\\\\\n  <ThemeWrapper>\\\\\\\\n    <Card>\\\\\\\\n      <CheckboxFieldGroup\\\\\\\\n        id='defaultCheckboxFieldGroup'\\\\\\\\n        orientation={boolean('orientation', false)}\\\\\\\\n        spacing={number('spacing', 10)}\\\\\\\\n        variant='default'\\\\\\\\n        width='400px'\\\\\\\\n        label='Gender'\\\\\\\\n        labelColor={text('Group Label Color', 'black')}\\\\\\\\n      >\\\\\\\\n        <Checkbox\\\\\\\\n          id='checkbox1'\\\\\\\\n          onChange={action('CheckboxField 1 Changed')}\\\\\\\\n          disabled={boolean('disabled', false, 'CheckboxField 1')}\\\\\\\\n          checked={boolean('checked', true, 'CheckboxField 1')}\\\\\\\\n          name={text('name', 'gender', 'CheckboxField 1')}\\\\\\\\n          value={text('value', 'Male', 'CheckboxField 1')}\\\\\\\\n          label={text('label', 'Male', 'CheckboxField 1')}\\\\\\\\n          checkboxSize={\\\\\\\\n            radios('size', radioOptions.size, 'sm') as tCheckboxSize\\\\\\\\n          }\\\\\\\\n          labelColor={text('Label Color', 'black')}\\\\\\\\n        />\\\\\\\\n        <Checkbox\\\\\\\\n          id='checkbox2'\\\\\\\\n          onChange={action('CheckboxField 2 Changed')}\\\\\\\\n          disabled={boolean('disabled', false, 'CheckboxField 2')}\\\\\\\\n          checked={boolean('checked', true, 'CheckboxField 2')}\\\\\\\\n          name={text('name', 'gender', 'CheckboxField 2')}\\\\\\\\n          value={text('value', 'Female', 'CheckboxField 2')}\\\\\\\\n          label={text('label', 'Female', 'CheckboxField 2')}\\\\\\\\n          checkboxSize={\\\\\\\\n            radios('size', radioOptions.size, 'sm') as tCheckboxSize\\\\\\\\n          }\\\\\\\\n          labelColor={text('Label Color', 'black')}\\\\\\\\n        />\\\\\\\\n        <Checkbox\\\\\\\\n          id='checkbox3'\\\\\\\\n          onChange={action('CheckboxField 3 Changed')}\\\\\\\\n          disabled={boolean('disabled', false, 'CheckboxField 3')}\\\\\\\\n          checked={boolean('checked', true, 'CheckboxField 3')}\\\\\\\\n          name={text('name', 'gender', 'CheckboxField 3')}\\\\\\\\n          value={text('value', 'Others', 'CheckboxField 3')}\\\\\\\\n          label={text('label', 'Others', 'CheckboxField 3')}\\\\\\\\n          checkboxSize={\\\\\\\\n            radios('size', radioOptions.size, 'sm') as tCheckboxSize\\\\\\\\n          }\\\\\\\\n          labelColor={text('Label Color', 'black')}\\\\\\\\n        />\\\\\\\\n      </CheckboxFieldGroup>\\\\\\\\n    </Card>\\\\\\\\n  </ThemeWrapper>\\\\\\\\n)\\\\\\\\n\\\\\\\\nexport const withForm = () => (\\\\\\\\n  <ThemeWrapper>\\\\\\\\n    <Card>\\\\\\\\n      <CheckboxFieldGroup\\\\\\\\n        id='CheckboxFieldGroup2'\\\\\\\\n        orientation={boolean('orientation', false)}\\\\\\\\n        spacing={number('spacing', 10)}\\\\\\\\n        variant='form'\\\\\\\\n        label='Gender'\\\\\\\\n        width={text('width', '50%')}\\\\\\\\n        labelColor={text('Group Label Color', 'black')}\\\\\\\\n        error={boolean('error', true)}\\\\\\\\n        errorMessage={text('errorMessage', 'Some Field Error')}\\\\\\\\n        required={boolean('required', false)}\\\\\\\\n      >\\\\\\\\n        <Checkbox\\\\\\\\n          id='checkbox1'\\\\\\\\n          onChange={action('CheckboxField 1 Changed')}\\\\\\\\n          disabled={boolean('disabled', false, 'CheckboxField 1')}\\\\\\\\n          checked={boolean('checked', true, 'CheckboxField 1')}\\\\\\\\n          name={text('name', 'gender', 'CheckboxField 1')}\\\\\\\\n          value={text('value', 'Male', 'CheckboxField 1')}\\\\\\\\n          label={text('label', 'Male', 'CheckboxField 1')}\\\\\\\\n          checkboxSize={\\\\\\\\n            radios('size', radioOptions.size, 'sm') as tCheckboxSize\\\\\\\\n          }\\\\\\\\n          labelColor={text('Label Color', 'black')}\\\\\\\\n        />\\\\\\\\n        <Checkbox\\\\\\\\n          id='checkbox2'\\\\\\\\n          onChange={action('CheckboxField 2 Changed')}\\\\\\\\n          disabled={boolean('disabled', false, 'CheckboxField 2')}\\\\\\\\n          checked={boolean('checked', true, 'CheckboxField 2')}\\\\\\\\n          name={text('name', 'gender', 'CheckboxField 2')}\\\\\\\\n          value={text('value', 'Female', 'CheckboxField 2')}\\\\\\\\n          label={text('label', 'Female', 'CheckboxField 2')}\\\\\\\\n          checkboxSize={\\\\\\\\n            radios('size', radioOptions.size, 'sm') as tCheckboxSize\\\\\\\\n          }\\\\\\\\n        />\\\\\\\\n        <Checkbox\\\\\\\\n          id='checkbox3'\\\\\\\\n          onChange={action('CheckboxField 3 Changed')}\\\\\\\\n          disabled={boolean('disabled', false, 'CheckboxField 3')}\\\\\\\\n          checked={boolean('checked', true, 'CheckboxField 3')}\\\\\\\\n          name={text('name', 'gender', 'CheckboxField 3')}\\\\\\\\n          value={text('value', 'Others', 'CheckboxField 3')}\\\\\\\\n          label={text('label', 'Others', 'CheckboxField 3')}\\\\\\\\n          checkboxSize={\\\\\\\\n            radios('size', radioOptions.size, 'sm') as tCheckboxSize\\\\\\\\n          }\\\\\\\\n          labelColor={text('Label Color', 'black')}\\\\\\\\n        />\\\\\\\\n      </CheckboxFieldGroup>\\\\\\\\n    </Card>\\\\\\\\n  </ThemeWrapper>\\\\\\\\n)\\\\\\\\n\\\\\\\";\\\\n// @ts-ignore\\\\nvar __ADDS_MAP__ = {};\\\\n// @ts-ignore\\\\nvar __MAIN_FILE_LOCATION__ = \\\\\\\"/CheckboxFieldGroup.stories.tsx\\\\\\\";\\\\n// @ts-ignore\\\\nvar __MODULE_DEPENDENCIES__ = [];\\\\n// @ts-ignore\\\\nvar __LOCAL_DEPENDENCIES__ = {};\\\\n// @ts-ignore\\\\nvar __IDS_TO_FRAMEWORKS__ = {};\\\\n        \\\\nimport React from 'react'\\\\nimport { path } from '..'\\\\nimport CheckboxFieldGroup from '.'\\\\nimport {\\\\n  withKnobs,\\\\n  boolean,\\\\n  radios,\\\\n  number,\\\\n  text\\\\n} from '@storybook/addon-knobs'\\\\nimport { action } from '@storybook/addon-actions'\\\\nimport ThemeWrapper from '../../../utilities/components/ThemeWrapper'\\\\nimport Checkbox, { tCheckboxSize } from '../Checkbox'\\\\n\\\\nimport Card from '../Card'\\\\n\\\\nexport default {parameters: {\\\\\\\"storySource\\\\\\\":{\\\\\\\"source\\\\\\\":\\\\\\\"import React from 'react'\\\\\\\\nimport { path } from '..'\\\\\\\\nimport CheckboxFieldGroup from '.'\\\\\\\\nimport {\\\\\\\\n  withKnobs,\\\\\\\\n  boolean,\\\\\\\\n  radios,\\\\\\\\n  number,\\\\\\\\n  text\\\\\\\\n} from '@storybook/addon-knobs'\\\\\\\\nimport { action } from '@storybook/addon-actions'\\\\\\\\nimport ThemeWrapper from '../../../utilities/components/ThemeWrapper'\\\\\\\\nimport Checkbox, { tCheckboxSize } from '../Checkbox'\\\\\\\\n\\\\\\\\nimport Card from '../Card'\\\\\\\\n\\\\\\\\nexport default {\\\\\\\\n  title: `${path}/CheckboxFieldGroup`,\\\\\\\\n  decorators: [withKnobs],\\\\\\\\n  component: CheckboxFieldGroup\\\\\\\\n}\\\\\\\\n\\\\\\\\nconst radioOptions = {\\\\\\\\n  size: { sm: 'sm', md: 'md', lg: 'lg' }\\\\\\\\n}\\\\\\\\n\\\\\\\\nexport const withDefault = () => (\\\\\\\\n  <ThemeWrapper>\\\\\\\\n    <Card>\\\\\\\\n      <CheckboxFieldGroup\\\\\\\\n        id='defaultCheckboxFieldGroup'\\\\\\\\n        orientation={boolean('orientation', false)}\\\\\\\\n        spacing={number('spacing', 10)}\\\\\\\\n        variant='default'\\\\\\\\n        width='400px'\\\\\\\\n        label='Gender'\\\\\\\\n        labelColor={text('Group Label Color', 'black')}\\\\\\\\n      >\\\\\\\\n        <Checkbox\\\\\\\\n          id='checkbox1'\\\\\\\\n          onChange={action('CheckboxField 1 Changed')}\\\\\\\\n          disabled={boolean('disabled', false, 'CheckboxField 1')}\\\\\\\\n          checked={boolean('checked', true, 'CheckboxField 1')}\\\\\\\\n          name={text('name', 'gender', 'CheckboxField 1')}\\\\\\\\n          value={text('value', 'Male', 'CheckboxField 1')}\\\\\\\\n          label={text('label', 'Male', 'CheckboxField 1')}\\\\\\\\n          checkboxSize={\\\\\\\\n            radios('size', radioOptions.size, 'sm') as tCheckboxSize\\\\\\\\n          }\\\\\\\\n          labelColor={text('Label Color', 'black')}\\\\\\\\n        />\\\\\\\\n        <Checkbox\\\\\\\\n          id='checkbox2'\\\\\\\\n          onChange={action('CheckboxField 2 Changed')}\\\\\\\\n          disabled={boolean('disabled', false, 'CheckboxField 2')}\\\\\\\\n          checked={boolean('checked', true, 'CheckboxField 2')}\\\\\\\\n          name={text('name', 'gender', 'CheckboxField 2')}\\\\\\\\n          value={text('value', 'Female', 'CheckboxField 2')}\\\\\\\\n          label={text('label', 'Female', 'CheckboxField 2')}\\\\\\\\n          checkboxSize={\\\\\\\\n            radios('size', radioOptions.size, 'sm') as tCheckboxSize\\\\\\\\n          }\\\\\\\\n          labelColor={text('Label Color', 'black')}\\\\\\\\n        />\\\\\\\\n        <Checkbox\\\\\\\\n          id='checkbox3'\\\\\\\\n          onChange={action('CheckboxField 3 Changed')}\\\\\\\\n          disabled={boolean('disabled', false, 'CheckboxField 3')}\\\\\\\\n          checked={boolean('checked', true, 'CheckboxField 3')}\\\\\\\\n          name={text('name', 'gender', 'CheckboxField 3')}\\\\\\\\n          value={text('value', 'Others', 'CheckboxField 3')}\\\\\\\\n          label={text('label', 'Others', 'CheckboxField 3')}\\\\\\\\n          checkboxSize={\\\\\\\\n            radios('size', radioOptions.size, 'sm') as tCheckboxSize\\\\\\\\n          }\\\\\\\\n          labelColor={text('Label Color', 'black')}\\\\\\\\n        />\\\\\\\\n      </CheckboxFieldGroup>\\\\\\\\n    </Card>\\\\\\\\n  </ThemeWrapper>\\\\\\\\n)\\\\\\\\n\\\\\\\\nexport const withForm = () => (\\\\\\\\n  <ThemeWrapper>\\\\\\\\n    <Card>\\\\\\\\n      <CheckboxFieldGroup\\\\\\\\n        id='CheckboxFieldGroup2'\\\\\\\\n        orientation={boolean('orientation', false)}\\\\\\\\n        spacing={number('spacing', 10)}\\\\\\\\n        variant='form'\\\\\\\\n        label='Gender'\\\\\\\\n        width={text('width', '50%')}\\\\\\\\n        labelColor={text('Group Label Color', 'black')}\\\\\\\\n        error={boolean('error', true)}\\\\\\\\n        errorMessage={text('errorMessage', 'Some Field Error')}\\\\\\\\n        required={boolean('required', false)}\\\\\\\\n      >\\\\\\\\n        <Checkbox\\\\\\\\n          id='checkbox1'\\\\\\\\n          onChange={action('CheckboxField 1 Changed')}\\\\\\\\n          disabled={boolean('disabled', false, 'CheckboxField 1')}\\\\\\\\n          checked={boolean('checked', true, 'CheckboxField 1')}\\\\\\\\n          name={text('name', 'gender', 'CheckboxField 1')}\\\\\\\\n          value={text('value', 'Male', 'CheckboxField 1')}\\\\\\\\n          label={text('label', 'Male', 'CheckboxField 1')}\\\\\\\\n          checkboxSize={\\\\\\\\n            radios('size', radioOptions.size, 'sm') as tCheckboxSize\\\\\\\\n          }\\\\\\\\n          labelColor={text('Label Color', 'black')}\\\\\\\\n        />\\\\\\\\n        <Checkbox\\\\\\\\n          id='checkbox2'\\\\\\\\n          onChange={action('CheckboxField 2 Changed')}\\\\\\\\n          disabled={boolean('disabled', false, 'CheckboxField 2')}\\\\\\\\n          checked={boolean('checked', true, 'CheckboxField 2')}\\\\\\\\n          name={text('name', 'gender', 'CheckboxField 2')}\\\\\\\\n          value={text('value', 'Female', 'CheckboxField 2')}\\\\\\\\n          label={text('label', 'Female', 'CheckboxField 2')}\\\\\\\\n          checkboxSize={\\\\\\\\n            radios('size', radioOptions.size, 'sm') as tCheckboxSize\\\\\\\\n          }\\\\\\\\n        />\\\\\\\\n        <Checkbox\\\\\\\\n          id='checkbox3'\\\\\\\\n          onChange={action('CheckboxField 3 Changed')}\\\\\\\\n          disabled={boolean('disabled', false, 'CheckboxField 3')}\\\\\\\\n          checked={boolean('checked', true, 'CheckboxField 3')}\\\\\\\\n          name={text('name', 'gender', 'CheckboxField 3')}\\\\\\\\n          value={text('value', 'Others', 'CheckboxField 3')}\\\\\\\\n          label={text('label', 'Others', 'CheckboxField 3')}\\\\\\\\n          checkboxSize={\\\\\\\\n            radios('size', radioOptions.size, 'sm') as tCheckboxSize\\\\\\\\n          }\\\\\\\\n          labelColor={text('Label Color', 'black')}\\\\\\\\n        />\\\\\\\\n      </CheckboxFieldGroup>\\\\\\\\n    </Card>\\\\\\\\n  </ThemeWrapper>\\\\\\\\n)\\\\\\\\n\\\\\\\",\\\\\\\"locationsMap\\\\\\\":{}},},\\\\n  title: `${path}/CheckboxFieldGroup`,\\\\n  decorators: [withKnobs],\\\\n  component: CheckboxFieldGroup\\\\n}\\\\n\\\\nconst radioOptions = {\\\\n  size: { sm: 'sm', md: 'md', lg: 'lg' }\\\\n}\\\\n\\\\nexport const withDefault = addSourceDecorator(() => (\\\\n  <ThemeWrapper>\\\\n    <Card>\\\\n      <CheckboxFieldGroup\\\\n        id='defaultCheckboxFieldGroup'\\\\n        orientation={boolean('orientation', false)}\\\\n        spacing={number('spacing', 10)}\\\\n        variant='default'\\\\n        width='400px'\\\\n        label='Gender'\\\\n        labelColor={text('Group Label Color', 'black')}\\\\n      >\\\\n        <Checkbox\\\\n          id='checkbox1'\\\\n          onChange={action('CheckboxField 1 Changed')}\\\\n          disabled={boolean('disabled', false, 'CheckboxField 1')}\\\\n          checked={boolean('checked', true, 'CheckboxField 1')}\\\\n          name={text('name', 'gender', 'CheckboxField 1')}\\\\n          value={text('value', 'Male', 'CheckboxField 1')}\\\\n          label={text('label', 'Male', 'CheckboxField 1')}\\\\n          checkboxSize={\\\\n            radios('size', radioOptions.size, 'sm') as tCheckboxSize\\\\n          }\\\\n          labelColor={text('Label Color', 'black')}\\\\n        />\\\\n        <Checkbox\\\\n          id='checkbox2'\\\\n          onChange={action('CheckboxField 2 Changed')}\\\\n          disabled={boolean('disabled', false, 'CheckboxField 2')}\\\\n          checked={boolean('checked', true, 'CheckboxField 2')}\\\\n          name={text('name', 'gender', 'CheckboxField 2')}\\\\n          value={text('value', 'Female', 'CheckboxField 2')}\\\\n          label={text('label', 'Female', 'CheckboxField 2')}\\\\n          checkboxSize={\\\\n            radios('size', radioOptions.size, 'sm') as tCheckboxSize\\\\n          }\\\\n          labelColor={text('Label Color', 'black')}\\\\n        />\\\\n        <Checkbox\\\\n          id='checkbox3'\\\\n          onChange={action('CheckboxField 3 Changed')}\\\\n          disabled={boolean('disabled', false, 'CheckboxField 3')}\\\\n          checked={boolean('checked', true, 'CheckboxField 3')}\\\\n          name={text('name', 'gender', 'CheckboxField 3')}\\\\n          value={text('value', 'Others', 'CheckboxField 3')}\\\\n          label={text('label', 'Others', 'CheckboxField 3')}\\\\n          checkboxSize={\\\\n            radios('size', radioOptions.size, 'sm') as tCheckboxSize\\\\n          }\\\\n          labelColor={text('Label Color', 'black')}\\\\n        />\\\\n      </CheckboxFieldGroup>\\\\n    </Card>\\\\n  </ThemeWrapper>\\\\n), {__STORY__, __ADDS_MAP__,__MAIN_FILE_LOCATION__,__MODULE_DEPENDENCIES__,__LOCAL_DEPENDENCIES__,__SOURCE_PREFIX__,__IDS_TO_FRAMEWORKS__});\\\\n\\\\nexport const withForm = addSourceDecorator(() => (\\\\n  <ThemeWrapper>\\\\n    <Card>\\\\n      <CheckboxFieldGroup\\\\n        id='CheckboxFieldGroup2'\\\\n        orientation={boolean('orientation', false)}\\\\n        spacing={number('spacing', 10)}\\\\n        variant='form'\\\\n        label='Gender'\\\\n        width={text('width', '50%')}\\\\n        labelColor={text('Group Label Color', 'black')}\\\\n        error={boolean('error', true)}\\\\n        errorMessage={text('errorMessage', 'Some Field Error')}\\\\n        required={boolean('required', false)}\\\\n      >\\\\n        <Checkbox\\\\n          id='checkbox1'\\\\n          onChange={action('CheckboxField 1 Changed')}\\\\n          disabled={boolean('disabled', false, 'CheckboxField 1')}\\\\n          checked={boolean('checked', true, 'CheckboxField 1')}\\\\n          name={text('name', 'gender', 'CheckboxField 1')}\\\\n          value={text('value', 'Male', 'CheckboxField 1')}\\\\n          label={text('label', 'Male', 'CheckboxField 1')}\\\\n          checkboxSize={\\\\n            radios('size', radioOptions.size, 'sm') as tCheckboxSize\\\\n          }\\\\n          labelColor={text('Label Color', 'black')}\\\\n        />\\\\n        <Checkbox\\\\n          id='checkbox2'\\\\n          onChange={action('CheckboxField 2 Changed')}\\\\n          disabled={boolean('disabled', false, 'CheckboxField 2')}\\\\n          checked={boolean('checked', true, 'CheckboxField 2')}\\\\n          name={text('name', 'gender', 'CheckboxField 2')}\\\\n          value={text('value', 'Female', 'CheckboxField 2')}\\\\n          label={text('label', 'Female', 'CheckboxField 2')}\\\\n          checkboxSize={\\\\n            radios('size', radioOptions.size, 'sm') as tCheckboxSize\\\\n          }\\\\n        />\\\\n        <Checkbox\\\\n          id='checkbox3'\\\\n          onChange={action('CheckboxField 3 Changed')}\\\\n          disabled={boolean('disabled', false, 'CheckboxField 3')}\\\\n          checked={boolean('checked', true, 'CheckboxField 3')}\\\\n          name={text('name', 'gender', 'CheckboxField 3')}\\\\n          value={text('value', 'Others', 'CheckboxField 3')}\\\\n          label={text('label', 'Others', 'CheckboxField 3')}\\\\n          checkboxSize={\\\\n            radios('size', radioOptions.size, 'sm') as tCheckboxSize\\\\n          }\\\\n          labelColor={text('Label Color', 'black')}\\\\n        />\\\\n      </CheckboxFieldGroup>\\\\n    </Card>\\\\n  </ThemeWrapper>\\\\n), {__STORY__, __ADDS_MAP__,__MAIN_FILE_LOCATION__,__MODULE_DEPENDENCIES__,__LOCAL_DEPENDENCIES__,__SOURCE_PREFIX__,__IDS_TO_FRAMEWORKS__});\\\";\\n// @ts-ignore\\nvar __ADDS_MAP__ = {};\\n// @ts-ignore\\nvar __MAIN_FILE_LOCATION__ = \\\"/CheckboxFieldGroup.stories.tsx\\\";\\n// @ts-ignore\\nvar __MODULE_DEPENDENCIES__ = [];\\n// @ts-ignore\\nvar __LOCAL_DEPENDENCIES__ = {};\\n// @ts-ignore\\nvar __IDS_TO_FRAMEWORKS__ = {};\\n        \\n\\n\\n// @ts-nocheck\\n// @ts-ignore\\nvar withSourceLoader = require('@storybook/source-loader/preview').withSource;\\n// @ts-ignore\\nvar addSourceDecorator = require(\\\"@storybook/source-loader/preview\\\").addSource;\\n// @ts-ignore\\nvar __SOURCE_PREFIX__ = \\\"/Users/farhanansari/Code/ui-library/src/components/atoms/CheckboxFieldGroup\\\";\\n// @ts-ignore\\nvar __STORY__ = \\\"import React from 'react'\\\\nimport { path } from '..'\\\\nimport CheckboxFieldGroup from '.'\\\\nimport {\\\\n  withKnobs,\\\\n  boolean,\\\\n  radios,\\\\n  number,\\\\n  text\\\\n} from '@storybook/addon-knobs'\\\\nimport { action } from '@storybook/addon-actions'\\\\nimport ThemeWrapper from '../../../utilities/components/ThemeWrapper'\\\\nimport Checkbox, { tCheckboxSize } from '../Checkbox'\\\\n\\\\nimport Card from '../Card'\\\\n\\\\nexport default {\\\\n  title: `${path}/CheckboxFieldGroup`,\\\\n  decorators: [withKnobs],\\\\n  component: CheckboxFieldGroup\\\\n}\\\\n\\\\nconst radioOptions = {\\\\n  size: { sm: 'sm', md: 'md', lg: 'lg' }\\\\n}\\\\n\\\\nexport const withDefault = () => (\\\\n  <ThemeWrapper>\\\\n    <Card>\\\\n      <CheckboxFieldGroup\\\\n        id='defaultCheckboxFieldGroup'\\\\n        orientation={boolean('orientation', false)}\\\\n        spacing={number('spacing', 10)}\\\\n        variant='default'\\\\n        width='400px'\\\\n        label='Gender'\\\\n        labelColor={text('Group Label Color', 'black')}\\\\n      >\\\\n        <Checkbox\\\\n          id='checkbox1'\\\\n          onChange={action('CheckboxField 1 Changed')}\\\\n          disabled={boolean('disabled', false, 'CheckboxField 1')}\\\\n          checked={boolean('checked', true, 'CheckboxField 1')}\\\\n          name={text('name', 'gender', 'CheckboxField 1')}\\\\n          value={text('value', 'Male', 'CheckboxField 1')}\\\\n          label={text('label', 'Male', 'CheckboxField 1')}\\\\n          checkboxSize={\\\\n            radios('size', radioOptions.size, 'sm') as tCheckboxSize\\\\n          }\\\\n          labelColor={text('Label Color', 'black')}\\\\n        />\\\\n        <Checkbox\\\\n          id='checkbox2'\\\\n          onChange={action('CheckboxField 2 Changed')}\\\\n          disabled={boolean('disabled', false, 'CheckboxField 2')}\\\\n          checked={boolean('checked', true, 'CheckboxField 2')}\\\\n          name={text('name', 'gender', 'CheckboxField 2')}\\\\n          value={text('value', 'Female', 'CheckboxField 2')}\\\\n          label={text('label', 'Female', 'CheckboxField 2')}\\\\n          checkboxSize={\\\\n            radios('size', radioOptions.size, 'sm') as tCheckboxSize\\\\n          }\\\\n          labelColor={text('Label Color', 'black')}\\\\n        />\\\\n        <Checkbox\\\\n          id='checkbox3'\\\\n          onChange={action('CheckboxField 3 Changed')}\\\\n          disabled={boolean('disabled', false, 'CheckboxField 3')}\\\\n          checked={boolean('checked', true, 'CheckboxField 3')}\\\\n          name={text('name', 'gender', 'CheckboxField 3')}\\\\n          value={text('value', 'Others', 'CheckboxField 3')}\\\\n          label={text('label', 'Others', 'CheckboxField 3')}\\\\n          checkboxSize={\\\\n            radios('size', radioOptions.size, 'sm') as tCheckboxSize\\\\n          }\\\\n          labelColor={text('Label Color', 'black')}\\\\n        />\\\\n      </CheckboxFieldGroup>\\\\n    </Card>\\\\n  </ThemeWrapper>\\\\n)\\\\n\\\\nexport const withForm = () => (\\\\n  <ThemeWrapper>\\\\n    <Card>\\\\n      <CheckboxFieldGroup\\\\n        id='CheckboxFieldGroup2'\\\\n        orientation={boolean('orientation', false)}\\\\n        spacing={number('spacing', 10)}\\\\n        variant='form'\\\\n        label='Gender'\\\\n        width={text('width', '50%')}\\\\n        labelColor={text('Group Label Color', 'black')}\\\\n        error={boolean('error', true)}\\\\n        errorMessage={text('errorMessage', 'Some Field Error')}\\\\n        required={boolean('required', false)}\\\\n      >\\\\n        <Checkbox\\\\n          id='checkbox1'\\\\n          onChange={action('CheckboxField 1 Changed')}\\\\n          disabled={boolean('disabled', false, 'CheckboxField 1')}\\\\n          checked={boolean('checked', true, 'CheckboxField 1')}\\\\n          name={text('name', 'gender', 'CheckboxField 1')}\\\\n          value={text('value', 'Male', 'CheckboxField 1')}\\\\n          label={text('label', 'Male', 'CheckboxField 1')}\\\\n          checkboxSize={\\\\n            radios('size', radioOptions.size, 'sm') as tCheckboxSize\\\\n          }\\\\n          labelColor={text('Label Color', 'black')}\\\\n        />\\\\n        <Checkbox\\\\n          id='checkbox2'\\\\n          onChange={action('CheckboxField 2 Changed')}\\\\n          disabled={boolean('disabled', false, 'CheckboxField 2')}\\\\n          checked={boolean('checked', true, 'CheckboxField 2')}\\\\n          name={text('name', 'gender', 'CheckboxField 2')}\\\\n          value={text('value', 'Female', 'CheckboxField 2')}\\\\n          label={text('label', 'Female', 'CheckboxField 2')}\\\\n          checkboxSize={\\\\n            radios('size', radioOptions.size, 'sm') as tCheckboxSize\\\\n          }\\\\n        />\\\\n        <Checkbox\\\\n          id='checkbox3'\\\\n          onChange={action('CheckboxField 3 Changed')}\\\\n          disabled={boolean('disabled', false, 'CheckboxField 3')}\\\\n          checked={boolean('checked', true, 'CheckboxField 3')}\\\\n          name={text('name', 'gender', 'CheckboxField 3')}\\\\n          value={text('value', 'Others', 'CheckboxField 3')}\\\\n          label={text('label', 'Others', 'CheckboxField 3')}\\\\n          checkboxSize={\\\\n            radios('size', radioOptions.size, 'sm') as tCheckboxSize\\\\n          }\\\\n          labelColor={text('Label Color', 'black')}\\\\n        />\\\\n      </CheckboxFieldGroup>\\\\n    </Card>\\\\n  </ThemeWrapper>\\\\n)\\\\n\\\";\\n// @ts-ignore\\nvar __ADDS_MAP__ = {};\\n// @ts-ignore\\nvar __MAIN_FILE_LOCATION__ = \\\"/CheckboxFieldGroup.stories.tsx\\\";\\n// @ts-ignore\\nvar __MODULE_DEPENDENCIES__ = [];\\n// @ts-ignore\\nvar __LOCAL_DEPENDENCIES__ = {};\\n// @ts-ignore\\nvar __IDS_TO_FRAMEWORKS__ = {};\\n        \\nimport React from 'react'\\nimport { path } from '..'\\nimport CheckboxFieldGroup from '.'\\nimport {\\n  withKnobs,\\n  boolean,\\n  radios,\\n  number,\\n  text\\n} from '@storybook/addon-knobs'\\nimport { action } from '@storybook/addon-actions'\\nimport ThemeWrapper from '../../../utilities/components/ThemeWrapper'\\nimport Checkbox, { tCheckboxSize } from '../Checkbox'\\n\\nimport Card from '../Card'\\n\\nexport default {parameters: {\\\"storySource\\\":{\\\"source\\\":\\\"\\\\n\\\\n// @ts-nocheck\\\\n// @ts-ignore\\\\nvar withSourceLoader = require('@storybook/source-loader/preview').withSource;\\\\n// @ts-ignore\\\\nvar addSourceDecorator = require(\\\\\\\"@storybook/source-loader/preview\\\\\\\").addSource;\\\\n// @ts-ignore\\\\nvar __SOURCE_PREFIX__ = \\\\\\\"/Users/farhanansari/Code/ui-library/src/components/atoms/CheckboxFieldGroup\\\\\\\";\\\\n// @ts-ignore\\\\nvar __STORY__ = \\\\\\\"import React from 'react'\\\\\\\\nimport { path } from '..'\\\\\\\\nimport CheckboxFieldGroup from '.'\\\\\\\\nimport {\\\\\\\\n  withKnobs,\\\\\\\\n  boolean,\\\\\\\\n  radios,\\\\\\\\n  number,\\\\\\\\n  text\\\\\\\\n} from '@storybook/addon-knobs'\\\\\\\\nimport { action } from '@storybook/addon-actions'\\\\\\\\nimport ThemeWrapper from '../../../utilities/components/ThemeWrapper'\\\\\\\\nimport Checkbox, { tCheckboxSize } from '../Checkbox'\\\\\\\\n\\\\\\\\nimport Card from '../Card'\\\\\\\\n\\\\\\\\nexport default {\\\\\\\\n  title: `${path}/CheckboxFieldGroup`,\\\\\\\\n  decorators: [withKnobs],\\\\\\\\n  component: CheckboxFieldGroup\\\\\\\\n}\\\\\\\\n\\\\\\\\nconst radioOptions = {\\\\\\\\n  size: { sm: 'sm', md: 'md', lg: 'lg' }\\\\\\\\n}\\\\\\\\n\\\\\\\\nexport const withDefault = () => (\\\\\\\\n  <ThemeWrapper>\\\\\\\\n    <Card>\\\\\\\\n      <CheckboxFieldGroup\\\\\\\\n        id='defaultCheckboxFieldGroup'\\\\\\\\n        orientation={boolean('orientation', false)}\\\\\\\\n        spacing={number('spacing', 10)}\\\\\\\\n        variant='default'\\\\\\\\n        width='400px'\\\\\\\\n        label='Gender'\\\\\\\\n        labelColor={text('Group Label Color', 'black')}\\\\\\\\n      >\\\\\\\\n        <Checkbox\\\\\\\\n          id='checkbox1'\\\\\\\\n          onChange={action('CheckboxField 1 Changed')}\\\\\\\\n          disabled={boolean('disabled', false, 'CheckboxField 1')}\\\\\\\\n          checked={boolean('checked', true, 'CheckboxField 1')}\\\\\\\\n          name={text('name', 'gender', 'CheckboxField 1')}\\\\\\\\n          value={text('value', 'Male', 'CheckboxField 1')}\\\\\\\\n          label={text('label', 'Male', 'CheckboxField 1')}\\\\\\\\n          checkboxSize={\\\\\\\\n            radios('size', radioOptions.size, 'sm') as tCheckboxSize\\\\\\\\n          }\\\\\\\\n          labelColor={text('Label Color', 'black')}\\\\\\\\n        />\\\\\\\\n        <Checkbox\\\\\\\\n          id='checkbox2'\\\\\\\\n          onChange={action('CheckboxField 2 Changed')}\\\\\\\\n          disabled={boolean('disabled', false, 'CheckboxField 2')}\\\\\\\\n          checked={boolean('checked', true, 'CheckboxField 2')}\\\\\\\\n          name={text('name', 'gender', 'CheckboxField 2')}\\\\\\\\n          value={text('value', 'Female', 'CheckboxField 2')}\\\\\\\\n          label={text('label', 'Female', 'CheckboxField 2')}\\\\\\\\n          checkboxSize={\\\\\\\\n            radios('size', radioOptions.size, 'sm') as tCheckboxSize\\\\\\\\n          }\\\\\\\\n          labelColor={text('Label Color', 'black')}\\\\\\\\n        />\\\\\\\\n        <Checkbox\\\\\\\\n          id='checkbox3'\\\\\\\\n          onChange={action('CheckboxField 3 Changed')}\\\\\\\\n          disabled={boolean('disabled', false, 'CheckboxField 3')}\\\\\\\\n          checked={boolean('checked', true, 'CheckboxField 3')}\\\\\\\\n          name={text('name', 'gender', 'CheckboxField 3')}\\\\\\\\n          value={text('value', 'Others', 'CheckboxField 3')}\\\\\\\\n          label={text('label', 'Others', 'CheckboxField 3')}\\\\\\\\n          checkboxSize={\\\\\\\\n            radios('size', radioOptions.size, 'sm') as tCheckboxSize\\\\\\\\n          }\\\\\\\\n          labelColor={text('Label Color', 'black')}\\\\\\\\n        />\\\\\\\\n      </CheckboxFieldGroup>\\\\\\\\n    </Card>\\\\\\\\n  </ThemeWrapper>\\\\\\\\n)\\\\\\\\n\\\\\\\\nexport const withForm = () => (\\\\\\\\n  <ThemeWrapper>\\\\\\\\n    <Card>\\\\\\\\n      <CheckboxFieldGroup\\\\\\\\n        id='CheckboxFieldGroup2'\\\\\\\\n        orientation={boolean('orientation', false)}\\\\\\\\n        spacing={number('spacing', 10)}\\\\\\\\n        variant='form'\\\\\\\\n        label='Gender'\\\\\\\\n        width={text('width', '50%')}\\\\\\\\n        labelColor={text('Group Label Color', 'black')}\\\\\\\\n        error={boolean('error', true)}\\\\\\\\n        errorMessage={text('errorMessage', 'Some Field Error')}\\\\\\\\n        required={boolean('required', false)}\\\\\\\\n      >\\\\\\\\n        <Checkbox\\\\\\\\n          id='checkbox1'\\\\\\\\n          onChange={action('CheckboxField 1 Changed')}\\\\\\\\n          disabled={boolean('disabled', false, 'CheckboxField 1')}\\\\\\\\n          checked={boolean('checked', true, 'CheckboxField 1')}\\\\\\\\n          name={text('name', 'gender', 'CheckboxField 1')}\\\\\\\\n          value={text('value', 'Male', 'CheckboxField 1')}\\\\\\\\n          label={text('label', 'Male', 'CheckboxField 1')}\\\\\\\\n          checkboxSize={\\\\\\\\n            radios('size', radioOptions.size, 'sm') as tCheckboxSize\\\\\\\\n          }\\\\\\\\n          labelColor={text('Label Color', 'black')}\\\\\\\\n        />\\\\\\\\n        <Checkbox\\\\\\\\n          id='checkbox2'\\\\\\\\n          onChange={action('CheckboxField 2 Changed')}\\\\\\\\n          disabled={boolean('disabled', false, 'CheckboxField 2')}\\\\\\\\n          checked={boolean('checked', true, 'CheckboxField 2')}\\\\\\\\n          name={text('name', 'gender', 'CheckboxField 2')}\\\\\\\\n          value={text('value', 'Female', 'CheckboxField 2')}\\\\\\\\n          label={text('label', 'Female', 'CheckboxField 2')}\\\\\\\\n          checkboxSize={\\\\\\\\n            radios('size', radioOptions.size, 'sm') as tCheckboxSize\\\\\\\\n          }\\\\\\\\n        />\\\\\\\\n        <Checkbox\\\\\\\\n          id='checkbox3'\\\\\\\\n          onChange={action('CheckboxField 3 Changed')}\\\\\\\\n          disabled={boolean('disabled', false, 'CheckboxField 3')}\\\\\\\\n          checked={boolean('checked', true, 'CheckboxField 3')}\\\\\\\\n          name={text('name', 'gender', 'CheckboxField 3')}\\\\\\\\n          value={text('value', 'Others', 'CheckboxField 3')}\\\\\\\\n          label={text('label', 'Others', 'CheckboxField 3')}\\\\\\\\n          checkboxSize={\\\\\\\\n            radios('size', radioOptions.size, 'sm') as tCheckboxSize\\\\\\\\n          }\\\\\\\\n          labelColor={text('Label Color', 'black')}\\\\\\\\n        />\\\\\\\\n      </CheckboxFieldGroup>\\\\\\\\n    </Card>\\\\\\\\n  </ThemeWrapper>\\\\\\\\n)\\\\\\\\n\\\\\\\";\\\\n// @ts-ignore\\\\nvar __ADDS_MAP__ = {};\\\\n// @ts-ignore\\\\nvar __MAIN_FILE_LOCATION__ = \\\\\\\"/CheckboxFieldGroup.stories.tsx\\\\\\\";\\\\n// @ts-ignore\\\\nvar __MODULE_DEPENDENCIES__ = [];\\\\n// @ts-ignore\\\\nvar __LOCAL_DEPENDENCIES__ = {};\\\\n// @ts-ignore\\\\nvar __IDS_TO_FRAMEWORKS__ = {};\\\\n        \\\\nimport React from 'react'\\\\nimport { path } from '..'\\\\nimport CheckboxFieldGroup from '.'\\\\nimport {\\\\n  withKnobs,\\\\n  boolean,\\\\n  radios,\\\\n  number,\\\\n  text\\\\n} from '@storybook/addon-knobs'\\\\nimport { action } from '@storybook/addon-actions'\\\\nimport ThemeWrapper from '../../../utilities/components/ThemeWrapper'\\\\nimport Checkbox, { tCheckboxSize } from '../Checkbox'\\\\n\\\\nimport Card from '../Card'\\\\n\\\\nexport default {parameters: {\\\\\\\"storySource\\\\\\\":{\\\\\\\"source\\\\\\\":\\\\\\\"import React from 'react'\\\\\\\\nimport { path } from '..'\\\\\\\\nimport CheckboxFieldGroup from '.'\\\\\\\\nimport {\\\\\\\\n  withKnobs,\\\\\\\\n  boolean,\\\\\\\\n  radios,\\\\\\\\n  number,\\\\\\\\n  text\\\\\\\\n} from '@storybook/addon-knobs'\\\\\\\\nimport { action } from '@storybook/addon-actions'\\\\\\\\nimport ThemeWrapper from '../../../utilities/components/ThemeWrapper'\\\\\\\\nimport Checkbox, { tCheckboxSize } from '../Checkbox'\\\\\\\\n\\\\\\\\nimport Card from '../Card'\\\\\\\\n\\\\\\\\nexport default {\\\\\\\\n  title: `${path}/CheckboxFieldGroup`,\\\\\\\\n  decorators: [withKnobs],\\\\\\\\n  component: CheckboxFieldGroup\\\\\\\\n}\\\\\\\\n\\\\\\\\nconst radioOptions = {\\\\\\\\n  size: { sm: 'sm', md: 'md', lg: 'lg' }\\\\\\\\n}\\\\\\\\n\\\\\\\\nexport const withDefault = () => (\\\\\\\\n  <ThemeWrapper>\\\\\\\\n    <Card>\\\\\\\\n      <CheckboxFieldGroup\\\\\\\\n        id='defaultCheckboxFieldGroup'\\\\\\\\n        orientation={boolean('orientation', false)}\\\\\\\\n        spacing={number('spacing', 10)}\\\\\\\\n        variant='default'\\\\\\\\n        width='400px'\\\\\\\\n        label='Gender'\\\\\\\\n        labelColor={text('Group Label Color', 'black')}\\\\\\\\n      >\\\\\\\\n        <Checkbox\\\\\\\\n          id='checkbox1'\\\\\\\\n          onChange={action('CheckboxField 1 Changed')}\\\\\\\\n          disabled={boolean('disabled', false, 'CheckboxField 1')}\\\\\\\\n          checked={boolean('checked', true, 'CheckboxField 1')}\\\\\\\\n          name={text('name', 'gender', 'CheckboxField 1')}\\\\\\\\n          value={text('value', 'Male', 'CheckboxField 1')}\\\\\\\\n          label={text('label', 'Male', 'CheckboxField 1')}\\\\\\\\n          checkboxSize={\\\\\\\\n            radios('size', radioOptions.size, 'sm') as tCheckboxSize\\\\\\\\n          }\\\\\\\\n          labelColor={text('Label Color', 'black')}\\\\\\\\n        />\\\\\\\\n        <Checkbox\\\\\\\\n          id='checkbox2'\\\\\\\\n          onChange={action('CheckboxField 2 Changed')}\\\\\\\\n          disabled={boolean('disabled', false, 'CheckboxField 2')}\\\\\\\\n          checked={boolean('checked', true, 'CheckboxField 2')}\\\\\\\\n          name={text('name', 'gender', 'CheckboxField 2')}\\\\\\\\n          value={text('value', 'Female', 'CheckboxField 2')}\\\\\\\\n          label={text('label', 'Female', 'CheckboxField 2')}\\\\\\\\n          checkboxSize={\\\\\\\\n            radios('size', radioOptions.size, 'sm') as tCheckboxSize\\\\\\\\n          }\\\\\\\\n          labelColor={text('Label Color', 'black')}\\\\\\\\n        />\\\\\\\\n        <Checkbox\\\\\\\\n          id='checkbox3'\\\\\\\\n          onChange={action('CheckboxField 3 Changed')}\\\\\\\\n          disabled={boolean('disabled', false, 'CheckboxField 3')}\\\\\\\\n          checked={boolean('checked', true, 'CheckboxField 3')}\\\\\\\\n          name={text('name', 'gender', 'CheckboxField 3')}\\\\\\\\n          value={text('value', 'Others', 'CheckboxField 3')}\\\\\\\\n          label={text('label', 'Others', 'CheckboxField 3')}\\\\\\\\n          checkboxSize={\\\\\\\\n            radios('size', radioOptions.size, 'sm') as tCheckboxSize\\\\\\\\n          }\\\\\\\\n          labelColor={text('Label Color', 'black')}\\\\\\\\n        />\\\\\\\\n      </CheckboxFieldGroup>\\\\\\\\n    </Card>\\\\\\\\n  </ThemeWrapper>\\\\\\\\n)\\\\\\\\n\\\\\\\\nexport const withForm = () => (\\\\\\\\n  <ThemeWrapper>\\\\\\\\n    <Card>\\\\\\\\n      <CheckboxFieldGroup\\\\\\\\n        id='CheckboxFieldGroup2'\\\\\\\\n        orientation={boolean('orientation', false)}\\\\\\\\n        spacing={number('spacing', 10)}\\\\\\\\n        variant='form'\\\\\\\\n        label='Gender'\\\\\\\\n        width={text('width', '50%')}\\\\\\\\n        labelColor={text('Group Label Color', 'black')}\\\\\\\\n        error={boolean('error', true)}\\\\\\\\n        errorMessage={text('errorMessage', 'Some Field Error')}\\\\\\\\n        required={boolean('required', false)}\\\\\\\\n      >\\\\\\\\n        <Checkbox\\\\\\\\n          id='checkbox1'\\\\\\\\n          onChange={action('CheckboxField 1 Changed')}\\\\\\\\n          disabled={boolean('disabled', false, 'CheckboxField 1')}\\\\\\\\n          checked={boolean('checked', true, 'CheckboxField 1')}\\\\\\\\n          name={text('name', 'gender', 'CheckboxField 1')}\\\\\\\\n          value={text('value', 'Male', 'CheckboxField 1')}\\\\\\\\n          label={text('label', 'Male', 'CheckboxField 1')}\\\\\\\\n          checkboxSize={\\\\\\\\n            radios('size', radioOptions.size, 'sm') as tCheckboxSize\\\\\\\\n          }\\\\\\\\n          labelColor={text('Label Color', 'black')}\\\\\\\\n        />\\\\\\\\n        <Checkbox\\\\\\\\n          id='checkbox2'\\\\\\\\n          onChange={action('CheckboxField 2 Changed')}\\\\\\\\n          disabled={boolean('disabled', false, 'CheckboxField 2')}\\\\\\\\n          checked={boolean('checked', true, 'CheckboxField 2')}\\\\\\\\n          name={text('name', 'gender', 'CheckboxField 2')}\\\\\\\\n          value={text('value', 'Female', 'CheckboxField 2')}\\\\\\\\n          label={text('label', 'Female', 'CheckboxField 2')}\\\\\\\\n          checkboxSize={\\\\\\\\n            radios('size', radioOptions.size, 'sm') as tCheckboxSize\\\\\\\\n          }\\\\\\\\n        />\\\\\\\\n        <Checkbox\\\\\\\\n          id='checkbox3'\\\\\\\\n          onChange={action('CheckboxField 3 Changed')}\\\\\\\\n          disabled={boolean('disabled', false, 'CheckboxField 3')}\\\\\\\\n          checked={boolean('checked', true, 'CheckboxField 3')}\\\\\\\\n          name={text('name', 'gender', 'CheckboxField 3')}\\\\\\\\n          value={text('value', 'Others', 'CheckboxField 3')}\\\\\\\\n          label={text('label', 'Others', 'CheckboxField 3')}\\\\\\\\n          checkboxSize={\\\\\\\\n            radios('size', radioOptions.size, 'sm') as tCheckboxSize\\\\\\\\n          }\\\\\\\\n          labelColor={text('Label Color', 'black')}\\\\\\\\n        />\\\\\\\\n      </CheckboxFieldGroup>\\\\\\\\n    </Card>\\\\\\\\n  </ThemeWrapper>\\\\\\\\n)\\\\\\\\n\\\\\\\",\\\\\\\"locationsMap\\\\\\\":{}},},\\\\n  title: `${path}/CheckboxFieldGroup`,\\\\n  decorators: [withKnobs],\\\\n  component: CheckboxFieldGroup\\\\n}\\\\n\\\\nconst radioOptions = {\\\\n  size: { sm: 'sm', md: 'md', lg: 'lg' }\\\\n}\\\\n\\\\nexport const withDefault = addSourceDecorator(() => (\\\\n  <ThemeWrapper>\\\\n    <Card>\\\\n      <CheckboxFieldGroup\\\\n        id='defaultCheckboxFieldGroup'\\\\n        orientation={boolean('orientation', false)}\\\\n        spacing={number('spacing', 10)}\\\\n        variant='default'\\\\n        width='400px'\\\\n        label='Gender'\\\\n        labelColor={text('Group Label Color', 'black')}\\\\n      >\\\\n        <Checkbox\\\\n          id='checkbox1'\\\\n          onChange={action('CheckboxField 1 Changed')}\\\\n          disabled={boolean('disabled', false, 'CheckboxField 1')}\\\\n          checked={boolean('checked', true, 'CheckboxField 1')}\\\\n          name={text('name', 'gender', 'CheckboxField 1')}\\\\n          value={text('value', 'Male', 'CheckboxField 1')}\\\\n          label={text('label', 'Male', 'CheckboxField 1')}\\\\n          checkboxSize={\\\\n            radios('size', radioOptions.size, 'sm') as tCheckboxSize\\\\n          }\\\\n          labelColor={text('Label Color', 'black')}\\\\n        />\\\\n        <Checkbox\\\\n          id='checkbox2'\\\\n          onChange={action('CheckboxField 2 Changed')}\\\\n          disabled={boolean('disabled', false, 'CheckboxField 2')}\\\\n          checked={boolean('checked', true, 'CheckboxField 2')}\\\\n          name={text('name', 'gender', 'CheckboxField 2')}\\\\n          value={text('value', 'Female', 'CheckboxField 2')}\\\\n          label={text('label', 'Female', 'CheckboxField 2')}\\\\n          checkboxSize={\\\\n            radios('size', radioOptions.size, 'sm') as tCheckboxSize\\\\n          }\\\\n          labelColor={text('Label Color', 'black')}\\\\n        />\\\\n        <Checkbox\\\\n          id='checkbox3'\\\\n          onChange={action('CheckboxField 3 Changed')}\\\\n          disabled={boolean('disabled', false, 'CheckboxField 3')}\\\\n          checked={boolean('checked', true, 'CheckboxField 3')}\\\\n          name={text('name', 'gender', 'CheckboxField 3')}\\\\n          value={text('value', 'Others', 'CheckboxField 3')}\\\\n          label={text('label', 'Others', 'CheckboxField 3')}\\\\n          checkboxSize={\\\\n            radios('size', radioOptions.size, 'sm') as tCheckboxSize\\\\n          }\\\\n          labelColor={text('Label Color', 'black')}\\\\n        />\\\\n      </CheckboxFieldGroup>\\\\n    </Card>\\\\n  </ThemeWrapper>\\\\n), {__STORY__, __ADDS_MAP__,__MAIN_FILE_LOCATION__,__MODULE_DEPENDENCIES__,__LOCAL_DEPENDENCIES__,__SOURCE_PREFIX__,__IDS_TO_FRAMEWORKS__});\\\\n\\\\nexport const withForm = addSourceDecorator(() => (\\\\n  <ThemeWrapper>\\\\n    <Card>\\\\n      <CheckboxFieldGroup\\\\n        id='CheckboxFieldGroup2'\\\\n        orientation={boolean('orientation', false)}\\\\n        spacing={number('spacing', 10)}\\\\n        variant='form'\\\\n        label='Gender'\\\\n        width={text('width', '50%')}\\\\n        labelColor={text('Group Label Color', 'black')}\\\\n        error={boolean('error', true)}\\\\n        errorMessage={text('errorMessage', 'Some Field Error')}\\\\n        required={boolean('required', false)}\\\\n      >\\\\n        <Checkbox\\\\n          id='checkbox1'\\\\n          onChange={action('CheckboxField 1 Changed')}\\\\n          disabled={boolean('disabled', false, 'CheckboxField 1')}\\\\n          checked={boolean('checked', true, 'CheckboxField 1')}\\\\n          name={text('name', 'gender', 'CheckboxField 1')}\\\\n          value={text('value', 'Male', 'CheckboxField 1')}\\\\n          label={text('label', 'Male', 'CheckboxField 1')}\\\\n          checkboxSize={\\\\n            radios('size', radioOptions.size, 'sm') as tCheckboxSize\\\\n          }\\\\n          labelColor={text('Label Color', 'black')}\\\\n        />\\\\n        <Checkbox\\\\n          id='checkbox2'\\\\n          onChange={action('CheckboxField 2 Changed')}\\\\n          disabled={boolean('disabled', false, 'CheckboxField 2')}\\\\n          checked={boolean('checked', true, 'CheckboxField 2')}\\\\n          name={text('name', 'gender', 'CheckboxField 2')}\\\\n          value={text('value', 'Female', 'CheckboxField 2')}\\\\n          label={text('label', 'Female', 'CheckboxField 2')}\\\\n          checkboxSize={\\\\n            radios('size', radioOptions.size, 'sm') as tCheckboxSize\\\\n          }\\\\n        />\\\\n        <Checkbox\\\\n          id='checkbox3'\\\\n          onChange={action('CheckboxField 3 Changed')}\\\\n          disabled={boolean('disabled', false, 'CheckboxField 3')}\\\\n          checked={boolean('checked', true, 'CheckboxField 3')}\\\\n          name={text('name', 'gender', 'CheckboxField 3')}\\\\n          value={text('value', 'Others', 'CheckboxField 3')}\\\\n          label={text('label', 'Others', 'CheckboxField 3')}\\\\n          checkboxSize={\\\\n            radios('size', radioOptions.size, 'sm') as tCheckboxSize\\\\n          }\\\\n          labelColor={text('Label Color', 'black')}\\\\n        />\\\\n      </CheckboxFieldGroup>\\\\n    </Card>\\\\n  </ThemeWrapper>\\\\n), {__STORY__, __ADDS_MAP__,__MAIN_FILE_LOCATION__,__MODULE_DEPENDENCIES__,__LOCAL_DEPENDENCIES__,__SOURCE_PREFIX__,__IDS_TO_FRAMEWORKS__});\\\",\\\"locationsMap\\\":{}},\\\"storySource\\\":{\\\"source\\\":\\\"import React from 'react'\\\\nimport { path } from '..'\\\\nimport CheckboxFieldGroup from '.'\\\\nimport {\\\\n  withKnobs,\\\\n  boolean,\\\\n  radios,\\\\n  number,\\\\n  text\\\\n} from '@storybook/addon-knobs'\\\\nimport { action } from '@storybook/addon-actions'\\\\nimport ThemeWrapper from '../../../utilities/components/ThemeWrapper'\\\\nimport Checkbox, { tCheckboxSize } from '../Checkbox'\\\\n\\\\nimport Card from '../Card'\\\\n\\\\nexport default {\\\\n  title: `${path}/CheckboxFieldGroup`,\\\\n  decorators: [withKnobs],\\\\n  component: CheckboxFieldGroup\\\\n}\\\\n\\\\nconst radioOptions = {\\\\n  size: { sm: 'sm', md: 'md', lg: 'lg' }\\\\n}\\\\n\\\\nexport const withDefault = () => (\\\\n  <ThemeWrapper>\\\\n    <Card>\\\\n      <CheckboxFieldGroup\\\\n        id='defaultCheckboxFieldGroup'\\\\n        orientation={boolean('orientation', false)}\\\\n        spacing={number('spacing', 10)}\\\\n        variant='default'\\\\n        width='400px'\\\\n        label='Gender'\\\\n        labelColor={text('Group Label Color', 'black')}\\\\n      >\\\\n        <Checkbox\\\\n          id='checkbox1'\\\\n          onChange={action('CheckboxField 1 Changed')}\\\\n          disabled={boolean('disabled', false, 'CheckboxField 1')}\\\\n          checked={boolean('checked', true, 'CheckboxField 1')}\\\\n          name={text('name', 'gender', 'CheckboxField 1')}\\\\n          value={text('value', 'Male', 'CheckboxField 1')}\\\\n          label={text('label', 'Male', 'CheckboxField 1')}\\\\n          checkboxSize={\\\\n            radios('size', radioOptions.size, 'sm') as tCheckboxSize\\\\n          }\\\\n          labelColor={text('Label Color', 'black')}\\\\n        />\\\\n        <Checkbox\\\\n          id='checkbox2'\\\\n          onChange={action('CheckboxField 2 Changed')}\\\\n          disabled={boolean('disabled', false, 'CheckboxField 2')}\\\\n          checked={boolean('checked', true, 'CheckboxField 2')}\\\\n          name={text('name', 'gender', 'CheckboxField 2')}\\\\n          value={text('value', 'Female', 'CheckboxField 2')}\\\\n          label={text('label', 'Female', 'CheckboxField 2')}\\\\n          checkboxSize={\\\\n            radios('size', radioOptions.size, 'sm') as tCheckboxSize\\\\n          }\\\\n          labelColor={text('Label Color', 'black')}\\\\n        />\\\\n        <Checkbox\\\\n          id='checkbox3'\\\\n          onChange={action('CheckboxField 3 Changed')}\\\\n          disabled={boolean('disabled', false, 'CheckboxField 3')}\\\\n          checked={boolean('checked', true, 'CheckboxField 3')}\\\\n          name={text('name', 'gender', 'CheckboxField 3')}\\\\n          value={text('value', 'Others', 'CheckboxField 3')}\\\\n          label={text('label', 'Others', 'CheckboxField 3')}\\\\n          checkboxSize={\\\\n            radios('size', radioOptions.size, 'sm') as tCheckboxSize\\\\n          }\\\\n          labelColor={text('Label Color', 'black')}\\\\n        />\\\\n      </CheckboxFieldGroup>\\\\n    </Card>\\\\n  </ThemeWrapper>\\\\n)\\\\n\\\\nexport const withForm = () => (\\\\n  <ThemeWrapper>\\\\n    <Card>\\\\n      <CheckboxFieldGroup\\\\n        id='CheckboxFieldGroup2'\\\\n        orientation={boolean('orientation', false)}\\\\n        spacing={number('spacing', 10)}\\\\n        variant='form'\\\\n        label='Gender'\\\\n        width={text('width', '50%')}\\\\n        labelColor={text('Group Label Color', 'black')}\\\\n        error={boolean('error', true)}\\\\n        errorMessage={text('errorMessage', 'Some Field Error')}\\\\n        required={boolean('required', false)}\\\\n      >\\\\n        <Checkbox\\\\n          id='checkbox1'\\\\n          onChange={action('CheckboxField 1 Changed')}\\\\n          disabled={boolean('disabled', false, 'CheckboxField 1')}\\\\n          checked={boolean('checked', true, 'CheckboxField 1')}\\\\n          name={text('name', 'gender', 'CheckboxField 1')}\\\\n          value={text('value', 'Male', 'CheckboxField 1')}\\\\n          label={text('label', 'Male', 'CheckboxField 1')}\\\\n          checkboxSize={\\\\n            radios('size', radioOptions.size, 'sm') as tCheckboxSize\\\\n          }\\\\n          labelColor={text('Label Color', 'black')}\\\\n        />\\\\n        <Checkbox\\\\n          id='checkbox2'\\\\n          onChange={action('CheckboxField 2 Changed')}\\\\n          disabled={boolean('disabled', false, 'CheckboxField 2')}\\\\n          checked={boolean('checked', true, 'CheckboxField 2')}\\\\n          name={text('name', 'gender', 'CheckboxField 2')}\\\\n          value={text('value', 'Female', 'CheckboxField 2')}\\\\n          label={text('label', 'Female', 'CheckboxField 2')}\\\\n          checkboxSize={\\\\n            radios('size', radioOptions.size, 'sm') as tCheckboxSize\\\\n          }\\\\n        />\\\\n        <Checkbox\\\\n          id='checkbox3'\\\\n          onChange={action('CheckboxField 3 Changed')}\\\\n          disabled={boolean('disabled', false, 'CheckboxField 3')}\\\\n          checked={boolean('checked', true, 'CheckboxField 3')}\\\\n          name={text('name', 'gender', 'CheckboxField 3')}\\\\n          value={text('value', 'Others', 'CheckboxField 3')}\\\\n          label={text('label', 'Others', 'CheckboxField 3')}\\\\n          checkboxSize={\\\\n            radios('size', radioOptions.size, 'sm') as tCheckboxSize\\\\n          }\\\\n          labelColor={text('Label Color', 'black')}\\\\n        />\\\\n      </CheckboxFieldGroup>\\\\n    </Card>\\\\n  </ThemeWrapper>\\\\n)\\\\n\\\",\\\"locationsMap\\\":{}},},\\n  title: `${path}/CheckboxFieldGroup`,\\n  decorators: [withKnobs],\\n  component: CheckboxFieldGroup\\n}\\n\\nconst radioOptions = {\\n  size: { sm: 'sm', md: 'md', lg: 'lg' }\\n}\\n\\nexport const withDefault = addSourceDecorator(addSourceDecorator(() => (\\n  <ThemeWrapper>\\n    <Card>\\n      <CheckboxFieldGroup\\n        id='defaultCheckboxFieldGroup'\\n        orientation={boolean('orientation', false)}\\n        spacing={number('spacing', 10)}\\n        variant='default'\\n        width='400px'\\n        label='Gender'\\n        labelColor={text('Group Label Color', 'black')}\\n      >\\n        <Checkbox\\n          id='checkbox1'\\n          onChange={action('CheckboxField 1 Changed')}\\n          disabled={boolean('disabled', false, 'CheckboxField 1')}\\n          checked={boolean('checked', true, 'CheckboxField 1')}\\n          name={text('name', 'gender', 'CheckboxField 1')}\\n          value={text('value', 'Male', 'CheckboxField 1')}\\n          label={text('label', 'Male', 'CheckboxField 1')}\\n          checkboxSize={\\n            radios('size', radioOptions.size, 'sm') as tCheckboxSize\\n          }\\n          labelColor={text('Label Color', 'black')}\\n        />\\n        <Checkbox\\n          id='checkbox2'\\n          onChange={action('CheckboxField 2 Changed')}\\n          disabled={boolean('disabled', false, 'CheckboxField 2')}\\n          checked={boolean('checked', true, 'CheckboxField 2')}\\n          name={text('name', 'gender', 'CheckboxField 2')}\\n          value={text('value', 'Female', 'CheckboxField 2')}\\n          label={text('label', 'Female', 'CheckboxField 2')}\\n          checkboxSize={\\n            radios('size', radioOptions.size, 'sm') as tCheckboxSize\\n          }\\n          labelColor={text('Label Color', 'black')}\\n        />\\n        <Checkbox\\n          id='checkbox3'\\n          onChange={action('CheckboxField 3 Changed')}\\n          disabled={boolean('disabled', false, 'CheckboxField 3')}\\n          checked={boolean('checked', true, 'CheckboxField 3')}\\n          name={text('name', 'gender', 'CheckboxField 3')}\\n          value={text('value', 'Others', 'CheckboxField 3')}\\n          label={text('label', 'Others', 'CheckboxField 3')}\\n          checkboxSize={\\n            radios('size', radioOptions.size, 'sm') as tCheckboxSize\\n          }\\n          labelColor={text('Label Color', 'black')}\\n        />\\n      </CheckboxFieldGroup>\\n    </Card>\\n  </ThemeWrapper>\\n), {__STORY__, __ADDS_MAP__,__MAIN_FILE_LOCATION__,__MODULE_DEPENDENCIES__,__LOCAL_DEPENDENCIES__,__SOURCE_PREFIX__,__IDS_TO_FRAMEWORKS__}), {__STORY__, __ADDS_MAP__,__MAIN_FILE_LOCATION__,__MODULE_DEPENDENCIES__,__LOCAL_DEPENDENCIES__,__SOURCE_PREFIX__,__IDS_TO_FRAMEWORKS__});;\\n\\nexport const withForm = addSourceDecorator(addSourceDecorator(() => (\\n  <ThemeWrapper>\\n    <Card>\\n      <CheckboxFieldGroup\\n        id='CheckboxFieldGroup2'\\n        orientation={boolean('orientation', false)}\\n        spacing={number('spacing', 10)}\\n        variant='form'\\n        label='Gender'\\n        width={text('width', '50%')}\\n        labelColor={text('Group Label Color', 'black')}\\n        error={boolean('error', true)}\\n        errorMessage={text('errorMessage', 'Some Field Error')}\\n        required={boolean('required', false)}\\n      >\\n        <Checkbox\\n          id='checkbox1'\\n          onChange={action('CheckboxField 1 Changed')}\\n          disabled={boolean('disabled', false, 'CheckboxField 1')}\\n          checked={boolean('checked', true, 'CheckboxField 1')}\\n          name={text('name', 'gender', 'CheckboxField 1')}\\n          value={text('value', 'Male', 'CheckboxField 1')}\\n          label={text('label', 'Male', 'CheckboxField 1')}\\n          checkboxSize={\\n            radios('size', radioOptions.size, 'sm') as tCheckboxSize\\n          }\\n          labelColor={text('Label Color', 'black')}\\n        />\\n        <Checkbox\\n          id='checkbox2'\\n          onChange={action('CheckboxField 2 Changed')}\\n          disabled={boolean('disabled', false, 'CheckboxField 2')}\\n          checked={boolean('checked', true, 'CheckboxField 2')}\\n          name={text('name', 'gender', 'CheckboxField 2')}\\n          value={text('value', 'Female', 'CheckboxField 2')}\\n          label={text('label', 'Female', 'CheckboxField 2')}\\n          checkboxSize={\\n            radios('size', radioOptions.size, 'sm') as tCheckboxSize\\n          }\\n        />\\n        <Checkbox\\n          id='checkbox3'\\n          onChange={action('CheckboxField 3 Changed')}\\n          disabled={boolean('disabled', false, 'CheckboxField 3')}\\n          checked={boolean('checked', true, 'CheckboxField 3')}\\n          name={text('name', 'gender', 'CheckboxField 3')}\\n          value={text('value', 'Others', 'CheckboxField 3')}\\n          label={text('label', 'Others', 'CheckboxField 3')}\\n          checkboxSize={\\n            radios('size', radioOptions.size, 'sm') as tCheckboxSize\\n          }\\n          labelColor={text('Label Color', 'black')}\\n        />\\n      </CheckboxFieldGroup>\\n    </Card>\\n  </ThemeWrapper>\\n), {__STORY__, __ADDS_MAP__,__MAIN_FILE_LOCATION__,__MODULE_DEPENDENCIES__,__LOCAL_DEPENDENCIES__,__SOURCE_PREFIX__,__IDS_TO_FRAMEWORKS__}), {__STORY__, __ADDS_MAP__,__MAIN_FILE_LOCATION__,__MODULE_DEPENDENCIES__,__LOCAL_DEPENDENCIES__,__SOURCE_PREFIX__,__IDS_TO_FRAMEWORKS__});\";\n// @ts-ignore\nvar __ADDS_MAP__ = {};\n// @ts-ignore\nvar __MAIN_FILE_LOCATION__ = \"/CheckboxFieldGroup.stories.tsx\";\n// @ts-ignore\nvar __MODULE_DEPENDENCIES__ = [];\n// @ts-ignore\nvar __LOCAL_DEPENDENCIES__ = {};\n// @ts-ignore\nvar __IDS_TO_FRAMEWORKS__ = {};\n        \n\n/* eslint-disable */\n// @ts-nocheck\n// @ts-ignore\nvar withSourceLoader = require('@storybook/source-loader/preview').withSource;\n// @ts-ignore\nvar addSourceDecorator = require(\"@storybook/source-loader/preview\").addSource;\n// @ts-ignore\nvar __SOURCE_PREFIX__ = \"/Users/farhanansari/Code/ui-library/src/components/atoms/CheckboxFieldGroup\";\n// @ts-ignore\nvar __STORY__ = \"\\n\\n// @ts-nocheck\\n// @ts-ignore\\nvar withSourceLoader = require('@storybook/source-loader/preview').withSource;\\n// @ts-ignore\\nvar addSourceDecorator = require(\\\"@storybook/source-loader/preview\\\").addSource;\\n// @ts-ignore\\nvar __SOURCE_PREFIX__ = \\\"/Users/farhanansari/Code/ui-library/src/components/atoms/CheckboxFieldGroup\\\";\\n// @ts-ignore\\nvar __STORY__ = \\\"import React from 'react'\\\\nimport { path } from '..'\\\\nimport CheckboxFieldGroup from '.'\\\\nimport {\\\\n  withKnobs,\\\\n  boolean,\\\\n  radios,\\\\n  number,\\\\n  text\\\\n} from '@storybook/addon-knobs'\\\\nimport { action } from '@storybook/addon-actions'\\\\nimport ThemeWrapper from '../../../utilities/components/ThemeWrapper'\\\\nimport Checkbox, { tCheckboxSize } from '../Checkbox'\\\\n\\\\nimport Card from '../Card'\\\\n\\\\nexport default {\\\\n  title: `${path}/CheckboxFieldGroup`,\\\\n  decorators: [withKnobs],\\\\n  component: CheckboxFieldGroup\\\\n}\\\\n\\\\nconst radioOptions = {\\\\n  size: { sm: 'sm', md: 'md', lg: 'lg' }\\\\n}\\\\n\\\\nexport const withDefault = () => (\\\\n  <ThemeWrapper>\\\\n    <Card>\\\\n      <CheckboxFieldGroup\\\\n        id='defaultCheckboxFieldGroup'\\\\n        orientation={boolean('orientation', false)}\\\\n        spacing={number('spacing', 10)}\\\\n        variant='default'\\\\n        width='400px'\\\\n        label='Gender'\\\\n        labelColor={text('Group Label Color', 'black')}\\\\n      >\\\\n        <Checkbox\\\\n          id='checkbox1'\\\\n          onChange={action('CheckboxField 1 Changed')}\\\\n          disabled={boolean('disabled', false, 'CheckboxField 1')}\\\\n          checked={boolean('checked', true, 'CheckboxField 1')}\\\\n          name={text('name', 'gender', 'CheckboxField 1')}\\\\n          value={text('value', 'Male', 'CheckboxField 1')}\\\\n          label={text('label', 'Male', 'CheckboxField 1')}\\\\n          checkboxSize={\\\\n            radios('size', radioOptions.size, 'sm') as tCheckboxSize\\\\n          }\\\\n          labelColor={text('Label Color', 'black')}\\\\n        />\\\\n        <Checkbox\\\\n          id='checkbox2'\\\\n          onChange={action('CheckboxField 2 Changed')}\\\\n          disabled={boolean('disabled', false, 'CheckboxField 2')}\\\\n          checked={boolean('checked', true, 'CheckboxField 2')}\\\\n          name={text('name', 'gender', 'CheckboxField 2')}\\\\n          value={text('value', 'Female', 'CheckboxField 2')}\\\\n          label={text('label', 'Female', 'CheckboxField 2')}\\\\n          checkboxSize={\\\\n            radios('size', radioOptions.size, 'sm') as tCheckboxSize\\\\n          }\\\\n          labelColor={text('Label Color', 'black')}\\\\n        />\\\\n        <Checkbox\\\\n          id='checkbox3'\\\\n          onChange={action('CheckboxField 3 Changed')}\\\\n          disabled={boolean('disabled', false, 'CheckboxField 3')}\\\\n          checked={boolean('checked', true, 'CheckboxField 3')}\\\\n          name={text('name', 'gender', 'CheckboxField 3')}\\\\n          value={text('value', 'Others', 'CheckboxField 3')}\\\\n          label={text('label', 'Others', 'CheckboxField 3')}\\\\n          checkboxSize={\\\\n            radios('size', radioOptions.size, 'sm') as tCheckboxSize\\\\n          }\\\\n          labelColor={text('Label Color', 'black')}\\\\n        />\\\\n      </CheckboxFieldGroup>\\\\n    </Card>\\\\n  </ThemeWrapper>\\\\n)\\\\n\\\\nexport const withForm = () => (\\\\n  <ThemeWrapper>\\\\n    <Card>\\\\n      <CheckboxFieldGroup\\\\n        id='CheckboxFieldGroup2'\\\\n        orientation={boolean('orientation', false)}\\\\n        spacing={number('spacing', 10)}\\\\n        variant='form'\\\\n        label='Gender'\\\\n        width={text('width', '50%')}\\\\n        labelColor={text('Group Label Color', 'black')}\\\\n        error={boolean('error', true)}\\\\n        errorMessage={text('errorMessage', 'Some Field Error')}\\\\n        required={boolean('required', false)}\\\\n      >\\\\n        <Checkbox\\\\n          id='checkbox1'\\\\n          onChange={action('CheckboxField 1 Changed')}\\\\n          disabled={boolean('disabled', false, 'CheckboxField 1')}\\\\n          checked={boolean('checked', true, 'CheckboxField 1')}\\\\n          name={text('name', 'gender', 'CheckboxField 1')}\\\\n          value={text('value', 'Male', 'CheckboxField 1')}\\\\n          label={text('label', 'Male', 'CheckboxField 1')}\\\\n          checkboxSize={\\\\n            radios('size', radioOptions.size, 'sm') as tCheckboxSize\\\\n          }\\\\n          labelColor={text('Label Color', 'black')}\\\\n        />\\\\n        <Checkbox\\\\n          id='checkbox2'\\\\n          onChange={action('CheckboxField 2 Changed')}\\\\n          disabled={boolean('disabled', false, 'CheckboxField 2')}\\\\n          checked={boolean('checked', true, 'CheckboxField 2')}\\\\n          name={text('name', 'gender', 'CheckboxField 2')}\\\\n          value={text('value', 'Female', 'CheckboxField 2')}\\\\n          label={text('label', 'Female', 'CheckboxField 2')}\\\\n          checkboxSize={\\\\n            radios('size', radioOptions.size, 'sm') as tCheckboxSize\\\\n          }\\\\n        />\\\\n        <Checkbox\\\\n          id='checkbox3'\\\\n          onChange={action('CheckboxField 3 Changed')}\\\\n          disabled={boolean('disabled', false, 'CheckboxField 3')}\\\\n          checked={boolean('checked', true, 'CheckboxField 3')}\\\\n          name={text('name', 'gender', 'CheckboxField 3')}\\\\n          value={text('value', 'Others', 'CheckboxField 3')}\\\\n          label={text('label', 'Others', 'CheckboxField 3')}\\\\n          checkboxSize={\\\\n            radios('size', radioOptions.size, 'sm') as tCheckboxSize\\\\n          }\\\\n          labelColor={text('Label Color', 'black')}\\\\n        />\\\\n      </CheckboxFieldGroup>\\\\n    </Card>\\\\n  </ThemeWrapper>\\\\n)\\\\n\\\";\\n// @ts-ignore\\nvar __ADDS_MAP__ = {};\\n// @ts-ignore\\nvar __MAIN_FILE_LOCATION__ = \\\"/CheckboxFieldGroup.stories.tsx\\\";\\n// @ts-ignore\\nvar __MODULE_DEPENDENCIES__ = [];\\n// @ts-ignore\\nvar __LOCAL_DEPENDENCIES__ = {};\\n// @ts-ignore\\nvar __IDS_TO_FRAMEWORKS__ = {};\\n        \\nimport React from 'react'\\nimport { path } from '..'\\nimport CheckboxFieldGroup from '.'\\nimport {\\n  withKnobs,\\n  boolean,\\n  radios,\\n  number,\\n  text\\n} from '@storybook/addon-knobs'\\nimport { action } from '@storybook/addon-actions'\\nimport ThemeWrapper from '../../../utilities/components/ThemeWrapper'\\nimport Checkbox, { tCheckboxSize } from '../Checkbox'\\n\\nimport Card from '../Card'\\n\\nexport default {parameters: {\\\"storySource\\\":{\\\"source\\\":\\\"import React from 'react'\\\\nimport { path } from '..'\\\\nimport CheckboxFieldGroup from '.'\\\\nimport {\\\\n  withKnobs,\\\\n  boolean,\\\\n  radios,\\\\n  number,\\\\n  text\\\\n} from '@storybook/addon-knobs'\\\\nimport { action } from '@storybook/addon-actions'\\\\nimport ThemeWrapper from '../../../utilities/components/ThemeWrapper'\\\\nimport Checkbox, { tCheckboxSize } from '../Checkbox'\\\\n\\\\nimport Card from '../Card'\\\\n\\\\nexport default {\\\\n  title: `${path}/CheckboxFieldGroup`,\\\\n  decorators: [withKnobs],\\\\n  component: CheckboxFieldGroup\\\\n}\\\\n\\\\nconst radioOptions = {\\\\n  size: { sm: 'sm', md: 'md', lg: 'lg' }\\\\n}\\\\n\\\\nexport const withDefault = () => (\\\\n  <ThemeWrapper>\\\\n    <Card>\\\\n      <CheckboxFieldGroup\\\\n        id='defaultCheckboxFieldGroup'\\\\n        orientation={boolean('orientation', false)}\\\\n        spacing={number('spacing', 10)}\\\\n        variant='default'\\\\n        width='400px'\\\\n        label='Gender'\\\\n        labelColor={text('Group Label Color', 'black')}\\\\n      >\\\\n        <Checkbox\\\\n          id='checkbox1'\\\\n          onChange={action('CheckboxField 1 Changed')}\\\\n          disabled={boolean('disabled', false, 'CheckboxField 1')}\\\\n          checked={boolean('checked', true, 'CheckboxField 1')}\\\\n          name={text('name', 'gender', 'CheckboxField 1')}\\\\n          value={text('value', 'Male', 'CheckboxField 1')}\\\\n          label={text('label', 'Male', 'CheckboxField 1')}\\\\n          checkboxSize={\\\\n            radios('size', radioOptions.size, 'sm') as tCheckboxSize\\\\n          }\\\\n          labelColor={text('Label Color', 'black')}\\\\n        />\\\\n        <Checkbox\\\\n          id='checkbox2'\\\\n          onChange={action('CheckboxField 2 Changed')}\\\\n          disabled={boolean('disabled', false, 'CheckboxField 2')}\\\\n          checked={boolean('checked', true, 'CheckboxField 2')}\\\\n          name={text('name', 'gender', 'CheckboxField 2')}\\\\n          value={text('value', 'Female', 'CheckboxField 2')}\\\\n          label={text('label', 'Female', 'CheckboxField 2')}\\\\n          checkboxSize={\\\\n            radios('size', radioOptions.size, 'sm') as tCheckboxSize\\\\n          }\\\\n          labelColor={text('Label Color', 'black')}\\\\n        />\\\\n        <Checkbox\\\\n          id='checkbox3'\\\\n          onChange={action('CheckboxField 3 Changed')}\\\\n          disabled={boolean('disabled', false, 'CheckboxField 3')}\\\\n          checked={boolean('checked', true, 'CheckboxField 3')}\\\\n          name={text('name', 'gender', 'CheckboxField 3')}\\\\n          value={text('value', 'Others', 'CheckboxField 3')}\\\\n          label={text('label', 'Others', 'CheckboxField 3')}\\\\n          checkboxSize={\\\\n            radios('size', radioOptions.size, 'sm') as tCheckboxSize\\\\n          }\\\\n          labelColor={text('Label Color', 'black')}\\\\n        />\\\\n      </CheckboxFieldGroup>\\\\n    </Card>\\\\n  </ThemeWrapper>\\\\n)\\\\n\\\\nexport const withForm = () => (\\\\n  <ThemeWrapper>\\\\n    <Card>\\\\n      <CheckboxFieldGroup\\\\n        id='CheckboxFieldGroup2'\\\\n        orientation={boolean('orientation', false)}\\\\n        spacing={number('spacing', 10)}\\\\n        variant='form'\\\\n        label='Gender'\\\\n        width={text('width', '50%')}\\\\n        labelColor={text('Group Label Color', 'black')}\\\\n        error={boolean('error', true)}\\\\n        errorMessage={text('errorMessage', 'Some Field Error')}\\\\n        required={boolean('required', false)}\\\\n      >\\\\n        <Checkbox\\\\n          id='checkbox1'\\\\n          onChange={action('CheckboxField 1 Changed')}\\\\n          disabled={boolean('disabled', false, 'CheckboxField 1')}\\\\n          checked={boolean('checked', true, 'CheckboxField 1')}\\\\n          name={text('name', 'gender', 'CheckboxField 1')}\\\\n          value={text('value', 'Male', 'CheckboxField 1')}\\\\n          label={text('label', 'Male', 'CheckboxField 1')}\\\\n          checkboxSize={\\\\n            radios('size', radioOptions.size, 'sm') as tCheckboxSize\\\\n          }\\\\n          labelColor={text('Label Color', 'black')}\\\\n        />\\\\n        <Checkbox\\\\n          id='checkbox2'\\\\n          onChange={action('CheckboxField 2 Changed')}\\\\n          disabled={boolean('disabled', false, 'CheckboxField 2')}\\\\n          checked={boolean('checked', true, 'CheckboxField 2')}\\\\n          name={text('name', 'gender', 'CheckboxField 2')}\\\\n          value={text('value', 'Female', 'CheckboxField 2')}\\\\n          label={text('label', 'Female', 'CheckboxField 2')}\\\\n          checkboxSize={\\\\n            radios('size', radioOptions.size, 'sm') as tCheckboxSize\\\\n          }\\\\n        />\\\\n        <Checkbox\\\\n          id='checkbox3'\\\\n          onChange={action('CheckboxField 3 Changed')}\\\\n          disabled={boolean('disabled', false, 'CheckboxField 3')}\\\\n          checked={boolean('checked', true, 'CheckboxField 3')}\\\\n          name={text('name', 'gender', 'CheckboxField 3')}\\\\n          value={text('value', 'Others', 'CheckboxField 3')}\\\\n          label={text('label', 'Others', 'CheckboxField 3')}\\\\n          checkboxSize={\\\\n            radios('size', radioOptions.size, 'sm') as tCheckboxSize\\\\n          }\\\\n          labelColor={text('Label Color', 'black')}\\\\n        />\\\\n      </CheckboxFieldGroup>\\\\n    </Card>\\\\n  </ThemeWrapper>\\\\n)\\\\n\\\",\\\"locationsMap\\\":{}},},\\n  title: `${path}/CheckboxFieldGroup`,\\n  decorators: [withKnobs],\\n  component: CheckboxFieldGroup\\n}\\n\\nconst radioOptions = {\\n  size: { sm: 'sm', md: 'md', lg: 'lg' }\\n}\\n\\nexport const withDefault = addSourceDecorator(() => (\\n  <ThemeWrapper>\\n    <Card>\\n      <CheckboxFieldGroup\\n        id='defaultCheckboxFieldGroup'\\n        orientation={boolean('orientation', false)}\\n        spacing={number('spacing', 10)}\\n        variant='default'\\n        width='400px'\\n        label='Gender'\\n        labelColor={text('Group Label Color', 'black')}\\n      >\\n        <Checkbox\\n          id='checkbox1'\\n          onChange={action('CheckboxField 1 Changed')}\\n          disabled={boolean('disabled', false, 'CheckboxField 1')}\\n          checked={boolean('checked', true, 'CheckboxField 1')}\\n          name={text('name', 'gender', 'CheckboxField 1')}\\n          value={text('value', 'Male', 'CheckboxField 1')}\\n          label={text('label', 'Male', 'CheckboxField 1')}\\n          checkboxSize={\\n            radios('size', radioOptions.size, 'sm') as tCheckboxSize\\n          }\\n          labelColor={text('Label Color', 'black')}\\n        />\\n        <Checkbox\\n          id='checkbox2'\\n          onChange={action('CheckboxField 2 Changed')}\\n          disabled={boolean('disabled', false, 'CheckboxField 2')}\\n          checked={boolean('checked', true, 'CheckboxField 2')}\\n          name={text('name', 'gender', 'CheckboxField 2')}\\n          value={text('value', 'Female', 'CheckboxField 2')}\\n          label={text('label', 'Female', 'CheckboxField 2')}\\n          checkboxSize={\\n            radios('size', radioOptions.size, 'sm') as tCheckboxSize\\n          }\\n          labelColor={text('Label Color', 'black')}\\n        />\\n        <Checkbox\\n          id='checkbox3'\\n          onChange={action('CheckboxField 3 Changed')}\\n          disabled={boolean('disabled', false, 'CheckboxField 3')}\\n          checked={boolean('checked', true, 'CheckboxField 3')}\\n          name={text('name', 'gender', 'CheckboxField 3')}\\n          value={text('value', 'Others', 'CheckboxField 3')}\\n          label={text('label', 'Others', 'CheckboxField 3')}\\n          checkboxSize={\\n            radios('size', radioOptions.size, 'sm') as tCheckboxSize\\n          }\\n          labelColor={text('Label Color', 'black')}\\n        />\\n      </CheckboxFieldGroup>\\n    </Card>\\n  </ThemeWrapper>\\n), {__STORY__, __ADDS_MAP__,__MAIN_FILE_LOCATION__,__MODULE_DEPENDENCIES__,__LOCAL_DEPENDENCIES__,__SOURCE_PREFIX__,__IDS_TO_FRAMEWORKS__});\\n\\nexport const withForm = addSourceDecorator(() => (\\n  <ThemeWrapper>\\n    <Card>\\n      <CheckboxFieldGroup\\n        id='CheckboxFieldGroup2'\\n        orientation={boolean('orientation', false)}\\n        spacing={number('spacing', 10)}\\n        variant='form'\\n        label='Gender'\\n        width={text('width', '50%')}\\n        labelColor={text('Group Label Color', 'black')}\\n        error={boolean('error', true)}\\n        errorMessage={text('errorMessage', 'Some Field Error')}\\n        required={boolean('required', false)}\\n      >\\n        <Checkbox\\n          id='checkbox1'\\n          onChange={action('CheckboxField 1 Changed')}\\n          disabled={boolean('disabled', false, 'CheckboxField 1')}\\n          checked={boolean('checked', true, 'CheckboxField 1')}\\n          name={text('name', 'gender', 'CheckboxField 1')}\\n          value={text('value', 'Male', 'CheckboxField 1')}\\n          label={text('label', 'Male', 'CheckboxField 1')}\\n          checkboxSize={\\n            radios('size', radioOptions.size, 'sm') as tCheckboxSize\\n          }\\n          labelColor={text('Label Color', 'black')}\\n        />\\n        <Checkbox\\n          id='checkbox2'\\n          onChange={action('CheckboxField 2 Changed')}\\n          disabled={boolean('disabled', false, 'CheckboxField 2')}\\n          checked={boolean('checked', true, 'CheckboxField 2')}\\n          name={text('name', 'gender', 'CheckboxField 2')}\\n          value={text('value', 'Female', 'CheckboxField 2')}\\n          label={text('label', 'Female', 'CheckboxField 2')}\\n          checkboxSize={\\n            radios('size', radioOptions.size, 'sm') as tCheckboxSize\\n          }\\n        />\\n        <Checkbox\\n          id='checkbox3'\\n          onChange={action('CheckboxField 3 Changed')}\\n          disabled={boolean('disabled', false, 'CheckboxField 3')}\\n          checked={boolean('checked', true, 'CheckboxField 3')}\\n          name={text('name', 'gender', 'CheckboxField 3')}\\n          value={text('value', 'Others', 'CheckboxField 3')}\\n          label={text('label', 'Others', 'CheckboxField 3')}\\n          checkboxSize={\\n            radios('size', radioOptions.size, 'sm') as tCheckboxSize\\n          }\\n          labelColor={text('Label Color', 'black')}\\n        />\\n      </CheckboxFieldGroup>\\n    </Card>\\n  </ThemeWrapper>\\n), {__STORY__, __ADDS_MAP__,__MAIN_FILE_LOCATION__,__MODULE_DEPENDENCIES__,__LOCAL_DEPENDENCIES__,__SOURCE_PREFIX__,__IDS_TO_FRAMEWORKS__});\";\n// @ts-ignore\nvar __ADDS_MAP__ = {};\n// @ts-ignore\nvar __MAIN_FILE_LOCATION__ = \"/CheckboxFieldGroup.stories.tsx\";\n// @ts-ignore\nvar __MODULE_DEPENDENCIES__ = [];\n// @ts-ignore\nvar __LOCAL_DEPENDENCIES__ = {};\n// @ts-ignore\nvar __IDS_TO_FRAMEWORKS__ = {};\n        \n\n/* eslint-disable */\n// @ts-nocheck\n// @ts-ignore\nvar withSourceLoader = require('@storybook/source-loader/preview').withSource;\n// @ts-ignore\nvar addSourceDecorator = require(\"@storybook/source-loader/preview\").addSource;\n// @ts-ignore\nvar __SOURCE_PREFIX__ = \"/Users/farhanansari/Code/ui-library/src/components/atoms/CheckboxFieldGroup\";\n// @ts-ignore\nvar __STORY__ = \"import React from 'react'\\nimport { path } from '..'\\nimport CheckboxFieldGroup from '.'\\nimport {\\n  withKnobs,\\n  boolean,\\n  radios,\\n  number,\\n  text\\n} from '@storybook/addon-knobs'\\nimport { action } from '@storybook/addon-actions'\\nimport ThemeWrapper from '../../../utilities/components/ThemeWrapper'\\nimport Checkbox, { tCheckboxSize } from '../Checkbox'\\n\\nimport Card from '../Card'\\n\\nexport default {\\n  title: `${path}/CheckboxFieldGroup`,\\n  decorators: [withKnobs],\\n  component: CheckboxFieldGroup\\n}\\n\\nconst radioOptions = {\\n  size: { sm: 'sm', md: 'md', lg: 'lg' }\\n}\\n\\nexport const withDefault = () => (\\n  <ThemeWrapper>\\n    <Card>\\n      <CheckboxFieldGroup\\n        id='defaultCheckboxFieldGroup'\\n        orientation={boolean('orientation', false)}\\n        spacing={number('spacing', 10)}\\n        variant='default'\\n        width='400px'\\n        label='Gender'\\n        labelColor={text('Group Label Color', 'black')}\\n      >\\n        <Checkbox\\n          id='checkbox1'\\n          onChange={action('CheckboxField 1 Changed')}\\n          disabled={boolean('disabled', false, 'CheckboxField 1')}\\n          checked={boolean('checked', true, 'CheckboxField 1')}\\n          name={text('name', 'gender', 'CheckboxField 1')}\\n          value={text('value', 'Male', 'CheckboxField 1')}\\n          label={text('label', 'Male', 'CheckboxField 1')}\\n          checkboxSize={\\n            radios('size', radioOptions.size, 'sm') as tCheckboxSize\\n          }\\n          labelColor={text('Label Color', 'black')}\\n        />\\n        <Checkbox\\n          id='checkbox2'\\n          onChange={action('CheckboxField 2 Changed')}\\n          disabled={boolean('disabled', false, 'CheckboxField 2')}\\n          checked={boolean('checked', true, 'CheckboxField 2')}\\n          name={text('name', 'gender', 'CheckboxField 2')}\\n          value={text('value', 'Female', 'CheckboxField 2')}\\n          label={text('label', 'Female', 'CheckboxField 2')}\\n          checkboxSize={\\n            radios('size', radioOptions.size, 'sm') as tCheckboxSize\\n          }\\n          labelColor={text('Label Color', 'black')}\\n        />\\n        <Checkbox\\n          id='checkbox3'\\n          onChange={action('CheckboxField 3 Changed')}\\n          disabled={boolean('disabled', false, 'CheckboxField 3')}\\n          checked={boolean('checked', true, 'CheckboxField 3')}\\n          name={text('name', 'gender', 'CheckboxField 3')}\\n          value={text('value', 'Others', 'CheckboxField 3')}\\n          label={text('label', 'Others', 'CheckboxField 3')}\\n          checkboxSize={\\n            radios('size', radioOptions.size, 'sm') as tCheckboxSize\\n          }\\n          labelColor={text('Label Color', 'black')}\\n        />\\n      </CheckboxFieldGroup>\\n    </Card>\\n  </ThemeWrapper>\\n)\\n\\nexport const withForm = () => (\\n  <ThemeWrapper>\\n    <Card>\\n      <CheckboxFieldGroup\\n        id='CheckboxFieldGroup2'\\n        orientation={boolean('orientation', false)}\\n        spacing={number('spacing', 10)}\\n        variant='form'\\n        label='Gender'\\n        width={text('width', '50%')}\\n        labelColor={text('Group Label Color', 'black')}\\n        error={boolean('error', true)}\\n        errorMessage={text('errorMessage', 'Some Field Error')}\\n        required={boolean('required', false)}\\n      >\\n        <Checkbox\\n          id='checkbox1'\\n          onChange={action('CheckboxField 1 Changed')}\\n          disabled={boolean('disabled', false, 'CheckboxField 1')}\\n          checked={boolean('checked', true, 'CheckboxField 1')}\\n          name={text('name', 'gender', 'CheckboxField 1')}\\n          value={text('value', 'Male', 'CheckboxField 1')}\\n          label={text('label', 'Male', 'CheckboxField 1')}\\n          checkboxSize={\\n            radios('size', radioOptions.size, 'sm') as tCheckboxSize\\n          }\\n          labelColor={text('Label Color', 'black')}\\n        />\\n        <Checkbox\\n          id='checkbox2'\\n          onChange={action('CheckboxField 2 Changed')}\\n          disabled={boolean('disabled', false, 'CheckboxField 2')}\\n          checked={boolean('checked', true, 'CheckboxField 2')}\\n          name={text('name', 'gender', 'CheckboxField 2')}\\n          value={text('value', 'Female', 'CheckboxField 2')}\\n          label={text('label', 'Female', 'CheckboxField 2')}\\n          checkboxSize={\\n            radios('size', radioOptions.size, 'sm') as tCheckboxSize\\n          }\\n        />\\n        <Checkbox\\n          id='checkbox3'\\n          onChange={action('CheckboxField 3 Changed')}\\n          disabled={boolean('disabled', false, 'CheckboxField 3')}\\n          checked={boolean('checked', true, 'CheckboxField 3')}\\n          name={text('name', 'gender', 'CheckboxField 3')}\\n          value={text('value', 'Others', 'CheckboxField 3')}\\n          label={text('label', 'Others', 'CheckboxField 3')}\\n          checkboxSize={\\n            radios('size', radioOptions.size, 'sm') as tCheckboxSize\\n          }\\n          labelColor={text('Label Color', 'black')}\\n        />\\n      </CheckboxFieldGroup>\\n    </Card>\\n  </ThemeWrapper>\\n)\\n\";\n// @ts-ignore\nvar __ADDS_MAP__ = {};\n// @ts-ignore\nvar __MAIN_FILE_LOCATION__ = \"/CheckboxFieldGroup.stories.tsx\";\n// @ts-ignore\nvar __MODULE_DEPENDENCIES__ = [];\n// @ts-ignore\nvar __LOCAL_DEPENDENCIES__ = {};\n// @ts-ignore\nvar __IDS_TO_FRAMEWORKS__ = {};\n        \nimport React from 'react'\nimport { path } from '..'\nimport CheckboxFieldGroup from '.'\nimport {\n  withKnobs,\n  boolean,\n  radios,\n  number,\n  text\n} from '@storybook/addon-knobs'\nimport { action } from '@storybook/addon-actions'\nimport ThemeWrapper from '../../../utilities/components/ThemeWrapper'\nimport Checkbox, { tCheckboxSize } from '../Checkbox'\n\nimport Card from '../Card'\n\nexport default {parameters: {\"storySource\":{\"source\":\"\\n\\n// @ts-nocheck\\n// @ts-ignore\\nvar withSourceLoader = require('@storybook/source-loader/preview').withSource;\\n// @ts-ignore\\nvar addSourceDecorator = require(\\\"@storybook/source-loader/preview\\\").addSource;\\n// @ts-ignore\\nvar __SOURCE_PREFIX__ = \\\"/Users/farhanansari/Code/ui-library/src/components/atoms/CheckboxFieldGroup\\\";\\n// @ts-ignore\\nvar __STORY__ = \\\"\\\\n\\\\n// @ts-nocheck\\\\n// @ts-ignore\\\\nvar withSourceLoader = require('@storybook/source-loader/preview').withSource;\\\\n// @ts-ignore\\\\nvar addSourceDecorator = require(\\\\\\\"@storybook/source-loader/preview\\\\\\\").addSource;\\\\n// @ts-ignore\\\\nvar __SOURCE_PREFIX__ = \\\\\\\"/Users/farhanansari/Code/ui-library/src/components/atoms/CheckboxFieldGroup\\\\\\\";\\\\n// @ts-ignore\\\\nvar __STORY__ = \\\\\\\"import React from 'react'\\\\\\\\nimport { path } from '..'\\\\\\\\nimport CheckboxFieldGroup from '.'\\\\\\\\nimport {\\\\\\\\n  withKnobs,\\\\\\\\n  boolean,\\\\\\\\n  radios,\\\\\\\\n  number,\\\\\\\\n  text\\\\\\\\n} from '@storybook/addon-knobs'\\\\\\\\nimport { action } from '@storybook/addon-actions'\\\\\\\\nimport ThemeWrapper from '../../../utilities/components/ThemeWrapper'\\\\\\\\nimport Checkbox, { tCheckboxSize } from '../Checkbox'\\\\\\\\n\\\\\\\\nimport Card from '../Card'\\\\\\\\n\\\\\\\\nexport default {\\\\\\\\n  title: `${path}/CheckboxFieldGroup`,\\\\\\\\n  decorators: [withKnobs],\\\\\\\\n  component: CheckboxFieldGroup\\\\\\\\n}\\\\\\\\n\\\\\\\\nconst radioOptions = {\\\\\\\\n  size: { sm: 'sm', md: 'md', lg: 'lg' }\\\\\\\\n}\\\\\\\\n\\\\\\\\nexport const withDefault = () => (\\\\\\\\n  <ThemeWrapper>\\\\\\\\n    <Card>\\\\\\\\n      <CheckboxFieldGroup\\\\\\\\n        id='defaultCheckboxFieldGroup'\\\\\\\\n        orientation={boolean('orientation', false)}\\\\\\\\n        spacing={number('spacing', 10)}\\\\\\\\n        variant='default'\\\\\\\\n        width='400px'\\\\\\\\n        label='Gender'\\\\\\\\n        labelColor={text('Group Label Color', 'black')}\\\\\\\\n      >\\\\\\\\n        <Checkbox\\\\\\\\n          id='checkbox1'\\\\\\\\n          onChange={action('CheckboxField 1 Changed')}\\\\\\\\n          disabled={boolean('disabled', false, 'CheckboxField 1')}\\\\\\\\n          checked={boolean('checked', true, 'CheckboxField 1')}\\\\\\\\n          name={text('name', 'gender', 'CheckboxField 1')}\\\\\\\\n          value={text('value', 'Male', 'CheckboxField 1')}\\\\\\\\n          label={text('label', 'Male', 'CheckboxField 1')}\\\\\\\\n          checkboxSize={\\\\\\\\n            radios('size', radioOptions.size, 'sm') as tCheckboxSize\\\\\\\\n          }\\\\\\\\n          labelColor={text('Label Color', 'black')}\\\\\\\\n        />\\\\\\\\n        <Checkbox\\\\\\\\n          id='checkbox2'\\\\\\\\n          onChange={action('CheckboxField 2 Changed')}\\\\\\\\n          disabled={boolean('disabled', false, 'CheckboxField 2')}\\\\\\\\n          checked={boolean('checked', true, 'CheckboxField 2')}\\\\\\\\n          name={text('name', 'gender', 'CheckboxField 2')}\\\\\\\\n          value={text('value', 'Female', 'CheckboxField 2')}\\\\\\\\n          label={text('label', 'Female', 'CheckboxField 2')}\\\\\\\\n          checkboxSize={\\\\\\\\n            radios('size', radioOptions.size, 'sm') as tCheckboxSize\\\\\\\\n          }\\\\\\\\n          labelColor={text('Label Color', 'black')}\\\\\\\\n        />\\\\\\\\n        <Checkbox\\\\\\\\n          id='checkbox3'\\\\\\\\n          onChange={action('CheckboxField 3 Changed')}\\\\\\\\n          disabled={boolean('disabled', false, 'CheckboxField 3')}\\\\\\\\n          checked={boolean('checked', true, 'CheckboxField 3')}\\\\\\\\n          name={text('name', 'gender', 'CheckboxField 3')}\\\\\\\\n          value={text('value', 'Others', 'CheckboxField 3')}\\\\\\\\n          label={text('label', 'Others', 'CheckboxField 3')}\\\\\\\\n          checkboxSize={\\\\\\\\n            radios('size', radioOptions.size, 'sm') as tCheckboxSize\\\\\\\\n          }\\\\\\\\n          labelColor={text('Label Color', 'black')}\\\\\\\\n        />\\\\\\\\n      </CheckboxFieldGroup>\\\\\\\\n    </Card>\\\\\\\\n  </ThemeWrapper>\\\\\\\\n)\\\\\\\\n\\\\\\\\nexport const withForm = () => (\\\\\\\\n  <ThemeWrapper>\\\\\\\\n    <Card>\\\\\\\\n      <CheckboxFieldGroup\\\\\\\\n        id='CheckboxFieldGroup2'\\\\\\\\n        orientation={boolean('orientation', false)}\\\\\\\\n        spacing={number('spacing', 10)}\\\\\\\\n        variant='form'\\\\\\\\n        label='Gender'\\\\\\\\n        width={text('width', '50%')}\\\\\\\\n        labelColor={text('Group Label Color', 'black')}\\\\\\\\n        error={boolean('error', true)}\\\\\\\\n        errorMessage={text('errorMessage', 'Some Field Error')}\\\\\\\\n        required={boolean('required', false)}\\\\\\\\n      >\\\\\\\\n        <Checkbox\\\\\\\\n          id='checkbox1'\\\\\\\\n          onChange={action('CheckboxField 1 Changed')}\\\\\\\\n          disabled={boolean('disabled', false, 'CheckboxField 1')}\\\\\\\\n          checked={boolean('checked', true, 'CheckboxField 1')}\\\\\\\\n          name={text('name', 'gender', 'CheckboxField 1')}\\\\\\\\n          value={text('value', 'Male', 'CheckboxField 1')}\\\\\\\\n          label={text('label', 'Male', 'CheckboxField 1')}\\\\\\\\n          checkboxSize={\\\\\\\\n            radios('size', radioOptions.size, 'sm') as tCheckboxSize\\\\\\\\n          }\\\\\\\\n          labelColor={text('Label Color', 'black')}\\\\\\\\n        />\\\\\\\\n        <Checkbox\\\\\\\\n          id='checkbox2'\\\\\\\\n          onChange={action('CheckboxField 2 Changed')}\\\\\\\\n          disabled={boolean('disabled', false, 'CheckboxField 2')}\\\\\\\\n          checked={boolean('checked', true, 'CheckboxField 2')}\\\\\\\\n          name={text('name', 'gender', 'CheckboxField 2')}\\\\\\\\n          value={text('value', 'Female', 'CheckboxField 2')}\\\\\\\\n          label={text('label', 'Female', 'CheckboxField 2')}\\\\\\\\n          checkboxSize={\\\\\\\\n            radios('size', radioOptions.size, 'sm') as tCheckboxSize\\\\\\\\n          }\\\\\\\\n        />\\\\\\\\n        <Checkbox\\\\\\\\n          id='checkbox3'\\\\\\\\n          onChange={action('CheckboxField 3 Changed')}\\\\\\\\n          disabled={boolean('disabled', false, 'CheckboxField 3')}\\\\\\\\n          checked={boolean('checked', true, 'CheckboxField 3')}\\\\\\\\n          name={text('name', 'gender', 'CheckboxField 3')}\\\\\\\\n          value={text('value', 'Others', 'CheckboxField 3')}\\\\\\\\n          label={text('label', 'Others', 'CheckboxField 3')}\\\\\\\\n          checkboxSize={\\\\\\\\n            radios('size', radioOptions.size, 'sm') as tCheckboxSize\\\\\\\\n          }\\\\\\\\n          labelColor={text('Label Color', 'black')}\\\\\\\\n        />\\\\\\\\n      </CheckboxFieldGroup>\\\\\\\\n    </Card>\\\\\\\\n  </ThemeWrapper>\\\\\\\\n)\\\\\\\\n\\\\\\\";\\\\n// @ts-ignore\\\\nvar __ADDS_MAP__ = {};\\\\n// @ts-ignore\\\\nvar __MAIN_FILE_LOCATION__ = \\\\\\\"/CheckboxFieldGroup.stories.tsx\\\\\\\";\\\\n// @ts-ignore\\\\nvar __MODULE_DEPENDENCIES__ = [];\\\\n// @ts-ignore\\\\nvar __LOCAL_DEPENDENCIES__ = {};\\\\n// @ts-ignore\\\\nvar __IDS_TO_FRAMEWORKS__ = {};\\\\n        \\\\nimport React from 'react'\\\\nimport { path } from '..'\\\\nimport CheckboxFieldGroup from '.'\\\\nimport {\\\\n  withKnobs,\\\\n  boolean,\\\\n  radios,\\\\n  number,\\\\n  text\\\\n} from '@storybook/addon-knobs'\\\\nimport { action } from '@storybook/addon-actions'\\\\nimport ThemeWrapper from '../../../utilities/components/ThemeWrapper'\\\\nimport Checkbox, { tCheckboxSize } from '../Checkbox'\\\\n\\\\nimport Card from '../Card'\\\\n\\\\nexport default {parameters: {\\\\\\\"storySource\\\\\\\":{\\\\\\\"source\\\\\\\":\\\\\\\"import React from 'react'\\\\\\\\nimport { path } from '..'\\\\\\\\nimport CheckboxFieldGroup from '.'\\\\\\\\nimport {\\\\\\\\n  withKnobs,\\\\\\\\n  boolean,\\\\\\\\n  radios,\\\\\\\\n  number,\\\\\\\\n  text\\\\\\\\n} from '@storybook/addon-knobs'\\\\\\\\nimport { action } from '@storybook/addon-actions'\\\\\\\\nimport ThemeWrapper from '../../../utilities/components/ThemeWrapper'\\\\\\\\nimport Checkbox, { tCheckboxSize } from '../Checkbox'\\\\\\\\n\\\\\\\\nimport Card from '../Card'\\\\\\\\n\\\\\\\\nexport default {\\\\\\\\n  title: `${path}/CheckboxFieldGroup`,\\\\\\\\n  decorators: [withKnobs],\\\\\\\\n  component: CheckboxFieldGroup\\\\\\\\n}\\\\\\\\n\\\\\\\\nconst radioOptions = {\\\\\\\\n  size: { sm: 'sm', md: 'md', lg: 'lg' }\\\\\\\\n}\\\\\\\\n\\\\\\\\nexport const withDefault = () => (\\\\\\\\n  <ThemeWrapper>\\\\\\\\n    <Card>\\\\\\\\n      <CheckboxFieldGroup\\\\\\\\n        id='defaultCheckboxFieldGroup'\\\\\\\\n        orientation={boolean('orientation', false)}\\\\\\\\n        spacing={number('spacing', 10)}\\\\\\\\n        variant='default'\\\\\\\\n        width='400px'\\\\\\\\n        label='Gender'\\\\\\\\n        labelColor={text('Group Label Color', 'black')}\\\\\\\\n      >\\\\\\\\n        <Checkbox\\\\\\\\n          id='checkbox1'\\\\\\\\n          onChange={action('CheckboxField 1 Changed')}\\\\\\\\n          disabled={boolean('disabled', false, 'CheckboxField 1')}\\\\\\\\n          checked={boolean('checked', true, 'CheckboxField 1')}\\\\\\\\n          name={text('name', 'gender', 'CheckboxField 1')}\\\\\\\\n          value={text('value', 'Male', 'CheckboxField 1')}\\\\\\\\n          label={text('label', 'Male', 'CheckboxField 1')}\\\\\\\\n          checkboxSize={\\\\\\\\n            radios('size', radioOptions.size, 'sm') as tCheckboxSize\\\\\\\\n          }\\\\\\\\n          labelColor={text('Label Color', 'black')}\\\\\\\\n        />\\\\\\\\n        <Checkbox\\\\\\\\n          id='checkbox2'\\\\\\\\n          onChange={action('CheckboxField 2 Changed')}\\\\\\\\n          disabled={boolean('disabled', false, 'CheckboxField 2')}\\\\\\\\n          checked={boolean('checked', true, 'CheckboxField 2')}\\\\\\\\n          name={text('name', 'gender', 'CheckboxField 2')}\\\\\\\\n          value={text('value', 'Female', 'CheckboxField 2')}\\\\\\\\n          label={text('label', 'Female', 'CheckboxField 2')}\\\\\\\\n          checkboxSize={\\\\\\\\n            radios('size', radioOptions.size, 'sm') as tCheckboxSize\\\\\\\\n          }\\\\\\\\n          labelColor={text('Label Color', 'black')}\\\\\\\\n        />\\\\\\\\n        <Checkbox\\\\\\\\n          id='checkbox3'\\\\\\\\n          onChange={action('CheckboxField 3 Changed')}\\\\\\\\n          disabled={boolean('disabled', false, 'CheckboxField 3')}\\\\\\\\n          checked={boolean('checked', true, 'CheckboxField 3')}\\\\\\\\n          name={text('name', 'gender', 'CheckboxField 3')}\\\\\\\\n          value={text('value', 'Others', 'CheckboxField 3')}\\\\\\\\n          label={text('label', 'Others', 'CheckboxField 3')}\\\\\\\\n          checkboxSize={\\\\\\\\n            radios('size', radioOptions.size, 'sm') as tCheckboxSize\\\\\\\\n          }\\\\\\\\n          labelColor={text('Label Color', 'black')}\\\\\\\\n        />\\\\\\\\n      </CheckboxFieldGroup>\\\\\\\\n    </Card>\\\\\\\\n  </ThemeWrapper>\\\\\\\\n)\\\\\\\\n\\\\\\\\nexport const withForm = () => (\\\\\\\\n  <ThemeWrapper>\\\\\\\\n    <Card>\\\\\\\\n      <CheckboxFieldGroup\\\\\\\\n        id='CheckboxFieldGroup2'\\\\\\\\n        orientation={boolean('orientation', false)}\\\\\\\\n        spacing={number('spacing', 10)}\\\\\\\\n        variant='form'\\\\\\\\n        label='Gender'\\\\\\\\n        width={text('width', '50%')}\\\\\\\\n        labelColor={text('Group Label Color', 'black')}\\\\\\\\n        error={boolean('error', true)}\\\\\\\\n        errorMessage={text('errorMessage', 'Some Field Error')}\\\\\\\\n        required={boolean('required', false)}\\\\\\\\n      >\\\\\\\\n        <Checkbox\\\\\\\\n          id='checkbox1'\\\\\\\\n          onChange={action('CheckboxField 1 Changed')}\\\\\\\\n          disabled={boolean('disabled', false, 'CheckboxField 1')}\\\\\\\\n          checked={boolean('checked', true, 'CheckboxField 1')}\\\\\\\\n          name={text('name', 'gender', 'CheckboxField 1')}\\\\\\\\n          value={text('value', 'Male', 'CheckboxField 1')}\\\\\\\\n          label={text('label', 'Male', 'CheckboxField 1')}\\\\\\\\n          checkboxSize={\\\\\\\\n            radios('size', radioOptions.size, 'sm') as tCheckboxSize\\\\\\\\n          }\\\\\\\\n          labelColor={text('Label Color', 'black')}\\\\\\\\n        />\\\\\\\\n        <Checkbox\\\\\\\\n          id='checkbox2'\\\\\\\\n          onChange={action('CheckboxField 2 Changed')}\\\\\\\\n          disabled={boolean('disabled', false, 'CheckboxField 2')}\\\\\\\\n          checked={boolean('checked', true, 'CheckboxField 2')}\\\\\\\\n          name={text('name', 'gender', 'CheckboxField 2')}\\\\\\\\n          value={text('value', 'Female', 'CheckboxField 2')}\\\\\\\\n          label={text('label', 'Female', 'CheckboxField 2')}\\\\\\\\n          checkboxSize={\\\\\\\\n            radios('size', radioOptions.size, 'sm') as tCheckboxSize\\\\\\\\n          }\\\\\\\\n        />\\\\\\\\n        <Checkbox\\\\\\\\n          id='checkbox3'\\\\\\\\n          onChange={action('CheckboxField 3 Changed')}\\\\\\\\n          disabled={boolean('disabled', false, 'CheckboxField 3')}\\\\\\\\n          checked={boolean('checked', true, 'CheckboxField 3')}\\\\\\\\n          name={text('name', 'gender', 'CheckboxField 3')}\\\\\\\\n          value={text('value', 'Others', 'CheckboxField 3')}\\\\\\\\n          label={text('label', 'Others', 'CheckboxField 3')}\\\\\\\\n          checkboxSize={\\\\\\\\n            radios('size', radioOptions.size, 'sm') as tCheckboxSize\\\\\\\\n          }\\\\\\\\n          labelColor={text('Label Color', 'black')}\\\\\\\\n        />\\\\\\\\n      </CheckboxFieldGroup>\\\\\\\\n    </Card>\\\\\\\\n  </ThemeWrapper>\\\\\\\\n)\\\\\\\\n\\\\\\\",\\\\\\\"locationsMap\\\\\\\":{}},},\\\\n  title: `${path}/CheckboxFieldGroup`,\\\\n  decorators: [withKnobs],\\\\n  component: CheckboxFieldGroup\\\\n}\\\\n\\\\nconst radioOptions = {\\\\n  size: { sm: 'sm', md: 'md', lg: 'lg' }\\\\n}\\\\n\\\\nexport const withDefault = addSourceDecorator(() => (\\\\n  <ThemeWrapper>\\\\n    <Card>\\\\n      <CheckboxFieldGroup\\\\n        id='defaultCheckboxFieldGroup'\\\\n        orientation={boolean('orientation', false)}\\\\n        spacing={number('spacing', 10)}\\\\n        variant='default'\\\\n        width='400px'\\\\n        label='Gender'\\\\n        labelColor={text('Group Label Color', 'black')}\\\\n      >\\\\n        <Checkbox\\\\n          id='checkbox1'\\\\n          onChange={action('CheckboxField 1 Changed')}\\\\n          disabled={boolean('disabled', false, 'CheckboxField 1')}\\\\n          checked={boolean('checked', true, 'CheckboxField 1')}\\\\n          name={text('name', 'gender', 'CheckboxField 1')}\\\\n          value={text('value', 'Male', 'CheckboxField 1')}\\\\n          label={text('label', 'Male', 'CheckboxField 1')}\\\\n          checkboxSize={\\\\n            radios('size', radioOptions.size, 'sm') as tCheckboxSize\\\\n          }\\\\n          labelColor={text('Label Color', 'black')}\\\\n        />\\\\n        <Checkbox\\\\n          id='checkbox2'\\\\n          onChange={action('CheckboxField 2 Changed')}\\\\n          disabled={boolean('disabled', false, 'CheckboxField 2')}\\\\n          checked={boolean('checked', true, 'CheckboxField 2')}\\\\n          name={text('name', 'gender', 'CheckboxField 2')}\\\\n          value={text('value', 'Female', 'CheckboxField 2')}\\\\n          label={text('label', 'Female', 'CheckboxField 2')}\\\\n          checkboxSize={\\\\n            radios('size', radioOptions.size, 'sm') as tCheckboxSize\\\\n          }\\\\n          labelColor={text('Label Color', 'black')}\\\\n        />\\\\n        <Checkbox\\\\n          id='checkbox3'\\\\n          onChange={action('CheckboxField 3 Changed')}\\\\n          disabled={boolean('disabled', false, 'CheckboxField 3')}\\\\n          checked={boolean('checked', true, 'CheckboxField 3')}\\\\n          name={text('name', 'gender', 'CheckboxField 3')}\\\\n          value={text('value', 'Others', 'CheckboxField 3')}\\\\n          label={text('label', 'Others', 'CheckboxField 3')}\\\\n          checkboxSize={\\\\n            radios('size', radioOptions.size, 'sm') as tCheckboxSize\\\\n          }\\\\n          labelColor={text('Label Color', 'black')}\\\\n        />\\\\n      </CheckboxFieldGroup>\\\\n    </Card>\\\\n  </ThemeWrapper>\\\\n), {__STORY__, __ADDS_MAP__,__MAIN_FILE_LOCATION__,__MODULE_DEPENDENCIES__,__LOCAL_DEPENDENCIES__,__SOURCE_PREFIX__,__IDS_TO_FRAMEWORKS__});\\\\n\\\\nexport const withForm = addSourceDecorator(() => (\\\\n  <ThemeWrapper>\\\\n    <Card>\\\\n      <CheckboxFieldGroup\\\\n        id='CheckboxFieldGroup2'\\\\n        orientation={boolean('orientation', false)}\\\\n        spacing={number('spacing', 10)}\\\\n        variant='form'\\\\n        label='Gender'\\\\n        width={text('width', '50%')}\\\\n        labelColor={text('Group Label Color', 'black')}\\\\n        error={boolean('error', true)}\\\\n        errorMessage={text('errorMessage', 'Some Field Error')}\\\\n        required={boolean('required', false)}\\\\n      >\\\\n        <Checkbox\\\\n          id='checkbox1'\\\\n          onChange={action('CheckboxField 1 Changed')}\\\\n          disabled={boolean('disabled', false, 'CheckboxField 1')}\\\\n          checked={boolean('checked', true, 'CheckboxField 1')}\\\\n          name={text('name', 'gender', 'CheckboxField 1')}\\\\n          value={text('value', 'Male', 'CheckboxField 1')}\\\\n          label={text('label', 'Male', 'CheckboxField 1')}\\\\n          checkboxSize={\\\\n            radios('size', radioOptions.size, 'sm') as tCheckboxSize\\\\n          }\\\\n          labelColor={text('Label Color', 'black')}\\\\n        />\\\\n        <Checkbox\\\\n          id='checkbox2'\\\\n          onChange={action('CheckboxField 2 Changed')}\\\\n          disabled={boolean('disabled', false, 'CheckboxField 2')}\\\\n          checked={boolean('checked', true, 'CheckboxField 2')}\\\\n          name={text('name', 'gender', 'CheckboxField 2')}\\\\n          value={text('value', 'Female', 'CheckboxField 2')}\\\\n          label={text('label', 'Female', 'CheckboxField 2')}\\\\n          checkboxSize={\\\\n            radios('size', radioOptions.size, 'sm') as tCheckboxSize\\\\n          }\\\\n        />\\\\n        <Checkbox\\\\n          id='checkbox3'\\\\n          onChange={action('CheckboxField 3 Changed')}\\\\n          disabled={boolean('disabled', false, 'CheckboxField 3')}\\\\n          checked={boolean('checked', true, 'CheckboxField 3')}\\\\n          name={text('name', 'gender', 'CheckboxField 3')}\\\\n          value={text('value', 'Others', 'CheckboxField 3')}\\\\n          label={text('label', 'Others', 'CheckboxField 3')}\\\\n          checkboxSize={\\\\n            radios('size', radioOptions.size, 'sm') as tCheckboxSize\\\\n          }\\\\n          labelColor={text('Label Color', 'black')}\\\\n        />\\\\n      </CheckboxFieldGroup>\\\\n    </Card>\\\\n  </ThemeWrapper>\\\\n), {__STORY__, __ADDS_MAP__,__MAIN_FILE_LOCATION__,__MODULE_DEPENDENCIES__,__LOCAL_DEPENDENCIES__,__SOURCE_PREFIX__,__IDS_TO_FRAMEWORKS__});\\\";\\n// @ts-ignore\\nvar __ADDS_MAP__ = {};\\n// @ts-ignore\\nvar __MAIN_FILE_LOCATION__ = \\\"/CheckboxFieldGroup.stories.tsx\\\";\\n// @ts-ignore\\nvar __MODULE_DEPENDENCIES__ = [];\\n// @ts-ignore\\nvar __LOCAL_DEPENDENCIES__ = {};\\n// @ts-ignore\\nvar __IDS_TO_FRAMEWORKS__ = {};\\n        \\n\\n\\n// @ts-nocheck\\n// @ts-ignore\\nvar withSourceLoader = require('@storybook/source-loader/preview').withSource;\\n// @ts-ignore\\nvar addSourceDecorator = require(\\\"@storybook/source-loader/preview\\\").addSource;\\n// @ts-ignore\\nvar __SOURCE_PREFIX__ = \\\"/Users/farhanansari/Code/ui-library/src/components/atoms/CheckboxFieldGroup\\\";\\n// @ts-ignore\\nvar __STORY__ = \\\"import React from 'react'\\\\nimport { path } from '..'\\\\nimport CheckboxFieldGroup from '.'\\\\nimport {\\\\n  withKnobs,\\\\n  boolean,\\\\n  radios,\\\\n  number,\\\\n  text\\\\n} from '@storybook/addon-knobs'\\\\nimport { action } from '@storybook/addon-actions'\\\\nimport ThemeWrapper from '../../../utilities/components/ThemeWrapper'\\\\nimport Checkbox, { tCheckboxSize } from '../Checkbox'\\\\n\\\\nimport Card from '../Card'\\\\n\\\\nexport default {\\\\n  title: `${path}/CheckboxFieldGroup`,\\\\n  decorators: [withKnobs],\\\\n  component: CheckboxFieldGroup\\\\n}\\\\n\\\\nconst radioOptions = {\\\\n  size: { sm: 'sm', md: 'md', lg: 'lg' }\\\\n}\\\\n\\\\nexport const withDefault = () => (\\\\n  <ThemeWrapper>\\\\n    <Card>\\\\n      <CheckboxFieldGroup\\\\n        id='defaultCheckboxFieldGroup'\\\\n        orientation={boolean('orientation', false)}\\\\n        spacing={number('spacing', 10)}\\\\n        variant='default'\\\\n        width='400px'\\\\n        label='Gender'\\\\n        labelColor={text('Group Label Color', 'black')}\\\\n      >\\\\n        <Checkbox\\\\n          id='checkbox1'\\\\n          onChange={action('CheckboxField 1 Changed')}\\\\n          disabled={boolean('disabled', false, 'CheckboxField 1')}\\\\n          checked={boolean('checked', true, 'CheckboxField 1')}\\\\n          name={text('name', 'gender', 'CheckboxField 1')}\\\\n          value={text('value', 'Male', 'CheckboxField 1')}\\\\n          label={text('label', 'Male', 'CheckboxField 1')}\\\\n          checkboxSize={\\\\n            radios('size', radioOptions.size, 'sm') as tCheckboxSize\\\\n          }\\\\n          labelColor={text('Label Color', 'black')}\\\\n        />\\\\n        <Checkbox\\\\n          id='checkbox2'\\\\n          onChange={action('CheckboxField 2 Changed')}\\\\n          disabled={boolean('disabled', false, 'CheckboxField 2')}\\\\n          checked={boolean('checked', true, 'CheckboxField 2')}\\\\n          name={text('name', 'gender', 'CheckboxField 2')}\\\\n          value={text('value', 'Female', 'CheckboxField 2')}\\\\n          label={text('label', 'Female', 'CheckboxField 2')}\\\\n          checkboxSize={\\\\n            radios('size', radioOptions.size, 'sm') as tCheckboxSize\\\\n          }\\\\n          labelColor={text('Label Color', 'black')}\\\\n        />\\\\n        <Checkbox\\\\n          id='checkbox3'\\\\n          onChange={action('CheckboxField 3 Changed')}\\\\n          disabled={boolean('disabled', false, 'CheckboxField 3')}\\\\n          checked={boolean('checked', true, 'CheckboxField 3')}\\\\n          name={text('name', 'gender', 'CheckboxField 3')}\\\\n          value={text('value', 'Others', 'CheckboxField 3')}\\\\n          label={text('label', 'Others', 'CheckboxField 3')}\\\\n          checkboxSize={\\\\n            radios('size', radioOptions.size, 'sm') as tCheckboxSize\\\\n          }\\\\n          labelColor={text('Label Color', 'black')}\\\\n        />\\\\n      </CheckboxFieldGroup>\\\\n    </Card>\\\\n  </ThemeWrapper>\\\\n)\\\\n\\\\nexport const withForm = () => (\\\\n  <ThemeWrapper>\\\\n    <Card>\\\\n      <CheckboxFieldGroup\\\\n        id='CheckboxFieldGroup2'\\\\n        orientation={boolean('orientation', false)}\\\\n        spacing={number('spacing', 10)}\\\\n        variant='form'\\\\n        label='Gender'\\\\n        width={text('width', '50%')}\\\\n        labelColor={text('Group Label Color', 'black')}\\\\n        error={boolean('error', true)}\\\\n        errorMessage={text('errorMessage', 'Some Field Error')}\\\\n        required={boolean('required', false)}\\\\n      >\\\\n        <Checkbox\\\\n          id='checkbox1'\\\\n          onChange={action('CheckboxField 1 Changed')}\\\\n          disabled={boolean('disabled', false, 'CheckboxField 1')}\\\\n          checked={boolean('checked', true, 'CheckboxField 1')}\\\\n          name={text('name', 'gender', 'CheckboxField 1')}\\\\n          value={text('value', 'Male', 'CheckboxField 1')}\\\\n          label={text('label', 'Male', 'CheckboxField 1')}\\\\n          checkboxSize={\\\\n            radios('size', radioOptions.size, 'sm') as tCheckboxSize\\\\n          }\\\\n          labelColor={text('Label Color', 'black')}\\\\n        />\\\\n        <Checkbox\\\\n          id='checkbox2'\\\\n          onChange={action('CheckboxField 2 Changed')}\\\\n          disabled={boolean('disabled', false, 'CheckboxField 2')}\\\\n          checked={boolean('checked', true, 'CheckboxField 2')}\\\\n          name={text('name', 'gender', 'CheckboxField 2')}\\\\n          value={text('value', 'Female', 'CheckboxField 2')}\\\\n          label={text('label', 'Female', 'CheckboxField 2')}\\\\n          checkboxSize={\\\\n            radios('size', radioOptions.size, 'sm') as tCheckboxSize\\\\n          }\\\\n        />\\\\n        <Checkbox\\\\n          id='checkbox3'\\\\n          onChange={action('CheckboxField 3 Changed')}\\\\n          disabled={boolean('disabled', false, 'CheckboxField 3')}\\\\n          checked={boolean('checked', true, 'CheckboxField 3')}\\\\n          name={text('name', 'gender', 'CheckboxField 3')}\\\\n          value={text('value', 'Others', 'CheckboxField 3')}\\\\n          label={text('label', 'Others', 'CheckboxField 3')}\\\\n          checkboxSize={\\\\n            radios('size', radioOptions.size, 'sm') as tCheckboxSize\\\\n          }\\\\n          labelColor={text('Label Color', 'black')}\\\\n        />\\\\n      </CheckboxFieldGroup>\\\\n    </Card>\\\\n  </ThemeWrapper>\\\\n)\\\\n\\\";\\n// @ts-ignore\\nvar __ADDS_MAP__ = {};\\n// @ts-ignore\\nvar __MAIN_FILE_LOCATION__ = \\\"/CheckboxFieldGroup.stories.tsx\\\";\\n// @ts-ignore\\nvar __MODULE_DEPENDENCIES__ = [];\\n// @ts-ignore\\nvar __LOCAL_DEPENDENCIES__ = {};\\n// @ts-ignore\\nvar __IDS_TO_FRAMEWORKS__ = {};\\n        \\nimport React from 'react'\\nimport { path } from '..'\\nimport CheckboxFieldGroup from '.'\\nimport {\\n  withKnobs,\\n  boolean,\\n  radios,\\n  number,\\n  text\\n} from '@storybook/addon-knobs'\\nimport { action } from '@storybook/addon-actions'\\nimport ThemeWrapper from '../../../utilities/components/ThemeWrapper'\\nimport Checkbox, { tCheckboxSize } from '../Checkbox'\\n\\nimport Card from '../Card'\\n\\nexport default {parameters: {\\\"storySource\\\":{\\\"source\\\":\\\"\\\\n\\\\n// @ts-nocheck\\\\n// @ts-ignore\\\\nvar withSourceLoader = require('@storybook/source-loader/preview').withSource;\\\\n// @ts-ignore\\\\nvar addSourceDecorator = require(\\\\\\\"@storybook/source-loader/preview\\\\\\\").addSource;\\\\n// @ts-ignore\\\\nvar __SOURCE_PREFIX__ = \\\\\\\"/Users/farhanansari/Code/ui-library/src/components/atoms/CheckboxFieldGroup\\\\\\\";\\\\n// @ts-ignore\\\\nvar __STORY__ = \\\\\\\"import React from 'react'\\\\\\\\nimport { path } from '..'\\\\\\\\nimport CheckboxFieldGroup from '.'\\\\\\\\nimport {\\\\\\\\n  withKnobs,\\\\\\\\n  boolean,\\\\\\\\n  radios,\\\\\\\\n  number,\\\\\\\\n  text\\\\\\\\n} from '@storybook/addon-knobs'\\\\\\\\nimport { action } from '@storybook/addon-actions'\\\\\\\\nimport ThemeWrapper from '../../../utilities/components/ThemeWrapper'\\\\\\\\nimport Checkbox, { tCheckboxSize } from '../Checkbox'\\\\\\\\n\\\\\\\\nimport Card from '../Card'\\\\\\\\n\\\\\\\\nexport default {\\\\\\\\n  title: `${path}/CheckboxFieldGroup`,\\\\\\\\n  decorators: [withKnobs],\\\\\\\\n  component: CheckboxFieldGroup\\\\\\\\n}\\\\\\\\n\\\\\\\\nconst radioOptions = {\\\\\\\\n  size: { sm: 'sm', md: 'md', lg: 'lg' }\\\\\\\\n}\\\\\\\\n\\\\\\\\nexport const withDefault = () => (\\\\\\\\n  <ThemeWrapper>\\\\\\\\n    <Card>\\\\\\\\n      <CheckboxFieldGroup\\\\\\\\n        id='defaultCheckboxFieldGroup'\\\\\\\\n        orientation={boolean('orientation', false)}\\\\\\\\n        spacing={number('spacing', 10)}\\\\\\\\n        variant='default'\\\\\\\\n        width='400px'\\\\\\\\n        label='Gender'\\\\\\\\n        labelColor={text('Group Label Color', 'black')}\\\\\\\\n      >\\\\\\\\n        <Checkbox\\\\\\\\n          id='checkbox1'\\\\\\\\n          onChange={action('CheckboxField 1 Changed')}\\\\\\\\n          disabled={boolean('disabled', false, 'CheckboxField 1')}\\\\\\\\n          checked={boolean('checked', true, 'CheckboxField 1')}\\\\\\\\n          name={text('name', 'gender', 'CheckboxField 1')}\\\\\\\\n          value={text('value', 'Male', 'CheckboxField 1')}\\\\\\\\n          label={text('label', 'Male', 'CheckboxField 1')}\\\\\\\\n          checkboxSize={\\\\\\\\n            radios('size', radioOptions.size, 'sm') as tCheckboxSize\\\\\\\\n          }\\\\\\\\n          labelColor={text('Label Color', 'black')}\\\\\\\\n        />\\\\\\\\n        <Checkbox\\\\\\\\n          id='checkbox2'\\\\\\\\n          onChange={action('CheckboxField 2 Changed')}\\\\\\\\n          disabled={boolean('disabled', false, 'CheckboxField 2')}\\\\\\\\n          checked={boolean('checked', true, 'CheckboxField 2')}\\\\\\\\n          name={text('name', 'gender', 'CheckboxField 2')}\\\\\\\\n          value={text('value', 'Female', 'CheckboxField 2')}\\\\\\\\n          label={text('label', 'Female', 'CheckboxField 2')}\\\\\\\\n          checkboxSize={\\\\\\\\n            radios('size', radioOptions.size, 'sm') as tCheckboxSize\\\\\\\\n          }\\\\\\\\n          labelColor={text('Label Color', 'black')}\\\\\\\\n        />\\\\\\\\n        <Checkbox\\\\\\\\n          id='checkbox3'\\\\\\\\n          onChange={action('CheckboxField 3 Changed')}\\\\\\\\n          disabled={boolean('disabled', false, 'CheckboxField 3')}\\\\\\\\n          checked={boolean('checked', true, 'CheckboxField 3')}\\\\\\\\n          name={text('name', 'gender', 'CheckboxField 3')}\\\\\\\\n          value={text('value', 'Others', 'CheckboxField 3')}\\\\\\\\n          label={text('label', 'Others', 'CheckboxField 3')}\\\\\\\\n          checkboxSize={\\\\\\\\n            radios('size', radioOptions.size, 'sm') as tCheckboxSize\\\\\\\\n          }\\\\\\\\n          labelColor={text('Label Color', 'black')}\\\\\\\\n        />\\\\\\\\n      </CheckboxFieldGroup>\\\\\\\\n    </Card>\\\\\\\\n  </ThemeWrapper>\\\\\\\\n)\\\\\\\\n\\\\\\\\nexport const withForm = () => (\\\\\\\\n  <ThemeWrapper>\\\\\\\\n    <Card>\\\\\\\\n      <CheckboxFieldGroup\\\\\\\\n        id='CheckboxFieldGroup2'\\\\\\\\n        orientation={boolean('orientation', false)}\\\\\\\\n        spacing={number('spacing', 10)}\\\\\\\\n        variant='form'\\\\\\\\n        label='Gender'\\\\\\\\n        width={text('width', '50%')}\\\\\\\\n        labelColor={text('Group Label Color', 'black')}\\\\\\\\n        error={boolean('error', true)}\\\\\\\\n        errorMessage={text('errorMessage', 'Some Field Error')}\\\\\\\\n        required={boolean('required', false)}\\\\\\\\n      >\\\\\\\\n        <Checkbox\\\\\\\\n          id='checkbox1'\\\\\\\\n          onChange={action('CheckboxField 1 Changed')}\\\\\\\\n          disabled={boolean('disabled', false, 'CheckboxField 1')}\\\\\\\\n          checked={boolean('checked', true, 'CheckboxField 1')}\\\\\\\\n          name={text('name', 'gender', 'CheckboxField 1')}\\\\\\\\n          value={text('value', 'Male', 'CheckboxField 1')}\\\\\\\\n          label={text('label', 'Male', 'CheckboxField 1')}\\\\\\\\n          checkboxSize={\\\\\\\\n            radios('size', radioOptions.size, 'sm') as tCheckboxSize\\\\\\\\n          }\\\\\\\\n          labelColor={text('Label Color', 'black')}\\\\\\\\n        />\\\\\\\\n        <Checkbox\\\\\\\\n          id='checkbox2'\\\\\\\\n          onChange={action('CheckboxField 2 Changed')}\\\\\\\\n          disabled={boolean('disabled', false, 'CheckboxField 2')}\\\\\\\\n          checked={boolean('checked', true, 'CheckboxField 2')}\\\\\\\\n          name={text('name', 'gender', 'CheckboxField 2')}\\\\\\\\n          value={text('value', 'Female', 'CheckboxField 2')}\\\\\\\\n          label={text('label', 'Female', 'CheckboxField 2')}\\\\\\\\n          checkboxSize={\\\\\\\\n            radios('size', radioOptions.size, 'sm') as tCheckboxSize\\\\\\\\n          }\\\\\\\\n        />\\\\\\\\n        <Checkbox\\\\\\\\n          id='checkbox3'\\\\\\\\n          onChange={action('CheckboxField 3 Changed')}\\\\\\\\n          disabled={boolean('disabled', false, 'CheckboxField 3')}\\\\\\\\n          checked={boolean('checked', true, 'CheckboxField 3')}\\\\\\\\n          name={text('name', 'gender', 'CheckboxField 3')}\\\\\\\\n          value={text('value', 'Others', 'CheckboxField 3')}\\\\\\\\n          label={text('label', 'Others', 'CheckboxField 3')}\\\\\\\\n          checkboxSize={\\\\\\\\n            radios('size', radioOptions.size, 'sm') as tCheckboxSize\\\\\\\\n          }\\\\\\\\n          labelColor={text('Label Color', 'black')}\\\\\\\\n        />\\\\\\\\n      </CheckboxFieldGroup>\\\\\\\\n    </Card>\\\\\\\\n  </ThemeWrapper>\\\\\\\\n)\\\\\\\\n\\\\\\\";\\\\n// @ts-ignore\\\\nvar __ADDS_MAP__ = {};\\\\n// @ts-ignore\\\\nvar __MAIN_FILE_LOCATION__ = \\\\\\\"/CheckboxFieldGroup.stories.tsx\\\\\\\";\\\\n// @ts-ignore\\\\nvar __MODULE_DEPENDENCIES__ = [];\\\\n// @ts-ignore\\\\nvar __LOCAL_DEPENDENCIES__ = {};\\\\n// @ts-ignore\\\\nvar __IDS_TO_FRAMEWORKS__ = {};\\\\n        \\\\nimport React from 'react'\\\\nimport { path } from '..'\\\\nimport CheckboxFieldGroup from '.'\\\\nimport {\\\\n  withKnobs,\\\\n  boolean,\\\\n  radios,\\\\n  number,\\\\n  text\\\\n} from '@storybook/addon-knobs'\\\\nimport { action } from '@storybook/addon-actions'\\\\nimport ThemeWrapper from '../../../utilities/components/ThemeWrapper'\\\\nimport Checkbox, { tCheckboxSize } from '../Checkbox'\\\\n\\\\nimport Card from '../Card'\\\\n\\\\nexport default {parameters: {\\\\\\\"storySource\\\\\\\":{\\\\\\\"source\\\\\\\":\\\\\\\"import React from 'react'\\\\\\\\nimport { path } from '..'\\\\\\\\nimport CheckboxFieldGroup from '.'\\\\\\\\nimport {\\\\\\\\n  withKnobs,\\\\\\\\n  boolean,\\\\\\\\n  radios,\\\\\\\\n  number,\\\\\\\\n  text\\\\\\\\n} from '@storybook/addon-knobs'\\\\\\\\nimport { action } from '@storybook/addon-actions'\\\\\\\\nimport ThemeWrapper from '../../../utilities/components/ThemeWrapper'\\\\\\\\nimport Checkbox, { tCheckboxSize } from '../Checkbox'\\\\\\\\n\\\\\\\\nimport Card from '../Card'\\\\\\\\n\\\\\\\\nexport default {\\\\\\\\n  title: `${path}/CheckboxFieldGroup`,\\\\\\\\n  decorators: [withKnobs],\\\\\\\\n  component: CheckboxFieldGroup\\\\\\\\n}\\\\\\\\n\\\\\\\\nconst radioOptions = {\\\\\\\\n  size: { sm: 'sm', md: 'md', lg: 'lg' }\\\\\\\\n}\\\\\\\\n\\\\\\\\nexport const withDefault = () => (\\\\\\\\n  <ThemeWrapper>\\\\\\\\n    <Card>\\\\\\\\n      <CheckboxFieldGroup\\\\\\\\n        id='defaultCheckboxFieldGroup'\\\\\\\\n        orientation={boolean('orientation', false)}\\\\\\\\n        spacing={number('spacing', 10)}\\\\\\\\n        variant='default'\\\\\\\\n        width='400px'\\\\\\\\n        label='Gender'\\\\\\\\n        labelColor={text('Group Label Color', 'black')}\\\\\\\\n      >\\\\\\\\n        <Checkbox\\\\\\\\n          id='checkbox1'\\\\\\\\n          onChange={action('CheckboxField 1 Changed')}\\\\\\\\n          disabled={boolean('disabled', false, 'CheckboxField 1')}\\\\\\\\n          checked={boolean('checked', true, 'CheckboxField 1')}\\\\\\\\n          name={text('name', 'gender', 'CheckboxField 1')}\\\\\\\\n          value={text('value', 'Male', 'CheckboxField 1')}\\\\\\\\n          label={text('label', 'Male', 'CheckboxField 1')}\\\\\\\\n          checkboxSize={\\\\\\\\n            radios('size', radioOptions.size, 'sm') as tCheckboxSize\\\\\\\\n          }\\\\\\\\n          labelColor={text('Label Color', 'black')}\\\\\\\\n        />\\\\\\\\n        <Checkbox\\\\\\\\n          id='checkbox2'\\\\\\\\n          onChange={action('CheckboxField 2 Changed')}\\\\\\\\n          disabled={boolean('disabled', false, 'CheckboxField 2')}\\\\\\\\n          checked={boolean('checked', true, 'CheckboxField 2')}\\\\\\\\n          name={text('name', 'gender', 'CheckboxField 2')}\\\\\\\\n          value={text('value', 'Female', 'CheckboxField 2')}\\\\\\\\n          label={text('label', 'Female', 'CheckboxField 2')}\\\\\\\\n          checkboxSize={\\\\\\\\n            radios('size', radioOptions.size, 'sm') as tCheckboxSize\\\\\\\\n          }\\\\\\\\n          labelColor={text('Label Color', 'black')}\\\\\\\\n        />\\\\\\\\n        <Checkbox\\\\\\\\n          id='checkbox3'\\\\\\\\n          onChange={action('CheckboxField 3 Changed')}\\\\\\\\n          disabled={boolean('disabled', false, 'CheckboxField 3')}\\\\\\\\n          checked={boolean('checked', true, 'CheckboxField 3')}\\\\\\\\n          name={text('name', 'gender', 'CheckboxField 3')}\\\\\\\\n          value={text('value', 'Others', 'CheckboxField 3')}\\\\\\\\n          label={text('label', 'Others', 'CheckboxField 3')}\\\\\\\\n          checkboxSize={\\\\\\\\n            radios('size', radioOptions.size, 'sm') as tCheckboxSize\\\\\\\\n          }\\\\\\\\n          labelColor={text('Label Color', 'black')}\\\\\\\\n        />\\\\\\\\n      </CheckboxFieldGroup>\\\\\\\\n    </Card>\\\\\\\\n  </ThemeWrapper>\\\\\\\\n)\\\\\\\\n\\\\\\\\nexport const withForm = () => (\\\\\\\\n  <ThemeWrapper>\\\\\\\\n    <Card>\\\\\\\\n      <CheckboxFieldGroup\\\\\\\\n        id='CheckboxFieldGroup2'\\\\\\\\n        orientation={boolean('orientation', false)}\\\\\\\\n        spacing={number('spacing', 10)}\\\\\\\\n        variant='form'\\\\\\\\n        label='Gender'\\\\\\\\n        width={text('width', '50%')}\\\\\\\\n        labelColor={text('Group Label Color', 'black')}\\\\\\\\n        error={boolean('error', true)}\\\\\\\\n        errorMessage={text('errorMessage', 'Some Field Error')}\\\\\\\\n        required={boolean('required', false)}\\\\\\\\n      >\\\\\\\\n        <Checkbox\\\\\\\\n          id='checkbox1'\\\\\\\\n          onChange={action('CheckboxField 1 Changed')}\\\\\\\\n          disabled={boolean('disabled', false, 'CheckboxField 1')}\\\\\\\\n          checked={boolean('checked', true, 'CheckboxField 1')}\\\\\\\\n          name={text('name', 'gender', 'CheckboxField 1')}\\\\\\\\n          value={text('value', 'Male', 'CheckboxField 1')}\\\\\\\\n          label={text('label', 'Male', 'CheckboxField 1')}\\\\\\\\n          checkboxSize={\\\\\\\\n            radios('size', radioOptions.size, 'sm') as tCheckboxSize\\\\\\\\n          }\\\\\\\\n          labelColor={text('Label Color', 'black')}\\\\\\\\n        />\\\\\\\\n        <Checkbox\\\\\\\\n          id='checkbox2'\\\\\\\\n          onChange={action('CheckboxField 2 Changed')}\\\\\\\\n          disabled={boolean('disabled', false, 'CheckboxField 2')}\\\\\\\\n          checked={boolean('checked', true, 'CheckboxField 2')}\\\\\\\\n          name={text('name', 'gender', 'CheckboxField 2')}\\\\\\\\n          value={text('value', 'Female', 'CheckboxField 2')}\\\\\\\\n          label={text('label', 'Female', 'CheckboxField 2')}\\\\\\\\n          checkboxSize={\\\\\\\\n            radios('size', radioOptions.size, 'sm') as tCheckboxSize\\\\\\\\n          }\\\\\\\\n        />\\\\\\\\n        <Checkbox\\\\\\\\n          id='checkbox3'\\\\\\\\n          onChange={action('CheckboxField 3 Changed')}\\\\\\\\n          disabled={boolean('disabled', false, 'CheckboxField 3')}\\\\\\\\n          checked={boolean('checked', true, 'CheckboxField 3')}\\\\\\\\n          name={text('name', 'gender', 'CheckboxField 3')}\\\\\\\\n          value={text('value', 'Others', 'CheckboxField 3')}\\\\\\\\n          label={text('label', 'Others', 'CheckboxField 3')}\\\\\\\\n          checkboxSize={\\\\\\\\n            radios('size', radioOptions.size, 'sm') as tCheckboxSize\\\\\\\\n          }\\\\\\\\n          labelColor={text('Label Color', 'black')}\\\\\\\\n        />\\\\\\\\n      </CheckboxFieldGroup>\\\\\\\\n    </Card>\\\\\\\\n  </ThemeWrapper>\\\\\\\\n)\\\\\\\\n\\\\\\\",\\\\\\\"locationsMap\\\\\\\":{}},},\\\\n  title: `${path}/CheckboxFieldGroup`,\\\\n  decorators: [withKnobs],\\\\n  component: CheckboxFieldGroup\\\\n}\\\\n\\\\nconst radioOptions = {\\\\n  size: { sm: 'sm', md: 'md', lg: 'lg' }\\\\n}\\\\n\\\\nexport const withDefault = addSourceDecorator(() => (\\\\n  <ThemeWrapper>\\\\n    <Card>\\\\n      <CheckboxFieldGroup\\\\n        id='defaultCheckboxFieldGroup'\\\\n        orientation={boolean('orientation', false)}\\\\n        spacing={number('spacing', 10)}\\\\n        variant='default'\\\\n        width='400px'\\\\n        label='Gender'\\\\n        labelColor={text('Group Label Color', 'black')}\\\\n      >\\\\n        <Checkbox\\\\n          id='checkbox1'\\\\n          onChange={action('CheckboxField 1 Changed')}\\\\n          disabled={boolean('disabled', false, 'CheckboxField 1')}\\\\n          checked={boolean('checked', true, 'CheckboxField 1')}\\\\n          name={text('name', 'gender', 'CheckboxField 1')}\\\\n          value={text('value', 'Male', 'CheckboxField 1')}\\\\n          label={text('label', 'Male', 'CheckboxField 1')}\\\\n          checkboxSize={\\\\n            radios('size', radioOptions.size, 'sm') as tCheckboxSize\\\\n          }\\\\n          labelColor={text('Label Color', 'black')}\\\\n        />\\\\n        <Checkbox\\\\n          id='checkbox2'\\\\n          onChange={action('CheckboxField 2 Changed')}\\\\n          disabled={boolean('disabled', false, 'CheckboxField 2')}\\\\n          checked={boolean('checked', true, 'CheckboxField 2')}\\\\n          name={text('name', 'gender', 'CheckboxField 2')}\\\\n          value={text('value', 'Female', 'CheckboxField 2')}\\\\n          label={text('label', 'Female', 'CheckboxField 2')}\\\\n          checkboxSize={\\\\n            radios('size', radioOptions.size, 'sm') as tCheckboxSize\\\\n          }\\\\n          labelColor={text('Label Color', 'black')}\\\\n        />\\\\n        <Checkbox\\\\n          id='checkbox3'\\\\n          onChange={action('CheckboxField 3 Changed')}\\\\n          disabled={boolean('disabled', false, 'CheckboxField 3')}\\\\n          checked={boolean('checked', true, 'CheckboxField 3')}\\\\n          name={text('name', 'gender', 'CheckboxField 3')}\\\\n          value={text('value', 'Others', 'CheckboxField 3')}\\\\n          label={text('label', 'Others', 'CheckboxField 3')}\\\\n          checkboxSize={\\\\n            radios('size', radioOptions.size, 'sm') as tCheckboxSize\\\\n          }\\\\n          labelColor={text('Label Color', 'black')}\\\\n        />\\\\n      </CheckboxFieldGroup>\\\\n    </Card>\\\\n  </ThemeWrapper>\\\\n), {__STORY__, __ADDS_MAP__,__MAIN_FILE_LOCATION__,__MODULE_DEPENDENCIES__,__LOCAL_DEPENDENCIES__,__SOURCE_PREFIX__,__IDS_TO_FRAMEWORKS__});\\\\n\\\\nexport const withForm = addSourceDecorator(() => (\\\\n  <ThemeWrapper>\\\\n    <Card>\\\\n      <CheckboxFieldGroup\\\\n        id='CheckboxFieldGroup2'\\\\n        orientation={boolean('orientation', false)}\\\\n        spacing={number('spacing', 10)}\\\\n        variant='form'\\\\n        label='Gender'\\\\n        width={text('width', '50%')}\\\\n        labelColor={text('Group Label Color', 'black')}\\\\n        error={boolean('error', true)}\\\\n        errorMessage={text('errorMessage', 'Some Field Error')}\\\\n        required={boolean('required', false)}\\\\n      >\\\\n        <Checkbox\\\\n          id='checkbox1'\\\\n          onChange={action('CheckboxField 1 Changed')}\\\\n          disabled={boolean('disabled', false, 'CheckboxField 1')}\\\\n          checked={boolean('checked', true, 'CheckboxField 1')}\\\\n          name={text('name', 'gender', 'CheckboxField 1')}\\\\n          value={text('value', 'Male', 'CheckboxField 1')}\\\\n          label={text('label', 'Male', 'CheckboxField 1')}\\\\n          checkboxSize={\\\\n            radios('size', radioOptions.size, 'sm') as tCheckboxSize\\\\n          }\\\\n          labelColor={text('Label Color', 'black')}\\\\n        />\\\\n        <Checkbox\\\\n          id='checkbox2'\\\\n          onChange={action('CheckboxField 2 Changed')}\\\\n          disabled={boolean('disabled', false, 'CheckboxField 2')}\\\\n          checked={boolean('checked', true, 'CheckboxField 2')}\\\\n          name={text('name', 'gender', 'CheckboxField 2')}\\\\n          value={text('value', 'Female', 'CheckboxField 2')}\\\\n          label={text('label', 'Female', 'CheckboxField 2')}\\\\n          checkboxSize={\\\\n            radios('size', radioOptions.size, 'sm') as tCheckboxSize\\\\n          }\\\\n        />\\\\n        <Checkbox\\\\n          id='checkbox3'\\\\n          onChange={action('CheckboxField 3 Changed')}\\\\n          disabled={boolean('disabled', false, 'CheckboxField 3')}\\\\n          checked={boolean('checked', true, 'CheckboxField 3')}\\\\n          name={text('name', 'gender', 'CheckboxField 3')}\\\\n          value={text('value', 'Others', 'CheckboxField 3')}\\\\n          label={text('label', 'Others', 'CheckboxField 3')}\\\\n          checkboxSize={\\\\n            radios('size', radioOptions.size, 'sm') as tCheckboxSize\\\\n          }\\\\n          labelColor={text('Label Color', 'black')}\\\\n        />\\\\n      </CheckboxFieldGroup>\\\\n    </Card>\\\\n  </ThemeWrapper>\\\\n), {__STORY__, __ADDS_MAP__,__MAIN_FILE_LOCATION__,__MODULE_DEPENDENCIES__,__LOCAL_DEPENDENCIES__,__SOURCE_PREFIX__,__IDS_TO_FRAMEWORKS__});\\\",\\\"locationsMap\\\":{}},\\\"storySource\\\":{\\\"source\\\":\\\"import React from 'react'\\\\nimport { path } from '..'\\\\nimport CheckboxFieldGroup from '.'\\\\nimport {\\\\n  withKnobs,\\\\n  boolean,\\\\n  radios,\\\\n  number,\\\\n  text\\\\n} from '@storybook/addon-knobs'\\\\nimport { action } from '@storybook/addon-actions'\\\\nimport ThemeWrapper from '../../../utilities/components/ThemeWrapper'\\\\nimport Checkbox, { tCheckboxSize } from '../Checkbox'\\\\n\\\\nimport Card from '../Card'\\\\n\\\\nexport default {\\\\n  title: `${path}/CheckboxFieldGroup`,\\\\n  decorators: [withKnobs],\\\\n  component: CheckboxFieldGroup\\\\n}\\\\n\\\\nconst radioOptions = {\\\\n  size: { sm: 'sm', md: 'md', lg: 'lg' }\\\\n}\\\\n\\\\nexport const withDefault = () => (\\\\n  <ThemeWrapper>\\\\n    <Card>\\\\n      <CheckboxFieldGroup\\\\n        id='defaultCheckboxFieldGroup'\\\\n        orientation={boolean('orientation', false)}\\\\n        spacing={number('spacing', 10)}\\\\n        variant='default'\\\\n        width='400px'\\\\n        label='Gender'\\\\n        labelColor={text('Group Label Color', 'black')}\\\\n      >\\\\n        <Checkbox\\\\n          id='checkbox1'\\\\n          onChange={action('CheckboxField 1 Changed')}\\\\n          disabled={boolean('disabled', false, 'CheckboxField 1')}\\\\n          checked={boolean('checked', true, 'CheckboxField 1')}\\\\n          name={text('name', 'gender', 'CheckboxField 1')}\\\\n          value={text('value', 'Male', 'CheckboxField 1')}\\\\n          label={text('label', 'Male', 'CheckboxField 1')}\\\\n          checkboxSize={\\\\n            radios('size', radioOptions.size, 'sm') as tCheckboxSize\\\\n          }\\\\n          labelColor={text('Label Color', 'black')}\\\\n        />\\\\n        <Checkbox\\\\n          id='checkbox2'\\\\n          onChange={action('CheckboxField 2 Changed')}\\\\n          disabled={boolean('disabled', false, 'CheckboxField 2')}\\\\n          checked={boolean('checked', true, 'CheckboxField 2')}\\\\n          name={text('name', 'gender', 'CheckboxField 2')}\\\\n          value={text('value', 'Female', 'CheckboxField 2')}\\\\n          label={text('label', 'Female', 'CheckboxField 2')}\\\\n          checkboxSize={\\\\n            radios('size', radioOptions.size, 'sm') as tCheckboxSize\\\\n          }\\\\n          labelColor={text('Label Color', 'black')}\\\\n        />\\\\n        <Checkbox\\\\n          id='checkbox3'\\\\n          onChange={action('CheckboxField 3 Changed')}\\\\n          disabled={boolean('disabled', false, 'CheckboxField 3')}\\\\n          checked={boolean('checked', true, 'CheckboxField 3')}\\\\n          name={text('name', 'gender', 'CheckboxField 3')}\\\\n          value={text('value', 'Others', 'CheckboxField 3')}\\\\n          label={text('label', 'Others', 'CheckboxField 3')}\\\\n          checkboxSize={\\\\n            radios('size', radioOptions.size, 'sm') as tCheckboxSize\\\\n          }\\\\n          labelColor={text('Label Color', 'black')}\\\\n        />\\\\n      </CheckboxFieldGroup>\\\\n    </Card>\\\\n  </ThemeWrapper>\\\\n)\\\\n\\\\nexport const withForm = () => (\\\\n  <ThemeWrapper>\\\\n    <Card>\\\\n      <CheckboxFieldGroup\\\\n        id='CheckboxFieldGroup2'\\\\n        orientation={boolean('orientation', false)}\\\\n        spacing={number('spacing', 10)}\\\\n        variant='form'\\\\n        label='Gender'\\\\n        width={text('width', '50%')}\\\\n        labelColor={text('Group Label Color', 'black')}\\\\n        error={boolean('error', true)}\\\\n        errorMessage={text('errorMessage', 'Some Field Error')}\\\\n        required={boolean('required', false)}\\\\n      >\\\\n        <Checkbox\\\\n          id='checkbox1'\\\\n          onChange={action('CheckboxField 1 Changed')}\\\\n          disabled={boolean('disabled', false, 'CheckboxField 1')}\\\\n          checked={boolean('checked', true, 'CheckboxField 1')}\\\\n          name={text('name', 'gender', 'CheckboxField 1')}\\\\n          value={text('value', 'Male', 'CheckboxField 1')}\\\\n          label={text('label', 'Male', 'CheckboxField 1')}\\\\n          checkboxSize={\\\\n            radios('size', radioOptions.size, 'sm') as tCheckboxSize\\\\n          }\\\\n          labelColor={text('Label Color', 'black')}\\\\n        />\\\\n        <Checkbox\\\\n          id='checkbox2'\\\\n          onChange={action('CheckboxField 2 Changed')}\\\\n          disabled={boolean('disabled', false, 'CheckboxField 2')}\\\\n          checked={boolean('checked', true, 'CheckboxField 2')}\\\\n          name={text('name', 'gender', 'CheckboxField 2')}\\\\n          value={text('value', 'Female', 'CheckboxField 2')}\\\\n          label={text('label', 'Female', 'CheckboxField 2')}\\\\n          checkboxSize={\\\\n            radios('size', radioOptions.size, 'sm') as tCheckboxSize\\\\n          }\\\\n        />\\\\n        <Checkbox\\\\n          id='checkbox3'\\\\n          onChange={action('CheckboxField 3 Changed')}\\\\n          disabled={boolean('disabled', false, 'CheckboxField 3')}\\\\n          checked={boolean('checked', true, 'CheckboxField 3')}\\\\n          name={text('name', 'gender', 'CheckboxField 3')}\\\\n          value={text('value', 'Others', 'CheckboxField 3')}\\\\n          label={text('label', 'Others', 'CheckboxField 3')}\\\\n          checkboxSize={\\\\n            radios('size', radioOptions.size, 'sm') as tCheckboxSize\\\\n          }\\\\n          labelColor={text('Label Color', 'black')}\\\\n        />\\\\n      </CheckboxFieldGroup>\\\\n    </Card>\\\\n  </ThemeWrapper>\\\\n)\\\\n\\\",\\\"locationsMap\\\":{}},},\\n  title: `${path}/CheckboxFieldGroup`,\\n  decorators: [withKnobs],\\n  component: CheckboxFieldGroup\\n}\\n\\nconst radioOptions = {\\n  size: { sm: 'sm', md: 'md', lg: 'lg' }\\n}\\n\\nexport const withDefault = addSourceDecorator(addSourceDecorator(() => (\\n  <ThemeWrapper>\\n    <Card>\\n      <CheckboxFieldGroup\\n        id='defaultCheckboxFieldGroup'\\n        orientation={boolean('orientation', false)}\\n        spacing={number('spacing', 10)}\\n        variant='default'\\n        width='400px'\\n        label='Gender'\\n        labelColor={text('Group Label Color', 'black')}\\n      >\\n        <Checkbox\\n          id='checkbox1'\\n          onChange={action('CheckboxField 1 Changed')}\\n          disabled={boolean('disabled', false, 'CheckboxField 1')}\\n          checked={boolean('checked', true, 'CheckboxField 1')}\\n          name={text('name', 'gender', 'CheckboxField 1')}\\n          value={text('value', 'Male', 'CheckboxField 1')}\\n          label={text('label', 'Male', 'CheckboxField 1')}\\n          checkboxSize={\\n            radios('size', radioOptions.size, 'sm') as tCheckboxSize\\n          }\\n          labelColor={text('Label Color', 'black')}\\n        />\\n        <Checkbox\\n          id='checkbox2'\\n          onChange={action('CheckboxField 2 Changed')}\\n          disabled={boolean('disabled', false, 'CheckboxField 2')}\\n          checked={boolean('checked', true, 'CheckboxField 2')}\\n          name={text('name', 'gender', 'CheckboxField 2')}\\n          value={text('value', 'Female', 'CheckboxField 2')}\\n          label={text('label', 'Female', 'CheckboxField 2')}\\n          checkboxSize={\\n            radios('size', radioOptions.size, 'sm') as tCheckboxSize\\n          }\\n          labelColor={text('Label Color', 'black')}\\n        />\\n        <Checkbox\\n          id='checkbox3'\\n          onChange={action('CheckboxField 3 Changed')}\\n          disabled={boolean('disabled', false, 'CheckboxField 3')}\\n          checked={boolean('checked', true, 'CheckboxField 3')}\\n          name={text('name', 'gender', 'CheckboxField 3')}\\n          value={text('value', 'Others', 'CheckboxField 3')}\\n          label={text('label', 'Others', 'CheckboxField 3')}\\n          checkboxSize={\\n            radios('size', radioOptions.size, 'sm') as tCheckboxSize\\n          }\\n          labelColor={text('Label Color', 'black')}\\n        />\\n      </CheckboxFieldGroup>\\n    </Card>\\n  </ThemeWrapper>\\n), {__STORY__, __ADDS_MAP__,__MAIN_FILE_LOCATION__,__MODULE_DEPENDENCIES__,__LOCAL_DEPENDENCIES__,__SOURCE_PREFIX__,__IDS_TO_FRAMEWORKS__}), {__STORY__, __ADDS_MAP__,__MAIN_FILE_LOCATION__,__MODULE_DEPENDENCIES__,__LOCAL_DEPENDENCIES__,__SOURCE_PREFIX__,__IDS_TO_FRAMEWORKS__});;\\n\\nexport const withForm = addSourceDecorator(addSourceDecorator(() => (\\n  <ThemeWrapper>\\n    <Card>\\n      <CheckboxFieldGroup\\n        id='CheckboxFieldGroup2'\\n        orientation={boolean('orientation', false)}\\n        spacing={number('spacing', 10)}\\n        variant='form'\\n        label='Gender'\\n        width={text('width', '50%')}\\n        labelColor={text('Group Label Color', 'black')}\\n        error={boolean('error', true)}\\n        errorMessage={text('errorMessage', 'Some Field Error')}\\n        required={boolean('required', false)}\\n      >\\n        <Checkbox\\n          id='checkbox1'\\n          onChange={action('CheckboxField 1 Changed')}\\n          disabled={boolean('disabled', false, 'CheckboxField 1')}\\n          checked={boolean('checked', true, 'CheckboxField 1')}\\n          name={text('name', 'gender', 'CheckboxField 1')}\\n          value={text('value', 'Male', 'CheckboxField 1')}\\n          label={text('label', 'Male', 'CheckboxField 1')}\\n          checkboxSize={\\n            radios('size', radioOptions.size, 'sm') as tCheckboxSize\\n          }\\n          labelColor={text('Label Color', 'black')}\\n        />\\n        <Checkbox\\n          id='checkbox2'\\n          onChange={action('CheckboxField 2 Changed')}\\n          disabled={boolean('disabled', false, 'CheckboxField 2')}\\n          checked={boolean('checked', true, 'CheckboxField 2')}\\n          name={text('name', 'gender', 'CheckboxField 2')}\\n          value={text('value', 'Female', 'CheckboxField 2')}\\n          label={text('label', 'Female', 'CheckboxField 2')}\\n          checkboxSize={\\n            radios('size', radioOptions.size, 'sm') as tCheckboxSize\\n          }\\n        />\\n        <Checkbox\\n          id='checkbox3'\\n          onChange={action('CheckboxField 3 Changed')}\\n          disabled={boolean('disabled', false, 'CheckboxField 3')}\\n          checked={boolean('checked', true, 'CheckboxField 3')}\\n          name={text('name', 'gender', 'CheckboxField 3')}\\n          value={text('value', 'Others', 'CheckboxField 3')}\\n          label={text('label', 'Others', 'CheckboxField 3')}\\n          checkboxSize={\\n            radios('size', radioOptions.size, 'sm') as tCheckboxSize\\n          }\\n          labelColor={text('Label Color', 'black')}\\n        />\\n      </CheckboxFieldGroup>\\n    </Card>\\n  </ThemeWrapper>\\n), {__STORY__, __ADDS_MAP__,__MAIN_FILE_LOCATION__,__MODULE_DEPENDENCIES__,__LOCAL_DEPENDENCIES__,__SOURCE_PREFIX__,__IDS_TO_FRAMEWORKS__}), {__STORY__, __ADDS_MAP__,__MAIN_FILE_LOCATION__,__MODULE_DEPENDENCIES__,__LOCAL_DEPENDENCIES__,__SOURCE_PREFIX__,__IDS_TO_FRAMEWORKS__});\",\"locationsMap\":{}},\"storySource\":{\"source\":\"\\n\\n// @ts-nocheck\\n// @ts-ignore\\nvar withSourceLoader = require('@storybook/source-loader/preview').withSource;\\n// @ts-ignore\\nvar addSourceDecorator = require(\\\"@storybook/source-loader/preview\\\").addSource;\\n// @ts-ignore\\nvar __SOURCE_PREFIX__ = \\\"/Users/farhanansari/Code/ui-library/src/components/atoms/CheckboxFieldGroup\\\";\\n// @ts-ignore\\nvar __STORY__ = \\\"import React from 'react'\\\\nimport { path } from '..'\\\\nimport CheckboxFieldGroup from '.'\\\\nimport {\\\\n  withKnobs,\\\\n  boolean,\\\\n  radios,\\\\n  number,\\\\n  text\\\\n} from '@storybook/addon-knobs'\\\\nimport { action } from '@storybook/addon-actions'\\\\nimport ThemeWrapper from '../../../utilities/components/ThemeWrapper'\\\\nimport Checkbox, { tCheckboxSize } from '../Checkbox'\\\\n\\\\nimport Card from '../Card'\\\\n\\\\nexport default {\\\\n  title: `${path}/CheckboxFieldGroup`,\\\\n  decorators: [withKnobs],\\\\n  component: CheckboxFieldGroup\\\\n}\\\\n\\\\nconst radioOptions = {\\\\n  size: { sm: 'sm', md: 'md', lg: 'lg' }\\\\n}\\\\n\\\\nexport const withDefault = () => (\\\\n  <ThemeWrapper>\\\\n    <Card>\\\\n      <CheckboxFieldGroup\\\\n        id='defaultCheckboxFieldGroup'\\\\n        orientation={boolean('orientation', false)}\\\\n        spacing={number('spacing', 10)}\\\\n        variant='default'\\\\n        width='400px'\\\\n        label='Gender'\\\\n        labelColor={text('Group Label Color', 'black')}\\\\n      >\\\\n        <Checkbox\\\\n          id='checkbox1'\\\\n          onChange={action('CheckboxField 1 Changed')}\\\\n          disabled={boolean('disabled', false, 'CheckboxField 1')}\\\\n          checked={boolean('checked', true, 'CheckboxField 1')}\\\\n          name={text('name', 'gender', 'CheckboxField 1')}\\\\n          value={text('value', 'Male', 'CheckboxField 1')}\\\\n          label={text('label', 'Male', 'CheckboxField 1')}\\\\n          checkboxSize={\\\\n            radios('size', radioOptions.size, 'sm') as tCheckboxSize\\\\n          }\\\\n          labelColor={text('Label Color', 'black')}\\\\n        />\\\\n        <Checkbox\\\\n          id='checkbox2'\\\\n          onChange={action('CheckboxField 2 Changed')}\\\\n          disabled={boolean('disabled', false, 'CheckboxField 2')}\\\\n          checked={boolean('checked', true, 'CheckboxField 2')}\\\\n          name={text('name', 'gender', 'CheckboxField 2')}\\\\n          value={text('value', 'Female', 'CheckboxField 2')}\\\\n          label={text('label', 'Female', 'CheckboxField 2')}\\\\n          checkboxSize={\\\\n            radios('size', radioOptions.size, 'sm') as tCheckboxSize\\\\n          }\\\\n          labelColor={text('Label Color', 'black')}\\\\n        />\\\\n        <Checkbox\\\\n          id='checkbox3'\\\\n          onChange={action('CheckboxField 3 Changed')}\\\\n          disabled={boolean('disabled', false, 'CheckboxField 3')}\\\\n          checked={boolean('checked', true, 'CheckboxField 3')}\\\\n          name={text('name', 'gender', 'CheckboxField 3')}\\\\n          value={text('value', 'Others', 'CheckboxField 3')}\\\\n          label={text('label', 'Others', 'CheckboxField 3')}\\\\n          checkboxSize={\\\\n            radios('size', radioOptions.size, 'sm') as tCheckboxSize\\\\n          }\\\\n          labelColor={text('Label Color', 'black')}\\\\n        />\\\\n      </CheckboxFieldGroup>\\\\n    </Card>\\\\n  </ThemeWrapper>\\\\n)\\\\n\\\\nexport const withForm = () => (\\\\n  <ThemeWrapper>\\\\n    <Card>\\\\n      <CheckboxFieldGroup\\\\n        id='CheckboxFieldGroup2'\\\\n        orientation={boolean('orientation', false)}\\\\n        spacing={number('spacing', 10)}\\\\n        variant='form'\\\\n        label='Gender'\\\\n        width={text('width', '50%')}\\\\n        labelColor={text('Group Label Color', 'black')}\\\\n        error={boolean('error', true)}\\\\n        errorMessage={text('errorMessage', 'Some Field Error')}\\\\n        required={boolean('required', false)}\\\\n      >\\\\n        <Checkbox\\\\n          id='checkbox1'\\\\n          onChange={action('CheckboxField 1 Changed')}\\\\n          disabled={boolean('disabled', false, 'CheckboxField 1')}\\\\n          checked={boolean('checked', true, 'CheckboxField 1')}\\\\n          name={text('name', 'gender', 'CheckboxField 1')}\\\\n          value={text('value', 'Male', 'CheckboxField 1')}\\\\n          label={text('label', 'Male', 'CheckboxField 1')}\\\\n          checkboxSize={\\\\n            radios('size', radioOptions.size, 'sm') as tCheckboxSize\\\\n          }\\\\n          labelColor={text('Label Color', 'black')}\\\\n        />\\\\n        <Checkbox\\\\n          id='checkbox2'\\\\n          onChange={action('CheckboxField 2 Changed')}\\\\n          disabled={boolean('disabled', false, 'CheckboxField 2')}\\\\n          checked={boolean('checked', true, 'CheckboxField 2')}\\\\n          name={text('name', 'gender', 'CheckboxField 2')}\\\\n          value={text('value', 'Female', 'CheckboxField 2')}\\\\n          label={text('label', 'Female', 'CheckboxField 2')}\\\\n          checkboxSize={\\\\n            radios('size', radioOptions.size, 'sm') as tCheckboxSize\\\\n          }\\\\n        />\\\\n        <Checkbox\\\\n          id='checkbox3'\\\\n          onChange={action('CheckboxField 3 Changed')}\\\\n          disabled={boolean('disabled', false, 'CheckboxField 3')}\\\\n          checked={boolean('checked', true, 'CheckboxField 3')}\\\\n          name={text('name', 'gender', 'CheckboxField 3')}\\\\n          value={text('value', 'Others', 'CheckboxField 3')}\\\\n          label={text('label', 'Others', 'CheckboxField 3')}\\\\n          checkboxSize={\\\\n            radios('size', radioOptions.size, 'sm') as tCheckboxSize\\\\n          }\\\\n          labelColor={text('Label Color', 'black')}\\\\n        />\\\\n      </CheckboxFieldGroup>\\\\n    </Card>\\\\n  </ThemeWrapper>\\\\n)\\\\n\\\";\\n// @ts-ignore\\nvar __ADDS_MAP__ = {};\\n// @ts-ignore\\nvar __MAIN_FILE_LOCATION__ = \\\"/CheckboxFieldGroup.stories.tsx\\\";\\n// @ts-ignore\\nvar __MODULE_DEPENDENCIES__ = [];\\n// @ts-ignore\\nvar __LOCAL_DEPENDENCIES__ = {};\\n// @ts-ignore\\nvar __IDS_TO_FRAMEWORKS__ = {};\\n        \\nimport React from 'react'\\nimport { path } from '..'\\nimport CheckboxFieldGroup from '.'\\nimport {\\n  withKnobs,\\n  boolean,\\n  radios,\\n  number,\\n  text\\n} from '@storybook/addon-knobs'\\nimport { action } from '@storybook/addon-actions'\\nimport ThemeWrapper from '../../../utilities/components/ThemeWrapper'\\nimport Checkbox, { tCheckboxSize } from '../Checkbox'\\n\\nimport Card from '../Card'\\n\\nexport default {parameters: {\\\"storySource\\\":{\\\"source\\\":\\\"import React from 'react'\\\\nimport { path } from '..'\\\\nimport CheckboxFieldGroup from '.'\\\\nimport {\\\\n  withKnobs,\\\\n  boolean,\\\\n  radios,\\\\n  number,\\\\n  text\\\\n} from '@storybook/addon-knobs'\\\\nimport { action } from '@storybook/addon-actions'\\\\nimport ThemeWrapper from '../../../utilities/components/ThemeWrapper'\\\\nimport Checkbox, { tCheckboxSize } from '../Checkbox'\\\\n\\\\nimport Card from '../Card'\\\\n\\\\nexport default {\\\\n  title: `${path}/CheckboxFieldGroup`,\\\\n  decorators: [withKnobs],\\\\n  component: CheckboxFieldGroup\\\\n}\\\\n\\\\nconst radioOptions = {\\\\n  size: { sm: 'sm', md: 'md', lg: 'lg' }\\\\n}\\\\n\\\\nexport const withDefault = () => (\\\\n  <ThemeWrapper>\\\\n    <Card>\\\\n      <CheckboxFieldGroup\\\\n        id='defaultCheckboxFieldGroup'\\\\n        orientation={boolean('orientation', false)}\\\\n        spacing={number('spacing', 10)}\\\\n        variant='default'\\\\n        width='400px'\\\\n        label='Gender'\\\\n        labelColor={text('Group Label Color', 'black')}\\\\n      >\\\\n        <Checkbox\\\\n          id='checkbox1'\\\\n          onChange={action('CheckboxField 1 Changed')}\\\\n          disabled={boolean('disabled', false, 'CheckboxField 1')}\\\\n          checked={boolean('checked', true, 'CheckboxField 1')}\\\\n          name={text('name', 'gender', 'CheckboxField 1')}\\\\n          value={text('value', 'Male', 'CheckboxField 1')}\\\\n          label={text('label', 'Male', 'CheckboxField 1')}\\\\n          checkboxSize={\\\\n            radios('size', radioOptions.size, 'sm') as tCheckboxSize\\\\n          }\\\\n          labelColor={text('Label Color', 'black')}\\\\n        />\\\\n        <Checkbox\\\\n          id='checkbox2'\\\\n          onChange={action('CheckboxField 2 Changed')}\\\\n          disabled={boolean('disabled', false, 'CheckboxField 2')}\\\\n          checked={boolean('checked', true, 'CheckboxField 2')}\\\\n          name={text('name', 'gender', 'CheckboxField 2')}\\\\n          value={text('value', 'Female', 'CheckboxField 2')}\\\\n          label={text('label', 'Female', 'CheckboxField 2')}\\\\n          checkboxSize={\\\\n            radios('size', radioOptions.size, 'sm') as tCheckboxSize\\\\n          }\\\\n          labelColor={text('Label Color', 'black')}\\\\n        />\\\\n        <Checkbox\\\\n          id='checkbox3'\\\\n          onChange={action('CheckboxField 3 Changed')}\\\\n          disabled={boolean('disabled', false, 'CheckboxField 3')}\\\\n          checked={boolean('checked', true, 'CheckboxField 3')}\\\\n          name={text('name', 'gender', 'CheckboxField 3')}\\\\n          value={text('value', 'Others', 'CheckboxField 3')}\\\\n          label={text('label', 'Others', 'CheckboxField 3')}\\\\n          checkboxSize={\\\\n            radios('size', radioOptions.size, 'sm') as tCheckboxSize\\\\n          }\\\\n          labelColor={text('Label Color', 'black')}\\\\n        />\\\\n      </CheckboxFieldGroup>\\\\n    </Card>\\\\n  </ThemeWrapper>\\\\n)\\\\n\\\\nexport const withForm = () => (\\\\n  <ThemeWrapper>\\\\n    <Card>\\\\n      <CheckboxFieldGroup\\\\n        id='CheckboxFieldGroup2'\\\\n        orientation={boolean('orientation', false)}\\\\n        spacing={number('spacing', 10)}\\\\n        variant='form'\\\\n        label='Gender'\\\\n        width={text('width', '50%')}\\\\n        labelColor={text('Group Label Color', 'black')}\\\\n        error={boolean('error', true)}\\\\n        errorMessage={text('errorMessage', 'Some Field Error')}\\\\n        required={boolean('required', false)}\\\\n      >\\\\n        <Checkbox\\\\n          id='checkbox1'\\\\n          onChange={action('CheckboxField 1 Changed')}\\\\n          disabled={boolean('disabled', false, 'CheckboxField 1')}\\\\n          checked={boolean('checked', true, 'CheckboxField 1')}\\\\n          name={text('name', 'gender', 'CheckboxField 1')}\\\\n          value={text('value', 'Male', 'CheckboxField 1')}\\\\n          label={text('label', 'Male', 'CheckboxField 1')}\\\\n          checkboxSize={\\\\n            radios('size', radioOptions.size, 'sm') as tCheckboxSize\\\\n          }\\\\n          labelColor={text('Label Color', 'black')}\\\\n        />\\\\n        <Checkbox\\\\n          id='checkbox2'\\\\n          onChange={action('CheckboxField 2 Changed')}\\\\n          disabled={boolean('disabled', false, 'CheckboxField 2')}\\\\n          checked={boolean('checked', true, 'CheckboxField 2')}\\\\n          name={text('name', 'gender', 'CheckboxField 2')}\\\\n          value={text('value', 'Female', 'CheckboxField 2')}\\\\n          label={text('label', 'Female', 'CheckboxField 2')}\\\\n          checkboxSize={\\\\n            radios('size', radioOptions.size, 'sm') as tCheckboxSize\\\\n          }\\\\n        />\\\\n        <Checkbox\\\\n          id='checkbox3'\\\\n          onChange={action('CheckboxField 3 Changed')}\\\\n          disabled={boolean('disabled', false, 'CheckboxField 3')}\\\\n          checked={boolean('checked', true, 'CheckboxField 3')}\\\\n          name={text('name', 'gender', 'CheckboxField 3')}\\\\n          value={text('value', 'Others', 'CheckboxField 3')}\\\\n          label={text('label', 'Others', 'CheckboxField 3')}\\\\n          checkboxSize={\\\\n            radios('size', radioOptions.size, 'sm') as tCheckboxSize\\\\n          }\\\\n          labelColor={text('Label Color', 'black')}\\\\n        />\\\\n      </CheckboxFieldGroup>\\\\n    </Card>\\\\n  </ThemeWrapper>\\\\n)\\\\n\\\",\\\"locationsMap\\\":{}},},\\n  title: `${path}/CheckboxFieldGroup`,\\n  decorators: [withKnobs],\\n  component: CheckboxFieldGroup\\n}\\n\\nconst radioOptions = {\\n  size: { sm: 'sm', md: 'md', lg: 'lg' }\\n}\\n\\nexport const withDefault = addSourceDecorator(() => (\\n  <ThemeWrapper>\\n    <Card>\\n      <CheckboxFieldGroup\\n        id='defaultCheckboxFieldGroup'\\n        orientation={boolean('orientation', false)}\\n        spacing={number('spacing', 10)}\\n        variant='default'\\n        width='400px'\\n        label='Gender'\\n        labelColor={text('Group Label Color', 'black')}\\n      >\\n        <Checkbox\\n          id='checkbox1'\\n          onChange={action('CheckboxField 1 Changed')}\\n          disabled={boolean('disabled', false, 'CheckboxField 1')}\\n          checked={boolean('checked', true, 'CheckboxField 1')}\\n          name={text('name', 'gender', 'CheckboxField 1')}\\n          value={text('value', 'Male', 'CheckboxField 1')}\\n          label={text('label', 'Male', 'CheckboxField 1')}\\n          checkboxSize={\\n            radios('size', radioOptions.size, 'sm') as tCheckboxSize\\n          }\\n          labelColor={text('Label Color', 'black')}\\n        />\\n        <Checkbox\\n          id='checkbox2'\\n          onChange={action('CheckboxField 2 Changed')}\\n          disabled={boolean('disabled', false, 'CheckboxField 2')}\\n          checked={boolean('checked', true, 'CheckboxField 2')}\\n          name={text('name', 'gender', 'CheckboxField 2')}\\n          value={text('value', 'Female', 'CheckboxField 2')}\\n          label={text('label', 'Female', 'CheckboxField 2')}\\n          checkboxSize={\\n            radios('size', radioOptions.size, 'sm') as tCheckboxSize\\n          }\\n          labelColor={text('Label Color', 'black')}\\n        />\\n        <Checkbox\\n          id='checkbox3'\\n          onChange={action('CheckboxField 3 Changed')}\\n          disabled={boolean('disabled', false, 'CheckboxField 3')}\\n          checked={boolean('checked', true, 'CheckboxField 3')}\\n          name={text('name', 'gender', 'CheckboxField 3')}\\n          value={text('value', 'Others', 'CheckboxField 3')}\\n          label={text('label', 'Others', 'CheckboxField 3')}\\n          checkboxSize={\\n            radios('size', radioOptions.size, 'sm') as tCheckboxSize\\n          }\\n          labelColor={text('Label Color', 'black')}\\n        />\\n      </CheckboxFieldGroup>\\n    </Card>\\n  </ThemeWrapper>\\n), {__STORY__, __ADDS_MAP__,__MAIN_FILE_LOCATION__,__MODULE_DEPENDENCIES__,__LOCAL_DEPENDENCIES__,__SOURCE_PREFIX__,__IDS_TO_FRAMEWORKS__});\\n\\nexport const withForm = addSourceDecorator(() => (\\n  <ThemeWrapper>\\n    <Card>\\n      <CheckboxFieldGroup\\n        id='CheckboxFieldGroup2'\\n        orientation={boolean('orientation', false)}\\n        spacing={number('spacing', 10)}\\n        variant='form'\\n        label='Gender'\\n        width={text('width', '50%')}\\n        labelColor={text('Group Label Color', 'black')}\\n        error={boolean('error', true)}\\n        errorMessage={text('errorMessage', 'Some Field Error')}\\n        required={boolean('required', false)}\\n      >\\n        <Checkbox\\n          id='checkbox1'\\n          onChange={action('CheckboxField 1 Changed')}\\n          disabled={boolean('disabled', false, 'CheckboxField 1')}\\n          checked={boolean('checked', true, 'CheckboxField 1')}\\n          name={text('name', 'gender', 'CheckboxField 1')}\\n          value={text('value', 'Male', 'CheckboxField 1')}\\n          label={text('label', 'Male', 'CheckboxField 1')}\\n          checkboxSize={\\n            radios('size', radioOptions.size, 'sm') as tCheckboxSize\\n          }\\n          labelColor={text('Label Color', 'black')}\\n        />\\n        <Checkbox\\n          id='checkbox2'\\n          onChange={action('CheckboxField 2 Changed')}\\n          disabled={boolean('disabled', false, 'CheckboxField 2')}\\n          checked={boolean('checked', true, 'CheckboxField 2')}\\n          name={text('name', 'gender', 'CheckboxField 2')}\\n          value={text('value', 'Female', 'CheckboxField 2')}\\n          label={text('label', 'Female', 'CheckboxField 2')}\\n          checkboxSize={\\n            radios('size', radioOptions.size, 'sm') as tCheckboxSize\\n          }\\n        />\\n        <Checkbox\\n          id='checkbox3'\\n          onChange={action('CheckboxField 3 Changed')}\\n          disabled={boolean('disabled', false, 'CheckboxField 3')}\\n          checked={boolean('checked', true, 'CheckboxField 3')}\\n          name={text('name', 'gender', 'CheckboxField 3')}\\n          value={text('value', 'Others', 'CheckboxField 3')}\\n          label={text('label', 'Others', 'CheckboxField 3')}\\n          checkboxSize={\\n            radios('size', radioOptions.size, 'sm') as tCheckboxSize\\n          }\\n          labelColor={text('Label Color', 'black')}\\n        />\\n      </CheckboxFieldGroup>\\n    </Card>\\n  </ThemeWrapper>\\n), {__STORY__, __ADDS_MAP__,__MAIN_FILE_LOCATION__,__MODULE_DEPENDENCIES__,__LOCAL_DEPENDENCIES__,__SOURCE_PREFIX__,__IDS_TO_FRAMEWORKS__});\",\"locationsMap\":{}},\"storySource\":{\"source\":\"import React from 'react'\\nimport { path } from '..'\\nimport CheckboxFieldGroup from '.'\\nimport {\\n  withKnobs,\\n  boolean,\\n  radios,\\n  number,\\n  text\\n} from '@storybook/addon-knobs'\\nimport { action } from '@storybook/addon-actions'\\nimport ThemeWrapper from '../../../utilities/components/ThemeWrapper'\\nimport Checkbox, { tCheckboxSize } from '../Checkbox'\\n\\nimport Card from '../Card'\\n\\nexport default {\\n  title: `${path}/CheckboxFieldGroup`,\\n  decorators: [withKnobs],\\n  component: CheckboxFieldGroup\\n}\\n\\nconst radioOptions = {\\n  size: { sm: 'sm', md: 'md', lg: 'lg' }\\n}\\n\\nexport const withDefault = () => (\\n  <ThemeWrapper>\\n    <Card>\\n      <CheckboxFieldGroup\\n        id='defaultCheckboxFieldGroup'\\n        orientation={boolean('orientation', false)}\\n        spacing={number('spacing', 10)}\\n        variant='default'\\n        width='400px'\\n        label='Gender'\\n        labelColor={text('Group Label Color', 'black')}\\n      >\\n        <Checkbox\\n          id='checkbox1'\\n          onChange={action('CheckboxField 1 Changed')}\\n          disabled={boolean('disabled', false, 'CheckboxField 1')}\\n          checked={boolean('checked', true, 'CheckboxField 1')}\\n          name={text('name', 'gender', 'CheckboxField 1')}\\n          value={text('value', 'Male', 'CheckboxField 1')}\\n          label={text('label', 'Male', 'CheckboxField 1')}\\n          checkboxSize={\\n            radios('size', radioOptions.size, 'sm') as tCheckboxSize\\n          }\\n          labelColor={text('Label Color', 'black')}\\n        />\\n        <Checkbox\\n          id='checkbox2'\\n          onChange={action('CheckboxField 2 Changed')}\\n          disabled={boolean('disabled', false, 'CheckboxField 2')}\\n          checked={boolean('checked', true, 'CheckboxField 2')}\\n          name={text('name', 'gender', 'CheckboxField 2')}\\n          value={text('value', 'Female', 'CheckboxField 2')}\\n          label={text('label', 'Female', 'CheckboxField 2')}\\n          checkboxSize={\\n            radios('size', radioOptions.size, 'sm') as tCheckboxSize\\n          }\\n          labelColor={text('Label Color', 'black')}\\n        />\\n        <Checkbox\\n          id='checkbox3'\\n          onChange={action('CheckboxField 3 Changed')}\\n          disabled={boolean('disabled', false, 'CheckboxField 3')}\\n          checked={boolean('checked', true, 'CheckboxField 3')}\\n          name={text('name', 'gender', 'CheckboxField 3')}\\n          value={text('value', 'Others', 'CheckboxField 3')}\\n          label={text('label', 'Others', 'CheckboxField 3')}\\n          checkboxSize={\\n            radios('size', radioOptions.size, 'sm') as tCheckboxSize\\n          }\\n          labelColor={text('Label Color', 'black')}\\n        />\\n      </CheckboxFieldGroup>\\n    </Card>\\n  </ThemeWrapper>\\n)\\n\\nexport const withForm = () => (\\n  <ThemeWrapper>\\n    <Card>\\n      <CheckboxFieldGroup\\n        id='CheckboxFieldGroup2'\\n        orientation={boolean('orientation', false)}\\n        spacing={number('spacing', 10)}\\n        variant='form'\\n        label='Gender'\\n        width={text('width', '50%')}\\n        labelColor={text('Group Label Color', 'black')}\\n        error={boolean('error', true)}\\n        errorMessage={text('errorMessage', 'Some Field Error')}\\n        required={boolean('required', false)}\\n      >\\n        <Checkbox\\n          id='checkbox1'\\n          onChange={action('CheckboxField 1 Changed')}\\n          disabled={boolean('disabled', false, 'CheckboxField 1')}\\n          checked={boolean('checked', true, 'CheckboxField 1')}\\n          name={text('name', 'gender', 'CheckboxField 1')}\\n          value={text('value', 'Male', 'CheckboxField 1')}\\n          label={text('label', 'Male', 'CheckboxField 1')}\\n          checkboxSize={\\n            radios('size', radioOptions.size, 'sm') as tCheckboxSize\\n          }\\n          labelColor={text('Label Color', 'black')}\\n        />\\n        <Checkbox\\n          id='checkbox2'\\n          onChange={action('CheckboxField 2 Changed')}\\n          disabled={boolean('disabled', false, 'CheckboxField 2')}\\n          checked={boolean('checked', true, 'CheckboxField 2')}\\n          name={text('name', 'gender', 'CheckboxField 2')}\\n          value={text('value', 'Female', 'CheckboxField 2')}\\n          label={text('label', 'Female', 'CheckboxField 2')}\\n          checkboxSize={\\n            radios('size', radioOptions.size, 'sm') as tCheckboxSize\\n          }\\n        />\\n        <Checkbox\\n          id='checkbox3'\\n          onChange={action('CheckboxField 3 Changed')}\\n          disabled={boolean('disabled', false, 'CheckboxField 3')}\\n          checked={boolean('checked', true, 'CheckboxField 3')}\\n          name={text('name', 'gender', 'CheckboxField 3')}\\n          value={text('value', 'Others', 'CheckboxField 3')}\\n          label={text('label', 'Others', 'CheckboxField 3')}\\n          checkboxSize={\\n            radios('size', radioOptions.size, 'sm') as tCheckboxSize\\n          }\\n          labelColor={text('Label Color', 'black')}\\n        />\\n      </CheckboxFieldGroup>\\n    </Card>\\n  </ThemeWrapper>\\n)\\n\",\"locationsMap\":{}},},\n  title: `${path}/CheckboxFieldGroup`,\n  decorators: [withKnobs],\n  component: CheckboxFieldGroup\n}\n\nconst radioOptions = {\n  size: { sm: 'sm', md: 'md', lg: 'lg' }\n}\n\nexport const withDefault = addSourceDecorator(addSourceDecorator(addSourceDecorator(() => (\n  <ThemeWrapper>\n    <Card>\n      <CheckboxFieldGroup\n        id='defaultCheckboxFieldGroup'\n        orientation={boolean('orientation', false)}\n        spacing={number('spacing', 10)}\n        variant='default'\n        width='400px'\n        label='Gender'\n        labelColor={text('Group Label Color', 'black')}\n      >\n        <Checkbox\n          id='checkbox1'\n          onChange={action('CheckboxField 1 Changed')}\n          disabled={boolean('disabled', false, 'CheckboxField 1')}\n          checked={boolean('checked', true, 'CheckboxField 1')}\n          name={text('name', 'gender', 'CheckboxField 1')}\n          value={text('value', 'Male', 'CheckboxField 1')}\n          label={text('label', 'Male', 'CheckboxField 1')}\n          checkboxSize={\n            radios('size', radioOptions.size, 'sm') as tCheckboxSize\n          }\n          labelColor={text('Label Color', 'black')}\n        />\n        <Checkbox\n          id='checkbox2'\n          onChange={action('CheckboxField 2 Changed')}\n          disabled={boolean('disabled', false, 'CheckboxField 2')}\n          checked={boolean('checked', true, 'CheckboxField 2')}\n          name={text('name', 'gender', 'CheckboxField 2')}\n          value={text('value', 'Female', 'CheckboxField 2')}\n          label={text('label', 'Female', 'CheckboxField 2')}\n          checkboxSize={\n            radios('size', radioOptions.size, 'sm') as tCheckboxSize\n          }\n          labelColor={text('Label Color', 'black')}\n        />\n        <Checkbox\n          id='checkbox3'\n          onChange={action('CheckboxField 3 Changed')}\n          disabled={boolean('disabled', false, 'CheckboxField 3')}\n          checked={boolean('checked', true, 'CheckboxField 3')}\n          name={text('name', 'gender', 'CheckboxField 3')}\n          value={text('value', 'Others', 'CheckboxField 3')}\n          label={text('label', 'Others', 'CheckboxField 3')}\n          checkboxSize={\n            radios('size', radioOptions.size, 'sm') as tCheckboxSize\n          }\n          labelColor={text('Label Color', 'black')}\n        />\n      </CheckboxFieldGroup>\n    </Card>\n  </ThemeWrapper>\n), {__STORY__, __ADDS_MAP__,__MAIN_FILE_LOCATION__,__MODULE_DEPENDENCIES__,__LOCAL_DEPENDENCIES__,__SOURCE_PREFIX__,__IDS_TO_FRAMEWORKS__}), {__STORY__, __ADDS_MAP__,__MAIN_FILE_LOCATION__,__MODULE_DEPENDENCIES__,__LOCAL_DEPENDENCIES__,__SOURCE_PREFIX__,__IDS_TO_FRAMEWORKS__}), {__STORY__, __ADDS_MAP__,__MAIN_FILE_LOCATION__,__MODULE_DEPENDENCIES__,__LOCAL_DEPENDENCIES__,__SOURCE_PREFIX__,__IDS_TO_FRAMEWORKS__});;;\n\nexport const withForm = addSourceDecorator(addSourceDecorator(addSourceDecorator(() => (\n  <ThemeWrapper>\n    <Card>\n      <CheckboxFieldGroup\n        id='CheckboxFieldGroup2'\n        orientation={boolean('orientation', false)}\n        spacing={number('spacing', 10)}\n        variant='form'\n        label='Gender'\n        width={text('width', '50%')}\n        labelColor={text('Group Label Color', 'black')}\n        error={boolean('error', true)}\n        errorMessage={text('errorMessage', 'Some Field Error')}\n        required={boolean('required', false)}\n      >\n        <Checkbox\n          id='checkbox1'\n          onChange={action('CheckboxField 1 Changed')}\n          disabled={boolean('disabled', false, 'CheckboxField 1')}\n          checked={boolean('checked', true, 'CheckboxField 1')}\n          name={text('name', 'gender', 'CheckboxField 1')}\n          value={text('value', 'Male', 'CheckboxField 1')}\n          label={text('label', 'Male', 'CheckboxField 1')}\n          checkboxSize={\n            radios('size', radioOptions.size, 'sm') as tCheckboxSize\n          }\n          labelColor={text('Label Color', 'black')}\n        />\n        <Checkbox\n          id='checkbox2'\n          onChange={action('CheckboxField 2 Changed')}\n          disabled={boolean('disabled', false, 'CheckboxField 2')}\n          checked={boolean('checked', true, 'CheckboxField 2')}\n          name={text('name', 'gender', 'CheckboxField 2')}\n          value={text('value', 'Female', 'CheckboxField 2')}\n          label={text('label', 'Female', 'CheckboxField 2')}\n          checkboxSize={\n            radios('size', radioOptions.size, 'sm') as tCheckboxSize\n          }\n        />\n        <Checkbox\n          id='checkbox3'\n          onChange={action('CheckboxField 3 Changed')}\n          disabled={boolean('disabled', false, 'CheckboxField 3')}\n          checked={boolean('checked', true, 'CheckboxField 3')}\n          name={text('name', 'gender', 'CheckboxField 3')}\n          value={text('value', 'Others', 'CheckboxField 3')}\n          label={text('label', 'Others', 'CheckboxField 3')}\n          checkboxSize={\n            radios('size', radioOptions.size, 'sm') as tCheckboxSize\n          }\n          labelColor={text('Label Color', 'black')}\n        />\n      </CheckboxFieldGroup>\n    </Card>\n  </ThemeWrapper>\n), {__STORY__, __ADDS_MAP__,__MAIN_FILE_LOCATION__,__MODULE_DEPENDENCIES__,__LOCAL_DEPENDENCIES__,__SOURCE_PREFIX__,__IDS_TO_FRAMEWORKS__}), {__STORY__, __ADDS_MAP__,__MAIN_FILE_LOCATION__,__MODULE_DEPENDENCIES__,__LOCAL_DEPENDENCIES__,__SOURCE_PREFIX__,__IDS_TO_FRAMEWORKS__}), {__STORY__, __ADDS_MAP__,__MAIN_FILE_LOCATION__,__MODULE_DEPENDENCIES__,__LOCAL_DEPENDENCIES__,__SOURCE_PREFIX__,__IDS_TO_FRAMEWORKS__});"],"sourceRoot":""},"metadata":{},"sourceType":"module"}