{"ast":null,"code":"","map":{"version":3,"sources":[],"names":[],"mappings":"","sourcesContent":["import { ITextInputProps } from '../TextInput'\nimport { tTimeFormat } from '../DatePicker/interfaces'\nexport interface ICustomTextInputProps extends ITextInputProps {\n  value?: string\n  onClick?: () => void\n  onlyTime?: boolean\n  name?: string\n  textInputWidth?: string\n}\n\nexport interface IShiftTimingsObject {\n  id?: string\n  fromValue?: Date\n  toValue?: Date\n}\n// export type tTimeFormat = '12Hr' | '24Hr'\n\nexport interface IShiftTimingsProps\n  extends React.HTMLAttributes<HTMLDivElement> {\n  timeFormat?: tTimeFormat\n  timeInterval?: number\n  label?: string\n  labelColor?: string\n  required?: boolean\n  onFromChange?: (id?: string, time?: string) => void\n  onToChange?: (id?: string, time?: string) => void\n  onRemove?: (id: string) => void\n  onAdd?: (id: string) => void\n  onChange?: (\n    event: any,\n    id?: string,\n    time?: Date,\n    shiftTimingArray?: IShiftTimingsObject[]\n  ) => void\n  fromLabel?: string\n  toLabel?: string\n  fromError?: boolean\n  toError?: boolean\n  fromErrorMessage?: string\n  toErrorMessage?: string\n  selected?: IShiftTimingsObject[]\n  stringToTime?: (dateString: string) => Date | undefined\n  timeToString?: (d: Date | undefined) => string\n}\nexport interface ITimePickerProps {\n  id: string\n  label?: string\n  errorMessage?: string\n  error?: boolean\n  placeholder?: string\n  textInputWidth?: string\n  timeFormat: tTimeFormat\n  timeInterval: number\n  time?: Date\n  onChange: (id: string, time: Date | [Date, Date] | undefined) => void\n  stringToTime?: (dateString: string) => Date | undefined\n  timeToString?: (d: Date | undefined) => string\n}\n\nexport interface IShiftTimingStateInterface {\n  shiftTimingArray: IShiftTimingsObject[]\n  id: string\n  time?: Date\n}\n"]},"metadata":{},"sourceType":"module"}