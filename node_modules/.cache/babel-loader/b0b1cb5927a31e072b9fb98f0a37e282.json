{"ast":null,"code":"import _defineProperty from \"/Users/farhanansari/Desktop/CODE/PrxProject/untitled folder/reactStoryBook/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/defineProperty\";\n\nvar _parameters;\n\n/* eslint-disable */\n// @ts-nocheck\n// @ts-ignore\nvar withSourceLoader = require('@storybook/source-loader/preview').withSource; // @ts-ignore\n\n\nvar addSourceDecorator = require(\"@storybook/source-loader/preview\").addSource; // @ts-ignore\n\n\nvar __SOURCE_PREFIX__ = \"/Users/farhanansari/Desktop/CODE/PrxProject/untitled folder/reactStoryBook/src/components/molecules/ShiftTimings\"; // @ts-ignore\n\nvar __STORY__ = \"\\n\\n// @ts-nocheck\\n// @ts-ignore\\nvar withSourceLoader = require('@storybook/source-loader/preview').withSource;\\n// @ts-ignore\\nvar addSourceDecorator = require(\\\"@storybook/source-loader/preview\\\").addSource;\\n// @ts-ignore\\nvar __SOURCE_PREFIX__ = \\\"/Users/farhanansari/Desktop/CODE/PrxProject/untitled folder/reactStoryBook/src/components/molecules/ShiftTimings\\\";\\n// @ts-ignore\\nvar __STORY__ = \\\"\\\\n\\\\n// @ts-nocheck\\\\n// @ts-ignore\\\\nvar withSourceLoader = require('@storybook/source-loader/preview').withSource;\\\\n// @ts-ignore\\\\nvar addSourceDecorator = require(\\\\\\\"@storybook/source-loader/preview\\\\\\\").addSource;\\\\n// @ts-ignore\\\\nvar __SOURCE_PREFIX__ = \\\\\\\"/Users/farhanansari/Desktop/CODE/PrxProject/untitled folder/reactStoryBook/src/components/molecules/ShiftTimings\\\\\\\";\\\\n// @ts-ignore\\\\nvar __STORY__ = \\\\\\\"import React from 'react'\\\\\\\\nimport { path } from '..'\\\\\\\\n\\\\\\\\nimport ThemeWrapper from '../../../utilities/components/ThemeWrapper'\\\\\\\\nimport ShiftTimings from '../ShiftTimings'\\\\\\\\nimport { tTimeFormat } from '../DatePicker/interfaces'\\\\\\\\nimport { radios, number, text, object } from '@storybook/addon-knobs'\\\\\\\\nimport { action } from '@storybook/addon-actions'\\\\\\\\n\\\\\\\\nexport default {\\\\\\\\n  title: `${path}/ShiftTimings`,\\\\\\\\n  component: ShiftTimings\\\\\\\\n}\\\\\\\\nconst radioOptions = {\\\\\\\\n  timeFormat: { '12 Hour': 12, '24 Hour': 24 }\\\\\\\\n}\\\\\\\\nexport const withPlayground = () => (\\\\\\\\n  <ThemeWrapper>\\\\\\\\n    <ShiftTimings\\\\\\\\n      fromLabel={text('fromlabel', 'From')}\\\\\\\\n      toLabel={text('toLabel', 'To')}\\\\\\\\n      // fromError={boolean('fromError', [false])}\\\\\\\\n      // toError={boolean('toError', [false])}\\\\\\\\n      // fromErrorMessage={text('From Error Message', 'This is required')}\\\\\\\\n      // toErrorMessage={text('To Error Message', 'This is required')}\\\\\\\\n      timeFormat={\\\\\\\\n        radios('Time Format', radioOptions.timeFormat, 24) as tTimeFormat\\\\\\\\n      }\\\\\\\\n      label='Shift Timings'\\\\\\\\n      timeInterval={number('timeInterval', 15)}\\\\\\\\n      style={object('style', { width: '800px' })}\\\\\\\\n      onFromChange={action('On From Change')}\\\\\\\\n      onToChange={action('On TO Change')}\\\\\\\\n      onChange={action('Change')}\\\\\\\\n      onRemove={action('On Remove Change')}\\\\\\\\n      onAdd={action('On Add Change')}\\\\\\\\n      selected={object('defaultSelected', [\\\\\\\\n        {\\\\\\\\n          id: '45890',\\\\\\\\n          fromValue: new Date(2020, 9, 23, 7, 45),\\\\\\\\n          toValue: new Date(2020, 9, 23, 8, 45)\\\\\\\\n        },\\\\\\\\n        {\\\\\\\\n          id: '8236jhg',\\\\\\\\n          fromValue: new Date(2020, 9, 23, 9, 45),\\\\\\\\n          toValue: new Date(2020, 9, 23, 10, 45)\\\\\\\\n        },\\\\\\\\n        {\\\\\\\\n          id: '238gjk',\\\\\\\\n          fromValue: new Date(2020, 9, 23, 11, 45),\\\\\\\\n          toValue: new Date(2020, 9, 23, 12, 45)\\\\\\\\n        }\\\\\\\\n      ])}\\\\\\\\n    />\\\\\\\\n  </ThemeWrapper>\\\\\\\\n)\\\\\\\\n\\\\\\\";\\\\n// @ts-ignore\\\\nvar __ADDS_MAP__ = {};\\\\n// @ts-ignore\\\\nvar __MAIN_FILE_LOCATION__ = \\\\\\\"/ShowTimings.stories.tsx\\\\\\\";\\\\n// @ts-ignore\\\\nvar __MODULE_DEPENDENCIES__ = [];\\\\n// @ts-ignore\\\\nvar __LOCAL_DEPENDENCIES__ = {};\\\\n// @ts-ignore\\\\nvar __IDS_TO_FRAMEWORKS__ = {};\\\\n        \\\\nimport React from 'react'\\\\nimport { path } from '..'\\\\n\\\\nimport ThemeWrapper from '../../../utilities/components/ThemeWrapper'\\\\nimport ShiftTimings from '../ShiftTimings'\\\\nimport { tTimeFormat } from '../DatePicker/interfaces'\\\\nimport { radios, number, text, object } from '@storybook/addon-knobs'\\\\nimport { action } from '@storybook/addon-actions'\\\\n\\\\nexport default {parameters: {\\\\\\\"storySource\\\\\\\":{\\\\\\\"source\\\\\\\":\\\\\\\"import React from 'react'\\\\\\\\nimport { path } from '..'\\\\\\\\n\\\\\\\\nimport ThemeWrapper from '../../../utilities/components/ThemeWrapper'\\\\\\\\nimport ShiftTimings from '../ShiftTimings'\\\\\\\\nimport { tTimeFormat } from '../DatePicker/interfaces'\\\\\\\\nimport { radios, number, text, object } from '@storybook/addon-knobs'\\\\\\\\nimport { action } from '@storybook/addon-actions'\\\\\\\\n\\\\\\\\nexport default {\\\\\\\\n  title: `${path}/ShiftTimings`,\\\\\\\\n  component: ShiftTimings\\\\\\\\n}\\\\\\\\nconst radioOptions = {\\\\\\\\n  timeFormat: { '12 Hour': 12, '24 Hour': 24 }\\\\\\\\n}\\\\\\\\nexport const withPlayground = () => (\\\\\\\\n  <ThemeWrapper>\\\\\\\\n    <ShiftTimings\\\\\\\\n      fromLabel={text('fromlabel', 'From')}\\\\\\\\n      toLabel={text('toLabel', 'To')}\\\\\\\\n      // fromError={boolean('fromError', [false])}\\\\\\\\n      // toError={boolean('toError', [false])}\\\\\\\\n      // fromErrorMessage={text('From Error Message', 'This is required')}\\\\\\\\n      // toErrorMessage={text('To Error Message', 'This is required')}\\\\\\\\n      timeFormat={\\\\\\\\n        radios('Time Format', radioOptions.timeFormat, 24) as tTimeFormat\\\\\\\\n      }\\\\\\\\n      label='Shift Timings'\\\\\\\\n      timeInterval={number('timeInterval', 15)}\\\\\\\\n      style={object('style', { width: '800px' })}\\\\\\\\n      onFromChange={action('On From Change')}\\\\\\\\n      onToChange={action('On TO Change')}\\\\\\\\n      onChange={action('Change')}\\\\\\\\n      onRemove={action('On Remove Change')}\\\\\\\\n      onAdd={action('On Add Change')}\\\\\\\\n      selected={object('defaultSelected', [\\\\\\\\n        {\\\\\\\\n          id: '45890',\\\\\\\\n          fromValue: new Date(2020, 9, 23, 7, 45),\\\\\\\\n          toValue: new Date(2020, 9, 23, 8, 45)\\\\\\\\n        },\\\\\\\\n        {\\\\\\\\n          id: '8236jhg',\\\\\\\\n          fromValue: new Date(2020, 9, 23, 9, 45),\\\\\\\\n          toValue: new Date(2020, 9, 23, 10, 45)\\\\\\\\n        },\\\\\\\\n        {\\\\\\\\n          id: '238gjk',\\\\\\\\n          fromValue: new Date(2020, 9, 23, 11, 45),\\\\\\\\n          toValue: new Date(2020, 9, 23, 12, 45)\\\\\\\\n        }\\\\\\\\n      ])}\\\\\\\\n    />\\\\\\\\n  </ThemeWrapper>\\\\\\\\n)\\\\\\\\n\\\\\\\",\\\\\\\"locationsMap\\\\\\\":{}},},\\\\n  title: `${path}/ShiftTimings`,\\\\n  component: ShiftTimings\\\\n}\\\\nconst radioOptions = {\\\\n  timeFormat: { '12 Hour': 12, '24 Hour': 24 }\\\\n}\\\\nexport const withPlayground = addSourceDecorator(() => (\\\\n  <ThemeWrapper>\\\\n    <ShiftTimings\\\\n      fromLabel={text('fromlabel', 'From')}\\\\n      toLabel={text('toLabel', 'To')}\\\\n      // fromError={boolean('fromError', [false])}\\\\n      // toError={boolean('toError', [false])}\\\\n      // fromErrorMessage={text('From Error Message', 'This is required')}\\\\n      // toErrorMessage={text('To Error Message', 'This is required')}\\\\n      timeFormat={\\\\n        radios('Time Format', radioOptions.timeFormat, 24) as tTimeFormat\\\\n      }\\\\n      label='Shift Timings'\\\\n      timeInterval={number('timeInterval', 15)}\\\\n      style={object('style', { width: '800px' })}\\\\n      onFromChange={action('On From Change')}\\\\n      onToChange={action('On TO Change')}\\\\n      onChange={action('Change')}\\\\n      onRemove={action('On Remove Change')}\\\\n      onAdd={action('On Add Change')}\\\\n      selected={object('defaultSelected', [\\\\n        {\\\\n          id: '45890',\\\\n          fromValue: new Date(2020, 9, 23, 7, 45),\\\\n          toValue: new Date(2020, 9, 23, 8, 45)\\\\n        },\\\\n        {\\\\n          id: '8236jhg',\\\\n          fromValue: new Date(2020, 9, 23, 9, 45),\\\\n          toValue: new Date(2020, 9, 23, 10, 45)\\\\n        },\\\\n        {\\\\n          id: '238gjk',\\\\n          fromValue: new Date(2020, 9, 23, 11, 45),\\\\n          toValue: new Date(2020, 9, 23, 12, 45)\\\\n        }\\\\n      ])}\\\\n    />\\\\n  </ThemeWrapper>\\\\n), {__STORY__, __ADDS_MAP__,__MAIN_FILE_LOCATION__,__MODULE_DEPENDENCIES__,__LOCAL_DEPENDENCIES__,__SOURCE_PREFIX__,__IDS_TO_FRAMEWORKS__});\\\";\\n// @ts-ignore\\nvar __ADDS_MAP__ = {};\\n// @ts-ignore\\nvar __MAIN_FILE_LOCATION__ = \\\"/ShowTimings.stories.tsx\\\";\\n// @ts-ignore\\nvar __MODULE_DEPENDENCIES__ = [];\\n// @ts-ignore\\nvar __LOCAL_DEPENDENCIES__ = {};\\n// @ts-ignore\\nvar __IDS_TO_FRAMEWORKS__ = {};\\n        \\n\\n\\n// @ts-nocheck\\n// @ts-ignore\\nvar withSourceLoader = require('@storybook/source-loader/preview').withSource;\\n// @ts-ignore\\nvar addSourceDecorator = require(\\\"@storybook/source-loader/preview\\\").addSource;\\n// @ts-ignore\\nvar __SOURCE_PREFIX__ = \\\"/Users/farhanansari/Desktop/CODE/PrxProject/untitled folder/reactStoryBook/src/components/molecules/ShiftTimings\\\";\\n// @ts-ignore\\nvar __STORY__ = \\\"import React from 'react'\\\\nimport { path } from '..'\\\\n\\\\nimport ThemeWrapper from '../../../utilities/components/ThemeWrapper'\\\\nimport ShiftTimings from '../ShiftTimings'\\\\nimport { tTimeFormat } from '../DatePicker/interfaces'\\\\nimport { radios, number, text, object } from '@storybook/addon-knobs'\\\\nimport { action } from '@storybook/addon-actions'\\\\n\\\\nexport default {\\\\n  title: `${path}/ShiftTimings`,\\\\n  component: ShiftTimings\\\\n}\\\\nconst radioOptions = {\\\\n  timeFormat: { '12 Hour': 12, '24 Hour': 24 }\\\\n}\\\\nexport const withPlayground = () => (\\\\n  <ThemeWrapper>\\\\n    <ShiftTimings\\\\n      fromLabel={text('fromlabel', 'From')}\\\\n      toLabel={text('toLabel', 'To')}\\\\n      // fromError={boolean('fromError', [false])}\\\\n      // toError={boolean('toError', [false])}\\\\n      // fromErrorMessage={text('From Error Message', 'This is required')}\\\\n      // toErrorMessage={text('To Error Message', 'This is required')}\\\\n      timeFormat={\\\\n        radios('Time Format', radioOptions.timeFormat, 24) as tTimeFormat\\\\n      }\\\\n      label='Shift Timings'\\\\n      timeInterval={number('timeInterval', 15)}\\\\n      style={object('style', { width: '800px' })}\\\\n      onFromChange={action('On From Change')}\\\\n      onToChange={action('On TO Change')}\\\\n      onChange={action('Change')}\\\\n      onRemove={action('On Remove Change')}\\\\n      onAdd={action('On Add Change')}\\\\n      selected={object('defaultSelected', [\\\\n        {\\\\n          id: '45890',\\\\n          fromValue: new Date(2020, 9, 23, 7, 45),\\\\n          toValue: new Date(2020, 9, 23, 8, 45)\\\\n        },\\\\n        {\\\\n          id: '8236jhg',\\\\n          fromValue: new Date(2020, 9, 23, 9, 45),\\\\n          toValue: new Date(2020, 9, 23, 10, 45)\\\\n        },\\\\n        {\\\\n          id: '238gjk',\\\\n          fromValue: new Date(2020, 9, 23, 11, 45),\\\\n          toValue: new Date(2020, 9, 23, 12, 45)\\\\n        }\\\\n      ])}\\\\n    />\\\\n  </ThemeWrapper>\\\\n)\\\\n\\\";\\n// @ts-ignore\\nvar __ADDS_MAP__ = {};\\n// @ts-ignore\\nvar __MAIN_FILE_LOCATION__ = \\\"/ShowTimings.stories.tsx\\\";\\n// @ts-ignore\\nvar __MODULE_DEPENDENCIES__ = [];\\n// @ts-ignore\\nvar __LOCAL_DEPENDENCIES__ = {};\\n// @ts-ignore\\nvar __IDS_TO_FRAMEWORKS__ = {};\\n        \\nimport React from 'react'\\nimport { path } from '..'\\n\\nimport ThemeWrapper from '../../../utilities/components/ThemeWrapper'\\nimport ShiftTimings from '../ShiftTimings'\\nimport { tTimeFormat } from '../DatePicker/interfaces'\\nimport { radios, number, text, object } from '@storybook/addon-knobs'\\nimport { action } from '@storybook/addon-actions'\\n\\nexport default {parameters: {\\\"storySource\\\":{\\\"source\\\":\\\"\\\\n\\\\n// @ts-nocheck\\\\n// @ts-ignore\\\\nvar withSourceLoader = require('@storybook/source-loader/preview').withSource;\\\\n// @ts-ignore\\\\nvar addSourceDecorator = require(\\\\\\\"@storybook/source-loader/preview\\\\\\\").addSource;\\\\n// @ts-ignore\\\\nvar __SOURCE_PREFIX__ = \\\\\\\"/Users/farhanansari/Desktop/CODE/PrxProject/untitled folder/reactStoryBook/src/components/molecules/ShiftTimings\\\\\\\";\\\\n// @ts-ignore\\\\nvar __STORY__ = \\\\\\\"import React from 'react'\\\\\\\\nimport { path } from '..'\\\\\\\\n\\\\\\\\nimport ThemeWrapper from '../../../utilities/components/ThemeWrapper'\\\\\\\\nimport ShiftTimings from '../ShiftTimings'\\\\\\\\nimport { tTimeFormat } from '../DatePicker/interfaces'\\\\\\\\nimport { radios, number, text, object } from '@storybook/addon-knobs'\\\\\\\\nimport { action } from '@storybook/addon-actions'\\\\\\\\n\\\\\\\\nexport default {\\\\\\\\n  title: `${path}/ShiftTimings`,\\\\\\\\n  component: ShiftTimings\\\\\\\\n}\\\\\\\\nconst radioOptions = {\\\\\\\\n  timeFormat: { '12 Hour': 12, '24 Hour': 24 }\\\\\\\\n}\\\\\\\\nexport const withPlayground = () => (\\\\\\\\n  <ThemeWrapper>\\\\\\\\n    <ShiftTimings\\\\\\\\n      fromLabel={text('fromlabel', 'From')}\\\\\\\\n      toLabel={text('toLabel', 'To')}\\\\\\\\n      // fromError={boolean('fromError', [false])}\\\\\\\\n      // toError={boolean('toError', [false])}\\\\\\\\n      // fromErrorMessage={text('From Error Message', 'This is required')}\\\\\\\\n      // toErrorMessage={text('To Error Message', 'This is required')}\\\\\\\\n      timeFormat={\\\\\\\\n        radios('Time Format', radioOptions.timeFormat, 24) as tTimeFormat\\\\\\\\n      }\\\\\\\\n      label='Shift Timings'\\\\\\\\n      timeInterval={number('timeInterval', 15)}\\\\\\\\n      style={object('style', { width: '800px' })}\\\\\\\\n      onFromChange={action('On From Change')}\\\\\\\\n      onToChange={action('On TO Change')}\\\\\\\\n      onChange={action('Change')}\\\\\\\\n      onRemove={action('On Remove Change')}\\\\\\\\n      onAdd={action('On Add Change')}\\\\\\\\n      selected={object('defaultSelected', [\\\\\\\\n        {\\\\\\\\n          id: '45890',\\\\\\\\n          fromValue: new Date(2020, 9, 23, 7, 45),\\\\\\\\n          toValue: new Date(2020, 9, 23, 8, 45)\\\\\\\\n        },\\\\\\\\n        {\\\\\\\\n          id: '8236jhg',\\\\\\\\n          fromValue: new Date(2020, 9, 23, 9, 45),\\\\\\\\n          toValue: new Date(2020, 9, 23, 10, 45)\\\\\\\\n        },\\\\\\\\n        {\\\\\\\\n          id: '238gjk',\\\\\\\\n          fromValue: new Date(2020, 9, 23, 11, 45),\\\\\\\\n          toValue: new Date(2020, 9, 23, 12, 45)\\\\\\\\n        }\\\\\\\\n      ])}\\\\\\\\n    />\\\\\\\\n  </ThemeWrapper>\\\\\\\\n)\\\\\\\\n\\\\\\\";\\\\n// @ts-ignore\\\\nvar __ADDS_MAP__ = {};\\\\n// @ts-ignore\\\\nvar __MAIN_FILE_LOCATION__ = \\\\\\\"/ShowTimings.stories.tsx\\\\\\\";\\\\n// @ts-ignore\\\\nvar __MODULE_DEPENDENCIES__ = [];\\\\n// @ts-ignore\\\\nvar __LOCAL_DEPENDENCIES__ = {};\\\\n// @ts-ignore\\\\nvar __IDS_TO_FRAMEWORKS__ = {};\\\\n        \\\\nimport React from 'react'\\\\nimport { path } from '..'\\\\n\\\\nimport ThemeWrapper from '../../../utilities/components/ThemeWrapper'\\\\nimport ShiftTimings from '../ShiftTimings'\\\\nimport { tTimeFormat } from '../DatePicker/interfaces'\\\\nimport { radios, number, text, object } from '@storybook/addon-knobs'\\\\nimport { action } from '@storybook/addon-actions'\\\\n\\\\nexport default {parameters: {\\\\\\\"storySource\\\\\\\":{\\\\\\\"source\\\\\\\":\\\\\\\"import React from 'react'\\\\\\\\nimport { path } from '..'\\\\\\\\n\\\\\\\\nimport ThemeWrapper from '../../../utilities/components/ThemeWrapper'\\\\\\\\nimport ShiftTimings from '../ShiftTimings'\\\\\\\\nimport { tTimeFormat } from '../DatePicker/interfaces'\\\\\\\\nimport { radios, number, text, object } from '@storybook/addon-knobs'\\\\\\\\nimport { action } from '@storybook/addon-actions'\\\\\\\\n\\\\\\\\nexport default {\\\\\\\\n  title: `${path}/ShiftTimings`,\\\\\\\\n  component: ShiftTimings\\\\\\\\n}\\\\\\\\nconst radioOptions = {\\\\\\\\n  timeFormat: { '12 Hour': 12, '24 Hour': 24 }\\\\\\\\n}\\\\\\\\nexport const withPlayground = () => (\\\\\\\\n  <ThemeWrapper>\\\\\\\\n    <ShiftTimings\\\\\\\\n      fromLabel={text('fromlabel', 'From')}\\\\\\\\n      toLabel={text('toLabel', 'To')}\\\\\\\\n      // fromError={boolean('fromError', [false])}\\\\\\\\n      // toError={boolean('toError', [false])}\\\\\\\\n      // fromErrorMessage={text('From Error Message', 'This is required')}\\\\\\\\n      // toErrorMessage={text('To Error Message', 'This is required')}\\\\\\\\n      timeFormat={\\\\\\\\n        radios('Time Format', radioOptions.timeFormat, 24) as tTimeFormat\\\\\\\\n      }\\\\\\\\n      label='Shift Timings'\\\\\\\\n      timeInterval={number('timeInterval', 15)}\\\\\\\\n      style={object('style', { width: '800px' })}\\\\\\\\n      onFromChange={action('On From Change')}\\\\\\\\n      onToChange={action('On TO Change')}\\\\\\\\n      onChange={action('Change')}\\\\\\\\n      onRemove={action('On Remove Change')}\\\\\\\\n      onAdd={action('On Add Change')}\\\\\\\\n      selected={object('defaultSelected', [\\\\\\\\n        {\\\\\\\\n          id: '45890',\\\\\\\\n          fromValue: new Date(2020, 9, 23, 7, 45),\\\\\\\\n          toValue: new Date(2020, 9, 23, 8, 45)\\\\\\\\n        },\\\\\\\\n        {\\\\\\\\n          id: '8236jhg',\\\\\\\\n          fromValue: new Date(2020, 9, 23, 9, 45),\\\\\\\\n          toValue: new Date(2020, 9, 23, 10, 45)\\\\\\\\n        },\\\\\\\\n        {\\\\\\\\n          id: '238gjk',\\\\\\\\n          fromValue: new Date(2020, 9, 23, 11, 45),\\\\\\\\n          toValue: new Date(2020, 9, 23, 12, 45)\\\\\\\\n        }\\\\\\\\n      ])}\\\\\\\\n    />\\\\\\\\n  </ThemeWrapper>\\\\\\\\n)\\\\\\\\n\\\\\\\",\\\\\\\"locationsMap\\\\\\\":{}},},\\\\n  title: `${path}/ShiftTimings`,\\\\n  component: ShiftTimings\\\\n}\\\\nconst radioOptions = {\\\\n  timeFormat: { '12 Hour': 12, '24 Hour': 24 }\\\\n}\\\\nexport const withPlayground = addSourceDecorator(() => (\\\\n  <ThemeWrapper>\\\\n    <ShiftTimings\\\\n      fromLabel={text('fromlabel', 'From')}\\\\n      toLabel={text('toLabel', 'To')}\\\\n      // fromError={boolean('fromError', [false])}\\\\n      // toError={boolean('toError', [false])}\\\\n      // fromErrorMessage={text('From Error Message', 'This is required')}\\\\n      // toErrorMessage={text('To Error Message', 'This is required')}\\\\n      timeFormat={\\\\n        radios('Time Format', radioOptions.timeFormat, 24) as tTimeFormat\\\\n      }\\\\n      label='Shift Timings'\\\\n      timeInterval={number('timeInterval', 15)}\\\\n      style={object('style', { width: '800px' })}\\\\n      onFromChange={action('On From Change')}\\\\n      onToChange={action('On TO Change')}\\\\n      onChange={action('Change')}\\\\n      onRemove={action('On Remove Change')}\\\\n      onAdd={action('On Add Change')}\\\\n      selected={object('defaultSelected', [\\\\n        {\\\\n          id: '45890',\\\\n          fromValue: new Date(2020, 9, 23, 7, 45),\\\\n          toValue: new Date(2020, 9, 23, 8, 45)\\\\n        },\\\\n        {\\\\n          id: '8236jhg',\\\\n          fromValue: new Date(2020, 9, 23, 9, 45),\\\\n          toValue: new Date(2020, 9, 23, 10, 45)\\\\n        },\\\\n        {\\\\n          id: '238gjk',\\\\n          fromValue: new Date(2020, 9, 23, 11, 45),\\\\n          toValue: new Date(2020, 9, 23, 12, 45)\\\\n        }\\\\n      ])}\\\\n    />\\\\n  </ThemeWrapper>\\\\n), {__STORY__, __ADDS_MAP__,__MAIN_FILE_LOCATION__,__MODULE_DEPENDENCIES__,__LOCAL_DEPENDENCIES__,__SOURCE_PREFIX__,__IDS_TO_FRAMEWORKS__});\\\",\\\"locationsMap\\\":{}},\\\"storySource\\\":{\\\"source\\\":\\\"import React from 'react'\\\\nimport { path } from '..'\\\\n\\\\nimport ThemeWrapper from '../../../utilities/components/ThemeWrapper'\\\\nimport ShiftTimings from '../ShiftTimings'\\\\nimport { tTimeFormat } from '../DatePicker/interfaces'\\\\nimport { radios, number, text, object } from '@storybook/addon-knobs'\\\\nimport { action } from '@storybook/addon-actions'\\\\n\\\\nexport default {\\\\n  title: `${path}/ShiftTimings`,\\\\n  component: ShiftTimings\\\\n}\\\\nconst radioOptions = {\\\\n  timeFormat: { '12 Hour': 12, '24 Hour': 24 }\\\\n}\\\\nexport const withPlayground = () => (\\\\n  <ThemeWrapper>\\\\n    <ShiftTimings\\\\n      fromLabel={text('fromlabel', 'From')}\\\\n      toLabel={text('toLabel', 'To')}\\\\n      // fromError={boolean('fromError', [false])}\\\\n      // toError={boolean('toError', [false])}\\\\n      // fromErrorMessage={text('From Error Message', 'This is required')}\\\\n      // toErrorMessage={text('To Error Message', 'This is required')}\\\\n      timeFormat={\\\\n        radios('Time Format', radioOptions.timeFormat, 24) as tTimeFormat\\\\n      }\\\\n      label='Shift Timings'\\\\n      timeInterval={number('timeInterval', 15)}\\\\n      style={object('style', { width: '800px' })}\\\\n      onFromChange={action('On From Change')}\\\\n      onToChange={action('On TO Change')}\\\\n      onChange={action('Change')}\\\\n      onRemove={action('On Remove Change')}\\\\n      onAdd={action('On Add Change')}\\\\n      selected={object('defaultSelected', [\\\\n        {\\\\n          id: '45890',\\\\n          fromValue: new Date(2020, 9, 23, 7, 45),\\\\n          toValue: new Date(2020, 9, 23, 8, 45)\\\\n        },\\\\n        {\\\\n          id: '8236jhg',\\\\n          fromValue: new Date(2020, 9, 23, 9, 45),\\\\n          toValue: new Date(2020, 9, 23, 10, 45)\\\\n        },\\\\n        {\\\\n          id: '238gjk',\\\\n          fromValue: new Date(2020, 9, 23, 11, 45),\\\\n          toValue: new Date(2020, 9, 23, 12, 45)\\\\n        }\\\\n      ])}\\\\n    />\\\\n  </ThemeWrapper>\\\\n)\\\\n\\\",\\\"locationsMap\\\":{}},},\\n  title: `${path}/ShiftTimings`,\\n  component: ShiftTimings\\n}\\nconst radioOptions = {\\n  timeFormat: { '12 Hour': 12, '24 Hour': 24 }\\n}\\nexport const withPlayground = addSourceDecorator(addSourceDecorator(() => (\\n  <ThemeWrapper>\\n    <ShiftTimings\\n      fromLabel={text('fromlabel', 'From')}\\n      toLabel={text('toLabel', 'To')}\\n      // fromError={boolean('fromError', [false])}\\n      // toError={boolean('toError', [false])}\\n      // fromErrorMessage={text('From Error Message', 'This is required')}\\n      // toErrorMessage={text('To Error Message', 'This is required')}\\n      timeFormat={\\n        radios('Time Format', radioOptions.timeFormat, 24) as tTimeFormat\\n      }\\n      label='Shift Timings'\\n      timeInterval={number('timeInterval', 15)}\\n      style={object('style', { width: '800px' })}\\n      onFromChange={action('On From Change')}\\n      onToChange={action('On TO Change')}\\n      onChange={action('Change')}\\n      onRemove={action('On Remove Change')}\\n      onAdd={action('On Add Change')}\\n      selected={object('defaultSelected', [\\n        {\\n          id: '45890',\\n          fromValue: new Date(2020, 9, 23, 7, 45),\\n          toValue: new Date(2020, 9, 23, 8, 45)\\n        },\\n        {\\n          id: '8236jhg',\\n          fromValue: new Date(2020, 9, 23, 9, 45),\\n          toValue: new Date(2020, 9, 23, 10, 45)\\n        },\\n        {\\n          id: '238gjk',\\n          fromValue: new Date(2020, 9, 23, 11, 45),\\n          toValue: new Date(2020, 9, 23, 12, 45)\\n        }\\n      ])}\\n    />\\n  </ThemeWrapper>\\n), {__STORY__, __ADDS_MAP__,__MAIN_FILE_LOCATION__,__MODULE_DEPENDENCIES__,__LOCAL_DEPENDENCIES__,__SOURCE_PREFIX__,__IDS_TO_FRAMEWORKS__}), {__STORY__, __ADDS_MAP__,__MAIN_FILE_LOCATION__,__MODULE_DEPENDENCIES__,__LOCAL_DEPENDENCIES__,__SOURCE_PREFIX__,__IDS_TO_FRAMEWORKS__});\"; // @ts-ignore\n\nvar __ADDS_MAP__ = {}; // @ts-ignore\n\nvar __MAIN_FILE_LOCATION__ = \"/ShowTimings.stories.tsx\"; // @ts-ignore\n\nvar __MODULE_DEPENDENCIES__ = []; // @ts-ignore\n\nvar __LOCAL_DEPENDENCIES__ = {}; // @ts-ignore\n\nvar __IDS_TO_FRAMEWORKS__ = {};\n/* eslint-disable */\n// @ts-nocheck\n// @ts-ignore\n\nvar withSourceLoader = require('@storybook/source-loader/preview').withSource; // @ts-ignore\n\n\nvar addSourceDecorator = require(\"@storybook/source-loader/preview\").addSource; // @ts-ignore\n\n\nvar __SOURCE_PREFIX__ = \"/Users/farhanansari/Desktop/CODE/PrxProject/untitled folder/reactStoryBook/src/components/molecules/ShiftTimings\"; // @ts-ignore\n\nvar __STORY__ = \"\\n\\n// @ts-nocheck\\n// @ts-ignore\\nvar withSourceLoader = require('@storybook/source-loader/preview').withSource;\\n// @ts-ignore\\nvar addSourceDecorator = require(\\\"@storybook/source-loader/preview\\\").addSource;\\n// @ts-ignore\\nvar __SOURCE_PREFIX__ = \\\"/Users/farhanansari/Desktop/CODE/PrxProject/untitled folder/reactStoryBook/src/components/molecules/ShiftTimings\\\";\\n// @ts-ignore\\nvar __STORY__ = \\\"import React from 'react'\\\\nimport { path } from '..'\\\\n\\\\nimport ThemeWrapper from '../../../utilities/components/ThemeWrapper'\\\\nimport ShiftTimings from '../ShiftTimings'\\\\nimport { tTimeFormat } from '../DatePicker/interfaces'\\\\nimport { radios, number, text, object } from '@storybook/addon-knobs'\\\\nimport { action } from '@storybook/addon-actions'\\\\n\\\\nexport default {\\\\n  title: `${path}/ShiftTimings`,\\\\n  component: ShiftTimings\\\\n}\\\\nconst radioOptions = {\\\\n  timeFormat: { '12 Hour': 12, '24 Hour': 24 }\\\\n}\\\\nexport const withPlayground = () => (\\\\n  <ThemeWrapper>\\\\n    <ShiftTimings\\\\n      fromLabel={text('fromlabel', 'From')}\\\\n      toLabel={text('toLabel', 'To')}\\\\n      // fromError={boolean('fromError', [false])}\\\\n      // toError={boolean('toError', [false])}\\\\n      // fromErrorMessage={text('From Error Message', 'This is required')}\\\\n      // toErrorMessage={text('To Error Message', 'This is required')}\\\\n      timeFormat={\\\\n        radios('Time Format', radioOptions.timeFormat, 24) as tTimeFormat\\\\n      }\\\\n      label='Shift Timings'\\\\n      timeInterval={number('timeInterval', 15)}\\\\n      style={object('style', { width: '800px' })}\\\\n      onFromChange={action('On From Change')}\\\\n      onToChange={action('On TO Change')}\\\\n      onChange={action('Change')}\\\\n      onRemove={action('On Remove Change')}\\\\n      onAdd={action('On Add Change')}\\\\n      selected={object('defaultSelected', [\\\\n        {\\\\n          id: '45890',\\\\n          fromValue: new Date(2020, 9, 23, 7, 45),\\\\n          toValue: new Date(2020, 9, 23, 8, 45)\\\\n        },\\\\n        {\\\\n          id: '8236jhg',\\\\n          fromValue: new Date(2020, 9, 23, 9, 45),\\\\n          toValue: new Date(2020, 9, 23, 10, 45)\\\\n        },\\\\n        {\\\\n          id: '238gjk',\\\\n          fromValue: new Date(2020, 9, 23, 11, 45),\\\\n          toValue: new Date(2020, 9, 23, 12, 45)\\\\n        }\\\\n      ])}\\\\n    />\\\\n  </ThemeWrapper>\\\\n)\\\\n\\\";\\n// @ts-ignore\\nvar __ADDS_MAP__ = {};\\n// @ts-ignore\\nvar __MAIN_FILE_LOCATION__ = \\\"/ShowTimings.stories.tsx\\\";\\n// @ts-ignore\\nvar __MODULE_DEPENDENCIES__ = [];\\n// @ts-ignore\\nvar __LOCAL_DEPENDENCIES__ = {};\\n// @ts-ignore\\nvar __IDS_TO_FRAMEWORKS__ = {};\\n        \\nimport React from 'react'\\nimport { path } from '..'\\n\\nimport ThemeWrapper from '../../../utilities/components/ThemeWrapper'\\nimport ShiftTimings from '../ShiftTimings'\\nimport { tTimeFormat } from '../DatePicker/interfaces'\\nimport { radios, number, text, object } from '@storybook/addon-knobs'\\nimport { action } from '@storybook/addon-actions'\\n\\nexport default {parameters: {\\\"storySource\\\":{\\\"source\\\":\\\"import React from 'react'\\\\nimport { path } from '..'\\\\n\\\\nimport ThemeWrapper from '../../../utilities/components/ThemeWrapper'\\\\nimport ShiftTimings from '../ShiftTimings'\\\\nimport { tTimeFormat } from '../DatePicker/interfaces'\\\\nimport { radios, number, text, object } from '@storybook/addon-knobs'\\\\nimport { action } from '@storybook/addon-actions'\\\\n\\\\nexport default {\\\\n  title: `${path}/ShiftTimings`,\\\\n  component: ShiftTimings\\\\n}\\\\nconst radioOptions = {\\\\n  timeFormat: { '12 Hour': 12, '24 Hour': 24 }\\\\n}\\\\nexport const withPlayground = () => (\\\\n  <ThemeWrapper>\\\\n    <ShiftTimings\\\\n      fromLabel={text('fromlabel', 'From')}\\\\n      toLabel={text('toLabel', 'To')}\\\\n      // fromError={boolean('fromError', [false])}\\\\n      // toError={boolean('toError', [false])}\\\\n      // fromErrorMessage={text('From Error Message', 'This is required')}\\\\n      // toErrorMessage={text('To Error Message', 'This is required')}\\\\n      timeFormat={\\\\n        radios('Time Format', radioOptions.timeFormat, 24) as tTimeFormat\\\\n      }\\\\n      label='Shift Timings'\\\\n      timeInterval={number('timeInterval', 15)}\\\\n      style={object('style', { width: '800px' })}\\\\n      onFromChange={action('On From Change')}\\\\n      onToChange={action('On TO Change')}\\\\n      onChange={action('Change')}\\\\n      onRemove={action('On Remove Change')}\\\\n      onAdd={action('On Add Change')}\\\\n      selected={object('defaultSelected', [\\\\n        {\\\\n          id: '45890',\\\\n          fromValue: new Date(2020, 9, 23, 7, 45),\\\\n          toValue: new Date(2020, 9, 23, 8, 45)\\\\n        },\\\\n        {\\\\n          id: '8236jhg',\\\\n          fromValue: new Date(2020, 9, 23, 9, 45),\\\\n          toValue: new Date(2020, 9, 23, 10, 45)\\\\n        },\\\\n        {\\\\n          id: '238gjk',\\\\n          fromValue: new Date(2020, 9, 23, 11, 45),\\\\n          toValue: new Date(2020, 9, 23, 12, 45)\\\\n        }\\\\n      ])}\\\\n    />\\\\n  </ThemeWrapper>\\\\n)\\\\n\\\",\\\"locationsMap\\\":{}},},\\n  title: `${path}/ShiftTimings`,\\n  component: ShiftTimings\\n}\\nconst radioOptions = {\\n  timeFormat: { '12 Hour': 12, '24 Hour': 24 }\\n}\\nexport const withPlayground = addSourceDecorator(() => (\\n  <ThemeWrapper>\\n    <ShiftTimings\\n      fromLabel={text('fromlabel', 'From')}\\n      toLabel={text('toLabel', 'To')}\\n      // fromError={boolean('fromError', [false])}\\n      // toError={boolean('toError', [false])}\\n      // fromErrorMessage={text('From Error Message', 'This is required')}\\n      // toErrorMessage={text('To Error Message', 'This is required')}\\n      timeFormat={\\n        radios('Time Format', radioOptions.timeFormat, 24) as tTimeFormat\\n      }\\n      label='Shift Timings'\\n      timeInterval={number('timeInterval', 15)}\\n      style={object('style', { width: '800px' })}\\n      onFromChange={action('On From Change')}\\n      onToChange={action('On TO Change')}\\n      onChange={action('Change')}\\n      onRemove={action('On Remove Change')}\\n      onAdd={action('On Add Change')}\\n      selected={object('defaultSelected', [\\n        {\\n          id: '45890',\\n          fromValue: new Date(2020, 9, 23, 7, 45),\\n          toValue: new Date(2020, 9, 23, 8, 45)\\n        },\\n        {\\n          id: '8236jhg',\\n          fromValue: new Date(2020, 9, 23, 9, 45),\\n          toValue: new Date(2020, 9, 23, 10, 45)\\n        },\\n        {\\n          id: '238gjk',\\n          fromValue: new Date(2020, 9, 23, 11, 45),\\n          toValue: new Date(2020, 9, 23, 12, 45)\\n        }\\n      ])}\\n    />\\n  </ThemeWrapper>\\n), {__STORY__, __ADDS_MAP__,__MAIN_FILE_LOCATION__,__MODULE_DEPENDENCIES__,__LOCAL_DEPENDENCIES__,__SOURCE_PREFIX__,__IDS_TO_FRAMEWORKS__});\"; // @ts-ignore\n\nvar __ADDS_MAP__ = {}; // @ts-ignore\n\nvar __MAIN_FILE_LOCATION__ = \"/ShowTimings.stories.tsx\"; // @ts-ignore\n\nvar __MODULE_DEPENDENCIES__ = []; // @ts-ignore\n\nvar __LOCAL_DEPENDENCIES__ = {}; // @ts-ignore\n\nvar __IDS_TO_FRAMEWORKS__ = {};\n/* eslint-disable */\n// @ts-nocheck\n// @ts-ignore\n\nvar withSourceLoader = require('@storybook/source-loader/preview').withSource; // @ts-ignore\n\n\nvar addSourceDecorator = require(\"@storybook/source-loader/preview\").addSource; // @ts-ignore\n\n\nvar __SOURCE_PREFIX__ = \"/Users/farhanansari/Desktop/CODE/PrxProject/untitled folder/reactStoryBook/src/components/molecules/ShiftTimings\"; // @ts-ignore\n\nvar __STORY__ = \"import React from 'react'\\nimport { path } from '..'\\n\\nimport ThemeWrapper from '../../../utilities/components/ThemeWrapper'\\nimport ShiftTimings from '../ShiftTimings'\\nimport { tTimeFormat } from '../DatePicker/interfaces'\\nimport { radios, number, text, object } from '@storybook/addon-knobs'\\nimport { action } from '@storybook/addon-actions'\\n\\nexport default {\\n  title: `${path}/ShiftTimings`,\\n  component: ShiftTimings\\n}\\nconst radioOptions = {\\n  timeFormat: { '12 Hour': 12, '24 Hour': 24 }\\n}\\nexport const withPlayground = () => (\\n  <ThemeWrapper>\\n    <ShiftTimings\\n      fromLabel={text('fromlabel', 'From')}\\n      toLabel={text('toLabel', 'To')}\\n      // fromError={boolean('fromError', [false])}\\n      // toError={boolean('toError', [false])}\\n      // fromErrorMessage={text('From Error Message', 'This is required')}\\n      // toErrorMessage={text('To Error Message', 'This is required')}\\n      timeFormat={\\n        radios('Time Format', radioOptions.timeFormat, 24) as tTimeFormat\\n      }\\n      label='Shift Timings'\\n      timeInterval={number('timeInterval', 15)}\\n      style={object('style', { width: '800px' })}\\n      onFromChange={action('On From Change')}\\n      onToChange={action('On TO Change')}\\n      onChange={action('Change')}\\n      onRemove={action('On Remove Change')}\\n      onAdd={action('On Add Change')}\\n      selected={object('defaultSelected', [\\n        {\\n          id: '45890',\\n          fromValue: new Date(2020, 9, 23, 7, 45),\\n          toValue: new Date(2020, 9, 23, 8, 45)\\n        },\\n        {\\n          id: '8236jhg',\\n          fromValue: new Date(2020, 9, 23, 9, 45),\\n          toValue: new Date(2020, 9, 23, 10, 45)\\n        },\\n        {\\n          id: '238gjk',\\n          fromValue: new Date(2020, 9, 23, 11, 45),\\n          toValue: new Date(2020, 9, 23, 12, 45)\\n        }\\n      ])}\\n    />\\n  </ThemeWrapper>\\n)\\n\"; // @ts-ignore\n\nvar __ADDS_MAP__ = {}; // @ts-ignore\n\nvar __MAIN_FILE_LOCATION__ = \"/ShowTimings.stories.tsx\"; // @ts-ignore\n\nvar __MODULE_DEPENDENCIES__ = []; // @ts-ignore\n\nvar __LOCAL_DEPENDENCIES__ = {}; // @ts-ignore\n\nvar __IDS_TO_FRAMEWORKS__ = {};\nimport React from 'react';\nimport { path } from '..';\nimport ThemeWrapper from '../../../utilities/components/ThemeWrapper';\nimport ShiftTimings from '../ShiftTimings';\nimport { radios, number, text, object } from '@storybook/addon-knobs';\nimport { action } from '@storybook/addon-actions';\nexport default {\n  parameters: (_parameters = {\n    \"storySource\": {\n      \"source\": \"\\n\\n// @ts-nocheck\\n// @ts-ignore\\nvar withSourceLoader = require('@storybook/source-loader/preview').withSource;\\n// @ts-ignore\\nvar addSourceDecorator = require(\\\"@storybook/source-loader/preview\\\").addSource;\\n// @ts-ignore\\nvar __SOURCE_PREFIX__ = \\\"/Users/farhanansari/Desktop/CODE/PrxProject/untitled folder/reactStoryBook/src/components/molecules/ShiftTimings\\\";\\n// @ts-ignore\\nvar __STORY__ = \\\"\\\\n\\\\n// @ts-nocheck\\\\n// @ts-ignore\\\\nvar withSourceLoader = require('@storybook/source-loader/preview').withSource;\\\\n// @ts-ignore\\\\nvar addSourceDecorator = require(\\\\\\\"@storybook/source-loader/preview\\\\\\\").addSource;\\\\n// @ts-ignore\\\\nvar __SOURCE_PREFIX__ = \\\\\\\"/Users/farhanansari/Desktop/CODE/PrxProject/untitled folder/reactStoryBook/src/components/molecules/ShiftTimings\\\\\\\";\\\\n// @ts-ignore\\\\nvar __STORY__ = \\\\\\\"import React from 'react'\\\\\\\\nimport { path } from '..'\\\\\\\\n\\\\\\\\nimport ThemeWrapper from '../../../utilities/components/ThemeWrapper'\\\\\\\\nimport ShiftTimings from '../ShiftTimings'\\\\\\\\nimport { tTimeFormat } from '../DatePicker/interfaces'\\\\\\\\nimport { radios, number, text, object } from '@storybook/addon-knobs'\\\\\\\\nimport { action } from '@storybook/addon-actions'\\\\\\\\n\\\\\\\\nexport default {\\\\\\\\n  title: `${path}/ShiftTimings`,\\\\\\\\n  component: ShiftTimings\\\\\\\\n}\\\\\\\\nconst radioOptions = {\\\\\\\\n  timeFormat: { '12 Hour': 12, '24 Hour': 24 }\\\\\\\\n}\\\\\\\\nexport const withPlayground = () => (\\\\\\\\n  <ThemeWrapper>\\\\\\\\n    <ShiftTimings\\\\\\\\n      fromLabel={text('fromlabel', 'From')}\\\\\\\\n      toLabel={text('toLabel', 'To')}\\\\\\\\n      // fromError={boolean('fromError', [false])}\\\\\\\\n      // toError={boolean('toError', [false])}\\\\\\\\n      // fromErrorMessage={text('From Error Message', 'This is required')}\\\\\\\\n      // toErrorMessage={text('To Error Message', 'This is required')}\\\\\\\\n      timeFormat={\\\\\\\\n        radios('Time Format', radioOptions.timeFormat, 24) as tTimeFormat\\\\\\\\n      }\\\\\\\\n      label='Shift Timings'\\\\\\\\n      timeInterval={number('timeInterval', 15)}\\\\\\\\n      style={object('style', { width: '800px' })}\\\\\\\\n      onFromChange={action('On From Change')}\\\\\\\\n      onToChange={action('On TO Change')}\\\\\\\\n      onChange={action('Change')}\\\\\\\\n      onRemove={action('On Remove Change')}\\\\\\\\n      onAdd={action('On Add Change')}\\\\\\\\n      selected={object('defaultSelected', [\\\\\\\\n        {\\\\\\\\n          id: '45890',\\\\\\\\n          fromValue: new Date(2020, 9, 23, 7, 45),\\\\\\\\n          toValue: new Date(2020, 9, 23, 8, 45)\\\\\\\\n        },\\\\\\\\n        {\\\\\\\\n          id: '8236jhg',\\\\\\\\n          fromValue: new Date(2020, 9, 23, 9, 45),\\\\\\\\n          toValue: new Date(2020, 9, 23, 10, 45)\\\\\\\\n        },\\\\\\\\n        {\\\\\\\\n          id: '238gjk',\\\\\\\\n          fromValue: new Date(2020, 9, 23, 11, 45),\\\\\\\\n          toValue: new Date(2020, 9, 23, 12, 45)\\\\\\\\n        }\\\\\\\\n      ])}\\\\\\\\n    />\\\\\\\\n  </ThemeWrapper>\\\\\\\\n)\\\\\\\\n\\\\\\\";\\\\n// @ts-ignore\\\\nvar __ADDS_MAP__ = {};\\\\n// @ts-ignore\\\\nvar __MAIN_FILE_LOCATION__ = \\\\\\\"/ShowTimings.stories.tsx\\\\\\\";\\\\n// @ts-ignore\\\\nvar __MODULE_DEPENDENCIES__ = [];\\\\n// @ts-ignore\\\\nvar __LOCAL_DEPENDENCIES__ = {};\\\\n// @ts-ignore\\\\nvar __IDS_TO_FRAMEWORKS__ = {};\\\\n        \\\\nimport React from 'react'\\\\nimport { path } from '..'\\\\n\\\\nimport ThemeWrapper from '../../../utilities/components/ThemeWrapper'\\\\nimport ShiftTimings from '../ShiftTimings'\\\\nimport { tTimeFormat } from '../DatePicker/interfaces'\\\\nimport { radios, number, text, object } from '@storybook/addon-knobs'\\\\nimport { action } from '@storybook/addon-actions'\\\\n\\\\nexport default {parameters: {\\\\\\\"storySource\\\\\\\":{\\\\\\\"source\\\\\\\":\\\\\\\"import React from 'react'\\\\\\\\nimport { path } from '..'\\\\\\\\n\\\\\\\\nimport ThemeWrapper from '../../../utilities/components/ThemeWrapper'\\\\\\\\nimport ShiftTimings from '../ShiftTimings'\\\\\\\\nimport { tTimeFormat } from '../DatePicker/interfaces'\\\\\\\\nimport { radios, number, text, object } from '@storybook/addon-knobs'\\\\\\\\nimport { action } from '@storybook/addon-actions'\\\\\\\\n\\\\\\\\nexport default {\\\\\\\\n  title: `${path}/ShiftTimings`,\\\\\\\\n  component: ShiftTimings\\\\\\\\n}\\\\\\\\nconst radioOptions = {\\\\\\\\n  timeFormat: { '12 Hour': 12, '24 Hour': 24 }\\\\\\\\n}\\\\\\\\nexport const withPlayground = () => (\\\\\\\\n  <ThemeWrapper>\\\\\\\\n    <ShiftTimings\\\\\\\\n      fromLabel={text('fromlabel', 'From')}\\\\\\\\n      toLabel={text('toLabel', 'To')}\\\\\\\\n      // fromError={boolean('fromError', [false])}\\\\\\\\n      // toError={boolean('toError', [false])}\\\\\\\\n      // fromErrorMessage={text('From Error Message', 'This is required')}\\\\\\\\n      // toErrorMessage={text('To Error Message', 'This is required')}\\\\\\\\n      timeFormat={\\\\\\\\n        radios('Time Format', radioOptions.timeFormat, 24) as tTimeFormat\\\\\\\\n      }\\\\\\\\n      label='Shift Timings'\\\\\\\\n      timeInterval={number('timeInterval', 15)}\\\\\\\\n      style={object('style', { width: '800px' })}\\\\\\\\n      onFromChange={action('On From Change')}\\\\\\\\n      onToChange={action('On TO Change')}\\\\\\\\n      onChange={action('Change')}\\\\\\\\n      onRemove={action('On Remove Change')}\\\\\\\\n      onAdd={action('On Add Change')}\\\\\\\\n      selected={object('defaultSelected', [\\\\\\\\n        {\\\\\\\\n          id: '45890',\\\\\\\\n          fromValue: new Date(2020, 9, 23, 7, 45),\\\\\\\\n          toValue: new Date(2020, 9, 23, 8, 45)\\\\\\\\n        },\\\\\\\\n        {\\\\\\\\n          id: '8236jhg',\\\\\\\\n          fromValue: new Date(2020, 9, 23, 9, 45),\\\\\\\\n          toValue: new Date(2020, 9, 23, 10, 45)\\\\\\\\n        },\\\\\\\\n        {\\\\\\\\n          id: '238gjk',\\\\\\\\n          fromValue: new Date(2020, 9, 23, 11, 45),\\\\\\\\n          toValue: new Date(2020, 9, 23, 12, 45)\\\\\\\\n        }\\\\\\\\n      ])}\\\\\\\\n    />\\\\\\\\n  </ThemeWrapper>\\\\\\\\n)\\\\\\\\n\\\\\\\",\\\\\\\"locationsMap\\\\\\\":{}},},\\\\n  title: `${path}/ShiftTimings`,\\\\n  component: ShiftTimings\\\\n}\\\\nconst radioOptions = {\\\\n  timeFormat: { '12 Hour': 12, '24 Hour': 24 }\\\\n}\\\\nexport const withPlayground = addSourceDecorator(() => (\\\\n  <ThemeWrapper>\\\\n    <ShiftTimings\\\\n      fromLabel={text('fromlabel', 'From')}\\\\n      toLabel={text('toLabel', 'To')}\\\\n      // fromError={boolean('fromError', [false])}\\\\n      // toError={boolean('toError', [false])}\\\\n      // fromErrorMessage={text('From Error Message', 'This is required')}\\\\n      // toErrorMessage={text('To Error Message', 'This is required')}\\\\n      timeFormat={\\\\n        radios('Time Format', radioOptions.timeFormat, 24) as tTimeFormat\\\\n      }\\\\n      label='Shift Timings'\\\\n      timeInterval={number('timeInterval', 15)}\\\\n      style={object('style', { width: '800px' })}\\\\n      onFromChange={action('On From Change')}\\\\n      onToChange={action('On TO Change')}\\\\n      onChange={action('Change')}\\\\n      onRemove={action('On Remove Change')}\\\\n      onAdd={action('On Add Change')}\\\\n      selected={object('defaultSelected', [\\\\n        {\\\\n          id: '45890',\\\\n          fromValue: new Date(2020, 9, 23, 7, 45),\\\\n          toValue: new Date(2020, 9, 23, 8, 45)\\\\n        },\\\\n        {\\\\n          id: '8236jhg',\\\\n          fromValue: new Date(2020, 9, 23, 9, 45),\\\\n          toValue: new Date(2020, 9, 23, 10, 45)\\\\n        },\\\\n        {\\\\n          id: '238gjk',\\\\n          fromValue: new Date(2020, 9, 23, 11, 45),\\\\n          toValue: new Date(2020, 9, 23, 12, 45)\\\\n        }\\\\n      ])}\\\\n    />\\\\n  </ThemeWrapper>\\\\n), {__STORY__, __ADDS_MAP__,__MAIN_FILE_LOCATION__,__MODULE_DEPENDENCIES__,__LOCAL_DEPENDENCIES__,__SOURCE_PREFIX__,__IDS_TO_FRAMEWORKS__});\\\";\\n// @ts-ignore\\nvar __ADDS_MAP__ = {};\\n// @ts-ignore\\nvar __MAIN_FILE_LOCATION__ = \\\"/ShowTimings.stories.tsx\\\";\\n// @ts-ignore\\nvar __MODULE_DEPENDENCIES__ = [];\\n// @ts-ignore\\nvar __LOCAL_DEPENDENCIES__ = {};\\n// @ts-ignore\\nvar __IDS_TO_FRAMEWORKS__ = {};\\n        \\n\\n\\n// @ts-nocheck\\n// @ts-ignore\\nvar withSourceLoader = require('@storybook/source-loader/preview').withSource;\\n// @ts-ignore\\nvar addSourceDecorator = require(\\\"@storybook/source-loader/preview\\\").addSource;\\n// @ts-ignore\\nvar __SOURCE_PREFIX__ = \\\"/Users/farhanansari/Desktop/CODE/PrxProject/untitled folder/reactStoryBook/src/components/molecules/ShiftTimings\\\";\\n// @ts-ignore\\nvar __STORY__ = \\\"import React from 'react'\\\\nimport { path } from '..'\\\\n\\\\nimport ThemeWrapper from '../../../utilities/components/ThemeWrapper'\\\\nimport ShiftTimings from '../ShiftTimings'\\\\nimport { tTimeFormat } from '../DatePicker/interfaces'\\\\nimport { radios, number, text, object } from '@storybook/addon-knobs'\\\\nimport { action } from '@storybook/addon-actions'\\\\n\\\\nexport default {\\\\n  title: `${path}/ShiftTimings`,\\\\n  component: ShiftTimings\\\\n}\\\\nconst radioOptions = {\\\\n  timeFormat: { '12 Hour': 12, '24 Hour': 24 }\\\\n}\\\\nexport const withPlayground = () => (\\\\n  <ThemeWrapper>\\\\n    <ShiftTimings\\\\n      fromLabel={text('fromlabel', 'From')}\\\\n      toLabel={text('toLabel', 'To')}\\\\n      // fromError={boolean('fromError', [false])}\\\\n      // toError={boolean('toError', [false])}\\\\n      // fromErrorMessage={text('From Error Message', 'This is required')}\\\\n      // toErrorMessage={text('To Error Message', 'This is required')}\\\\n      timeFormat={\\\\n        radios('Time Format', radioOptions.timeFormat, 24) as tTimeFormat\\\\n      }\\\\n      label='Shift Timings'\\\\n      timeInterval={number('timeInterval', 15)}\\\\n      style={object('style', { width: '800px' })}\\\\n      onFromChange={action('On From Change')}\\\\n      onToChange={action('On TO Change')}\\\\n      onChange={action('Change')}\\\\n      onRemove={action('On Remove Change')}\\\\n      onAdd={action('On Add Change')}\\\\n      selected={object('defaultSelected', [\\\\n        {\\\\n          id: '45890',\\\\n          fromValue: new Date(2020, 9, 23, 7, 45),\\\\n          toValue: new Date(2020, 9, 23, 8, 45)\\\\n        },\\\\n        {\\\\n          id: '8236jhg',\\\\n          fromValue: new Date(2020, 9, 23, 9, 45),\\\\n          toValue: new Date(2020, 9, 23, 10, 45)\\\\n        },\\\\n        {\\\\n          id: '238gjk',\\\\n          fromValue: new Date(2020, 9, 23, 11, 45),\\\\n          toValue: new Date(2020, 9, 23, 12, 45)\\\\n        }\\\\n      ])}\\\\n    />\\\\n  </ThemeWrapper>\\\\n)\\\\n\\\";\\n// @ts-ignore\\nvar __ADDS_MAP__ = {};\\n// @ts-ignore\\nvar __MAIN_FILE_LOCATION__ = \\\"/ShowTimings.stories.tsx\\\";\\n// @ts-ignore\\nvar __MODULE_DEPENDENCIES__ = [];\\n// @ts-ignore\\nvar __LOCAL_DEPENDENCIES__ = {};\\n// @ts-ignore\\nvar __IDS_TO_FRAMEWORKS__ = {};\\n        \\nimport React from 'react'\\nimport { path } from '..'\\n\\nimport ThemeWrapper from '../../../utilities/components/ThemeWrapper'\\nimport ShiftTimings from '../ShiftTimings'\\nimport { tTimeFormat } from '../DatePicker/interfaces'\\nimport { radios, number, text, object } from '@storybook/addon-knobs'\\nimport { action } from '@storybook/addon-actions'\\n\\nexport default {parameters: {\\\"storySource\\\":{\\\"source\\\":\\\"\\\\n\\\\n// @ts-nocheck\\\\n// @ts-ignore\\\\nvar withSourceLoader = require('@storybook/source-loader/preview').withSource;\\\\n// @ts-ignore\\\\nvar addSourceDecorator = require(\\\\\\\"@storybook/source-loader/preview\\\\\\\").addSource;\\\\n// @ts-ignore\\\\nvar __SOURCE_PREFIX__ = \\\\\\\"/Users/farhanansari/Desktop/CODE/PrxProject/untitled folder/reactStoryBook/src/components/molecules/ShiftTimings\\\\\\\";\\\\n// @ts-ignore\\\\nvar __STORY__ = \\\\\\\"import React from 'react'\\\\\\\\nimport { path } from '..'\\\\\\\\n\\\\\\\\nimport ThemeWrapper from '../../../utilities/components/ThemeWrapper'\\\\\\\\nimport ShiftTimings from '../ShiftTimings'\\\\\\\\nimport { tTimeFormat } from '../DatePicker/interfaces'\\\\\\\\nimport { radios, number, text, object } from '@storybook/addon-knobs'\\\\\\\\nimport { action } from '@storybook/addon-actions'\\\\\\\\n\\\\\\\\nexport default {\\\\\\\\n  title: `${path}/ShiftTimings`,\\\\\\\\n  component: ShiftTimings\\\\\\\\n}\\\\\\\\nconst radioOptions = {\\\\\\\\n  timeFormat: { '12 Hour': 12, '24 Hour': 24 }\\\\\\\\n}\\\\\\\\nexport const withPlayground = () => (\\\\\\\\n  <ThemeWrapper>\\\\\\\\n    <ShiftTimings\\\\\\\\n      fromLabel={text('fromlabel', 'From')}\\\\\\\\n      toLabel={text('toLabel', 'To')}\\\\\\\\n      // fromError={boolean('fromError', [false])}\\\\\\\\n      // toError={boolean('toError', [false])}\\\\\\\\n      // fromErrorMessage={text('From Error Message', 'This is required')}\\\\\\\\n      // toErrorMessage={text('To Error Message', 'This is required')}\\\\\\\\n      timeFormat={\\\\\\\\n        radios('Time Format', radioOptions.timeFormat, 24) as tTimeFormat\\\\\\\\n      }\\\\\\\\n      label='Shift Timings'\\\\\\\\n      timeInterval={number('timeInterval', 15)}\\\\\\\\n      style={object('style', { width: '800px' })}\\\\\\\\n      onFromChange={action('On From Change')}\\\\\\\\n      onToChange={action('On TO Change')}\\\\\\\\n      onChange={action('Change')}\\\\\\\\n      onRemove={action('On Remove Change')}\\\\\\\\n      onAdd={action('On Add Change')}\\\\\\\\n      selected={object('defaultSelected', [\\\\\\\\n        {\\\\\\\\n          id: '45890',\\\\\\\\n          fromValue: new Date(2020, 9, 23, 7, 45),\\\\\\\\n          toValue: new Date(2020, 9, 23, 8, 45)\\\\\\\\n        },\\\\\\\\n        {\\\\\\\\n          id: '8236jhg',\\\\\\\\n          fromValue: new Date(2020, 9, 23, 9, 45),\\\\\\\\n          toValue: new Date(2020, 9, 23, 10, 45)\\\\\\\\n        },\\\\\\\\n        {\\\\\\\\n          id: '238gjk',\\\\\\\\n          fromValue: new Date(2020, 9, 23, 11, 45),\\\\\\\\n          toValue: new Date(2020, 9, 23, 12, 45)\\\\\\\\n        }\\\\\\\\n      ])}\\\\\\\\n    />\\\\\\\\n  </ThemeWrapper>\\\\\\\\n)\\\\\\\\n\\\\\\\";\\\\n// @ts-ignore\\\\nvar __ADDS_MAP__ = {};\\\\n// @ts-ignore\\\\nvar __MAIN_FILE_LOCATION__ = \\\\\\\"/ShowTimings.stories.tsx\\\\\\\";\\\\n// @ts-ignore\\\\nvar __MODULE_DEPENDENCIES__ = [];\\\\n// @ts-ignore\\\\nvar __LOCAL_DEPENDENCIES__ = {};\\\\n// @ts-ignore\\\\nvar __IDS_TO_FRAMEWORKS__ = {};\\\\n        \\\\nimport React from 'react'\\\\nimport { path } from '..'\\\\n\\\\nimport ThemeWrapper from '../../../utilities/components/ThemeWrapper'\\\\nimport ShiftTimings from '../ShiftTimings'\\\\nimport { tTimeFormat } from '../DatePicker/interfaces'\\\\nimport { radios, number, text, object } from '@storybook/addon-knobs'\\\\nimport { action } from '@storybook/addon-actions'\\\\n\\\\nexport default {parameters: {\\\\\\\"storySource\\\\\\\":{\\\\\\\"source\\\\\\\":\\\\\\\"import React from 'react'\\\\\\\\nimport { path } from '..'\\\\\\\\n\\\\\\\\nimport ThemeWrapper from '../../../utilities/components/ThemeWrapper'\\\\\\\\nimport ShiftTimings from '../ShiftTimings'\\\\\\\\nimport { tTimeFormat } from '../DatePicker/interfaces'\\\\\\\\nimport { radios, number, text, object } from '@storybook/addon-knobs'\\\\\\\\nimport { action } from '@storybook/addon-actions'\\\\\\\\n\\\\\\\\nexport default {\\\\\\\\n  title: `${path}/ShiftTimings`,\\\\\\\\n  component: ShiftTimings\\\\\\\\n}\\\\\\\\nconst radioOptions = {\\\\\\\\n  timeFormat: { '12 Hour': 12, '24 Hour': 24 }\\\\\\\\n}\\\\\\\\nexport const withPlayground = () => (\\\\\\\\n  <ThemeWrapper>\\\\\\\\n    <ShiftTimings\\\\\\\\n      fromLabel={text('fromlabel', 'From')}\\\\\\\\n      toLabel={text('toLabel', 'To')}\\\\\\\\n      // fromError={boolean('fromError', [false])}\\\\\\\\n      // toError={boolean('toError', [false])}\\\\\\\\n      // fromErrorMessage={text('From Error Message', 'This is required')}\\\\\\\\n      // toErrorMessage={text('To Error Message', 'This is required')}\\\\\\\\n      timeFormat={\\\\\\\\n        radios('Time Format', radioOptions.timeFormat, 24) as tTimeFormat\\\\\\\\n      }\\\\\\\\n      label='Shift Timings'\\\\\\\\n      timeInterval={number('timeInterval', 15)}\\\\\\\\n      style={object('style', { width: '800px' })}\\\\\\\\n      onFromChange={action('On From Change')}\\\\\\\\n      onToChange={action('On TO Change')}\\\\\\\\n      onChange={action('Change')}\\\\\\\\n      onRemove={action('On Remove Change')}\\\\\\\\n      onAdd={action('On Add Change')}\\\\\\\\n      selected={object('defaultSelected', [\\\\\\\\n        {\\\\\\\\n          id: '45890',\\\\\\\\n          fromValue: new Date(2020, 9, 23, 7, 45),\\\\\\\\n          toValue: new Date(2020, 9, 23, 8, 45)\\\\\\\\n        },\\\\\\\\n        {\\\\\\\\n          id: '8236jhg',\\\\\\\\n          fromValue: new Date(2020, 9, 23, 9, 45),\\\\\\\\n          toValue: new Date(2020, 9, 23, 10, 45)\\\\\\\\n        },\\\\\\\\n        {\\\\\\\\n          id: '238gjk',\\\\\\\\n          fromValue: new Date(2020, 9, 23, 11, 45),\\\\\\\\n          toValue: new Date(2020, 9, 23, 12, 45)\\\\\\\\n        }\\\\\\\\n      ])}\\\\\\\\n    />\\\\\\\\n  </ThemeWrapper>\\\\\\\\n)\\\\\\\\n\\\\\\\",\\\\\\\"locationsMap\\\\\\\":{}},},\\\\n  title: `${path}/ShiftTimings`,\\\\n  component: ShiftTimings\\\\n}\\\\nconst radioOptions = {\\\\n  timeFormat: { '12 Hour': 12, '24 Hour': 24 }\\\\n}\\\\nexport const withPlayground = addSourceDecorator(() => (\\\\n  <ThemeWrapper>\\\\n    <ShiftTimings\\\\n      fromLabel={text('fromlabel', 'From')}\\\\n      toLabel={text('toLabel', 'To')}\\\\n      // fromError={boolean('fromError', [false])}\\\\n      // toError={boolean('toError', [false])}\\\\n      // fromErrorMessage={text('From Error Message', 'This is required')}\\\\n      // toErrorMessage={text('To Error Message', 'This is required')}\\\\n      timeFormat={\\\\n        radios('Time Format', radioOptions.timeFormat, 24) as tTimeFormat\\\\n      }\\\\n      label='Shift Timings'\\\\n      timeInterval={number('timeInterval', 15)}\\\\n      style={object('style', { width: '800px' })}\\\\n      onFromChange={action('On From Change')}\\\\n      onToChange={action('On TO Change')}\\\\n      onChange={action('Change')}\\\\n      onRemove={action('On Remove Change')}\\\\n      onAdd={action('On Add Change')}\\\\n      selected={object('defaultSelected', [\\\\n        {\\\\n          id: '45890',\\\\n          fromValue: new Date(2020, 9, 23, 7, 45),\\\\n          toValue: new Date(2020, 9, 23, 8, 45)\\\\n        },\\\\n        {\\\\n          id: '8236jhg',\\\\n          fromValue: new Date(2020, 9, 23, 9, 45),\\\\n          toValue: new Date(2020, 9, 23, 10, 45)\\\\n        },\\\\n        {\\\\n          id: '238gjk',\\\\n          fromValue: new Date(2020, 9, 23, 11, 45),\\\\n          toValue: new Date(2020, 9, 23, 12, 45)\\\\n        }\\\\n      ])}\\\\n    />\\\\n  </ThemeWrapper>\\\\n), {__STORY__, __ADDS_MAP__,__MAIN_FILE_LOCATION__,__MODULE_DEPENDENCIES__,__LOCAL_DEPENDENCIES__,__SOURCE_PREFIX__,__IDS_TO_FRAMEWORKS__});\\\",\\\"locationsMap\\\":{}},\\\"storySource\\\":{\\\"source\\\":\\\"import React from 'react'\\\\nimport { path } from '..'\\\\n\\\\nimport ThemeWrapper from '../../../utilities/components/ThemeWrapper'\\\\nimport ShiftTimings from '../ShiftTimings'\\\\nimport { tTimeFormat } from '../DatePicker/interfaces'\\\\nimport { radios, number, text, object } from '@storybook/addon-knobs'\\\\nimport { action } from '@storybook/addon-actions'\\\\n\\\\nexport default {\\\\n  title: `${path}/ShiftTimings`,\\\\n  component: ShiftTimings\\\\n}\\\\nconst radioOptions = {\\\\n  timeFormat: { '12 Hour': 12, '24 Hour': 24 }\\\\n}\\\\nexport const withPlayground = () => (\\\\n  <ThemeWrapper>\\\\n    <ShiftTimings\\\\n      fromLabel={text('fromlabel', 'From')}\\\\n      toLabel={text('toLabel', 'To')}\\\\n      // fromError={boolean('fromError', [false])}\\\\n      // toError={boolean('toError', [false])}\\\\n      // fromErrorMessage={text('From Error Message', 'This is required')}\\\\n      // toErrorMessage={text('To Error Message', 'This is required')}\\\\n      timeFormat={\\\\n        radios('Time Format', radioOptions.timeFormat, 24) as tTimeFormat\\\\n      }\\\\n      label='Shift Timings'\\\\n      timeInterval={number('timeInterval', 15)}\\\\n      style={object('style', { width: '800px' })}\\\\n      onFromChange={action('On From Change')}\\\\n      onToChange={action('On TO Change')}\\\\n      onChange={action('Change')}\\\\n      onRemove={action('On Remove Change')}\\\\n      onAdd={action('On Add Change')}\\\\n      selected={object('defaultSelected', [\\\\n        {\\\\n          id: '45890',\\\\n          fromValue: new Date(2020, 9, 23, 7, 45),\\\\n          toValue: new Date(2020, 9, 23, 8, 45)\\\\n        },\\\\n        {\\\\n          id: '8236jhg',\\\\n          fromValue: new Date(2020, 9, 23, 9, 45),\\\\n          toValue: new Date(2020, 9, 23, 10, 45)\\\\n        },\\\\n        {\\\\n          id: '238gjk',\\\\n          fromValue: new Date(2020, 9, 23, 11, 45),\\\\n          toValue: new Date(2020, 9, 23, 12, 45)\\\\n        }\\\\n      ])}\\\\n    />\\\\n  </ThemeWrapper>\\\\n)\\\\n\\\",\\\"locationsMap\\\":{}},},\\n  title: `${path}/ShiftTimings`,\\n  component: ShiftTimings\\n}\\nconst radioOptions = {\\n  timeFormat: { '12 Hour': 12, '24 Hour': 24 }\\n}\\nexport const withPlayground = addSourceDecorator(addSourceDecorator(() => (\\n  <ThemeWrapper>\\n    <ShiftTimings\\n      fromLabel={text('fromlabel', 'From')}\\n      toLabel={text('toLabel', 'To')}\\n      // fromError={boolean('fromError', [false])}\\n      // toError={boolean('toError', [false])}\\n      // fromErrorMessage={text('From Error Message', 'This is required')}\\n      // toErrorMessage={text('To Error Message', 'This is required')}\\n      timeFormat={\\n        radios('Time Format', radioOptions.timeFormat, 24) as tTimeFormat\\n      }\\n      label='Shift Timings'\\n      timeInterval={number('timeInterval', 15)}\\n      style={object('style', { width: '800px' })}\\n      onFromChange={action('On From Change')}\\n      onToChange={action('On TO Change')}\\n      onChange={action('Change')}\\n      onRemove={action('On Remove Change')}\\n      onAdd={action('On Add Change')}\\n      selected={object('defaultSelected', [\\n        {\\n          id: '45890',\\n          fromValue: new Date(2020, 9, 23, 7, 45),\\n          toValue: new Date(2020, 9, 23, 8, 45)\\n        },\\n        {\\n          id: '8236jhg',\\n          fromValue: new Date(2020, 9, 23, 9, 45),\\n          toValue: new Date(2020, 9, 23, 10, 45)\\n        },\\n        {\\n          id: '238gjk',\\n          fromValue: new Date(2020, 9, 23, 11, 45),\\n          toValue: new Date(2020, 9, 23, 12, 45)\\n        }\\n      ])}\\n    />\\n  </ThemeWrapper>\\n), {__STORY__, __ADDS_MAP__,__MAIN_FILE_LOCATION__,__MODULE_DEPENDENCIES__,__LOCAL_DEPENDENCIES__,__SOURCE_PREFIX__,__IDS_TO_FRAMEWORKS__}), {__STORY__, __ADDS_MAP__,__MAIN_FILE_LOCATION__,__MODULE_DEPENDENCIES__,__LOCAL_DEPENDENCIES__,__SOURCE_PREFIX__,__IDS_TO_FRAMEWORKS__});\",\n      \"locationsMap\": {}\n    }\n  }, _defineProperty(_parameters, \"storySource\", {\n    \"source\": \"\\n\\n// @ts-nocheck\\n// @ts-ignore\\nvar withSourceLoader = require('@storybook/source-loader/preview').withSource;\\n// @ts-ignore\\nvar addSourceDecorator = require(\\\"@storybook/source-loader/preview\\\").addSource;\\n// @ts-ignore\\nvar __SOURCE_PREFIX__ = \\\"/Users/farhanansari/Desktop/CODE/PrxProject/untitled folder/reactStoryBook/src/components/molecules/ShiftTimings\\\";\\n// @ts-ignore\\nvar __STORY__ = \\\"import React from 'react'\\\\nimport { path } from '..'\\\\n\\\\nimport ThemeWrapper from '../../../utilities/components/ThemeWrapper'\\\\nimport ShiftTimings from '../ShiftTimings'\\\\nimport { tTimeFormat } from '../DatePicker/interfaces'\\\\nimport { radios, number, text, object } from '@storybook/addon-knobs'\\\\nimport { action } from '@storybook/addon-actions'\\\\n\\\\nexport default {\\\\n  title: `${path}/ShiftTimings`,\\\\n  component: ShiftTimings\\\\n}\\\\nconst radioOptions = {\\\\n  timeFormat: { '12 Hour': 12, '24 Hour': 24 }\\\\n}\\\\nexport const withPlayground = () => (\\\\n  <ThemeWrapper>\\\\n    <ShiftTimings\\\\n      fromLabel={text('fromlabel', 'From')}\\\\n      toLabel={text('toLabel', 'To')}\\\\n      // fromError={boolean('fromError', [false])}\\\\n      // toError={boolean('toError', [false])}\\\\n      // fromErrorMessage={text('From Error Message', 'This is required')}\\\\n      // toErrorMessage={text('To Error Message', 'This is required')}\\\\n      timeFormat={\\\\n        radios('Time Format', radioOptions.timeFormat, 24) as tTimeFormat\\\\n      }\\\\n      label='Shift Timings'\\\\n      timeInterval={number('timeInterval', 15)}\\\\n      style={object('style', { width: '800px' })}\\\\n      onFromChange={action('On From Change')}\\\\n      onToChange={action('On TO Change')}\\\\n      onChange={action('Change')}\\\\n      onRemove={action('On Remove Change')}\\\\n      onAdd={action('On Add Change')}\\\\n      selected={object('defaultSelected', [\\\\n        {\\\\n          id: '45890',\\\\n          fromValue: new Date(2020, 9, 23, 7, 45),\\\\n          toValue: new Date(2020, 9, 23, 8, 45)\\\\n        },\\\\n        {\\\\n          id: '8236jhg',\\\\n          fromValue: new Date(2020, 9, 23, 9, 45),\\\\n          toValue: new Date(2020, 9, 23, 10, 45)\\\\n        },\\\\n        {\\\\n          id: '238gjk',\\\\n          fromValue: new Date(2020, 9, 23, 11, 45),\\\\n          toValue: new Date(2020, 9, 23, 12, 45)\\\\n        }\\\\n      ])}\\\\n    />\\\\n  </ThemeWrapper>\\\\n)\\\\n\\\";\\n// @ts-ignore\\nvar __ADDS_MAP__ = {};\\n// @ts-ignore\\nvar __MAIN_FILE_LOCATION__ = \\\"/ShowTimings.stories.tsx\\\";\\n// @ts-ignore\\nvar __MODULE_DEPENDENCIES__ = [];\\n// @ts-ignore\\nvar __LOCAL_DEPENDENCIES__ = {};\\n// @ts-ignore\\nvar __IDS_TO_FRAMEWORKS__ = {};\\n        \\nimport React from 'react'\\nimport { path } from '..'\\n\\nimport ThemeWrapper from '../../../utilities/components/ThemeWrapper'\\nimport ShiftTimings from '../ShiftTimings'\\nimport { tTimeFormat } from '../DatePicker/interfaces'\\nimport { radios, number, text, object } from '@storybook/addon-knobs'\\nimport { action } from '@storybook/addon-actions'\\n\\nexport default {parameters: {\\\"storySource\\\":{\\\"source\\\":\\\"import React from 'react'\\\\nimport { path } from '..'\\\\n\\\\nimport ThemeWrapper from '../../../utilities/components/ThemeWrapper'\\\\nimport ShiftTimings from '../ShiftTimings'\\\\nimport { tTimeFormat } from '../DatePicker/interfaces'\\\\nimport { radios, number, text, object } from '@storybook/addon-knobs'\\\\nimport { action } from '@storybook/addon-actions'\\\\n\\\\nexport default {\\\\n  title: `${path}/ShiftTimings`,\\\\n  component: ShiftTimings\\\\n}\\\\nconst radioOptions = {\\\\n  timeFormat: { '12 Hour': 12, '24 Hour': 24 }\\\\n}\\\\nexport const withPlayground = () => (\\\\n  <ThemeWrapper>\\\\n    <ShiftTimings\\\\n      fromLabel={text('fromlabel', 'From')}\\\\n      toLabel={text('toLabel', 'To')}\\\\n      // fromError={boolean('fromError', [false])}\\\\n      // toError={boolean('toError', [false])}\\\\n      // fromErrorMessage={text('From Error Message', 'This is required')}\\\\n      // toErrorMessage={text('To Error Message', 'This is required')}\\\\n      timeFormat={\\\\n        radios('Time Format', radioOptions.timeFormat, 24) as tTimeFormat\\\\n      }\\\\n      label='Shift Timings'\\\\n      timeInterval={number('timeInterval', 15)}\\\\n      style={object('style', { width: '800px' })}\\\\n      onFromChange={action('On From Change')}\\\\n      onToChange={action('On TO Change')}\\\\n      onChange={action('Change')}\\\\n      onRemove={action('On Remove Change')}\\\\n      onAdd={action('On Add Change')}\\\\n      selected={object('defaultSelected', [\\\\n        {\\\\n          id: '45890',\\\\n          fromValue: new Date(2020, 9, 23, 7, 45),\\\\n          toValue: new Date(2020, 9, 23, 8, 45)\\\\n        },\\\\n        {\\\\n          id: '8236jhg',\\\\n          fromValue: new Date(2020, 9, 23, 9, 45),\\\\n          toValue: new Date(2020, 9, 23, 10, 45)\\\\n        },\\\\n        {\\\\n          id: '238gjk',\\\\n          fromValue: new Date(2020, 9, 23, 11, 45),\\\\n          toValue: new Date(2020, 9, 23, 12, 45)\\\\n        }\\\\n      ])}\\\\n    />\\\\n  </ThemeWrapper>\\\\n)\\\\n\\\",\\\"locationsMap\\\":{}},},\\n  title: `${path}/ShiftTimings`,\\n  component: ShiftTimings\\n}\\nconst radioOptions = {\\n  timeFormat: { '12 Hour': 12, '24 Hour': 24 }\\n}\\nexport const withPlayground = addSourceDecorator(() => (\\n  <ThemeWrapper>\\n    <ShiftTimings\\n      fromLabel={text('fromlabel', 'From')}\\n      toLabel={text('toLabel', 'To')}\\n      // fromError={boolean('fromError', [false])}\\n      // toError={boolean('toError', [false])}\\n      // fromErrorMessage={text('From Error Message', 'This is required')}\\n      // toErrorMessage={text('To Error Message', 'This is required')}\\n      timeFormat={\\n        radios('Time Format', radioOptions.timeFormat, 24) as tTimeFormat\\n      }\\n      label='Shift Timings'\\n      timeInterval={number('timeInterval', 15)}\\n      style={object('style', { width: '800px' })}\\n      onFromChange={action('On From Change')}\\n      onToChange={action('On TO Change')}\\n      onChange={action('Change')}\\n      onRemove={action('On Remove Change')}\\n      onAdd={action('On Add Change')}\\n      selected={object('defaultSelected', [\\n        {\\n          id: '45890',\\n          fromValue: new Date(2020, 9, 23, 7, 45),\\n          toValue: new Date(2020, 9, 23, 8, 45)\\n        },\\n        {\\n          id: '8236jhg',\\n          fromValue: new Date(2020, 9, 23, 9, 45),\\n          toValue: new Date(2020, 9, 23, 10, 45)\\n        },\\n        {\\n          id: '238gjk',\\n          fromValue: new Date(2020, 9, 23, 11, 45),\\n          toValue: new Date(2020, 9, 23, 12, 45)\\n        }\\n      ])}\\n    />\\n  </ThemeWrapper>\\n), {__STORY__, __ADDS_MAP__,__MAIN_FILE_LOCATION__,__MODULE_DEPENDENCIES__,__LOCAL_DEPENDENCIES__,__SOURCE_PREFIX__,__IDS_TO_FRAMEWORKS__});\",\n    \"locationsMap\": {}\n  }), _defineProperty(_parameters, \"storySource\", {\n    \"source\": \"import React from 'react'\\nimport { path } from '..'\\n\\nimport ThemeWrapper from '../../../utilities/components/ThemeWrapper'\\nimport ShiftTimings from '../ShiftTimings'\\nimport { tTimeFormat } from '../DatePicker/interfaces'\\nimport { radios, number, text, object } from '@storybook/addon-knobs'\\nimport { action } from '@storybook/addon-actions'\\n\\nexport default {\\n  title: `${path}/ShiftTimings`,\\n  component: ShiftTimings\\n}\\nconst radioOptions = {\\n  timeFormat: { '12 Hour': 12, '24 Hour': 24 }\\n}\\nexport const withPlayground = () => (\\n  <ThemeWrapper>\\n    <ShiftTimings\\n      fromLabel={text('fromlabel', 'From')}\\n      toLabel={text('toLabel', 'To')}\\n      // fromError={boolean('fromError', [false])}\\n      // toError={boolean('toError', [false])}\\n      // fromErrorMessage={text('From Error Message', 'This is required')}\\n      // toErrorMessage={text('To Error Message', 'This is required')}\\n      timeFormat={\\n        radios('Time Format', radioOptions.timeFormat, 24) as tTimeFormat\\n      }\\n      label='Shift Timings'\\n      timeInterval={number('timeInterval', 15)}\\n      style={object('style', { width: '800px' })}\\n      onFromChange={action('On From Change')}\\n      onToChange={action('On TO Change')}\\n      onChange={action('Change')}\\n      onRemove={action('On Remove Change')}\\n      onAdd={action('On Add Change')}\\n      selected={object('defaultSelected', [\\n        {\\n          id: '45890',\\n          fromValue: new Date(2020, 9, 23, 7, 45),\\n          toValue: new Date(2020, 9, 23, 8, 45)\\n        },\\n        {\\n          id: '8236jhg',\\n          fromValue: new Date(2020, 9, 23, 9, 45),\\n          toValue: new Date(2020, 9, 23, 10, 45)\\n        },\\n        {\\n          id: '238gjk',\\n          fromValue: new Date(2020, 9, 23, 11, 45),\\n          toValue: new Date(2020, 9, 23, 12, 45)\\n        }\\n      ])}\\n    />\\n  </ThemeWrapper>\\n)\\n\",\n    \"locationsMap\": {}\n  }), _parameters),\n  title: path + \"/ShiftTimings\",\n  component: ShiftTimings\n};\nvar radioOptions = {\n  timeFormat: {\n    '12 Hour': 12,\n    '24 Hour': 24\n  }\n};\nexport var withPlayground = addSourceDecorator(addSourceDecorator(addSourceDecorator(function () {\n  return React.createElement(ThemeWrapper, null, React.createElement(ShiftTimings, {\n    fromLabel: text('fromlabel', 'From'),\n    toLabel: text('toLabel', 'To'),\n    // fromError={boolean('fromError', [false])}\n    // toError={boolean('toError', [false])}\n    // fromErrorMessage={text('From Error Message', 'This is required')}\n    // toErrorMessage={text('To Error Message', 'This is required')}\n    timeFormat: radios('Time Format', radioOptions.timeFormat, 24),\n    label: 'Shift Timings',\n    timeInterval: number('timeInterval', 15),\n    style: object('style', {\n      width: '800px'\n    }),\n    onFromChange: action('On From Change'),\n    onToChange: action('On TO Change'),\n    onChange: action('Change'),\n    onRemove: action('On Remove Change'),\n    onAdd: action('On Add Change'),\n    selected: object('defaultSelected', [{\n      id: '45890',\n      fromValue: new Date(2020, 9, 23, 7, 45),\n      toValue: new Date(2020, 9, 23, 8, 45)\n    }, {\n      id: '8236jhg',\n      fromValue: new Date(2020, 9, 23, 9, 45),\n      toValue: new Date(2020, 9, 23, 10, 45)\n    }, {\n      id: '238gjk',\n      fromValue: new Date(2020, 9, 23, 11, 45),\n      toValue: new Date(2020, 9, 23, 12, 45)\n    }])\n  }));\n}, {\n  __STORY__: __STORY__,\n  __ADDS_MAP__: __ADDS_MAP__,\n  __MAIN_FILE_LOCATION__: __MAIN_FILE_LOCATION__,\n  __MODULE_DEPENDENCIES__: __MODULE_DEPENDENCIES__,\n  __LOCAL_DEPENDENCIES__: __LOCAL_DEPENDENCIES__,\n  __SOURCE_PREFIX__: __SOURCE_PREFIX__,\n  __IDS_TO_FRAMEWORKS__: __IDS_TO_FRAMEWORKS__\n}), {\n  __STORY__: __STORY__,\n  __ADDS_MAP__: __ADDS_MAP__,\n  __MAIN_FILE_LOCATION__: __MAIN_FILE_LOCATION__,\n  __MODULE_DEPENDENCIES__: __MODULE_DEPENDENCIES__,\n  __LOCAL_DEPENDENCIES__: __LOCAL_DEPENDENCIES__,\n  __SOURCE_PREFIX__: __SOURCE_PREFIX__,\n  __IDS_TO_FRAMEWORKS__: __IDS_TO_FRAMEWORKS__\n}), {\n  __STORY__: __STORY__,\n  __ADDS_MAP__: __ADDS_MAP__,\n  __MAIN_FILE_LOCATION__: __MAIN_FILE_LOCATION__,\n  __MODULE_DEPENDENCIES__: __MODULE_DEPENDENCIES__,\n  __LOCAL_DEPENDENCIES__: __LOCAL_DEPENDENCIES__,\n  __SOURCE_PREFIX__: __SOURCE_PREFIX__,\n  __IDS_TO_FRAMEWORKS__: __IDS_TO_FRAMEWORKS__\n});","map":{"version":3,"sources":["/Users/farhanansari/Desktop/CODE/PrxProject/untitled folder/reactStoryBook/node_modules/react-docgen-typescript-loader/dist/index.js!/Users/farhanansari/Desktop/CODE/PrxProject/untitled folder/reactStoryBook/node_modules/eslint-loader/dist/cjs.js??ref--6-0!/Users/farhanansari/Desktop/CODE/PrxProject/untitled folder/reactStoryBook/node_modules/@storybook/source-loader/dist/server/index.js??ref--11!/Users/farhanansari/Desktop/CODE/PrxProject/untitled folder/reactStoryBook/node_modules/@storybook/source-loader/dist/server/index.js!/Users/farhanansari/Desktop/CODE/PrxProject/untitled folder/reactStoryBook/node_modules/@storybook/source-loader/dist/server/index.js!/Users/farhanansari/Desktop/CODE/PrxProject/untitled folder/reactStoryBook/src/components/molecules/ShiftTimings/ShowTimings.stories.tsx"],"names":[],"mappings":";;;;AACA;AACA;AACA;AACA,IAAI,gBAAgB,GAAG,OAAO,CAAC,kCAAD,CAAP,CAA4C,UAAnE,C,CACA;;;AACA,IAAI,kBAAkB,GAAG,OAAO,CAAC,kCAAD,CAAP,CAA4C,SAArE,C,CACA;;;AACA,IAAI,iBAAiB,GAAG,kHAAxB,C,CACA;;AACA,IAAI,SAAS,GAAG,+oqBAAhB,C,CACA;;AACA,IAAI,YAAY,GAAG,EAAnB,C,CACA;;AACA,IAAI,sBAAsB,GAAG,0BAA7B,C,CACA;;AACA,IAAI,uBAAuB,GAAG,EAA9B,C,CACA;;AACA,IAAI,sBAAsB,GAAG,EAA7B,C,CACA;;AACA,IAAI,qBAAqB,GAAG,EAA5B;AAGA;AACA;AACA;;AACA,IAAI,gBAAgB,GAAG,OAAO,CAAC,kCAAD,CAAP,CAA4C,UAAnE,C,CACA;;;AACA,IAAI,kBAAkB,GAAG,OAAO,CAAC,kCAAD,CAAP,CAA4C,SAArE,C,CACA;;;AACA,IAAI,iBAAiB,GAAG,kHAAxB,C,CACA;;AACA,IAAI,SAAS,GAAG,0iNAAhB,C,CACA;;AACA,IAAI,YAAY,GAAG,EAAnB,C,CACA;;AACA,IAAI,sBAAsB,GAAG,0BAA7B,C,CACA;;AACA,IAAI,uBAAuB,GAAG,EAA9B,C,CACA;;AACA,IAAI,sBAAsB,GAAG,EAA7B,C,CACA;;AACA,IAAI,qBAAqB,GAAG,EAA5B;AAGA;AACA;AACA;;AACA,IAAI,gBAAgB,GAAG,OAAO,CAAC,kCAAD,CAAP,CAA4C,UAAnE,C,CACA;;;AACA,IAAI,kBAAkB,GAAG,OAAO,CAAC,kCAAD,CAAP,CAA4C,SAArE,C,CACA;;;AACA,IAAI,iBAAiB,GAAG,kHAAxB,C,CACA;;AACA,IAAI,SAAS,GAAG,u2DAAhB,C,CACA;;AACA,IAAI,YAAY,GAAG,EAAnB,C,CACA;;AACA,IAAI,sBAAsB,GAAG,0BAA7B,C,CACA;;AACA,IAAI,uBAAuB,GAAG,EAA9B,C,CACA;;AACA,IAAI,sBAAsB,GAAG,EAA7B,C,CACA;;AACA,IAAI,qBAAqB,GAAG,EAA5B;AAEA,OAAO,KAAP,MAAkB,OAAlB;AACA,SAAS,IAAT,QAAqB,IAArB;AAEA,OAAO,YAAP,MAAyB,4CAAzB;AACA,OAAO,YAAP,MAAyB,iBAAzB;AAEA,SAAS,MAAT,EAAiB,MAAjB,EAAyB,IAAzB,EAA+B,MAA/B,QAA6C,wBAA7C;AACA,SAAS,MAAT,QAAuB,0BAAvB;AAEA,eAAe;AAAC,EAAA,UAAU;AAAG,mBAAc;AAAC,gBAAS,+oqBAAV;AAA0pqB,sBAAe;AAAzqqB;AAAjB,iDAA4sqB;AAAC,cAAS,0iNAAV;AAAqjN,oBAAe;AAApkN,GAA5sqB,+CAAky3B;AAAC,cAAS,u2DAAV;AAAk3D,oBAAe;AAAj4D,GAAly3B,eAAX;AACb,EAAA,KAAK,EAAK,IAAI,GAAA,eADD;AAEb,EAAA,SAAS,EAAE;AAFE,CAAf;AAIA,IAAM,YAAY,GAAG;AACnB,EAAA,UAAU,EAAE;AAAE,eAAW,EAAb;AAAiB,eAAW;AAA5B;AADO,CAArB;AAGA,OAAO,IAAM,cAAc,GAAG,kBAAkB,CAAC,kBAAkB,CAAC,kBAAkB,CAAC,YAAA;AAAM,SAC3F,KAAA,CAAA,aAAA,CAAC,YAAD,EAAa,IAAb,EACE,KAAA,CAAA,aAAA,CAAC,YAAD,EAAa;AACX,IAAA,SAAS,EAAE,IAAI,CAAC,WAAD,EAAc,MAAd,CADJ;AAEX,IAAA,OAAO,EAAE,IAAI,CAAC,SAAD,EAAY,IAAZ,CAFF;AAGX;AACA;AACA;AACA;AACA,IAAA,UAAU,EACR,MAAM,CAAC,aAAD,EAAgB,YAAY,CAAC,UAA7B,EAAyC,EAAzC,CARG;AAUX,IAAA,KAAK,EAAC,eAVK;AAWX,IAAA,YAAY,EAAE,MAAM,CAAC,cAAD,EAAiB,EAAjB,CAXT;AAYX,IAAA,KAAK,EAAE,MAAM,CAAC,OAAD,EAAU;AAAE,MAAA,KAAK,EAAE;AAAT,KAAV,CAZF;AAaX,IAAA,YAAY,EAAE,MAAM,CAAC,gBAAD,CAbT;AAcX,IAAA,UAAU,EAAE,MAAM,CAAC,cAAD,CAdP;AAeX,IAAA,QAAQ,EAAE,MAAM,CAAC,QAAD,CAfL;AAgBX,IAAA,QAAQ,EAAE,MAAM,CAAC,kBAAD,CAhBL;AAiBX,IAAA,KAAK,EAAE,MAAM,CAAC,eAAD,CAjBF;AAkBX,IAAA,QAAQ,EAAE,MAAM,CAAC,iBAAD,EAAoB,CAClC;AACE,MAAA,EAAE,EAAE,OADN;AAEE,MAAA,SAAS,EAAE,IAAI,IAAJ,CAAS,IAAT,EAAe,CAAf,EAAkB,EAAlB,EAAsB,CAAtB,EAAyB,EAAzB,CAFb;AAGE,MAAA,OAAO,EAAE,IAAI,IAAJ,CAAS,IAAT,EAAe,CAAf,EAAkB,EAAlB,EAAsB,CAAtB,EAAyB,EAAzB;AAHX,KADkC,EAMlC;AACE,MAAA,EAAE,EAAE,SADN;AAEE,MAAA,SAAS,EAAE,IAAI,IAAJ,CAAS,IAAT,EAAe,CAAf,EAAkB,EAAlB,EAAsB,CAAtB,EAAyB,EAAzB,CAFb;AAGE,MAAA,OAAO,EAAE,IAAI,IAAJ,CAAS,IAAT,EAAe,CAAf,EAAkB,EAAlB,EAAsB,EAAtB,EAA0B,EAA1B;AAHX,KANkC,EAWlC;AACE,MAAA,EAAE,EAAE,QADN;AAEE,MAAA,SAAS,EAAE,IAAI,IAAJ,CAAS,IAAT,EAAe,CAAf,EAAkB,EAAlB,EAAsB,EAAtB,EAA0B,EAA1B,CAFb;AAGE,MAAA,OAAO,EAAE,IAAI,IAAJ,CAAS,IAAT,EAAe,CAAf,EAAkB,EAAlB,EAAsB,EAAtB,EAA0B,EAA1B;AAHX,KAXkC,CAApB;AAlBL,GAAb,CADF,CAD2F;AAuC5F,CAvCqF,EAuCnF;AAAC,EAAA,SAAS,EAAA,SAAV;AAAY,EAAA,YAAY,EAAA,YAAxB;AAAyB,EAAA,sBAAsB,EAAA,sBAA/C;AAAgD,EAAA,uBAAuB,EAAA,uBAAvE;AAAwE,EAAA,sBAAsB,EAAA,sBAA9F;AAA+F,EAAA,iBAAiB,EAAA,iBAAhH;AAAiH,EAAA,qBAAqB,EAAA;AAAtI,CAvCmF,CAAnB,EAuC0E;AAAC,EAAA,SAAS,EAAA,SAAV;AAAY,EAAA,YAAY,EAAA,YAAxB;AAAyB,EAAA,sBAAsB,EAAA,sBAA/C;AAAgD,EAAA,uBAAuB,EAAA,uBAAvE;AAAwE,EAAA,sBAAsB,EAAA,sBAA9F;AAA+F,EAAA,iBAAiB,EAAA,iBAAhH;AAAiH,EAAA,qBAAqB,EAAA;AAAtI,CAvC1E,CAAnB,EAuCuO;AAAC,EAAA,SAAS,EAAA,SAAV;AAAY,EAAA,YAAY,EAAA,YAAxB;AAAyB,EAAA,sBAAsB,EAAA,sBAA/C;AAAgD,EAAA,uBAAuB,EAAA,uBAAvE;AAAwE,EAAA,sBAAsB,EAAA,sBAA9F;AAA+F,EAAA,iBAAiB,EAAA,iBAAhH;AAAiH,EAAA,qBAAqB,EAAA;AAAtI,CAvCvO,CAAzC","sourcesContent":["\n/* eslint-disable */\n// @ts-nocheck\n// @ts-ignore\nvar withSourceLoader = require('@storybook/source-loader/preview').withSource;\n// @ts-ignore\nvar addSourceDecorator = require(\"@storybook/source-loader/preview\").addSource;\n// @ts-ignore\nvar __SOURCE_PREFIX__ = \"/Users/farhanansari/Desktop/CODE/PrxProject/untitled folder/reactStoryBook/src/components/molecules/ShiftTimings\";\n// @ts-ignore\nvar __STORY__ = \"\\n\\n// @ts-nocheck\\n// @ts-ignore\\nvar withSourceLoader = require('@storybook/source-loader/preview').withSource;\\n// @ts-ignore\\nvar addSourceDecorator = require(\\\"@storybook/source-loader/preview\\\").addSource;\\n// @ts-ignore\\nvar __SOURCE_PREFIX__ = \\\"/Users/farhanansari/Desktop/CODE/PrxProject/untitled folder/reactStoryBook/src/components/molecules/ShiftTimings\\\";\\n// @ts-ignore\\nvar __STORY__ = \\\"\\\\n\\\\n// @ts-nocheck\\\\n// @ts-ignore\\\\nvar withSourceLoader = require('@storybook/source-loader/preview').withSource;\\\\n// @ts-ignore\\\\nvar addSourceDecorator = require(\\\\\\\"@storybook/source-loader/preview\\\\\\\").addSource;\\\\n// @ts-ignore\\\\nvar __SOURCE_PREFIX__ = \\\\\\\"/Users/farhanansari/Desktop/CODE/PrxProject/untitled folder/reactStoryBook/src/components/molecules/ShiftTimings\\\\\\\";\\\\n// @ts-ignore\\\\nvar __STORY__ = \\\\\\\"import React from 'react'\\\\\\\\nimport { path } from '..'\\\\\\\\n\\\\\\\\nimport ThemeWrapper from '../../../utilities/components/ThemeWrapper'\\\\\\\\nimport ShiftTimings from '../ShiftTimings'\\\\\\\\nimport { tTimeFormat } from '../DatePicker/interfaces'\\\\\\\\nimport { radios, number, text, object } from '@storybook/addon-knobs'\\\\\\\\nimport { action } from '@storybook/addon-actions'\\\\\\\\n\\\\\\\\nexport default {\\\\\\\\n  title: `${path}/ShiftTimings`,\\\\\\\\n  component: ShiftTimings\\\\\\\\n}\\\\\\\\nconst radioOptions = {\\\\\\\\n  timeFormat: { '12 Hour': 12, '24 Hour': 24 }\\\\\\\\n}\\\\\\\\nexport const withPlayground = () => (\\\\\\\\n  <ThemeWrapper>\\\\\\\\n    <ShiftTimings\\\\\\\\n      fromLabel={text('fromlabel', 'From')}\\\\\\\\n      toLabel={text('toLabel', 'To')}\\\\\\\\n      // fromError={boolean('fromError', [false])}\\\\\\\\n      // toError={boolean('toError', [false])}\\\\\\\\n      // fromErrorMessage={text('From Error Message', 'This is required')}\\\\\\\\n      // toErrorMessage={text('To Error Message', 'This is required')}\\\\\\\\n      timeFormat={\\\\\\\\n        radios('Time Format', radioOptions.timeFormat, 24) as tTimeFormat\\\\\\\\n      }\\\\\\\\n      label='Shift Timings'\\\\\\\\n      timeInterval={number('timeInterval', 15)}\\\\\\\\n      style={object('style', { width: '800px' })}\\\\\\\\n      onFromChange={action('On From Change')}\\\\\\\\n      onToChange={action('On TO Change')}\\\\\\\\n      onChange={action('Change')}\\\\\\\\n      onRemove={action('On Remove Change')}\\\\\\\\n      onAdd={action('On Add Change')}\\\\\\\\n      selected={object('defaultSelected', [\\\\\\\\n        {\\\\\\\\n          id: '45890',\\\\\\\\n          fromValue: new Date(2020, 9, 23, 7, 45),\\\\\\\\n          toValue: new Date(2020, 9, 23, 8, 45)\\\\\\\\n        },\\\\\\\\n        {\\\\\\\\n          id: '8236jhg',\\\\\\\\n          fromValue: new Date(2020, 9, 23, 9, 45),\\\\\\\\n          toValue: new Date(2020, 9, 23, 10, 45)\\\\\\\\n        },\\\\\\\\n        {\\\\\\\\n          id: '238gjk',\\\\\\\\n          fromValue: new Date(2020, 9, 23, 11, 45),\\\\\\\\n          toValue: new Date(2020, 9, 23, 12, 45)\\\\\\\\n        }\\\\\\\\n      ])}\\\\\\\\n    />\\\\\\\\n  </ThemeWrapper>\\\\\\\\n)\\\\\\\\n\\\\\\\";\\\\n// @ts-ignore\\\\nvar __ADDS_MAP__ = {};\\\\n// @ts-ignore\\\\nvar __MAIN_FILE_LOCATION__ = \\\\\\\"/ShowTimings.stories.tsx\\\\\\\";\\\\n// @ts-ignore\\\\nvar __MODULE_DEPENDENCIES__ = [];\\\\n// @ts-ignore\\\\nvar __LOCAL_DEPENDENCIES__ = {};\\\\n// @ts-ignore\\\\nvar __IDS_TO_FRAMEWORKS__ = {};\\\\n        \\\\nimport React from 'react'\\\\nimport { path } from '..'\\\\n\\\\nimport ThemeWrapper from '../../../utilities/components/ThemeWrapper'\\\\nimport ShiftTimings from '../ShiftTimings'\\\\nimport { tTimeFormat } from '../DatePicker/interfaces'\\\\nimport { radios, number, text, object } from '@storybook/addon-knobs'\\\\nimport { action } from '@storybook/addon-actions'\\\\n\\\\nexport default {parameters: {\\\\\\\"storySource\\\\\\\":{\\\\\\\"source\\\\\\\":\\\\\\\"import React from 'react'\\\\\\\\nimport { path } from '..'\\\\\\\\n\\\\\\\\nimport ThemeWrapper from '../../../utilities/components/ThemeWrapper'\\\\\\\\nimport ShiftTimings from '../ShiftTimings'\\\\\\\\nimport { tTimeFormat } from '../DatePicker/interfaces'\\\\\\\\nimport { radios, number, text, object } from '@storybook/addon-knobs'\\\\\\\\nimport { action } from '@storybook/addon-actions'\\\\\\\\n\\\\\\\\nexport default {\\\\\\\\n  title: `${path}/ShiftTimings`,\\\\\\\\n  component: ShiftTimings\\\\\\\\n}\\\\\\\\nconst radioOptions = {\\\\\\\\n  timeFormat: { '12 Hour': 12, '24 Hour': 24 }\\\\\\\\n}\\\\\\\\nexport const withPlayground = () => (\\\\\\\\n  <ThemeWrapper>\\\\\\\\n    <ShiftTimings\\\\\\\\n      fromLabel={text('fromlabel', 'From')}\\\\\\\\n      toLabel={text('toLabel', 'To')}\\\\\\\\n      // fromError={boolean('fromError', [false])}\\\\\\\\n      // toError={boolean('toError', [false])}\\\\\\\\n      // fromErrorMessage={text('From Error Message', 'This is required')}\\\\\\\\n      // toErrorMessage={text('To Error Message', 'This is required')}\\\\\\\\n      timeFormat={\\\\\\\\n        radios('Time Format', radioOptions.timeFormat, 24) as tTimeFormat\\\\\\\\n      }\\\\\\\\n      label='Shift Timings'\\\\\\\\n      timeInterval={number('timeInterval', 15)}\\\\\\\\n      style={object('style', { width: '800px' })}\\\\\\\\n      onFromChange={action('On From Change')}\\\\\\\\n      onToChange={action('On TO Change')}\\\\\\\\n      onChange={action('Change')}\\\\\\\\n      onRemove={action('On Remove Change')}\\\\\\\\n      onAdd={action('On Add Change')}\\\\\\\\n      selected={object('defaultSelected', [\\\\\\\\n        {\\\\\\\\n          id: '45890',\\\\\\\\n          fromValue: new Date(2020, 9, 23, 7, 45),\\\\\\\\n          toValue: new Date(2020, 9, 23, 8, 45)\\\\\\\\n        },\\\\\\\\n        {\\\\\\\\n          id: '8236jhg',\\\\\\\\n          fromValue: new Date(2020, 9, 23, 9, 45),\\\\\\\\n          toValue: new Date(2020, 9, 23, 10, 45)\\\\\\\\n        },\\\\\\\\n        {\\\\\\\\n          id: '238gjk',\\\\\\\\n          fromValue: new Date(2020, 9, 23, 11, 45),\\\\\\\\n          toValue: new Date(2020, 9, 23, 12, 45)\\\\\\\\n        }\\\\\\\\n      ])}\\\\\\\\n    />\\\\\\\\n  </ThemeWrapper>\\\\\\\\n)\\\\\\\\n\\\\\\\",\\\\\\\"locationsMap\\\\\\\":{}},},\\\\n  title: `${path}/ShiftTimings`,\\\\n  component: ShiftTimings\\\\n}\\\\nconst radioOptions = {\\\\n  timeFormat: { '12 Hour': 12, '24 Hour': 24 }\\\\n}\\\\nexport const withPlayground = addSourceDecorator(() => (\\\\n  <ThemeWrapper>\\\\n    <ShiftTimings\\\\n      fromLabel={text('fromlabel', 'From')}\\\\n      toLabel={text('toLabel', 'To')}\\\\n      // fromError={boolean('fromError', [false])}\\\\n      // toError={boolean('toError', [false])}\\\\n      // fromErrorMessage={text('From Error Message', 'This is required')}\\\\n      // toErrorMessage={text('To Error Message', 'This is required')}\\\\n      timeFormat={\\\\n        radios('Time Format', radioOptions.timeFormat, 24) as tTimeFormat\\\\n      }\\\\n      label='Shift Timings'\\\\n      timeInterval={number('timeInterval', 15)}\\\\n      style={object('style', { width: '800px' })}\\\\n      onFromChange={action('On From Change')}\\\\n      onToChange={action('On TO Change')}\\\\n      onChange={action('Change')}\\\\n      onRemove={action('On Remove Change')}\\\\n      onAdd={action('On Add Change')}\\\\n      selected={object('defaultSelected', [\\\\n        {\\\\n          id: '45890',\\\\n          fromValue: new Date(2020, 9, 23, 7, 45),\\\\n          toValue: new Date(2020, 9, 23, 8, 45)\\\\n        },\\\\n        {\\\\n          id: '8236jhg',\\\\n          fromValue: new Date(2020, 9, 23, 9, 45),\\\\n          toValue: new Date(2020, 9, 23, 10, 45)\\\\n        },\\\\n        {\\\\n          id: '238gjk',\\\\n          fromValue: new Date(2020, 9, 23, 11, 45),\\\\n          toValue: new Date(2020, 9, 23, 12, 45)\\\\n        }\\\\n      ])}\\\\n    />\\\\n  </ThemeWrapper>\\\\n), {__STORY__, __ADDS_MAP__,__MAIN_FILE_LOCATION__,__MODULE_DEPENDENCIES__,__LOCAL_DEPENDENCIES__,__SOURCE_PREFIX__,__IDS_TO_FRAMEWORKS__});\\\";\\n// @ts-ignore\\nvar __ADDS_MAP__ = {};\\n// @ts-ignore\\nvar __MAIN_FILE_LOCATION__ = \\\"/ShowTimings.stories.tsx\\\";\\n// @ts-ignore\\nvar __MODULE_DEPENDENCIES__ = [];\\n// @ts-ignore\\nvar __LOCAL_DEPENDENCIES__ = {};\\n// @ts-ignore\\nvar __IDS_TO_FRAMEWORKS__ = {};\\n        \\n\\n\\n// @ts-nocheck\\n// @ts-ignore\\nvar withSourceLoader = require('@storybook/source-loader/preview').withSource;\\n// @ts-ignore\\nvar addSourceDecorator = require(\\\"@storybook/source-loader/preview\\\").addSource;\\n// @ts-ignore\\nvar __SOURCE_PREFIX__ = \\\"/Users/farhanansari/Desktop/CODE/PrxProject/untitled folder/reactStoryBook/src/components/molecules/ShiftTimings\\\";\\n// @ts-ignore\\nvar __STORY__ = \\\"import React from 'react'\\\\nimport { path } from '..'\\\\n\\\\nimport ThemeWrapper from '../../../utilities/components/ThemeWrapper'\\\\nimport ShiftTimings from '../ShiftTimings'\\\\nimport { tTimeFormat } from '../DatePicker/interfaces'\\\\nimport { radios, number, text, object } from '@storybook/addon-knobs'\\\\nimport { action } from '@storybook/addon-actions'\\\\n\\\\nexport default {\\\\n  title: `${path}/ShiftTimings`,\\\\n  component: ShiftTimings\\\\n}\\\\nconst radioOptions = {\\\\n  timeFormat: { '12 Hour': 12, '24 Hour': 24 }\\\\n}\\\\nexport const withPlayground = () => (\\\\n  <ThemeWrapper>\\\\n    <ShiftTimings\\\\n      fromLabel={text('fromlabel', 'From')}\\\\n      toLabel={text('toLabel', 'To')}\\\\n      // fromError={boolean('fromError', [false])}\\\\n      // toError={boolean('toError', [false])}\\\\n      // fromErrorMessage={text('From Error Message', 'This is required')}\\\\n      // toErrorMessage={text('To Error Message', 'This is required')}\\\\n      timeFormat={\\\\n        radios('Time Format', radioOptions.timeFormat, 24) as tTimeFormat\\\\n      }\\\\n      label='Shift Timings'\\\\n      timeInterval={number('timeInterval', 15)}\\\\n      style={object('style', { width: '800px' })}\\\\n      onFromChange={action('On From Change')}\\\\n      onToChange={action('On TO Change')}\\\\n      onChange={action('Change')}\\\\n      onRemove={action('On Remove Change')}\\\\n      onAdd={action('On Add Change')}\\\\n      selected={object('defaultSelected', [\\\\n        {\\\\n          id: '45890',\\\\n          fromValue: new Date(2020, 9, 23, 7, 45),\\\\n          toValue: new Date(2020, 9, 23, 8, 45)\\\\n        },\\\\n        {\\\\n          id: '8236jhg',\\\\n          fromValue: new Date(2020, 9, 23, 9, 45),\\\\n          toValue: new Date(2020, 9, 23, 10, 45)\\\\n        },\\\\n        {\\\\n          id: '238gjk',\\\\n          fromValue: new Date(2020, 9, 23, 11, 45),\\\\n          toValue: new Date(2020, 9, 23, 12, 45)\\\\n        }\\\\n      ])}\\\\n    />\\\\n  </ThemeWrapper>\\\\n)\\\\n\\\";\\n// @ts-ignore\\nvar __ADDS_MAP__ = {};\\n// @ts-ignore\\nvar __MAIN_FILE_LOCATION__ = \\\"/ShowTimings.stories.tsx\\\";\\n// @ts-ignore\\nvar __MODULE_DEPENDENCIES__ = [];\\n// @ts-ignore\\nvar __LOCAL_DEPENDENCIES__ = {};\\n// @ts-ignore\\nvar __IDS_TO_FRAMEWORKS__ = {};\\n        \\nimport React from 'react'\\nimport { path } from '..'\\n\\nimport ThemeWrapper from '../../../utilities/components/ThemeWrapper'\\nimport ShiftTimings from '../ShiftTimings'\\nimport { tTimeFormat } from '../DatePicker/interfaces'\\nimport { radios, number, text, object } from '@storybook/addon-knobs'\\nimport { action } from '@storybook/addon-actions'\\n\\nexport default {parameters: {\\\"storySource\\\":{\\\"source\\\":\\\"\\\\n\\\\n// @ts-nocheck\\\\n// @ts-ignore\\\\nvar withSourceLoader = require('@storybook/source-loader/preview').withSource;\\\\n// @ts-ignore\\\\nvar addSourceDecorator = require(\\\\\\\"@storybook/source-loader/preview\\\\\\\").addSource;\\\\n// @ts-ignore\\\\nvar __SOURCE_PREFIX__ = \\\\\\\"/Users/farhanansari/Desktop/CODE/PrxProject/untitled folder/reactStoryBook/src/components/molecules/ShiftTimings\\\\\\\";\\\\n// @ts-ignore\\\\nvar __STORY__ = \\\\\\\"import React from 'react'\\\\\\\\nimport { path } from '..'\\\\\\\\n\\\\\\\\nimport ThemeWrapper from '../../../utilities/components/ThemeWrapper'\\\\\\\\nimport ShiftTimings from '../ShiftTimings'\\\\\\\\nimport { tTimeFormat } from '../DatePicker/interfaces'\\\\\\\\nimport { radios, number, text, object } from '@storybook/addon-knobs'\\\\\\\\nimport { action } from '@storybook/addon-actions'\\\\\\\\n\\\\\\\\nexport default {\\\\\\\\n  title: `${path}/ShiftTimings`,\\\\\\\\n  component: ShiftTimings\\\\\\\\n}\\\\\\\\nconst radioOptions = {\\\\\\\\n  timeFormat: { '12 Hour': 12, '24 Hour': 24 }\\\\\\\\n}\\\\\\\\nexport const withPlayground = () => (\\\\\\\\n  <ThemeWrapper>\\\\\\\\n    <ShiftTimings\\\\\\\\n      fromLabel={text('fromlabel', 'From')}\\\\\\\\n      toLabel={text('toLabel', 'To')}\\\\\\\\n      // fromError={boolean('fromError', [false])}\\\\\\\\n      // toError={boolean('toError', [false])}\\\\\\\\n      // fromErrorMessage={text('From Error Message', 'This is required')}\\\\\\\\n      // toErrorMessage={text('To Error Message', 'This is required')}\\\\\\\\n      timeFormat={\\\\\\\\n        radios('Time Format', radioOptions.timeFormat, 24) as tTimeFormat\\\\\\\\n      }\\\\\\\\n      label='Shift Timings'\\\\\\\\n      timeInterval={number('timeInterval', 15)}\\\\\\\\n      style={object('style', { width: '800px' })}\\\\\\\\n      onFromChange={action('On From Change')}\\\\\\\\n      onToChange={action('On TO Change')}\\\\\\\\n      onChange={action('Change')}\\\\\\\\n      onRemove={action('On Remove Change')}\\\\\\\\n      onAdd={action('On Add Change')}\\\\\\\\n      selected={object('defaultSelected', [\\\\\\\\n        {\\\\\\\\n          id: '45890',\\\\\\\\n          fromValue: new Date(2020, 9, 23, 7, 45),\\\\\\\\n          toValue: new Date(2020, 9, 23, 8, 45)\\\\\\\\n        },\\\\\\\\n        {\\\\\\\\n          id: '8236jhg',\\\\\\\\n          fromValue: new Date(2020, 9, 23, 9, 45),\\\\\\\\n          toValue: new Date(2020, 9, 23, 10, 45)\\\\\\\\n        },\\\\\\\\n        {\\\\\\\\n          id: '238gjk',\\\\\\\\n          fromValue: new Date(2020, 9, 23, 11, 45),\\\\\\\\n          toValue: new Date(2020, 9, 23, 12, 45)\\\\\\\\n        }\\\\\\\\n      ])}\\\\\\\\n    />\\\\\\\\n  </ThemeWrapper>\\\\\\\\n)\\\\\\\\n\\\\\\\";\\\\n// @ts-ignore\\\\nvar __ADDS_MAP__ = {};\\\\n// @ts-ignore\\\\nvar __MAIN_FILE_LOCATION__ = \\\\\\\"/ShowTimings.stories.tsx\\\\\\\";\\\\n// @ts-ignore\\\\nvar __MODULE_DEPENDENCIES__ = [];\\\\n// @ts-ignore\\\\nvar __LOCAL_DEPENDENCIES__ = {};\\\\n// @ts-ignore\\\\nvar __IDS_TO_FRAMEWORKS__ = {};\\\\n        \\\\nimport React from 'react'\\\\nimport { path } from '..'\\\\n\\\\nimport ThemeWrapper from '../../../utilities/components/ThemeWrapper'\\\\nimport ShiftTimings from '../ShiftTimings'\\\\nimport { tTimeFormat } from '../DatePicker/interfaces'\\\\nimport { radios, number, text, object } from '@storybook/addon-knobs'\\\\nimport { action } from '@storybook/addon-actions'\\\\n\\\\nexport default {parameters: {\\\\\\\"storySource\\\\\\\":{\\\\\\\"source\\\\\\\":\\\\\\\"import React from 'react'\\\\\\\\nimport { path } from '..'\\\\\\\\n\\\\\\\\nimport ThemeWrapper from '../../../utilities/components/ThemeWrapper'\\\\\\\\nimport ShiftTimings from '../ShiftTimings'\\\\\\\\nimport { tTimeFormat } from '../DatePicker/interfaces'\\\\\\\\nimport { radios, number, text, object } from '@storybook/addon-knobs'\\\\\\\\nimport { action } from '@storybook/addon-actions'\\\\\\\\n\\\\\\\\nexport default {\\\\\\\\n  title: `${path}/ShiftTimings`,\\\\\\\\n  component: ShiftTimings\\\\\\\\n}\\\\\\\\nconst radioOptions = {\\\\\\\\n  timeFormat: { '12 Hour': 12, '24 Hour': 24 }\\\\\\\\n}\\\\\\\\nexport const withPlayground = () => (\\\\\\\\n  <ThemeWrapper>\\\\\\\\n    <ShiftTimings\\\\\\\\n      fromLabel={text('fromlabel', 'From')}\\\\\\\\n      toLabel={text('toLabel', 'To')}\\\\\\\\n      // fromError={boolean('fromError', [false])}\\\\\\\\n      // toError={boolean('toError', [false])}\\\\\\\\n      // fromErrorMessage={text('From Error Message', 'This is required')}\\\\\\\\n      // toErrorMessage={text('To Error Message', 'This is required')}\\\\\\\\n      timeFormat={\\\\\\\\n        radios('Time Format', radioOptions.timeFormat, 24) as tTimeFormat\\\\\\\\n      }\\\\\\\\n      label='Shift Timings'\\\\\\\\n      timeInterval={number('timeInterval', 15)}\\\\\\\\n      style={object('style', { width: '800px' })}\\\\\\\\n      onFromChange={action('On From Change')}\\\\\\\\n      onToChange={action('On TO Change')}\\\\\\\\n      onChange={action('Change')}\\\\\\\\n      onRemove={action('On Remove Change')}\\\\\\\\n      onAdd={action('On Add Change')}\\\\\\\\n      selected={object('defaultSelected', [\\\\\\\\n        {\\\\\\\\n          id: '45890',\\\\\\\\n          fromValue: new Date(2020, 9, 23, 7, 45),\\\\\\\\n          toValue: new Date(2020, 9, 23, 8, 45)\\\\\\\\n        },\\\\\\\\n        {\\\\\\\\n          id: '8236jhg',\\\\\\\\n          fromValue: new Date(2020, 9, 23, 9, 45),\\\\\\\\n          toValue: new Date(2020, 9, 23, 10, 45)\\\\\\\\n        },\\\\\\\\n        {\\\\\\\\n          id: '238gjk',\\\\\\\\n          fromValue: new Date(2020, 9, 23, 11, 45),\\\\\\\\n          toValue: new Date(2020, 9, 23, 12, 45)\\\\\\\\n        }\\\\\\\\n      ])}\\\\\\\\n    />\\\\\\\\n  </ThemeWrapper>\\\\\\\\n)\\\\\\\\n\\\\\\\",\\\\\\\"locationsMap\\\\\\\":{}},},\\\\n  title: `${path}/ShiftTimings`,\\\\n  component: ShiftTimings\\\\n}\\\\nconst radioOptions = {\\\\n  timeFormat: { '12 Hour': 12, '24 Hour': 24 }\\\\n}\\\\nexport const withPlayground = addSourceDecorator(() => (\\\\n  <ThemeWrapper>\\\\n    <ShiftTimings\\\\n      fromLabel={text('fromlabel', 'From')}\\\\n      toLabel={text('toLabel', 'To')}\\\\n      // fromError={boolean('fromError', [false])}\\\\n      // toError={boolean('toError', [false])}\\\\n      // fromErrorMessage={text('From Error Message', 'This is required')}\\\\n      // toErrorMessage={text('To Error Message', 'This is required')}\\\\n      timeFormat={\\\\n        radios('Time Format', radioOptions.timeFormat, 24) as tTimeFormat\\\\n      }\\\\n      label='Shift Timings'\\\\n      timeInterval={number('timeInterval', 15)}\\\\n      style={object('style', { width: '800px' })}\\\\n      onFromChange={action('On From Change')}\\\\n      onToChange={action('On TO Change')}\\\\n      onChange={action('Change')}\\\\n      onRemove={action('On Remove Change')}\\\\n      onAdd={action('On Add Change')}\\\\n      selected={object('defaultSelected', [\\\\n        {\\\\n          id: '45890',\\\\n          fromValue: new Date(2020, 9, 23, 7, 45),\\\\n          toValue: new Date(2020, 9, 23, 8, 45)\\\\n        },\\\\n        {\\\\n          id: '8236jhg',\\\\n          fromValue: new Date(2020, 9, 23, 9, 45),\\\\n          toValue: new Date(2020, 9, 23, 10, 45)\\\\n        },\\\\n        {\\\\n          id: '238gjk',\\\\n          fromValue: new Date(2020, 9, 23, 11, 45),\\\\n          toValue: new Date(2020, 9, 23, 12, 45)\\\\n        }\\\\n      ])}\\\\n    />\\\\n  </ThemeWrapper>\\\\n), {__STORY__, __ADDS_MAP__,__MAIN_FILE_LOCATION__,__MODULE_DEPENDENCIES__,__LOCAL_DEPENDENCIES__,__SOURCE_PREFIX__,__IDS_TO_FRAMEWORKS__});\\\",\\\"locationsMap\\\":{}},\\\"storySource\\\":{\\\"source\\\":\\\"import React from 'react'\\\\nimport { path } from '..'\\\\n\\\\nimport ThemeWrapper from '../../../utilities/components/ThemeWrapper'\\\\nimport ShiftTimings from '../ShiftTimings'\\\\nimport { tTimeFormat } from '../DatePicker/interfaces'\\\\nimport { radios, number, text, object } from '@storybook/addon-knobs'\\\\nimport { action } from '@storybook/addon-actions'\\\\n\\\\nexport default {\\\\n  title: `${path}/ShiftTimings`,\\\\n  component: ShiftTimings\\\\n}\\\\nconst radioOptions = {\\\\n  timeFormat: { '12 Hour': 12, '24 Hour': 24 }\\\\n}\\\\nexport const withPlayground = () => (\\\\n  <ThemeWrapper>\\\\n    <ShiftTimings\\\\n      fromLabel={text('fromlabel', 'From')}\\\\n      toLabel={text('toLabel', 'To')}\\\\n      // fromError={boolean('fromError', [false])}\\\\n      // toError={boolean('toError', [false])}\\\\n      // fromErrorMessage={text('From Error Message', 'This is required')}\\\\n      // toErrorMessage={text('To Error Message', 'This is required')}\\\\n      timeFormat={\\\\n        radios('Time Format', radioOptions.timeFormat, 24) as tTimeFormat\\\\n      }\\\\n      label='Shift Timings'\\\\n      timeInterval={number('timeInterval', 15)}\\\\n      style={object('style', { width: '800px' })}\\\\n      onFromChange={action('On From Change')}\\\\n      onToChange={action('On TO Change')}\\\\n      onChange={action('Change')}\\\\n      onRemove={action('On Remove Change')}\\\\n      onAdd={action('On Add Change')}\\\\n      selected={object('defaultSelected', [\\\\n        {\\\\n          id: '45890',\\\\n          fromValue: new Date(2020, 9, 23, 7, 45),\\\\n          toValue: new Date(2020, 9, 23, 8, 45)\\\\n        },\\\\n        {\\\\n          id: '8236jhg',\\\\n          fromValue: new Date(2020, 9, 23, 9, 45),\\\\n          toValue: new Date(2020, 9, 23, 10, 45)\\\\n        },\\\\n        {\\\\n          id: '238gjk',\\\\n          fromValue: new Date(2020, 9, 23, 11, 45),\\\\n          toValue: new Date(2020, 9, 23, 12, 45)\\\\n        }\\\\n      ])}\\\\n    />\\\\n  </ThemeWrapper>\\\\n)\\\\n\\\",\\\"locationsMap\\\":{}},},\\n  title: `${path}/ShiftTimings`,\\n  component: ShiftTimings\\n}\\nconst radioOptions = {\\n  timeFormat: { '12 Hour': 12, '24 Hour': 24 }\\n}\\nexport const withPlayground = addSourceDecorator(addSourceDecorator(() => (\\n  <ThemeWrapper>\\n    <ShiftTimings\\n      fromLabel={text('fromlabel', 'From')}\\n      toLabel={text('toLabel', 'To')}\\n      // fromError={boolean('fromError', [false])}\\n      // toError={boolean('toError', [false])}\\n      // fromErrorMessage={text('From Error Message', 'This is required')}\\n      // toErrorMessage={text('To Error Message', 'This is required')}\\n      timeFormat={\\n        radios('Time Format', radioOptions.timeFormat, 24) as tTimeFormat\\n      }\\n      label='Shift Timings'\\n      timeInterval={number('timeInterval', 15)}\\n      style={object('style', { width: '800px' })}\\n      onFromChange={action('On From Change')}\\n      onToChange={action('On TO Change')}\\n      onChange={action('Change')}\\n      onRemove={action('On Remove Change')}\\n      onAdd={action('On Add Change')}\\n      selected={object('defaultSelected', [\\n        {\\n          id: '45890',\\n          fromValue: new Date(2020, 9, 23, 7, 45),\\n          toValue: new Date(2020, 9, 23, 8, 45)\\n        },\\n        {\\n          id: '8236jhg',\\n          fromValue: new Date(2020, 9, 23, 9, 45),\\n          toValue: new Date(2020, 9, 23, 10, 45)\\n        },\\n        {\\n          id: '238gjk',\\n          fromValue: new Date(2020, 9, 23, 11, 45),\\n          toValue: new Date(2020, 9, 23, 12, 45)\\n        }\\n      ])}\\n    />\\n  </ThemeWrapper>\\n), {__STORY__, __ADDS_MAP__,__MAIN_FILE_LOCATION__,__MODULE_DEPENDENCIES__,__LOCAL_DEPENDENCIES__,__SOURCE_PREFIX__,__IDS_TO_FRAMEWORKS__}), {__STORY__, __ADDS_MAP__,__MAIN_FILE_LOCATION__,__MODULE_DEPENDENCIES__,__LOCAL_DEPENDENCIES__,__SOURCE_PREFIX__,__IDS_TO_FRAMEWORKS__});\";\n// @ts-ignore\nvar __ADDS_MAP__ = {};\n// @ts-ignore\nvar __MAIN_FILE_LOCATION__ = \"/ShowTimings.stories.tsx\";\n// @ts-ignore\nvar __MODULE_DEPENDENCIES__ = [];\n// @ts-ignore\nvar __LOCAL_DEPENDENCIES__ = {};\n// @ts-ignore\nvar __IDS_TO_FRAMEWORKS__ = {};\n        \n\n/* eslint-disable */\n// @ts-nocheck\n// @ts-ignore\nvar withSourceLoader = require('@storybook/source-loader/preview').withSource;\n// @ts-ignore\nvar addSourceDecorator = require(\"@storybook/source-loader/preview\").addSource;\n// @ts-ignore\nvar __SOURCE_PREFIX__ = \"/Users/farhanansari/Desktop/CODE/PrxProject/untitled folder/reactStoryBook/src/components/molecules/ShiftTimings\";\n// @ts-ignore\nvar __STORY__ = \"\\n\\n// @ts-nocheck\\n// @ts-ignore\\nvar withSourceLoader = require('@storybook/source-loader/preview').withSource;\\n// @ts-ignore\\nvar addSourceDecorator = require(\\\"@storybook/source-loader/preview\\\").addSource;\\n// @ts-ignore\\nvar __SOURCE_PREFIX__ = \\\"/Users/farhanansari/Desktop/CODE/PrxProject/untitled folder/reactStoryBook/src/components/molecules/ShiftTimings\\\";\\n// @ts-ignore\\nvar __STORY__ = \\\"import React from 'react'\\\\nimport { path } from '..'\\\\n\\\\nimport ThemeWrapper from '../../../utilities/components/ThemeWrapper'\\\\nimport ShiftTimings from '../ShiftTimings'\\\\nimport { tTimeFormat } from '../DatePicker/interfaces'\\\\nimport { radios, number, text, object } from '@storybook/addon-knobs'\\\\nimport { action } from '@storybook/addon-actions'\\\\n\\\\nexport default {\\\\n  title: `${path}/ShiftTimings`,\\\\n  component: ShiftTimings\\\\n}\\\\nconst radioOptions = {\\\\n  timeFormat: { '12 Hour': 12, '24 Hour': 24 }\\\\n}\\\\nexport const withPlayground = () => (\\\\n  <ThemeWrapper>\\\\n    <ShiftTimings\\\\n      fromLabel={text('fromlabel', 'From')}\\\\n      toLabel={text('toLabel', 'To')}\\\\n      // fromError={boolean('fromError', [false])}\\\\n      // toError={boolean('toError', [false])}\\\\n      // fromErrorMessage={text('From Error Message', 'This is required')}\\\\n      // toErrorMessage={text('To Error Message', 'This is required')}\\\\n      timeFormat={\\\\n        radios('Time Format', radioOptions.timeFormat, 24) as tTimeFormat\\\\n      }\\\\n      label='Shift Timings'\\\\n      timeInterval={number('timeInterval', 15)}\\\\n      style={object('style', { width: '800px' })}\\\\n      onFromChange={action('On From Change')}\\\\n      onToChange={action('On TO Change')}\\\\n      onChange={action('Change')}\\\\n      onRemove={action('On Remove Change')}\\\\n      onAdd={action('On Add Change')}\\\\n      selected={object('defaultSelected', [\\\\n        {\\\\n          id: '45890',\\\\n          fromValue: new Date(2020, 9, 23, 7, 45),\\\\n          toValue: new Date(2020, 9, 23, 8, 45)\\\\n        },\\\\n        {\\\\n          id: '8236jhg',\\\\n          fromValue: new Date(2020, 9, 23, 9, 45),\\\\n          toValue: new Date(2020, 9, 23, 10, 45)\\\\n        },\\\\n        {\\\\n          id: '238gjk',\\\\n          fromValue: new Date(2020, 9, 23, 11, 45),\\\\n          toValue: new Date(2020, 9, 23, 12, 45)\\\\n        }\\\\n      ])}\\\\n    />\\\\n  </ThemeWrapper>\\\\n)\\\\n\\\";\\n// @ts-ignore\\nvar __ADDS_MAP__ = {};\\n// @ts-ignore\\nvar __MAIN_FILE_LOCATION__ = \\\"/ShowTimings.stories.tsx\\\";\\n// @ts-ignore\\nvar __MODULE_DEPENDENCIES__ = [];\\n// @ts-ignore\\nvar __LOCAL_DEPENDENCIES__ = {};\\n// @ts-ignore\\nvar __IDS_TO_FRAMEWORKS__ = {};\\n        \\nimport React from 'react'\\nimport { path } from '..'\\n\\nimport ThemeWrapper from '../../../utilities/components/ThemeWrapper'\\nimport ShiftTimings from '../ShiftTimings'\\nimport { tTimeFormat } from '../DatePicker/interfaces'\\nimport { radios, number, text, object } from '@storybook/addon-knobs'\\nimport { action } from '@storybook/addon-actions'\\n\\nexport default {parameters: {\\\"storySource\\\":{\\\"source\\\":\\\"import React from 'react'\\\\nimport { path } from '..'\\\\n\\\\nimport ThemeWrapper from '../../../utilities/components/ThemeWrapper'\\\\nimport ShiftTimings from '../ShiftTimings'\\\\nimport { tTimeFormat } from '../DatePicker/interfaces'\\\\nimport { radios, number, text, object } from '@storybook/addon-knobs'\\\\nimport { action } from '@storybook/addon-actions'\\\\n\\\\nexport default {\\\\n  title: `${path}/ShiftTimings`,\\\\n  component: ShiftTimings\\\\n}\\\\nconst radioOptions = {\\\\n  timeFormat: { '12 Hour': 12, '24 Hour': 24 }\\\\n}\\\\nexport const withPlayground = () => (\\\\n  <ThemeWrapper>\\\\n    <ShiftTimings\\\\n      fromLabel={text('fromlabel', 'From')}\\\\n      toLabel={text('toLabel', 'To')}\\\\n      // fromError={boolean('fromError', [false])}\\\\n      // toError={boolean('toError', [false])}\\\\n      // fromErrorMessage={text('From Error Message', 'This is required')}\\\\n      // toErrorMessage={text('To Error Message', 'This is required')}\\\\n      timeFormat={\\\\n        radios('Time Format', radioOptions.timeFormat, 24) as tTimeFormat\\\\n      }\\\\n      label='Shift Timings'\\\\n      timeInterval={number('timeInterval', 15)}\\\\n      style={object('style', { width: '800px' })}\\\\n      onFromChange={action('On From Change')}\\\\n      onToChange={action('On TO Change')}\\\\n      onChange={action('Change')}\\\\n      onRemove={action('On Remove Change')}\\\\n      onAdd={action('On Add Change')}\\\\n      selected={object('defaultSelected', [\\\\n        {\\\\n          id: '45890',\\\\n          fromValue: new Date(2020, 9, 23, 7, 45),\\\\n          toValue: new Date(2020, 9, 23, 8, 45)\\\\n        },\\\\n        {\\\\n          id: '8236jhg',\\\\n          fromValue: new Date(2020, 9, 23, 9, 45),\\\\n          toValue: new Date(2020, 9, 23, 10, 45)\\\\n        },\\\\n        {\\\\n          id: '238gjk',\\\\n          fromValue: new Date(2020, 9, 23, 11, 45),\\\\n          toValue: new Date(2020, 9, 23, 12, 45)\\\\n        }\\\\n      ])}\\\\n    />\\\\n  </ThemeWrapper>\\\\n)\\\\n\\\",\\\"locationsMap\\\":{}},},\\n  title: `${path}/ShiftTimings`,\\n  component: ShiftTimings\\n}\\nconst radioOptions = {\\n  timeFormat: { '12 Hour': 12, '24 Hour': 24 }\\n}\\nexport const withPlayground = addSourceDecorator(() => (\\n  <ThemeWrapper>\\n    <ShiftTimings\\n      fromLabel={text('fromlabel', 'From')}\\n      toLabel={text('toLabel', 'To')}\\n      // fromError={boolean('fromError', [false])}\\n      // toError={boolean('toError', [false])}\\n      // fromErrorMessage={text('From Error Message', 'This is required')}\\n      // toErrorMessage={text('To Error Message', 'This is required')}\\n      timeFormat={\\n        radios('Time Format', radioOptions.timeFormat, 24) as tTimeFormat\\n      }\\n      label='Shift Timings'\\n      timeInterval={number('timeInterval', 15)}\\n      style={object('style', { width: '800px' })}\\n      onFromChange={action('On From Change')}\\n      onToChange={action('On TO Change')}\\n      onChange={action('Change')}\\n      onRemove={action('On Remove Change')}\\n      onAdd={action('On Add Change')}\\n      selected={object('defaultSelected', [\\n        {\\n          id: '45890',\\n          fromValue: new Date(2020, 9, 23, 7, 45),\\n          toValue: new Date(2020, 9, 23, 8, 45)\\n        },\\n        {\\n          id: '8236jhg',\\n          fromValue: new Date(2020, 9, 23, 9, 45),\\n          toValue: new Date(2020, 9, 23, 10, 45)\\n        },\\n        {\\n          id: '238gjk',\\n          fromValue: new Date(2020, 9, 23, 11, 45),\\n          toValue: new Date(2020, 9, 23, 12, 45)\\n        }\\n      ])}\\n    />\\n  </ThemeWrapper>\\n), {__STORY__, __ADDS_MAP__,__MAIN_FILE_LOCATION__,__MODULE_DEPENDENCIES__,__LOCAL_DEPENDENCIES__,__SOURCE_PREFIX__,__IDS_TO_FRAMEWORKS__});\";\n// @ts-ignore\nvar __ADDS_MAP__ = {};\n// @ts-ignore\nvar __MAIN_FILE_LOCATION__ = \"/ShowTimings.stories.tsx\";\n// @ts-ignore\nvar __MODULE_DEPENDENCIES__ = [];\n// @ts-ignore\nvar __LOCAL_DEPENDENCIES__ = {};\n// @ts-ignore\nvar __IDS_TO_FRAMEWORKS__ = {};\n        \n\n/* eslint-disable */\n// @ts-nocheck\n// @ts-ignore\nvar withSourceLoader = require('@storybook/source-loader/preview').withSource;\n// @ts-ignore\nvar addSourceDecorator = require(\"@storybook/source-loader/preview\").addSource;\n// @ts-ignore\nvar __SOURCE_PREFIX__ = \"/Users/farhanansari/Desktop/CODE/PrxProject/untitled folder/reactStoryBook/src/components/molecules/ShiftTimings\";\n// @ts-ignore\nvar __STORY__ = \"import React from 'react'\\nimport { path } from '..'\\n\\nimport ThemeWrapper from '../../../utilities/components/ThemeWrapper'\\nimport ShiftTimings from '../ShiftTimings'\\nimport { tTimeFormat } from '../DatePicker/interfaces'\\nimport { radios, number, text, object } from '@storybook/addon-knobs'\\nimport { action } from '@storybook/addon-actions'\\n\\nexport default {\\n  title: `${path}/ShiftTimings`,\\n  component: ShiftTimings\\n}\\nconst radioOptions = {\\n  timeFormat: { '12 Hour': 12, '24 Hour': 24 }\\n}\\nexport const withPlayground = () => (\\n  <ThemeWrapper>\\n    <ShiftTimings\\n      fromLabel={text('fromlabel', 'From')}\\n      toLabel={text('toLabel', 'To')}\\n      // fromError={boolean('fromError', [false])}\\n      // toError={boolean('toError', [false])}\\n      // fromErrorMessage={text('From Error Message', 'This is required')}\\n      // toErrorMessage={text('To Error Message', 'This is required')}\\n      timeFormat={\\n        radios('Time Format', radioOptions.timeFormat, 24) as tTimeFormat\\n      }\\n      label='Shift Timings'\\n      timeInterval={number('timeInterval', 15)}\\n      style={object('style', { width: '800px' })}\\n      onFromChange={action('On From Change')}\\n      onToChange={action('On TO Change')}\\n      onChange={action('Change')}\\n      onRemove={action('On Remove Change')}\\n      onAdd={action('On Add Change')}\\n      selected={object('defaultSelected', [\\n        {\\n          id: '45890',\\n          fromValue: new Date(2020, 9, 23, 7, 45),\\n          toValue: new Date(2020, 9, 23, 8, 45)\\n        },\\n        {\\n          id: '8236jhg',\\n          fromValue: new Date(2020, 9, 23, 9, 45),\\n          toValue: new Date(2020, 9, 23, 10, 45)\\n        },\\n        {\\n          id: '238gjk',\\n          fromValue: new Date(2020, 9, 23, 11, 45),\\n          toValue: new Date(2020, 9, 23, 12, 45)\\n        }\\n      ])}\\n    />\\n  </ThemeWrapper>\\n)\\n\";\n// @ts-ignore\nvar __ADDS_MAP__ = {};\n// @ts-ignore\nvar __MAIN_FILE_LOCATION__ = \"/ShowTimings.stories.tsx\";\n// @ts-ignore\nvar __MODULE_DEPENDENCIES__ = [];\n// @ts-ignore\nvar __LOCAL_DEPENDENCIES__ = {};\n// @ts-ignore\nvar __IDS_TO_FRAMEWORKS__ = {};\n        \nimport React from 'react'\nimport { path } from '..'\n\nimport ThemeWrapper from '../../../utilities/components/ThemeWrapper'\nimport ShiftTimings from '../ShiftTimings'\nimport { tTimeFormat } from '../DatePicker/interfaces'\nimport { radios, number, text, object } from '@storybook/addon-knobs'\nimport { action } from '@storybook/addon-actions'\n\nexport default {parameters: {\"storySource\":{\"source\":\"\\n\\n// @ts-nocheck\\n// @ts-ignore\\nvar withSourceLoader = require('@storybook/source-loader/preview').withSource;\\n// @ts-ignore\\nvar addSourceDecorator = require(\\\"@storybook/source-loader/preview\\\").addSource;\\n// @ts-ignore\\nvar __SOURCE_PREFIX__ = \\\"/Users/farhanansari/Desktop/CODE/PrxProject/untitled folder/reactStoryBook/src/components/molecules/ShiftTimings\\\";\\n// @ts-ignore\\nvar __STORY__ = \\\"\\\\n\\\\n// @ts-nocheck\\\\n// @ts-ignore\\\\nvar withSourceLoader = require('@storybook/source-loader/preview').withSource;\\\\n// @ts-ignore\\\\nvar addSourceDecorator = require(\\\\\\\"@storybook/source-loader/preview\\\\\\\").addSource;\\\\n// @ts-ignore\\\\nvar __SOURCE_PREFIX__ = \\\\\\\"/Users/farhanansari/Desktop/CODE/PrxProject/untitled folder/reactStoryBook/src/components/molecules/ShiftTimings\\\\\\\";\\\\n// @ts-ignore\\\\nvar __STORY__ = \\\\\\\"import React from 'react'\\\\\\\\nimport { path } from '..'\\\\\\\\n\\\\\\\\nimport ThemeWrapper from '../../../utilities/components/ThemeWrapper'\\\\\\\\nimport ShiftTimings from '../ShiftTimings'\\\\\\\\nimport { tTimeFormat } from '../DatePicker/interfaces'\\\\\\\\nimport { radios, number, text, object } from '@storybook/addon-knobs'\\\\\\\\nimport { action } from '@storybook/addon-actions'\\\\\\\\n\\\\\\\\nexport default {\\\\\\\\n  title: `${path}/ShiftTimings`,\\\\\\\\n  component: ShiftTimings\\\\\\\\n}\\\\\\\\nconst radioOptions = {\\\\\\\\n  timeFormat: { '12 Hour': 12, '24 Hour': 24 }\\\\\\\\n}\\\\\\\\nexport const withPlayground = () => (\\\\\\\\n  <ThemeWrapper>\\\\\\\\n    <ShiftTimings\\\\\\\\n      fromLabel={text('fromlabel', 'From')}\\\\\\\\n      toLabel={text('toLabel', 'To')}\\\\\\\\n      // fromError={boolean('fromError', [false])}\\\\\\\\n      // toError={boolean('toError', [false])}\\\\\\\\n      // fromErrorMessage={text('From Error Message', 'This is required')}\\\\\\\\n      // toErrorMessage={text('To Error Message', 'This is required')}\\\\\\\\n      timeFormat={\\\\\\\\n        radios('Time Format', radioOptions.timeFormat, 24) as tTimeFormat\\\\\\\\n      }\\\\\\\\n      label='Shift Timings'\\\\\\\\n      timeInterval={number('timeInterval', 15)}\\\\\\\\n      style={object('style', { width: '800px' })}\\\\\\\\n      onFromChange={action('On From Change')}\\\\\\\\n      onToChange={action('On TO Change')}\\\\\\\\n      onChange={action('Change')}\\\\\\\\n      onRemove={action('On Remove Change')}\\\\\\\\n      onAdd={action('On Add Change')}\\\\\\\\n      selected={object('defaultSelected', [\\\\\\\\n        {\\\\\\\\n          id: '45890',\\\\\\\\n          fromValue: new Date(2020, 9, 23, 7, 45),\\\\\\\\n          toValue: new Date(2020, 9, 23, 8, 45)\\\\\\\\n        },\\\\\\\\n        {\\\\\\\\n          id: '8236jhg',\\\\\\\\n          fromValue: new Date(2020, 9, 23, 9, 45),\\\\\\\\n          toValue: new Date(2020, 9, 23, 10, 45)\\\\\\\\n        },\\\\\\\\n        {\\\\\\\\n          id: '238gjk',\\\\\\\\n          fromValue: new Date(2020, 9, 23, 11, 45),\\\\\\\\n          toValue: new Date(2020, 9, 23, 12, 45)\\\\\\\\n        }\\\\\\\\n      ])}\\\\\\\\n    />\\\\\\\\n  </ThemeWrapper>\\\\\\\\n)\\\\\\\\n\\\\\\\";\\\\n// @ts-ignore\\\\nvar __ADDS_MAP__ = {};\\\\n// @ts-ignore\\\\nvar __MAIN_FILE_LOCATION__ = \\\\\\\"/ShowTimings.stories.tsx\\\\\\\";\\\\n// @ts-ignore\\\\nvar __MODULE_DEPENDENCIES__ = [];\\\\n// @ts-ignore\\\\nvar __LOCAL_DEPENDENCIES__ = {};\\\\n// @ts-ignore\\\\nvar __IDS_TO_FRAMEWORKS__ = {};\\\\n        \\\\nimport React from 'react'\\\\nimport { path } from '..'\\\\n\\\\nimport ThemeWrapper from '../../../utilities/components/ThemeWrapper'\\\\nimport ShiftTimings from '../ShiftTimings'\\\\nimport { tTimeFormat } from '../DatePicker/interfaces'\\\\nimport { radios, number, text, object } from '@storybook/addon-knobs'\\\\nimport { action } from '@storybook/addon-actions'\\\\n\\\\nexport default {parameters: {\\\\\\\"storySource\\\\\\\":{\\\\\\\"source\\\\\\\":\\\\\\\"import React from 'react'\\\\\\\\nimport { path } from '..'\\\\\\\\n\\\\\\\\nimport ThemeWrapper from '../../../utilities/components/ThemeWrapper'\\\\\\\\nimport ShiftTimings from '../ShiftTimings'\\\\\\\\nimport { tTimeFormat } from '../DatePicker/interfaces'\\\\\\\\nimport { radios, number, text, object } from '@storybook/addon-knobs'\\\\\\\\nimport { action } from '@storybook/addon-actions'\\\\\\\\n\\\\\\\\nexport default {\\\\\\\\n  title: `${path}/ShiftTimings`,\\\\\\\\n  component: ShiftTimings\\\\\\\\n}\\\\\\\\nconst radioOptions = {\\\\\\\\n  timeFormat: { '12 Hour': 12, '24 Hour': 24 }\\\\\\\\n}\\\\\\\\nexport const withPlayground = () => (\\\\\\\\n  <ThemeWrapper>\\\\\\\\n    <ShiftTimings\\\\\\\\n      fromLabel={text('fromlabel', 'From')}\\\\\\\\n      toLabel={text('toLabel', 'To')}\\\\\\\\n      // fromError={boolean('fromError', [false])}\\\\\\\\n      // toError={boolean('toError', [false])}\\\\\\\\n      // fromErrorMessage={text('From Error Message', 'This is required')}\\\\\\\\n      // toErrorMessage={text('To Error Message', 'This is required')}\\\\\\\\n      timeFormat={\\\\\\\\n        radios('Time Format', radioOptions.timeFormat, 24) as tTimeFormat\\\\\\\\n      }\\\\\\\\n      label='Shift Timings'\\\\\\\\n      timeInterval={number('timeInterval', 15)}\\\\\\\\n      style={object('style', { width: '800px' })}\\\\\\\\n      onFromChange={action('On From Change')}\\\\\\\\n      onToChange={action('On TO Change')}\\\\\\\\n      onChange={action('Change')}\\\\\\\\n      onRemove={action('On Remove Change')}\\\\\\\\n      onAdd={action('On Add Change')}\\\\\\\\n      selected={object('defaultSelected', [\\\\\\\\n        {\\\\\\\\n          id: '45890',\\\\\\\\n          fromValue: new Date(2020, 9, 23, 7, 45),\\\\\\\\n          toValue: new Date(2020, 9, 23, 8, 45)\\\\\\\\n        },\\\\\\\\n        {\\\\\\\\n          id: '8236jhg',\\\\\\\\n          fromValue: new Date(2020, 9, 23, 9, 45),\\\\\\\\n          toValue: new Date(2020, 9, 23, 10, 45)\\\\\\\\n        },\\\\\\\\n        {\\\\\\\\n          id: '238gjk',\\\\\\\\n          fromValue: new Date(2020, 9, 23, 11, 45),\\\\\\\\n          toValue: new Date(2020, 9, 23, 12, 45)\\\\\\\\n        }\\\\\\\\n      ])}\\\\\\\\n    />\\\\\\\\n  </ThemeWrapper>\\\\\\\\n)\\\\\\\\n\\\\\\\",\\\\\\\"locationsMap\\\\\\\":{}},},\\\\n  title: `${path}/ShiftTimings`,\\\\n  component: ShiftTimings\\\\n}\\\\nconst radioOptions = {\\\\n  timeFormat: { '12 Hour': 12, '24 Hour': 24 }\\\\n}\\\\nexport const withPlayground = addSourceDecorator(() => (\\\\n  <ThemeWrapper>\\\\n    <ShiftTimings\\\\n      fromLabel={text('fromlabel', 'From')}\\\\n      toLabel={text('toLabel', 'To')}\\\\n      // fromError={boolean('fromError', [false])}\\\\n      // toError={boolean('toError', [false])}\\\\n      // fromErrorMessage={text('From Error Message', 'This is required')}\\\\n      // toErrorMessage={text('To Error Message', 'This is required')}\\\\n      timeFormat={\\\\n        radios('Time Format', radioOptions.timeFormat, 24) as tTimeFormat\\\\n      }\\\\n      label='Shift Timings'\\\\n      timeInterval={number('timeInterval', 15)}\\\\n      style={object('style', { width: '800px' })}\\\\n      onFromChange={action('On From Change')}\\\\n      onToChange={action('On TO Change')}\\\\n      onChange={action('Change')}\\\\n      onRemove={action('On Remove Change')}\\\\n      onAdd={action('On Add Change')}\\\\n      selected={object('defaultSelected', [\\\\n        {\\\\n          id: '45890',\\\\n          fromValue: new Date(2020, 9, 23, 7, 45),\\\\n          toValue: new Date(2020, 9, 23, 8, 45)\\\\n        },\\\\n        {\\\\n          id: '8236jhg',\\\\n          fromValue: new Date(2020, 9, 23, 9, 45),\\\\n          toValue: new Date(2020, 9, 23, 10, 45)\\\\n        },\\\\n        {\\\\n          id: '238gjk',\\\\n          fromValue: new Date(2020, 9, 23, 11, 45),\\\\n          toValue: new Date(2020, 9, 23, 12, 45)\\\\n        }\\\\n      ])}\\\\n    />\\\\n  </ThemeWrapper>\\\\n), {__STORY__, __ADDS_MAP__,__MAIN_FILE_LOCATION__,__MODULE_DEPENDENCIES__,__LOCAL_DEPENDENCIES__,__SOURCE_PREFIX__,__IDS_TO_FRAMEWORKS__});\\\";\\n// @ts-ignore\\nvar __ADDS_MAP__ = {};\\n// @ts-ignore\\nvar __MAIN_FILE_LOCATION__ = \\\"/ShowTimings.stories.tsx\\\";\\n// @ts-ignore\\nvar __MODULE_DEPENDENCIES__ = [];\\n// @ts-ignore\\nvar __LOCAL_DEPENDENCIES__ = {};\\n// @ts-ignore\\nvar __IDS_TO_FRAMEWORKS__ = {};\\n        \\n\\n\\n// @ts-nocheck\\n// @ts-ignore\\nvar withSourceLoader = require('@storybook/source-loader/preview').withSource;\\n// @ts-ignore\\nvar addSourceDecorator = require(\\\"@storybook/source-loader/preview\\\").addSource;\\n// @ts-ignore\\nvar __SOURCE_PREFIX__ = \\\"/Users/farhanansari/Desktop/CODE/PrxProject/untitled folder/reactStoryBook/src/components/molecules/ShiftTimings\\\";\\n// @ts-ignore\\nvar __STORY__ = \\\"import React from 'react'\\\\nimport { path } from '..'\\\\n\\\\nimport ThemeWrapper from '../../../utilities/components/ThemeWrapper'\\\\nimport ShiftTimings from '../ShiftTimings'\\\\nimport { tTimeFormat } from '../DatePicker/interfaces'\\\\nimport { radios, number, text, object } from '@storybook/addon-knobs'\\\\nimport { action } from '@storybook/addon-actions'\\\\n\\\\nexport default {\\\\n  title: `${path}/ShiftTimings`,\\\\n  component: ShiftTimings\\\\n}\\\\nconst radioOptions = {\\\\n  timeFormat: { '12 Hour': 12, '24 Hour': 24 }\\\\n}\\\\nexport const withPlayground = () => (\\\\n  <ThemeWrapper>\\\\n    <ShiftTimings\\\\n      fromLabel={text('fromlabel', 'From')}\\\\n      toLabel={text('toLabel', 'To')}\\\\n      // fromError={boolean('fromError', [false])}\\\\n      // toError={boolean('toError', [false])}\\\\n      // fromErrorMessage={text('From Error Message', 'This is required')}\\\\n      // toErrorMessage={text('To Error Message', 'This is required')}\\\\n      timeFormat={\\\\n        radios('Time Format', radioOptions.timeFormat, 24) as tTimeFormat\\\\n      }\\\\n      label='Shift Timings'\\\\n      timeInterval={number('timeInterval', 15)}\\\\n      style={object('style', { width: '800px' })}\\\\n      onFromChange={action('On From Change')}\\\\n      onToChange={action('On TO Change')}\\\\n      onChange={action('Change')}\\\\n      onRemove={action('On Remove Change')}\\\\n      onAdd={action('On Add Change')}\\\\n      selected={object('defaultSelected', [\\\\n        {\\\\n          id: '45890',\\\\n          fromValue: new Date(2020, 9, 23, 7, 45),\\\\n          toValue: new Date(2020, 9, 23, 8, 45)\\\\n        },\\\\n        {\\\\n          id: '8236jhg',\\\\n          fromValue: new Date(2020, 9, 23, 9, 45),\\\\n          toValue: new Date(2020, 9, 23, 10, 45)\\\\n        },\\\\n        {\\\\n          id: '238gjk',\\\\n          fromValue: new Date(2020, 9, 23, 11, 45),\\\\n          toValue: new Date(2020, 9, 23, 12, 45)\\\\n        }\\\\n      ])}\\\\n    />\\\\n  </ThemeWrapper>\\\\n)\\\\n\\\";\\n// @ts-ignore\\nvar __ADDS_MAP__ = {};\\n// @ts-ignore\\nvar __MAIN_FILE_LOCATION__ = \\\"/ShowTimings.stories.tsx\\\";\\n// @ts-ignore\\nvar __MODULE_DEPENDENCIES__ = [];\\n// @ts-ignore\\nvar __LOCAL_DEPENDENCIES__ = {};\\n// @ts-ignore\\nvar __IDS_TO_FRAMEWORKS__ = {};\\n        \\nimport React from 'react'\\nimport { path } from '..'\\n\\nimport ThemeWrapper from '../../../utilities/components/ThemeWrapper'\\nimport ShiftTimings from '../ShiftTimings'\\nimport { tTimeFormat } from '../DatePicker/interfaces'\\nimport { radios, number, text, object } from '@storybook/addon-knobs'\\nimport { action } from '@storybook/addon-actions'\\n\\nexport default {parameters: {\\\"storySource\\\":{\\\"source\\\":\\\"\\\\n\\\\n// @ts-nocheck\\\\n// @ts-ignore\\\\nvar withSourceLoader = require('@storybook/source-loader/preview').withSource;\\\\n// @ts-ignore\\\\nvar addSourceDecorator = require(\\\\\\\"@storybook/source-loader/preview\\\\\\\").addSource;\\\\n// @ts-ignore\\\\nvar __SOURCE_PREFIX__ = \\\\\\\"/Users/farhanansari/Desktop/CODE/PrxProject/untitled folder/reactStoryBook/src/components/molecules/ShiftTimings\\\\\\\";\\\\n// @ts-ignore\\\\nvar __STORY__ = \\\\\\\"import React from 'react'\\\\\\\\nimport { path } from '..'\\\\\\\\n\\\\\\\\nimport ThemeWrapper from '../../../utilities/components/ThemeWrapper'\\\\\\\\nimport ShiftTimings from '../ShiftTimings'\\\\\\\\nimport { tTimeFormat } from '../DatePicker/interfaces'\\\\\\\\nimport { radios, number, text, object } from '@storybook/addon-knobs'\\\\\\\\nimport { action } from '@storybook/addon-actions'\\\\\\\\n\\\\\\\\nexport default {\\\\\\\\n  title: `${path}/ShiftTimings`,\\\\\\\\n  component: ShiftTimings\\\\\\\\n}\\\\\\\\nconst radioOptions = {\\\\\\\\n  timeFormat: { '12 Hour': 12, '24 Hour': 24 }\\\\\\\\n}\\\\\\\\nexport const withPlayground = () => (\\\\\\\\n  <ThemeWrapper>\\\\\\\\n    <ShiftTimings\\\\\\\\n      fromLabel={text('fromlabel', 'From')}\\\\\\\\n      toLabel={text('toLabel', 'To')}\\\\\\\\n      // fromError={boolean('fromError', [false])}\\\\\\\\n      // toError={boolean('toError', [false])}\\\\\\\\n      // fromErrorMessage={text('From Error Message', 'This is required')}\\\\\\\\n      // toErrorMessage={text('To Error Message', 'This is required')}\\\\\\\\n      timeFormat={\\\\\\\\n        radios('Time Format', radioOptions.timeFormat, 24) as tTimeFormat\\\\\\\\n      }\\\\\\\\n      label='Shift Timings'\\\\\\\\n      timeInterval={number('timeInterval', 15)}\\\\\\\\n      style={object('style', { width: '800px' })}\\\\\\\\n      onFromChange={action('On From Change')}\\\\\\\\n      onToChange={action('On TO Change')}\\\\\\\\n      onChange={action('Change')}\\\\\\\\n      onRemove={action('On Remove Change')}\\\\\\\\n      onAdd={action('On Add Change')}\\\\\\\\n      selected={object('defaultSelected', [\\\\\\\\n        {\\\\\\\\n          id: '45890',\\\\\\\\n          fromValue: new Date(2020, 9, 23, 7, 45),\\\\\\\\n          toValue: new Date(2020, 9, 23, 8, 45)\\\\\\\\n        },\\\\\\\\n        {\\\\\\\\n          id: '8236jhg',\\\\\\\\n          fromValue: new Date(2020, 9, 23, 9, 45),\\\\\\\\n          toValue: new Date(2020, 9, 23, 10, 45)\\\\\\\\n        },\\\\\\\\n        {\\\\\\\\n          id: '238gjk',\\\\\\\\n          fromValue: new Date(2020, 9, 23, 11, 45),\\\\\\\\n          toValue: new Date(2020, 9, 23, 12, 45)\\\\\\\\n        }\\\\\\\\n      ])}\\\\\\\\n    />\\\\\\\\n  </ThemeWrapper>\\\\\\\\n)\\\\\\\\n\\\\\\\";\\\\n// @ts-ignore\\\\nvar __ADDS_MAP__ = {};\\\\n// @ts-ignore\\\\nvar __MAIN_FILE_LOCATION__ = \\\\\\\"/ShowTimings.stories.tsx\\\\\\\";\\\\n// @ts-ignore\\\\nvar __MODULE_DEPENDENCIES__ = [];\\\\n// @ts-ignore\\\\nvar __LOCAL_DEPENDENCIES__ = {};\\\\n// @ts-ignore\\\\nvar __IDS_TO_FRAMEWORKS__ = {};\\\\n        \\\\nimport React from 'react'\\\\nimport { path } from '..'\\\\n\\\\nimport ThemeWrapper from '../../../utilities/components/ThemeWrapper'\\\\nimport ShiftTimings from '../ShiftTimings'\\\\nimport { tTimeFormat } from '../DatePicker/interfaces'\\\\nimport { radios, number, text, object } from '@storybook/addon-knobs'\\\\nimport { action } from '@storybook/addon-actions'\\\\n\\\\nexport default {parameters: {\\\\\\\"storySource\\\\\\\":{\\\\\\\"source\\\\\\\":\\\\\\\"import React from 'react'\\\\\\\\nimport { path } from '..'\\\\\\\\n\\\\\\\\nimport ThemeWrapper from '../../../utilities/components/ThemeWrapper'\\\\\\\\nimport ShiftTimings from '../ShiftTimings'\\\\\\\\nimport { tTimeFormat } from '../DatePicker/interfaces'\\\\\\\\nimport { radios, number, text, object } from '@storybook/addon-knobs'\\\\\\\\nimport { action } from '@storybook/addon-actions'\\\\\\\\n\\\\\\\\nexport default {\\\\\\\\n  title: `${path}/ShiftTimings`,\\\\\\\\n  component: ShiftTimings\\\\\\\\n}\\\\\\\\nconst radioOptions = {\\\\\\\\n  timeFormat: { '12 Hour': 12, '24 Hour': 24 }\\\\\\\\n}\\\\\\\\nexport const withPlayground = () => (\\\\\\\\n  <ThemeWrapper>\\\\\\\\n    <ShiftTimings\\\\\\\\n      fromLabel={text('fromlabel', 'From')}\\\\\\\\n      toLabel={text('toLabel', 'To')}\\\\\\\\n      // fromError={boolean('fromError', [false])}\\\\\\\\n      // toError={boolean('toError', [false])}\\\\\\\\n      // fromErrorMessage={text('From Error Message', 'This is required')}\\\\\\\\n      // toErrorMessage={text('To Error Message', 'This is required')}\\\\\\\\n      timeFormat={\\\\\\\\n        radios('Time Format', radioOptions.timeFormat, 24) as tTimeFormat\\\\\\\\n      }\\\\\\\\n      label='Shift Timings'\\\\\\\\n      timeInterval={number('timeInterval', 15)}\\\\\\\\n      style={object('style', { width: '800px' })}\\\\\\\\n      onFromChange={action('On From Change')}\\\\\\\\n      onToChange={action('On TO Change')}\\\\\\\\n      onChange={action('Change')}\\\\\\\\n      onRemove={action('On Remove Change')}\\\\\\\\n      onAdd={action('On Add Change')}\\\\\\\\n      selected={object('defaultSelected', [\\\\\\\\n        {\\\\\\\\n          id: '45890',\\\\\\\\n          fromValue: new Date(2020, 9, 23, 7, 45),\\\\\\\\n          toValue: new Date(2020, 9, 23, 8, 45)\\\\\\\\n        },\\\\\\\\n        {\\\\\\\\n          id: '8236jhg',\\\\\\\\n          fromValue: new Date(2020, 9, 23, 9, 45),\\\\\\\\n          toValue: new Date(2020, 9, 23, 10, 45)\\\\\\\\n        },\\\\\\\\n        {\\\\\\\\n          id: '238gjk',\\\\\\\\n          fromValue: new Date(2020, 9, 23, 11, 45),\\\\\\\\n          toValue: new Date(2020, 9, 23, 12, 45)\\\\\\\\n        }\\\\\\\\n      ])}\\\\\\\\n    />\\\\\\\\n  </ThemeWrapper>\\\\\\\\n)\\\\\\\\n\\\\\\\",\\\\\\\"locationsMap\\\\\\\":{}},},\\\\n  title: `${path}/ShiftTimings`,\\\\n  component: ShiftTimings\\\\n}\\\\nconst radioOptions = {\\\\n  timeFormat: { '12 Hour': 12, '24 Hour': 24 }\\\\n}\\\\nexport const withPlayground = addSourceDecorator(() => (\\\\n  <ThemeWrapper>\\\\n    <ShiftTimings\\\\n      fromLabel={text('fromlabel', 'From')}\\\\n      toLabel={text('toLabel', 'To')}\\\\n      // fromError={boolean('fromError', [false])}\\\\n      // toError={boolean('toError', [false])}\\\\n      // fromErrorMessage={text('From Error Message', 'This is required')}\\\\n      // toErrorMessage={text('To Error Message', 'This is required')}\\\\n      timeFormat={\\\\n        radios('Time Format', radioOptions.timeFormat, 24) as tTimeFormat\\\\n      }\\\\n      label='Shift Timings'\\\\n      timeInterval={number('timeInterval', 15)}\\\\n      style={object('style', { width: '800px' })}\\\\n      onFromChange={action('On From Change')}\\\\n      onToChange={action('On TO Change')}\\\\n      onChange={action('Change')}\\\\n      onRemove={action('On Remove Change')}\\\\n      onAdd={action('On Add Change')}\\\\n      selected={object('defaultSelected', [\\\\n        {\\\\n          id: '45890',\\\\n          fromValue: new Date(2020, 9, 23, 7, 45),\\\\n          toValue: new Date(2020, 9, 23, 8, 45)\\\\n        },\\\\n        {\\\\n          id: '8236jhg',\\\\n          fromValue: new Date(2020, 9, 23, 9, 45),\\\\n          toValue: new Date(2020, 9, 23, 10, 45)\\\\n        },\\\\n        {\\\\n          id: '238gjk',\\\\n          fromValue: new Date(2020, 9, 23, 11, 45),\\\\n          toValue: new Date(2020, 9, 23, 12, 45)\\\\n        }\\\\n      ])}\\\\n    />\\\\n  </ThemeWrapper>\\\\n), {__STORY__, __ADDS_MAP__,__MAIN_FILE_LOCATION__,__MODULE_DEPENDENCIES__,__LOCAL_DEPENDENCIES__,__SOURCE_PREFIX__,__IDS_TO_FRAMEWORKS__});\\\",\\\"locationsMap\\\":{}},\\\"storySource\\\":{\\\"source\\\":\\\"import React from 'react'\\\\nimport { path } from '..'\\\\n\\\\nimport ThemeWrapper from '../../../utilities/components/ThemeWrapper'\\\\nimport ShiftTimings from '../ShiftTimings'\\\\nimport { tTimeFormat } from '../DatePicker/interfaces'\\\\nimport { radios, number, text, object } from '@storybook/addon-knobs'\\\\nimport { action } from '@storybook/addon-actions'\\\\n\\\\nexport default {\\\\n  title: `${path}/ShiftTimings`,\\\\n  component: ShiftTimings\\\\n}\\\\nconst radioOptions = {\\\\n  timeFormat: { '12 Hour': 12, '24 Hour': 24 }\\\\n}\\\\nexport const withPlayground = () => (\\\\n  <ThemeWrapper>\\\\n    <ShiftTimings\\\\n      fromLabel={text('fromlabel', 'From')}\\\\n      toLabel={text('toLabel', 'To')}\\\\n      // fromError={boolean('fromError', [false])}\\\\n      // toError={boolean('toError', [false])}\\\\n      // fromErrorMessage={text('From Error Message', 'This is required')}\\\\n      // toErrorMessage={text('To Error Message', 'This is required')}\\\\n      timeFormat={\\\\n        radios('Time Format', radioOptions.timeFormat, 24) as tTimeFormat\\\\n      }\\\\n      label='Shift Timings'\\\\n      timeInterval={number('timeInterval', 15)}\\\\n      style={object('style', { width: '800px' })}\\\\n      onFromChange={action('On From Change')}\\\\n      onToChange={action('On TO Change')}\\\\n      onChange={action('Change')}\\\\n      onRemove={action('On Remove Change')}\\\\n      onAdd={action('On Add Change')}\\\\n      selected={object('defaultSelected', [\\\\n        {\\\\n          id: '45890',\\\\n          fromValue: new Date(2020, 9, 23, 7, 45),\\\\n          toValue: new Date(2020, 9, 23, 8, 45)\\\\n        },\\\\n        {\\\\n          id: '8236jhg',\\\\n          fromValue: new Date(2020, 9, 23, 9, 45),\\\\n          toValue: new Date(2020, 9, 23, 10, 45)\\\\n        },\\\\n        {\\\\n          id: '238gjk',\\\\n          fromValue: new Date(2020, 9, 23, 11, 45),\\\\n          toValue: new Date(2020, 9, 23, 12, 45)\\\\n        }\\\\n      ])}\\\\n    />\\\\n  </ThemeWrapper>\\\\n)\\\\n\\\",\\\"locationsMap\\\":{}},},\\n  title: `${path}/ShiftTimings`,\\n  component: ShiftTimings\\n}\\nconst radioOptions = {\\n  timeFormat: { '12 Hour': 12, '24 Hour': 24 }\\n}\\nexport const withPlayground = addSourceDecorator(addSourceDecorator(() => (\\n  <ThemeWrapper>\\n    <ShiftTimings\\n      fromLabel={text('fromlabel', 'From')}\\n      toLabel={text('toLabel', 'To')}\\n      // fromError={boolean('fromError', [false])}\\n      // toError={boolean('toError', [false])}\\n      // fromErrorMessage={text('From Error Message', 'This is required')}\\n      // toErrorMessage={text('To Error Message', 'This is required')}\\n      timeFormat={\\n        radios('Time Format', radioOptions.timeFormat, 24) as tTimeFormat\\n      }\\n      label='Shift Timings'\\n      timeInterval={number('timeInterval', 15)}\\n      style={object('style', { width: '800px' })}\\n      onFromChange={action('On From Change')}\\n      onToChange={action('On TO Change')}\\n      onChange={action('Change')}\\n      onRemove={action('On Remove Change')}\\n      onAdd={action('On Add Change')}\\n      selected={object('defaultSelected', [\\n        {\\n          id: '45890',\\n          fromValue: new Date(2020, 9, 23, 7, 45),\\n          toValue: new Date(2020, 9, 23, 8, 45)\\n        },\\n        {\\n          id: '8236jhg',\\n          fromValue: new Date(2020, 9, 23, 9, 45),\\n          toValue: new Date(2020, 9, 23, 10, 45)\\n        },\\n        {\\n          id: '238gjk',\\n          fromValue: new Date(2020, 9, 23, 11, 45),\\n          toValue: new Date(2020, 9, 23, 12, 45)\\n        }\\n      ])}\\n    />\\n  </ThemeWrapper>\\n), {__STORY__, __ADDS_MAP__,__MAIN_FILE_LOCATION__,__MODULE_DEPENDENCIES__,__LOCAL_DEPENDENCIES__,__SOURCE_PREFIX__,__IDS_TO_FRAMEWORKS__}), {__STORY__, __ADDS_MAP__,__MAIN_FILE_LOCATION__,__MODULE_DEPENDENCIES__,__LOCAL_DEPENDENCIES__,__SOURCE_PREFIX__,__IDS_TO_FRAMEWORKS__});\",\"locationsMap\":{}},\"storySource\":{\"source\":\"\\n\\n// @ts-nocheck\\n// @ts-ignore\\nvar withSourceLoader = require('@storybook/source-loader/preview').withSource;\\n// @ts-ignore\\nvar addSourceDecorator = require(\\\"@storybook/source-loader/preview\\\").addSource;\\n// @ts-ignore\\nvar __SOURCE_PREFIX__ = \\\"/Users/farhanansari/Desktop/CODE/PrxProject/untitled folder/reactStoryBook/src/components/molecules/ShiftTimings\\\";\\n// @ts-ignore\\nvar __STORY__ = \\\"import React from 'react'\\\\nimport { path } from '..'\\\\n\\\\nimport ThemeWrapper from '../../../utilities/components/ThemeWrapper'\\\\nimport ShiftTimings from '../ShiftTimings'\\\\nimport { tTimeFormat } from '../DatePicker/interfaces'\\\\nimport { radios, number, text, object } from '@storybook/addon-knobs'\\\\nimport { action } from '@storybook/addon-actions'\\\\n\\\\nexport default {\\\\n  title: `${path}/ShiftTimings`,\\\\n  component: ShiftTimings\\\\n}\\\\nconst radioOptions = {\\\\n  timeFormat: { '12 Hour': 12, '24 Hour': 24 }\\\\n}\\\\nexport const withPlayground = () => (\\\\n  <ThemeWrapper>\\\\n    <ShiftTimings\\\\n      fromLabel={text('fromlabel', 'From')}\\\\n      toLabel={text('toLabel', 'To')}\\\\n      // fromError={boolean('fromError', [false])}\\\\n      // toError={boolean('toError', [false])}\\\\n      // fromErrorMessage={text('From Error Message', 'This is required')}\\\\n      // toErrorMessage={text('To Error Message', 'This is required')}\\\\n      timeFormat={\\\\n        radios('Time Format', radioOptions.timeFormat, 24) as tTimeFormat\\\\n      }\\\\n      label='Shift Timings'\\\\n      timeInterval={number('timeInterval', 15)}\\\\n      style={object('style', { width: '800px' })}\\\\n      onFromChange={action('On From Change')}\\\\n      onToChange={action('On TO Change')}\\\\n      onChange={action('Change')}\\\\n      onRemove={action('On Remove Change')}\\\\n      onAdd={action('On Add Change')}\\\\n      selected={object('defaultSelected', [\\\\n        {\\\\n          id: '45890',\\\\n          fromValue: new Date(2020, 9, 23, 7, 45),\\\\n          toValue: new Date(2020, 9, 23, 8, 45)\\\\n        },\\\\n        {\\\\n          id: '8236jhg',\\\\n          fromValue: new Date(2020, 9, 23, 9, 45),\\\\n          toValue: new Date(2020, 9, 23, 10, 45)\\\\n        },\\\\n        {\\\\n          id: '238gjk',\\\\n          fromValue: new Date(2020, 9, 23, 11, 45),\\\\n          toValue: new Date(2020, 9, 23, 12, 45)\\\\n        }\\\\n      ])}\\\\n    />\\\\n  </ThemeWrapper>\\\\n)\\\\n\\\";\\n// @ts-ignore\\nvar __ADDS_MAP__ = {};\\n// @ts-ignore\\nvar __MAIN_FILE_LOCATION__ = \\\"/ShowTimings.stories.tsx\\\";\\n// @ts-ignore\\nvar __MODULE_DEPENDENCIES__ = [];\\n// @ts-ignore\\nvar __LOCAL_DEPENDENCIES__ = {};\\n// @ts-ignore\\nvar __IDS_TO_FRAMEWORKS__ = {};\\n        \\nimport React from 'react'\\nimport { path } from '..'\\n\\nimport ThemeWrapper from '../../../utilities/components/ThemeWrapper'\\nimport ShiftTimings from '../ShiftTimings'\\nimport { tTimeFormat } from '../DatePicker/interfaces'\\nimport { radios, number, text, object } from '@storybook/addon-knobs'\\nimport { action } from '@storybook/addon-actions'\\n\\nexport default {parameters: {\\\"storySource\\\":{\\\"source\\\":\\\"import React from 'react'\\\\nimport { path } from '..'\\\\n\\\\nimport ThemeWrapper from '../../../utilities/components/ThemeWrapper'\\\\nimport ShiftTimings from '../ShiftTimings'\\\\nimport { tTimeFormat } from '../DatePicker/interfaces'\\\\nimport { radios, number, text, object } from '@storybook/addon-knobs'\\\\nimport { action } from '@storybook/addon-actions'\\\\n\\\\nexport default {\\\\n  title: `${path}/ShiftTimings`,\\\\n  component: ShiftTimings\\\\n}\\\\nconst radioOptions = {\\\\n  timeFormat: { '12 Hour': 12, '24 Hour': 24 }\\\\n}\\\\nexport const withPlayground = () => (\\\\n  <ThemeWrapper>\\\\n    <ShiftTimings\\\\n      fromLabel={text('fromlabel', 'From')}\\\\n      toLabel={text('toLabel', 'To')}\\\\n      // fromError={boolean('fromError', [false])}\\\\n      // toError={boolean('toError', [false])}\\\\n      // fromErrorMessage={text('From Error Message', 'This is required')}\\\\n      // toErrorMessage={text('To Error Message', 'This is required')}\\\\n      timeFormat={\\\\n        radios('Time Format', radioOptions.timeFormat, 24) as tTimeFormat\\\\n      }\\\\n      label='Shift Timings'\\\\n      timeInterval={number('timeInterval', 15)}\\\\n      style={object('style', { width: '800px' })}\\\\n      onFromChange={action('On From Change')}\\\\n      onToChange={action('On TO Change')}\\\\n      onChange={action('Change')}\\\\n      onRemove={action('On Remove Change')}\\\\n      onAdd={action('On Add Change')}\\\\n      selected={object('defaultSelected', [\\\\n        {\\\\n          id: '45890',\\\\n          fromValue: new Date(2020, 9, 23, 7, 45),\\\\n          toValue: new Date(2020, 9, 23, 8, 45)\\\\n        },\\\\n        {\\\\n          id: '8236jhg',\\\\n          fromValue: new Date(2020, 9, 23, 9, 45),\\\\n          toValue: new Date(2020, 9, 23, 10, 45)\\\\n        },\\\\n        {\\\\n          id: '238gjk',\\\\n          fromValue: new Date(2020, 9, 23, 11, 45),\\\\n          toValue: new Date(2020, 9, 23, 12, 45)\\\\n        }\\\\n      ])}\\\\n    />\\\\n  </ThemeWrapper>\\\\n)\\\\n\\\",\\\"locationsMap\\\":{}},},\\n  title: `${path}/ShiftTimings`,\\n  component: ShiftTimings\\n}\\nconst radioOptions = {\\n  timeFormat: { '12 Hour': 12, '24 Hour': 24 }\\n}\\nexport const withPlayground = addSourceDecorator(() => (\\n  <ThemeWrapper>\\n    <ShiftTimings\\n      fromLabel={text('fromlabel', 'From')}\\n      toLabel={text('toLabel', 'To')}\\n      // fromError={boolean('fromError', [false])}\\n      // toError={boolean('toError', [false])}\\n      // fromErrorMessage={text('From Error Message', 'This is required')}\\n      // toErrorMessage={text('To Error Message', 'This is required')}\\n      timeFormat={\\n        radios('Time Format', radioOptions.timeFormat, 24) as tTimeFormat\\n      }\\n      label='Shift Timings'\\n      timeInterval={number('timeInterval', 15)}\\n      style={object('style', { width: '800px' })}\\n      onFromChange={action('On From Change')}\\n      onToChange={action('On TO Change')}\\n      onChange={action('Change')}\\n      onRemove={action('On Remove Change')}\\n      onAdd={action('On Add Change')}\\n      selected={object('defaultSelected', [\\n        {\\n          id: '45890',\\n          fromValue: new Date(2020, 9, 23, 7, 45),\\n          toValue: new Date(2020, 9, 23, 8, 45)\\n        },\\n        {\\n          id: '8236jhg',\\n          fromValue: new Date(2020, 9, 23, 9, 45),\\n          toValue: new Date(2020, 9, 23, 10, 45)\\n        },\\n        {\\n          id: '238gjk',\\n          fromValue: new Date(2020, 9, 23, 11, 45),\\n          toValue: new Date(2020, 9, 23, 12, 45)\\n        }\\n      ])}\\n    />\\n  </ThemeWrapper>\\n), {__STORY__, __ADDS_MAP__,__MAIN_FILE_LOCATION__,__MODULE_DEPENDENCIES__,__LOCAL_DEPENDENCIES__,__SOURCE_PREFIX__,__IDS_TO_FRAMEWORKS__});\",\"locationsMap\":{}},\"storySource\":{\"source\":\"import React from 'react'\\nimport { path } from '..'\\n\\nimport ThemeWrapper from '../../../utilities/components/ThemeWrapper'\\nimport ShiftTimings from '../ShiftTimings'\\nimport { tTimeFormat } from '../DatePicker/interfaces'\\nimport { radios, number, text, object } from '@storybook/addon-knobs'\\nimport { action } from '@storybook/addon-actions'\\n\\nexport default {\\n  title: `${path}/ShiftTimings`,\\n  component: ShiftTimings\\n}\\nconst radioOptions = {\\n  timeFormat: { '12 Hour': 12, '24 Hour': 24 }\\n}\\nexport const withPlayground = () => (\\n  <ThemeWrapper>\\n    <ShiftTimings\\n      fromLabel={text('fromlabel', 'From')}\\n      toLabel={text('toLabel', 'To')}\\n      // fromError={boolean('fromError', [false])}\\n      // toError={boolean('toError', [false])}\\n      // fromErrorMessage={text('From Error Message', 'This is required')}\\n      // toErrorMessage={text('To Error Message', 'This is required')}\\n      timeFormat={\\n        radios('Time Format', radioOptions.timeFormat, 24) as tTimeFormat\\n      }\\n      label='Shift Timings'\\n      timeInterval={number('timeInterval', 15)}\\n      style={object('style', { width: '800px' })}\\n      onFromChange={action('On From Change')}\\n      onToChange={action('On TO Change')}\\n      onChange={action('Change')}\\n      onRemove={action('On Remove Change')}\\n      onAdd={action('On Add Change')}\\n      selected={object('defaultSelected', [\\n        {\\n          id: '45890',\\n          fromValue: new Date(2020, 9, 23, 7, 45),\\n          toValue: new Date(2020, 9, 23, 8, 45)\\n        },\\n        {\\n          id: '8236jhg',\\n          fromValue: new Date(2020, 9, 23, 9, 45),\\n          toValue: new Date(2020, 9, 23, 10, 45)\\n        },\\n        {\\n          id: '238gjk',\\n          fromValue: new Date(2020, 9, 23, 11, 45),\\n          toValue: new Date(2020, 9, 23, 12, 45)\\n        }\\n      ])}\\n    />\\n  </ThemeWrapper>\\n)\\n\",\"locationsMap\":{}},},\n  title: `${path}/ShiftTimings`,\n  component: ShiftTimings\n}\nconst radioOptions = {\n  timeFormat: { '12 Hour': 12, '24 Hour': 24 }\n}\nexport const withPlayground = addSourceDecorator(addSourceDecorator(addSourceDecorator(() => (\n  <ThemeWrapper>\n    <ShiftTimings\n      fromLabel={text('fromlabel', 'From')}\n      toLabel={text('toLabel', 'To')}\n      // fromError={boolean('fromError', [false])}\n      // toError={boolean('toError', [false])}\n      // fromErrorMessage={text('From Error Message', 'This is required')}\n      // toErrorMessage={text('To Error Message', 'This is required')}\n      timeFormat={\n        radios('Time Format', radioOptions.timeFormat, 24) as tTimeFormat\n      }\n      label='Shift Timings'\n      timeInterval={number('timeInterval', 15)}\n      style={object('style', { width: '800px' })}\n      onFromChange={action('On From Change')}\n      onToChange={action('On TO Change')}\n      onChange={action('Change')}\n      onRemove={action('On Remove Change')}\n      onAdd={action('On Add Change')}\n      selected={object('defaultSelected', [\n        {\n          id: '45890',\n          fromValue: new Date(2020, 9, 23, 7, 45),\n          toValue: new Date(2020, 9, 23, 8, 45)\n        },\n        {\n          id: '8236jhg',\n          fromValue: new Date(2020, 9, 23, 9, 45),\n          toValue: new Date(2020, 9, 23, 10, 45)\n        },\n        {\n          id: '238gjk',\n          fromValue: new Date(2020, 9, 23, 11, 45),\n          toValue: new Date(2020, 9, 23, 12, 45)\n        }\n      ])}\n    />\n  </ThemeWrapper>\n), {__STORY__, __ADDS_MAP__,__MAIN_FILE_LOCATION__,__MODULE_DEPENDENCIES__,__LOCAL_DEPENDENCIES__,__SOURCE_PREFIX__,__IDS_TO_FRAMEWORKS__}), {__STORY__, __ADDS_MAP__,__MAIN_FILE_LOCATION__,__MODULE_DEPENDENCIES__,__LOCAL_DEPENDENCIES__,__SOURCE_PREFIX__,__IDS_TO_FRAMEWORKS__}), {__STORY__, __ADDS_MAP__,__MAIN_FILE_LOCATION__,__MODULE_DEPENDENCIES__,__LOCAL_DEPENDENCIES__,__SOURCE_PREFIX__,__IDS_TO_FRAMEWORKS__});"],"sourceRoot":""},"metadata":{},"sourceType":"module"}