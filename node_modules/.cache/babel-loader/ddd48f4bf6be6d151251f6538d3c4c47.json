{"ast":null,"code":"var _this = this,\n    _jsxFileName = \"/Users/farhanansari/Desktop/CODE/PrxProject/untitled folder/reactStoryBook/src/components/atoms/Map/dummyData/Infowindow.structure.sampleData.tsx\";\n\nimport React from 'react';\nimport { StyledText } from '../StyledMap';\nvar infowindowStructure = {\n  orderIntransit: {\n    permissions: ['orderNo', 'endTimeWindow', 'addressDetails', '_thisLocation', '_thisComponent'],\n    definitions: {\n      orderNo: {\n        classList: '',\n        dataKey: 'orderNo',\n        dataType: 'text',\n        id: 'orderNo',\n        labelKey: 'Order Number'\n      },\n      endTimeWindow: {\n        classList: '',\n        dataKey: 'endTimeWindow',\n        dataType: 'datetime',\n        id: 'endTimeWindow',\n        labelKey: 'Deliver Order By'\n      },\n      addressDetails: {\n        classList: '',\n        dataKey: 'addressDetails',\n        dataType: 'text',\n        id: 'addressDetails',\n        labelKey: 'Deliver To'\n      },\n      _thisLocation: {\n        classList: 'title',\n        dataKey: '_thisLocation',\n        dataType: '_thisLocation',\n        id: '_thisLocation',\n        labelKey: 'Location: '\n      },\n      _thisComponent: {\n        classList: 'title',\n        dataKey: 'addressDetails',\n        dataType: '_thisComponent',\n        id: 'addressDetails',\n        labelKey: 'New Component:',\n        html: function html(_ref) {\n          var value = _ref.value;\n          return /*#__PURE__*/React.createElement(StyledText, {\n            __self: _this,\n            __source: {\n              fileName: _jsxFileName,\n              lineNumber: 49,\n              columnNumber: 11\n            }\n          }, \"\".concat(value));\n        }\n      }\n    }\n  },\n  dbIntransit: {\n    permissions: ['name', 'number', 'battery'],\n    definitions: {\n      name: {\n        classList: '',\n        dataKey: 'name',\n        dataType: 'text',\n        id: 'name',\n        labelKey: 'Name'\n      },\n      number: {\n        classList: '',\n        dataKey: 'number',\n        dataType: 'text',\n        id: 'number',\n        labelKey: 'Phone Number'\n      },\n      battery: {\n        classList: '',\n        dataKey: 'battery',\n        dataType: 'text',\n        id: 'battery',\n        labelKey: 'Battery Percentage'\n      }\n    }\n  },\n  tripIntransit: {\n    permissions: ['orderNo', 'startTimeWindow', 'address', 'endTimeWindow'],\n    definitions: {\n      orderNo: {\n        classList: '',\n        dataKey: 'orderNo',\n        dataType: 'text',\n        id: 'orderNo',\n        labelKey: 'Order Number'\n      },\n      startTimeWindow: {\n        classList: '',\n        dataKey: 'startTimeWindow',\n        dataType: 'datetime',\n        id: 'startTimeWindow',\n        labelKey: 'Started at'\n      },\n      address: {\n        classList: '',\n        dataKey: 'address',\n        dataType: 'text',\n        id: 'address',\n        labelKey: 'Address'\n      },\n      endTimeWindow: {\n        classList: '',\n        dataKey: 'endTimeWindow',\n        dataType: 'text',\n        id: 'endTimeWindow',\n        labelKey: 'Revised End Time'\n      }\n    }\n  },\n  orderTracking: {\n    permissions: ['batteryPercentage', 'speed'],\n    definitions: {\n      batteryPercentage: {\n        classList: '',\n        dataKey: 'batteryPercentage',\n        dataType: 'text',\n        id: 'batteryPercentage',\n        labelKey: 'Battery Percentage'\n      },\n      speed: {\n        classList: '',\n        dataKey: 'speed',\n        dataType: 'speed',\n        id: 'speed',\n        labelKey: 'Speed'\n      }\n    }\n  },\n  polyIntransit: {\n    permissions: ['geofenceName', 'geofenceCategory', 'deliveryMediumMasterId', 'radiusInKms', 'tooltipButton'],\n    definitions: {\n      geofenceName: {\n        classList: 'title',\n        dataKey: 'geofenceName',\n        dataType: 'text',\n        id: 'geofenceName',\n        labelKey: 'Territory Name : '\n      },\n      geofenceCategory: {\n        classList: 'title',\n        dataKey: 'geofenceCategory',\n        dataType: 'text',\n        id: 'geofenceCategory',\n        labelKey: 'Territory Category : '\n      },\n      deliveryMediumMasterId: {\n        classList: 'title',\n        dataKey: 'geofenceName',\n        dataType: 'text',\n        id: 'geofenceName',\n        labelKey: 'DAs : '\n      },\n      radiusInKms: {\n        classList: 'title',\n        dataKey: 'radiusInKms',\n        dataType: 'text',\n        id: 'radiusInKms',\n        labelKey: 'Area : ',\n        unit: 'Sq.Ml'\n      },\n      tooltipButton: {\n        dataKey: 'tooltipButton',\n        dataType: 'component'\n      }\n    }\n  },\n  circleIntransit: {\n    permissions: ['geofenceName', 'radiusInKms', '_thisCoordinate', 'isHighAlert', '_thisLocation', '_thisComponent'],\n    definitions: {\n      geofenceName: {\n        classList: 'title',\n        dataKey: 'geofenceName',\n        dataType: 'text',\n        id: 'geofenceName',\n        labelKey: 'Geofence Name: '\n      },\n      radiusInKms: {\n        classList: 'title',\n        dataKey: 'radiusInKms',\n        dataType: '_thisComponent',\n        id: 'radiusInKms',\n        labelKey: 'Radius: ',\n        unit: 'Kms',\n        html: function html(_ref2) {\n          var value = _ref2.value;\n          return /*#__PURE__*/React.createElement(StyledText, {\n            __self: _this,\n            __source: {\n              fileName: _jsxFileName,\n              lineNumber: 202,\n              columnNumber: 11\n            }\n          }, \"\".concat(value));\n        }\n      },\n      isHighAlert: {\n        classList: 'title',\n        dataKey: 'isHighAlert',\n        dataType: 'boolean',\n        id: 'isHighAlert',\n        labelKey: 'Alert Type: ',\n        trueValue: 'High Alert',\n        falseValue: 'Low Alert'\n      },\n      _thisCoordinate: {\n        classList: 'title',\n        dataKey: ['latitude', 'longitude'],\n        dataType: '_thisDependent',\n        labelKey: 'Coordinates: '\n      },\n      _thisLocation: {\n        classList: 'title',\n        dataKey: '_thisLocation',\n        dataType: '_thisLocation',\n        id: '_thisLocation',\n        labelKey: 'Location: '\n      },\n      _thisComponent: {\n        classList: 'title',\n        dataKey: 'centerCords',\n        dataType: '_thisComponent',\n        id: 'centerCords',\n        labelKey: '',\n        html: function html(_ref3) {\n          var value = _ref3.value;\n          return /*#__PURE__*/React.createElement(StyledText, {\n            __self: _this,\n            __source: {\n              fileName: _jsxFileName,\n              lineNumber: 234,\n              columnNumber: 11\n            }\n          }, \"\".concat(value));\n        }\n      }\n    }\n  },\n  pickupLocation: {\n    permissions: ['orderNo', 'startTimeWindow', 'endTimeWindow', 'customerName', 'addressDetails', '_thisLocation'],\n    definitions: {\n      orderNo: {\n        classList: '',\n        dataKey: 'orderNo',\n        dataType: 'text',\n        id: 'orderNo',\n        labelKey: 'Order Number'\n      },\n      startTimeWindow: {\n        classList: '',\n        dataKey: 'startTimeWindow',\n        dataType: 'datetime',\n        id: 'startTimeWindow',\n        labelKey: 'Start Time'\n      },\n      endTimeWindow: {\n        classList: '',\n        dataKey: 'endTimeWindow',\n        dataType: 'datetime',\n        id: 'endTimeWindow',\n        labelKey: 'End Time'\n      },\n      customerName: {\n        classList: '',\n        dataKey: 'destClientNodeName',\n        dataType: 'text',\n        id: 'destClientNodeName',\n        labelKey: 'Customer Name'\n      },\n      addressDetails: {\n        classList: '',\n        dataKey: 'addressDetails',\n        dataType: 'text',\n        id: 'addressDetails',\n        labelKey: 'Deliver To'\n      },\n      _thisLocation: {\n        classList: 'title',\n        dataKey: '_thisLocation',\n        dataType: '_thisLocation',\n        id: '_thisLocation',\n        labelKey: 'Location: '\n      }\n    }\n  },\n  deliverLocation: {\n    permissions: ['orderNo', 'startTimeWindow', 'endTimeWindow', 'customerName', 'addressDetails', '_thisLocation'],\n    definitions: {\n      orderNo: {\n        classList: '',\n        dataKey: 'orderNo',\n        dataType: 'text',\n        id: 'orderNo',\n        labelKey: 'Order Number'\n      },\n      startTimeWindow: {\n        classList: '',\n        dataKey: 'startTimeWindow',\n        dataType: 'datetime',\n        id: 'startTimeWindow',\n        labelKey: 'Start Time'\n      },\n      endTimeWindow: {\n        classList: '',\n        dataKey: 'endTimeWindow',\n        dataType: 'datetime',\n        id: 'endTimeWindow',\n        labelKey: 'End Time'\n      },\n      customerName: {\n        classList: '',\n        dataKey: 'destClientNodeName',\n        dataType: 'text',\n        id: 'destClientNodeName',\n        labelKey: 'Customer Name'\n      },\n      addressDetails: {\n        classList: '',\n        dataKey: 'addressDetails',\n        dataType: 'text',\n        id: 'addressDetails',\n        labelKey: 'Deliver To'\n      },\n      _thisLocation: {\n        classList: 'title',\n        dataKey: '_thisLocation',\n        dataType: '_thisLocation',\n        id: '_thisLocation',\n        labelKey: 'Location: '\n      }\n    }\n  },\n  haulTripPopup: {\n    permissions: ['tripNo', 'batteryPercentage', 'trackerId', 'speed', '_thisCoordinates', '_thisLocation']\n  }\n};\nexport default infowindowStructure;","map":{"version":3,"sources":["/Users/farhanansari/Desktop/CODE/PrxProject/untitled folder/reactStoryBook/src/components/atoms/Map/dummyData/Infowindow.structure.sampleData.tsx"],"names":["React","StyledText","infowindowStructure","orderIntransit","permissions","definitions","orderNo","classList","dataKey","dataType","id","labelKey","endTimeWindow","addressDetails","_thisLocation","_thisComponent","html","value","dbIntransit","name","number","battery","tripIntransit","startTimeWindow","address","orderTracking","batteryPercentage","speed","polyIntransit","geofenceName","geofenceCategory","deliveryMediumMasterId","radiusInKms","unit","tooltipButton","circleIntransit","isHighAlert","trueValue","falseValue","_thisCoordinate","pickupLocation","customerName","deliverLocation","haulTripPopup"],"mappings":"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","sourcesContent":["import React from 'react'\nimport { StyledText } from '../StyledMap'\n\nconst infowindowStructure = {\n  orderIntransit: {\n    permissions: [\n      'orderNo',\n      'endTimeWindow',\n      'addressDetails',\n      '_thisLocation',\n      '_thisComponent'\n    ],\n    definitions: {\n      orderNo: {\n        classList: '',\n        dataKey: 'orderNo',\n        dataType: 'text',\n        id: 'orderNo',\n        labelKey: 'Order Number'\n      },\n      endTimeWindow: {\n        classList: '',\n        dataKey: 'endTimeWindow',\n        dataType: 'datetime',\n        id: 'endTimeWindow',\n        labelKey: 'Deliver Order By'\n      },\n      addressDetails: {\n        classList: '',\n        dataKey: 'addressDetails',\n        dataType: 'text',\n        id: 'addressDetails',\n        labelKey: 'Deliver To'\n      },\n      _thisLocation: {\n        classList: 'title',\n        dataKey: '_thisLocation',\n        dataType: '_thisLocation',\n        id: '_thisLocation',\n        labelKey: 'Location: '\n      },\n      _thisComponent: {\n        classList: 'title',\n        dataKey: 'addressDetails',\n        dataType: '_thisComponent',\n        id: 'addressDetails',\n        labelKey: 'New Component:',\n        html: ({ value }: { value: any }) => (\n          <StyledText>{`${value}`}</StyledText>\n        )\n      }\n    }\n  },\n  dbIntransit: {\n    permissions: ['name', 'number', 'battery'],\n    definitions: {\n      name: {\n        classList: '',\n        dataKey: 'name',\n        dataType: 'text',\n        id: 'name',\n        labelKey: 'Name'\n      },\n      number: {\n        classList: '',\n        dataKey: 'number',\n        dataType: 'text',\n        id: 'number',\n        labelKey: 'Phone Number'\n      },\n      battery: {\n        classList: '',\n        dataKey: 'battery',\n        dataType: 'text',\n        id: 'battery',\n        labelKey: 'Battery Percentage'\n      }\n    }\n  },\n  tripIntransit: {\n    permissions: ['orderNo', 'startTimeWindow', 'address', 'endTimeWindow'],\n    definitions: {\n      orderNo: {\n        classList: '',\n        dataKey: 'orderNo',\n        dataType: 'text',\n        id: 'orderNo',\n        labelKey: 'Order Number'\n      },\n      startTimeWindow: {\n        classList: '',\n        dataKey: 'startTimeWindow',\n        dataType: 'datetime',\n        id: 'startTimeWindow',\n        labelKey: 'Started at'\n      },\n      address: {\n        classList: '',\n        dataKey: 'address',\n        dataType: 'text',\n        id: 'address',\n        labelKey: 'Address'\n      },\n      endTimeWindow: {\n        classList: '',\n        dataKey: 'endTimeWindow',\n        dataType: 'text',\n        id: 'endTimeWindow',\n        labelKey: 'Revised End Time'\n      }\n    }\n  },\n  orderTracking: {\n    permissions: ['batteryPercentage', 'speed'],\n    definitions: {\n      batteryPercentage: {\n        classList: '',\n        dataKey: 'batteryPercentage',\n        dataType: 'text',\n        id: 'batteryPercentage',\n        labelKey: 'Battery Percentage'\n      },\n      speed: {\n        classList: '',\n        dataKey: 'speed',\n        dataType: 'speed',\n        id: 'speed',\n        labelKey: 'Speed'\n      }\n    }\n  },\n  polyIntransit: {\n    permissions: [\n      'geofenceName',\n      'geofenceCategory',\n      'deliveryMediumMasterId',\n      'radiusInKms',\n      'tooltipButton'\n    ],\n    definitions: {\n      geofenceName: {\n        classList: 'title',\n        dataKey: 'geofenceName',\n        dataType: 'text',\n        id: 'geofenceName',\n        labelKey: 'Territory Name : '\n      },\n      geofenceCategory: {\n        classList: 'title',\n        dataKey: 'geofenceCategory',\n        dataType: 'text',\n        id: 'geofenceCategory',\n        labelKey: 'Territory Category : '\n      },\n      deliveryMediumMasterId: {\n        classList: 'title',\n        dataKey: 'geofenceName',\n        dataType: 'text',\n        id: 'geofenceName',\n        labelKey: 'DAs : '\n      },\n      radiusInKms: {\n        classList: 'title',\n        dataKey: 'radiusInKms',\n        dataType: 'text',\n        id: 'radiusInKms',\n        labelKey: 'Area : ',\n        unit: 'Sq.Ml'\n      },\n      tooltipButton: {\n        dataKey: 'tooltipButton',\n        dataType: 'component'\n      }\n    }\n  },\n  circleIntransit: {\n    permissions: [\n      'geofenceName',\n      'radiusInKms',\n      '_thisCoordinate',\n      'isHighAlert',\n      '_thisLocation',\n      '_thisComponent'\n    ],\n\n    definitions: {\n      geofenceName: {\n        classList: 'title',\n        dataKey: 'geofenceName',\n        dataType: 'text',\n        id: 'geofenceName',\n        labelKey: 'Geofence Name: '\n      },\n      radiusInKms: {\n        classList: 'title',\n        dataKey: 'radiusInKms',\n        dataType: '_thisComponent',\n        id: 'radiusInKms',\n        labelKey: 'Radius: ',\n        unit: 'Kms',\n        html: ({ value }: { value: any }) => (\n          <StyledText>{`${value}`}</StyledText>\n        )\n      },\n      isHighAlert: {\n        classList: 'title',\n        dataKey: 'isHighAlert',\n        dataType: 'boolean',\n        id: 'isHighAlert',\n        labelKey: 'Alert Type: ',\n        trueValue: 'High Alert',\n        falseValue: 'Low Alert'\n      },\n      _thisCoordinate: {\n        classList: 'title',\n        dataKey: ['latitude', 'longitude'],\n        dataType: '_thisDependent',\n        labelKey: 'Coordinates: '\n      },\n      _thisLocation: {\n        classList: 'title',\n        dataKey: '_thisLocation',\n        dataType: '_thisLocation',\n        id: '_thisLocation',\n        labelKey: 'Location: '\n      },\n      _thisComponent: {\n        classList: 'title',\n        dataKey: 'centerCords',\n        dataType: '_thisComponent',\n        id: 'centerCords',\n        labelKey: '',\n        html: ({ value }: { value: any }) => (\n          <StyledText>{`${value}`}</StyledText>\n        )\n      }\n    }\n  },\n  pickupLocation:{\n    permissions: [\n      'orderNo',\n      'startTimeWindow',\n      'endTimeWindow',\n      'customerName',\n      'addressDetails',\n      '_thisLocation'\n    ],\n    definitions: {\n      orderNo: {\n        classList: '',\n        dataKey: 'orderNo',\n        dataType: 'text',\n        id: 'orderNo',\n        labelKey: 'Order Number'\n      },\n      startTimeWindow: {\n        classList: '',\n        dataKey: 'startTimeWindow',\n        dataType: 'datetime',\n        id: 'startTimeWindow',\n        labelKey: 'Start Time'\n      },\n      endTimeWindow: {\n        classList: '',\n        dataKey: 'endTimeWindow',\n        dataType: 'datetime',\n        id: 'endTimeWindow',\n        labelKey: 'End Time'\n      },\n      customerName: {\n        classList: '',\n        dataKey: 'destClientNodeName',\n        dataType: 'text',\n        id: 'destClientNodeName',\n        labelKey: 'Customer Name'\n      },\n      addressDetails: {\n        classList: '',\n        dataKey: 'addressDetails',\n        dataType: 'text',\n        id: 'addressDetails',\n        labelKey: 'Deliver To'\n      },\n      _thisLocation: {\n        classList: 'title',\n        dataKey: '_thisLocation',\n        dataType: '_thisLocation',\n        id: '_thisLocation',\n        labelKey: 'Location: '\n      }\n    }\n  },\n  deliverLocation:{\n    permissions: [\n      'orderNo',\n      'startTimeWindow',\n      'endTimeWindow',\n      'customerName',\n      'addressDetails',\n      '_thisLocation'\n    ],\n    definitions: {\n      orderNo: {\n        classList: '',\n        dataKey: 'orderNo',\n        dataType: 'text',\n        id: 'orderNo',\n        labelKey: 'Order Number'\n      },\n      startTimeWindow: {\n        classList: '',\n        dataKey: 'startTimeWindow',\n        dataType: 'datetime',\n        id: 'startTimeWindow',\n        labelKey: 'Start Time'\n      },\n      endTimeWindow: {\n        classList: '',\n        dataKey: 'endTimeWindow',\n        dataType: 'datetime',\n        id: 'endTimeWindow',\n        labelKey: 'End Time'\n      },\n      customerName: {\n        classList: '',\n        dataKey: 'destClientNodeName',\n        dataType: 'text',\n        id: 'destClientNodeName',\n        labelKey: 'Customer Name'\n      },\n      addressDetails: {\n        classList: '',\n        dataKey: 'addressDetails',\n        dataType: 'text',\n        id: 'addressDetails',\n        labelKey: 'Deliver To'\n      },\n      _thisLocation: {\n        classList: 'title',\n        dataKey: '_thisLocation',\n        dataType: '_thisLocation',\n        id: '_thisLocation',\n        labelKey: 'Location: '\n      }\n    }\n  },\n  haulTripPopup:{\n    permissions:['tripNo', 'batteryPercentage', 'trackerId', 'speed', '_thisCoordinates', '_thisLocation']\n  }\n}\n\nexport default infowindowStructure\n"]},"metadata":{},"sourceType":"module"}