{"ast":null,"code":"import _slicedToArray from \"/Users/farhanansari/Desktop/CODE/PrxProject/untitled folder/reactStoryBook/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/slicedToArray\";\n\nvar _this = this,\n    _jsxFileName = \"/Users/farhanansari/Desktop/CODE/PrxProject/untitled folder/reactStoryBook/src/components/molecules/Breadcrumb/index.tsx\";\n\nimport React, { useEffect, useRef, useState } from 'react';\nimport FontIcon from '../../atoms/FontIcon';\nimport IconDropdown from '../IconDropdown';\nimport Position from '../Position';\nimport Tooltip from '../../molecules/Tooltip';\nimport { BreadcrumbButtonElement, BreadcrumbDropdownElement, BreadcrumbIconElement, BreadcrumbNameElement, BreadcrumbStyled, BreadCrumbDropdownWrapper } from './Breadcrumb.styled';\n\nvar Breadcrumb = function Breadcrumb(_ref) {\n  var options = _ref.options,\n      _ref$onClick = _ref.onClick,\n      _onClick = _ref$onClick === void 0 ? function () {} : _ref$onClick,\n      optionList = _ref.optionList,\n      width = _ref.width,\n      onSetAsFavourite = _ref.onSetAsFavourite,\n      variant = _ref.variant;\n\n  var _useState = useState(undefined),\n      _useState2 = _slicedToArray(_useState, 2),\n      linkLabel = _useState2[0],\n      setLinkLabel = _useState2[1];\n\n  var _useState3 = useState(false),\n      _useState4 = _slicedToArray(_useState3, 2),\n      isMenuOpen = _useState4[0],\n      setIsMenuOpen = _useState4[1];\n\n  var node = useRef(null); // close\n\n  var handleOutsideClick = function handleOutsideClick(e) {\n    var n = node.current;\n    if (n === null || n === void 0 ? void 0 : n.contains(e.target)) return;\n    setIsMenuOpen(false);\n  };\n\n  var getDropdownLabel = function getDropdownLabel(title) {\n    var dropdownLabel = '';\n    optionList === null || optionList === void 0 ? void 0 : optionList.forEach(function (option) {\n      var _option$options;\n\n      if (option === null || option === void 0 ? void 0 : (_option$options = option.options) === null || _option$options === void 0 ? void 0 : _option$options.length) {\n        option.options.forEach(function (subOpt) {\n          if (subOpt.value === title) {\n            dropdownLabel = \"\".concat(option.label, \" - \").concat(subOpt.label);\n          }\n        });\n      } else {\n        if (option.value === title) {\n          dropdownLabel = option.label;\n        }\n      }\n    });\n    return dropdownLabel;\n  };\n\n  useEffect(function () {\n    optionList && document.addEventListener('mousedown', handleOutsideClick);\n    return function () {\n      optionList && document.removeEventListener('mousedown', handleOutsideClick);\n    };\n  }, []); // if breadcrumb is a link then make it dropdown.whenever click outside close it\n\n  return /*#__PURE__*/React.createElement(Position, {\n    type: \"relative\",\n    display: \"inline-block\",\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 63,\n      columnNumber: 5\n    }\n  }, options.map(function (_ref2, index) {\n    var id = _ref2.id,\n        label = _ref2.label,\n        toolTipMessage = _ref2.toolTipMessage,\n        _ref2$disabled = _ref2.disabled,\n        disabled = _ref2$disabled === void 0 ? true : _ref2$disabled;\n    var option = optionList === null || optionList === void 0 ? void 0 : optionList.find(function (option) {\n      return (option === null || option === void 0 ? void 0 : option.id) === id;\n    });\n    return /*#__PURE__*/React.createElement(BreadcrumbStyled, {\n      key: id,\n      __self: _this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 67,\n        columnNumber: 11\n      }\n    }, disabled ? /*#__PURE__*/React.createElement(BreadcrumbNameElement, {\n      __self: _this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 69,\n        columnNumber: 15\n      }\n    }, label) : optionList ? /*#__PURE__*/React.createElement(BreadCrumbDropdownWrapper, {\n      ref: node,\n      onClick: function onClick() {\n        return setIsMenuOpen(!isMenuOpen);\n      },\n      __self: _this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 71,\n        columnNumber: 15\n      }\n    }, variant === 'multilevel' ? /*#__PURE__*/React.createElement(IconDropdown, {\n      variant: \"multilevel-breadcrumb\",\n      optionList: optionList || [],\n      onChange: function onChange(value) {\n        setIsMenuOpen(false);\n        setLinkLabel(value);\n\n        _onClick(value);\n      },\n      value: linkLabel || (option === null || option === void 0 ? void 0 : option.value),\n      menuIsOpen: isMenuOpen,\n      __self: _this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 76,\n        columnNumber: 19\n      }\n    }) : /*#__PURE__*/React.createElement(IconDropdown, {\n      variant: \"bread-crumb\",\n      optionList: optionList || [],\n      onChange: function onChange(value) {\n        setIsMenuOpen(false);\n        setLinkLabel(value);\n\n        _onClick(value);\n      },\n      value: linkLabel || (option === null || option === void 0 ? void 0 : option.value),\n      menuIsOpen: isMenuOpen,\n      width: width,\n      onSetAsFavourite: onSetAsFavourite,\n      __self: _this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 88,\n        columnNumber: 19\n      }\n    }), /*#__PURE__*/React.createElement(Tooltip, {\n      message: toolTipMessage,\n      hide: isMenuOpen || !toolTipMessage,\n      hover: !isMenuOpen,\n      __self: _this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 103,\n        columnNumber: 17\n      }\n    }, /*#__PURE__*/React.createElement(BreadcrumbDropdownElement, {\n      variant: \"link\",\n      id: \"label\",\n      __self: _this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 108,\n        columnNumber: 19\n      }\n    }, linkLabel && getDropdownLabel(linkLabel) || label, /*#__PURE__*/React.createElement(\"span\", {\n      style: {\n        marginTop: '11px',\n        marginLeft: '8px'\n      },\n      __self: _this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 110,\n        columnNumber: 21\n      }\n    }, /*#__PURE__*/React.createElement(FontIcon, {\n      size: 12,\n      color: \"primary.main\",\n      variant: \"breadcrumb-down-thin\",\n      hoverColor: \"primary.main\",\n      __self: _this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 111,\n        columnNumber: 23\n      }\n    }))))) : /*#__PURE__*/React.createElement(BreadcrumbButtonElement, {\n      onClick: function onClick() {\n        return _onClick(id);\n      },\n      variant: \"link\",\n      __self: _this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 122,\n        columnNumber: 15\n      }\n    }, label), options.length - 1 > index && /*#__PURE__*/React.createElement(BreadcrumbIconElement, {\n      __self: _this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 131,\n        columnNumber: 15\n      }\n    }, /*#__PURE__*/React.createElement(FontIcon, {\n      variant: \"angle-right-thin\",\n      color: \"grey.A200\",\n      size: 10,\n      __self: _this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 132,\n        columnNumber: 17\n      }\n    })));\n  }));\n};\n\nexport default Breadcrumb;","map":{"version":3,"sources":["/Users/farhanansari/Desktop/CODE/PrxProject/untitled folder/reactStoryBook/src/components/molecules/Breadcrumb/index.tsx"],"names":["React","useEffect","useRef","useState","FontIcon","IconDropdown","Position","Tooltip","BreadcrumbButtonElement","BreadcrumbDropdownElement","BreadcrumbIconElement","BreadcrumbNameElement","BreadcrumbStyled","BreadCrumbDropdownWrapper","Breadcrumb","options","onClick","optionList","width","onSetAsFavourite","variant","undefined","linkLabel","setLinkLabel","isMenuOpen","setIsMenuOpen","node","handleOutsideClick","e","n","current","contains","target","getDropdownLabel","title","dropdownLabel","forEach","option","length","subOpt","value","label","document","addEventListener","removeEventListener","map","index","id","toolTipMessage","disabled","find","marginTop","marginLeft"],"mappings":"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","sourcesContent":["import React, { useEffect, useRef, useState } from 'react'\nimport FontIcon from '../../atoms/FontIcon'\nimport IconDropdown from '../IconDropdown'\nimport Position from '../Position'\nimport Tooltip from '../../molecules/Tooltip'\n\nimport {\n  BreadcrumbButtonElement,\n  BreadcrumbDropdownElement,\n  BreadcrumbIconElement,\n  BreadcrumbNameElement,\n  BreadcrumbStyled,\n  BreadCrumbDropdownWrapper\n} from './Breadcrumb.styled'\nimport { IBreadcrumbProps } from './interfaces'\n\nconst Breadcrumb = ({\n  options,\n  onClick = () => {},\n  optionList,\n  width,\n  onSetAsFavourite,\n  variant\n}: IBreadcrumbProps) => {\n  const [linkLabel, setLinkLabel] = useState<string | undefined>(undefined)\n  const [isMenuOpen, setIsMenuOpen] = useState(false)\n  const node = useRef(null)\n\n  // close\n  const handleOutsideClick = (e: any) => {\n    const n = (node.current as unknown) as Node\n    if (n?.contains(e.target)) return\n    setIsMenuOpen(false)\n  }\n\n  const getDropdownLabel = (title: string) => {\n    let dropdownLabel = ''\n    optionList?.forEach((option: any) => {\n      if (option?.options?.length) {\n        option.options.forEach((subOpt: any) => {\n          if (subOpt.value === title) {\n            dropdownLabel = `${option.label} - ${subOpt.label}`\n          }\n        })\n      } else {\n        if (option.value === title) {\n          dropdownLabel = option.label\n        }\n      }\n    })\n    return dropdownLabel\n  }\n\n  useEffect(() => {\n    optionList && document.addEventListener('mousedown', handleOutsideClick)\n    return () => {\n      optionList &&\n        document.removeEventListener('mousedown', handleOutsideClick)\n    }\n  }, [])\n  // if breadcrumb is a link then make it dropdown.whenever click outside close it\n  return (\n    <Position type='relative' display='inline-block'>\n      {options.map(({ id, label, toolTipMessage, disabled = true }, index) => {\n        const option = optionList?.find((option: any) => option?.id === id)\n        return (\n          <BreadcrumbStyled key={id}>\n            {disabled ? (\n              <BreadcrumbNameElement>{label}</BreadcrumbNameElement>\n            ) : optionList ? (\n              <BreadCrumbDropdownWrapper\n                ref={node}\n                onClick={() => setIsMenuOpen(!isMenuOpen)}\n              >\n                {variant === 'multilevel' ? (\n                  <IconDropdown\n                    variant='multilevel-breadcrumb'\n                    optionList={optionList || []}\n                    onChange={(value: any) => {\n                      setIsMenuOpen(false)\n                      setLinkLabel(value)\n                      onClick(value)\n                    }}\n                    value={linkLabel || option?.value}\n                    menuIsOpen={isMenuOpen}\n                  />\n                ) : (\n                  <IconDropdown\n                    variant='bread-crumb'\n                    optionList={optionList || []}\n                    onChange={(value: any) => {\n                      setIsMenuOpen(false)\n                      setLinkLabel(value)\n                      onClick(value)\n                    }}\n                    value={linkLabel || option?.value}\n                    menuIsOpen={isMenuOpen}\n                    width={width}\n                    onSetAsFavourite={onSetAsFavourite}\n                  />\n                )}\n\n                <Tooltip\n                  message={toolTipMessage}\n                  hide={isMenuOpen || !toolTipMessage}\n                  hover={!isMenuOpen}\n                >\n                  <BreadcrumbDropdownElement variant='link' id='label'>\n                    {(linkLabel && getDropdownLabel(linkLabel)) || label}\n                    <span style={{ marginTop: '11px', marginLeft: '8px' }}>\n                      <FontIcon\n                        size={12}\n                        color='primary.main'\n                        variant='breadcrumb-down-thin'\n                        hoverColor='primary.main'\n                      />\n                    </span>\n                  </BreadcrumbDropdownElement>\n                </Tooltip>\n              </BreadCrumbDropdownWrapper>\n            ) : (\n              <BreadcrumbButtonElement\n                onClick={() => onClick(id)}\n                variant='link'\n              >\n                {label}\n              </BreadcrumbButtonElement>\n            )}\n\n            {options.length - 1 > index && (\n              <BreadcrumbIconElement>\n                <FontIcon\n                  variant='angle-right-thin'\n                  color='grey.A200'\n                  size={10}\n                />\n              </BreadcrumbIconElement>\n            )}\n          </BreadcrumbStyled>\n        )\n      })}\n    </Position>\n  )\n}\n\nexport default Breadcrumb\n"]},"metadata":{},"sourceType":"module"}