{"ast":null,"code":"import _slicedToArray from \"/Users/farhanansari/Desktop/CODE/PrxProject/untitled folder/reactStoryBook/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/slicedToArray\";\n\nvar _this = this,\n    _jsxFileName = \"/Users/farhanansari/Desktop/CODE/PrxProject/untitled folder/reactStoryBook/src/components/molecules/PaginationBar/index.tsx\";\n\nimport React, { useState, useEffect, useCallback } from 'react';\nimport { StyledPagination, PageRange, IconButtonStyled } from './StyledPagination'; // import IconButtonComponent from '../../atoms/IconButton'\n// import DropDown from '../DropDown'\n\nimport Box from '../../atoms/Box';\nimport IconDropdown from '../IconDropdown';\nimport Loader from '../../atoms/Loader';\nimport { StyledLoader } from './StyledLoader';\n\nvar calculateRange = function calculateRange(pageNumber, pageSize) {\n  pageNumber = !pageNumber || pageNumber <= 0 ? 1 : pageNumber;\n  var startIndex = (pageNumber - 1) * pageSize + 1;\n  var endIndex = startIndex + pageSize - 1;\n  return [startIndex, endIndex];\n};\n\nvar PaginationBar = function PaginationBar(_ref) {\n  var _ref$pageSize = _ref.pageSize,\n      pageSize = _ref$pageSize === void 0 ? 0 : _ref$pageSize,\n      _ref$totalRows = _ref.totalRows,\n      totalRows = _ref$totalRows === void 0 ? 0 : _ref$totalRows,\n      _ref$disableNext = _ref.disableNext,\n      disableNext = _ref$disableNext === void 0 ? false : _ref$disableNext,\n      _ref$pageNumber = _ref.pageNumber,\n      pageNumber = _ref$pageNumber === void 0 ? 1 : _ref$pageNumber,\n      _ref$pageSizeOptionLi = _ref.pageSizeOptionList,\n      pageSizeOptionList = _ref$pageSizeOptionLi === void 0 ? [{\n    value: '25',\n    label: '25 per page'\n  }, {\n    value: '50',\n    label: '50 per page'\n  }, {\n    value: '100',\n    label: '100 per page'\n  }, {\n    value: '200',\n    label: '200 per page'\n  }] : _ref$pageSizeOptionLi,\n      hidePageSizeOption = _ref.hidePageSizeOption,\n      _ref$isTotalCountLoad = _ref.isTotalCountLoading,\n      isTotalCountLoading = _ref$isTotalCountLoad === void 0 ? false : _ref$isTotalCountLoad,\n      _ref$moreResultsExist = _ref.moreResultsExists,\n      moreResultsExists = _ref$moreResultsExist === void 0 ? false : _ref$moreResultsExist,\n      _ref$onPageChange = _ref.onPageChange,\n      onPageChange = _ref$onPageChange === void 0 ? function () {} : _ref$onPageChange,\n      _ref$onPageSizeChange = _ref.onPageSizeChange,\n      onPageSizeChange = _ref$onPageSizeChange === void 0 ? function () {} : _ref$onPageSizeChange,\n      _ref$loading = _ref.loading,\n      loading = _ref$loading === void 0 ? false : _ref$loading;\n\n  var _useState = useState(1),\n      _useState2 = _slicedToArray(_useState, 2),\n      startIndex = _useState2[0],\n      setStartIndex = _useState2[1];\n\n  var _useState3 = useState(totalRows),\n      _useState4 = _slicedToArray(_useState3, 2),\n      endIndex = _useState4[0],\n      setEndIndex = _useState4[1];\n\n  var _useState5 = useState(pageNumber),\n      _useState6 = _slicedToArray(_useState5, 2),\n      _pageNumber = _useState6[0],\n      _setPageNumber = _useState6[1];\n\n  var _useState7 = useState(pageSize),\n      _useState8 = _slicedToArray(_useState7, 2),\n      _pageSize = _useState8[0],\n      _setPageSize = _useState8[1];\n\n  var _useState9 = useState(pageSizeOptionList),\n      _useState10 = _slicedToArray(_useState9, 1),\n      _pageSizeOptionList = _useState10[0];\n\n  var _useState11 = useState(pageNumber >= Math.ceil(totalRows / pageSize) && !moreResultsExists || totalRows <= _pageSize),\n      _useState12 = _slicedToArray(_useState11, 2),\n      isNextDisabled = _useState12[0],\n      setIsNextDisabled = _useState12[1];\n\n  var _useState13 = useState(pageNumber === 1),\n      _useState14 = _slicedToArray(_useState13, 2),\n      isPreviousDisabled = _useState14[0],\n      setIsPreviousDisabled = _useState14[1]; //\n\n\n  useEffect(function () {\n    _setPageNumber(pageNumber);\n  }, [pageNumber]); // in case the page size changes externally, re-calculate the internal state too\n  // like in LIVE\n\n  useEffect(function () {\n    // handlePageSizeChange(Number(pageSize))\n    _setPageSize(pageSize);\n  }, [pageSize]);\n  useEffect(function () {\n    var _calculateRange = calculateRange(_pageNumber, _pageSize),\n        _calculateRange2 = _slicedToArray(_calculateRange, 2),\n        newStartIndex = _calculateRange2[0],\n        newEndIndex = _calculateRange2[1];\n\n    setStartIndex(newStartIndex);\n    setEndIndex(newEndIndex);\n    setIsPreviousDisabled(_pageNumber === 1);\n    setIsNextDisabled(_pageNumber >= Math.ceil(totalRows / _pageSize) && !moreResultsExists || totalRows <= _pageSize);\n  }, [totalRows, _pageSize, _pageNumber]);\n  var handlePageSizeChange = useCallback(function (newPageSize) {\n    _setPageSize(newPageSize);\n\n    _setPageNumber(1);\n\n    onPageSizeChange(newPageSize);\n  }, [_setPageSize, _setPageNumber, onPageSizeChange]);\n  var handlePageChange = useCallback(function (newPageNumber) {\n    _setPageNumber(newPageNumber);\n\n    onPageChange(newPageNumber - 1);\n  }, [_setPageNumber, onPageChange]);\n  return /*#__PURE__*/React.createElement(StyledPagination, {\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 113,\n      columnNumber: 5\n    }\n  }, /*#__PURE__*/React.createElement(IconButtonStyled, {\n    iconVariant: \"angle-left\",\n    color: \"grey.A1000\",\n    iconSize: \"xs\",\n    onlyIcon: true,\n    circle: true,\n    onClick: function onClick() {\n      return handlePageChange(_pageNumber - 1);\n    },\n    disabled: isPreviousDisabled || loading,\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 114,\n      columnNumber: 7\n    }\n  }), !isTotalCountLoading ? /*#__PURE__*/React.createElement(PageRange, {\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 124,\n      columnNumber: 9\n    }\n  }, \"\".concat(startIndex, \" - \").concat(totalRows <= endIndex && totalRows >= startIndex ? totalRows : endIndex, \" of \").concat(moreResultsExists ? totalRows <= endIndex ? endIndex === 1000 ? 1000 : \"\".concat(endIndex, \"+\") : endIndex >= 1000 ? disableNext ? \"\".concat(endIndex) : \"\".concat(endIndex, \"+\") : '1000+' : totalRows)) : /*#__PURE__*/React.createElement(PageRange, {\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 142,\n      columnNumber: 9\n    }\n  }, \"\".concat(startIndex, \" - \").concat(totalRows <= endIndex && totalRows >= startIndex ? totalRows : endIndex, \" of \"), /*#__PURE__*/React.createElement(StyledLoader, {\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 148,\n      columnNumber: 11\n    }\n  }, /*#__PURE__*/React.createElement(Loader, {\n    center: true,\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 149,\n      columnNumber: 13\n    }\n  }))), /*#__PURE__*/React.createElement(IconButtonStyled, {\n    iconVariant: \"angle-right\",\n    color: \"grey.A1000\",\n    iconSize: \"xs\",\n    onlyIcon: true,\n    circle: true,\n    onClick: function onClick() {\n      return handlePageChange(_pageNumber + 1);\n    },\n    disabled: disableNext || isNextDisabled || loading,\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 153,\n      columnNumber: 7\n    }\n  }), !hidePageSizeOption && /*#__PURE__*/React.createElement(Box, {\n    mt: \"-5px\",\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 164,\n      columnNumber: 9\n    }\n  }, /*#__PURE__*/React.createElement(IconDropdown, {\n    variant: \"pagination-size\",\n    width: \"100px\",\n    optionList: _pageSizeOptionList,\n    onChange: function onChange(newPageSize) {\n      return handlePageSizeChange(Number(newPageSize));\n    },\n    value: String(_pageSize),\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 165,\n      columnNumber: 11\n    }\n  })));\n};\n\nPaginationBar.__docgenInfo = {\n  \"description\": \"\",\n  \"methods\": [],\n  \"displayName\": \"PaginationBar\",\n  \"props\": {\n    \"pageSize\": {\n      \"defaultValue\": {\n        \"value\": \"0\",\n        \"computed\": false\n      },\n      \"required\": false,\n      \"tsType\": {\n        \"name\": \"number\"\n      },\n      \"description\": \"\"\n    },\n    \"totalRows\": {\n      \"defaultValue\": {\n        \"value\": \"0\",\n        \"computed\": false\n      },\n      \"required\": false,\n      \"tsType\": {\n        \"name\": \"number\"\n      },\n      \"description\": \"\"\n    },\n    \"disableNext\": {\n      \"defaultValue\": {\n        \"value\": \"false\",\n        \"computed\": false\n      },\n      \"required\": false,\n      \"tsType\": {\n        \"name\": \"boolean\"\n      },\n      \"description\": \"\"\n    },\n    \"pageNumber\": {\n      \"defaultValue\": {\n        \"value\": \"1\",\n        \"computed\": false\n      },\n      \"required\": false,\n      \"tsType\": {\n        \"name\": \"number\"\n      },\n      \"description\": \"\"\n    },\n    \"pageSizeOptionList\": {\n      \"defaultValue\": {\n        \"value\": \"[\\n  { value: '25', label: '25 per page' },\\n  { value: '50', label: '50 per page' },\\n  { value: '100', label: '100 per page' },\\n  { value: '200', label: '200 per page' }\\n]\",\n        \"computed\": false\n      },\n      \"required\": false,\n      \"tsType\": {\n        \"name\": \"Array\",\n        \"elements\": [{\n          \"name\": \"OptionType\"\n        }],\n        \"raw\": \"OptionType[]\"\n      },\n      \"description\": \"\"\n    },\n    \"isTotalCountLoading\": {\n      \"defaultValue\": {\n        \"value\": \"false\",\n        \"computed\": false\n      },\n      \"required\": false,\n      \"tsType\": {\n        \"name\": \"boolean\"\n      },\n      \"description\": \"\"\n    },\n    \"moreResultsExists\": {\n      \"defaultValue\": {\n        \"value\": \"false\",\n        \"computed\": false\n      },\n      \"required\": false,\n      \"tsType\": {\n        \"name\": \"boolean\"\n      },\n      \"description\": \"\"\n    },\n    \"onPageChange\": {\n      \"defaultValue\": {\n        \"value\": \"() => {}\",\n        \"computed\": false\n      },\n      \"required\": false,\n      \"tsType\": {\n        \"name\": \"signature\",\n        \"type\": \"function\",\n        \"raw\": \"(pageNumber: number) => void\",\n        \"signature\": {\n          \"arguments\": [{\n            \"name\": \"pageNumber\",\n            \"type\": {\n              \"name\": \"number\"\n            }\n          }],\n          \"return\": {\n            \"name\": \"void\"\n          }\n        }\n      },\n      \"description\": \"\"\n    },\n    \"onPageSizeChange\": {\n      \"defaultValue\": {\n        \"value\": \"() => {}\",\n        \"computed\": false\n      },\n      \"required\": false,\n      \"tsType\": {\n        \"name\": \"signature\",\n        \"type\": \"function\",\n        \"raw\": \"(pageSize: number) => void\",\n        \"signature\": {\n          \"arguments\": [{\n            \"name\": \"pageSize\",\n            \"type\": {\n              \"name\": \"number\"\n            }\n          }],\n          \"return\": {\n            \"name\": \"void\"\n          }\n        }\n      },\n      \"description\": \"\"\n    },\n    \"loading\": {\n      \"defaultValue\": {\n        \"value\": \"false\",\n        \"computed\": false\n      },\n      \"required\": false,\n      \"tsType\": {\n        \"name\": \"boolean\"\n      },\n      \"description\": \"\"\n    },\n    \"hidePageSizeOption\": {\n      \"required\": false,\n      \"tsType\": {\n        \"name\": \"boolean\"\n      },\n      \"description\": \"\"\n    }\n  }\n};\nexport default PaginationBar;\n\nif (typeof STORYBOOK_REACT_CLASSES !== \"undefined\") {\n  STORYBOOK_REACT_CLASSES[\"src/components/molecules/PaginationBar/index.tsx\"] = {\n    name: \"PaginationBar\",\n    docgenInfo: PaginationBar.__docgenInfo,\n    path: \"src/components/molecules/PaginationBar/index.tsx\"\n  };\n}","map":{"version":3,"sources":["/Users/farhanansari/Desktop/CODE/PrxProject/untitled folder/reactStoryBook/src/components/molecules/PaginationBar/index.tsx"],"names":["React","useState","useEffect","useCallback","StyledPagination","PageRange","IconButtonStyled","Box","IconDropdown","Loader","StyledLoader","calculateRange","pageNumber","pageSize","startIndex","endIndex","PaginationBar","totalRows","disableNext","pageSizeOptionList","value","label","hidePageSizeOption","isTotalCountLoading","moreResultsExists","onPageChange","onPageSizeChange","loading","setStartIndex","setEndIndex","_pageNumber","_setPageNumber","_pageSize","_setPageSize","_pageSizeOptionList","Math","ceil","isNextDisabled","setIsNextDisabled","isPreviousDisabled","setIsPreviousDisabled","newStartIndex","newEndIndex","handlePageSizeChange","newPageSize","handlePageChange","newPageNumber","Number","String"],"mappings":"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","sourcesContent":["import React, { useState, useEffect, useCallback } from 'react'\nimport {\n  StyledPagination,\n  PageRange,\n  IconButtonStyled\n} from './StyledPagination'\n// import IconButtonComponent from '../../atoms/IconButton'\n// import DropDown from '../DropDown'\nimport Box from '../../atoms/Box'\nimport IconDropdown from '../IconDropdown'\nimport { OptionType } from '../DropDown/interface'\nimport Loader from '../../atoms/Loader'\nimport { StyledLoader } from './StyledLoader'\n\nexport interface IPaginationProps {\n  pageNumber: number\n  pageSize: number\n  totalRows: number\n  disableNext?: boolean\n  pageSizeOptionList?: OptionType[]\n  hidePageSizeOption?: boolean\n  onPageChange: (pageNumber: number) => void\n  onPageSizeChange: (pageSize: number) => void\n  isTotalCountLoading: boolean\n  moreResultsExists: boolean\n  loading?:boolean\n}\n\nconst calculateRange = (\n  pageNumber: number,\n  pageSize: number\n): [number, number] => {\n  pageNumber = !pageNumber || pageNumber <= 0 ? 1 : pageNumber\n\n  const startIndex = (pageNumber - 1) * pageSize + 1\n  const endIndex = startIndex + pageSize - 1\n\n  return [startIndex, endIndex]\n}\n\nconst PaginationBar = ({\n  pageSize = 0,\n  totalRows = 0,\n  disableNext = false,\n  pageNumber = 1,\n  pageSizeOptionList = [\n    { value: '25', label: '25 per page' },\n    { value: '50', label: '50 per page' },\n    { value: '100', label: '100 per page' },\n    { value: '200', label: '200 per page' }\n  ],\n  hidePageSizeOption,\n  isTotalCountLoading = false,\n  moreResultsExists = false,\n  onPageChange = () => {},\n  onPageSizeChange = () => {},\n  loading = false\n}: IPaginationProps) => {\n  const [startIndex, setStartIndex] = useState<number>(1)\n  const [endIndex, setEndIndex] = useState<number>(totalRows)\n  const [_pageNumber, _setPageNumber] = useState<number>(pageNumber)\n  const [_pageSize, _setPageSize] = useState<number>(pageSize)\n  const [_pageSizeOptionList] = useState<OptionType[]>(pageSizeOptionList)\n  const [isNextDisabled, setIsNextDisabled] = useState<boolean>(\n    (pageNumber >= Math.ceil(totalRows / pageSize) && !moreResultsExists)  || totalRows <= _pageSize\n  )\n \n  const [isPreviousDisabled, setIsPreviousDisabled] = useState<boolean>(\n    pageNumber === 1\n  )\n//\n  useEffect(() => {\n    _setPageNumber(pageNumber)\n  }, [pageNumber])\n\n  // in case the page size changes externally, re-calculate the internal state too\n  // like in LIVE\n  useEffect(() => {\n    // handlePageSizeChange(Number(pageSize))\n    _setPageSize(pageSize)\n  }, [pageSize])\n\n  useEffect(() => {\n    const [newStartIndex, newEndIndex] = calculateRange(_pageNumber, _pageSize)\n    setStartIndex(newStartIndex)\n    setEndIndex(newEndIndex)\n    setIsPreviousDisabled(_pageNumber === 1)\n    setIsNextDisabled(\n    \n      (_pageNumber >= Math.ceil(totalRows / _pageSize) && !moreResultsExists) ||\n        totalRows <= _pageSize\n    )\n  }, [totalRows, _pageSize, _pageNumber])\n\n  const handlePageSizeChange = useCallback(\n    (newPageSize: number) => {\n      _setPageSize(newPageSize)\n      _setPageNumber(1)\n      onPageSizeChange(newPageSize)\n    },\n    [_setPageSize, _setPageNumber, onPageSizeChange]\n  )\n\n  const handlePageChange = useCallback(\n    (newPageNumber: number) => {\n      _setPageNumber(newPageNumber)\n      onPageChange(newPageNumber - 1)\n    },\n    [_setPageNumber, onPageChange]\n  )\n\n  return (\n    <StyledPagination>\n      <IconButtonStyled\n        iconVariant='angle-left'\n        color='grey.A1000'\n        iconSize='xs'\n        onlyIcon\n        circle\n        onClick={() => handlePageChange(_pageNumber - 1)}\n        disabled={isPreviousDisabled || loading}\n      />\n      {!isTotalCountLoading ? (\n        <PageRange>{`${startIndex} - ${\n          totalRows <= endIndex && totalRows >= startIndex\n            ? totalRows\n            : endIndex\n        } of ${\n          moreResultsExists\n            ? totalRows <= endIndex\n              ? endIndex === 1000\n                ? 1000\n                : `${endIndex}+`\n              : endIndex >= 1000\n              ? disableNext\n              ? `${endIndex}`\n              : `${endIndex}+`\n              : '1000+'\n            : totalRows\n        }`}</PageRange>\n      ) : (\n        <PageRange>\n          {`${startIndex} - ${\n            totalRows <= endIndex && totalRows >= startIndex\n              ? totalRows\n              : endIndex\n          } of `}\n          <StyledLoader>\n            <Loader center />\n          </StyledLoader>\n        </PageRange>\n      )}\n      <IconButtonStyled\n        iconVariant='angle-right'\n        color='grey.A1000'\n        iconSize='xs'\n        onlyIcon\n        circle\n        onClick={() => handlePageChange(_pageNumber + 1)}\n        disabled={disableNext || isNextDisabled || loading}\n      />\n\n      {!hidePageSizeOption && (\n        <Box mt='-5px'>\n          <IconDropdown\n            variant='pagination-size'\n            width='100px'\n            optionList={_pageSizeOptionList}\n            onChange={(newPageSize) =>\n              handlePageSizeChange(Number(newPageSize))\n            }\n            value={String(_pageSize)}\n          />\n        </Box>\n      )}\n    </StyledPagination>\n  )\n}\n\nexport default PaginationBar\n"]},"metadata":{},"sourceType":"module"}