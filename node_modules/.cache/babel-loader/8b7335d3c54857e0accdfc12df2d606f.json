{"ast":null,"code":"import _objectWithoutProperties from \"/Users/farhanansari/Desktop/CODE/PrxProject/untitled folder/reactStoryBook/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/objectWithoutProperties\";\nimport _taggedTemplateLiteral from \"/Users/farhanansari/Desktop/CODE/PrxProject/untitled folder/reactStoryBook/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/taggedTemplateLiteral\";\n\nvar _this = this,\n    _jsxFileName = \"/Users/farhanansari/Desktop/CODE/PrxProject/untitled folder/reactStoryBook/src/components/atoms/TextArea/index.tsx\";\n\nfunction _templateObject() {\n  var data = _taggedTemplateLiteral([\"\\n  \", \"\\n  border: 1px solid\", \";\\n  font-size: 13px;\\n  resize: none;\\n  letter-spacing: 0.3px;\\n  padding: 10px 10px;\\n  margin: 18px 0;\\n  text-overflow: ellipsis;\\n  overflow: hidden;\\n  min-height: 40px;\\n  border-radius: 0;\\n  outline: none;\\n  transition: 0.15s ease-in-out;\\n  box-shadow: inset 0 1px 1px rgba(0, 0, 0, 0.075);\\n  &:focus {\\n    box-shadow: inset 0 1px 1px rgba(0, 0, 0, 0.075),\\n      0 0 8px rgba(102, 175, 233, 0.6);\\n  }\\n  width: 100%;\\n  overflow-y: scroll;\\n  #textArea[placeholder]:empty:before {\\n    content: attr(placeholder);\\n    color: \", \";\\n  }\\n\"]);\n\n  _templateObject = function _templateObject() {\n    return data;\n  };\n\n  return data;\n}\n\nimport React from 'react';\nimport styled from 'styled-components';\nimport { colorMixin } from '../../../utilities/mixins';\nimport Position from '../../molecules/Position';\nimport InputLabel from '../../molecules/InputLabel';\nvar TextAreaDefaultStyled = styled.textarea(_templateObject(), colorMixin, function (_ref) {\n  var _theme$colors, _theme$colors$grey;\n\n  var theme = _ref.theme;\n  return theme === null || theme === void 0 ? void 0 : (_theme$colors = theme.colors) === null || _theme$colors === void 0 ? void 0 : (_theme$colors$grey = _theme$colors.grey) === null || _theme$colors$grey === void 0 ? void 0 : _theme$colors$grey['A800'];\n}, function (_ref2) {\n  var _theme$colors2, _theme$colors2$grey;\n\n  var theme = _ref2.theme;\n  return theme === null || theme === void 0 ? void 0 : (_theme$colors2 = theme.colors) === null || _theme$colors2 === void 0 ? void 0 : (_theme$colors2$grey = _theme$colors2.grey) === null || _theme$colors2$grey === void 0 ? void 0 : _theme$colors2$grey['150'];\n});\nvar TextArea = React.forwardRef(function (_ref3, ref) {\n  var label = _ref3.label,\n      labelColor = _ref3.labelColor,\n      id = _ref3.id,\n      className = _ref3.className,\n      _ref3$border = _ref3.border,\n      border = _ref3$border === void 0 ? true : _ref3$border,\n      rest = _objectWithoutProperties(_ref3, [\"label\", \"labelColor\", \"id\", \"className\", \"border\"]);\n\n  return /*#__PURE__*/React.createElement(Position, {\n    type: \"relative\",\n    display: \"block\",\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 50,\n      columnNumber: 7\n    }\n  }, /*#__PURE__*/React.createElement(TextAreaDefaultStyled, Object.assign({\n    ref: ref,\n    role: \"default-textarea\",\n    id: \"textArea\",\n    className: \"\".concat(className, \"-input\"),\n    placeholder: \"\"\n  }, rest, {\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 51,\n      columnNumber: 9\n    }\n  })), /*#__PURE__*/React.createElement(Position, {\n    type: \"absolute\",\n    top: \"10px\",\n    left: \"10px\",\n    style: {\n      maxWidth: 'calc(100% - 20px)'\n    },\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 59,\n      columnNumber: 9\n    }\n  }, /*#__PURE__*/React.createElement(InputLabel, {\n    color: labelColor,\n    id: \"\".concat(id, \"-label\"),\n    className: \"\".concat(className, \"-label\"),\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 65,\n      columnNumber: 11\n    }\n  }, label)));\n});\nexport default TextArea;","map":{"version":3,"sources":["/Users/farhanansari/Desktop/CODE/PrxProject/untitled folder/reactStoryBook/src/components/atoms/TextArea/index.tsx"],"names":["React","styled","colorMixin","Position","InputLabel","TextAreaDefaultStyled","textarea","theme","colors","grey","TextArea","forwardRef","ref","label","labelColor","id","className","border","rest","maxWidth"],"mappings":";;;;;;;;;;;;;;;;AAAA,OAAOA,KAAP,MAAkB,OAAlB;AACA,OAAOC,MAAP,MAAmB,mBAAnB;AACA,SAASC,UAAT,QAA2B,2BAA3B;AACA,OAAOC,QAAP,MAAqB,0BAArB;AACA,OAAOC,UAAP,MAAuB,4BAAvB;AAgBA,IAAMC,qBAAqB,GAAGJ,MAAM,CAACK,QAAV,oBACvBJ,UADuB,EAEN;AAAA;;AAAA,MAAGK,KAAH,QAAGA,KAAH;AAAA,SAAeA,KAAf,aAAeA,KAAf,wCAAeA,KAAK,CAAEC,MAAtB,wEAAe,cAAeC,IAA9B,uDAAe,mBAAsB,MAAtB,CAAf;AAAA,CAFM,EAuBd;AAAA;;AAAA,MAAGF,KAAH,SAAGA,KAAH;AAAA,SAAeA,KAAf,aAAeA,KAAf,yCAAeA,KAAK,CAAEC,MAAtB,0EAAe,eAAeC,IAA9B,wDAAe,oBAAsB,KAAtB,CAAf;AAAA,CAvBc,CAA3B;AA0BA,IAAMC,QAAQ,GAAGV,KAAK,CAACW,UAAN,CACf,iBAA+DC,GAA/D,EAAuE;AAAA,MAApEC,KAAoE,SAApEA,KAAoE;AAAA,MAA7DC,UAA6D,SAA7DA,UAA6D;AAAA,MAAjDC,EAAiD,SAAjDA,EAAiD;AAAA,MAA7CC,SAA6C,SAA7CA,SAA6C;AAAA,2BAAlCC,MAAkC;AAAA,MAAlCA,MAAkC,6BAAzB,IAAyB;AAAA,MAAhBC,IAAgB;;AACrE,sBACE,oBAAC,QAAD;AAAU,IAAA,IAAI,EAAC,UAAf;AAA0B,IAAA,OAAO,EAAC,OAAlC;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,kBACE,oBAAC,qBAAD;AACE,IAAA,GAAG,EAAEN,GADP;AAEE,IAAA,IAAI,EAAC,kBAFP;AAGE,IAAA,EAAE,EAAC,UAHL;AAIE,IAAA,SAAS,YAAKI,SAAL,WAJX;AAKE,IAAA,WAAW,EAAC;AALd,KAMME,IANN;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KADF,eASE,oBAAC,QAAD;AACE,IAAA,IAAI,EAAC,UADP;AAEE,IAAA,GAAG,EAAC,MAFN;AAGE,IAAA,IAAI,EAAC,MAHP;AAIE,IAAA,KAAK,EAAE;AAAEC,MAAAA,QAAQ,EAAE;AAAZ,KAJT;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,kBAME,oBAAC,UAAD;AACE,IAAA,KAAK,EAAEL,UADT;AAEE,IAAA,EAAE,YAAKC,EAAL,WAFJ;AAGE,IAAA,SAAS,YAAKC,SAAL,WAHX;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KAKGH,KALH,CANF,CATF,CADF;AA0BD,CA5Bc,CAAjB;AA+BA,eAAeH,QAAf","sourcesContent":["import React from 'react'\nimport styled from 'styled-components'\nimport { colorMixin } from '../../../utilities/mixins'\nimport Position from '../../molecules/Position'\nimport InputLabel from '../../molecules/InputLabel'\n\nexport type tTextInputVariant = 'basic' | 'editable'\nexport interface ITextInputProps\n  extends React.DetailedHTMLProps<\n    React.TextareaHTMLAttributes<HTMLTextAreaElement>,\n    HTMLTextAreaElement\n  > {\n  id?: string\n  className?: string\n  label?: string\n  labelColor?: string\n  color?: string\n  border?: boolean\n}\n\nconst TextAreaDefaultStyled = styled.textarea`\n  ${colorMixin}\n  border: 1px solid${({ theme }) => theme?.colors?.grey?.['A800']};\n  font-size: 13px;\n  resize: none;\n  letter-spacing: 0.3px;\n  padding: 10px 10px;\n  margin: 18px 0;\n  text-overflow: ellipsis;\n  overflow: hidden;\n  min-height: 40px;\n  border-radius: 0;\n  outline: none;\n  transition: 0.15s ease-in-out;\n  box-shadow: inset 0 1px 1px rgba(0, 0, 0, 0.075);\n  &:focus {\n    box-shadow: inset 0 1px 1px rgba(0, 0, 0, 0.075),\n      0 0 8px rgba(102, 175, 233, 0.6);\n  }\n  width: 100%;\n  overflow-y: scroll;\n  #textArea[placeholder]:empty:before {\n    content: attr(placeholder);\n    color: ${({ theme }) => theme?.colors?.grey?.['150']};\n  }\n`\nconst TextArea = React.forwardRef<HTMLInputElement, ITextInputProps>(\n  ({ label, labelColor, id, className, border = true, ...rest }, ref) => {\n    return (\n      <Position type='relative' display='block'>\n        <TextAreaDefaultStyled\n          ref={ref as any}\n          role='default-textarea'\n          id='textArea'\n          className={`${className}-input`}\n          placeholder=''\n          {...rest}\n        />\n        <Position\n          type='absolute'\n          top='10px'\n          left='10px'\n          style={{ maxWidth: 'calc(100% - 20px)' }}\n        >\n          <InputLabel\n            color={labelColor}\n            id={`${id}-label`}\n            className={`${className}-label`}\n          >\n            {label}\n          </InputLabel>\n        </Position>\n      </Position>\n    )\n  }\n)\n\nexport default TextArea\n"]},"metadata":{},"sourceType":"module"}