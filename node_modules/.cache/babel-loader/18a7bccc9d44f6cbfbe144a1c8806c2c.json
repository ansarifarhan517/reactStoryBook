{"ast":null,"code":"import _toConsumableArray from \"/Users/farhanansari/Code/ui-library/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/toConsumableArray\";\nimport _objectWithoutProperties from \"/Users/farhanansari/Code/ui-library/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/objectWithoutProperties\";\n\nvar _this = this,\n    _jsxFileName = \"/Users/farhanansari/Code/ui-library/src/components/molecules/MultiSelect/components/Select/index.tsx\";\n\nimport React from 'react';\nimport ReactSelect from 'react-select/async';\n\nvar CustomSelect = function CustomSelect(_ref) {\n  var options = _ref.options,\n      loadOptions = _ref.loadOptions,\n      value = _ref.value,\n      _ref$onChange = _ref.onChange,\n      _onChange = _ref$onChange === void 0 ? function () {} : _ref$onChange,\n      _ref$allOption = _ref.allOption,\n      allOption = _ref$allOption === void 0 ? {\n    label: 'Select all',\n    value: '*'\n  } : _ref$allOption,\n      allowSelectAll = _ref.allowSelectAll,\n      rest = _objectWithoutProperties(_ref, [\"options\", \"loadOptions\", \"value\", \"onChange\", \"allOption\", \"allowSelectAll\"]);\n\n  if (allowSelectAll) {\n    return /*#__PURE__*/React.createElement(ReactSelect, Object.assign({}, rest, {\n      value: value,\n      maxMenuHeight: 200,\n      loadOptions: loadOptions,\n      defaultOptions: options ? [allOption].concat(_toConsumableArray(options)) : undefined,\n      onChange: function onChange(selected, event) {\n        var _event$option3;\n\n        if (selected !== null && selected.length > 0) {\n          if (selected[selected.length - 1].value === allOption.value) {\n            var _event$option;\n\n            return _onChange(event === null || event === void 0 ? void 0 : (_event$option = event.option) === null || _event$option === void 0 ? void 0 : _event$option.value, (event === null || event === void 0 ? void 0 : event.action) === 'select-option', options ? [allOption].concat(_toConsumableArray(options)) : [], event);\n          }\n\n          var result = [];\n\n          if (selected.length === (options === null || options === void 0 ? void 0 : options.length)) {\n            var _event$option2;\n\n            if (selected[0].value === allOption.value) {\n              result = (selected === null || selected === void 0 ? void 0 : selected.length) > 0 ? selected === null || selected === void 0 ? void 0 : selected.filter(function (option) {\n                return option.value !== allOption.value;\n              }) : [];\n            } else if (event.action === 'select-option') {\n              result = options ? _toConsumableArray(options) : [];\n            } else {}\n\n            return _onChange(event === null || event === void 0 ? void 0 : (_event$option2 = event.option) === null || _event$option2 === void 0 ? void 0 : _event$option2.value, (event === null || event === void 0 ? void 0 : event.action) === 'select-option', result, event);\n          }\n        }\n\n        return _onChange(event === null || event === void 0 ? void 0 : (_event$option3 = event.option) === null || _event$option3 === void 0 ? void 0 : _event$option3.value, (event === null || event === void 0 ? void 0 : event.action) === 'select-option', selected, event);\n      },\n      menuPlacement: \"auto\",\n      __self: _this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 19,\n        columnNumber: 7\n      }\n    }));\n  }\n\n  return /*#__PURE__*/React.createElement(ReactSelect, Object.assign({}, rest, {\n    value: value,\n    loadOptions: loadOptions,\n    defaultOptions: options ? _toConsumableArray(options) : undefined,\n    maxMenuHeight: 200,\n    menuPlacement: \"auto\",\n    onChange: function onChange(selected, event) {\n      var _event$option4;\n\n      _onChange(event === null || event === void 0 ? void 0 : (_event$option4 = event.option) === null || _event$option4 === void 0 ? void 0 : _event$option4.value, (event === null || event === void 0 ? void 0 : event.action) === 'select-option', selected, event);\n    },\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 68,\n      columnNumber: 5\n    }\n  }));\n};\n\nexport default CustomSelect;","map":{"version":3,"sources":["/Users/farhanansari/Code/ui-library/src/components/molecules/MultiSelect/components/Select/index.tsx"],"names":["React","ReactSelect","CustomSelect","options","loadOptions","value","onChange","allOption","label","allowSelectAll","rest","undefined","selected","event","length","option","action","result","filter"],"mappings":"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","sourcesContent":["import React from 'react'\nimport ReactSelect from 'react-select/async'\nimport { IMultiSelectOptions, ISelectProps } from '../../interfaces'\n\nconst CustomSelect = ({\n  options,\n  loadOptions,\n  value,\n  onChange = () => {},\n  allOption = {\n    label: 'Select all',\n    value: '*'\n  },\n  allowSelectAll,\n  ...rest\n}: ISelectProps) => {\n  if (allowSelectAll) {\n    return (\n      <ReactSelect\n        {...rest}\n        value={value}\n        maxMenuHeight={200}\n        loadOptions={loadOptions}\n        defaultOptions={options ? [allOption, ...options] : undefined}\n        onChange={(selected: any, event: any) => {\n          if (selected !== null && selected.length > 0) {\n            if (selected[selected.length - 1].value === allOption.value) {\n              return onChange(\n                event?.option?.value,\n                event?.action === 'select-option',\n                options ? [allOption, ...options] : [],\n                event\n              )\n            }\n            let result: IMultiSelectOptions[] = []\n\n            if (selected.length === options?.length) {\n              if (selected[0].value === allOption.value) {\n                result = selected?.length>0 ? selected?.filter(\n                  (option: any) => option.value !== allOption.value\n                  ):[]\n              } else if (event.action === 'select-option') {\n                result = options ? [...options] : []\n              } else {\n              }\n\n              return onChange(\n                event?.option?.value,\n                event?.action === 'select-option',\n                result,\n                event\n              )\n            }\n          }\n\n          return onChange(\n            event?.option?.value,\n            event?.action === 'select-option',\n            selected,\n            event\n          )\n        }}\n        menuPlacement='auto'\n      />\n    )\n  }\n  return (\n    <ReactSelect\n      {...rest}\n      value={value}\n      loadOptions={loadOptions}\n      defaultOptions={options ? [...options] : undefined}\n      maxMenuHeight={200}\n      menuPlacement='auto'\n      onChange={(selected: any, event: any) => {\n        onChange(\n          event?.option?.value,\n          event?.action === 'select-option',\n          selected,\n          event\n        )\n      }}\n    />\n  )\n}\n\nexport default CustomSelect\n"]},"metadata":{},"sourceType":"module"}