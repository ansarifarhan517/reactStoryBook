{"ast":null,"code":"import _slicedToArray from \"/Users/farhanansari/Code/ui-library/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/slicedToArray\";\nimport _taggedTemplateLiteral from \"/Users/farhanansari/Code/ui-library/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/taggedTemplateLiteral\";\n\nvar _this = this,\n    _jsxFileName = \"/Users/farhanansari/Code/ui-library/src/components/atoms/Map/utils/LeafletOverlay.tsx\";\n\nfunction _templateObject4() {\n  var data = _taggedTemplateLiteral([\"\\n    align-self: flex-start;\\n    padding: 10px;\\n    font-size: 12px;\\n    cursor:pointer;\\n\"]);\n\n  _templateObject4 = function _templateObject4() {\n    return data;\n  };\n\n  return data;\n}\n\nfunction _templateObject3() {\n  var data = _taggedTemplateLiteral([\"\\n    align-self: center;\\n    padding: 10px;\\n    font-size: 30px;\\n    \"]);\n\n  _templateObject3 = function _templateObject3() {\n    return data;\n  };\n\n  return data;\n}\n\nfunction _templateObject2() {\n  var data = _taggedTemplateLiteral([\"\\n    white-space: nowrap !important;\\n    padding: 15px;\\n    margin-top: 6px;\\n    align-self: center;\\n\"]);\n\n  _templateObject2 = function _templateObject2() {\n    return data;\n  };\n\n  return data;\n}\n\nfunction _templateObject() {\n  var data = _taggedTemplateLiteral([\"\\n    background: black;\\n    position: absolute;\\n    z-index: 1000;\\n    opacity: 0.4;\\n    display: flex;\\n    justify-content: center;\\n    align-content: center;\\n    align-items: center;\\n    top: 50%;\\n    left: 50%;\\n    transform: translate(-50%, -50%);\\n    text-align: center;\\n    border-radius: 6px;\\n    font-size: 17px;\\n    color: #fff;\\n    height:100px;\\n    width: 420px;\\n    justify-content: space-between;\\n\"]);\n\n  _templateObject = function _templateObject() {\n    return data;\n  };\n\n  return data;\n}\n\nimport React, { useState } from 'react';\nimport styled from 'styled-components';\nvar StyledOverlap = styled.div(_templateObject());\nvar Title = styled.div(_templateObject2());\nvar Arrow = styled.div(_templateObject3());\nvar Icon = styled.div(_templateObject4());\nexport var LeafletOverlay = function LeafletOverlay(_ref) {\n  var _ref$title = _ref.title,\n      title = _ref$title === void 0 ? 'Select Trip(s) to view on map' : _ref$title,\n      _ref$showArrow = _ref.showArrow,\n      showArrow = _ref$showArrow === void 0 ? true : _ref$showArrow,\n      _ref$showCloseIcon = _ref.showCloseIcon,\n      showCloseIcon = _ref$showCloseIcon === void 0 ? true : _ref$showCloseIcon;\n\n  var _useState = useState(true),\n      _useState2 = _slicedToArray(_useState, 2),\n      showOverlay = _useState2[0],\n      setOverlay = _useState2[1];\n\n  return showOverlay ? /*#__PURE__*/React.createElement(StyledOverlap, {\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 55,\n      columnNumber: 23\n    }\n  }, showArrow && /*#__PURE__*/React.createElement(Arrow, {\n    className: \"icon icon-left-arrow\",\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 56,\n      columnNumber: 28\n    }\n  }), /*#__PURE__*/React.createElement(Title, {\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 57,\n      columnNumber: 13\n    }\n  }, title), showCloseIcon && /*#__PURE__*/React.createElement(Icon, {\n    className: \"icon icon-close\",\n    onClick: function onClick() {\n      return setOverlay(false);\n    },\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 58,\n      columnNumber: 31\n    }\n  })) : null;\n};\nLeafletOverlay.__docgenInfo = {\n  \"description\": \"\",\n  \"methods\": [],\n  \"displayName\": \"LeafletOverlay\",\n  \"props\": {\n    \"title\": {\n      \"defaultValue\": {\n        \"value\": \"'Select Trip(s) to view on map'\",\n        \"computed\": false\n      },\n      \"required\": false,\n      \"tsType\": {\n        \"name\": \"string\"\n      },\n      \"description\": \"\"\n    },\n    \"showArrow\": {\n      \"defaultValue\": {\n        \"value\": \"true\",\n        \"computed\": false\n      },\n      \"required\": false,\n      \"tsType\": {\n        \"name\": \"boolean\"\n      },\n      \"description\": \"\"\n    },\n    \"showCloseIcon\": {\n      \"defaultValue\": {\n        \"value\": \"true\",\n        \"computed\": false\n      },\n      \"required\": false,\n      \"tsType\": {\n        \"name\": \"boolean\"\n      },\n      \"description\": \"\"\n    }\n  }\n};\n\nif (typeof STORYBOOK_REACT_CLASSES !== \"undefined\") {\n  STORYBOOK_REACT_CLASSES[\"src/components/atoms/Map/utils/LeafletOverlay.tsx\"] = {\n    name: \"LeafletOverlay\",\n    docgenInfo: LeafletOverlay.__docgenInfo,\n    path: \"src/components/atoms/Map/utils/LeafletOverlay.tsx\"\n  };\n}","map":{"version":3,"sources":["/Users/farhanansari/Code/ui-library/src/components/atoms/Map/utils/LeafletOverlay.tsx"],"names":["React","useState","styled","StyledOverlap","div","Title","Arrow","Icon","LeafletOverlay","title","showArrow","showCloseIcon","showOverlay","setOverlay"],"mappings":";;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;AAAA,OAAOA,KAAP,IAAcC,QAAd,QAA6B,OAA7B;AACA,OAAOC,MAAP,MAAmB,mBAAnB;AAOA,IAAMC,aAAa,GAAGD,MAAM,CAACE,GAAV,mBAAnB;AAqBA,IAAMC,KAAK,GAAGH,MAAM,CAACE,GAAV,oBAAX;AAOA,IAAME,KAAK,GAAGJ,MAAM,CAACE,GAAV,oBAAX;AAMA,IAAMG,IAAI,GAAGL,MAAM,CAACE,GAAV,oBAAV;AASA,OAAO,IAAMI,cAAc,GAAG,SAAjBA,cAAiB,OAAsF;AAAA,wBAApFC,KAAoF;AAAA,MAApFA,KAAoF,2BAA9E,+BAA8E;AAAA,4BAA9CC,SAA8C;AAAA,MAA9CA,SAA8C,+BAApC,IAAoC;AAAA,gCAA/BC,aAA+B;AAAA,MAA/BA,aAA+B,mCAAjB,IAAiB;;AAAA,kBAC/EV,QAAQ,CAAC,IAAD,CADuE;AAAA;AAAA,MACzGW,WADyG;AAAA,MAC7FC,UAD6F;;AAEhH,SACID,WAAW,gBAAG,oBAAC,aAAD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KACRF,SAAS,iBAAI,oBAAC,KAAD;AAAO,IAAA,SAAS,EAAC,sBAAjB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,IADL,eAEV,oBAAC,KAAD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KAAQD,KAAR,CAFU,EAGTE,aAAa,iBAAI,oBAAC,IAAD;AAAM,IAAA,SAAS,EAAC,iBAAhB;AAAkC,IAAA,OAAO,EAAE;AAAA,aAAKE,UAAU,CAAC,KAAD,CAAf;AAAA,KAA3C;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,IAHR,CAAH,GAIO,IALtB;AAOH,CATM","sourcesContent":["import React,{useState} from 'react'\nimport styled from 'styled-components'\ninterface Props {\n    title:string\n    showArrow:boolean\n    showCloseIcon :boolean\n}\n\nconst StyledOverlap = styled.div`\n    background: black;\n    position: absolute;\n    z-index: 1000;\n    opacity: 0.4;\n    display: flex;\n    justify-content: center;\n    align-content: center;\n    align-items: center;\n    top: 50%;\n    left: 50%;\n    transform: translate(-50%, -50%);\n    text-align: center;\n    border-radius: 6px;\n    font-size: 17px;\n    color: #fff;\n    height:100px;\n    width: 420px;\n    justify-content: space-between;\n`\n\nconst Title = styled.div`\n    white-space: nowrap !important;\n    padding: 15px;\n    margin-top: 6px;\n    align-self: center;\n`\n\nconst Arrow = styled.div`\n    align-self: center;\n    padding: 10px;\n    font-size: 30px;\n    `\n\nconst Icon = styled.div`\n    align-self: flex-start;\n    padding: 10px;\n    font-size: 12px;\n    cursor:pointer;\n`\n\n\n\nexport const LeafletOverlay = ({title='Select Trip(s) to view on map',showArrow=true,showCloseIcon=true}: Props) => {\n    const [showOverlay,setOverlay] = useState(true);\n    return (\n        showOverlay ? <StyledOverlap>\n             {showArrow && <Arrow className='icon icon-left-arrow'></Arrow>}\n            <Title>{title}</Title>\n            {showCloseIcon && <Icon className='icon icon-close' onClick={() =>setOverlay(false)}></Icon>}\n        </StyledOverlap>: null\n    )\n}\n"]},"metadata":{},"sourceType":"module"}