{"ast":null,"code":"import _objectSpread from \"/Users/farhanansari/Desktop/CODE/PrxProject/untitled folder/reactStoryBook/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/objectSpread2\";\nimport _toConsumableArray from \"/Users/farhanansari/Desktop/CODE/PrxProject/untitled folder/reactStoryBook/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/toConsumableArray\";\nimport _slicedToArray from \"/Users/farhanansari/Desktop/CODE/PrxProject/untitled folder/reactStoryBook/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/slicedToArray\";\n\nvar _this = this,\n    _jsxFileName = \"/Users/farhanansari/Desktop/CODE/PrxProject/untitled folder/reactStoryBook/src/components/organisms/AdvancedFilter/components/Body/index.tsx\";\n\nimport React, { useState, useEffect } from 'react';\nimport { useToast } from '../../../../molecules/Toast';\nimport SectionHeader from '../../../../molecules/SectionHeader';\nimport AdvancedFilterCardHeader from '../CardHeader';\nimport AdvancedFilterMasterCondition from '../MasterCondition';\nimport Dropdown from '../AdvFiterDropdown'; // Modal\n\nimport Modal from '../../../../molecules/Modal';\nimport Header from '../../../../molecules/ModalHeader';\nimport { AdvancedFilterWrapper, FilterCardWrapper, AdvancedFilterInnerCardWrapper, IconButtonStyled, ChipsWrapper, ConditionWrapper, AddConditionWrapper, SortButtonStyled, SortStyled, TransparentButton, NoFilterBlock } from './styled';\nimport IconButton from '../../../../atoms/IconButton';\nimport FontIcon from '../../../../atoms/FontIcon';\nimport Typography from '../../../../atoms/Typography';\nimport Position from '../../../../molecules/Position';\nimport { generateUEID, getObject, createNewArray, arrayEquals, removeObjectFromArray, isElementPresent, createSavedFiterDropdown, getString, validateSort } from '../Utils/index';\n\nvar Body = function Body(_ref) {\n  var _filterData$sortable14, _filterData$sortable15;\n\n  var chipsArray = _ref.chipsArray,\n      showCard = _ref.showCard,\n      handleUpdateAndSave = _ref.handleUpdateAndSave,\n      onFavourite = _ref.onFavourite,\n      setShowCard = _ref.setShowCard,\n      clearCard = _ref.clearCard,\n      handleDelete = _ref.handleDelete,\n      columnsData = _ref.columnsData,\n      HSetColumnData = _ref.HSetColumnData,\n      fieldOperation = _ref.fieldOperation,\n      ThirdElement = _ref.ThirdElement,\n      openCard = _ref.openCard,\n      updateData = _ref.updateData,\n      _ref$masterCondition = _ref.masterCondition,\n      masterCondition = _ref$masterCondition === void 0 ? true : _ref$masterCondition,\n      _ref$allowSort = _ref.allowSort,\n      allowSort = _ref$allowSort === void 0 ? true : _ref$allowSort,\n      _ref$allowFavourites = _ref.allowFavourites,\n      allowFavourites = _ref$allowFavourites === void 0 ? true : _ref$allowFavourites,\n      sortDropdown = _ref.sortDropdown,\n      saveTooltip = _ref.saveTooltip,\n      duplicateTooltip = _ref.duplicateTooltip,\n      cancelTooltip = _ref.cancelTooltip,\n      removeFavouriteTooltip = _ref.removeFavouriteTooltip,\n      markAsfavouriteTooltip = _ref.markAsfavouriteTooltip,\n      onAddCondition = _ref.onAddCondition,\n      showCardId = _ref.showCardId,\n      ThirdElementFormatter = _ref.ThirdElementFormatter;\n\n  var _useState = useState(_toConsumableArray(columnsData)),\n      _useState2 = _slicedToArray(_useState, 2),\n      dropdownOptions = _useState2[0],\n      setDropdownOptions = _useState2[1];\n\n  var todaysDate = new Date();\n\n  var _useState3 = useState(false),\n      _useState4 = _slicedToArray(_useState3, 2),\n      showFirstDropdown = _useState4[0],\n      setShowFirstDropdown = _useState4[1];\n\n  var _useState5 = useState({\n    id: '',\n    multiFilter: undefined,\n    filterName: '',\n    filterMasterCondition: 'AND',\n    filterSortable: false,\n    sortable: {\n      columnName: '',\n      sortOrder: ''\n    },\n    allowSort: false,\n    filterApplied: false,\n    advanceFilterTagReferenceIds: []\n  }),\n      _useState6 = _slicedToArray(_useState5, 2),\n      filterData = _useState6[0],\n      setFilterData = _useState6[1];\n\n  var _useState7 = useState([{\n    id: '',\n    readMode: false,\n    dropdownOptions: '',\n    operationalOptions: {\n      options: null,\n      value: ''\n    },\n    fieldType: '',\n    thirdElement: {\n      type: undefined,\n      value: '',\n      label: ''\n    }\n  }]),\n      _useState8 = _slicedToArray(_useState7, 2),\n      filterConditions = _useState8[0],\n      setFilterConditions = _useState8[1];\n\n  var _useState9 = useState([]),\n      _useState10 = _slicedToArray(_useState9, 2),\n      SavedFilterDropdownOptions = _useState10[0],\n      setSavedFilterDropdownOptions = _useState10[1];\n\n  var _useState11 = useState(false),\n      _useState12 = _slicedToArray(_useState11, 2),\n      isModalOpen = _useState12[0],\n      setIsModalOpen = _useState12[1];\n\n  var _useState13 = useState(['']),\n      _useState14 = _slicedToArray(_useState13, 2),\n      columns = _useState14[0],\n      setColumns = _useState14[1];\n\n  var _useState15 = useState(['']),\n      _useState16 = _slicedToArray(_useState15, 2),\n      filterNameInFilterCondition = _useState16[0],\n      setFilterNameInFilterCondition = _useState16[1];\n\n  var _useState17 = useState({\n    id: '',\n    call: false\n  }),\n      _useState18 = _slicedToArray(_useState17, 2),\n      deleteChip = _useState18[0],\n      setDeleteChip = _useState18[1];\n\n  useEffect(function () {\n    // handle Chip Array\n    var chip = chipsArray === null || chipsArray === void 0 ? void 0 : chipsArray.find(function (c) {\n      return c.id === filterData.id;\n    });\n    chip && handleChipClick(undefined, chip);\n  }, [chipsArray]); // close card when chipsArray Change\n\n  useEffect(function () {\n    updateData && updateData({\n      filterData: filterData,\n      filterConditions: filterConditions\n    });\n  }, [filterData, filterConditions]); // clear Card data\n\n  useEffect(function () {\n    if (clearCard) {\n      clearCardData();\n    }\n  }, [clearCard]); // Useeffect to track the dropdownOptions\n\n  useEffect(function () {\n    var a = createNewArray(filterConditions, 'dropdownOptions', 'savedFilters');\n    !arrayEquals(a, columns) && setColumns(a); // saveFilters\n\n    var b = filterConditions.map(function (f) {\n      var _f$thirdElement$value;\n\n      return typeof f.thirdElement.value === 'object' ? (_f$thirdElement$value = f.thirdElement.value) === null || _f$thirdElement$value === void 0 ? void 0 : _f$thirdElement$value.value : f.thirdElement.value;\n    });\n    !arrayEquals(b, filterNameInFilterCondition) && setFilterNameInFilterCondition(b);\n  }, [filterConditions]); // remove the columns from 1st dropdown if they are already selected\n\n  useEffect(function () {\n    // column dropdown repeating issue\n    var DropdownArray = _toConsumableArray(columnsData);\n\n    columns.forEach(function (c) {\n      DropdownArray = c !== '' ? removeObjectFromArray(c, DropdownArray, 'id') : DropdownArray;\n    });\n    setDropdownOptions(_toConsumableArray(DropdownArray)); // saved Filters repeating issue\n\n    var savedFiltersArray = chipsArray ? _toConsumableArray(createSavedFiterDropdown(chipsArray)) : [];\n    filterNameInFilterCondition.forEach(function (m) {\n      return savedFiltersArray = m !== '' ? removeObjectFromArray(m, savedFiltersArray, 'id') : savedFiltersArray;\n    });\n    setSavedFilterDropdownOptions(_toConsumableArray(savedFiltersArray));\n  }, [columns, filterNameInFilterCondition]); // deleteChips\n\n  useEffect(function () {\n    deleteChip.call && handleDelete && handleDelete(deleteChip.id);\n  }, [deleteChip.call]);\n  useEffect(function () {\n    var chip = chipsArray === null || chipsArray === void 0 ? void 0 : chipsArray.find(function (c) {\n      return c.id === showCardId;\n    });\n    showCardId && chip && handleChipClick(undefined, chip);\n    setShowCard && setShowCard(!!showCardId);\n  }, [showCardId]); // handle ADD condition\n\n  var handleAddCondition = function handleAddCondition() {\n    if (showFirstDropdown) {\n      var flag = filterConditions.every(function (m) {\n        return m.dropdownOptions !== '' && (m === null || m === void 0 ? void 0 : m.operationalOptions.value) !== '' && (m === null || m === void 0 ? void 0 : m.thirdElement.type) !== '' && (m === null || m === void 0 ? void 0 : m.thirdElement.type) === 'none' ? true : (m === null || m === void 0 ? void 0 : m.thirdElement.value) !== '';\n      });\n      flag ? setFilterConditions([].concat(_toConsumableArray(filterConditions), [{\n        id: generateUEID().toString(),\n        readMode: false,\n        dropdownOptions: '',\n        fieldType: '',\n        operationalOptions: {\n          options: null,\n          value: ''\n        },\n        thirdElement: {\n          type: undefined,\n          value: '',\n          label: ''\n        }\n      }])) : showToast('Complete existing filter details first');\n    } else {\n      setShowFirstDropdown(true);\n      setFilterConditions([{\n        id: generateUEID().toString(),\n        readMode: false,\n        dropdownOptions: '',\n        fieldType: '',\n        operationalOptions: {\n          options: null,\n          value: ''\n        },\n        thirdElement: {\n          type: undefined,\n          value: '',\n          label: ''\n        }\n      }]);\n      onAddCondition && onAddCondition();\n    }\n  };\n  /***********************************/\n\n  /* Handle FAVOURITES  */\n\n  /**********************************/\n\n\n  var handleFavourites = function handleFavourites() {\n    onFavourite && onFavourite({\n      filterData: filterData,\n      filterConditions: filterConditions\n    });\n  };\n  /***********************************/\n\n  /* Handle Clicking on Filter Chip */\n\n  /**********************************/\n\n\n  var handleChipClick = function handleChipClick(e, chip) {\n    setShowFirstDropdown(true);\n    clearCardData();\n    setDropdownOptions(_toConsumableArray(columnsData));\n    populateNormalFilterData(chip);\n    console.log(e);\n  };\n  /*********************************************************/\n\n  /*         populate chips data in the card               */\n\n  /*********************************************************/\n\n\n  var populateNormalFilterData = function populateNormalFilterData(chip) {\n    var _chip$favouriteSectio, _chip$sortCriteria, _chip$sortCriteria2, _chip$sortCriteria3, _chip$sortCriteria4;\n\n    var isFavourite = chip === null || chip === void 0 ? void 0 : (_chip$favouriteSectio = chip.favouriteSections) === null || _chip$favouriteSectio === void 0 ? void 0 : _chip$favouriteSectio.some(function (m) {\n      return m === 'list';\n    });\n    setFilterData({\n      id: chip.id,\n      multiFilter: undefined,\n      isFavourite: isFavourite && chip.isFavourite,\n      favouriteSections: chip.favouriteSections,\n      filterName: chip.label,\n      filterMasterCondition: masterCondition ? chip.condition : 'AND',\n      filterSortable: allowSort,\n      filterApplied: chip === null || chip === void 0 ? void 0 : chip.filterApplied,\n      sortable: {\n        columnName: HSetColumnData[chip === null || chip === void 0 ? void 0 : (_chip$sortCriteria = chip.sortCriteria) === null || _chip$sortCriteria === void 0 ? void 0 : _chip$sortCriteria.fieldId],\n        sortOrder: {\n          id: 'sorting',\n          label: chip === null || chip === void 0 ? void 0 : (_chip$sortCriteria2 = chip.sortCriteria) === null || _chip$sortCriteria2 === void 0 ? void 0 : _chip$sortCriteria2.operationSymbol,\n          value: chip === null || chip === void 0 ? void 0 : (_chip$sortCriteria3 = chip.sortCriteria) === null || _chip$sortCriteria3 === void 0 ? void 0 : _chip$sortCriteria3.operationLabelKey\n        }\n      },\n      allowSort: !!(chip === null || chip === void 0 ? void 0 : (_chip$sortCriteria4 = chip.sortCriteria) === null || _chip$sortCriteria4 === void 0 ? void 0 : _chip$sortCriteria4.fieldId) || false,\n      advanceFilterTagReferenceIds: chip === null || chip === void 0 ? void 0 : chip.advanceFilterTagReferenceIds\n    });\n    var tempArray = [];\n    var isMultiFiler = chip === null || chip === void 0 ? void 0 : chip.advanceFilterTagReferenceIds;\n    chip.dropdownData.map(function (c) {\n      var _DropDownValue2, _DropDownValue3;\n\n      var DropDownValue = {};\n      var FT = '';\n      var OperationalArray;\n      var operationalValue = {};\n\n      if (c.columnId === 'savedFilters' && isMultiFiler.length > 0) {\n        DropDownValue = {\n          id: 'savedFilterIs',\n          label: 'savedFilterIs',\n          value: 'savedFilterIs',\n          fieldType: 'savedFilter'\n        };\n        FT = 'savedFilterIs';\n        OperationalArray = FT && fieldOperation[FT];\n        operationalValue = fieldOperation[FT];\n      } else {\n        var _DropDownValue;\n\n        DropDownValue = HSetColumnData[c.columnId];\n        FT = (_DropDownValue = DropDownValue) === null || _DropDownValue === void 0 ? void 0 : _DropDownValue.fieldType;\n        OperationalArray = FT && fieldOperation[FT];\n        operationalValue = OperationalArray && getObject(c.operationType, OperationalArray, 'labelKey');\n      }\n\n      var temp = {\n        id: generateUEID().toString(),\n        readMode: true,\n        dropdownOptions: c.columnId,\n        operationalOptions: {\n          options: OperationalArray,\n          value: operationalValue\n        },\n        fieldType: (_DropDownValue2 = DropDownValue) === null || _DropDownValue2 === void 0 ? void 0 : _DropDownValue2.fieldType,\n        thirdElement: {\n          type: c.operationType === 'isnotempty' || c.operationType === 'isempty' ? 'none' : (_DropDownValue3 = DropDownValue) === null || _DropDownValue3 === void 0 ? void 0 : _DropDownValue3.fieldType,\n          value: c.value,\n          label: c.label\n        }\n      };\n      tempArray.push(temp);\n    });\n    setFilterConditions([].concat(tempArray));\n    openCard && openCard({\n      id: chip.id,\n      filterApplied: chip.filterApplied,\n      advanceFilterTagReferenceIds: []\n    });\n    setFilterConditions([].concat(tempArray));\n    setShowCard && setShowCard(true);\n  };\n  /*********************************************************/\n\n  /*         Handle Closing of card                        */\n\n  /*********************************************************/\n\n\n  var handleCloseCard = function handleCloseCard() {\n    clearCardData();\n    setShowCard && setShowCard(false);\n  };\n  /*********************************************************/\n\n  /*         Handle Clearing Data from the card             */\n\n  /*********************************************************/\n\n\n  var clearCardData = function clearCardData() {\n    setFilterData({\n      id: '',\n      filterName: '',\n      multiFilter: undefined,\n      filterMasterCondition: 'AND',\n      filterSortable: allowSort,\n      sortable: {\n        columnName: '',\n        sortOrder: ''\n      },\n      advanceFilterTagReferenceIds: []\n    });\n    setFilterConditions([]);\n  };\n  /*********************************************************/\n\n  /*         // handle click of first dropdown             */\n\n  /*********************************************************/\n\n\n  var handleFirstDropdownChange = function handleFirstDropdownChange(id, e) {\n    var FT = e === null || e === void 0 ? void 0 : e.fieldType;\n    var newState;\n\n    if (FT === 'savedFilters') {\n      newState = filterConditions.map(function (fl) {\n        return fl.id === id ? _objectSpread(_objectSpread({}, fl), {}, {\n          operationalOptions: {\n            options: [{\n              operation: 'is',\n              operationSymbol: '=',\n              label: '=',\n              value: 'savedFilterIs'\n            }],\n            value: {\n              operation: 'is',\n              operationSymbol: '=',\n              label: '=',\n              value: 'savedFilterIs'\n            }\n          },\n          fieldType: 'savedFilter',\n          dropdownOptions: e.id,\n          thirdElement: {\n            type: 'savedFilter',\n            value: '',\n            label: ''\n          }\n        }) : fl;\n      });\n    } else {\n      newState = filterConditions.map(function (fl) {\n        var _fieldOperation$FT;\n\n        return fl.id === id ? _objectSpread(_objectSpread({}, fl), {}, {\n          operationalOptions: {\n            options: fieldOperation[FT],\n            value: FT === 'calendar' ? (_fieldOperation$FT = fieldOperation[FT]) === null || _fieldOperation$FT === void 0 ? void 0 : _fieldOperation$FT[0] : ''\n          },\n          dropdownOptions: e.id,\n          fieldType: FT,\n          thirdElement: {\n            type: FT,\n            value: FT === 'calendar' ? [todaysDate, todaysDate] : '',\n            label: ''\n          }\n        }) : fl;\n      });\n    }\n\n    setFilterConditions(_toConsumableArray(newState));\n  };\n  /*********************************************************/\n\n  /*          // handle click of second dropdown         */\n\n  /*********************************************************/\n\n\n  var handleSecondDropdownChange = function handleSecondDropdownChange(id, e) {\n    var _filterConditions$fin, _filterConditions$fin2;\n\n    var operationOptions = filterConditions === null || filterConditions === void 0 ? void 0 : (_filterConditions$fin = filterConditions.find(function (f) {\n      return f.id === id;\n    })) === null || _filterConditions$fin === void 0 ? void 0 : (_filterConditions$fin2 = _filterConditions$fin.operationalOptions) === null || _filterConditions$fin2 === void 0 ? void 0 : _filterConditions$fin2.options;\n    var obj = operationOptions && getObject(e.labelKey, operationOptions, 'labelKey');\n    obj = obj || e;\n    var newState = [];\n\n    if (e.value === 'savedFilterIs') {\n      newState = filterConditions.map(function (fl) {\n        return fl.id === id ? _objectSpread(_objectSpread({}, fl), {}, {\n          thirdElement: {\n            type: 'savedFilter',\n            value: '',\n            label: ''\n          },\n          operationalOptions: {\n            options: fl.operationalOptions.options,\n            value: e\n          }\n        }) : fl;\n      });\n    } else if (e.value === 'Between') {\n      newState = filterConditions.map(function (fl) {\n        return fl.id === id ? _objectSpread(_objectSpread({}, fl), {}, {\n          thirdElement: {\n            type: fl.fieldType,\n            value: [todaysDate, todaysDate],\n            label: ''\n          },\n          operationalOptions: {\n            options: fl.operationalOptions.options,\n            value: e\n          }\n        }) : fl;\n      });\n    } else {\n      newState = filterConditions.map(function (fl) {\n        return fl.id === id ? _objectSpread(_objectSpread({}, fl), {}, {\n          thirdElement: {\n            type: e.labelKey === 'isnotempty' || (e === null || e === void 0 ? void 0 : e.labelKey) === 'isempty' ? 'none' : fl.fieldType,\n            value: '',\n            label: ''\n          },\n          operationalOptions: {\n            options: fl.operationalOptions.options,\n            value: obj\n          }\n        }) : fl;\n      });\n    }\n\n    setFilterConditions(_toConsumableArray(newState));\n  };\n  /*********************************************************/\n  // handle click of remove condition\n\n  /*********************************************************/\n\n\n  var handleRemoveCondition = function handleRemoveCondition(id) {\n    var arr = removeObjectFromArray(id, filterConditions, 'id');\n    setFilterConditions(_toConsumableArray(arr));\n  };\n  /*********************************************************/\n  // handle filter Save\n\n  /*********************************************************/\n\n\n  var handleSave = function handleSave() {\n    handleUpdateAndSave && handleUpdateAndSave({\n      filterData: _objectSpread({}, filterData),\n      filterConditions: filterConditions\n    });\n  };\n  /*********************************************************/\n  // handle Duplicate\n\n  /*********************************************************/\n\n\n  var handleDuplicate = function handleDuplicate() {\n    setFilterData(_objectSpread(_objectSpread({}, filterData), {}, {\n      id: '',\n      filterName: ''\n    }));\n    handleUpdateAndSave && handleUpdateAndSave({\n      filterData: _objectSpread(_objectSpread({}, filterData), {}, {\n        id: ''\n      }),\n      filterConditions: filterConditions\n    });\n  };\n  /*********************************************************/\n  // handle sort open\n\n  /*********************************************************/\n\n\n  var handleSortOpen = function handleSortOpen() {\n    setFilterData(_objectSpread(_objectSpread({}, filterData), {}, {\n      allowSort: !(filterData === null || filterData === void 0 ? void 0 : filterData.allowSort)\n    }));\n  };\n  /*********************************************************/\n  // handle Sort Columns\n\n  /*********************************************************/\n\n\n  var handleSortColumn = function handleSortColumn(e, column) {\n    var _filterData$sortable, _filterData$sortable2, _filterData$sortable3, _filterData$sortable4, _filterData$sortable5, _filterData$sortable6, _filterData$sortable7, _filterData$sortable8, _filterData$sortable9, _filterData$sortable10, _filterData$sortable11, _filterData$sortable12, _filterData$sortable13;\n\n    var value = sortDropdown && column && typeof e.value === 'string' ? getObject(e.value, sortDropdown, 'value') : e.value;\n    setFilterData(_objectSpread(_objectSpread({}, filterData), {}, {\n      sortable: {\n        columnName: column ? value : filterData === null || filterData === void 0 ? void 0 : (_filterData$sortable = filterData.sortable) === null || _filterData$sortable === void 0 ? void 0 : _filterData$sortable.columnName,\n        sortOrder: {\n          id: column ? typeof (filterData === null || filterData === void 0 ? void 0 : (_filterData$sortable2 = filterData.sortable) === null || _filterData$sortable2 === void 0 ? void 0 : _filterData$sortable2.sortOrder) === 'string' ? filterData === null || filterData === void 0 ? void 0 : (_filterData$sortable3 = filterData.sortable) === null || _filterData$sortable3 === void 0 ? void 0 : _filterData$sortable3.sortOrder : filterData === null || filterData === void 0 ? void 0 : (_filterData$sortable4 = filterData.sortable) === null || _filterData$sortable4 === void 0 ? void 0 : (_filterData$sortable5 = _filterData$sortable4.sortOrder) === null || _filterData$sortable5 === void 0 ? void 0 : _filterData$sortable5.id : e.value,\n          label: column ? typeof (filterData === null || filterData === void 0 ? void 0 : (_filterData$sortable6 = filterData.sortable) === null || _filterData$sortable6 === void 0 ? void 0 : _filterData$sortable6.sortOrder) === 'string' ? filterData === null || filterData === void 0 ? void 0 : (_filterData$sortable7 = filterData.sortable) === null || _filterData$sortable7 === void 0 ? void 0 : _filterData$sortable7.sortOrder : filterData === null || filterData === void 0 ? void 0 : (_filterData$sortable8 = filterData.sortable) === null || _filterData$sortable8 === void 0 ? void 0 : (_filterData$sortable9 = _filterData$sortable8.sortOrder) === null || _filterData$sortable9 === void 0 ? void 0 : _filterData$sortable9.label : e.label,\n          value: column ? typeof (filterData === null || filterData === void 0 ? void 0 : (_filterData$sortable10 = filterData.sortable) === null || _filterData$sortable10 === void 0 ? void 0 : _filterData$sortable10.sortOrder) === 'string' ? filterData === null || filterData === void 0 ? void 0 : (_filterData$sortable11 = filterData.sortable) === null || _filterData$sortable11 === void 0 ? void 0 : _filterData$sortable11.sortOrder : filterData === null || filterData === void 0 ? void 0 : (_filterData$sortable12 = filterData.sortable) === null || _filterData$sortable12 === void 0 ? void 0 : (_filterData$sortable13 = _filterData$sortable12.sortOrder) === null || _filterData$sortable13 === void 0 ? void 0 : _filterData$sortable13.value : e.value\n        }\n      }\n    }));\n  };\n  /*********************************************************/\n  // Handle removing of sort columns\n\n  /*********************************************************/\n\n\n  var handleRemoveSort = function handleRemoveSort() {\n    setFilterData(_objectSpread(_objectSpread({}, filterData), {}, {\n      sortable: {\n        columnName: '',\n        sortOrder: ''\n      },\n      allowSort: false\n    }));\n  };\n  /*********************************************************/\n  // handle editing of Predefined conditions\n\n  /*********************************************************/\n\n\n  var activateEditMode = function activateEditMode(id) {\n    setFilterConditions(function (fl) {\n      return fl.map(function (c) {\n        return c.id === id ? _objectSpread(_objectSpread({}, c), {}, {\n          readMode: false\n        }) : c;\n      });\n    });\n  };\n  /*********************************************************/\n  // handle ThirdElement SetValue\n\n  /*********************************************************/\n\n\n  var handleThirdElementSetValue = function handleThirdElementSetValue(id, value, _label) {\n    setFilterConditions(function (values) {\n      return values.map(function (v) {\n        return v.id === id ? _objectSpread(_objectSpread({}, v), {}, {\n          thirdElement: {\n            type: v.thirdElement.type,\n            value: value,\n            label: typeof value === 'object' ? value : value.label\n          }\n        }) : v;\n      });\n    });\n  };\n  /*********************************************************/\n  // error messages toast\n\n  /*********************************************************/\n\n\n  var toast = useToast();\n\n  var showToast = function showToast(message) {\n    return toast.add(message, 'warning', false);\n  };\n  /*********************************************************/\n  // Formate label value\n\n  /*********************************************************/\n\n\n  var labelFormatter = React.useCallback(function (data) {\n    if (ThirdElementFormatter) {\n      return ThirdElementFormatter(data);\n    } else {\n      return (data === null || data === void 0 ? void 0 : data.label) || (data === null || data === void 0 ? void 0 : data.value);\n    }\n  }, [ThirdElementFormatter]); // Component Structure\n\n  return /*#__PURE__*/React.createElement(AdvancedFilterWrapper, {\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 661,\n      columnNumber: 5\n    }\n  }, /*#__PURE__*/React.createElement(SectionHeader, {\n    headerTitle: \"Saved Filters\",\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 662,\n      columnNumber: 7\n    }\n  }), /*#__PURE__*/React.createElement(ChipsWrapper, {\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 663,\n      columnNumber: 7\n    }\n  }, chipsArray && (chipsArray === null || chipsArray === void 0 ? void 0 : chipsArray.length) > 0 ? chipsArray === null || chipsArray === void 0 ? void 0 : chipsArray.map(function (chips, index) {\n    var _chips$favouriteSecti, _chips$favouriteSecti2;\n\n    return chips.id === 'draft' ? chipsArray.length === 1 ? /*#__PURE__*/React.createElement(NoFilterBlock, {\n      __self: _this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 668,\n        columnNumber: 17\n      }\n    }, \"No Saved Filter\") : /*#__PURE__*/React.createElement(\"div\", {\n      key: index,\n      __self: _this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 670,\n        columnNumber: 17\n      }\n    }) : /*#__PURE__*/React.createElement(IconButtonStyled, {\n      title: chips.label,\n      key: index,\n      selected: filterData.multiFilter ? isElementPresent(chips.id, filterData.multiFilter) : chips.id === filterData.id,\n      __self: _this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 673,\n        columnNumber: 15\n      }\n    }, /*#__PURE__*/React.createElement(TransparentButton, {\n      onClick: function onClick(e) {\n        return handleChipClick(e, chips);\n      },\n      __self: _this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 682,\n        columnNumber: 17\n      }\n    }, allowFavourites && (chips === null || chips === void 0 ? void 0 : (_chips$favouriteSecti = chips.favouriteSections) === null || _chips$favouriteSecti === void 0 ? void 0 : _chips$favouriteSecti.length) > 0 && (chips === null || chips === void 0 ? void 0 : (_chips$favouriteSecti2 = chips.favouriteSections) === null || _chips$favouriteSecti2 === void 0 ? void 0 : _chips$favouriteSecti2.find(function (e) {\n      return e === 'list';\n    })) && (chips === null || chips === void 0 ? void 0 : chips.isFavourite) && /*#__PURE__*/React.createElement(FontIcon, {\n      variant: \"star-filled\",\n      color: filterData.multiFilter ? isElementPresent(chips.id, filterData.multiFilter) || chips.id === filterData.id ? 'white' : 'primary.main' : 'primary.main',\n      size: 14,\n      __self: _this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 689,\n        columnNumber: 23\n      }\n    }), ' ' + chips.label), /*#__PURE__*/React.createElement(IconButton, {\n      iconVariant: \"delete-thin\",\n      iconSize: 10,\n      color: \"error.main\",\n      onClick: function onClick() {\n        setDeleteChip({\n          call: false,\n          id: chips.id\n        });\n        setIsModalOpen(true);\n        handleCloseCard();\n      },\n      intent: \"default\",\n      onlyIcon: true,\n      __self: _this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 708,\n        columnNumber: 17\n      }\n    }));\n  }) : /*#__PURE__*/React.createElement(NoFilterBlock, {\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 727,\n      columnNumber: 11\n    }\n  }, \"No Saved Filter\")), showCard && /*#__PURE__*/React.createElement(FilterCardWrapper, {\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 732,\n      columnNumber: 9\n    }\n  }, /*#__PURE__*/React.createElement(AdvancedFilterCardHeader, {\n    label: filterData.multiFilter ? 'MultiSelect View' : 'Filter Name',\n    name: filterData.filterName,\n    duplicate: handleDuplicate,\n    setName: function setName(name) {\n      return setFilterData(_objectSpread(_objectSpread({}, filterData), {}, {\n        filterName: name\n      }));\n    },\n    save: handleSave,\n    saveTooltip: saveTooltip,\n    close: handleCloseCard,\n    cancelTooltip: cancelTooltip,\n    duplicateTooltip: duplicateTooltip,\n    favourite: handleFavourites,\n    isFavourite: filterData.isFavourite,\n    id: filterData.id,\n    allowFavourites: allowFavourites,\n    favouriteTooltip: filterData.isFavourite ? removeFavouriteTooltip : markAsfavouriteTooltip,\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 733,\n      columnNumber: 11\n    }\n  }), /*#__PURE__*/React.createElement(AdvancedFilterInnerCardWrapper, {\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 758,\n      columnNumber: 11\n    }\n  }, masterCondition && /*#__PURE__*/React.createElement(AdvancedFilterMasterCondition, {\n    condition: filterData.filterMasterCondition,\n    handleChange: function handleChange(e) {\n      setFilterData(_objectSpread(_objectSpread({}, filterData), {}, {\n        filterMasterCondition: e\n      }));\n    },\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 760,\n      columnNumber: 15\n    }\n  }), /*#__PURE__*/React.createElement(\"div\", {\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 771,\n      columnNumber: 13\n    }\n  }, filterConditions.map(function (fl) {\n    var _HSetColumnData$fl$dr, _HSetColumnData$fl$dr2, _fl$operationalOption, _fl$operationalOption2, _fl$operationalOption3, _fl$operationalOption4, _fl$thirdElement, _fl$thirdElement2, _getString, _fl$operationalOption5, _HSetColumnData$fl$dr3;\n\n    return /*#__PURE__*/React.createElement(ConditionWrapper, {\n      key: fl.id,\n      __self: _this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 773,\n        columnNumber: 17\n      }\n    }, fl.readMode ? /*#__PURE__*/React.createElement(Position, {\n      display: \"flex\",\n      justifyContent: \"space-between\",\n      __self: _this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 775,\n        columnNumber: 21\n      }\n    }, /*#__PURE__*/React.createElement(Typography, {\n      fontSize: \"14px\",\n      color: \"black\",\n      __self: _this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 776,\n        columnNumber: 23\n      }\n    }, (((_HSetColumnData$fl$dr = HSetColumnData[fl.dropdownOptions]) === null || _HSetColumnData$fl$dr === void 0 ? void 0 : _HSetColumnData$fl$dr.label) || ((_HSetColumnData$fl$dr2 = HSetColumnData[fl.dropdownOptions]) === null || _HSetColumnData$fl$dr2 === void 0 ? void 0 : _HSetColumnData$fl$dr2.value)) + ' ' + (((_fl$operationalOption = fl.operationalOptions) === null || _fl$operationalOption === void 0 ? void 0 : (_fl$operationalOption2 = _fl$operationalOption.value) === null || _fl$operationalOption2 === void 0 ? void 0 : _fl$operationalOption2.label) || ((_fl$operationalOption3 = fl.operationalOptions) === null || _fl$operationalOption3 === void 0 ? void 0 : (_fl$operationalOption4 = _fl$operationalOption3.value) === null || _fl$operationalOption4 === void 0 ? void 0 : _fl$operationalOption4.value)) + '', /*#__PURE__*/React.createElement(\"span\", {\n      title: getString(((_fl$thirdElement = fl.thirdElement) === null || _fl$thirdElement === void 0 ? void 0 : _fl$thirdElement.label) || ((_fl$thirdElement2 = fl.thirdElement) === null || _fl$thirdElement2 === void 0 ? void 0 : _fl$thirdElement2.value)),\n      __self: _this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 784,\n        columnNumber: 25\n      }\n    }, ' ' + ((_getString = getString(labelFormatter(fl.thirdElement))) === null || _getString === void 0 ? void 0 : _getString.toString()))), /*#__PURE__*/React.createElement(IconButton, {\n      onClick: function onClick() {\n        return activateEditMode(fl.id);\n      },\n      onlyIcon: true,\n      iconVariant: \"icomoon-edit-empty\",\n      iconSize: \"md\",\n      color: \"black\",\n      __self: _this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 795,\n        columnNumber: 23\n      }\n    })) : /*#__PURE__*/React.createElement(React.Fragment, null, showFirstDropdown && /*#__PURE__*/React.createElement(Dropdown, {\n      value: HSetColumnData[fl.dropdownOptions],\n      options: // if its savedFilter then dont show as it would be already shown\n      fl.dropdownOptions === 'savedFilters' ? dropdownOptions : [].concat(_toConsumableArray(dropdownOptions), [_objectSpread({}, HSetColumnData[fl.dropdownOptions])]),\n      onChange: function onChange(e) {\n        handleFirstDropdownChange(fl.id, e);\n      },\n      __self: _this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 806,\n        columnNumber: 25\n      }\n    }), ((_fl$operationalOption5 = fl.operationalOptions) === null || _fl$operationalOption5 === void 0 ? void 0 : _fl$operationalOption5.options) !== null && /*#__PURE__*/React.createElement(Dropdown, {\n      value: fl.operationalOptions.value,\n      options: fl.operationalOptions.options,\n      onChange: function onChange(e) {\n        return handleSecondDropdownChange(fl.id, e);\n      },\n      __self: _this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 824,\n        columnNumber: 25\n      }\n    }), fl.thirdElement.type === 'none' ? '' : /*#__PURE__*/React.createElement(\"div\", {\n      __self: _this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 835,\n        columnNumber: 25\n      }\n    }, /*#__PURE__*/React.createElement(\"span\", {\n      __self: _this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 836,\n        columnNumber: 27\n      }\n    }, fl.thirdElement.type === 'savedFilter' ? /*#__PURE__*/React.createElement(Dropdown, {\n      value: fl.thirdElement.value,\n      options: [].concat(_toConsumableArray(SavedFilterDropdownOptions), [chipsArray && typeof fl.thirdElement.value === 'object' ? fl.thirdElement.value : chipsArray ? getObject(fl.thirdElement.value, createSavedFiterDropdown(chipsArray), 'id') : []]),\n      onChange: function onChange(value, label) {\n        handleThirdElementSetValue(fl.id, value, label);\n      },\n      __self: _this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 838,\n        columnNumber: 31\n      }\n    }) : /*#__PURE__*/React.createElement(ThirdElement, {\n      key: fl.id,\n      columnName: fl.dropdownOptions,\n      operationType: fl.operationalOptions.value,\n      fieldType: fl.dropdownOptions && ((_HSetColumnData$fl$dr3 = HSetColumnData[fl.dropdownOptions]) === null || _HSetColumnData$fl$dr3 === void 0 ? void 0 : _HSetColumnData$fl$dr3.fieldType),\n      value: fl.thirdElement.value,\n      setValue: function setValue(value, label) {\n        return handleThirdElementSetValue(fl.id, value, label);\n      },\n      __self: _this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 858,\n        columnNumber: 31\n      }\n    })))), filterConditions.length > 1 || validateSort(filterData === null || filterData === void 0 ? void 0 : filterData.sortable) ? /*#__PURE__*/React.createElement(React.Fragment, null, /*#__PURE__*/React.createElement(IconButton, {\n      onClick: function onClick() {\n        return handleRemoveCondition(fl.id);\n      },\n      onlyIcon: true,\n      iconVariant: \"delete-tab\",\n      iconSize: 18,\n      color: \"error.lighterMain\",\n      style: {\n        padding: '0px 5px'\n      },\n      __self: _this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 881,\n        columnNumber: 23\n      }\n    })) : '');\n  }), /*#__PURE__*/React.createElement(AddConditionWrapper, {\n    onClick: handleAddCondition,\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 896,\n      columnNumber: 15\n    }\n  }, /*#__PURE__*/React.createElement(FontIcon, {\n    variant: \"add\",\n    color: \"primary.main\",\n    size: 10,\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 897,\n      columnNumber: 17\n    }\n  }), '  ', \"Add Condition\"), allowSort && filterData.filterSortable && /*#__PURE__*/React.createElement(React.Fragment, null, /*#__PURE__*/React.createElement(SortStyled, {\n    onClick: handleSortOpen,\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 903,\n      columnNumber: 19\n    }\n  }, /*#__PURE__*/React.createElement(SortButtonStyled, {\n    onlyIcon: true,\n    iconVariant: filterData.allowSort ? 'icomoon-minus' : 'icomoon-add',\n    iconSize: \"xs\",\n    color: \"primary.main\",\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 904,\n      columnNumber: 21\n    }\n  }), '   ', /*#__PURE__*/React.createElement(Typography, {\n    fontSize: \"13px\",\n    primary: true,\n    underline: true,\n    style: {\n      display: 'inline-block'\n    },\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 913,\n      columnNumber: 21\n    }\n  }, \"Sort\")), filterData.allowSort && /*#__PURE__*/React.createElement(React.Fragment, null, /*#__PURE__*/React.createElement(ConditionWrapper, {\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 925,\n      columnNumber: 23\n    }\n  }, /*#__PURE__*/React.createElement(Dropdown, {\n    value: filterData === null || filterData === void 0 ? void 0 : (_filterData$sortable14 = filterData.sortable) === null || _filterData$sortable14 === void 0 ? void 0 : _filterData$sortable14.columnName,\n    options: sortDropdown && sortDropdown,\n    onChange: function onChange(e) {\n      return handleSortColumn(e, true);\n    },\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 926,\n      columnNumber: 25\n    }\n  }), /*#__PURE__*/React.createElement(Dropdown, {\n    value: filterData === null || filterData === void 0 ? void 0 : (_filterData$sortable15 = filterData.sortable) === null || _filterData$sortable15 === void 0 ? void 0 : _filterData$sortable15.sortOrder,\n    options: [{\n      label: 'Ascending',\n      value: 'ASC'\n    }, {\n      label: 'Descending',\n      value: 'DESC'\n    }],\n    onChange: function onChange(e) {\n      return handleSortColumn(e, false);\n    },\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 931,\n      columnNumber: 25\n    }\n  }), filterConditions.length >= 1 && /*#__PURE__*/React.createElement(IconButton, {\n    onClick: handleRemoveSort,\n    onlyIcon: true,\n    iconVariant: \"delete-tab\",\n    iconSize: \"sm\",\n    color: \"error.main\",\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 940,\n      columnNumber: 27\n    }\n  }))))))), /*#__PURE__*/React.createElement(Modal, {\n    open: isModalOpen,\n    onToggle: function onToggle(value) {\n      setIsModalOpen(value);\n    },\n    children: {\n      content: /*#__PURE__*/React.createElement(Typography, {\n        color: \"black\",\n        __self: _this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 965,\n          columnNumber: 13\n        }\n      }, /*#__PURE__*/React.createElement(\"div\", {\n        __self: _this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 966,\n          columnNumber: 15\n        }\n      }, \"Are you sure you want to delete this filter?\")),\n      footer: /*#__PURE__*/React.createElement(Position, {\n        type: \"relative\",\n        display: \"flex\",\n        justifyContent: \"flex-end\",\n        __self: _this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 970,\n          columnNumber: 13\n        }\n      }, /*#__PURE__*/React.createElement(IconButton, {\n        onClick: function onClick() {\n          setDeleteChip(_objectSpread(_objectSpread({}, deleteChip), {}, {\n            call: true\n          }));\n          setIsModalOpen(false);\n        },\n        primary: true,\n        intent: \"default\",\n        iconVariant: \"delete-thin\",\n        children: \"Delete\",\n        style: {\n          margin: '10px'\n        },\n        __self: _this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 971,\n          columnNumber: 15\n        }\n      }), /*#__PURE__*/React.createElement(IconButton, {\n        onClick: function onClick() {\n          return setIsModalOpen(false);\n        },\n        intent: \"default\",\n        iconVariant: \"close\",\n        children: \"Cancel\",\n        style: {\n          margin: '10px'\n        },\n        __self: _this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 985,\n          columnNumber: 15\n        }\n      })),\n      // triggerComponent: (\n      // ),\n      header: /*#__PURE__*/React.createElement(Header, {\n        headerTitle: \"Delete Confirmation\",\n        handleClose: function handleClose() {\n          return setIsModalOpen(false);\n        },\n        imageVariant: \"close\",\n        __self: _this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 998,\n          columnNumber: 13\n        }\n      })\n    },\n    width: \"600px\",\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 958,\n      columnNumber: 7\n    }\n  }));\n};\n\nexport default Body;","map":{"version":3,"sources":["/Users/farhanansari/Desktop/CODE/PrxProject/untitled folder/reactStoryBook/src/components/organisms/AdvancedFilter/components/Body/index.tsx"],"names":["React","useState","useEffect","useToast","SectionHeader","AdvancedFilterCardHeader","AdvancedFilterMasterCondition","Dropdown","Modal","Header","AdvancedFilterWrapper","FilterCardWrapper","AdvancedFilterInnerCardWrapper","IconButtonStyled","ChipsWrapper","ConditionWrapper","AddConditionWrapper","SortButtonStyled","SortStyled","TransparentButton","NoFilterBlock","IconButton","FontIcon","Typography","Position","generateUEID","getObject","createNewArray","arrayEquals","removeObjectFromArray","isElementPresent","createSavedFiterDropdown","getString","validateSort","Body","chipsArray","showCard","handleUpdateAndSave","onFavourite","setShowCard","clearCard","handleDelete","columnsData","HSetColumnData","fieldOperation","ThirdElement","openCard","updateData","masterCondition","allowSort","allowFavourites","sortDropdown","saveTooltip","duplicateTooltip","cancelTooltip","removeFavouriteTooltip","markAsfavouriteTooltip","onAddCondition","showCardId","ThirdElementFormatter","dropdownOptions","setDropdownOptions","todaysDate","Date","showFirstDropdown","setShowFirstDropdown","id","multiFilter","undefined","filterName","filterMasterCondition","filterSortable","sortable","columnName","sortOrder","filterApplied","advanceFilterTagReferenceIds","filterData","setFilterData","readMode","operationalOptions","options","value","fieldType","thirdElement","type","label","filterConditions","setFilterConditions","SavedFilterDropdownOptions","setSavedFilterDropdownOptions","isModalOpen","setIsModalOpen","columns","setColumns","filterNameInFilterCondition","setFilterNameInFilterCondition","call","deleteChip","setDeleteChip","chip","find","c","handleChipClick","clearCardData","a","b","map","f","DropdownArray","forEach","savedFiltersArray","m","handleAddCondition","flag","every","toString","showToast","handleFavourites","e","populateNormalFilterData","console","log","isFavourite","favouriteSections","some","condition","sortCriteria","fieldId","operationSymbol","operationLabelKey","tempArray","isMultiFiler","dropdownData","DropDownValue","FT","OperationalArray","operationalValue","columnId","length","operationType","temp","push","handleCloseCard","handleFirstDropdownChange","newState","fl","operation","handleSecondDropdownChange","operationOptions","obj","labelKey","handleRemoveCondition","arr","handleSave","handleDuplicate","handleSortOpen","handleSortColumn","column","handleRemoveSort","activateEditMode","handleThirdElementSetValue","_label","values","v","toast","message","add","labelFormatter","useCallback","data","chips","index","name","padding","display","content","footer","margin","header"],"mappings":"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","sourcesContent":["import React, { useState, useEffect } from 'react'\nimport { useToast } from '../../../../molecules/Toast'\nimport SectionHeader from '../../../../molecules/SectionHeader'\nimport AdvancedFilterCardHeader from '../CardHeader'\nimport AdvancedFilterMasterCondition from '../MasterCondition'\nimport Dropdown from '../AdvFiterDropdown'\n// Modal\nimport Modal from '../../../../molecules/Modal'\nimport Header from '../../../../molecules/ModalHeader'\n\nimport {\n  IFilter,\n  IAdvancedFilterBodyProps,\n  // tFieldTypeObject,\n  // tTypeObject,\n  IFilterConditions,\n  tDropDownOptions,\n  IThirdElementValue\n} from '../../interfaces'\nimport {\n  AdvancedFilterWrapper,\n  FilterCardWrapper,\n  AdvancedFilterInnerCardWrapper,\n  IconButtonStyled,\n  ChipsWrapper,\n  ConditionWrapper,\n  AddConditionWrapper,\n  SortButtonStyled,\n  SortStyled,\n  TransparentButton,\n  NoFilterBlock\n} from './styled'\nimport IconButton from '../../../../atoms/IconButton'\nimport FontIcon from '../../../../atoms/FontIcon'\nimport Typography from '../../../../atoms/Typography'\nimport Position from '../../../../molecules/Position'\n\nimport {\n  generateUEID,\n  getObject,\n  createNewArray,\n  arrayEquals,\n  removeObjectFromArray,\n  isElementPresent,\n  createSavedFiterDropdown,\n  getString,\n  validateSort\n} from '../Utils/index'\n\nconst Body = ({\n  chipsArray,\n  showCard,\n  handleUpdateAndSave,\n  onFavourite,\n  setShowCard,\n  clearCard,\n  handleDelete,\n  columnsData,\n  HSetColumnData,\n  fieldOperation,\n  ThirdElement,\n  openCard,\n  updateData,\n  masterCondition = true,\n  allowSort = true,\n  allowFavourites = true,\n  // allowMultipleFilters = true,\n  sortDropdown,\n  // tooltip,\n  saveTooltip,\n  duplicateTooltip,\n  cancelTooltip,\n  removeFavouriteTooltip,\n  markAsfavouriteTooltip,\n  onAddCondition,\n  showCardId,\n  ThirdElementFormatter\n}: IAdvancedFilterBodyProps) => {\n  const [dropdownOptions, setDropdownOptions] = useState<tDropDownOptions[]>([\n    ...columnsData\n  ])\n  const todaysDate = new Date()\n\n  const [showFirstDropdown, setShowFirstDropdown] = useState(false)\n\n  const [filterData, setFilterData] = useState<IFilter>({\n    id: '',\n    multiFilter: undefined,\n    filterName: '',\n    filterMasterCondition: 'AND',\n    filterSortable: false,\n    sortable: {\n      columnName: '',\n      sortOrder: ''\n    },\n    allowSort: false,\n    filterApplied: false,\n    advanceFilterTagReferenceIds: []\n  })\n\n  const [filterConditions, setFilterConditions] = useState<IFilterConditions[]>(\n    [\n      {\n        id: '',\n        readMode: false,\n        dropdownOptions: '',\n        operationalOptions: { options: null, value: '' },\n        fieldType: '',\n        thirdElement: { type: undefined, value: '',label:''}\n      }\n    ]\n  )\n\n  const [SavedFilterDropdownOptions, setSavedFilterDropdownOptions] = useState<\n    any[]\n  >([])\n\n  const [isModalOpen, setIsModalOpen] = useState(false)\n  const [columns, setColumns] = useState([''])\n  const [\n    filterNameInFilterCondition,\n    setFilterNameInFilterCondition\n  ] = useState([''])\n\n  const [deleteChip, setDeleteChip] = useState({\n    id: '',\n    call: false\n  })\n  useEffect(() => {\n    // handle Chip Array\n    const chip = chipsArray?.find((c) => c.id === filterData.id)\n    chip && handleChipClick(undefined, chip)\n  }, [chipsArray])\n  // close card when chipsArray Change\n  useEffect(() => {\n    updateData &&\n      updateData({\n        filterData: filterData,\n        filterConditions: filterConditions\n      })\n  }, [filterData, filterConditions])\n\n  // clear Card data\n  useEffect(() => {\n    if (clearCard) {\n      clearCardData()\n    }\n  }, [clearCard])\n\n  // Useeffect to track the dropdownOptions\n  useEffect(() => {\n    const a = createNewArray(\n      filterConditions,\n      'dropdownOptions',\n      'savedFilters'\n    )\n    !arrayEquals(a, columns) && setColumns(a)\n    // saveFilters\n    const b = filterConditions.map((f) => {\n      return typeof f.thirdElement.value === 'object'\n        ? f.thirdElement.value?.value\n        : f.thirdElement.value\n    })\n\n    !arrayEquals(b, filterNameInFilterCondition) &&\n      setFilterNameInFilterCondition(b)\n  }, [filterConditions])\n\n  // remove the columns from 1st dropdown if they are already selected\n  useEffect(() => {\n    // column dropdown repeating issue\n    let DropdownArray: tDropDownOptions[] = [...columnsData]\n    columns.forEach((c) => {\n      DropdownArray =\n        c !== '' ? removeObjectFromArray(c, DropdownArray, 'id') : DropdownArray\n    })\n    setDropdownOptions([...DropdownArray])\n    // saved Filters repeating issue\n\n    let savedFiltersArray: any[] = chipsArray\n      ? [...createSavedFiterDropdown(chipsArray)]\n      : []\n    filterNameInFilterCondition.forEach(\n      (m) =>\n        (savedFiltersArray =\n          m !== ''\n            ? removeObjectFromArray(m, savedFiltersArray, 'id')\n            : savedFiltersArray)\n    )\n    setSavedFilterDropdownOptions([...savedFiltersArray])\n  }, [columns, filterNameInFilterCondition])\n\n  // deleteChips\n  useEffect(() => {\n    deleteChip.call && handleDelete && handleDelete(deleteChip.id)\n  }, [deleteChip.call])\n\n  useEffect(() => {\n    const chip = chipsArray?.find((c) => c.id === showCardId)\n    showCardId && chip && handleChipClick(undefined, chip)\n\n    setShowCard && setShowCard(!!showCardId)\n  }, [showCardId])\n\n  // handle ADD condition\n  const handleAddCondition = () => {\n    if (showFirstDropdown) {\n      const flag = filterConditions.every((m) =>\n        m.dropdownOptions !== '' &&\n        m?.operationalOptions.value !== '' &&\n        m?.thirdElement.type !== '' &&\n        m?.thirdElement.type === 'none'\n          ? true\n          : m?.thirdElement.value !== ''\n      )\n\n      flag\n        ? setFilterConditions([\n            ...filterConditions,\n            {\n              id: generateUEID().toString(),\n              readMode: false,\n              dropdownOptions: '',\n              fieldType: '',\n              operationalOptions: { options: null, value: '' },\n              thirdElement: { type: undefined, value: '',label:'' }\n            }\n          ])\n        : showToast('Complete existing filter details first')\n    } else {\n      setShowFirstDropdown(true)\n      setFilterConditions([\n        {\n          id: generateUEID().toString(),\n          readMode: false,\n          dropdownOptions: '',\n          fieldType: '',\n          operationalOptions: { options: null, value: '' },\n          thirdElement: { type: undefined, value: '',label:''}\n        }\n      ])\n      onAddCondition && onAddCondition()\n    }\n  }\n\n  /***********************************/\n  /* Handle FAVOURITES  */\n  /**********************************/\n\n  const handleFavourites = () => {\n    onFavourite &&\n      onFavourite({\n        filterData: filterData,\n        filterConditions: filterConditions\n      })\n  }\n\n  /***********************************/\n  /* Handle Clicking on Filter Chip */\n  /**********************************/\n\n  const handleChipClick = (e: any, chip: any) => {\n    setShowFirstDropdown(true)\n    clearCardData()\n    setDropdownOptions([...columnsData])\n    populateNormalFilterData(chip)\n    console.log(e)\n  }\n\n  /*********************************************************/\n  /*         populate chips data in the card               */\n  /*********************************************************/\n\n  const populateNormalFilterData = (chip: any) => {\n    const isFavourite = chip?.favouriteSections?.some(\n      (m: string) => m === 'list'\n    )\n\n    setFilterData({\n      id: chip.id,\n      multiFilter: undefined,\n      isFavourite: isFavourite && chip.isFavourite,\n      favouriteSections: chip.favouriteSections,\n      filterName: chip.label,\n      filterMasterCondition: masterCondition ? chip.condition : 'AND',\n      filterSortable: allowSort,\n      filterApplied: chip?.filterApplied,\n      sortable: {\n        columnName: HSetColumnData[chip?.sortCriteria?.fieldId],\n        sortOrder: {\n          id: 'sorting',\n          label: chip?.sortCriteria?.operationSymbol,\n          value: chip?.sortCriteria?.operationLabelKey\n        }\n      },\n      allowSort: !!chip?.sortCriteria?.fieldId || false,\n      advanceFilterTagReferenceIds: chip?.advanceFilterTagReferenceIds\n    })\n    const tempArray: any[] = []\n    const isMultiFiler = chip?.advanceFilterTagReferenceIds\n\n    chip.dropdownData.map((c: any) => {\n      let DropDownValue: any = {}\n      let FT = ''\n      let OperationalArray: any\n      let operationalValue = {}\n\n      if (c.columnId === 'savedFilters' && isMultiFiler.length > 0) {\n        DropDownValue = {\n          id: 'savedFilterIs',\n          label: 'savedFilterIs',\n          value: 'savedFilterIs',\n          fieldType: 'savedFilter'\n        }\n        FT = 'savedFilterIs'\n        OperationalArray = FT && fieldOperation[FT]\n        operationalValue = fieldOperation[FT]\n      } else {\n        DropDownValue = HSetColumnData[c.columnId]\n        FT = DropDownValue?.fieldType\n        OperationalArray = FT && fieldOperation[FT]\n        operationalValue =\n          OperationalArray &&\n          getObject(c.operationType, OperationalArray, 'labelKey')\n      }\n\n      const temp = {\n        id: generateUEID().toString(),\n        readMode: true,\n        dropdownOptions: c.columnId,\n        operationalOptions: {\n          options: OperationalArray,\n          value: operationalValue\n        },\n        fieldType: DropDownValue?.fieldType,\n        thirdElement: {\n          type:\n            c.operationType === 'isnotempty' || c.operationType === 'isempty'\n              ? 'none'\n              : DropDownValue?.fieldType,\n          value: c.value,\n          label:c.label\n        }\n      }\n      tempArray.push(temp)\n    })\n    setFilterConditions([...tempArray])\n    openCard &&\n      openCard({\n        id: chip.id,\n        filterApplied: chip.filterApplied,\n        advanceFilterTagReferenceIds: []\n      })\n    setFilterConditions([...tempArray])\n    setShowCard && setShowCard(true)\n  }\n\n  /*********************************************************/\n  /*         Handle Closing of card                        */\n  /*********************************************************/\n  const handleCloseCard = () => {\n    clearCardData()\n    setShowCard && setShowCard(false)\n  }\n\n  /*********************************************************/\n  /*         Handle Clearing Data from the card             */\n  /*********************************************************/\n  const clearCardData = () => {\n    setFilterData({\n      id: '',\n      filterName: '',\n      multiFilter: undefined,\n      filterMasterCondition: 'AND',\n      filterSortable: allowSort,\n      sortable: {\n        columnName: '',\n        sortOrder: ''\n      },\n      advanceFilterTagReferenceIds: []\n    })\n    setFilterConditions([])\n  }\n\n  /*********************************************************/\n  /*         // handle click of first dropdown             */\n  /*********************************************************/\n  const handleFirstDropdownChange = (id: string, e: any) => {\n    const FT: any = e?.fieldType\n    let newState: any[]\n    if (FT === 'savedFilters') {\n      newState = filterConditions.map((fl) => {\n        return fl.id === id\n          ? {\n              ...fl,\n              operationalOptions: {\n                options: [\n                  {\n                    operation: 'is',\n                    operationSymbol: '=',\n                    label: '=',\n                    value: 'savedFilterIs'\n                  }\n                ],\n                value: {\n                  operation: 'is',\n                  operationSymbol: '=',\n                  label: '=',\n                  value: 'savedFilterIs'\n                }\n              },\n              fieldType: 'savedFilter',\n              dropdownOptions: e.id,\n              thirdElement: { type: 'savedFilter', value: '', label:'' }\n            }\n          : fl\n      })\n    } else {\n      newState = filterConditions.map((fl) => {\n        return fl.id === id\n          ? {\n              ...fl,\n              operationalOptions: {\n                options: fieldOperation[FT],\n                value: FT === 'calendar' ? fieldOperation[FT]?.[0] : ''\n              },\n              dropdownOptions: e.id,\n              fieldType: FT,\n              thirdElement: {\n                type: FT,\n                value: FT === 'calendar' ? [todaysDate, todaysDate] : '',\n                label:''\n              }\n            }\n          : fl\n      })\n    }\n    setFilterConditions([...newState])\n  }\n\n  /*********************************************************/\n  /*          // handle click of second dropdown         */\n  /*********************************************************/\n  const handleSecondDropdownChange = (id: string, e: any) => {\n    const operationOptions = filterConditions?.find((f: any) => f.id === id)\n      ?.operationalOptions?.options\n    let obj =\n      operationOptions && getObject(e.labelKey, operationOptions, 'labelKey')\n\n    obj = obj || e\n\n    let newState: any[] = []\n    if (e.value === 'savedFilterIs') {\n      newState = filterConditions.map((fl) =>\n        fl.id === id\n          ? {\n              ...fl,\n              thirdElement: { type: 'savedFilter', value: '', label:'' },\n              operationalOptions: {\n                options: fl.operationalOptions.options,\n                value: e\n              }\n            }\n          : fl\n      )\n    } else if (e.value === 'Between') {\n      newState = filterConditions.map((fl) =>\n        fl.id === id\n          ? {\n              ...fl,\n              thirdElement: {\n                type: fl.fieldType,\n                value: [todaysDate, todaysDate],\n                label: ''\n              },\n              operationalOptions: {\n                options: fl.operationalOptions.options,\n                value: e\n              }\n            }\n          : fl\n      )\n    } else {\n      newState = filterConditions.map((fl) =>\n        fl.id === id\n          ? {\n              ...fl,\n              thirdElement: {\n                type:\n                  e.labelKey === 'isnotempty' || e?.labelKey === 'isempty'\n                    ? 'none'\n                    : fl.fieldType,\n                value: '',\n                label:''\n              },\n              operationalOptions: {\n                options: fl.operationalOptions.options,\n                value: obj\n              }\n            }\n          : fl\n      )\n    }\n\n    setFilterConditions([...newState])\n  }\n\n  /*********************************************************/\n  // handle click of remove condition\n  /*********************************************************/\n  const handleRemoveCondition = (id: any) => {\n    const arr = removeObjectFromArray(id, filterConditions, 'id')\n    setFilterConditions([...arr])\n  }\n\n  /*********************************************************/\n  // handle filter Save\n  /*********************************************************/\n  const handleSave = () => {\n    handleUpdateAndSave &&\n      handleUpdateAndSave({\n        filterData: {\n          ...filterData\n        },\n        filterConditions: filterConditions\n      })\n  }\n\n  /*********************************************************/\n  // handle Duplicate\n  /*********************************************************/\n\n  const handleDuplicate = () => {\n    setFilterData({\n      ...filterData,\n      id: '',\n      filterName: ''\n    })\n    handleUpdateAndSave &&\n      handleUpdateAndSave({\n        filterData: {\n          ...filterData,\n          id: ''\n        },\n        filterConditions: filterConditions\n      })\n  }\n\n  /*********************************************************/\n  // handle sort open\n  /*********************************************************/\n  const handleSortOpen = () => {\n    setFilterData({\n      ...filterData,\n      allowSort: !filterData?.allowSort\n    })\n  }\n\n  /*********************************************************/\n  // handle Sort Columns\n  /*********************************************************/\n  const handleSortColumn = (e: any, column: boolean) => {\n    const value =\n      sortDropdown && column && typeof e.value === 'string'\n        ? getObject(e.value, sortDropdown, 'value')\n        : e.value\n\n    setFilterData({\n      ...filterData,\n      sortable: {\n        columnName: column ? value : filterData?.sortable?.columnName,\n        sortOrder: {\n          id: column\n            ? typeof filterData?.sortable?.sortOrder === 'string'\n              ? filterData?.sortable?.sortOrder\n              : filterData?.sortable?.sortOrder?.id\n            : e.value,\n          label: column\n            ? typeof filterData?.sortable?.sortOrder === 'string'\n              ? filterData?.sortable?.sortOrder\n              : filterData?.sortable?.sortOrder?.label\n            : e.label,\n          value: column\n            ? typeof filterData?.sortable?.sortOrder === 'string'\n              ? filterData?.sortable?.sortOrder\n              : filterData?.sortable?.sortOrder?.value\n            : e.value\n        }\n      }\n    })\n  }\n\n  /*********************************************************/\n  // Handle removing of sort columns\n  /*********************************************************/\n  const handleRemoveSort = () => {\n    setFilterData({\n      ...filterData,\n      sortable: {\n        columnName: '',\n        sortOrder: ''\n      },\n      allowSort: false\n    })\n  }\n\n  /*********************************************************/\n  // handle editing of Predefined conditions\n  /*********************************************************/\n  const activateEditMode = (id: string) => {\n    setFilterConditions((fl) =>\n      fl.map((c) =>\n        c.id === id\n          ? {\n              ...c,\n              readMode: false\n            }\n          : c\n      )\n    )\n  }\n\n  /*********************************************************/\n  // handle ThirdElement SetValue\n  /*********************************************************/\n  const handleThirdElementSetValue = (id: string, value: any, _label:any) => {\n    setFilterConditions((values) =>\n      values.map((v) =>\n        v.id === id\n          ? {\n              ...v,\n              thirdElement: { type: v.thirdElement.type, value: value, label: typeof value === 'object'? value: value.label}\n            }\n          : v\n      )\n    )\n  }\n\n  /*********************************************************/\n  // error messages toast\n  /*********************************************************/\n  const toast = useToast()\n  const showToast = (message: string) => toast.add(message, 'warning', false)\n\n  /*********************************************************/\n  // Formate label value\n  /*********************************************************/\n  const labelFormatter = React.useCallback(\n    (data: IThirdElementValue) => {\n      if (ThirdElementFormatter) {\n        return ThirdElementFormatter(data)\n      } else {\n        return data?.label || data?.value\n      }\n    },\n    [ThirdElementFormatter]\n  )\n\n  // Component Structure\n  return (\n    <AdvancedFilterWrapper>\n      <SectionHeader headerTitle='Saved Filters' />\n      <ChipsWrapper>\n        {chipsArray && chipsArray?.length > 0 ? (\n          chipsArray?.map((chips: any, index: any) =>\n            chips.id === 'draft' ? (\n              chipsArray.length === 1 ? (\n                <NoFilterBlock>No Saved Filter</NoFilterBlock>\n              ) : (\n                <div key={index} />\n              )\n            ) : (\n              <IconButtonStyled\n                title={chips.label}\n                key={index}\n                selected={\n                  filterData.multiFilter\n                    ? isElementPresent(chips.id, filterData.multiFilter)\n                    : chips.id === filterData.id\n                }\n              >\n                <TransparentButton onClick={(e) => handleChipClick(e, chips)}>\n                  {allowFavourites &&\n                    chips?.favouriteSections?.length > 0 &&\n                    chips?.favouriteSections?.find(\n                      (e: string) => e === 'list'\n                    ) &&\n                    chips?.isFavourite && (\n                      <FontIcon\n                        variant='star-filled'\n                        color={\n                          filterData.multiFilter\n                            ? isElementPresent(\n                                chips.id,\n                                filterData.multiFilter\n                              ) || chips.id === filterData.id\n                              ? 'white'\n                              : 'primary.main'\n                            : 'primary.main'\n                        }\n                        size={14}\n                      />\n                    )}\n                  {' ' + chips.label}\n                </TransparentButton>\n                {/* Delete Confirmation */}\n                {/* delete button */}\n                <IconButton\n                  iconVariant='delete-thin'\n                  iconSize={10}\n                  color='error.main'\n                  onClick={() => {\n                    setDeleteChip({\n                      call: false,\n                      id: chips.id\n                    })\n                    setIsModalOpen(true)\n                    handleCloseCard()\n                  }}\n                  intent='default'\n                  onlyIcon\n                />\n              </IconButtonStyled>\n            )\n          )\n        ) : (\n          <NoFilterBlock>No Saved Filter</NoFilterBlock>\n        )}\n      </ChipsWrapper>\n      {/* Filter Card */}\n      {showCard && (\n        <FilterCardWrapper>\n          <AdvancedFilterCardHeader\n            label={filterData.multiFilter ? 'MultiSelect View' : 'Filter Name'}\n            name={filterData.filterName}\n            duplicate={handleDuplicate}\n            setName={(name) =>\n              setFilterData({\n                ...filterData,\n                filterName: name\n              })\n            }\n            save={handleSave}\n            saveTooltip={saveTooltip}\n            close={handleCloseCard}\n            cancelTooltip={cancelTooltip}\n            duplicateTooltip={duplicateTooltip}\n            favourite={handleFavourites}\n            isFavourite={filterData.isFavourite}\n            id={filterData.id}\n            allowFavourites={allowFavourites}\n            favouriteTooltip={\n              filterData.isFavourite\n                ? removeFavouriteTooltip\n                : markAsfavouriteTooltip\n            }\n          />\n          <AdvancedFilterInnerCardWrapper>\n            {masterCondition && (\n              <AdvancedFilterMasterCondition\n                condition={filterData.filterMasterCondition}\n                handleChange={(e: any) => {\n                  setFilterData({\n                    ...filterData,\n                    filterMasterCondition: e\n                  })\n                }}\n              />\n            )}\n\n            <div>\n              {filterConditions.map((fl: any) => (\n                <ConditionWrapper key={fl.id}>\n                  {fl.readMode ? (\n                    <Position display='flex' justifyContent='space-between'>\n                      <Typography fontSize='14px' color='black'>\n                        {(HSetColumnData[fl.dropdownOptions]?.label ||\n                          HSetColumnData[fl.dropdownOptions]?.value) +\n                          ' ' +\n                          (fl.operationalOptions?.value?.label ||\n                            fl.operationalOptions?.value?.value) +\n                          ''}\n\n                        <span\n                          title={getString(\n                            fl.thirdElement?.label || fl.thirdElement?.value\n                          )}\n                        >\n                          {' ' +\n                            getString(\n                              labelFormatter(fl.thirdElement)\n                            )?.toString()}\n                        </span>\n                      </Typography>\n                      <IconButton\n                        onClick={() => activateEditMode(fl.id)}\n                        onlyIcon\n                        iconVariant='icomoon-edit-empty'\n                        iconSize='md'\n                        color='black'\n                      />\n                    </Position>\n                  ) : (\n                    <>\n                      {showFirstDropdown && (\n                        <Dropdown\n                          value={HSetColumnData[fl.dropdownOptions]}\n                          options={\n                            // if its savedFilter then dont show as it would be already shown\n                            fl.dropdownOptions === 'savedFilters'\n                              ? dropdownOptions\n                              : [\n                                  ...dropdownOptions,\n                                  { ...HSetColumnData[fl.dropdownOptions] }\n                                ]\n                          }\n                          onChange={(e: any) => {\n                            handleFirstDropdownChange(fl.id, e)\n                          }}\n                        />\n                      )}\n\n                      {fl.operationalOptions?.options !== null && (\n                        <Dropdown\n                          value={fl.operationalOptions.value}\n                          options={fl.operationalOptions.options}\n                          onChange={(e: any) =>\n                            handleSecondDropdownChange(fl.id, e)\n                          }\n                        />\n                      )}\n                      {fl.thirdElement.type === 'none' ? (\n                        ''\n                      ) : (\n                        <div>\n                          <span>\n                            {fl.thirdElement.type === 'savedFilter' ? (\n                              <Dropdown\n                                value={fl.thirdElement.value}\n                                options={[\n                                  ...SavedFilterDropdownOptions,\n                                  chipsArray &&\n                                  typeof fl.thirdElement.value === 'object'\n                                    ? fl.thirdElement.value\n                                    : chipsArray\n                                    ? getObject(\n                                        fl.thirdElement.value,\n                                        createSavedFiterDropdown(chipsArray),\n                                        'id'\n                                      )\n                                    : []\n                                ]}\n                                onChange={(value: any, label: any) => {\n                                  handleThirdElementSetValue(fl.id, value, label)\n                                }}\n                              />\n                            ) : (\n                              <ThirdElement\n                                key={fl.id}\n                                columnName={fl.dropdownOptions}\n                                operationType={fl.operationalOptions.value}\n                                fieldType={\n                                  fl.dropdownOptions &&\n                                  HSetColumnData[fl.dropdownOptions]?.fieldType\n                                }\n                                value={fl.thirdElement.value}\n                                setValue={(value: any, label: any) =>\n                                  handleThirdElementSetValue(fl.id, value, label)\n                                }\n                              />\n                            )}\n                          </span>\n                        </div>\n                      )}\n                    </>\n                  )}\n\n                  {filterConditions.length > 1 ||\n                  validateSort(filterData?.sortable) ? (\n                    <>\n                      <IconButton\n                        onClick={() => handleRemoveCondition(fl.id)}\n                        onlyIcon\n                        iconVariant='delete-tab'\n                        iconSize={18}\n                        color='error.lighterMain'\n                        style={{ padding: '0px 5px' }}\n                      />\n                    </>\n                  ) : (\n                    ''\n                  )}\n                </ConditionWrapper>\n              ))}\n\n              <AddConditionWrapper onClick={handleAddCondition}>\n                <FontIcon variant='add' color='primary.main' size={10} />\n                {'  '}Add Condition\n              </AddConditionWrapper>\n\n              {allowSort && filterData.filterSortable && (\n                <>\n                  <SortStyled onClick={handleSortOpen}>\n                    <SortButtonStyled\n                      onlyIcon\n                      iconVariant={\n                        filterData.allowSort ? 'icomoon-minus' : 'icomoon-add'\n                      }\n                      iconSize='xs'\n                      color='primary.main'\n                    />\n                    {'   '}\n                    <Typography\n                      fontSize='13px'\n                      primary\n                      underline\n                      style={{ display: 'inline-block' }}\n                    >\n                      Sort\n                    </Typography>\n                  </SortStyled>\n\n                  {filterData.allowSort && (\n                    <>\n                      <ConditionWrapper>\n                        <Dropdown\n                          value={filterData?.sortable?.columnName}\n                          options={sortDropdown && sortDropdown}\n                          onChange={(e: any) => handleSortColumn(e, true)}\n                        />\n                        <Dropdown\n                          value={filterData?.sortable?.sortOrder}\n                          options={[\n                            { label: 'Ascending', value: 'ASC' },\n                            { label: 'Descending', value: 'DESC' }\n                          ]}\n                          onChange={(e: any) => handleSortColumn(e, false)}\n                        />\n                        {filterConditions.length >= 1 && (\n                          <IconButton\n                            onClick={handleRemoveSort}\n                            onlyIcon\n                            iconVariant='delete-tab'\n                            iconSize='sm'\n                            color='error.main'\n                          />\n                        )}\n                      </ConditionWrapper>\n                    </>\n                  )}\n                </>\n              )}\n            </div>\n          </AdvancedFilterInnerCardWrapper>\n        </FilterCardWrapper>\n      )}\n      {/* Delete Confirmation Modal */}\n      <Modal\n        open={isModalOpen}\n        onToggle={(value: boolean) => {\n          setIsModalOpen(value)\n        }}\n        children={{\n          content: (\n            <Typography color='black'>\n              <div>Are you sure you want to delete this filter?</div>\n            </Typography>\n          ),\n          footer: (\n            <Position type='relative' display='flex' justifyContent='flex-end'>\n              <IconButton\n                onClick={() => {\n                  setDeleteChip({\n                    ...deleteChip,\n                    call: true\n                  })\n                  setIsModalOpen(false)\n                }}\n                primary\n                intent='default'\n                iconVariant='delete-thin'\n                children='Delete'\n                style={{ margin: '10px' }}\n              />\n              <IconButton\n                onClick={() => setIsModalOpen(false)}\n                intent='default'\n                iconVariant='close'\n                children='Cancel'\n                style={{ margin: '10px' }}\n              />\n            </Position>\n          ),\n          // triggerComponent: (\n\n          // ),\n          header: (\n            <Header\n              headerTitle='Delete Confirmation'\n              handleClose={() => setIsModalOpen(false)}\n              imageVariant='close'\n            />\n          )\n        }}\n        width='600px'\n      />\n    </AdvancedFilterWrapper>\n  )\n}\nexport default Body\n"]},"metadata":{},"sourceType":"module"}