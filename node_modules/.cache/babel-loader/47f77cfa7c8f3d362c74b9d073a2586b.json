{"ast":null,"code":"export var createArrayofObjects = function createArrayofObjects(start, end, prependZero) {\n  var tempArray = [];\n  var current = start; // fill the array until end is reached\n\n  while (end >= current) {\n    var CY = prependZero && current < 10 ? '0' + current.toString() : current.toString();\n    tempArray.push({\n      value: CY,\n      label: CY\n    });\n    current = current + 1;\n  }\n\n  return tempArray;\n};\nexport var createArrayofTimeObject = function createArrayofTimeObject(timeInterval, timeFormat) {\n  timeInterval = !timeInterval || timeInterval === null ? 15 : timeInterval;\n  var times = []; // time array\n\n  var tt = 0; // start time\n\n  var ap = ['AM', 'PM']; // AM-PM\n  // loop to increment the time and push results in array\n\n  for (var i = 0; tt < 24 * 60; i++) {\n    var hh = Math.floor(tt / 60); // getting hours of day in 0-24 format\n\n    var mm = tt % 60; // getting minutes of the hour in 0-55 format\n\n    var temp = ('0' + hh % timeFormat).slice(-2) + ':' + ('0' + mm).slice(-2); // get hh and minutes\n\n    timeFormat === 12 && (temp = temp + ap[Math.floor(hh / 12)]); // pushing data in array in [00:00 - 12:00 AM/PM or 00:00 - 24:00 format]\n\n    times.push(temp);\n    tt = tt + timeInterval;\n  }\n\n  return times;\n};\nexport var createArrayofTime = function createArrayofTime(timeInterval, timeFormat) {\n  timeInterval = !timeInterval || timeInterval === null ? 15 : timeInterval;\n  var times = []; // time array\n\n  var tt = 0; // start time\n\n  var ap = ['AM', 'PM']; // AM-PM\n  // loop to increment the time and push results in array\n\n  for (var i = 0; tt < 24 * 60; i++) {\n    var hh = Math.floor(tt / 60); // getting hours of day in 0-24 format\n\n    var mm = tt % 60; // getting minutes of the hour in 0-55 format\n    // const ap: String[] = ['AM', 'PM']\n\n    var temp = ('0' + hh % timeFormat).slice(-2) + ':' + ('0' + mm).slice(-2); // get hh and minutes\n\n    timeFormat === 12 && (temp = temp + ap[Math.floor(hh / 12)]); // times.push(hh * 60 + mm)\n\n    times.push({\n      value: hh * 60 + mm,\n      label: temp\n    });\n    tt = tt + timeInterval;\n  }\n\n  return times;\n}; // time functions\n\nexport var handleScrollUp = function handleScrollUp(container) {\n  var element = document.getElementById(container);\n\n  if (element) {\n    element.scrollTop = element ? element.scrollTop - 39 * 3 : 0;\n  }\n};\nexport var handleScrollDown = function handleScrollDown(container) {\n  var element = document.getElementById(container);\n\n  if (element) {\n    element.scrollTop = element ? element.scrollTop + 39 * 3 : 0;\n  }\n};\nexport var handleTimeOpen = function handleTimeOpen(date) {\n  var element = document.getElementById('scrollable-div');\n  console.log(date, element);\n};\nexport var convertTo24HourFormat = function convertTo24HourFormat(time, timeFormat) {\n  var t;\n  timeFormat === 12 && time.slice(-2) === 'PM' ? (t = parseInt(time.slice(0, 2)) + 12).toString() : t = time.slice(0, 2);\n  t = t + ':' + time.slice(3, 5);\n  return t;\n};\nexport var convertTo12HourFormat = function convertTo12HourFormat(time) {\n  var t = parseInt(time.slice(0, 2)) > 12 ? parseInt(time.slice(0, 2)) - 12 + ':' + time.slice(3, 5) + 'PM' : time + 'AM';\n  return t;\n};\nexport var getTomorrow = function getTomorrow() {\n  var daysInMonth = Math.abs(new Date(2019, 11, 40).getDate() - 40);\n  var Tom = new Date().getDate() === daysInMonth ? new Date(new Date().getFullYear(), new Date().getMonth() + 1, 1) : new Date().getMonth() === 11 ? new Date(new Date().getFullYear() + 1, 0, 0) : new Date(new Date().getFullYear(), new Date().getMonth(), new Date().getDate() + 1);\n  return Tom;\n};\nexport var getNextMonth = function getNextMonth(date) {\n  var now = date;\n  return now.getMonth() === 11 ? new Date(now.getFullYear() + 1, 0, 1) : new Date(now.getFullYear(), now.getMonth() + 1, 1);\n};\nexport var getPreviousMonth = function getPreviousMonth(date) {\n  var now = date;\n  return now.getMonth() === 0 ? new Date(now.getFullYear() - 1, 11, 1) : new Date(now.getFullYear(), now.getMonth() - 1, 1);\n};\nexport var compareDates = function compareDates(date1, date2) {\n  var d1 = new Date(date1.getFullYear(), date1.getMonth(), date1.getDate(), 0, 0, 0, 0);\n  var d2 = new Date(date2.getFullYear(), date2.getMonth(), date2.getDate(), 0, 0, 0, 0);\n  return (d1 === null || d1 === void 0 ? void 0 : d1.getTime()) <= (d2 === null || d2 === void 0 ? void 0 : d2.getTime());\n};\nexport var compareDatesWithTimes = function compareDatesWithTimes(date1, date2) {\n  return (date1 === null || date1 === void 0 ? void 0 : date1.getTime()) <= (date2 === null || date2 === void 0 ? void 0 : date2.getTime());\n};\nexport var equals = function equals(date1, date2) {\n  var d1 = new Date(date1.getFullYear(), date1.getMonth(), date1.getDate(), 0, 0, 0, 0);\n  var d2 = new Date(date2.getFullYear(), date2.getMonth(), date2.getDate(), 0, 0, 0, 0);\n  return (d1 === null || d1 === void 0 ? void 0 : d1.getTime()) === (d2 === null || d2 === void 0 ? void 0 : d2.getTime());\n}; // Custom Time in Date range input\n\nexport var convertTo24Hour = function convertTo24Hour(hour) {\n  var h;\n\n  if (parseInt(hour) < 12) {\n    h = parseInt(hour) + 12;\n    h = h < 10 ? '0' + h : h;\n  } else {\n    h = hour;\n  }\n\n  return h;\n};\nexport var convertTo12Hour = function convertTo12Hour(hour) {\n  var h;\n\n  if (parseInt(hour) > 13) {\n    h = parseInt(hour) - 12;\n    h = h < 10 ? '0' + h : h;\n  } else {\n    h = hour;\n  }\n\n  return h;\n};\nexport var binarySearch = function binarySearch(search, arr) {\n  var i = 0;\n  var j = arr.length - 1;\n  var mid = arr.length / 2;\n  var result = '';\n\n  while (i <= j) {\n    mid = i + (j - i) / 2;\n    mid = Math.floor(mid);\n\n    if (arr[mid].value > search) {\n      j = mid - 1;\n      result = arr[mid].label;\n    } else if (arr[mid].value < search) {\n      i = mid + 1;\n      result = arr[mid].label;\n    } else if (arr[mid].value === search) {\n      result = arr[mid].label;\n    } else {\n      result = arr[mid].label;\n      break;\n    }\n  }\n\n  return result;\n}; // convert String to Date\n\nexport var convertStringToDate = function convertStringToDate(input) {\n  var finalDate = new Date();\n  var dateArray = input.trim().split('/');\n  var month = parseInt(dateArray[0]);\n\n  if (month <= 12) {\n    //  valid day\n    finalDate.setMonth(month - 1); // set Month\n\n    var day = parseInt(dateArray[1]);\n\n    if (day <= 31) {\n      finalDate.setDate(day); // set year\n\n      var year = parseInt(dateArray[2]);\n\n      if (year <= 2050 && year >= 1970) {\n        finalDate.setFullYear(year); // return finalDate\n\n        return finalDate;\n      }\n    }\n  }\n\n  return undefined;\n};\nexport var findWhetherDateMatches = function findWhetherDateMatches(startDate, endDate, arrayOfDates) {\n  return arrayOfDates.some(function (p) {\n    return equals(startDate, p.startDate) && equals(endDate, p.endDate);\n  });\n};\nexport var getMonthBoudaries = function getMonthBoudaries(month, _minDate, maxDate) {\n  var startDate = new Date(month.getFullYear(), month.getMonth(), 1);\n  var endDate = new Date(month.getFullYear(), month.getMonth() + 1, 0);\n  var boundaries = {\n    minDate: startDate,\n    maxDate: endDate\n  }; // if (minDate && minDate >= startDate) {\n  //   boundaries.minDate = minDate\n  // }\n\n  if (maxDate && maxDate <= endDate) {\n    boundaries.maxDate = maxDate;\n  }\n\n  return boundaries;\n};","map":{"version":3,"sources":["/Users/farhanansari/Desktop/CODE/PrxProject/untitled folder/reactStoryBook/src/components/molecules/DatePicker/Utils/functions.tsx"],"names":["createArrayofObjects","start","end","prependZero","tempArray","current","CY","toString","push","value","label","createArrayofTimeObject","timeInterval","timeFormat","times","tt","ap","i","hh","Math","floor","mm","temp","slice","createArrayofTime","handleScrollUp","container","element","document","getElementById","scrollTop","handleScrollDown","handleTimeOpen","date","console","log","convertTo24HourFormat","time","t","parseInt","convertTo12HourFormat","getTomorrow","daysInMonth","abs","Date","getDate","Tom","getFullYear","getMonth","getNextMonth","now","getPreviousMonth","compareDates","date1","date2","d1","d2","getTime","compareDatesWithTimes","equals","convertTo24Hour","hour","h","convertTo12Hour","binarySearch","search","arr","j","length","mid","result","convertStringToDate","input","finalDate","dateArray","trim","split","month","setMonth","day","setDate","year","setFullYear","undefined","findWhetherDateMatches","startDate","endDate","arrayOfDates","some","p","getMonthBoudaries","_minDate","maxDate","boundaries","minDate"],"mappings":"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","sourcesContent":["import { IMultiSelectOptions as tYearArray } from '../../MultiSelect/interfaces'\nimport { IPreDefinedDateRanges } from '../interfaces'\n\nexport const createArrayofObjects = (\n  start: number,\n  end: number,\n  prependZero?: boolean\n) => {\n  const tempArray: tYearArray[] = []\n  let current: number = start\n\n  // fill the array until end is reached\n  while (end >= current) {\n    const CY: string =\n      prependZero && current < 10\n        ? '0' + current.toString()\n        : current.toString()\n    tempArray.push({ value: CY, label: CY } as tYearArray)\n    current = current + 1\n  }\n  return tempArray\n}\n\nexport const createArrayofTimeObject = (\n  timeInterval: number,\n  timeFormat: number\n) => {\n  timeInterval = !timeInterval || timeInterval === null ? 15 : timeInterval\n  const times: string[] = [] // time array\n  let tt: number = 0 // start time\n  const ap: String[] = ['AM', 'PM'] // AM-PM\n\n  // loop to increment the time and push results in array\n  for (let i = 0; tt < 24 * 60; i++) {\n    var hh = Math.floor(tt / 60) // getting hours of day in 0-24 format\n    var mm = tt % 60 // getting minutes of the hour in 0-55 format\n\n    let temp = ('0' + (hh % timeFormat)).slice(-2) + ':' + ('0' + mm).slice(-2) // get hh and minutes\n    timeFormat === 12 && (temp = temp + ap[Math.floor(hh / 12)]) // pushing data in array in [00:00 - 12:00 AM/PM or 00:00 - 24:00 format]\n    times.push(temp)\n    tt = tt + timeInterval\n  }\n  return times\n}\n\nexport const createArrayofTime = (timeInterval: number, timeFormat: number) => {\n  timeInterval = !timeInterval || timeInterval === null ? 15 : timeInterval\n  const times: any[] = [] // time array\n  let tt: number = 0 // start time\n  const ap: String[] = ['AM', 'PM'] // AM-PM\n  // loop to increment the time and push results in array\n  for (let i = 0; tt < 24 * 60; i++) {\n    var hh = Math.floor(tt / 60) // getting hours of day in 0-24 format\n    var mm = tt % 60 // getting minutes of the hour in 0-55 format\n    // const ap: String[] = ['AM', 'PM']\n\n    let temp = ('0' + (hh % timeFormat)).slice(-2) + ':' + ('0' + mm).slice(-2) // get hh and minutes\n    timeFormat === 12 && (temp = temp + ap[Math.floor(hh / 12)])\n\n    // times.push(hh * 60 + mm)\n    times.push({ value: hh * 60 + mm, label: temp })\n    tt = tt + timeInterval\n  }\n  return times\n}\n// time functions\nexport const handleScrollUp = (container: string) => {\n  const element: HTMLElement | null = document.getElementById(container)\n  if (element) {\n    element.scrollTop = element ? element.scrollTop - 39 * 3 : 0\n  }\n}\n\nexport const handleScrollDown = (container: string) => {\n  const element: HTMLElement | null = document.getElementById(container)\n  if (element) {\n    element.scrollTop = element ? element.scrollTop + 39 * 3 : 0\n  }\n}\n\nexport const handleTimeOpen = (date: Date) => {\n  const element: HTMLElement | null = document.getElementById('scrollable-div')\n  console.log(date, element)\n}\nexport const convertTo24HourFormat = (time: string, timeFormat: number) => {\n  let t\n  timeFormat === 12 && time.slice(-2) === 'PM'\n    ? (t = parseInt(time.slice(0, 2)) + 12).toString()\n    : (t = time.slice(0, 2))\n  t = t + ':' + time.slice(3, 5)\n  return t\n}\n\nexport const convertTo12HourFormat = (time: string) => {\n  const t =\n    parseInt(time.slice(0, 2)) > 12\n      ? parseInt(time.slice(0, 2)) - 12 + ':' + time.slice(3, 5) + 'PM'\n      : time + 'AM'\n  return t\n}\nexport const getTomorrow = () => {\n  const daysInMonth = Math.abs(new Date(2019, 11, 40).getDate() - 40)\n  const Tom =\n    new Date().getDate() === daysInMonth\n      ? new Date(new Date().getFullYear(), new Date().getMonth() + 1, 1)\n      : new Date().getMonth() === 11\n      ? new Date(new Date().getFullYear() + 1, 0, 0)\n      : new Date(\n          new Date().getFullYear(),\n          new Date().getMonth(),\n          new Date().getDate() + 1\n        )\n  return Tom\n}\n\nexport const getNextMonth = (date: Date) => {\n  const now = date\n  return now.getMonth() === 11\n    ? new Date(now.getFullYear() + 1, 0, 1)\n    : new Date(now.getFullYear(), now.getMonth() + 1, 1)\n}\n\nexport const getPreviousMonth = (date: Date) => {\n  const now = date\n  return now.getMonth() === 0\n    ? new Date(now.getFullYear() - 1, 11, 1)\n    : new Date(now.getFullYear(), now.getMonth() - 1, 1)\n}\n\nexport const compareDates = (date1: Date, date2: Date) => {\n  const d1 = new Date(\n    date1.getFullYear(),\n    date1.getMonth(),\n    date1.getDate(),\n    0,\n    0,\n    0,\n    0\n  )\n  const d2 = new Date(\n    date2.getFullYear(),\n    date2.getMonth(),\n    date2.getDate(),\n    0,\n    0,\n    0,\n    0\n  )\n  return d1?.getTime() <= d2?.getTime()\n}\n\nexport const compareDatesWithTimes = (date1: Date, date2: Date) => {\n  return date1?.getTime() <= date2?.getTime()\n}\n\nexport const equals = (date1: Date, date2: Date) => {\n  const d1 = new Date(\n    date1.getFullYear(),\n    date1.getMonth(),\n    date1.getDate(),\n    0,\n    0,\n    0,\n    0\n  )\n  const d2 = new Date(\n    date2.getFullYear(),\n    date2.getMonth(),\n    date2.getDate(),\n    0,\n    0,\n    0,\n    0\n  )\n  return d1?.getTime() === d2?.getTime()\n}\n\n// Custom Time in Date range input\nexport const convertTo24Hour = (hour: string) => {\n  let h\n  if (parseInt(hour) < 12) {\n    h = parseInt(hour) + 12\n    h = h < 10 ? '0' + h : h\n  } else {\n    h = hour\n  }\n  return h\n}\n\nexport const convertTo12Hour = (hour: string) => {\n  let h\n  if (parseInt(hour) > 13) {\n    h = parseInt(hour) - 12\n    h = h < 10 ? '0' + h : h\n  } else {\n    h = hour\n  }\n  return h\n}\n\nexport const binarySearch = (search: number, arr: any[]) => {\n  let i = 0\n  let j = arr.length - 1\n  let mid = arr.length / 2\n  let result = ''\n\n  while (i <= j) {\n    mid = i + (j - i) / 2\n    mid = Math.floor(mid)\n    if (arr[mid].value > search) {\n      j = mid - 1\n      result = arr[mid].label\n    } else if (arr[mid].value < search) {\n      i = mid + 1\n      result = arr[mid].label\n    } else if (arr[mid].value === search) {\n      result = arr[mid].label\n    } else {\n      result = arr[mid].label\n      break\n    }\n  }\n\n  return result\n}\n\n// convert String to Date\nexport const convertStringToDate = (input: string) => {\n  const finalDate = new Date()\n  const dateArray = input.trim().split('/')\n  const month = parseInt(dateArray[0])\n  if (month <= 12) {\n    //  valid day\n    finalDate.setMonth(month - 1)\n\n    // set Month\n    const day = parseInt(dateArray[1])\n    if (day <= 31) {\n      finalDate.setDate(day)\n\n      // set year\n      const year = parseInt(dateArray[2])\n      if (year <= 2050 && year >= 1970) {\n        finalDate.setFullYear(year)\n\n        // return finalDate\n        return finalDate\n      }\n    }\n  }\n\n  return undefined\n}\n\nexport const findWhetherDateMatches = (\n  startDate: Date,\n  endDate: Date,\n  arrayOfDates: IPreDefinedDateRanges[]\n) => {\n  return arrayOfDates.some(\n    (p) => equals(startDate, p.startDate) && equals(endDate, p.endDate)\n  )\n}\n\nexport const getMonthBoudaries = (\n  month: Date,\n  _minDate: Date | null | undefined,\n  maxDate: Date | null | undefined\n) => {\n  const startDate = new Date(month.getFullYear(), month.getMonth(), 1)\n  const endDate = new Date(month.getFullYear(), month.getMonth() + 1, 0)\n  const boundaries = {\n    minDate: startDate,\n    maxDate: endDate\n  }\n  // if (minDate && minDate >= startDate) {\n  //   boundaries.minDate = minDate\n  // }\n\n  if (maxDate && maxDate <= endDate) {\n    boundaries.maxDate = maxDate\n  }\n  return boundaries\n}\n"]},"metadata":{},"sourceType":"module"}