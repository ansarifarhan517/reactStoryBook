{"ast":null,"code":"import _slicedToArray from \"/Users/farhanansari/Desktop/CODE/PrxProject/untitled folder/reactStoryBook/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/slicedToArray\";\n\nvar _this = this,\n    _jsxFileName = \"/Users/farhanansari/Desktop/CODE/PrxProject/untitled folder/reactStoryBook/src/components/atoms/Map/utils/LeafletInfowindow.tsx\";\n\n// The Component which displays Search input with suggestions\nimport React, { Fragment, useEffect, useState } from 'react';\nimport { getGeoLocation } from '../helperMethods';\nimport { StyledLabel } from '../StyledMap';\n\nvar getValue = function getValue(data, definitions, dataKey, dataIndex, popupCustomComponent) {\n  if (definitions[dataKey] && definitions[dataKey].dataType === 'text') {\n    var _definitions$dataKey, _definitions$dataKey2, _definitions$dataKey3, _definitions$dataKey4;\n\n    var unitValue = ((_definitions$dataKey = definitions[dataKey]) === null || _definitions$dataKey === void 0 ? void 0 : _definitions$dataKey.unit) ? (_definitions$dataKey2 = definitions[dataKey]) === null || _definitions$dataKey2 === void 0 ? void 0 : _definitions$dataKey2.unit : '';\n    var value = data ? data[dataKey] ? data[dataKey] : 'Not Available' : '';\n    var parsedValue = unitValue ? parseFloat(value).toFixed(2) : value;\n    return /*#__PURE__*/React.createElement(\"div\", {\n      key: dataIndex + dataKey,\n      className: \"title \".concat(definitions === null || definitions === void 0 ? void 0 : (_definitions$dataKey3 = definitions[dataKey]) === null || _definitions$dataKey3 === void 0 ? void 0 : _definitions$dataKey3.classList),\n      __self: _this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 21,\n        columnNumber: 7\n      }\n    }, /*#__PURE__*/React.createElement(StyledLabel, {\n      __self: _this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 25,\n        columnNumber: 9\n      }\n    }, definitions === null || definitions === void 0 ? void 0 : (_definitions$dataKey4 = definitions[dataKey]) === null || _definitions$dataKey4 === void 0 ? void 0 : _definitions$dataKey4.labelKey), /*#__PURE__*/React.createElement(\"span\", {\n      className: \"value\",\n      __self: _this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 27,\n        columnNumber: 9\n      }\n    }, parsedValue + ' ' + unitValue)); // eg: isHighAlert : High Alert or Low Alert\n  } else if (definitions[dataKey] && definitions[dataKey].dataType === 'boolean') {\n    var _definitions$dataKey5, _definitions$dataKey6;\n\n    var _value = data[definitions[dataKey].dataKey] ? definitions[dataKey].trueValue : definitions[dataKey].falseValue;\n\n    return /*#__PURE__*/React.createElement(\"div\", {\n      key: dataIndex + dataKey,\n      className: \"title \".concat(definitions === null || definitions === void 0 ? void 0 : (_definitions$dataKey5 = definitions[dataKey]) === null || _definitions$dataKey5 === void 0 ? void 0 : _definitions$dataKey5.classList),\n      __self: _this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 40,\n        columnNumber: 7\n      }\n    }, /*#__PURE__*/React.createElement(StyledLabel, {\n      __self: _this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 44,\n        columnNumber: 9\n      }\n    }, definitions === null || definitions === void 0 ? void 0 : (_definitions$dataKey6 = definitions[dataKey]) === null || _definitions$dataKey6 === void 0 ? void 0 : _definitions$dataKey6.labelKey), /*#__PURE__*/React.createElement(\"span\", {\n      className: \"value\",\n      __self: _this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 45,\n        columnNumber: 9\n      }\n    }, _value));\n  } else if ( // eg: coordinate: londitude, latitude\n  definitions[dataKey] && definitions[dataKey].dataType === '_thisDependent') {\n    var _definitions$dataKey7, _definitions$dataKey8, _definitions$dataKey9, _definitions$dataKey10;\n\n    var _value2 = (_definitions$dataKey7 = definitions[dataKey]) === null || _definitions$dataKey7 === void 0 ? void 0 : (_definitions$dataKey8 = _definitions$dataKey7.dataKey) === null || _definitions$dataKey8 === void 0 ? void 0 : _definitions$dataKey8.map(function (key) {\n      return data[key];\n    });\n\n    return /*#__PURE__*/React.createElement(\"div\", {\n      key: dataIndex + 'dependent',\n      className: \"title \".concat(definitions === null || definitions === void 0 ? void 0 : (_definitions$dataKey9 = definitions[dataKey]) === null || _definitions$dataKey9 === void 0 ? void 0 : _definitions$dataKey9.classList),\n      __self: _this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 55,\n        columnNumber: 7\n      }\n    }, /*#__PURE__*/React.createElement(StyledLabel, {\n      __self: _this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 59,\n        columnNumber: 9\n      }\n    }, definitions === null || definitions === void 0 ? void 0 : (_definitions$dataKey10 = definitions[dataKey]) === null || _definitions$dataKey10 === void 0 ? void 0 : _definitions$dataKey10.labelKey), /*#__PURE__*/React.createElement(\"span\", {\n      className: \"value\",\n      __self: _this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 60,\n        columnNumber: 9\n      }\n    }, _value2.join()));\n  } else if (definitions[dataKey].dataType === '_thisComponent') {\n    var _definitions$dataKey11, _definitions$dataKey12, _definitions$dataKey13, _definitions$dataKey14, _definitions$dataKey15;\n\n    // phone number : icon 90000334343 - format\n    var setHtmlData = (_definitions$dataKey11 = definitions[dataKey]) === null || _definitions$dataKey11 === void 0 ? void 0 : _definitions$dataKey11.html;\n    return /*#__PURE__*/React.createElement(\"div\", {\n      style: {\n        display: 'flex'\n      },\n      key: dataIndex + dataKey,\n      className: \"title \".concat(definitions === null || definitions === void 0 ? void 0 : (_definitions$dataKey12 = definitions[dataKey]) === null || _definitions$dataKey12 === void 0 ? void 0 : _definitions$dataKey12.classList),\n      __self: _this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 68,\n        columnNumber: 7\n      }\n    }, (definitions === null || definitions === void 0 ? void 0 : (_definitions$dataKey13 = definitions[dataKey]) === null || _definitions$dataKey13 === void 0 ? void 0 : _definitions$dataKey13.labelKey) && /*#__PURE__*/React.createElement(StyledLabel, {\n      __self: _this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 74,\n        columnNumber: 11\n      }\n    }, definitions === null || definitions === void 0 ? void 0 : (_definitions$dataKey14 = definitions[dataKey]) === null || _definitions$dataKey14 === void 0 ? void 0 : _definitions$dataKey14.labelKey), /*#__PURE__*/React.createElement(\"span\", {\n      className: \"value\",\n      style: {\n        display: 'inline'\n      },\n      __self: _this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 76,\n        columnNumber: 9\n      }\n    }, setHtmlData({\n      value: data === null || data === void 0 ? void 0 : data[(_definitions$dataKey15 = definitions[dataKey]) === null || _definitions$dataKey15 === void 0 ? void 0 : _definitions$dataKey15.dataKey]\n    })));\n  } else if (definitions[dataKey].dataType === 'component') {\n    return popupCustomComponent === null || popupCustomComponent === void 0 ? void 0 : popupCustomComponent[dataKey]({\n      selectedData: data\n    });\n  }\n\n  return /*#__PURE__*/React.createElement(Fragment, {\n    key: dataIndex + dataKey,\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 86,\n      columnNumber: 10\n    }\n  });\n}; // to find location on click of popup(called only once )\n\n\nvar Location = function Location(_ref) {\n  var latlngObj = _ref.latlngObj,\n      google = _ref.google,\n      data = _ref.data,\n      dataIndex = _ref.dataIndex,\n      labelKey = _ref.labelKey,\n      dataKey = _ref.dataKey,\n      classList = _ref.classList;\n\n  // modify data once you get location,by putting actual location\n  var _useState = useState(data),\n      _useState2 = _slicedToArray(_useState, 2),\n      _data = _useState2[0],\n      setData = _useState2[1]; // initially data will not be there that time dont show location,once finder gives it update location feild\n\n\n  var _useState3 = useState(false),\n      _useState4 = _slicedToArray(_useState3, 2),\n      showLocation = _useState4[0],\n      setShowLocation = _useState4[1];\n\n  useEffect(function () {\n    // find the geo location by geocoder finder\n    latlngObj && getGeoLocation(latlngObj, google, _data, setData, setShowLocation);\n  }, []);\n  return showLocation ? /*#__PURE__*/React.createElement(\"div\", {\n    key: dataIndex + 'location',\n    className: classList,\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 109,\n      columnNumber: 5\n    }\n  }, /*#__PURE__*/React.createElement(StyledLabel, {\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 110,\n      columnNumber: 7\n    }\n  }, labelKey), /*#__PURE__*/React.createElement(\"span\", {\n    className: \"value\",\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 111,\n      columnNumber: 7\n    }\n  }, _data[dataKey])) : null;\n};\n\nvar LeafletInfowindow = function LeafletInfowindow(props) {\n  var infowindowStructure = props === null || props === void 0 ? void 0 : props.structures;\n  var infoWindow = infowindowStructure === null || infowindowStructure === void 0 ? void 0 : infowindowStructure[props.popupRef];\n  var permissions = props.popupRef && (infoWindow === null || infoWindow === void 0 ? void 0 : infoWindow.permissions);\n  var popupCustomComponent = props === null || props === void 0 ? void 0 : props.popupCustomComponent;\n  var definitions = props.popupRef && (infoWindow === null || infoWindow === void 0 ? void 0 : infoWindow.definitions); // if lat lng object available and wants to show _thisLocation on tooltip then only caluclate location\n\n  console.log('LeafletInfowindow.tsx', props);\n  return /*#__PURE__*/React.createElement(Fragment, {\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 126,\n      columnNumber: 5\n    }\n  }, props.popupRef && permissions && permissions.map(function (dataKey, dataIndex) {\n    var _definitions$dataKey16, _definitions$dataKey17;\n\n    return /*#__PURE__*/React.createElement(Fragment, {\n      key: \"\".concat(dataKey, \"_\").concat(dataIndex),\n      __self: _this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 131,\n        columnNumber: 13\n      }\n    }, definitions[dataKey].dataType === '_thisLocation' ? /*#__PURE__*/React.createElement(Location, {\n      latlngObj: props === null || props === void 0 ? void 0 : props.latlngObj,\n      google: props === null || props === void 0 ? void 0 : props.google,\n      data: props === null || props === void 0 ? void 0 : props.data,\n      dataIndex: dataIndex,\n      labelKey: (_definitions$dataKey16 = definitions[dataKey]) === null || _definitions$dataKey16 === void 0 ? void 0 : _definitions$dataKey16.labelKey,\n      dataKey: dataKey,\n      classList: (_definitions$dataKey17 = definitions[dataKey]) === null || _definitions$dataKey17 === void 0 ? void 0 : _definitions$dataKey17.classList,\n      __self: _this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 133,\n        columnNumber: 17\n      }\n    }) : getValue(props === null || props === void 0 ? void 0 : props.data, definitions, dataKey, dataIndex, popupCustomComponent));\n  }));\n};\n\nexport default React.memo(LeafletInfowindow);","map":{"version":3,"sources":["/Users/farhanansari/Desktop/CODE/PrxProject/untitled folder/reactStoryBook/src/components/atoms/Map/utils/LeafletInfowindow.tsx"],"names":["React","Fragment","useEffect","useState","getGeoLocation","StyledLabel","getValue","data","definitions","dataKey","dataIndex","popupCustomComponent","dataType","unitValue","unit","value","parsedValue","parseFloat","toFixed","classList","labelKey","trueValue","falseValue","map","key","join","setHtmlData","html","display","selectedData","Location","latlngObj","google","_data","setData","showLocation","setShowLocation","LeafletInfowindow","props","infowindowStructure","structures","infoWindow","popupRef","permissions","console","log","memo"],"mappings":"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","sourcesContent":["// The Component which displays Search input with suggestions\n\nimport React, { Fragment, useEffect, useState } from 'react'\nimport { getGeoLocation } from '../helperMethods'\nimport { StyledLabel } from '../StyledMap'\n\nconst getValue = (\n  data: any,\n  definitions: any,\n  dataKey: any,\n  dataIndex: number,\n  popupCustomComponent: any\n) => {\n  if (definitions[dataKey] && definitions[dataKey].dataType === 'text') {\n    const unitValue = definitions[dataKey]?.unit\n      ? definitions[dataKey]?.unit\n      : ''\n    const value = data ? (data[dataKey] ? data[dataKey] : 'Not Available') : ''\n    const parsedValue = unitValue ? parseFloat(value).toFixed(2) : value\n    return (\n      <div\n        key={dataIndex + dataKey}\n        className={`title ${definitions?.[dataKey]?.classList}`}\n      >\n        <StyledLabel>{definitions?.[dataKey]?.labelKey}</StyledLabel>\n\n        <span className='value'>{parsedValue + ' ' + unitValue}</span>\n      </div>\n    )\n    // eg: isHighAlert : High Alert or Low Alert\n  } else if (\n    definitions[dataKey] &&\n    definitions[dataKey].dataType === 'boolean'\n  ) {\n    const value = data[definitions[dataKey].dataKey]\n      ? definitions[dataKey].trueValue\n      : definitions[dataKey].falseValue\n\n    return (\n      <div\n        key={dataIndex + dataKey}\n        className={`title ${definitions?.[dataKey]?.classList}`}\n      >\n        <StyledLabel>{definitions?.[dataKey]?.labelKey}</StyledLabel>\n        <span className='value'>{value}</span>\n      </div>\n    )\n  } else if (\n    // eg: coordinate: londitude, latitude\n    definitions[dataKey] &&\n    definitions[dataKey].dataType === '_thisDependent'\n  ) {\n    const value = definitions[dataKey]?.dataKey?.map((key: string) => data[key])\n    return (\n      <div\n        key={dataIndex + 'dependent'}\n        className={`title ${definitions?.[dataKey]?.classList}`}\n      >\n        <StyledLabel>{definitions?.[dataKey]?.labelKey}</StyledLabel>\n        <span className='value'>{value.join()}</span>\n      </div>\n    )\n  } else if (definitions[dataKey].dataType === '_thisComponent') {\n    // phone number : icon 90000334343 - format\n    const setHtmlData = definitions[dataKey]?.html\n\n    return (\n      <div\n        style={{ display: 'flex' }}\n        key={dataIndex + dataKey}\n        className={`title ${definitions?.[dataKey]?.classList}`}\n      >\n        {definitions?.[dataKey]?.labelKey && (\n          <StyledLabel>{definitions?.[dataKey]?.labelKey}</StyledLabel>\n        )}\n        <span className='value' style={{ display: 'inline' }}>\n          {setHtmlData({\n            value: data?.[definitions[dataKey]?.dataKey]\n          })}\n        </span>\n      </div>\n    )\n  } else if (definitions[dataKey].dataType === 'component') {\n    return popupCustomComponent?.[dataKey]({ selectedData: data })\n  }\n  return <Fragment key={dataIndex + dataKey} />\n}\n\n// to find location on click of popup(called only once )\nconst Location = ({\n  latlngObj,\n  google,\n  data,\n  dataIndex,\n  labelKey,\n  dataKey,\n  classList\n}: any) => {\n  // modify data once you get location,by putting actual location\n  const [_data, setData] = useState(data)\n  // initially data will not be there that time dont show location,once finder gives it update location feild\n  const [showLocation, setShowLocation] = useState(false)\n  useEffect(() => {\n    // find the geo location by geocoder finder\n    latlngObj &&\n      getGeoLocation(latlngObj, google, _data, setData, setShowLocation)\n  }, [])\n  return showLocation ? (\n    <div key={dataIndex + 'location'} className={classList}>\n      <StyledLabel>{labelKey}</StyledLabel>\n      <span className='value'>{_data[dataKey]}</span>\n    </div>\n  ) : null\n}\n\nconst LeafletInfowindow = (props: any) => {\n  const infowindowStructure = props?.structures\n  const infoWindow = infowindowStructure?.[props.popupRef]\n  const permissions = props.popupRef && infoWindow?.permissions\n  const popupCustomComponent = props?.popupCustomComponent\n\n  const definitions = props.popupRef && infoWindow?.definitions\n  // if lat lng object available and wants to show _thisLocation on tooltip then only caluclate location\n  console.log('LeafletInfowindow.tsx',props);\n  return (\n    <Fragment>\n      {props.popupRef &&\n        permissions &&\n        permissions.map((dataKey: string, dataIndex: number) => {\n          return (\n            <Fragment key={`${dataKey}_${dataIndex}`}>\n              {definitions[dataKey].dataType === '_thisLocation' ? (\n                <Location\n                  latlngObj={props?.latlngObj}\n                  google={props?.google}\n                  data={props?.data}\n                  dataIndex={dataIndex}\n                  labelKey={definitions[dataKey]?.labelKey}\n                  dataKey={dataKey}\n                  classList={definitions[dataKey]?.classList}\n                />\n              ) : (\n                getValue(\n                  props?.data,\n                  definitions,\n                  dataKey,\n                  dataIndex,\n                  popupCustomComponent\n                )\n              )}\n            </Fragment>\n          )\n        })}\n    </Fragment>\n  )\n}\n\nexport default React.memo(LeafletInfowindow)\n"]},"metadata":{},"sourceType":"module"}