{"ast":null,"code":"import _slicedToArray from \"/Users/farhanansari/Code/ui-library/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/slicedToArray\";\n\nvar _this = this,\n    _jsxFileName = \"/Users/farhanansari/Code/ui-library/src/components/organisms/AdvancedFilter/components/AdvFiterDropdown/index.tsx\";\n\nimport React, { useMemo } from 'react';\nimport Select, { components } from 'react-select';\nimport FontIcon from '../../../../atoms/FontIcon';\nimport { CustomStyles, StyledSelectWrapper } from './styled';\n\nvar AdvFiterDropdown = function AdvFiterDropdown(_ref) {\n  var options = _ref.options,\n      value = _ref.value,\n      _onChange = _ref.onChange,\n      _ref$limitOptionsList = _ref.limitOptionsList,\n      limitOptionsList = _ref$limitOptionsList === void 0 ? 25 : _ref$limitOptionsList;\n  // console.log(value)\n  var resultLimit = limitOptionsList;\n  var i = 0;\n\n  var _React$useState = React.useState(),\n      _React$useState2 = _slicedToArray(_React$useState, 2),\n      input = _React$useState2[0],\n      setInput = _React$useState2[1];\n\n  var onInputChangeWrapper = function onInputChangeWrapper(newValue) {\n    setInput(newValue);\n  };\n\n  var optionsMemo = useMemo(function () {\n    return options === null || options === void 0 ? void 0 : options.filter(function (dropdownOption) {\n      if (typeof input === 'number' && input) {\n        var _dropdownOption$label, _input$toString;\n\n        return (dropdownOption === null || dropdownOption === void 0 ? void 0 : (_dropdownOption$label = dropdownOption.label) === null || _dropdownOption$label === void 0 ? void 0 : _dropdownOption$label.toLowerCase().indexOf(input === null || input === void 0 ? void 0 : (_input$toString = input.toString()) === null || _input$toString === void 0 ? void 0 : _input$toString.toLowerCase())) >= 0 && i++ < resultLimit;\n      } else if (input) {\n        var _dropdownOption$label2;\n\n        return (dropdownOption === null || dropdownOption === void 0 ? void 0 : (_dropdownOption$label2 = dropdownOption.label) === null || _dropdownOption$label2 === void 0 ? void 0 : _dropdownOption$label2.toLowerCase().indexOf(input === null || input === void 0 ? void 0 : input.toLowerCase())) >= 0 && i++ < resultLimit;\n      } else {\n        return i++ < resultLimit;\n      }\n    });\n  }, [input, options]);\n  return /*#__PURE__*/React.createElement(StyledSelectWrapper, {\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 29,\n      columnNumber: 5\n    }\n  }, /*#__PURE__*/React.createElement(Select, {\n    className: \"basic-single\",\n    classNamePrefix: \"react-select\" // defaultValue={value}\n    ,\n    value: value,\n    onInputChange: onInputChangeWrapper,\n    isSearchable: true,\n    name: \"color\",\n    components: {\n      IndicatorSeparator: function IndicatorSeparator() {\n        return null;\n      },\n      ClearIndicator: function ClearIndicator() {\n        return null;\n      },\n      DropdownIndicator: DownArrowIndicator,\n      Option: function Option(props) {\n        return /*#__PURE__*/React.createElement(\"div\", {\n          title: props.data.label,\n          __self: _this,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 43,\n            columnNumber: 13\n          }\n        }, /*#__PURE__*/React.createElement(components.Option, Object.assign({}, props, {\n          __self: _this,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 44,\n            columnNumber: 15\n          }\n        })));\n      }\n    },\n    options: optionsMemo,\n    onChange: function onChange(e) {\n      i = 0;\n\n      _onChange(e);\n    },\n    styles: CustomStyles(),\n    valueKey: \"id\",\n    menuPlacement: \"auto\",\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 30,\n      columnNumber: 7\n    }\n  }));\n};\n\nexport default AdvFiterDropdown;\n\nvar DownArrowIndicator = function DownArrowIndicator(props) {\n  return /*#__PURE__*/React.createElement(components.DropdownIndicator, Object.assign({}, props, {\n    style: {\n      margin: '5px'\n    },\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 62,\n      columnNumber: 5\n    }\n  }), /*#__PURE__*/React.createElement(FontIcon, {\n    size: 10,\n    color: \"black\",\n    variant: \"triangle-down\",\n    hoverColor: \"black\",\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 63,\n      columnNumber: 7\n    }\n  }));\n};","map":{"version":3,"sources":["/Users/farhanansari/Code/ui-library/src/components/organisms/AdvancedFilter/components/AdvFiterDropdown/index.tsx"],"names":["React","useMemo","Select","components","FontIcon","CustomStyles","StyledSelectWrapper","AdvFiterDropdown","options","value","onChange","limitOptionsList","resultLimit","i","useState","input","setInput","onInputChangeWrapper","newValue","optionsMemo","filter","dropdownOption","label","toLowerCase","indexOf","toString","IndicatorSeparator","ClearIndicator","DropdownIndicator","DownArrowIndicator","Option","props","data","e","margin"],"mappings":";;;;;AAAA,OAAOA,KAAP,IAAgBC,OAAhB,QAA+B,OAA/B;AACA,OAAOC,MAAP,IAAiBC,UAAjB,QAAmC,cAAnC;AACA,OAAOC,QAAP,MAAqB,4BAArB;AACA,SAASC,YAAT,EAAuBC,mBAAvB,QAAkD,UAAlD;;AAEA,IAAMC,gBAAgB,GAAG,SAAnBA,gBAAmB,OAA6D;AAAA,MAA1DC,OAA0D,QAA1DA,OAA0D;AAAA,MAAjDC,KAAiD,QAAjDA,KAAiD;AAAA,MAA1CC,SAA0C,QAA1CA,QAA0C;AAAA,mCAAjCC,gBAAiC;AAAA,MAAjCA,gBAAiC,sCAAd,EAAc;AACpF;AACA,MAAMC,WAAW,GAAGD,gBAApB;AACA,MAAIE,CAAC,GAAG,CAAR;;AAHoF,wBAI1Db,KAAK,CAACc,QAAN,EAJ0D;AAAA;AAAA,MAI7EC,KAJ6E;AAAA,MAItEC,QAJsE;;AAMpF,MAAMC,oBAAoB,GAAG,SAAvBA,oBAAuB,CAACC,QAAD,EAAqB;AAChDF,IAAAA,QAAQ,CAACE,QAAD,CAAR;AACD,GAFD;;AAIA,MAAMC,WAAW,GAAGlB,OAAO,CAAC,YAAM;AAChC,WAAOO,OAAP,aAAOA,OAAP,uBAAOA,OAAO,CAAEY,MAAT,CAAgB,UAACC,cAAD,EAAoC;AACzD,UAAG,OAAON,KAAP,KAAgB,QAAhB,IAA4BA,KAA/B,EAAqC;AAAA;;AACnC,eAAO,CAAAM,cAAc,SAAd,IAAAA,cAAc,WAAd,qCAAAA,cAAc,CAAEC,KAAhB,gFAAuBC,WAAvB,GAAqCC,OAArC,CAA6CT,KAA7C,aAA6CA,KAA7C,0CAA6CA,KAAK,CAAEU,QAAP,EAA7C,oDAA6C,gBAAmBF,WAAnB,EAA7C,MAAkF,CAAlF,IAAuFV,CAAC,KAAKD,WAApG;AACD,OAFD,MAEM,IAAGG,KAAH,EAAS;AAAA;;AACb,eAAO,CAAAM,cAAc,SAAd,IAAAA,cAAc,WAAd,sCAAAA,cAAc,CAAEC,KAAhB,kFAAuBC,WAAvB,GAAqCC,OAArC,CAA6CT,KAA7C,aAA6CA,KAA7C,uBAA6CA,KAAK,CAAEQ,WAAP,EAA7C,MAAsE,CAAtE,IAA2EV,CAAC,KAAKD,WAAxF;AACD,OAFK,MAED;AACH,eAAOC,CAAC,KAAKD,WAAb;AACD;AAEF,KATM,CAAP;AAUD,GAX0B,EAWxB,CAACG,KAAD,EAAOP,OAAP,CAXwB,CAA3B;AAYA,sBACE,oBAAC,mBAAD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,kBACE,oBAAC,MAAD;AACE,IAAA,SAAS,EAAC,cADZ;AAEE,IAAA,eAAe,EAAC,cAFlB,CAGE;AAHF;AAIE,IAAA,KAAK,EAAEC,KAJT;AAKE,IAAA,aAAa,EAAEQ,oBALjB;AAME,IAAA,YAAY,MANd;AAOE,IAAA,IAAI,EAAC,OAPP;AAQE,IAAA,UAAU,EAAE;AACVS,MAAAA,kBAAkB,EAAE;AAAA,eAAM,IAAN;AAAA,OADV;AAEVC,MAAAA,cAAc,EAAE;AAAA,eAAM,IAAN;AAAA,OAFN;AAGVC,MAAAA,iBAAiB,EAAEC,kBAHT;AAIVC,MAAAA,MAAM,EAAE,gBAACC,KAAD;AAAA,4BACN;AAAK,UAAA,KAAK,EAAEA,KAAK,CAACC,IAAN,CAAWV,KAAvB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,wBACE,oBAAC,UAAD,CAAY,MAAZ,oBAAuBS,KAAvB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,WADF,CADM;AAAA;AAJE,KARd;AAkBE,IAAA,OAAO,EAAEZ,WAlBX;AAmBE,IAAA,QAAQ,EAAE,kBAACc,CAAD,EAAK;AAAEpB,MAAAA,CAAC,GAAG,CAAJ;;AAAMH,MAAAA,SAAQ,CAACuB,CAAD,CAAR;AAAY,KAnBrC;AAoBE,IAAA,MAAM,EAAE5B,YAAY,EApBtB;AAqBE,IAAA,QAAQ,EAAC,IArBX;AAsBE,IAAA,aAAa,EAAC,MAtBhB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,IADF,CADF;AA6BD,CAnDD;;AAoDA,eAAeE,gBAAf;;AAEA,IAAMsB,kBAAkB,GAAG,SAArBA,kBAAqB,CAACE,KAAD,EAAgB;AACzC,sBACE,oBAAC,UAAD,CAAY,iBAAZ,oBAAkCA,KAAlC;AAAyC,IAAA,KAAK,EAAE;AAAEG,MAAAA,MAAM,EAAE;AAAV,KAAhD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,mBACE,oBAAC,QAAD;AACE,IAAA,IAAI,EAAE,EADR;AAEE,IAAA,KAAK,EAAC,OAFR;AAGE,IAAA,OAAO,EAAC,eAHV;AAIE,IAAA,UAAU,EAAC,OAJb;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,IADF,CADF;AAUD,CAXD","sourcesContent":["import React, { useMemo } from 'react'\nimport Select, { components } from 'react-select'\nimport FontIcon from '../../../../atoms/FontIcon'\nimport { CustomStyles, StyledSelectWrapper } from './styled'\n\nconst AdvFiterDropdown = ({ options, value, onChange,limitOptionsList = 25 }: any) => {\n  // console.log(value)\n  const resultLimit = limitOptionsList;\n  let i = 0\n  const [input, setInput] = React.useState<any>();\n\n  const onInputChangeWrapper = (newValue: string) =>{\n    setInput(newValue);\n  }\n  \n  const optionsMemo = useMemo(() => {\n    return options?.filter((dropdownOption: { label: any }) => {\n      if(typeof input ==='number' && input){\n        return dropdownOption?.label?.toLowerCase().indexOf(input?.toString()?.toLowerCase()) >= 0 && i++ < resultLimit;\n      }else if(input){\n        return dropdownOption?.label?.toLowerCase().indexOf(input?.toLowerCase()) >= 0 && i++ < resultLimit;\n      }else{\n        return i++ < resultLimit;\n      }\n      \n    });\n  }, [input,options])\n  return (\n    <StyledSelectWrapper>\n      <Select\n        className='basic-single'\n        classNamePrefix='react-select'\n        // defaultValue={value}\n        value={value}\n        onInputChange={onInputChangeWrapper}\n        isSearchable\n        name='color'\n        components={{\n          IndicatorSeparator: () => null,\n          ClearIndicator: () => null,\n          DropdownIndicator: DownArrowIndicator,\n          Option: (props) => (\n            <div title={props.data.label}>\n              <components.Option {...props} />\n            </div>\n          )\n        }}\n        options={optionsMemo}\n        onChange={(e)=>{ i = 0;onChange(e)}}\n        styles={CustomStyles()}\n        valueKey='id'\n        menuPlacement='auto'\n       \n      />\n    </StyledSelectWrapper>\n  )\n}\nexport default AdvFiterDropdown\n\nconst DownArrowIndicator = (props: any) => {\n  return (\n    <components.DropdownIndicator {...props} style={{ margin: '5px' }}>\n      <FontIcon\n        size={10}\n        color='black'\n        variant='triangle-down'\n        hoverColor='black'\n      />\n    </components.DropdownIndicator>\n  )\n}\n"]},"metadata":{},"sourceType":"module"}