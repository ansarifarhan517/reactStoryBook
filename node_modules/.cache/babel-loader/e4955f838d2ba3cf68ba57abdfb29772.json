{"ast":null,"code":"import _slicedToArray from \"/Users/farhanansari/Desktop/CODE/PrxProject/untitled folder/reactStoryBook/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/slicedToArray\";\nimport _objectWithoutProperties from \"/Users/farhanansari/Desktop/CODE/PrxProject/untitled folder/reactStoryBook/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/objectWithoutProperties\";\n\nvar _this = this,\n    _jsxFileName = \"/Users/farhanansari/Desktop/CODE/PrxProject/untitled folder/reactStoryBook/src/components/atoms/Checkbox/index.tsx\";\n\nimport React from 'react';\nimport { CheckboxContainer, CheckBoxLabel, CheckBoxWrapper, HiddenCheckbox, Icon, StyledCheckbox } from './Checkbox.styled';\nvar checkboxSizeMapping = {\n  sm: 13,\n  md: 15,\n  lg: 18\n};\nvar Checkbox = React.forwardRef(function (_ref, ref) {\n  var id = _ref.id,\n      _ref$disabled = _ref.disabled,\n      disabled = _ref$disabled === void 0 ? false : _ref$disabled,\n      _ref$checkboxSize = _ref.checkboxSize,\n      checkboxSize = _ref$checkboxSize === void 0 ? 'sm' : _ref$checkboxSize,\n      _ref$checked = _ref.checked,\n      checked = _ref$checked === void 0 ? false : _ref$checked,\n      _ref$label = _ref.label,\n      label = _ref$label === void 0 ? '' : _ref$label,\n      labelColor = _ref.labelColor,\n      labelComponent = _ref.labelComponent,\n      color = _ref.color,\n      _ref$disabledVariant = _ref.disabledVariant,\n      disabledVariant = _ref$disabledVariant === void 0 ? 'transparent' : _ref$disabledVariant,\n      _ref$onChange = _ref.onChange,\n      _onChange = _ref$onChange === void 0 ? function () {} : _ref$onChange,\n      customStyle = _ref.customStyle,\n      rest = _objectWithoutProperties(_ref, [\"id\", \"disabled\", \"checkboxSize\", \"checked\", \"label\", \"labelColor\", \"labelComponent\", \"color\", \"disabledVariant\", \"onChange\", \"customStyle\"]);\n\n  var _React$useState = React.useState(checked),\n      _React$useState2 = _slicedToArray(_React$useState, 2),\n      isChecked = _React$useState2[0],\n      setIsChecked = _React$useState2[1];\n\n  React.useEffect(function () {\n    setIsChecked(checked);\n  }, [checked]);\n  return /*#__PURE__*/React.createElement(CheckBoxWrapper, {\n    id: id + '-CheckboxWrapper',\n    disabled: disabled,\n    disabledVariant: disabledVariant,\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 53,\n      columnNumber: 7\n    }\n  }, /*#__PURE__*/React.createElement(CheckboxContainer, {\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 58,\n      columnNumber: 9\n    }\n  }, /*#__PURE__*/React.createElement(StyledCheckbox, {\n    id: id + '-StyledCheckbox',\n    disabled: disabled,\n    checkboxSize: checkboxSize && typeof checkboxSize === 'number' ? checkboxSize : checkboxSizeMapping[checkboxSize],\n    checked: isChecked,\n    color: color,\n    disabledVariant: disabledVariant,\n    customStyle: customStyle,\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 59,\n      columnNumber: 11\n    }\n  }, /*#__PURE__*/React.createElement(HiddenCheckbox, Object.assign({\n    type: \"checkbox\",\n    id: id,\n    disabled: disabled,\n    checked: checked,\n    onChange: function onChange(e) {\n      setIsChecked(function (c) {\n        return !c;\n      });\n\n      _onChange(e);\n    },\n    checkboxSize: checkboxSize && typeof checkboxSize === 'number' ? checkboxSize : checkboxSizeMapping[checkboxSize],\n    ref: ref\n  }, rest, {\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 72,\n      columnNumber: 13\n    }\n  })), /*#__PURE__*/React.createElement(Icon, {\n    viewBox: \"0 0 24 24\",\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 89,\n      columnNumber: 13\n    }\n  }, /*#__PURE__*/React.createElement(\"polyline\", {\n    points: \"20 6 9 17 4 12\",\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 90,\n      columnNumber: 15\n    }\n  })))), labelComponent || label && /*#__PURE__*/React.createElement(CheckBoxLabel, {\n    color: labelColor,\n    htmlFor: id,\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 96,\n      columnNumber: 13\n    }\n  }, label));\n});\nCheckbox.__docgenInfo = {\n  \"description\": \"\",\n  \"methods\": [],\n  \"displayName\": \"Checkbox\",\n  \"props\": {\n    \"disabled\": {\n      \"defaultValue\": {\n        \"value\": \"false\",\n        \"computed\": false\n      },\n      \"required\": false\n    },\n    \"checkboxSize\": {\n      \"defaultValue\": {\n        \"value\": \"'sm'\",\n        \"computed\": false\n      },\n      \"required\": false\n    },\n    \"checked\": {\n      \"defaultValue\": {\n        \"value\": \"false\",\n        \"computed\": false\n      },\n      \"required\": false\n    },\n    \"label\": {\n      \"defaultValue\": {\n        \"value\": \"''\",\n        \"computed\": false\n      },\n      \"required\": false\n    },\n    \"disabledVariant\": {\n      \"defaultValue\": {\n        \"value\": \"'transparent'\",\n        \"computed\": false\n      },\n      \"required\": false\n    },\n    \"onChange\": {\n      \"defaultValue\": {\n        \"value\": \"() => {}\",\n        \"computed\": false\n      },\n      \"required\": false\n    }\n  }\n};\nexport default Checkbox;\n\nif (typeof STORYBOOK_REACT_CLASSES !== \"undefined\") {\n  STORYBOOK_REACT_CLASSES[\"src/components/atoms/Checkbox/index.tsx\"] = {\n    name: \"Checkbox\",\n    docgenInfo: Checkbox.__docgenInfo,\n    path: \"src/components/atoms/Checkbox/index.tsx\"\n  };\n}","map":{"version":3,"sources":["/Users/farhanansari/Desktop/CODE/PrxProject/untitled folder/reactStoryBook/src/components/atoms/Checkbox/index.tsx"],"names":["React","CheckboxContainer","CheckBoxLabel","CheckBoxWrapper","HiddenCheckbox","Icon","StyledCheckbox","checkboxSizeMapping","sm","md","lg","Checkbox","forwardRef","ref","id","disabled","checkboxSize","checked","label","labelColor","labelComponent","color","disabledVariant","onChange","customStyle","rest","useState","isChecked","setIsChecked","useEffect","e","c"],"mappings":";;;;;;AAAA,OAAOA,KAAP,MAAkB,OAAlB;AACA,SACEC,iBADF,EAEEC,aAFF,EAGEC,eAHF,EAIEC,cAJF,EAKEC,IALF,EAMEC,cANF,QAOO,mBAPP;AASA,IAAMC,mBAAmB,GAAG;AAC1BC,EAAAA,EAAE,EAAE,EADsB;AAE1BC,EAAAA,EAAE,EAAE,EAFsB;AAG1BC,EAAAA,EAAE,EAAE;AAHsB,CAA5B;AAkBA,IAAMC,QAAQ,GAAGX,KAAK,CAACY,UAAN,CACf,gBAeEC,GAfF,EAgBK;AAAA,MAdDC,EAcC,QAdDA,EAcC;AAAA,2BAbDC,QAaC;AAAA,MAbDA,QAaC,8BAbU,KAaV;AAAA,+BAZDC,YAYC;AAAA,MAZDA,YAYC,kCAZc,IAYd;AAAA,0BAXDC,OAWC;AAAA,MAXDA,OAWC,6BAXS,KAWT;AAAA,wBAVDC,KAUC;AAAA,MAVDA,KAUC,2BAVO,EAUP;AAAA,MATDC,UASC,QATDA,UASC;AAAA,MARDC,cAQC,QARDA,cAQC;AAAA,MAPDC,KAOC,QAPDA,KAOC;AAAA,kCANDC,eAMC;AAAA,MANDA,eAMC,qCANiB,aAMjB;AAAA,2BALDC,QAKC;AAAA,MALDA,SAKC,8BALU,YAAM,CAAE,CAKlB;AAAA,MAJDC,WAIC,QAJDA,WAIC;AAAA,MAHEC,IAGF;;AAAA,wBAC+BzB,KAAK,CAAC0B,QAAN,CAAwBT,OAAxB,CAD/B;AAAA;AAAA,MACIU,SADJ;AAAA,MACeC,YADf;;AAGH5B,EAAAA,KAAK,CAAC6B,SAAN,CAAgB,YAAM;AACpBD,IAAAA,YAAY,CAACX,OAAD,CAAZ;AACD,GAFD,EAEG,CAACA,OAAD,CAFH;AAGA,sBACE,oBAAC,eAAD;AACE,IAAA,EAAE,EAAEH,EAAE,GAAG,kBADX;AAEE,IAAA,QAAQ,EAAEC,QAFZ;AAGE,IAAA,eAAe,EAAEO,eAHnB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,kBAKE,oBAAC,iBAAD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,kBACE,oBAAC,cAAD;AACE,IAAA,EAAE,EAAER,EAAE,GAAG,iBADX;AAEE,IAAA,QAAQ,EAAEC,QAFZ;AAGE,IAAA,YAAY,EACVC,YAAY,IAAI,OAAOA,YAAP,KAAwB,QAAxC,GACIA,YADJ,GAEIT,mBAAmB,CAACS,YAAD,CAN3B;AAQE,IAAA,OAAO,EAAEW,SARX;AASE,IAAA,KAAK,EAAEN,KATT;AAUE,IAAA,eAAe,EAAEC,eAVnB;AAWE,IAAA,WAAW,EAAEE,WAXf;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,kBAaE,oBAAC,cAAD;AACE,IAAA,IAAI,EAAC,UADP;AAEE,IAAA,EAAE,EAAEV,EAFN;AAGE,IAAA,QAAQ,EAAEC,QAHZ;AAIE,IAAA,OAAO,EAAEE,OAJX;AAKE,IAAA,QAAQ,EAAE,kBAACa,CAAD,EAA4C;AACpDF,MAAAA,YAAY,CAAC,UAACG,CAAD;AAAA,eAAO,CAACA,CAAR;AAAA,OAAD,CAAZ;;AACAR,MAAAA,SAAQ,CAACO,CAAD,CAAR;AACD,KARH;AASE,IAAA,YAAY,EACVd,YAAY,IAAI,OAAOA,YAAP,KAAwB,QAAxC,GACIA,YADJ,GAEIT,mBAAmB,CAACS,YAAD,CAZ3B;AAcE,IAAA,GAAG,EAAEH;AAdP,KAeMY,IAfN;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KAbF,eA8BE,oBAAC,IAAD;AAAM,IAAA,OAAO,EAAC,WAAd;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,kBACE;AAAU,IAAA,MAAM,EAAC,gBAAjB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,IADF,CA9BF,CADF,CALF,EAyCGL,cAAc,IACZF,KAAK,iBACJ,oBAAC,aAAD;AAAe,IAAA,KAAK,EAAEC,UAAtB;AAAkC,IAAA,OAAO,EAAEL,EAA3C;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KACGI,KADH,CA3CN,CADF;AAkDD,CAzEc,CAAjB;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;AA2EA,eAAeP,QAAf","sourcesContent":["import React from 'react'\nimport {\n  CheckboxContainer,\n  CheckBoxLabel,\n  CheckBoxWrapper,\n  HiddenCheckbox,\n  Icon,\n  StyledCheckbox\n} from './Checkbox.styled'\n\nconst checkboxSizeMapping = {\n  sm: 13,\n  md: 15,\n  lg: 18\n}\nexport type tCheckboxSize = 'sm' | 'md' | 'lg' | number\nexport interface ICheckboxProps\n  extends React.InputHTMLAttributes<HTMLInputElement> {\n  // extends React.DetailedHTMLProps< //   React.InputHTMLAttributes<HTMLInputElement>, //   HTMLInputElement // >\n  checkboxSize?: tCheckboxSize\n  label?: string\n  labelColor?: string\n  labelComponent?: React.ReactNode\n  color?: string\n  disabledVariant?: 'transparent' | 'greyed'\n  customStyle?: string\n}\n\nconst Checkbox = React.forwardRef<HTMLInputElement, ICheckboxProps>(\n  (\n    {\n      id,\n      disabled = false,\n      checkboxSize = 'sm',\n      checked = false,\n      label = '',\n      labelColor,\n      labelComponent,\n      color,\n      disabledVariant = 'transparent',\n      onChange = () => {},\n      customStyle,\n      ...rest\n    },\n    ref\n  ) => {\n    const [isChecked, setIsChecked] = React.useState<boolean>(checked)\n\n    React.useEffect(() => {\n      setIsChecked(checked)\n    }, [checked])\n    return (\n      <CheckBoxWrapper\n        id={id + '-CheckboxWrapper'}\n        disabled={disabled}\n        disabledVariant={disabledVariant}\n      >\n        <CheckboxContainer>\n          <StyledCheckbox\n            id={id + '-StyledCheckbox'}\n            disabled={disabled}\n            checkboxSize={\n              checkboxSize && typeof checkboxSize === 'number'\n                ? checkboxSize\n                : checkboxSizeMapping[checkboxSize]\n            }\n            checked={isChecked}\n            color={color}\n            disabledVariant={disabledVariant}\n            customStyle={customStyle}\n          >\n            <HiddenCheckbox\n              type='checkbox'\n              id={id}\n              disabled={disabled}\n              checked={checked}\n              onChange={(e: React.ChangeEvent<HTMLInputElement>) => {\n                setIsChecked((c) => !c)\n                onChange(e)\n              }}\n              checkboxSize={\n                checkboxSize && typeof checkboxSize === 'number'\n                  ? checkboxSize\n                  : checkboxSizeMapping[checkboxSize]\n              }\n              ref={ref}\n              {...rest}\n            />\n            <Icon viewBox='0 0 24 24'>\n              <polyline points='20 6 9 17 4 12' />\n            </Icon>\n          </StyledCheckbox>\n        </CheckboxContainer>\n        {labelComponent ||\n          (label && (\n            <CheckBoxLabel color={labelColor} htmlFor={id}>\n              {label}\n            </CheckBoxLabel>\n          ))}\n      </CheckBoxWrapper>\n    )\n  }\n)\nexport default Checkbox\n"]},"metadata":{},"sourceType":"module"}