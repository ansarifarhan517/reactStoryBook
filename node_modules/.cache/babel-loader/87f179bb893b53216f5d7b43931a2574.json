{"ast":null,"code":"import _defineProperty from \"/Users/farhanansari/Desktop/CODE/PrxProject/untitled folder/reactStoryBook/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/defineProperty\";\n\nvar _parameters;\n\n/* eslint-disable */\n// @ts-nocheck\n// @ts-ignore\nvar withSourceLoader = require('@storybook/source-loader/preview').withSource; // @ts-ignore\n\n\nvar addSourceDecorator = require(\"@storybook/source-loader/preview\").addSource; // @ts-ignore\n\n\nvar __SOURCE_PREFIX__ = \"/Users/farhanansari/Desktop/CODE/PrxProject/untitled folder/reactStoryBook/src/components/molecules/DateTimeSlotPicker\"; // @ts-ignore\n\nvar __STORY__ = \"\\n\\n// @ts-nocheck\\n// @ts-ignore\\nvar withSourceLoader = require('@storybook/source-loader/preview').withSource;\\n// @ts-ignore\\nvar addSourceDecorator = require(\\\"@storybook/source-loader/preview\\\").addSource;\\n// @ts-ignore\\nvar __SOURCE_PREFIX__ = \\\"/Users/farhanansari/Desktop/CODE/PrxProject/untitled folder/reactStoryBook/src/components/molecules/DateTimeSlotPicker\\\";\\n// @ts-ignore\\nvar __STORY__ = \\\"\\\\n\\\\n// @ts-nocheck\\\\n// @ts-ignore\\\\nvar withSourceLoader = require('@storybook/source-loader/preview').withSource;\\\\n// @ts-ignore\\\\nvar addSourceDecorator = require(\\\\\\\"@storybook/source-loader/preview\\\\\\\").addSource;\\\\n// @ts-ignore\\\\nvar __SOURCE_PREFIX__ = \\\\\\\"/Users/farhanansari/Desktop/CODE/PrxProject/untitled folder/reactStoryBook/src/components/molecules/DateTimeSlotPicker\\\\\\\";\\\\n// @ts-ignore\\\\nvar __STORY__ = \\\\\\\"import React from 'react'\\\\\\\\nimport { path } from '..'\\\\\\\\nimport DateTimeSlotPicker from '.'\\\\\\\\nimport { object, withKnobs, boolean } from '@storybook/addon-knobs'\\\\\\\\nimport ThemeWrapper from '../../../utilities/components/ThemeWrapper'\\\\\\\\nimport Data from './Data'\\\\\\\\nimport TextInput from '../TextInput'\\\\\\\\nimport { IDateTimeSlotPickerChildren } from './interfaces'\\\\\\\\nimport { action } from '@storybook/addon-actions'\\\\\\\\n\\\\\\\\nexport default {\\\\\\\\n  title: `${path}/DateTimeSlotPicker`,\\\\\\\\n  decorators: [withKnobs],\\\\\\\\n  component: DateTimeSlotPicker\\\\\\\\n}\\\\\\\\n\\\\\\\\nconst DropdownOption = [\\\\\\\\n  {\\\\\\\\n    id: 'units',\\\\\\\\n    label: 'Units',\\\\\\\\n    value: 'unit',\\\\\\\\n    availableSlotObjectKey: 'availableNumberOfItems',\\\\\\\\n    totalSlotObjectKey: 'totalNumberOfItems'\\\\\\\\n  },\\\\\\\\n  {\\\\\\\\n    id: 'weight',\\\\\\\\n    label: 'Weight',\\\\\\\\n    value: 'weight',\\\\\\\\n    availableSlotObjectKey: 'availableWeight',\\\\\\\\n    totalSlotObjectKey: 'totalWeight'\\\\\\\\n  },\\\\\\\\n  {\\\\\\\\n    id: 'volume',\\\\\\\\n    label: 'Volume',\\\\\\\\n    value: 'volume',\\\\\\\\n    availableSlotObjectKey: 'availableVolume',\\\\\\\\n    totalSlotObjectKey: 'totalVolume'\\\\\\\\n  },\\\\\\\\n  {\\\\\\\\n    id: 'stops',\\\\\\\\n    label: 'Stops',\\\\\\\\n    value: 'stop',\\\\\\\\n    availableSlotObjectKey: 'availableStops',\\\\\\\\n    totalSlotObjectKey: 'totalStops'\\\\\\\\n  }\\\\\\\\n]\\\\\\\\n\\\\\\\\nconst status = {\\\\\\\\n  available: {\\\\\\\\n    id: 'available',\\\\\\\\n    value: 'AVAILABLE',\\\\\\\\n    label: 'Suggested'\\\\\\\\n  },\\\\\\\\n  notAvailable: {\\\\\\\\n    id: 'notAvailable',\\\\\\\\n    value: 'FULL',\\\\\\\\n    label: 'Not Suggested'\\\\\\\\n  }\\\\\\\\n}\\\\\\\\n\\\\\\\\nexport const SlotPicker = () => {\\\\\\\\n  const todaysDate = new Date()\\\\\\\\n  return (\\\\\\\\n    <ThemeWrapper>\\\\\\\\n      <DateTimeSlotPicker\\\\\\\\n        title='Available Time Windows:'\\\\\\\\n        preferenceDropdownLabel='Prefrence By '\\\\\\\\n        isOpen={boolean('isOpen', false)}\\\\\\\\n        date={todaysDate}\\\\\\\\n        timeWindowPrefrenceDropdown={object(\\\\\\\\n          'timeWindowPrefrenceDropdown',\\\\\\\\n          DropdownOption\\\\\\\\n        )}\\\\\\\\n        status={object('status', status)}\\\\\\\\n        DateTimeSlots={object('DateTimeSlots', Data)}\\\\\\\\n        style={{\\\\\\\\n          position: 'absolute',\\\\\\\\n          top: 'auto',\\\\\\\\n          left: '0px'\\\\\\\\n        }}\\\\\\\\n        onChange={action('On Change')}\\\\\\\\n      >\\\\\\\\n        {({ value, open, setOpen }: IDateTimeSlotPickerChildren) => (\\\\\\\\n          <div\\\\\\\\n            onClick={() => {\\\\\\\\n              console.log(open)\\\\\\\\n              setOpen(!open)\\\\\\\\n            }}\\\\\\\\n          >\\\\\\\\n            <TextInput\\\\\\\\n              id='someId'\\\\\\\\n              name='someName'\\\\\\\\n              className='someClassname'\\\\\\\\n              placeholder='Please Click Here'\\\\\\\\n              variant='withIcon'\\\\\\\\n              iconVariant='calendar'\\\\\\\\n              iconSize='md'\\\\\\\\n              value={`${value ? value?.startTimeWindow : ''} - ${\\\\\\\\n                value ? value?.endTimeWindow : ''\\\\\\\\n              }`}\\\\\\\\n              readOnly\\\\\\\\n              iconStyle={{ padding: '9px 9px 9px 9px' }}\\\\\\\\n            />\\\\\\\\n          </div>\\\\\\\\n        )}\\\\\\\\n      </DateTimeSlotPicker>\\\\\\\\n    </ThemeWrapper>\\\\\\\\n  )\\\\\\\\n}\\\\\\\\n\\\\\\\";\\\\n// @ts-ignore\\\\nvar __ADDS_MAP__ = {};\\\\n// @ts-ignore\\\\nvar __MAIN_FILE_LOCATION__ = \\\\\\\"/DateTimeSlotPicker.stories.tsx\\\\\\\";\\\\n// @ts-ignore\\\\nvar __MODULE_DEPENDENCIES__ = [];\\\\n// @ts-ignore\\\\nvar __LOCAL_DEPENDENCIES__ = {};\\\\n// @ts-ignore\\\\nvar __IDS_TO_FRAMEWORKS__ = {};\\\\n        \\\\nimport React from 'react'\\\\nimport { path } from '..'\\\\nimport DateTimeSlotPicker from '.'\\\\nimport { object, withKnobs, boolean } from '@storybook/addon-knobs'\\\\nimport ThemeWrapper from '../../../utilities/components/ThemeWrapper'\\\\nimport Data from './Data'\\\\nimport TextInput from '../TextInput'\\\\nimport { IDateTimeSlotPickerChildren } from './interfaces'\\\\nimport { action } from '@storybook/addon-actions'\\\\n\\\\nexport default {parameters: {\\\\\\\"storySource\\\\\\\":{\\\\\\\"source\\\\\\\":\\\\\\\"import React from 'react'\\\\\\\\nimport { path } from '..'\\\\\\\\nimport DateTimeSlotPicker from '.'\\\\\\\\nimport { object, withKnobs, boolean } from '@storybook/addon-knobs'\\\\\\\\nimport ThemeWrapper from '../../../utilities/components/ThemeWrapper'\\\\\\\\nimport Data from './Data'\\\\\\\\nimport TextInput from '../TextInput'\\\\\\\\nimport { IDateTimeSlotPickerChildren } from './interfaces'\\\\\\\\nimport { action } from '@storybook/addon-actions'\\\\\\\\n\\\\\\\\nexport default {\\\\\\\\n  title: `${path}/DateTimeSlotPicker`,\\\\\\\\n  decorators: [withKnobs],\\\\\\\\n  component: DateTimeSlotPicker\\\\\\\\n}\\\\\\\\n\\\\\\\\nconst DropdownOption = [\\\\\\\\n  {\\\\\\\\n    id: 'units',\\\\\\\\n    label: 'Units',\\\\\\\\n    value: 'unit',\\\\\\\\n    availableSlotObjectKey: 'availableNumberOfItems',\\\\\\\\n    totalSlotObjectKey: 'totalNumberOfItems'\\\\\\\\n  },\\\\\\\\n  {\\\\\\\\n    id: 'weight',\\\\\\\\n    label: 'Weight',\\\\\\\\n    value: 'weight',\\\\\\\\n    availableSlotObjectKey: 'availableWeight',\\\\\\\\n    totalSlotObjectKey: 'totalWeight'\\\\\\\\n  },\\\\\\\\n  {\\\\\\\\n    id: 'volume',\\\\\\\\n    label: 'Volume',\\\\\\\\n    value: 'volume',\\\\\\\\n    availableSlotObjectKey: 'availableVolume',\\\\\\\\n    totalSlotObjectKey: 'totalVolume'\\\\\\\\n  },\\\\\\\\n  {\\\\\\\\n    id: 'stops',\\\\\\\\n    label: 'Stops',\\\\\\\\n    value: 'stop',\\\\\\\\n    availableSlotObjectKey: 'availableStops',\\\\\\\\n    totalSlotObjectKey: 'totalStops'\\\\\\\\n  }\\\\\\\\n]\\\\\\\\n\\\\\\\\nconst status = {\\\\\\\\n  available: {\\\\\\\\n    id: 'available',\\\\\\\\n    value: 'AVAILABLE',\\\\\\\\n    label: 'Suggested'\\\\\\\\n  },\\\\\\\\n  notAvailable: {\\\\\\\\n    id: 'notAvailable',\\\\\\\\n    value: 'FULL',\\\\\\\\n    label: 'Not Suggested'\\\\\\\\n  }\\\\\\\\n}\\\\\\\\n\\\\\\\\nexport const SlotPicker = () => {\\\\\\\\n  const todaysDate = new Date()\\\\\\\\n  return (\\\\\\\\n    <ThemeWrapper>\\\\\\\\n      <DateTimeSlotPicker\\\\\\\\n        title='Available Time Windows:'\\\\\\\\n        preferenceDropdownLabel='Prefrence By '\\\\\\\\n        isOpen={boolean('isOpen', false)}\\\\\\\\n        date={todaysDate}\\\\\\\\n        timeWindowPrefrenceDropdown={object(\\\\\\\\n          'timeWindowPrefrenceDropdown',\\\\\\\\n          DropdownOption\\\\\\\\n        )}\\\\\\\\n        status={object('status', status)}\\\\\\\\n        DateTimeSlots={object('DateTimeSlots', Data)}\\\\\\\\n        style={{\\\\\\\\n          position: 'absolute',\\\\\\\\n          top: 'auto',\\\\\\\\n          left: '0px'\\\\\\\\n        }}\\\\\\\\n        onChange={action('On Change')}\\\\\\\\n      >\\\\\\\\n        {({ value, open, setOpen }: IDateTimeSlotPickerChildren) => (\\\\\\\\n          <div\\\\\\\\n            onClick={() => {\\\\\\\\n              console.log(open)\\\\\\\\n              setOpen(!open)\\\\\\\\n            }}\\\\\\\\n          >\\\\\\\\n            <TextInput\\\\\\\\n              id='someId'\\\\\\\\n              name='someName'\\\\\\\\n              className='someClassname'\\\\\\\\n              placeholder='Please Click Here'\\\\\\\\n              variant='withIcon'\\\\\\\\n              iconVariant='calendar'\\\\\\\\n              iconSize='md'\\\\\\\\n              value={`${value ? value?.startTimeWindow : ''} - ${\\\\\\\\n                value ? value?.endTimeWindow : ''\\\\\\\\n              }`}\\\\\\\\n              readOnly\\\\\\\\n              iconStyle={{ padding: '9px 9px 9px 9px' }}\\\\\\\\n            />\\\\\\\\n          </div>\\\\\\\\n        )}\\\\\\\\n      </DateTimeSlotPicker>\\\\\\\\n    </ThemeWrapper>\\\\\\\\n  )\\\\\\\\n}\\\\\\\\n\\\\\\\",\\\\\\\"locationsMap\\\\\\\":{}},},\\\\n  title: `${path}/DateTimeSlotPicker`,\\\\n  decorators: [withKnobs],\\\\n  component: DateTimeSlotPicker\\\\n}\\\\n\\\\nconst DropdownOption = [\\\\n  {\\\\n    id: 'units',\\\\n    label: 'Units',\\\\n    value: 'unit',\\\\n    availableSlotObjectKey: 'availableNumberOfItems',\\\\n    totalSlotObjectKey: 'totalNumberOfItems'\\\\n  },\\\\n  {\\\\n    id: 'weight',\\\\n    label: 'Weight',\\\\n    value: 'weight',\\\\n    availableSlotObjectKey: 'availableWeight',\\\\n    totalSlotObjectKey: 'totalWeight'\\\\n  },\\\\n  {\\\\n    id: 'volume',\\\\n    label: 'Volume',\\\\n    value: 'volume',\\\\n    availableSlotObjectKey: 'availableVolume',\\\\n    totalSlotObjectKey: 'totalVolume'\\\\n  },\\\\n  {\\\\n    id: 'stops',\\\\n    label: 'Stops',\\\\n    value: 'stop',\\\\n    availableSlotObjectKey: 'availableStops',\\\\n    totalSlotObjectKey: 'totalStops'\\\\n  }\\\\n]\\\\n\\\\nconst status = {\\\\n  available: {\\\\n    id: 'available',\\\\n    value: 'AVAILABLE',\\\\n    label: 'Suggested'\\\\n  },\\\\n  notAvailable: {\\\\n    id: 'notAvailable',\\\\n    value: 'FULL',\\\\n    label: 'Not Suggested'\\\\n  }\\\\n}\\\\n\\\\nexport const SlotPicker = addSourceDecorator(() => {\\\\n  const todaysDate = new Date()\\\\n  return (\\\\n    <ThemeWrapper>\\\\n      <DateTimeSlotPicker\\\\n        title='Available Time Windows:'\\\\n        preferenceDropdownLabel='Prefrence By '\\\\n        isOpen={boolean('isOpen', false)}\\\\n        date={todaysDate}\\\\n        timeWindowPrefrenceDropdown={object(\\\\n          'timeWindowPrefrenceDropdown',\\\\n          DropdownOption\\\\n        )}\\\\n        status={object('status', status)}\\\\n        DateTimeSlots={object('DateTimeSlots', Data)}\\\\n        style={{\\\\n          position: 'absolute',\\\\n          top: 'auto',\\\\n          left: '0px'\\\\n        }}\\\\n        onChange={action('On Change')}\\\\n      >\\\\n        {({ value, open, setOpen }: IDateTimeSlotPickerChildren) => (\\\\n          <div\\\\n            onClick={() => {\\\\n              console.log(open)\\\\n              setOpen(!open)\\\\n            }}\\\\n          >\\\\n            <TextInput\\\\n              id='someId'\\\\n              name='someName'\\\\n              className='someClassname'\\\\n              placeholder='Please Click Here'\\\\n              variant='withIcon'\\\\n              iconVariant='calendar'\\\\n              iconSize='md'\\\\n              value={`${value ? value?.startTimeWindow : ''} - ${\\\\n                value ? value?.endTimeWindow : ''\\\\n              }`}\\\\n              readOnly\\\\n              iconStyle={{ padding: '9px 9px 9px 9px' }}\\\\n            />\\\\n          </div>\\\\n        )}\\\\n      </DateTimeSlotPicker>\\\\n    </ThemeWrapper>\\\\n  )\\\\n}, {__STORY__, __ADDS_MAP__,__MAIN_FILE_LOCATION__,__MODULE_DEPENDENCIES__,__LOCAL_DEPENDENCIES__,__SOURCE_PREFIX__,__IDS_TO_FRAMEWORKS__});\\\";\\n// @ts-ignore\\nvar __ADDS_MAP__ = {};\\n// @ts-ignore\\nvar __MAIN_FILE_LOCATION__ = \\\"/DateTimeSlotPicker.stories.tsx\\\";\\n// @ts-ignore\\nvar __MODULE_DEPENDENCIES__ = [];\\n// @ts-ignore\\nvar __LOCAL_DEPENDENCIES__ = {};\\n// @ts-ignore\\nvar __IDS_TO_FRAMEWORKS__ = {};\\n        \\n\\n\\n// @ts-nocheck\\n// @ts-ignore\\nvar withSourceLoader = require('@storybook/source-loader/preview').withSource;\\n// @ts-ignore\\nvar addSourceDecorator = require(\\\"@storybook/source-loader/preview\\\").addSource;\\n// @ts-ignore\\nvar __SOURCE_PREFIX__ = \\\"/Users/farhanansari/Desktop/CODE/PrxProject/untitled folder/reactStoryBook/src/components/molecules/DateTimeSlotPicker\\\";\\n// @ts-ignore\\nvar __STORY__ = \\\"import React from 'react'\\\\nimport { path } from '..'\\\\nimport DateTimeSlotPicker from '.'\\\\nimport { object, withKnobs, boolean } from '@storybook/addon-knobs'\\\\nimport ThemeWrapper from '../../../utilities/components/ThemeWrapper'\\\\nimport Data from './Data'\\\\nimport TextInput from '../TextInput'\\\\nimport { IDateTimeSlotPickerChildren } from './interfaces'\\\\nimport { action } from '@storybook/addon-actions'\\\\n\\\\nexport default {\\\\n  title: `${path}/DateTimeSlotPicker`,\\\\n  decorators: [withKnobs],\\\\n  component: DateTimeSlotPicker\\\\n}\\\\n\\\\nconst DropdownOption = [\\\\n  {\\\\n    id: 'units',\\\\n    label: 'Units',\\\\n    value: 'unit',\\\\n    availableSlotObjectKey: 'availableNumberOfItems',\\\\n    totalSlotObjectKey: 'totalNumberOfItems'\\\\n  },\\\\n  {\\\\n    id: 'weight',\\\\n    label: 'Weight',\\\\n    value: 'weight',\\\\n    availableSlotObjectKey: 'availableWeight',\\\\n    totalSlotObjectKey: 'totalWeight'\\\\n  },\\\\n  {\\\\n    id: 'volume',\\\\n    label: 'Volume',\\\\n    value: 'volume',\\\\n    availableSlotObjectKey: 'availableVolume',\\\\n    totalSlotObjectKey: 'totalVolume'\\\\n  },\\\\n  {\\\\n    id: 'stops',\\\\n    label: 'Stops',\\\\n    value: 'stop',\\\\n    availableSlotObjectKey: 'availableStops',\\\\n    totalSlotObjectKey: 'totalStops'\\\\n  }\\\\n]\\\\n\\\\nconst status = {\\\\n  available: {\\\\n    id: 'available',\\\\n    value: 'AVAILABLE',\\\\n    label: 'Suggested'\\\\n  },\\\\n  notAvailable: {\\\\n    id: 'notAvailable',\\\\n    value: 'FULL',\\\\n    label: 'Not Suggested'\\\\n  }\\\\n}\\\\n\\\\nexport const SlotPicker = () => {\\\\n  const todaysDate = new Date()\\\\n  return (\\\\n    <ThemeWrapper>\\\\n      <DateTimeSlotPicker\\\\n        title='Available Time Windows:'\\\\n        preferenceDropdownLabel='Prefrence By '\\\\n        isOpen={boolean('isOpen', false)}\\\\n        date={todaysDate}\\\\n        timeWindowPrefrenceDropdown={object(\\\\n          'timeWindowPrefrenceDropdown',\\\\n          DropdownOption\\\\n        )}\\\\n        status={object('status', status)}\\\\n        DateTimeSlots={object('DateTimeSlots', Data)}\\\\n        style={{\\\\n          position: 'absolute',\\\\n          top: 'auto',\\\\n          left: '0px'\\\\n        }}\\\\n        onChange={action('On Change')}\\\\n      >\\\\n        {({ value, open, setOpen }: IDateTimeSlotPickerChildren) => (\\\\n          <div\\\\n            onClick={() => {\\\\n              console.log(open)\\\\n              setOpen(!open)\\\\n            }}\\\\n          >\\\\n            <TextInput\\\\n              id='someId'\\\\n              name='someName'\\\\n              className='someClassname'\\\\n              placeholder='Please Click Here'\\\\n              variant='withIcon'\\\\n              iconVariant='calendar'\\\\n              iconSize='md'\\\\n              value={`${value ? value?.startTimeWindow : ''} - ${\\\\n                value ? value?.endTimeWindow : ''\\\\n              }`}\\\\n              readOnly\\\\n              iconStyle={{ padding: '9px 9px 9px 9px' }}\\\\n            />\\\\n          </div>\\\\n        )}\\\\n      </DateTimeSlotPicker>\\\\n    </ThemeWrapper>\\\\n  )\\\\n}\\\\n\\\";\\n// @ts-ignore\\nvar __ADDS_MAP__ = {};\\n// @ts-ignore\\nvar __MAIN_FILE_LOCATION__ = \\\"/DateTimeSlotPicker.stories.tsx\\\";\\n// @ts-ignore\\nvar __MODULE_DEPENDENCIES__ = [];\\n// @ts-ignore\\nvar __LOCAL_DEPENDENCIES__ = {};\\n// @ts-ignore\\nvar __IDS_TO_FRAMEWORKS__ = {};\\n        \\nimport React from 'react'\\nimport { path } from '..'\\nimport DateTimeSlotPicker from '.'\\nimport { object, withKnobs, boolean } from '@storybook/addon-knobs'\\nimport ThemeWrapper from '../../../utilities/components/ThemeWrapper'\\nimport Data from './Data'\\nimport TextInput from '../TextInput'\\nimport { IDateTimeSlotPickerChildren } from './interfaces'\\nimport { action } from '@storybook/addon-actions'\\n\\nexport default {parameters: {\\\"storySource\\\":{\\\"source\\\":\\\"\\\\n\\\\n// @ts-nocheck\\\\n// @ts-ignore\\\\nvar withSourceLoader = require('@storybook/source-loader/preview').withSource;\\\\n// @ts-ignore\\\\nvar addSourceDecorator = require(\\\\\\\"@storybook/source-loader/preview\\\\\\\").addSource;\\\\n// @ts-ignore\\\\nvar __SOURCE_PREFIX__ = \\\\\\\"/Users/farhanansari/Desktop/CODE/PrxProject/untitled folder/reactStoryBook/src/components/molecules/DateTimeSlotPicker\\\\\\\";\\\\n// @ts-ignore\\\\nvar __STORY__ = \\\\\\\"import React from 'react'\\\\\\\\nimport { path } from '..'\\\\\\\\nimport DateTimeSlotPicker from '.'\\\\\\\\nimport { object, withKnobs, boolean } from '@storybook/addon-knobs'\\\\\\\\nimport ThemeWrapper from '../../../utilities/components/ThemeWrapper'\\\\\\\\nimport Data from './Data'\\\\\\\\nimport TextInput from '../TextInput'\\\\\\\\nimport { IDateTimeSlotPickerChildren } from './interfaces'\\\\\\\\nimport { action } from '@storybook/addon-actions'\\\\\\\\n\\\\\\\\nexport default {\\\\\\\\n  title: `${path}/DateTimeSlotPicker`,\\\\\\\\n  decorators: [withKnobs],\\\\\\\\n  component: DateTimeSlotPicker\\\\\\\\n}\\\\\\\\n\\\\\\\\nconst DropdownOption = [\\\\\\\\n  {\\\\\\\\n    id: 'units',\\\\\\\\n    label: 'Units',\\\\\\\\n    value: 'unit',\\\\\\\\n    availableSlotObjectKey: 'availableNumberOfItems',\\\\\\\\n    totalSlotObjectKey: 'totalNumberOfItems'\\\\\\\\n  },\\\\\\\\n  {\\\\\\\\n    id: 'weight',\\\\\\\\n    label: 'Weight',\\\\\\\\n    value: 'weight',\\\\\\\\n    availableSlotObjectKey: 'availableWeight',\\\\\\\\n    totalSlotObjectKey: 'totalWeight'\\\\\\\\n  },\\\\\\\\n  {\\\\\\\\n    id: 'volume',\\\\\\\\n    label: 'Volume',\\\\\\\\n    value: 'volume',\\\\\\\\n    availableSlotObjectKey: 'availableVolume',\\\\\\\\n    totalSlotObjectKey: 'totalVolume'\\\\\\\\n  },\\\\\\\\n  {\\\\\\\\n    id: 'stops',\\\\\\\\n    label: 'Stops',\\\\\\\\n    value: 'stop',\\\\\\\\n    availableSlotObjectKey: 'availableStops',\\\\\\\\n    totalSlotObjectKey: 'totalStops'\\\\\\\\n  }\\\\\\\\n]\\\\\\\\n\\\\\\\\nconst status = {\\\\\\\\n  available: {\\\\\\\\n    id: 'available',\\\\\\\\n    value: 'AVAILABLE',\\\\\\\\n    label: 'Suggested'\\\\\\\\n  },\\\\\\\\n  notAvailable: {\\\\\\\\n    id: 'notAvailable',\\\\\\\\n    value: 'FULL',\\\\\\\\n    label: 'Not Suggested'\\\\\\\\n  }\\\\\\\\n}\\\\\\\\n\\\\\\\\nexport const SlotPicker = () => {\\\\\\\\n  const todaysDate = new Date()\\\\\\\\n  return (\\\\\\\\n    <ThemeWrapper>\\\\\\\\n      <DateTimeSlotPicker\\\\\\\\n        title='Available Time Windows:'\\\\\\\\n        preferenceDropdownLabel='Prefrence By '\\\\\\\\n        isOpen={boolean('isOpen', false)}\\\\\\\\n        date={todaysDate}\\\\\\\\n        timeWindowPrefrenceDropdown={object(\\\\\\\\n          'timeWindowPrefrenceDropdown',\\\\\\\\n          DropdownOption\\\\\\\\n        )}\\\\\\\\n        status={object('status', status)}\\\\\\\\n        DateTimeSlots={object('DateTimeSlots', Data)}\\\\\\\\n        style={{\\\\\\\\n          position: 'absolute',\\\\\\\\n          top: 'auto',\\\\\\\\n          left: '0px'\\\\\\\\n        }}\\\\\\\\n        onChange={action('On Change')}\\\\\\\\n      >\\\\\\\\n        {({ value, open, setOpen }: IDateTimeSlotPickerChildren) => (\\\\\\\\n          <div\\\\\\\\n            onClick={() => {\\\\\\\\n              console.log(open)\\\\\\\\n              setOpen(!open)\\\\\\\\n            }}\\\\\\\\n          >\\\\\\\\n            <TextInput\\\\\\\\n              id='someId'\\\\\\\\n              name='someName'\\\\\\\\n              className='someClassname'\\\\\\\\n              placeholder='Please Click Here'\\\\\\\\n              variant='withIcon'\\\\\\\\n              iconVariant='calendar'\\\\\\\\n              iconSize='md'\\\\\\\\n              value={`${value ? value?.startTimeWindow : ''} - ${\\\\\\\\n                value ? value?.endTimeWindow : ''\\\\\\\\n              }`}\\\\\\\\n              readOnly\\\\\\\\n              iconStyle={{ padding: '9px 9px 9px 9px' }}\\\\\\\\n            />\\\\\\\\n          </div>\\\\\\\\n        )}\\\\\\\\n      </DateTimeSlotPicker>\\\\\\\\n    </ThemeWrapper>\\\\\\\\n  )\\\\\\\\n}\\\\\\\\n\\\\\\\";\\\\n// @ts-ignore\\\\nvar __ADDS_MAP__ = {};\\\\n// @ts-ignore\\\\nvar __MAIN_FILE_LOCATION__ = \\\\\\\"/DateTimeSlotPicker.stories.tsx\\\\\\\";\\\\n// @ts-ignore\\\\nvar __MODULE_DEPENDENCIES__ = [];\\\\n// @ts-ignore\\\\nvar __LOCAL_DEPENDENCIES__ = {};\\\\n// @ts-ignore\\\\nvar __IDS_TO_FRAMEWORKS__ = {};\\\\n        \\\\nimport React from 'react'\\\\nimport { path } from '..'\\\\nimport DateTimeSlotPicker from '.'\\\\nimport { object, withKnobs, boolean } from '@storybook/addon-knobs'\\\\nimport ThemeWrapper from '../../../utilities/components/ThemeWrapper'\\\\nimport Data from './Data'\\\\nimport TextInput from '../TextInput'\\\\nimport { IDateTimeSlotPickerChildren } from './interfaces'\\\\nimport { action } from '@storybook/addon-actions'\\\\n\\\\nexport default {parameters: {\\\\\\\"storySource\\\\\\\":{\\\\\\\"source\\\\\\\":\\\\\\\"import React from 'react'\\\\\\\\nimport { path } from '..'\\\\\\\\nimport DateTimeSlotPicker from '.'\\\\\\\\nimport { object, withKnobs, boolean } from '@storybook/addon-knobs'\\\\\\\\nimport ThemeWrapper from '../../../utilities/components/ThemeWrapper'\\\\\\\\nimport Data from './Data'\\\\\\\\nimport TextInput from '../TextInput'\\\\\\\\nimport { IDateTimeSlotPickerChildren } from './interfaces'\\\\\\\\nimport { action } from '@storybook/addon-actions'\\\\\\\\n\\\\\\\\nexport default {\\\\\\\\n  title: `${path}/DateTimeSlotPicker`,\\\\\\\\n  decorators: [withKnobs],\\\\\\\\n  component: DateTimeSlotPicker\\\\\\\\n}\\\\\\\\n\\\\\\\\nconst DropdownOption = [\\\\\\\\n  {\\\\\\\\n    id: 'units',\\\\\\\\n    label: 'Units',\\\\\\\\n    value: 'unit',\\\\\\\\n    availableSlotObjectKey: 'availableNumberOfItems',\\\\\\\\n    totalSlotObjectKey: 'totalNumberOfItems'\\\\\\\\n  },\\\\\\\\n  {\\\\\\\\n    id: 'weight',\\\\\\\\n    label: 'Weight',\\\\\\\\n    value: 'weight',\\\\\\\\n    availableSlotObjectKey: 'availableWeight',\\\\\\\\n    totalSlotObjectKey: 'totalWeight'\\\\\\\\n  },\\\\\\\\n  {\\\\\\\\n    id: 'volume',\\\\\\\\n    label: 'Volume',\\\\\\\\n    value: 'volume',\\\\\\\\n    availableSlotObjectKey: 'availableVolume',\\\\\\\\n    totalSlotObjectKey: 'totalVolume'\\\\\\\\n  },\\\\\\\\n  {\\\\\\\\n    id: 'stops',\\\\\\\\n    label: 'Stops',\\\\\\\\n    value: 'stop',\\\\\\\\n    availableSlotObjectKey: 'availableStops',\\\\\\\\n    totalSlotObjectKey: 'totalStops'\\\\\\\\n  }\\\\\\\\n]\\\\\\\\n\\\\\\\\nconst status = {\\\\\\\\n  available: {\\\\\\\\n    id: 'available',\\\\\\\\n    value: 'AVAILABLE',\\\\\\\\n    label: 'Suggested'\\\\\\\\n  },\\\\\\\\n  notAvailable: {\\\\\\\\n    id: 'notAvailable',\\\\\\\\n    value: 'FULL',\\\\\\\\n    label: 'Not Suggested'\\\\\\\\n  }\\\\\\\\n}\\\\\\\\n\\\\\\\\nexport const SlotPicker = () => {\\\\\\\\n  const todaysDate = new Date()\\\\\\\\n  return (\\\\\\\\n    <ThemeWrapper>\\\\\\\\n      <DateTimeSlotPicker\\\\\\\\n        title='Available Time Windows:'\\\\\\\\n        preferenceDropdownLabel='Prefrence By '\\\\\\\\n        isOpen={boolean('isOpen', false)}\\\\\\\\n        date={todaysDate}\\\\\\\\n        timeWindowPrefrenceDropdown={object(\\\\\\\\n          'timeWindowPrefrenceDropdown',\\\\\\\\n          DropdownOption\\\\\\\\n        )}\\\\\\\\n        status={object('status', status)}\\\\\\\\n        DateTimeSlots={object('DateTimeSlots', Data)}\\\\\\\\n        style={{\\\\\\\\n          position: 'absolute',\\\\\\\\n          top: 'auto',\\\\\\\\n          left: '0px'\\\\\\\\n        }}\\\\\\\\n        onChange={action('On Change')}\\\\\\\\n      >\\\\\\\\n        {({ value, open, setOpen }: IDateTimeSlotPickerChildren) => (\\\\\\\\n          <div\\\\\\\\n            onClick={() => {\\\\\\\\n              console.log(open)\\\\\\\\n              setOpen(!open)\\\\\\\\n            }}\\\\\\\\n          >\\\\\\\\n            <TextInput\\\\\\\\n              id='someId'\\\\\\\\n              name='someName'\\\\\\\\n              className='someClassname'\\\\\\\\n              placeholder='Please Click Here'\\\\\\\\n              variant='withIcon'\\\\\\\\n              iconVariant='calendar'\\\\\\\\n              iconSize='md'\\\\\\\\n              value={`${value ? value?.startTimeWindow : ''} - ${\\\\\\\\n                value ? value?.endTimeWindow : ''\\\\\\\\n              }`}\\\\\\\\n              readOnly\\\\\\\\n              iconStyle={{ padding: '9px 9px 9px 9px' }}\\\\\\\\n            />\\\\\\\\n          </div>\\\\\\\\n        )}\\\\\\\\n      </DateTimeSlotPicker>\\\\\\\\n    </ThemeWrapper>\\\\\\\\n  )\\\\\\\\n}\\\\\\\\n\\\\\\\",\\\\\\\"locationsMap\\\\\\\":{}},},\\\\n  title: `${path}/DateTimeSlotPicker`,\\\\n  decorators: [withKnobs],\\\\n  component: DateTimeSlotPicker\\\\n}\\\\n\\\\nconst DropdownOption = [\\\\n  {\\\\n    id: 'units',\\\\n    label: 'Units',\\\\n    value: 'unit',\\\\n    availableSlotObjectKey: 'availableNumberOfItems',\\\\n    totalSlotObjectKey: 'totalNumberOfItems'\\\\n  },\\\\n  {\\\\n    id: 'weight',\\\\n    label: 'Weight',\\\\n    value: 'weight',\\\\n    availableSlotObjectKey: 'availableWeight',\\\\n    totalSlotObjectKey: 'totalWeight'\\\\n  },\\\\n  {\\\\n    id: 'volume',\\\\n    label: 'Volume',\\\\n    value: 'volume',\\\\n    availableSlotObjectKey: 'availableVolume',\\\\n    totalSlotObjectKey: 'totalVolume'\\\\n  },\\\\n  {\\\\n    id: 'stops',\\\\n    label: 'Stops',\\\\n    value: 'stop',\\\\n    availableSlotObjectKey: 'availableStops',\\\\n    totalSlotObjectKey: 'totalStops'\\\\n  }\\\\n]\\\\n\\\\nconst status = {\\\\n  available: {\\\\n    id: 'available',\\\\n    value: 'AVAILABLE',\\\\n    label: 'Suggested'\\\\n  },\\\\n  notAvailable: {\\\\n    id: 'notAvailable',\\\\n    value: 'FULL',\\\\n    label: 'Not Suggested'\\\\n  }\\\\n}\\\\n\\\\nexport const SlotPicker = addSourceDecorator(() => {\\\\n  const todaysDate = new Date()\\\\n  return (\\\\n    <ThemeWrapper>\\\\n      <DateTimeSlotPicker\\\\n        title='Available Time Windows:'\\\\n        preferenceDropdownLabel='Prefrence By '\\\\n        isOpen={boolean('isOpen', false)}\\\\n        date={todaysDate}\\\\n        timeWindowPrefrenceDropdown={object(\\\\n          'timeWindowPrefrenceDropdown',\\\\n          DropdownOption\\\\n        )}\\\\n        status={object('status', status)}\\\\n        DateTimeSlots={object('DateTimeSlots', Data)}\\\\n        style={{\\\\n          position: 'absolute',\\\\n          top: 'auto',\\\\n          left: '0px'\\\\n        }}\\\\n        onChange={action('On Change')}\\\\n      >\\\\n        {({ value, open, setOpen }: IDateTimeSlotPickerChildren) => (\\\\n          <div\\\\n            onClick={() => {\\\\n              console.log(open)\\\\n              setOpen(!open)\\\\n            }}\\\\n          >\\\\n            <TextInput\\\\n              id='someId'\\\\n              name='someName'\\\\n              className='someClassname'\\\\n              placeholder='Please Click Here'\\\\n              variant='withIcon'\\\\n              iconVariant='calendar'\\\\n              iconSize='md'\\\\n              value={`${value ? value?.startTimeWindow : ''} - ${\\\\n                value ? value?.endTimeWindow : ''\\\\n              }`}\\\\n              readOnly\\\\n              iconStyle={{ padding: '9px 9px 9px 9px' }}\\\\n            />\\\\n          </div>\\\\n        )}\\\\n      </DateTimeSlotPicker>\\\\n    </ThemeWrapper>\\\\n  )\\\\n}, {__STORY__, __ADDS_MAP__,__MAIN_FILE_LOCATION__,__MODULE_DEPENDENCIES__,__LOCAL_DEPENDENCIES__,__SOURCE_PREFIX__,__IDS_TO_FRAMEWORKS__});\\\",\\\"locationsMap\\\":{}},\\\"storySource\\\":{\\\"source\\\":\\\"import React from 'react'\\\\nimport { path } from '..'\\\\nimport DateTimeSlotPicker from '.'\\\\nimport { object, withKnobs, boolean } from '@storybook/addon-knobs'\\\\nimport ThemeWrapper from '../../../utilities/components/ThemeWrapper'\\\\nimport Data from './Data'\\\\nimport TextInput from '../TextInput'\\\\nimport { IDateTimeSlotPickerChildren } from './interfaces'\\\\nimport { action } from '@storybook/addon-actions'\\\\n\\\\nexport default {\\\\n  title: `${path}/DateTimeSlotPicker`,\\\\n  decorators: [withKnobs],\\\\n  component: DateTimeSlotPicker\\\\n}\\\\n\\\\nconst DropdownOption = [\\\\n  {\\\\n    id: 'units',\\\\n    label: 'Units',\\\\n    value: 'unit',\\\\n    availableSlotObjectKey: 'availableNumberOfItems',\\\\n    totalSlotObjectKey: 'totalNumberOfItems'\\\\n  },\\\\n  {\\\\n    id: 'weight',\\\\n    label: 'Weight',\\\\n    value: 'weight',\\\\n    availableSlotObjectKey: 'availableWeight',\\\\n    totalSlotObjectKey: 'totalWeight'\\\\n  },\\\\n  {\\\\n    id: 'volume',\\\\n    label: 'Volume',\\\\n    value: 'volume',\\\\n    availableSlotObjectKey: 'availableVolume',\\\\n    totalSlotObjectKey: 'totalVolume'\\\\n  },\\\\n  {\\\\n    id: 'stops',\\\\n    label: 'Stops',\\\\n    value: 'stop',\\\\n    availableSlotObjectKey: 'availableStops',\\\\n    totalSlotObjectKey: 'totalStops'\\\\n  }\\\\n]\\\\n\\\\nconst status = {\\\\n  available: {\\\\n    id: 'available',\\\\n    value: 'AVAILABLE',\\\\n    label: 'Suggested'\\\\n  },\\\\n  notAvailable: {\\\\n    id: 'notAvailable',\\\\n    value: 'FULL',\\\\n    label: 'Not Suggested'\\\\n  }\\\\n}\\\\n\\\\nexport const SlotPicker = () => {\\\\n  const todaysDate = new Date()\\\\n  return (\\\\n    <ThemeWrapper>\\\\n      <DateTimeSlotPicker\\\\n        title='Available Time Windows:'\\\\n        preferenceDropdownLabel='Prefrence By '\\\\n        isOpen={boolean('isOpen', false)}\\\\n        date={todaysDate}\\\\n        timeWindowPrefrenceDropdown={object(\\\\n          'timeWindowPrefrenceDropdown',\\\\n          DropdownOption\\\\n        )}\\\\n        status={object('status', status)}\\\\n        DateTimeSlots={object('DateTimeSlots', Data)}\\\\n        style={{\\\\n          position: 'absolute',\\\\n          top: 'auto',\\\\n          left: '0px'\\\\n        }}\\\\n        onChange={action('On Change')}\\\\n      >\\\\n        {({ value, open, setOpen }: IDateTimeSlotPickerChildren) => (\\\\n          <div\\\\n            onClick={() => {\\\\n              console.log(open)\\\\n              setOpen(!open)\\\\n            }}\\\\n          >\\\\n            <TextInput\\\\n              id='someId'\\\\n              name='someName'\\\\n              className='someClassname'\\\\n              placeholder='Please Click Here'\\\\n              variant='withIcon'\\\\n              iconVariant='calendar'\\\\n              iconSize='md'\\\\n              value={`${value ? value?.startTimeWindow : ''} - ${\\\\n                value ? value?.endTimeWindow : ''\\\\n              }`}\\\\n              readOnly\\\\n              iconStyle={{ padding: '9px 9px 9px 9px' }}\\\\n            />\\\\n          </div>\\\\n        )}\\\\n      </DateTimeSlotPicker>\\\\n    </ThemeWrapper>\\\\n  )\\\\n}\\\\n\\\",\\\"locationsMap\\\":{}},},\\n  title: `${path}/DateTimeSlotPicker`,\\n  decorators: [withKnobs],\\n  component: DateTimeSlotPicker\\n}\\n\\nconst DropdownOption = [\\n  {\\n    id: 'units',\\n    label: 'Units',\\n    value: 'unit',\\n    availableSlotObjectKey: 'availableNumberOfItems',\\n    totalSlotObjectKey: 'totalNumberOfItems'\\n  },\\n  {\\n    id: 'weight',\\n    label: 'Weight',\\n    value: 'weight',\\n    availableSlotObjectKey: 'availableWeight',\\n    totalSlotObjectKey: 'totalWeight'\\n  },\\n  {\\n    id: 'volume',\\n    label: 'Volume',\\n    value: 'volume',\\n    availableSlotObjectKey: 'availableVolume',\\n    totalSlotObjectKey: 'totalVolume'\\n  },\\n  {\\n    id: 'stops',\\n    label: 'Stops',\\n    value: 'stop',\\n    availableSlotObjectKey: 'availableStops',\\n    totalSlotObjectKey: 'totalStops'\\n  }\\n]\\n\\nconst status = {\\n  available: {\\n    id: 'available',\\n    value: 'AVAILABLE',\\n    label: 'Suggested'\\n  },\\n  notAvailable: {\\n    id: 'notAvailable',\\n    value: 'FULL',\\n    label: 'Not Suggested'\\n  }\\n}\\n\\nexport const SlotPicker = addSourceDecorator(addSourceDecorator(() => {\\n  const todaysDate = new Date()\\n  return (\\n    <ThemeWrapper>\\n      <DateTimeSlotPicker\\n        title='Available Time Windows:'\\n        preferenceDropdownLabel='Prefrence By '\\n        isOpen={boolean('isOpen', false)}\\n        date={todaysDate}\\n        timeWindowPrefrenceDropdown={object(\\n          'timeWindowPrefrenceDropdown',\\n          DropdownOption\\n        )}\\n        status={object('status', status)}\\n        DateTimeSlots={object('DateTimeSlots', Data)}\\n        style={{\\n          position: 'absolute',\\n          top: 'auto',\\n          left: '0px'\\n        }}\\n        onChange={action('On Change')}\\n      >\\n        {({ value, open, setOpen }: IDateTimeSlotPickerChildren) => (\\n          <div\\n            onClick={() => {\\n              console.log(open)\\n              setOpen(!open)\\n            }}\\n          >\\n            <TextInput\\n              id='someId'\\n              name='someName'\\n              className='someClassname'\\n              placeholder='Please Click Here'\\n              variant='withIcon'\\n              iconVariant='calendar'\\n              iconSize='md'\\n              value={`${value ? value?.startTimeWindow : ''} - ${\\n                value ? value?.endTimeWindow : ''\\n              }`}\\n              readOnly\\n              iconStyle={{ padding: '9px 9px 9px 9px' }}\\n            />\\n          </div>\\n        )}\\n      </DateTimeSlotPicker>\\n    </ThemeWrapper>\\n  )\\n}, {__STORY__, __ADDS_MAP__,__MAIN_FILE_LOCATION__,__MODULE_DEPENDENCIES__,__LOCAL_DEPENDENCIES__,__SOURCE_PREFIX__,__IDS_TO_FRAMEWORKS__}), {__STORY__, __ADDS_MAP__,__MAIN_FILE_LOCATION__,__MODULE_DEPENDENCIES__,__LOCAL_DEPENDENCIES__,__SOURCE_PREFIX__,__IDS_TO_FRAMEWORKS__});\"; // @ts-ignore\n\nvar __ADDS_MAP__ = {}; // @ts-ignore\n\nvar __MAIN_FILE_LOCATION__ = \"/DateTimeSlotPicker.stories.tsx\"; // @ts-ignore\n\nvar __MODULE_DEPENDENCIES__ = []; // @ts-ignore\n\nvar __LOCAL_DEPENDENCIES__ = {}; // @ts-ignore\n\nvar __IDS_TO_FRAMEWORKS__ = {};\n/* eslint-disable */\n// @ts-nocheck\n// @ts-ignore\n\nvar withSourceLoader = require('@storybook/source-loader/preview').withSource; // @ts-ignore\n\n\nvar addSourceDecorator = require(\"@storybook/source-loader/preview\").addSource; // @ts-ignore\n\n\nvar __SOURCE_PREFIX__ = \"/Users/farhanansari/Desktop/CODE/PrxProject/untitled folder/reactStoryBook/src/components/molecules/DateTimeSlotPicker\"; // @ts-ignore\n\nvar __STORY__ = \"\\n\\n// @ts-nocheck\\n// @ts-ignore\\nvar withSourceLoader = require('@storybook/source-loader/preview').withSource;\\n// @ts-ignore\\nvar addSourceDecorator = require(\\\"@storybook/source-loader/preview\\\").addSource;\\n// @ts-ignore\\nvar __SOURCE_PREFIX__ = \\\"/Users/farhanansari/Desktop/CODE/PrxProject/untitled folder/reactStoryBook/src/components/molecules/DateTimeSlotPicker\\\";\\n// @ts-ignore\\nvar __STORY__ = \\\"import React from 'react'\\\\nimport { path } from '..'\\\\nimport DateTimeSlotPicker from '.'\\\\nimport { object, withKnobs, boolean } from '@storybook/addon-knobs'\\\\nimport ThemeWrapper from '../../../utilities/components/ThemeWrapper'\\\\nimport Data from './Data'\\\\nimport TextInput from '../TextInput'\\\\nimport { IDateTimeSlotPickerChildren } from './interfaces'\\\\nimport { action } from '@storybook/addon-actions'\\\\n\\\\nexport default {\\\\n  title: `${path}/DateTimeSlotPicker`,\\\\n  decorators: [withKnobs],\\\\n  component: DateTimeSlotPicker\\\\n}\\\\n\\\\nconst DropdownOption = [\\\\n  {\\\\n    id: 'units',\\\\n    label: 'Units',\\\\n    value: 'unit',\\\\n    availableSlotObjectKey: 'availableNumberOfItems',\\\\n    totalSlotObjectKey: 'totalNumberOfItems'\\\\n  },\\\\n  {\\\\n    id: 'weight',\\\\n    label: 'Weight',\\\\n    value: 'weight',\\\\n    availableSlotObjectKey: 'availableWeight',\\\\n    totalSlotObjectKey: 'totalWeight'\\\\n  },\\\\n  {\\\\n    id: 'volume',\\\\n    label: 'Volume',\\\\n    value: 'volume',\\\\n    availableSlotObjectKey: 'availableVolume',\\\\n    totalSlotObjectKey: 'totalVolume'\\\\n  },\\\\n  {\\\\n    id: 'stops',\\\\n    label: 'Stops',\\\\n    value: 'stop',\\\\n    availableSlotObjectKey: 'availableStops',\\\\n    totalSlotObjectKey: 'totalStops'\\\\n  }\\\\n]\\\\n\\\\nconst status = {\\\\n  available: {\\\\n    id: 'available',\\\\n    value: 'AVAILABLE',\\\\n    label: 'Suggested'\\\\n  },\\\\n  notAvailable: {\\\\n    id: 'notAvailable',\\\\n    value: 'FULL',\\\\n    label: 'Not Suggested'\\\\n  }\\\\n}\\\\n\\\\nexport const SlotPicker = () => {\\\\n  const todaysDate = new Date()\\\\n  return (\\\\n    <ThemeWrapper>\\\\n      <DateTimeSlotPicker\\\\n        title='Available Time Windows:'\\\\n        preferenceDropdownLabel='Prefrence By '\\\\n        isOpen={boolean('isOpen', false)}\\\\n        date={todaysDate}\\\\n        timeWindowPrefrenceDropdown={object(\\\\n          'timeWindowPrefrenceDropdown',\\\\n          DropdownOption\\\\n        )}\\\\n        status={object('status', status)}\\\\n        DateTimeSlots={object('DateTimeSlots', Data)}\\\\n        style={{\\\\n          position: 'absolute',\\\\n          top: 'auto',\\\\n          left: '0px'\\\\n        }}\\\\n        onChange={action('On Change')}\\\\n      >\\\\n        {({ value, open, setOpen }: IDateTimeSlotPickerChildren) => (\\\\n          <div\\\\n            onClick={() => {\\\\n              console.log(open)\\\\n              setOpen(!open)\\\\n            }}\\\\n          >\\\\n            <TextInput\\\\n              id='someId'\\\\n              name='someName'\\\\n              className='someClassname'\\\\n              placeholder='Please Click Here'\\\\n              variant='withIcon'\\\\n              iconVariant='calendar'\\\\n              iconSize='md'\\\\n              value={`${value ? value?.startTimeWindow : ''} - ${\\\\n                value ? value?.endTimeWindow : ''\\\\n              }`}\\\\n              readOnly\\\\n              iconStyle={{ padding: '9px 9px 9px 9px' }}\\\\n            />\\\\n          </div>\\\\n        )}\\\\n      </DateTimeSlotPicker>\\\\n    </ThemeWrapper>\\\\n  )\\\\n}\\\\n\\\";\\n// @ts-ignore\\nvar __ADDS_MAP__ = {};\\n// @ts-ignore\\nvar __MAIN_FILE_LOCATION__ = \\\"/DateTimeSlotPicker.stories.tsx\\\";\\n// @ts-ignore\\nvar __MODULE_DEPENDENCIES__ = [];\\n// @ts-ignore\\nvar __LOCAL_DEPENDENCIES__ = {};\\n// @ts-ignore\\nvar __IDS_TO_FRAMEWORKS__ = {};\\n        \\nimport React from 'react'\\nimport { path } from '..'\\nimport DateTimeSlotPicker from '.'\\nimport { object, withKnobs, boolean } from '@storybook/addon-knobs'\\nimport ThemeWrapper from '../../../utilities/components/ThemeWrapper'\\nimport Data from './Data'\\nimport TextInput from '../TextInput'\\nimport { IDateTimeSlotPickerChildren } from './interfaces'\\nimport { action } from '@storybook/addon-actions'\\n\\nexport default {parameters: {\\\"storySource\\\":{\\\"source\\\":\\\"import React from 'react'\\\\nimport { path } from '..'\\\\nimport DateTimeSlotPicker from '.'\\\\nimport { object, withKnobs, boolean } from '@storybook/addon-knobs'\\\\nimport ThemeWrapper from '../../../utilities/components/ThemeWrapper'\\\\nimport Data from './Data'\\\\nimport TextInput from '../TextInput'\\\\nimport { IDateTimeSlotPickerChildren } from './interfaces'\\\\nimport { action } from '@storybook/addon-actions'\\\\n\\\\nexport default {\\\\n  title: `${path}/DateTimeSlotPicker`,\\\\n  decorators: [withKnobs],\\\\n  component: DateTimeSlotPicker\\\\n}\\\\n\\\\nconst DropdownOption = [\\\\n  {\\\\n    id: 'units',\\\\n    label: 'Units',\\\\n    value: 'unit',\\\\n    availableSlotObjectKey: 'availableNumberOfItems',\\\\n    totalSlotObjectKey: 'totalNumberOfItems'\\\\n  },\\\\n  {\\\\n    id: 'weight',\\\\n    label: 'Weight',\\\\n    value: 'weight',\\\\n    availableSlotObjectKey: 'availableWeight',\\\\n    totalSlotObjectKey: 'totalWeight'\\\\n  },\\\\n  {\\\\n    id: 'volume',\\\\n    label: 'Volume',\\\\n    value: 'volume',\\\\n    availableSlotObjectKey: 'availableVolume',\\\\n    totalSlotObjectKey: 'totalVolume'\\\\n  },\\\\n  {\\\\n    id: 'stops',\\\\n    label: 'Stops',\\\\n    value: 'stop',\\\\n    availableSlotObjectKey: 'availableStops',\\\\n    totalSlotObjectKey: 'totalStops'\\\\n  }\\\\n]\\\\n\\\\nconst status = {\\\\n  available: {\\\\n    id: 'available',\\\\n    value: 'AVAILABLE',\\\\n    label: 'Suggested'\\\\n  },\\\\n  notAvailable: {\\\\n    id: 'notAvailable',\\\\n    value: 'FULL',\\\\n    label: 'Not Suggested'\\\\n  }\\\\n}\\\\n\\\\nexport const SlotPicker = () => {\\\\n  const todaysDate = new Date()\\\\n  return (\\\\n    <ThemeWrapper>\\\\n      <DateTimeSlotPicker\\\\n        title='Available Time Windows:'\\\\n        preferenceDropdownLabel='Prefrence By '\\\\n        isOpen={boolean('isOpen', false)}\\\\n        date={todaysDate}\\\\n        timeWindowPrefrenceDropdown={object(\\\\n          'timeWindowPrefrenceDropdown',\\\\n          DropdownOption\\\\n        )}\\\\n        status={object('status', status)}\\\\n        DateTimeSlots={object('DateTimeSlots', Data)}\\\\n        style={{\\\\n          position: 'absolute',\\\\n          top: 'auto',\\\\n          left: '0px'\\\\n        }}\\\\n        onChange={action('On Change')}\\\\n      >\\\\n        {({ value, open, setOpen }: IDateTimeSlotPickerChildren) => (\\\\n          <div\\\\n            onClick={() => {\\\\n              console.log(open)\\\\n              setOpen(!open)\\\\n            }}\\\\n          >\\\\n            <TextInput\\\\n              id='someId'\\\\n              name='someName'\\\\n              className='someClassname'\\\\n              placeholder='Please Click Here'\\\\n              variant='withIcon'\\\\n              iconVariant='calendar'\\\\n              iconSize='md'\\\\n              value={`${value ? value?.startTimeWindow : ''} - ${\\\\n                value ? value?.endTimeWindow : ''\\\\n              }`}\\\\n              readOnly\\\\n              iconStyle={{ padding: '9px 9px 9px 9px' }}\\\\n            />\\\\n          </div>\\\\n        )}\\\\n      </DateTimeSlotPicker>\\\\n    </ThemeWrapper>\\\\n  )\\\\n}\\\\n\\\",\\\"locationsMap\\\":{}},},\\n  title: `${path}/DateTimeSlotPicker`,\\n  decorators: [withKnobs],\\n  component: DateTimeSlotPicker\\n}\\n\\nconst DropdownOption = [\\n  {\\n    id: 'units',\\n    label: 'Units',\\n    value: 'unit',\\n    availableSlotObjectKey: 'availableNumberOfItems',\\n    totalSlotObjectKey: 'totalNumberOfItems'\\n  },\\n  {\\n    id: 'weight',\\n    label: 'Weight',\\n    value: 'weight',\\n    availableSlotObjectKey: 'availableWeight',\\n    totalSlotObjectKey: 'totalWeight'\\n  },\\n  {\\n    id: 'volume',\\n    label: 'Volume',\\n    value: 'volume',\\n    availableSlotObjectKey: 'availableVolume',\\n    totalSlotObjectKey: 'totalVolume'\\n  },\\n  {\\n    id: 'stops',\\n    label: 'Stops',\\n    value: 'stop',\\n    availableSlotObjectKey: 'availableStops',\\n    totalSlotObjectKey: 'totalStops'\\n  }\\n]\\n\\nconst status = {\\n  available: {\\n    id: 'available',\\n    value: 'AVAILABLE',\\n    label: 'Suggested'\\n  },\\n  notAvailable: {\\n    id: 'notAvailable',\\n    value: 'FULL',\\n    label: 'Not Suggested'\\n  }\\n}\\n\\nexport const SlotPicker = addSourceDecorator(() => {\\n  const todaysDate = new Date()\\n  return (\\n    <ThemeWrapper>\\n      <DateTimeSlotPicker\\n        title='Available Time Windows:'\\n        preferenceDropdownLabel='Prefrence By '\\n        isOpen={boolean('isOpen', false)}\\n        date={todaysDate}\\n        timeWindowPrefrenceDropdown={object(\\n          'timeWindowPrefrenceDropdown',\\n          DropdownOption\\n        )}\\n        status={object('status', status)}\\n        DateTimeSlots={object('DateTimeSlots', Data)}\\n        style={{\\n          position: 'absolute',\\n          top: 'auto',\\n          left: '0px'\\n        }}\\n        onChange={action('On Change')}\\n      >\\n        {({ value, open, setOpen }: IDateTimeSlotPickerChildren) => (\\n          <div\\n            onClick={() => {\\n              console.log(open)\\n              setOpen(!open)\\n            }}\\n          >\\n            <TextInput\\n              id='someId'\\n              name='someName'\\n              className='someClassname'\\n              placeholder='Please Click Here'\\n              variant='withIcon'\\n              iconVariant='calendar'\\n              iconSize='md'\\n              value={`${value ? value?.startTimeWindow : ''} - ${\\n                value ? value?.endTimeWindow : ''\\n              }`}\\n              readOnly\\n              iconStyle={{ padding: '9px 9px 9px 9px' }}\\n            />\\n          </div>\\n        )}\\n      </DateTimeSlotPicker>\\n    </ThemeWrapper>\\n  )\\n}, {__STORY__, __ADDS_MAP__,__MAIN_FILE_LOCATION__,__MODULE_DEPENDENCIES__,__LOCAL_DEPENDENCIES__,__SOURCE_PREFIX__,__IDS_TO_FRAMEWORKS__});\"; // @ts-ignore\n\nvar __ADDS_MAP__ = {}; // @ts-ignore\n\nvar __MAIN_FILE_LOCATION__ = \"/DateTimeSlotPicker.stories.tsx\"; // @ts-ignore\n\nvar __MODULE_DEPENDENCIES__ = []; // @ts-ignore\n\nvar __LOCAL_DEPENDENCIES__ = {}; // @ts-ignore\n\nvar __IDS_TO_FRAMEWORKS__ = {};\n/* eslint-disable */\n// @ts-nocheck\n// @ts-ignore\n\nvar withSourceLoader = require('@storybook/source-loader/preview').withSource; // @ts-ignore\n\n\nvar addSourceDecorator = require(\"@storybook/source-loader/preview\").addSource; // @ts-ignore\n\n\nvar __SOURCE_PREFIX__ = \"/Users/farhanansari/Desktop/CODE/PrxProject/untitled folder/reactStoryBook/src/components/molecules/DateTimeSlotPicker\"; // @ts-ignore\n\nvar __STORY__ = \"import React from 'react'\\nimport { path } from '..'\\nimport DateTimeSlotPicker from '.'\\nimport { object, withKnobs, boolean } from '@storybook/addon-knobs'\\nimport ThemeWrapper from '../../../utilities/components/ThemeWrapper'\\nimport Data from './Data'\\nimport TextInput from '../TextInput'\\nimport { IDateTimeSlotPickerChildren } from './interfaces'\\nimport { action } from '@storybook/addon-actions'\\n\\nexport default {\\n  title: `${path}/DateTimeSlotPicker`,\\n  decorators: [withKnobs],\\n  component: DateTimeSlotPicker\\n}\\n\\nconst DropdownOption = [\\n  {\\n    id: 'units',\\n    label: 'Units',\\n    value: 'unit',\\n    availableSlotObjectKey: 'availableNumberOfItems',\\n    totalSlotObjectKey: 'totalNumberOfItems'\\n  },\\n  {\\n    id: 'weight',\\n    label: 'Weight',\\n    value: 'weight',\\n    availableSlotObjectKey: 'availableWeight',\\n    totalSlotObjectKey: 'totalWeight'\\n  },\\n  {\\n    id: 'volume',\\n    label: 'Volume',\\n    value: 'volume',\\n    availableSlotObjectKey: 'availableVolume',\\n    totalSlotObjectKey: 'totalVolume'\\n  },\\n  {\\n    id: 'stops',\\n    label: 'Stops',\\n    value: 'stop',\\n    availableSlotObjectKey: 'availableStops',\\n    totalSlotObjectKey: 'totalStops'\\n  }\\n]\\n\\nconst status = {\\n  available: {\\n    id: 'available',\\n    value: 'AVAILABLE',\\n    label: 'Suggested'\\n  },\\n  notAvailable: {\\n    id: 'notAvailable',\\n    value: 'FULL',\\n    label: 'Not Suggested'\\n  }\\n}\\n\\nexport const SlotPicker = () => {\\n  const todaysDate = new Date()\\n  return (\\n    <ThemeWrapper>\\n      <DateTimeSlotPicker\\n        title='Available Time Windows:'\\n        preferenceDropdownLabel='Prefrence By '\\n        isOpen={boolean('isOpen', false)}\\n        date={todaysDate}\\n        timeWindowPrefrenceDropdown={object(\\n          'timeWindowPrefrenceDropdown',\\n          DropdownOption\\n        )}\\n        status={object('status', status)}\\n        DateTimeSlots={object('DateTimeSlots', Data)}\\n        style={{\\n          position: 'absolute',\\n          top: 'auto',\\n          left: '0px'\\n        }}\\n        onChange={action('On Change')}\\n      >\\n        {({ value, open, setOpen }: IDateTimeSlotPickerChildren) => (\\n          <div\\n            onClick={() => {\\n              console.log(open)\\n              setOpen(!open)\\n            }}\\n          >\\n            <TextInput\\n              id='someId'\\n              name='someName'\\n              className='someClassname'\\n              placeholder='Please Click Here'\\n              variant='withIcon'\\n              iconVariant='calendar'\\n              iconSize='md'\\n              value={`${value ? value?.startTimeWindow : ''} - ${\\n                value ? value?.endTimeWindow : ''\\n              }`}\\n              readOnly\\n              iconStyle={{ padding: '9px 9px 9px 9px' }}\\n            />\\n          </div>\\n        )}\\n      </DateTimeSlotPicker>\\n    </ThemeWrapper>\\n  )\\n}\\n\"; // @ts-ignore\n\nvar __ADDS_MAP__ = {}; // @ts-ignore\n\nvar __MAIN_FILE_LOCATION__ = \"/DateTimeSlotPicker.stories.tsx\"; // @ts-ignore\n\nvar __MODULE_DEPENDENCIES__ = []; // @ts-ignore\n\nvar __LOCAL_DEPENDENCIES__ = {}; // @ts-ignore\n\nvar __IDS_TO_FRAMEWORKS__ = {};\nimport React from 'react';\nimport { path } from '..';\nimport DateTimeSlotPicker from '.';\nimport { object, withKnobs, boolean as _boolean } from '@storybook/addon-knobs';\nimport ThemeWrapper from '../../../utilities/components/ThemeWrapper';\nimport Data from './Data';\nimport TextInput from '../TextInput';\nimport { action } from '@storybook/addon-actions';\nexport default {\n  parameters: (_parameters = {\n    \"storySource\": {\n      \"source\": \"\\n\\n// @ts-nocheck\\n// @ts-ignore\\nvar withSourceLoader = require('@storybook/source-loader/preview').withSource;\\n// @ts-ignore\\nvar addSourceDecorator = require(\\\"@storybook/source-loader/preview\\\").addSource;\\n// @ts-ignore\\nvar __SOURCE_PREFIX__ = \\\"/Users/farhanansari/Desktop/CODE/PrxProject/untitled folder/reactStoryBook/src/components/molecules/DateTimeSlotPicker\\\";\\n// @ts-ignore\\nvar __STORY__ = \\\"\\\\n\\\\n// @ts-nocheck\\\\n// @ts-ignore\\\\nvar withSourceLoader = require('@storybook/source-loader/preview').withSource;\\\\n// @ts-ignore\\\\nvar addSourceDecorator = require(\\\\\\\"@storybook/source-loader/preview\\\\\\\").addSource;\\\\n// @ts-ignore\\\\nvar __SOURCE_PREFIX__ = \\\\\\\"/Users/farhanansari/Desktop/CODE/PrxProject/untitled folder/reactStoryBook/src/components/molecules/DateTimeSlotPicker\\\\\\\";\\\\n// @ts-ignore\\\\nvar __STORY__ = \\\\\\\"import React from 'react'\\\\\\\\nimport { path } from '..'\\\\\\\\nimport DateTimeSlotPicker from '.'\\\\\\\\nimport { object, withKnobs, boolean } from '@storybook/addon-knobs'\\\\\\\\nimport ThemeWrapper from '../../../utilities/components/ThemeWrapper'\\\\\\\\nimport Data from './Data'\\\\\\\\nimport TextInput from '../TextInput'\\\\\\\\nimport { IDateTimeSlotPickerChildren } from './interfaces'\\\\\\\\nimport { action } from '@storybook/addon-actions'\\\\\\\\n\\\\\\\\nexport default {\\\\\\\\n  title: `${path}/DateTimeSlotPicker`,\\\\\\\\n  decorators: [withKnobs],\\\\\\\\n  component: DateTimeSlotPicker\\\\\\\\n}\\\\\\\\n\\\\\\\\nconst DropdownOption = [\\\\\\\\n  {\\\\\\\\n    id: 'units',\\\\\\\\n    label: 'Units',\\\\\\\\n    value: 'unit',\\\\\\\\n    availableSlotObjectKey: 'availableNumberOfItems',\\\\\\\\n    totalSlotObjectKey: 'totalNumberOfItems'\\\\\\\\n  },\\\\\\\\n  {\\\\\\\\n    id: 'weight',\\\\\\\\n    label: 'Weight',\\\\\\\\n    value: 'weight',\\\\\\\\n    availableSlotObjectKey: 'availableWeight',\\\\\\\\n    totalSlotObjectKey: 'totalWeight'\\\\\\\\n  },\\\\\\\\n  {\\\\\\\\n    id: 'volume',\\\\\\\\n    label: 'Volume',\\\\\\\\n    value: 'volume',\\\\\\\\n    availableSlotObjectKey: 'availableVolume',\\\\\\\\n    totalSlotObjectKey: 'totalVolume'\\\\\\\\n  },\\\\\\\\n  {\\\\\\\\n    id: 'stops',\\\\\\\\n    label: 'Stops',\\\\\\\\n    value: 'stop',\\\\\\\\n    availableSlotObjectKey: 'availableStops',\\\\\\\\n    totalSlotObjectKey: 'totalStops'\\\\\\\\n  }\\\\\\\\n]\\\\\\\\n\\\\\\\\nconst status = {\\\\\\\\n  available: {\\\\\\\\n    id: 'available',\\\\\\\\n    value: 'AVAILABLE',\\\\\\\\n    label: 'Suggested'\\\\\\\\n  },\\\\\\\\n  notAvailable: {\\\\\\\\n    id: 'notAvailable',\\\\\\\\n    value: 'FULL',\\\\\\\\n    label: 'Not Suggested'\\\\\\\\n  }\\\\\\\\n}\\\\\\\\n\\\\\\\\nexport const SlotPicker = () => {\\\\\\\\n  const todaysDate = new Date()\\\\\\\\n  return (\\\\\\\\n    <ThemeWrapper>\\\\\\\\n      <DateTimeSlotPicker\\\\\\\\n        title='Available Time Windows:'\\\\\\\\n        preferenceDropdownLabel='Prefrence By '\\\\\\\\n        isOpen={boolean('isOpen', false)}\\\\\\\\n        date={todaysDate}\\\\\\\\n        timeWindowPrefrenceDropdown={object(\\\\\\\\n          'timeWindowPrefrenceDropdown',\\\\\\\\n          DropdownOption\\\\\\\\n        )}\\\\\\\\n        status={object('status', status)}\\\\\\\\n        DateTimeSlots={object('DateTimeSlots', Data)}\\\\\\\\n        style={{\\\\\\\\n          position: 'absolute',\\\\\\\\n          top: 'auto',\\\\\\\\n          left: '0px'\\\\\\\\n        }}\\\\\\\\n        onChange={action('On Change')}\\\\\\\\n      >\\\\\\\\n        {({ value, open, setOpen }: IDateTimeSlotPickerChildren) => (\\\\\\\\n          <div\\\\\\\\n            onClick={() => {\\\\\\\\n              console.log(open)\\\\\\\\n              setOpen(!open)\\\\\\\\n            }}\\\\\\\\n          >\\\\\\\\n            <TextInput\\\\\\\\n              id='someId'\\\\\\\\n              name='someName'\\\\\\\\n              className='someClassname'\\\\\\\\n              placeholder='Please Click Here'\\\\\\\\n              variant='withIcon'\\\\\\\\n              iconVariant='calendar'\\\\\\\\n              iconSize='md'\\\\\\\\n              value={`${value ? value?.startTimeWindow : ''} - ${\\\\\\\\n                value ? value?.endTimeWindow : ''\\\\\\\\n              }`}\\\\\\\\n              readOnly\\\\\\\\n              iconStyle={{ padding: '9px 9px 9px 9px' }}\\\\\\\\n            />\\\\\\\\n          </div>\\\\\\\\n        )}\\\\\\\\n      </DateTimeSlotPicker>\\\\\\\\n    </ThemeWrapper>\\\\\\\\n  )\\\\\\\\n}\\\\\\\\n\\\\\\\";\\\\n// @ts-ignore\\\\nvar __ADDS_MAP__ = {};\\\\n// @ts-ignore\\\\nvar __MAIN_FILE_LOCATION__ = \\\\\\\"/DateTimeSlotPicker.stories.tsx\\\\\\\";\\\\n// @ts-ignore\\\\nvar __MODULE_DEPENDENCIES__ = [];\\\\n// @ts-ignore\\\\nvar __LOCAL_DEPENDENCIES__ = {};\\\\n// @ts-ignore\\\\nvar __IDS_TO_FRAMEWORKS__ = {};\\\\n        \\\\nimport React from 'react'\\\\nimport { path } from '..'\\\\nimport DateTimeSlotPicker from '.'\\\\nimport { object, withKnobs, boolean } from '@storybook/addon-knobs'\\\\nimport ThemeWrapper from '../../../utilities/components/ThemeWrapper'\\\\nimport Data from './Data'\\\\nimport TextInput from '../TextInput'\\\\nimport { IDateTimeSlotPickerChildren } from './interfaces'\\\\nimport { action } from '@storybook/addon-actions'\\\\n\\\\nexport default {parameters: {\\\\\\\"storySource\\\\\\\":{\\\\\\\"source\\\\\\\":\\\\\\\"import React from 'react'\\\\\\\\nimport { path } from '..'\\\\\\\\nimport DateTimeSlotPicker from '.'\\\\\\\\nimport { object, withKnobs, boolean } from '@storybook/addon-knobs'\\\\\\\\nimport ThemeWrapper from '../../../utilities/components/ThemeWrapper'\\\\\\\\nimport Data from './Data'\\\\\\\\nimport TextInput from '../TextInput'\\\\\\\\nimport { IDateTimeSlotPickerChildren } from './interfaces'\\\\\\\\nimport { action } from '@storybook/addon-actions'\\\\\\\\n\\\\\\\\nexport default {\\\\\\\\n  title: `${path}/DateTimeSlotPicker`,\\\\\\\\n  decorators: [withKnobs],\\\\\\\\n  component: DateTimeSlotPicker\\\\\\\\n}\\\\\\\\n\\\\\\\\nconst DropdownOption = [\\\\\\\\n  {\\\\\\\\n    id: 'units',\\\\\\\\n    label: 'Units',\\\\\\\\n    value: 'unit',\\\\\\\\n    availableSlotObjectKey: 'availableNumberOfItems',\\\\\\\\n    totalSlotObjectKey: 'totalNumberOfItems'\\\\\\\\n  },\\\\\\\\n  {\\\\\\\\n    id: 'weight',\\\\\\\\n    label: 'Weight',\\\\\\\\n    value: 'weight',\\\\\\\\n    availableSlotObjectKey: 'availableWeight',\\\\\\\\n    totalSlotObjectKey: 'totalWeight'\\\\\\\\n  },\\\\\\\\n  {\\\\\\\\n    id: 'volume',\\\\\\\\n    label: 'Volume',\\\\\\\\n    value: 'volume',\\\\\\\\n    availableSlotObjectKey: 'availableVolume',\\\\\\\\n    totalSlotObjectKey: 'totalVolume'\\\\\\\\n  },\\\\\\\\n  {\\\\\\\\n    id: 'stops',\\\\\\\\n    label: 'Stops',\\\\\\\\n    value: 'stop',\\\\\\\\n    availableSlotObjectKey: 'availableStops',\\\\\\\\n    totalSlotObjectKey: 'totalStops'\\\\\\\\n  }\\\\\\\\n]\\\\\\\\n\\\\\\\\nconst status = {\\\\\\\\n  available: {\\\\\\\\n    id: 'available',\\\\\\\\n    value: 'AVAILABLE',\\\\\\\\n    label: 'Suggested'\\\\\\\\n  },\\\\\\\\n  notAvailable: {\\\\\\\\n    id: 'notAvailable',\\\\\\\\n    value: 'FULL',\\\\\\\\n    label: 'Not Suggested'\\\\\\\\n  }\\\\\\\\n}\\\\\\\\n\\\\\\\\nexport const SlotPicker = () => {\\\\\\\\n  const todaysDate = new Date()\\\\\\\\n  return (\\\\\\\\n    <ThemeWrapper>\\\\\\\\n      <DateTimeSlotPicker\\\\\\\\n        title='Available Time Windows:'\\\\\\\\n        preferenceDropdownLabel='Prefrence By '\\\\\\\\n        isOpen={boolean('isOpen', false)}\\\\\\\\n        date={todaysDate}\\\\\\\\n        timeWindowPrefrenceDropdown={object(\\\\\\\\n          'timeWindowPrefrenceDropdown',\\\\\\\\n          DropdownOption\\\\\\\\n        )}\\\\\\\\n        status={object('status', status)}\\\\\\\\n        DateTimeSlots={object('DateTimeSlots', Data)}\\\\\\\\n        style={{\\\\\\\\n          position: 'absolute',\\\\\\\\n          top: 'auto',\\\\\\\\n          left: '0px'\\\\\\\\n        }}\\\\\\\\n        onChange={action('On Change')}\\\\\\\\n      >\\\\\\\\n        {({ value, open, setOpen }: IDateTimeSlotPickerChildren) => (\\\\\\\\n          <div\\\\\\\\n            onClick={() => {\\\\\\\\n              console.log(open)\\\\\\\\n              setOpen(!open)\\\\\\\\n            }}\\\\\\\\n          >\\\\\\\\n            <TextInput\\\\\\\\n              id='someId'\\\\\\\\n              name='someName'\\\\\\\\n              className='someClassname'\\\\\\\\n              placeholder='Please Click Here'\\\\\\\\n              variant='withIcon'\\\\\\\\n              iconVariant='calendar'\\\\\\\\n              iconSize='md'\\\\\\\\n              value={`${value ? value?.startTimeWindow : ''} - ${\\\\\\\\n                value ? value?.endTimeWindow : ''\\\\\\\\n              }`}\\\\\\\\n              readOnly\\\\\\\\n              iconStyle={{ padding: '9px 9px 9px 9px' }}\\\\\\\\n            />\\\\\\\\n          </div>\\\\\\\\n        )}\\\\\\\\n      </DateTimeSlotPicker>\\\\\\\\n    </ThemeWrapper>\\\\\\\\n  )\\\\\\\\n}\\\\\\\\n\\\\\\\",\\\\\\\"locationsMap\\\\\\\":{}},},\\\\n  title: `${path}/DateTimeSlotPicker`,\\\\n  decorators: [withKnobs],\\\\n  component: DateTimeSlotPicker\\\\n}\\\\n\\\\nconst DropdownOption = [\\\\n  {\\\\n    id: 'units',\\\\n    label: 'Units',\\\\n    value: 'unit',\\\\n    availableSlotObjectKey: 'availableNumberOfItems',\\\\n    totalSlotObjectKey: 'totalNumberOfItems'\\\\n  },\\\\n  {\\\\n    id: 'weight',\\\\n    label: 'Weight',\\\\n    value: 'weight',\\\\n    availableSlotObjectKey: 'availableWeight',\\\\n    totalSlotObjectKey: 'totalWeight'\\\\n  },\\\\n  {\\\\n    id: 'volume',\\\\n    label: 'Volume',\\\\n    value: 'volume',\\\\n    availableSlotObjectKey: 'availableVolume',\\\\n    totalSlotObjectKey: 'totalVolume'\\\\n  },\\\\n  {\\\\n    id: 'stops',\\\\n    label: 'Stops',\\\\n    value: 'stop',\\\\n    availableSlotObjectKey: 'availableStops',\\\\n    totalSlotObjectKey: 'totalStops'\\\\n  }\\\\n]\\\\n\\\\nconst status = {\\\\n  available: {\\\\n    id: 'available',\\\\n    value: 'AVAILABLE',\\\\n    label: 'Suggested'\\\\n  },\\\\n  notAvailable: {\\\\n    id: 'notAvailable',\\\\n    value: 'FULL',\\\\n    label: 'Not Suggested'\\\\n  }\\\\n}\\\\n\\\\nexport const SlotPicker = addSourceDecorator(() => {\\\\n  const todaysDate = new Date()\\\\n  return (\\\\n    <ThemeWrapper>\\\\n      <DateTimeSlotPicker\\\\n        title='Available Time Windows:'\\\\n        preferenceDropdownLabel='Prefrence By '\\\\n        isOpen={boolean('isOpen', false)}\\\\n        date={todaysDate}\\\\n        timeWindowPrefrenceDropdown={object(\\\\n          'timeWindowPrefrenceDropdown',\\\\n          DropdownOption\\\\n        )}\\\\n        status={object('status', status)}\\\\n        DateTimeSlots={object('DateTimeSlots', Data)}\\\\n        style={{\\\\n          position: 'absolute',\\\\n          top: 'auto',\\\\n          left: '0px'\\\\n        }}\\\\n        onChange={action('On Change')}\\\\n      >\\\\n        {({ value, open, setOpen }: IDateTimeSlotPickerChildren) => (\\\\n          <div\\\\n            onClick={() => {\\\\n              console.log(open)\\\\n              setOpen(!open)\\\\n            }}\\\\n          >\\\\n            <TextInput\\\\n              id='someId'\\\\n              name='someName'\\\\n              className='someClassname'\\\\n              placeholder='Please Click Here'\\\\n              variant='withIcon'\\\\n              iconVariant='calendar'\\\\n              iconSize='md'\\\\n              value={`${value ? value?.startTimeWindow : ''} - ${\\\\n                value ? value?.endTimeWindow : ''\\\\n              }`}\\\\n              readOnly\\\\n              iconStyle={{ padding: '9px 9px 9px 9px' }}\\\\n            />\\\\n          </div>\\\\n        )}\\\\n      </DateTimeSlotPicker>\\\\n    </ThemeWrapper>\\\\n  )\\\\n}, {__STORY__, __ADDS_MAP__,__MAIN_FILE_LOCATION__,__MODULE_DEPENDENCIES__,__LOCAL_DEPENDENCIES__,__SOURCE_PREFIX__,__IDS_TO_FRAMEWORKS__});\\\";\\n// @ts-ignore\\nvar __ADDS_MAP__ = {};\\n// @ts-ignore\\nvar __MAIN_FILE_LOCATION__ = \\\"/DateTimeSlotPicker.stories.tsx\\\";\\n// @ts-ignore\\nvar __MODULE_DEPENDENCIES__ = [];\\n// @ts-ignore\\nvar __LOCAL_DEPENDENCIES__ = {};\\n// @ts-ignore\\nvar __IDS_TO_FRAMEWORKS__ = {};\\n        \\n\\n\\n// @ts-nocheck\\n// @ts-ignore\\nvar withSourceLoader = require('@storybook/source-loader/preview').withSource;\\n// @ts-ignore\\nvar addSourceDecorator = require(\\\"@storybook/source-loader/preview\\\").addSource;\\n// @ts-ignore\\nvar __SOURCE_PREFIX__ = \\\"/Users/farhanansari/Desktop/CODE/PrxProject/untitled folder/reactStoryBook/src/components/molecules/DateTimeSlotPicker\\\";\\n// @ts-ignore\\nvar __STORY__ = \\\"import React from 'react'\\\\nimport { path } from '..'\\\\nimport DateTimeSlotPicker from '.'\\\\nimport { object, withKnobs, boolean } from '@storybook/addon-knobs'\\\\nimport ThemeWrapper from '../../../utilities/components/ThemeWrapper'\\\\nimport Data from './Data'\\\\nimport TextInput from '../TextInput'\\\\nimport { IDateTimeSlotPickerChildren } from './interfaces'\\\\nimport { action } from '@storybook/addon-actions'\\\\n\\\\nexport default {\\\\n  title: `${path}/DateTimeSlotPicker`,\\\\n  decorators: [withKnobs],\\\\n  component: DateTimeSlotPicker\\\\n}\\\\n\\\\nconst DropdownOption = [\\\\n  {\\\\n    id: 'units',\\\\n    label: 'Units',\\\\n    value: 'unit',\\\\n    availableSlotObjectKey: 'availableNumberOfItems',\\\\n    totalSlotObjectKey: 'totalNumberOfItems'\\\\n  },\\\\n  {\\\\n    id: 'weight',\\\\n    label: 'Weight',\\\\n    value: 'weight',\\\\n    availableSlotObjectKey: 'availableWeight',\\\\n    totalSlotObjectKey: 'totalWeight'\\\\n  },\\\\n  {\\\\n    id: 'volume',\\\\n    label: 'Volume',\\\\n    value: 'volume',\\\\n    availableSlotObjectKey: 'availableVolume',\\\\n    totalSlotObjectKey: 'totalVolume'\\\\n  },\\\\n  {\\\\n    id: 'stops',\\\\n    label: 'Stops',\\\\n    value: 'stop',\\\\n    availableSlotObjectKey: 'availableStops',\\\\n    totalSlotObjectKey: 'totalStops'\\\\n  }\\\\n]\\\\n\\\\nconst status = {\\\\n  available: {\\\\n    id: 'available',\\\\n    value: 'AVAILABLE',\\\\n    label: 'Suggested'\\\\n  },\\\\n  notAvailable: {\\\\n    id: 'notAvailable',\\\\n    value: 'FULL',\\\\n    label: 'Not Suggested'\\\\n  }\\\\n}\\\\n\\\\nexport const SlotPicker = () => {\\\\n  const todaysDate = new Date()\\\\n  return (\\\\n    <ThemeWrapper>\\\\n      <DateTimeSlotPicker\\\\n        title='Available Time Windows:'\\\\n        preferenceDropdownLabel='Prefrence By '\\\\n        isOpen={boolean('isOpen', false)}\\\\n        date={todaysDate}\\\\n        timeWindowPrefrenceDropdown={object(\\\\n          'timeWindowPrefrenceDropdown',\\\\n          DropdownOption\\\\n        )}\\\\n        status={object('status', status)}\\\\n        DateTimeSlots={object('DateTimeSlots', Data)}\\\\n        style={{\\\\n          position: 'absolute',\\\\n          top: 'auto',\\\\n          left: '0px'\\\\n        }}\\\\n        onChange={action('On Change')}\\\\n      >\\\\n        {({ value, open, setOpen }: IDateTimeSlotPickerChildren) => (\\\\n          <div\\\\n            onClick={() => {\\\\n              console.log(open)\\\\n              setOpen(!open)\\\\n            }}\\\\n          >\\\\n            <TextInput\\\\n              id='someId'\\\\n              name='someName'\\\\n              className='someClassname'\\\\n              placeholder='Please Click Here'\\\\n              variant='withIcon'\\\\n              iconVariant='calendar'\\\\n              iconSize='md'\\\\n              value={`${value ? value?.startTimeWindow : ''} - ${\\\\n                value ? value?.endTimeWindow : ''\\\\n              }`}\\\\n              readOnly\\\\n              iconStyle={{ padding: '9px 9px 9px 9px' }}\\\\n            />\\\\n          </div>\\\\n        )}\\\\n      </DateTimeSlotPicker>\\\\n    </ThemeWrapper>\\\\n  )\\\\n}\\\\n\\\";\\n// @ts-ignore\\nvar __ADDS_MAP__ = {};\\n// @ts-ignore\\nvar __MAIN_FILE_LOCATION__ = \\\"/DateTimeSlotPicker.stories.tsx\\\";\\n// @ts-ignore\\nvar __MODULE_DEPENDENCIES__ = [];\\n// @ts-ignore\\nvar __LOCAL_DEPENDENCIES__ = {};\\n// @ts-ignore\\nvar __IDS_TO_FRAMEWORKS__ = {};\\n        \\nimport React from 'react'\\nimport { path } from '..'\\nimport DateTimeSlotPicker from '.'\\nimport { object, withKnobs, boolean } from '@storybook/addon-knobs'\\nimport ThemeWrapper from '../../../utilities/components/ThemeWrapper'\\nimport Data from './Data'\\nimport TextInput from '../TextInput'\\nimport { IDateTimeSlotPickerChildren } from './interfaces'\\nimport { action } from '@storybook/addon-actions'\\n\\nexport default {parameters: {\\\"storySource\\\":{\\\"source\\\":\\\"\\\\n\\\\n// @ts-nocheck\\\\n// @ts-ignore\\\\nvar withSourceLoader = require('@storybook/source-loader/preview').withSource;\\\\n// @ts-ignore\\\\nvar addSourceDecorator = require(\\\\\\\"@storybook/source-loader/preview\\\\\\\").addSource;\\\\n// @ts-ignore\\\\nvar __SOURCE_PREFIX__ = \\\\\\\"/Users/farhanansari/Desktop/CODE/PrxProject/untitled folder/reactStoryBook/src/components/molecules/DateTimeSlotPicker\\\\\\\";\\\\n// @ts-ignore\\\\nvar __STORY__ = \\\\\\\"import React from 'react'\\\\\\\\nimport { path } from '..'\\\\\\\\nimport DateTimeSlotPicker from '.'\\\\\\\\nimport { object, withKnobs, boolean } from '@storybook/addon-knobs'\\\\\\\\nimport ThemeWrapper from '../../../utilities/components/ThemeWrapper'\\\\\\\\nimport Data from './Data'\\\\\\\\nimport TextInput from '../TextInput'\\\\\\\\nimport { IDateTimeSlotPickerChildren } from './interfaces'\\\\\\\\nimport { action } from '@storybook/addon-actions'\\\\\\\\n\\\\\\\\nexport default {\\\\\\\\n  title: `${path}/DateTimeSlotPicker`,\\\\\\\\n  decorators: [withKnobs],\\\\\\\\n  component: DateTimeSlotPicker\\\\\\\\n}\\\\\\\\n\\\\\\\\nconst DropdownOption = [\\\\\\\\n  {\\\\\\\\n    id: 'units',\\\\\\\\n    label: 'Units',\\\\\\\\n    value: 'unit',\\\\\\\\n    availableSlotObjectKey: 'availableNumberOfItems',\\\\\\\\n    totalSlotObjectKey: 'totalNumberOfItems'\\\\\\\\n  },\\\\\\\\n  {\\\\\\\\n    id: 'weight',\\\\\\\\n    label: 'Weight',\\\\\\\\n    value: 'weight',\\\\\\\\n    availableSlotObjectKey: 'availableWeight',\\\\\\\\n    totalSlotObjectKey: 'totalWeight'\\\\\\\\n  },\\\\\\\\n  {\\\\\\\\n    id: 'volume',\\\\\\\\n    label: 'Volume',\\\\\\\\n    value: 'volume',\\\\\\\\n    availableSlotObjectKey: 'availableVolume',\\\\\\\\n    totalSlotObjectKey: 'totalVolume'\\\\\\\\n  },\\\\\\\\n  {\\\\\\\\n    id: 'stops',\\\\\\\\n    label: 'Stops',\\\\\\\\n    value: 'stop',\\\\\\\\n    availableSlotObjectKey: 'availableStops',\\\\\\\\n    totalSlotObjectKey: 'totalStops'\\\\\\\\n  }\\\\\\\\n]\\\\\\\\n\\\\\\\\nconst status = {\\\\\\\\n  available: {\\\\\\\\n    id: 'available',\\\\\\\\n    value: 'AVAILABLE',\\\\\\\\n    label: 'Suggested'\\\\\\\\n  },\\\\\\\\n  notAvailable: {\\\\\\\\n    id: 'notAvailable',\\\\\\\\n    value: 'FULL',\\\\\\\\n    label: 'Not Suggested'\\\\\\\\n  }\\\\\\\\n}\\\\\\\\n\\\\\\\\nexport const SlotPicker = () => {\\\\\\\\n  const todaysDate = new Date()\\\\\\\\n  return (\\\\\\\\n    <ThemeWrapper>\\\\\\\\n      <DateTimeSlotPicker\\\\\\\\n        title='Available Time Windows:'\\\\\\\\n        preferenceDropdownLabel='Prefrence By '\\\\\\\\n        isOpen={boolean('isOpen', false)}\\\\\\\\n        date={todaysDate}\\\\\\\\n        timeWindowPrefrenceDropdown={object(\\\\\\\\n          'timeWindowPrefrenceDropdown',\\\\\\\\n          DropdownOption\\\\\\\\n        )}\\\\\\\\n        status={object('status', status)}\\\\\\\\n        DateTimeSlots={object('DateTimeSlots', Data)}\\\\\\\\n        style={{\\\\\\\\n          position: 'absolute',\\\\\\\\n          top: 'auto',\\\\\\\\n          left: '0px'\\\\\\\\n        }}\\\\\\\\n        onChange={action('On Change')}\\\\\\\\n      >\\\\\\\\n        {({ value, open, setOpen }: IDateTimeSlotPickerChildren) => (\\\\\\\\n          <div\\\\\\\\n            onClick={() => {\\\\\\\\n              console.log(open)\\\\\\\\n              setOpen(!open)\\\\\\\\n            }}\\\\\\\\n          >\\\\\\\\n            <TextInput\\\\\\\\n              id='someId'\\\\\\\\n              name='someName'\\\\\\\\n              className='someClassname'\\\\\\\\n              placeholder='Please Click Here'\\\\\\\\n              variant='withIcon'\\\\\\\\n              iconVariant='calendar'\\\\\\\\n              iconSize='md'\\\\\\\\n              value={`${value ? value?.startTimeWindow : ''} - ${\\\\\\\\n                value ? value?.endTimeWindow : ''\\\\\\\\n              }`}\\\\\\\\n              readOnly\\\\\\\\n              iconStyle={{ padding: '9px 9px 9px 9px' }}\\\\\\\\n            />\\\\\\\\n          </div>\\\\\\\\n        )}\\\\\\\\n      </DateTimeSlotPicker>\\\\\\\\n    </ThemeWrapper>\\\\\\\\n  )\\\\\\\\n}\\\\\\\\n\\\\\\\";\\\\n// @ts-ignore\\\\nvar __ADDS_MAP__ = {};\\\\n// @ts-ignore\\\\nvar __MAIN_FILE_LOCATION__ = \\\\\\\"/DateTimeSlotPicker.stories.tsx\\\\\\\";\\\\n// @ts-ignore\\\\nvar __MODULE_DEPENDENCIES__ = [];\\\\n// @ts-ignore\\\\nvar __LOCAL_DEPENDENCIES__ = {};\\\\n// @ts-ignore\\\\nvar __IDS_TO_FRAMEWORKS__ = {};\\\\n        \\\\nimport React from 'react'\\\\nimport { path } from '..'\\\\nimport DateTimeSlotPicker from '.'\\\\nimport { object, withKnobs, boolean } from '@storybook/addon-knobs'\\\\nimport ThemeWrapper from '../../../utilities/components/ThemeWrapper'\\\\nimport Data from './Data'\\\\nimport TextInput from '../TextInput'\\\\nimport { IDateTimeSlotPickerChildren } from './interfaces'\\\\nimport { action } from '@storybook/addon-actions'\\\\n\\\\nexport default {parameters: {\\\\\\\"storySource\\\\\\\":{\\\\\\\"source\\\\\\\":\\\\\\\"import React from 'react'\\\\\\\\nimport { path } from '..'\\\\\\\\nimport DateTimeSlotPicker from '.'\\\\\\\\nimport { object, withKnobs, boolean } from '@storybook/addon-knobs'\\\\\\\\nimport ThemeWrapper from '../../../utilities/components/ThemeWrapper'\\\\\\\\nimport Data from './Data'\\\\\\\\nimport TextInput from '../TextInput'\\\\\\\\nimport { IDateTimeSlotPickerChildren } from './interfaces'\\\\\\\\nimport { action } from '@storybook/addon-actions'\\\\\\\\n\\\\\\\\nexport default {\\\\\\\\n  title: `${path}/DateTimeSlotPicker`,\\\\\\\\n  decorators: [withKnobs],\\\\\\\\n  component: DateTimeSlotPicker\\\\\\\\n}\\\\\\\\n\\\\\\\\nconst DropdownOption = [\\\\\\\\n  {\\\\\\\\n    id: 'units',\\\\\\\\n    label: 'Units',\\\\\\\\n    value: 'unit',\\\\\\\\n    availableSlotObjectKey: 'availableNumberOfItems',\\\\\\\\n    totalSlotObjectKey: 'totalNumberOfItems'\\\\\\\\n  },\\\\\\\\n  {\\\\\\\\n    id: 'weight',\\\\\\\\n    label: 'Weight',\\\\\\\\n    value: 'weight',\\\\\\\\n    availableSlotObjectKey: 'availableWeight',\\\\\\\\n    totalSlotObjectKey: 'totalWeight'\\\\\\\\n  },\\\\\\\\n  {\\\\\\\\n    id: 'volume',\\\\\\\\n    label: 'Volume',\\\\\\\\n    value: 'volume',\\\\\\\\n    availableSlotObjectKey: 'availableVolume',\\\\\\\\n    totalSlotObjectKey: 'totalVolume'\\\\\\\\n  },\\\\\\\\n  {\\\\\\\\n    id: 'stops',\\\\\\\\n    label: 'Stops',\\\\\\\\n    value: 'stop',\\\\\\\\n    availableSlotObjectKey: 'availableStops',\\\\\\\\n    totalSlotObjectKey: 'totalStops'\\\\\\\\n  }\\\\\\\\n]\\\\\\\\n\\\\\\\\nconst status = {\\\\\\\\n  available: {\\\\\\\\n    id: 'available',\\\\\\\\n    value: 'AVAILABLE',\\\\\\\\n    label: 'Suggested'\\\\\\\\n  },\\\\\\\\n  notAvailable: {\\\\\\\\n    id: 'notAvailable',\\\\\\\\n    value: 'FULL',\\\\\\\\n    label: 'Not Suggested'\\\\\\\\n  }\\\\\\\\n}\\\\\\\\n\\\\\\\\nexport const SlotPicker = () => {\\\\\\\\n  const todaysDate = new Date()\\\\\\\\n  return (\\\\\\\\n    <ThemeWrapper>\\\\\\\\n      <DateTimeSlotPicker\\\\\\\\n        title='Available Time Windows:'\\\\\\\\n        preferenceDropdownLabel='Prefrence By '\\\\\\\\n        isOpen={boolean('isOpen', false)}\\\\\\\\n        date={todaysDate}\\\\\\\\n        timeWindowPrefrenceDropdown={object(\\\\\\\\n          'timeWindowPrefrenceDropdown',\\\\\\\\n          DropdownOption\\\\\\\\n        )}\\\\\\\\n        status={object('status', status)}\\\\\\\\n        DateTimeSlots={object('DateTimeSlots', Data)}\\\\\\\\n        style={{\\\\\\\\n          position: 'absolute',\\\\\\\\n          top: 'auto',\\\\\\\\n          left: '0px'\\\\\\\\n        }}\\\\\\\\n        onChange={action('On Change')}\\\\\\\\n      >\\\\\\\\n        {({ value, open, setOpen }: IDateTimeSlotPickerChildren) => (\\\\\\\\n          <div\\\\\\\\n            onClick={() => {\\\\\\\\n              console.log(open)\\\\\\\\n              setOpen(!open)\\\\\\\\n            }}\\\\\\\\n          >\\\\\\\\n            <TextInput\\\\\\\\n              id='someId'\\\\\\\\n              name='someName'\\\\\\\\n              className='someClassname'\\\\\\\\n              placeholder='Please Click Here'\\\\\\\\n              variant='withIcon'\\\\\\\\n              iconVariant='calendar'\\\\\\\\n              iconSize='md'\\\\\\\\n              value={`${value ? value?.startTimeWindow : ''} - ${\\\\\\\\n                value ? value?.endTimeWindow : ''\\\\\\\\n              }`}\\\\\\\\n              readOnly\\\\\\\\n              iconStyle={{ padding: '9px 9px 9px 9px' }}\\\\\\\\n            />\\\\\\\\n          </div>\\\\\\\\n        )}\\\\\\\\n      </DateTimeSlotPicker>\\\\\\\\n    </ThemeWrapper>\\\\\\\\n  )\\\\\\\\n}\\\\\\\\n\\\\\\\",\\\\\\\"locationsMap\\\\\\\":{}},},\\\\n  title: `${path}/DateTimeSlotPicker`,\\\\n  decorators: [withKnobs],\\\\n  component: DateTimeSlotPicker\\\\n}\\\\n\\\\nconst DropdownOption = [\\\\n  {\\\\n    id: 'units',\\\\n    label: 'Units',\\\\n    value: 'unit',\\\\n    availableSlotObjectKey: 'availableNumberOfItems',\\\\n    totalSlotObjectKey: 'totalNumberOfItems'\\\\n  },\\\\n  {\\\\n    id: 'weight',\\\\n    label: 'Weight',\\\\n    value: 'weight',\\\\n    availableSlotObjectKey: 'availableWeight',\\\\n    totalSlotObjectKey: 'totalWeight'\\\\n  },\\\\n  {\\\\n    id: 'volume',\\\\n    label: 'Volume',\\\\n    value: 'volume',\\\\n    availableSlotObjectKey: 'availableVolume',\\\\n    totalSlotObjectKey: 'totalVolume'\\\\n  },\\\\n  {\\\\n    id: 'stops',\\\\n    label: 'Stops',\\\\n    value: 'stop',\\\\n    availableSlotObjectKey: 'availableStops',\\\\n    totalSlotObjectKey: 'totalStops'\\\\n  }\\\\n]\\\\n\\\\nconst status = {\\\\n  available: {\\\\n    id: 'available',\\\\n    value: 'AVAILABLE',\\\\n    label: 'Suggested'\\\\n  },\\\\n  notAvailable: {\\\\n    id: 'notAvailable',\\\\n    value: 'FULL',\\\\n    label: 'Not Suggested'\\\\n  }\\\\n}\\\\n\\\\nexport const SlotPicker = addSourceDecorator(() => {\\\\n  const todaysDate = new Date()\\\\n  return (\\\\n    <ThemeWrapper>\\\\n      <DateTimeSlotPicker\\\\n        title='Available Time Windows:'\\\\n        preferenceDropdownLabel='Prefrence By '\\\\n        isOpen={boolean('isOpen', false)}\\\\n        date={todaysDate}\\\\n        timeWindowPrefrenceDropdown={object(\\\\n          'timeWindowPrefrenceDropdown',\\\\n          DropdownOption\\\\n        )}\\\\n        status={object('status', status)}\\\\n        DateTimeSlots={object('DateTimeSlots', Data)}\\\\n        style={{\\\\n          position: 'absolute',\\\\n          top: 'auto',\\\\n          left: '0px'\\\\n        }}\\\\n        onChange={action('On Change')}\\\\n      >\\\\n        {({ value, open, setOpen }: IDateTimeSlotPickerChildren) => (\\\\n          <div\\\\n            onClick={() => {\\\\n              console.log(open)\\\\n              setOpen(!open)\\\\n            }}\\\\n          >\\\\n            <TextInput\\\\n              id='someId'\\\\n              name='someName'\\\\n              className='someClassname'\\\\n              placeholder='Please Click Here'\\\\n              variant='withIcon'\\\\n              iconVariant='calendar'\\\\n              iconSize='md'\\\\n              value={`${value ? value?.startTimeWindow : ''} - ${\\\\n                value ? value?.endTimeWindow : ''\\\\n              }`}\\\\n              readOnly\\\\n              iconStyle={{ padding: '9px 9px 9px 9px' }}\\\\n            />\\\\n          </div>\\\\n        )}\\\\n      </DateTimeSlotPicker>\\\\n    </ThemeWrapper>\\\\n  )\\\\n}, {__STORY__, __ADDS_MAP__,__MAIN_FILE_LOCATION__,__MODULE_DEPENDENCIES__,__LOCAL_DEPENDENCIES__,__SOURCE_PREFIX__,__IDS_TO_FRAMEWORKS__});\\\",\\\"locationsMap\\\":{}},\\\"storySource\\\":{\\\"source\\\":\\\"import React from 'react'\\\\nimport { path } from '..'\\\\nimport DateTimeSlotPicker from '.'\\\\nimport { object, withKnobs, boolean } from '@storybook/addon-knobs'\\\\nimport ThemeWrapper from '../../../utilities/components/ThemeWrapper'\\\\nimport Data from './Data'\\\\nimport TextInput from '../TextInput'\\\\nimport { IDateTimeSlotPickerChildren } from './interfaces'\\\\nimport { action } from '@storybook/addon-actions'\\\\n\\\\nexport default {\\\\n  title: `${path}/DateTimeSlotPicker`,\\\\n  decorators: [withKnobs],\\\\n  component: DateTimeSlotPicker\\\\n}\\\\n\\\\nconst DropdownOption = [\\\\n  {\\\\n    id: 'units',\\\\n    label: 'Units',\\\\n    value: 'unit',\\\\n    availableSlotObjectKey: 'availableNumberOfItems',\\\\n    totalSlotObjectKey: 'totalNumberOfItems'\\\\n  },\\\\n  {\\\\n    id: 'weight',\\\\n    label: 'Weight',\\\\n    value: 'weight',\\\\n    availableSlotObjectKey: 'availableWeight',\\\\n    totalSlotObjectKey: 'totalWeight'\\\\n  },\\\\n  {\\\\n    id: 'volume',\\\\n    label: 'Volume',\\\\n    value: 'volume',\\\\n    availableSlotObjectKey: 'availableVolume',\\\\n    totalSlotObjectKey: 'totalVolume'\\\\n  },\\\\n  {\\\\n    id: 'stops',\\\\n    label: 'Stops',\\\\n    value: 'stop',\\\\n    availableSlotObjectKey: 'availableStops',\\\\n    totalSlotObjectKey: 'totalStops'\\\\n  }\\\\n]\\\\n\\\\nconst status = {\\\\n  available: {\\\\n    id: 'available',\\\\n    value: 'AVAILABLE',\\\\n    label: 'Suggested'\\\\n  },\\\\n  notAvailable: {\\\\n    id: 'notAvailable',\\\\n    value: 'FULL',\\\\n    label: 'Not Suggested'\\\\n  }\\\\n}\\\\n\\\\nexport const SlotPicker = () => {\\\\n  const todaysDate = new Date()\\\\n  return (\\\\n    <ThemeWrapper>\\\\n      <DateTimeSlotPicker\\\\n        title='Available Time Windows:'\\\\n        preferenceDropdownLabel='Prefrence By '\\\\n        isOpen={boolean('isOpen', false)}\\\\n        date={todaysDate}\\\\n        timeWindowPrefrenceDropdown={object(\\\\n          'timeWindowPrefrenceDropdown',\\\\n          DropdownOption\\\\n        )}\\\\n        status={object('status', status)}\\\\n        DateTimeSlots={object('DateTimeSlots', Data)}\\\\n        style={{\\\\n          position: 'absolute',\\\\n          top: 'auto',\\\\n          left: '0px'\\\\n        }}\\\\n        onChange={action('On Change')}\\\\n      >\\\\n        {({ value, open, setOpen }: IDateTimeSlotPickerChildren) => (\\\\n          <div\\\\n            onClick={() => {\\\\n              console.log(open)\\\\n              setOpen(!open)\\\\n            }}\\\\n          >\\\\n            <TextInput\\\\n              id='someId'\\\\n              name='someName'\\\\n              className='someClassname'\\\\n              placeholder='Please Click Here'\\\\n              variant='withIcon'\\\\n              iconVariant='calendar'\\\\n              iconSize='md'\\\\n              value={`${value ? value?.startTimeWindow : ''} - ${\\\\n                value ? value?.endTimeWindow : ''\\\\n              }`}\\\\n              readOnly\\\\n              iconStyle={{ padding: '9px 9px 9px 9px' }}\\\\n            />\\\\n          </div>\\\\n        )}\\\\n      </DateTimeSlotPicker>\\\\n    </ThemeWrapper>\\\\n  )\\\\n}\\\\n\\\",\\\"locationsMap\\\":{}},},\\n  title: `${path}/DateTimeSlotPicker`,\\n  decorators: [withKnobs],\\n  component: DateTimeSlotPicker\\n}\\n\\nconst DropdownOption = [\\n  {\\n    id: 'units',\\n    label: 'Units',\\n    value: 'unit',\\n    availableSlotObjectKey: 'availableNumberOfItems',\\n    totalSlotObjectKey: 'totalNumberOfItems'\\n  },\\n  {\\n    id: 'weight',\\n    label: 'Weight',\\n    value: 'weight',\\n    availableSlotObjectKey: 'availableWeight',\\n    totalSlotObjectKey: 'totalWeight'\\n  },\\n  {\\n    id: 'volume',\\n    label: 'Volume',\\n    value: 'volume',\\n    availableSlotObjectKey: 'availableVolume',\\n    totalSlotObjectKey: 'totalVolume'\\n  },\\n  {\\n    id: 'stops',\\n    label: 'Stops',\\n    value: 'stop',\\n    availableSlotObjectKey: 'availableStops',\\n    totalSlotObjectKey: 'totalStops'\\n  }\\n]\\n\\nconst status = {\\n  available: {\\n    id: 'available',\\n    value: 'AVAILABLE',\\n    label: 'Suggested'\\n  },\\n  notAvailable: {\\n    id: 'notAvailable',\\n    value: 'FULL',\\n    label: 'Not Suggested'\\n  }\\n}\\n\\nexport const SlotPicker = addSourceDecorator(addSourceDecorator(() => {\\n  const todaysDate = new Date()\\n  return (\\n    <ThemeWrapper>\\n      <DateTimeSlotPicker\\n        title='Available Time Windows:'\\n        preferenceDropdownLabel='Prefrence By '\\n        isOpen={boolean('isOpen', false)}\\n        date={todaysDate}\\n        timeWindowPrefrenceDropdown={object(\\n          'timeWindowPrefrenceDropdown',\\n          DropdownOption\\n        )}\\n        status={object('status', status)}\\n        DateTimeSlots={object('DateTimeSlots', Data)}\\n        style={{\\n          position: 'absolute',\\n          top: 'auto',\\n          left: '0px'\\n        }}\\n        onChange={action('On Change')}\\n      >\\n        {({ value, open, setOpen }: IDateTimeSlotPickerChildren) => (\\n          <div\\n            onClick={() => {\\n              console.log(open)\\n              setOpen(!open)\\n            }}\\n          >\\n            <TextInput\\n              id='someId'\\n              name='someName'\\n              className='someClassname'\\n              placeholder='Please Click Here'\\n              variant='withIcon'\\n              iconVariant='calendar'\\n              iconSize='md'\\n              value={`${value ? value?.startTimeWindow : ''} - ${\\n                value ? value?.endTimeWindow : ''\\n              }`}\\n              readOnly\\n              iconStyle={{ padding: '9px 9px 9px 9px' }}\\n            />\\n          </div>\\n        )}\\n      </DateTimeSlotPicker>\\n    </ThemeWrapper>\\n  )\\n}, {__STORY__, __ADDS_MAP__,__MAIN_FILE_LOCATION__,__MODULE_DEPENDENCIES__,__LOCAL_DEPENDENCIES__,__SOURCE_PREFIX__,__IDS_TO_FRAMEWORKS__}), {__STORY__, __ADDS_MAP__,__MAIN_FILE_LOCATION__,__MODULE_DEPENDENCIES__,__LOCAL_DEPENDENCIES__,__SOURCE_PREFIX__,__IDS_TO_FRAMEWORKS__});\",\n      \"locationsMap\": {}\n    }\n  }, _defineProperty(_parameters, \"storySource\", {\n    \"source\": \"\\n\\n// @ts-nocheck\\n// @ts-ignore\\nvar withSourceLoader = require('@storybook/source-loader/preview').withSource;\\n// @ts-ignore\\nvar addSourceDecorator = require(\\\"@storybook/source-loader/preview\\\").addSource;\\n// @ts-ignore\\nvar __SOURCE_PREFIX__ = \\\"/Users/farhanansari/Desktop/CODE/PrxProject/untitled folder/reactStoryBook/src/components/molecules/DateTimeSlotPicker\\\";\\n// @ts-ignore\\nvar __STORY__ = \\\"import React from 'react'\\\\nimport { path } from '..'\\\\nimport DateTimeSlotPicker from '.'\\\\nimport { object, withKnobs, boolean } from '@storybook/addon-knobs'\\\\nimport ThemeWrapper from '../../../utilities/components/ThemeWrapper'\\\\nimport Data from './Data'\\\\nimport TextInput from '../TextInput'\\\\nimport { IDateTimeSlotPickerChildren } from './interfaces'\\\\nimport { action } from '@storybook/addon-actions'\\\\n\\\\nexport default {\\\\n  title: `${path}/DateTimeSlotPicker`,\\\\n  decorators: [withKnobs],\\\\n  component: DateTimeSlotPicker\\\\n}\\\\n\\\\nconst DropdownOption = [\\\\n  {\\\\n    id: 'units',\\\\n    label: 'Units',\\\\n    value: 'unit',\\\\n    availableSlotObjectKey: 'availableNumberOfItems',\\\\n    totalSlotObjectKey: 'totalNumberOfItems'\\\\n  },\\\\n  {\\\\n    id: 'weight',\\\\n    label: 'Weight',\\\\n    value: 'weight',\\\\n    availableSlotObjectKey: 'availableWeight',\\\\n    totalSlotObjectKey: 'totalWeight'\\\\n  },\\\\n  {\\\\n    id: 'volume',\\\\n    label: 'Volume',\\\\n    value: 'volume',\\\\n    availableSlotObjectKey: 'availableVolume',\\\\n    totalSlotObjectKey: 'totalVolume'\\\\n  },\\\\n  {\\\\n    id: 'stops',\\\\n    label: 'Stops',\\\\n    value: 'stop',\\\\n    availableSlotObjectKey: 'availableStops',\\\\n    totalSlotObjectKey: 'totalStops'\\\\n  }\\\\n]\\\\n\\\\nconst status = {\\\\n  available: {\\\\n    id: 'available',\\\\n    value: 'AVAILABLE',\\\\n    label: 'Suggested'\\\\n  },\\\\n  notAvailable: {\\\\n    id: 'notAvailable',\\\\n    value: 'FULL',\\\\n    label: 'Not Suggested'\\\\n  }\\\\n}\\\\n\\\\nexport const SlotPicker = () => {\\\\n  const todaysDate = new Date()\\\\n  return (\\\\n    <ThemeWrapper>\\\\n      <DateTimeSlotPicker\\\\n        title='Available Time Windows:'\\\\n        preferenceDropdownLabel='Prefrence By '\\\\n        isOpen={boolean('isOpen', false)}\\\\n        date={todaysDate}\\\\n        timeWindowPrefrenceDropdown={object(\\\\n          'timeWindowPrefrenceDropdown',\\\\n          DropdownOption\\\\n        )}\\\\n        status={object('status', status)}\\\\n        DateTimeSlots={object('DateTimeSlots', Data)}\\\\n        style={{\\\\n          position: 'absolute',\\\\n          top: 'auto',\\\\n          left: '0px'\\\\n        }}\\\\n        onChange={action('On Change')}\\\\n      >\\\\n        {({ value, open, setOpen }: IDateTimeSlotPickerChildren) => (\\\\n          <div\\\\n            onClick={() => {\\\\n              console.log(open)\\\\n              setOpen(!open)\\\\n            }}\\\\n          >\\\\n            <TextInput\\\\n              id='someId'\\\\n              name='someName'\\\\n              className='someClassname'\\\\n              placeholder='Please Click Here'\\\\n              variant='withIcon'\\\\n              iconVariant='calendar'\\\\n              iconSize='md'\\\\n              value={`${value ? value?.startTimeWindow : ''} - ${\\\\n                value ? value?.endTimeWindow : ''\\\\n              }`}\\\\n              readOnly\\\\n              iconStyle={{ padding: '9px 9px 9px 9px' }}\\\\n            />\\\\n          </div>\\\\n        )}\\\\n      </DateTimeSlotPicker>\\\\n    </ThemeWrapper>\\\\n  )\\\\n}\\\\n\\\";\\n// @ts-ignore\\nvar __ADDS_MAP__ = {};\\n// @ts-ignore\\nvar __MAIN_FILE_LOCATION__ = \\\"/DateTimeSlotPicker.stories.tsx\\\";\\n// @ts-ignore\\nvar __MODULE_DEPENDENCIES__ = [];\\n// @ts-ignore\\nvar __LOCAL_DEPENDENCIES__ = {};\\n// @ts-ignore\\nvar __IDS_TO_FRAMEWORKS__ = {};\\n        \\nimport React from 'react'\\nimport { path } from '..'\\nimport DateTimeSlotPicker from '.'\\nimport { object, withKnobs, boolean } from '@storybook/addon-knobs'\\nimport ThemeWrapper from '../../../utilities/components/ThemeWrapper'\\nimport Data from './Data'\\nimport TextInput from '../TextInput'\\nimport { IDateTimeSlotPickerChildren } from './interfaces'\\nimport { action } from '@storybook/addon-actions'\\n\\nexport default {parameters: {\\\"storySource\\\":{\\\"source\\\":\\\"import React from 'react'\\\\nimport { path } from '..'\\\\nimport DateTimeSlotPicker from '.'\\\\nimport { object, withKnobs, boolean } from '@storybook/addon-knobs'\\\\nimport ThemeWrapper from '../../../utilities/components/ThemeWrapper'\\\\nimport Data from './Data'\\\\nimport TextInput from '../TextInput'\\\\nimport { IDateTimeSlotPickerChildren } from './interfaces'\\\\nimport { action } from '@storybook/addon-actions'\\\\n\\\\nexport default {\\\\n  title: `${path}/DateTimeSlotPicker`,\\\\n  decorators: [withKnobs],\\\\n  component: DateTimeSlotPicker\\\\n}\\\\n\\\\nconst DropdownOption = [\\\\n  {\\\\n    id: 'units',\\\\n    label: 'Units',\\\\n    value: 'unit',\\\\n    availableSlotObjectKey: 'availableNumberOfItems',\\\\n    totalSlotObjectKey: 'totalNumberOfItems'\\\\n  },\\\\n  {\\\\n    id: 'weight',\\\\n    label: 'Weight',\\\\n    value: 'weight',\\\\n    availableSlotObjectKey: 'availableWeight',\\\\n    totalSlotObjectKey: 'totalWeight'\\\\n  },\\\\n  {\\\\n    id: 'volume',\\\\n    label: 'Volume',\\\\n    value: 'volume',\\\\n    availableSlotObjectKey: 'availableVolume',\\\\n    totalSlotObjectKey: 'totalVolume'\\\\n  },\\\\n  {\\\\n    id: 'stops',\\\\n    label: 'Stops',\\\\n    value: 'stop',\\\\n    availableSlotObjectKey: 'availableStops',\\\\n    totalSlotObjectKey: 'totalStops'\\\\n  }\\\\n]\\\\n\\\\nconst status = {\\\\n  available: {\\\\n    id: 'available',\\\\n    value: 'AVAILABLE',\\\\n    label: 'Suggested'\\\\n  },\\\\n  notAvailable: {\\\\n    id: 'notAvailable',\\\\n    value: 'FULL',\\\\n    label: 'Not Suggested'\\\\n  }\\\\n}\\\\n\\\\nexport const SlotPicker = () => {\\\\n  const todaysDate = new Date()\\\\n  return (\\\\n    <ThemeWrapper>\\\\n      <DateTimeSlotPicker\\\\n        title='Available Time Windows:'\\\\n        preferenceDropdownLabel='Prefrence By '\\\\n        isOpen={boolean('isOpen', false)}\\\\n        date={todaysDate}\\\\n        timeWindowPrefrenceDropdown={object(\\\\n          'timeWindowPrefrenceDropdown',\\\\n          DropdownOption\\\\n        )}\\\\n        status={object('status', status)}\\\\n        DateTimeSlots={object('DateTimeSlots', Data)}\\\\n        style={{\\\\n          position: 'absolute',\\\\n          top: 'auto',\\\\n          left: '0px'\\\\n        }}\\\\n        onChange={action('On Change')}\\\\n      >\\\\n        {({ value, open, setOpen }: IDateTimeSlotPickerChildren) => (\\\\n          <div\\\\n            onClick={() => {\\\\n              console.log(open)\\\\n              setOpen(!open)\\\\n            }}\\\\n          >\\\\n            <TextInput\\\\n              id='someId'\\\\n              name='someName'\\\\n              className='someClassname'\\\\n              placeholder='Please Click Here'\\\\n              variant='withIcon'\\\\n              iconVariant='calendar'\\\\n              iconSize='md'\\\\n              value={`${value ? value?.startTimeWindow : ''} - ${\\\\n                value ? value?.endTimeWindow : ''\\\\n              }`}\\\\n              readOnly\\\\n              iconStyle={{ padding: '9px 9px 9px 9px' }}\\\\n            />\\\\n          </div>\\\\n        )}\\\\n      </DateTimeSlotPicker>\\\\n    </ThemeWrapper>\\\\n  )\\\\n}\\\\n\\\",\\\"locationsMap\\\":{}},},\\n  title: `${path}/DateTimeSlotPicker`,\\n  decorators: [withKnobs],\\n  component: DateTimeSlotPicker\\n}\\n\\nconst DropdownOption = [\\n  {\\n    id: 'units',\\n    label: 'Units',\\n    value: 'unit',\\n    availableSlotObjectKey: 'availableNumberOfItems',\\n    totalSlotObjectKey: 'totalNumberOfItems'\\n  },\\n  {\\n    id: 'weight',\\n    label: 'Weight',\\n    value: 'weight',\\n    availableSlotObjectKey: 'availableWeight',\\n    totalSlotObjectKey: 'totalWeight'\\n  },\\n  {\\n    id: 'volume',\\n    label: 'Volume',\\n    value: 'volume',\\n    availableSlotObjectKey: 'availableVolume',\\n    totalSlotObjectKey: 'totalVolume'\\n  },\\n  {\\n    id: 'stops',\\n    label: 'Stops',\\n    value: 'stop',\\n    availableSlotObjectKey: 'availableStops',\\n    totalSlotObjectKey: 'totalStops'\\n  }\\n]\\n\\nconst status = {\\n  available: {\\n    id: 'available',\\n    value: 'AVAILABLE',\\n    label: 'Suggested'\\n  },\\n  notAvailable: {\\n    id: 'notAvailable',\\n    value: 'FULL',\\n    label: 'Not Suggested'\\n  }\\n}\\n\\nexport const SlotPicker = addSourceDecorator(() => {\\n  const todaysDate = new Date()\\n  return (\\n    <ThemeWrapper>\\n      <DateTimeSlotPicker\\n        title='Available Time Windows:'\\n        preferenceDropdownLabel='Prefrence By '\\n        isOpen={boolean('isOpen', false)}\\n        date={todaysDate}\\n        timeWindowPrefrenceDropdown={object(\\n          'timeWindowPrefrenceDropdown',\\n          DropdownOption\\n        )}\\n        status={object('status', status)}\\n        DateTimeSlots={object('DateTimeSlots', Data)}\\n        style={{\\n          position: 'absolute',\\n          top: 'auto',\\n          left: '0px'\\n        }}\\n        onChange={action('On Change')}\\n      >\\n        {({ value, open, setOpen }: IDateTimeSlotPickerChildren) => (\\n          <div\\n            onClick={() => {\\n              console.log(open)\\n              setOpen(!open)\\n            }}\\n          >\\n            <TextInput\\n              id='someId'\\n              name='someName'\\n              className='someClassname'\\n              placeholder='Please Click Here'\\n              variant='withIcon'\\n              iconVariant='calendar'\\n              iconSize='md'\\n              value={`${value ? value?.startTimeWindow : ''} - ${\\n                value ? value?.endTimeWindow : ''\\n              }`}\\n              readOnly\\n              iconStyle={{ padding: '9px 9px 9px 9px' }}\\n            />\\n          </div>\\n        )}\\n      </DateTimeSlotPicker>\\n    </ThemeWrapper>\\n  )\\n}, {__STORY__, __ADDS_MAP__,__MAIN_FILE_LOCATION__,__MODULE_DEPENDENCIES__,__LOCAL_DEPENDENCIES__,__SOURCE_PREFIX__,__IDS_TO_FRAMEWORKS__});\",\n    \"locationsMap\": {}\n  }), _defineProperty(_parameters, \"storySource\", {\n    \"source\": \"import React from 'react'\\nimport { path } from '..'\\nimport DateTimeSlotPicker from '.'\\nimport { object, withKnobs, boolean } from '@storybook/addon-knobs'\\nimport ThemeWrapper from '../../../utilities/components/ThemeWrapper'\\nimport Data from './Data'\\nimport TextInput from '../TextInput'\\nimport { IDateTimeSlotPickerChildren } from './interfaces'\\nimport { action } from '@storybook/addon-actions'\\n\\nexport default {\\n  title: `${path}/DateTimeSlotPicker`,\\n  decorators: [withKnobs],\\n  component: DateTimeSlotPicker\\n}\\n\\nconst DropdownOption = [\\n  {\\n    id: 'units',\\n    label: 'Units',\\n    value: 'unit',\\n    availableSlotObjectKey: 'availableNumberOfItems',\\n    totalSlotObjectKey: 'totalNumberOfItems'\\n  },\\n  {\\n    id: 'weight',\\n    label: 'Weight',\\n    value: 'weight',\\n    availableSlotObjectKey: 'availableWeight',\\n    totalSlotObjectKey: 'totalWeight'\\n  },\\n  {\\n    id: 'volume',\\n    label: 'Volume',\\n    value: 'volume',\\n    availableSlotObjectKey: 'availableVolume',\\n    totalSlotObjectKey: 'totalVolume'\\n  },\\n  {\\n    id: 'stops',\\n    label: 'Stops',\\n    value: 'stop',\\n    availableSlotObjectKey: 'availableStops',\\n    totalSlotObjectKey: 'totalStops'\\n  }\\n]\\n\\nconst status = {\\n  available: {\\n    id: 'available',\\n    value: 'AVAILABLE',\\n    label: 'Suggested'\\n  },\\n  notAvailable: {\\n    id: 'notAvailable',\\n    value: 'FULL',\\n    label: 'Not Suggested'\\n  }\\n}\\n\\nexport const SlotPicker = () => {\\n  const todaysDate = new Date()\\n  return (\\n    <ThemeWrapper>\\n      <DateTimeSlotPicker\\n        title='Available Time Windows:'\\n        preferenceDropdownLabel='Prefrence By '\\n        isOpen={boolean('isOpen', false)}\\n        date={todaysDate}\\n        timeWindowPrefrenceDropdown={object(\\n          'timeWindowPrefrenceDropdown',\\n          DropdownOption\\n        )}\\n        status={object('status', status)}\\n        DateTimeSlots={object('DateTimeSlots', Data)}\\n        style={{\\n          position: 'absolute',\\n          top: 'auto',\\n          left: '0px'\\n        }}\\n        onChange={action('On Change')}\\n      >\\n        {({ value, open, setOpen }: IDateTimeSlotPickerChildren) => (\\n          <div\\n            onClick={() => {\\n              console.log(open)\\n              setOpen(!open)\\n            }}\\n          >\\n            <TextInput\\n              id='someId'\\n              name='someName'\\n              className='someClassname'\\n              placeholder='Please Click Here'\\n              variant='withIcon'\\n              iconVariant='calendar'\\n              iconSize='md'\\n              value={`${value ? value?.startTimeWindow : ''} - ${\\n                value ? value?.endTimeWindow : ''\\n              }`}\\n              readOnly\\n              iconStyle={{ padding: '9px 9px 9px 9px' }}\\n            />\\n          </div>\\n        )}\\n      </DateTimeSlotPicker>\\n    </ThemeWrapper>\\n  )\\n}\\n\",\n    \"locationsMap\": {}\n  }), _parameters),\n  title: path + \"/DateTimeSlotPicker\",\n  decorators: [withKnobs],\n  component: DateTimeSlotPicker\n};\nvar DropdownOption = [{\n  id: 'units',\n  label: 'Units',\n  value: 'unit',\n  availableSlotObjectKey: 'availableNumberOfItems',\n  totalSlotObjectKey: 'totalNumberOfItems'\n}, {\n  id: 'weight',\n  label: 'Weight',\n  value: 'weight',\n  availableSlotObjectKey: 'availableWeight',\n  totalSlotObjectKey: 'totalWeight'\n}, {\n  id: 'volume',\n  label: 'Volume',\n  value: 'volume',\n  availableSlotObjectKey: 'availableVolume',\n  totalSlotObjectKey: 'totalVolume'\n}, {\n  id: 'stops',\n  label: 'Stops',\n  value: 'stop',\n  availableSlotObjectKey: 'availableStops',\n  totalSlotObjectKey: 'totalStops'\n}];\nvar status = {\n  available: {\n    id: 'available',\n    value: 'AVAILABLE',\n    label: 'Suggested'\n  },\n  notAvailable: {\n    id: 'notAvailable',\n    value: 'FULL',\n    label: 'Not Suggested'\n  }\n};\nexport var SlotPicker = addSourceDecorator(addSourceDecorator(addSourceDecorator(function () {\n  var todaysDate = new Date();\n  return React.createElement(ThemeWrapper, null, React.createElement(DateTimeSlotPicker, {\n    title: 'Available Time Windows:',\n    preferenceDropdownLabel: 'Prefrence By ',\n    isOpen: _boolean('isOpen', false),\n    date: todaysDate,\n    timeWindowPrefrenceDropdown: object('timeWindowPrefrenceDropdown', DropdownOption),\n    status: object('status', status),\n    DateTimeSlots: object('DateTimeSlots', Data),\n    style: {\n      position: 'absolute',\n      top: 'auto',\n      left: '0px'\n    },\n    onChange: action('On Change')\n  }, function (_a) {\n    var value = _a.value,\n        open = _a.open,\n        setOpen = _a.setOpen;\n    return React.createElement(\"div\", {\n      onClick: function onClick() {\n        console.log(open);\n        setOpen(!open);\n      }\n    }, React.createElement(TextInput, {\n      id: 'someId',\n      name: 'someName',\n      className: 'someClassname',\n      placeholder: 'Please Click Here',\n      variant: 'withIcon',\n      iconVariant: 'calendar',\n      iconSize: 'md',\n      value: (value ? value === null || value === void 0 ? void 0 : value.startTimeWindow : '') + \" - \" + (value ? value === null || value === void 0 ? void 0 : value.endTimeWindow : ''),\n      readOnly: true,\n      iconStyle: {\n        padding: '9px 9px 9px 9px'\n      }\n    }));\n  }));\n}, {\n  __STORY__: __STORY__,\n  __ADDS_MAP__: __ADDS_MAP__,\n  __MAIN_FILE_LOCATION__: __MAIN_FILE_LOCATION__,\n  __MODULE_DEPENDENCIES__: __MODULE_DEPENDENCIES__,\n  __LOCAL_DEPENDENCIES__: __LOCAL_DEPENDENCIES__,\n  __SOURCE_PREFIX__: __SOURCE_PREFIX__,\n  __IDS_TO_FRAMEWORKS__: __IDS_TO_FRAMEWORKS__\n}), {\n  __STORY__: __STORY__,\n  __ADDS_MAP__: __ADDS_MAP__,\n  __MAIN_FILE_LOCATION__: __MAIN_FILE_LOCATION__,\n  __MODULE_DEPENDENCIES__: __MODULE_DEPENDENCIES__,\n  __LOCAL_DEPENDENCIES__: __LOCAL_DEPENDENCIES__,\n  __SOURCE_PREFIX__: __SOURCE_PREFIX__,\n  __IDS_TO_FRAMEWORKS__: __IDS_TO_FRAMEWORKS__\n}), {\n  __STORY__: __STORY__,\n  __ADDS_MAP__: __ADDS_MAP__,\n  __MAIN_FILE_LOCATION__: __MAIN_FILE_LOCATION__,\n  __MODULE_DEPENDENCIES__: __MODULE_DEPENDENCIES__,\n  __LOCAL_DEPENDENCIES__: __LOCAL_DEPENDENCIES__,\n  __SOURCE_PREFIX__: __SOURCE_PREFIX__,\n  __IDS_TO_FRAMEWORKS__: __IDS_TO_FRAMEWORKS__\n});","map":{"version":3,"sources":["/Users/farhanansari/Desktop/CODE/PrxProject/untitled folder/reactStoryBook/node_modules/react-docgen-typescript-loader/dist/index.js!/Users/farhanansari/Desktop/CODE/PrxProject/untitled folder/reactStoryBook/node_modules/eslint-loader/dist/cjs.js??ref--6-0!/Users/farhanansari/Desktop/CODE/PrxProject/untitled folder/reactStoryBook/node_modules/@storybook/source-loader/dist/server/index.js??ref--11!/Users/farhanansari/Desktop/CODE/PrxProject/untitled folder/reactStoryBook/node_modules/@storybook/source-loader/dist/server/index.js!/Users/farhanansari/Desktop/CODE/PrxProject/untitled folder/reactStoryBook/node_modules/@storybook/source-loader/dist/server/index.js!/Users/farhanansari/Desktop/CODE/PrxProject/untitled folder/reactStoryBook/src/components/molecules/DateTimeSlotPicker/DateTimeSlotPicker.stories.tsx"],"names":[],"mappings":";;;;AACA;AACA;AACA;AACA,IAAI,gBAAgB,GAAG,OAAO,CAAC,kCAAD,CAAP,CAA4C,UAAnE,C,CACA;;;AACA,IAAI,kBAAkB,GAAG,OAAO,CAAC,kCAAD,CAAP,CAA4C,SAArE,C,CACA;;;AACA,IAAI,iBAAiB,GAAG,wHAAxB,C,CACA;;AACA,IAAI,SAAS,GAAG,s19BAAhB,C,CACA;;AACA,IAAI,YAAY,GAAG,EAAnB,C,CACA;;AACA,IAAI,sBAAsB,GAAG,iCAA7B,C,CACA;;AACA,IAAI,uBAAuB,GAAG,EAA9B,C,CACA;;AACA,IAAI,sBAAsB,GAAG,EAA7B,C,CACA;;AACA,IAAI,qBAAqB,GAAG,EAA5B;AAGA;AACA;AACA;;AACA,IAAI,gBAAgB,GAAG,OAAO,CAAC,kCAAD,CAAP,CAA4C,UAAnE,C,CACA;;;AACA,IAAI,kBAAkB,GAAG,OAAO,CAAC,kCAAD,CAAP,CAA4C,SAArE,C,CACA;;;AACA,IAAI,iBAAiB,GAAG,wHAAxB,C,CACA;;AACA,IAAI,SAAS,GAAG,kmTAAhB,C,CACA;;AACA,IAAI,YAAY,GAAG,EAAnB,C,CACA;;AACA,IAAI,sBAAsB,GAAG,iCAA7B,C,CACA;;AACA,IAAI,uBAAuB,GAAG,EAA9B,C,CACA;;AACA,IAAI,sBAAsB,GAAG,EAA7B,C,CACA;;AACA,IAAI,qBAAqB,GAAG,EAA5B;AAGA;AACA;AACA;;AACA,IAAI,gBAAgB,GAAG,OAAO,CAAC,kCAAD,CAAP,CAA4C,UAAnE,C,CACA;;;AACA,IAAI,kBAAkB,GAAG,OAAO,CAAC,kCAAD,CAAP,CAA4C,SAArE,C,CACA;;;AACA,IAAI,iBAAiB,GAAG,wHAAxB,C,CACA;;AACA,IAAI,SAAS,GAAG,k1FAAhB,C,CACA;;AACA,IAAI,YAAY,GAAG,EAAnB,C,CACA;;AACA,IAAI,sBAAsB,GAAG,iCAA7B,C,CACA;;AACA,IAAI,uBAAuB,GAAG,EAA9B,C,CACA;;AACA,IAAI,sBAAsB,GAAG,EAA7B,C,CACA;;AACA,IAAI,qBAAqB,GAAG,EAA5B;AAEA,OAAO,KAAP,MAAkB,OAAlB;AACA,SAAS,IAAT,QAAqB,IAArB;AACA,OAAO,kBAAP,MAA+B,GAA/B;AACA,SAAS,MAAT,EAAiB,SAAjB,EAA4B,OAAO,IAAP,QAA5B,QAA2C,wBAA3C;AACA,OAAO,YAAP,MAAyB,4CAAzB;AACA,OAAO,IAAP,MAAiB,QAAjB;AACA,OAAO,SAAP,MAAsB,cAAtB;AAEA,SAAS,MAAT,QAAuB,0BAAvB;AAEA,eAAe;AAAC,EAAA,UAAU;AAAG,mBAAc;AAAC,gBAAS,s19BAAV;AAAi29B,sBAAe;AAAh39B;AAAjB,iDAAm59B;AAAC,cAAS,kmTAAV;AAA6mT,oBAAe;AAA5nT,GAAn59B,+CAAiixC;AAAC,cAAS,k1FAAV;AAA61F,oBAAe;AAA52F,GAAjixC,eAAX;AACb,EAAA,KAAK,EAAK,IAAI,GAAA,qBADD;AAEb,EAAA,UAAU,EAAE,CAAC,SAAD,CAFC;AAGb,EAAA,SAAS,EAAE;AAHE,CAAf;AAMA,IAAM,cAAc,GAAG,CACrB;AACE,EAAA,EAAE,EAAE,OADN;AAEE,EAAA,KAAK,EAAE,OAFT;AAGE,EAAA,KAAK,EAAE,MAHT;AAIE,EAAA,sBAAsB,EAAE,wBAJ1B;AAKE,EAAA,kBAAkB,EAAE;AALtB,CADqB,EAQrB;AACE,EAAA,EAAE,EAAE,QADN;AAEE,EAAA,KAAK,EAAE,QAFT;AAGE,EAAA,KAAK,EAAE,QAHT;AAIE,EAAA,sBAAsB,EAAE,iBAJ1B;AAKE,EAAA,kBAAkB,EAAE;AALtB,CARqB,EAerB;AACE,EAAA,EAAE,EAAE,QADN;AAEE,EAAA,KAAK,EAAE,QAFT;AAGE,EAAA,KAAK,EAAE,QAHT;AAIE,EAAA,sBAAsB,EAAE,iBAJ1B;AAKE,EAAA,kBAAkB,EAAE;AALtB,CAfqB,EAsBrB;AACE,EAAA,EAAE,EAAE,OADN;AAEE,EAAA,KAAK,EAAE,OAFT;AAGE,EAAA,KAAK,EAAE,MAHT;AAIE,EAAA,sBAAsB,EAAE,gBAJ1B;AAKE,EAAA,kBAAkB,EAAE;AALtB,CAtBqB,CAAvB;AA+BA,IAAM,MAAM,GAAG;AACb,EAAA,SAAS,EAAE;AACT,IAAA,EAAE,EAAE,WADK;AAET,IAAA,KAAK,EAAE,WAFE;AAGT,IAAA,KAAK,EAAE;AAHE,GADE;AAMb,EAAA,YAAY,EAAE;AACZ,IAAA,EAAE,EAAE,cADQ;AAEZ,IAAA,KAAK,EAAE,MAFK;AAGZ,IAAA,KAAK,EAAE;AAHK;AAND,CAAf;AAaA,OAAO,IAAM,UAAU,GAAG,kBAAkB,CAAC,kBAAkB,CAAC,kBAAkB,CAAC,YAAA;AACjF,MAAM,UAAU,GAAG,IAAI,IAAJ,EAAnB;AACA,SACE,KAAA,CAAA,aAAA,CAAC,YAAD,EAAa,IAAb,EACE,KAAA,CAAA,aAAA,CAAC,kBAAD,EAAmB;AACjB,IAAA,KAAK,EAAC,yBADW;AAEjB,IAAA,uBAAuB,EAAC,eAFP;AAGjB,IAAA,MAAM,EAAE,QAAO,CAAC,QAAD,EAAW,KAAX,CAHE;AAIjB,IAAA,IAAI,EAAE,UAJW;AAKjB,IAAA,2BAA2B,EAAE,MAAM,CACjC,6BADiC,EAEjC,cAFiC,CALlB;AASjB,IAAA,MAAM,EAAE,MAAM,CAAC,QAAD,EAAW,MAAX,CATG;AAUjB,IAAA,aAAa,EAAE,MAAM,CAAC,eAAD,EAAkB,IAAlB,CAVJ;AAWjB,IAAA,KAAK,EAAE;AACL,MAAA,QAAQ,EAAE,UADL;AAEL,MAAA,GAAG,EAAE,MAFA;AAGL,MAAA,IAAI,EAAE;AAHD,KAXU;AAgBjB,IAAA,QAAQ,EAAE,MAAM,CAAC,WAAD;AAhBC,GAAnB,EAkBG,UAAC,EAAD,EAAsD;QAAnD,KAAK,GAAA,EAAA,CAAA,K;QAAE,IAAI,GAAA,EAAA,CAAA,I;QAAE,OAAO,GAAA,EAAA,CAAA,O;AAAoC,WAC1D,KAAA,CAAA,aAAA,CAAA,KAAA,EAAA;AACE,MAAA,OAAO,EAAE,mBAAA;AACP,QAAA,OAAO,CAAC,GAAR,CAAY,IAAZ;AACA,QAAA,OAAO,CAAC,CAAC,IAAF,CAAP;AACD;AAJH,KAAA,EAME,KAAA,CAAA,aAAA,CAAC,SAAD,EAAU;AACR,MAAA,EAAE,EAAC,QADK;AAER,MAAA,IAAI,EAAC,UAFG;AAGR,MAAA,SAAS,EAAC,eAHF;AAIR,MAAA,WAAW,EAAC,mBAJJ;AAKR,MAAA,OAAO,EAAC,UALA;AAMR,MAAA,WAAW,EAAC,UANJ;AAOR,MAAA,QAAQ,EAAC,IAPD;AAQR,MAAA,KAAK,EAAE,CAAG,KAAK,GAAG,KAAK,KAAA,IAAL,IAAA,KAAK,KAAA,KAAA,CAAL,GAAK,KAAA,CAAL,GAAA,KAAK,CAAE,eAAV,GAA4B,EAApC,IAAsC,KAAtC,IACL,KAAK,GAAG,KAAK,KAAA,IAAL,IAAA,KAAK,KAAA,KAAA,CAAL,GAAK,KAAA,CAAL,GAAA,KAAK,CAAE,aAAV,GAA0B,EAD1B,CARC;AAWR,MAAA,QAAQ,EAAA,IAXA;AAYR,MAAA,SAAS,EAAE;AAAE,QAAA,OAAO,EAAE;AAAX;AAZH,KAAV,CANF,CAD0D;AAsB3D,GAxCH,CADF,CADF;AA8CD,CAhDiF,EAgD/E;AAAC,EAAA,SAAS,EAAA,SAAV;AAAY,EAAA,YAAY,EAAA,YAAxB;AAAyB,EAAA,sBAAsB,EAAA,sBAA/C;AAAgD,EAAA,uBAAuB,EAAA,uBAAvE;AAAwE,EAAA,sBAAsB,EAAA,sBAA9F;AAA+F,EAAA,iBAAiB,EAAA,iBAAhH;AAAiH,EAAA,qBAAqB,EAAA;AAAtI,CAhD+E,CAAnB,EAgD8E;AAAC,EAAA,SAAS,EAAA,SAAV;AAAY,EAAA,YAAY,EAAA,YAAxB;AAAyB,EAAA,sBAAsB,EAAA,sBAA/C;AAAgD,EAAA,uBAAuB,EAAA,uBAAvE;AAAwE,EAAA,sBAAsB,EAAA,sBAA9F;AAA+F,EAAA,iBAAiB,EAAA,iBAAhH;AAAiH,EAAA,qBAAqB,EAAA;AAAtI,CAhD9E,CAAnB,EAgD2O;AAAC,EAAA,SAAS,EAAA,SAAV;AAAY,EAAA,YAAY,EAAA,YAAxB;AAAyB,EAAA,sBAAsB,EAAA,sBAA/C;AAAgD,EAAA,uBAAuB,EAAA,uBAAvE;AAAwE,EAAA,sBAAsB,EAAA,sBAA9F;AAA+F,EAAA,iBAAiB,EAAA,iBAAhH;AAAiH,EAAA,qBAAqB,EAAA;AAAtI,CAhD3O,CAArC","sourcesContent":["\n/* eslint-disable */\n// @ts-nocheck\n// @ts-ignore\nvar withSourceLoader = require('@storybook/source-loader/preview').withSource;\n// @ts-ignore\nvar addSourceDecorator = require(\"@storybook/source-loader/preview\").addSource;\n// @ts-ignore\nvar __SOURCE_PREFIX__ = \"/Users/farhanansari/Desktop/CODE/PrxProject/untitled folder/reactStoryBook/src/components/molecules/DateTimeSlotPicker\";\n// @ts-ignore\nvar __STORY__ = \"\\n\\n// @ts-nocheck\\n// @ts-ignore\\nvar withSourceLoader = require('@storybook/source-loader/preview').withSource;\\n// @ts-ignore\\nvar addSourceDecorator = require(\\\"@storybook/source-loader/preview\\\").addSource;\\n// @ts-ignore\\nvar __SOURCE_PREFIX__ = \\\"/Users/farhanansari/Desktop/CODE/PrxProject/untitled folder/reactStoryBook/src/components/molecules/DateTimeSlotPicker\\\";\\n// @ts-ignore\\nvar __STORY__ = \\\"\\\\n\\\\n// @ts-nocheck\\\\n// @ts-ignore\\\\nvar withSourceLoader = require('@storybook/source-loader/preview').withSource;\\\\n// @ts-ignore\\\\nvar addSourceDecorator = require(\\\\\\\"@storybook/source-loader/preview\\\\\\\").addSource;\\\\n// @ts-ignore\\\\nvar __SOURCE_PREFIX__ = \\\\\\\"/Users/farhanansari/Desktop/CODE/PrxProject/untitled folder/reactStoryBook/src/components/molecules/DateTimeSlotPicker\\\\\\\";\\\\n// @ts-ignore\\\\nvar __STORY__ = \\\\\\\"import React from 'react'\\\\\\\\nimport { path } from '..'\\\\\\\\nimport DateTimeSlotPicker from '.'\\\\\\\\nimport { object, withKnobs, boolean } from '@storybook/addon-knobs'\\\\\\\\nimport ThemeWrapper from '../../../utilities/components/ThemeWrapper'\\\\\\\\nimport Data from './Data'\\\\\\\\nimport TextInput from '../TextInput'\\\\\\\\nimport { IDateTimeSlotPickerChildren } from './interfaces'\\\\\\\\nimport { action } from '@storybook/addon-actions'\\\\\\\\n\\\\\\\\nexport default {\\\\\\\\n  title: `${path}/DateTimeSlotPicker`,\\\\\\\\n  decorators: [withKnobs],\\\\\\\\n  component: DateTimeSlotPicker\\\\\\\\n}\\\\\\\\n\\\\\\\\nconst DropdownOption = [\\\\\\\\n  {\\\\\\\\n    id: 'units',\\\\\\\\n    label: 'Units',\\\\\\\\n    value: 'unit',\\\\\\\\n    availableSlotObjectKey: 'availableNumberOfItems',\\\\\\\\n    totalSlotObjectKey: 'totalNumberOfItems'\\\\\\\\n  },\\\\\\\\n  {\\\\\\\\n    id: 'weight',\\\\\\\\n    label: 'Weight',\\\\\\\\n    value: 'weight',\\\\\\\\n    availableSlotObjectKey: 'availableWeight',\\\\\\\\n    totalSlotObjectKey: 'totalWeight'\\\\\\\\n  },\\\\\\\\n  {\\\\\\\\n    id: 'volume',\\\\\\\\n    label: 'Volume',\\\\\\\\n    value: 'volume',\\\\\\\\n    availableSlotObjectKey: 'availableVolume',\\\\\\\\n    totalSlotObjectKey: 'totalVolume'\\\\\\\\n  },\\\\\\\\n  {\\\\\\\\n    id: 'stops',\\\\\\\\n    label: 'Stops',\\\\\\\\n    value: 'stop',\\\\\\\\n    availableSlotObjectKey: 'availableStops',\\\\\\\\n    totalSlotObjectKey: 'totalStops'\\\\\\\\n  }\\\\\\\\n]\\\\\\\\n\\\\\\\\nconst status = {\\\\\\\\n  available: {\\\\\\\\n    id: 'available',\\\\\\\\n    value: 'AVAILABLE',\\\\\\\\n    label: 'Suggested'\\\\\\\\n  },\\\\\\\\n  notAvailable: {\\\\\\\\n    id: 'notAvailable',\\\\\\\\n    value: 'FULL',\\\\\\\\n    label: 'Not Suggested'\\\\\\\\n  }\\\\\\\\n}\\\\\\\\n\\\\\\\\nexport const SlotPicker = () => {\\\\\\\\n  const todaysDate = new Date()\\\\\\\\n  return (\\\\\\\\n    <ThemeWrapper>\\\\\\\\n      <DateTimeSlotPicker\\\\\\\\n        title='Available Time Windows:'\\\\\\\\n        preferenceDropdownLabel='Prefrence By '\\\\\\\\n        isOpen={boolean('isOpen', false)}\\\\\\\\n        date={todaysDate}\\\\\\\\n        timeWindowPrefrenceDropdown={object(\\\\\\\\n          'timeWindowPrefrenceDropdown',\\\\\\\\n          DropdownOption\\\\\\\\n        )}\\\\\\\\n        status={object('status', status)}\\\\\\\\n        DateTimeSlots={object('DateTimeSlots', Data)}\\\\\\\\n        style={{\\\\\\\\n          position: 'absolute',\\\\\\\\n          top: 'auto',\\\\\\\\n          left: '0px'\\\\\\\\n        }}\\\\\\\\n        onChange={action('On Change')}\\\\\\\\n      >\\\\\\\\n        {({ value, open, setOpen }: IDateTimeSlotPickerChildren) => (\\\\\\\\n          <div\\\\\\\\n            onClick={() => {\\\\\\\\n              console.log(open)\\\\\\\\n              setOpen(!open)\\\\\\\\n            }}\\\\\\\\n          >\\\\\\\\n            <TextInput\\\\\\\\n              id='someId'\\\\\\\\n              name='someName'\\\\\\\\n              className='someClassname'\\\\\\\\n              placeholder='Please Click Here'\\\\\\\\n              variant='withIcon'\\\\\\\\n              iconVariant='calendar'\\\\\\\\n              iconSize='md'\\\\\\\\n              value={`${value ? value?.startTimeWindow : ''} - ${\\\\\\\\n                value ? value?.endTimeWindow : ''\\\\\\\\n              }`}\\\\\\\\n              readOnly\\\\\\\\n              iconStyle={{ padding: '9px 9px 9px 9px' }}\\\\\\\\n            />\\\\\\\\n          </div>\\\\\\\\n        )}\\\\\\\\n      </DateTimeSlotPicker>\\\\\\\\n    </ThemeWrapper>\\\\\\\\n  )\\\\\\\\n}\\\\\\\\n\\\\\\\";\\\\n// @ts-ignore\\\\nvar __ADDS_MAP__ = {};\\\\n// @ts-ignore\\\\nvar __MAIN_FILE_LOCATION__ = \\\\\\\"/DateTimeSlotPicker.stories.tsx\\\\\\\";\\\\n// @ts-ignore\\\\nvar __MODULE_DEPENDENCIES__ = [];\\\\n// @ts-ignore\\\\nvar __LOCAL_DEPENDENCIES__ = {};\\\\n// @ts-ignore\\\\nvar __IDS_TO_FRAMEWORKS__ = {};\\\\n        \\\\nimport React from 'react'\\\\nimport { path } from '..'\\\\nimport DateTimeSlotPicker from '.'\\\\nimport { object, withKnobs, boolean } from '@storybook/addon-knobs'\\\\nimport ThemeWrapper from '../../../utilities/components/ThemeWrapper'\\\\nimport Data from './Data'\\\\nimport TextInput from '../TextInput'\\\\nimport { IDateTimeSlotPickerChildren } from './interfaces'\\\\nimport { action } from '@storybook/addon-actions'\\\\n\\\\nexport default {parameters: {\\\\\\\"storySource\\\\\\\":{\\\\\\\"source\\\\\\\":\\\\\\\"import React from 'react'\\\\\\\\nimport { path } from '..'\\\\\\\\nimport DateTimeSlotPicker from '.'\\\\\\\\nimport { object, withKnobs, boolean } from '@storybook/addon-knobs'\\\\\\\\nimport ThemeWrapper from '../../../utilities/components/ThemeWrapper'\\\\\\\\nimport Data from './Data'\\\\\\\\nimport TextInput from '../TextInput'\\\\\\\\nimport { IDateTimeSlotPickerChildren } from './interfaces'\\\\\\\\nimport { action } from '@storybook/addon-actions'\\\\\\\\n\\\\\\\\nexport default {\\\\\\\\n  title: `${path}/DateTimeSlotPicker`,\\\\\\\\n  decorators: [withKnobs],\\\\\\\\n  component: DateTimeSlotPicker\\\\\\\\n}\\\\\\\\n\\\\\\\\nconst DropdownOption = [\\\\\\\\n  {\\\\\\\\n    id: 'units',\\\\\\\\n    label: 'Units',\\\\\\\\n    value: 'unit',\\\\\\\\n    availableSlotObjectKey: 'availableNumberOfItems',\\\\\\\\n    totalSlotObjectKey: 'totalNumberOfItems'\\\\\\\\n  },\\\\\\\\n  {\\\\\\\\n    id: 'weight',\\\\\\\\n    label: 'Weight',\\\\\\\\n    value: 'weight',\\\\\\\\n    availableSlotObjectKey: 'availableWeight',\\\\\\\\n    totalSlotObjectKey: 'totalWeight'\\\\\\\\n  },\\\\\\\\n  {\\\\\\\\n    id: 'volume',\\\\\\\\n    label: 'Volume',\\\\\\\\n    value: 'volume',\\\\\\\\n    availableSlotObjectKey: 'availableVolume',\\\\\\\\n    totalSlotObjectKey: 'totalVolume'\\\\\\\\n  },\\\\\\\\n  {\\\\\\\\n    id: 'stops',\\\\\\\\n    label: 'Stops',\\\\\\\\n    value: 'stop',\\\\\\\\n    availableSlotObjectKey: 'availableStops',\\\\\\\\n    totalSlotObjectKey: 'totalStops'\\\\\\\\n  }\\\\\\\\n]\\\\\\\\n\\\\\\\\nconst status = {\\\\\\\\n  available: {\\\\\\\\n    id: 'available',\\\\\\\\n    value: 'AVAILABLE',\\\\\\\\n    label: 'Suggested'\\\\\\\\n  },\\\\\\\\n  notAvailable: {\\\\\\\\n    id: 'notAvailable',\\\\\\\\n    value: 'FULL',\\\\\\\\n    label: 'Not Suggested'\\\\\\\\n  }\\\\\\\\n}\\\\\\\\n\\\\\\\\nexport const SlotPicker = () => {\\\\\\\\n  const todaysDate = new Date()\\\\\\\\n  return (\\\\\\\\n    <ThemeWrapper>\\\\\\\\n      <DateTimeSlotPicker\\\\\\\\n        title='Available Time Windows:'\\\\\\\\n        preferenceDropdownLabel='Prefrence By '\\\\\\\\n        isOpen={boolean('isOpen', false)}\\\\\\\\n        date={todaysDate}\\\\\\\\n        timeWindowPrefrenceDropdown={object(\\\\\\\\n          'timeWindowPrefrenceDropdown',\\\\\\\\n          DropdownOption\\\\\\\\n        )}\\\\\\\\n        status={object('status', status)}\\\\\\\\n        DateTimeSlots={object('DateTimeSlots', Data)}\\\\\\\\n        style={{\\\\\\\\n          position: 'absolute',\\\\\\\\n          top: 'auto',\\\\\\\\n          left: '0px'\\\\\\\\n        }}\\\\\\\\n        onChange={action('On Change')}\\\\\\\\n      >\\\\\\\\n        {({ value, open, setOpen }: IDateTimeSlotPickerChildren) => (\\\\\\\\n          <div\\\\\\\\n            onClick={() => {\\\\\\\\n              console.log(open)\\\\\\\\n              setOpen(!open)\\\\\\\\n            }}\\\\\\\\n          >\\\\\\\\n            <TextInput\\\\\\\\n              id='someId'\\\\\\\\n              name='someName'\\\\\\\\n              className='someClassname'\\\\\\\\n              placeholder='Please Click Here'\\\\\\\\n              variant='withIcon'\\\\\\\\n              iconVariant='calendar'\\\\\\\\n              iconSize='md'\\\\\\\\n              value={`${value ? value?.startTimeWindow : ''} - ${\\\\\\\\n                value ? value?.endTimeWindow : ''\\\\\\\\n              }`}\\\\\\\\n              readOnly\\\\\\\\n              iconStyle={{ padding: '9px 9px 9px 9px' }}\\\\\\\\n            />\\\\\\\\n          </div>\\\\\\\\n        )}\\\\\\\\n      </DateTimeSlotPicker>\\\\\\\\n    </ThemeWrapper>\\\\\\\\n  )\\\\\\\\n}\\\\\\\\n\\\\\\\",\\\\\\\"locationsMap\\\\\\\":{}},},\\\\n  title: `${path}/DateTimeSlotPicker`,\\\\n  decorators: [withKnobs],\\\\n  component: DateTimeSlotPicker\\\\n}\\\\n\\\\nconst DropdownOption = [\\\\n  {\\\\n    id: 'units',\\\\n    label: 'Units',\\\\n    value: 'unit',\\\\n    availableSlotObjectKey: 'availableNumberOfItems',\\\\n    totalSlotObjectKey: 'totalNumberOfItems'\\\\n  },\\\\n  {\\\\n    id: 'weight',\\\\n    label: 'Weight',\\\\n    value: 'weight',\\\\n    availableSlotObjectKey: 'availableWeight',\\\\n    totalSlotObjectKey: 'totalWeight'\\\\n  },\\\\n  {\\\\n    id: 'volume',\\\\n    label: 'Volume',\\\\n    value: 'volume',\\\\n    availableSlotObjectKey: 'availableVolume',\\\\n    totalSlotObjectKey: 'totalVolume'\\\\n  },\\\\n  {\\\\n    id: 'stops',\\\\n    label: 'Stops',\\\\n    value: 'stop',\\\\n    availableSlotObjectKey: 'availableStops',\\\\n    totalSlotObjectKey: 'totalStops'\\\\n  }\\\\n]\\\\n\\\\nconst status = {\\\\n  available: {\\\\n    id: 'available',\\\\n    value: 'AVAILABLE',\\\\n    label: 'Suggested'\\\\n  },\\\\n  notAvailable: {\\\\n    id: 'notAvailable',\\\\n    value: 'FULL',\\\\n    label: 'Not Suggested'\\\\n  }\\\\n}\\\\n\\\\nexport const SlotPicker = addSourceDecorator(() => {\\\\n  const todaysDate = new Date()\\\\n  return (\\\\n    <ThemeWrapper>\\\\n      <DateTimeSlotPicker\\\\n        title='Available Time Windows:'\\\\n        preferenceDropdownLabel='Prefrence By '\\\\n        isOpen={boolean('isOpen', false)}\\\\n        date={todaysDate}\\\\n        timeWindowPrefrenceDropdown={object(\\\\n          'timeWindowPrefrenceDropdown',\\\\n          DropdownOption\\\\n        )}\\\\n        status={object('status', status)}\\\\n        DateTimeSlots={object('DateTimeSlots', Data)}\\\\n        style={{\\\\n          position: 'absolute',\\\\n          top: 'auto',\\\\n          left: '0px'\\\\n        }}\\\\n        onChange={action('On Change')}\\\\n      >\\\\n        {({ value, open, setOpen }: IDateTimeSlotPickerChildren) => (\\\\n          <div\\\\n            onClick={() => {\\\\n              console.log(open)\\\\n              setOpen(!open)\\\\n            }}\\\\n          >\\\\n            <TextInput\\\\n              id='someId'\\\\n              name='someName'\\\\n              className='someClassname'\\\\n              placeholder='Please Click Here'\\\\n              variant='withIcon'\\\\n              iconVariant='calendar'\\\\n              iconSize='md'\\\\n              value={`${value ? value?.startTimeWindow : ''} - ${\\\\n                value ? value?.endTimeWindow : ''\\\\n              }`}\\\\n              readOnly\\\\n              iconStyle={{ padding: '9px 9px 9px 9px' }}\\\\n            />\\\\n          </div>\\\\n        )}\\\\n      </DateTimeSlotPicker>\\\\n    </ThemeWrapper>\\\\n  )\\\\n}, {__STORY__, __ADDS_MAP__,__MAIN_FILE_LOCATION__,__MODULE_DEPENDENCIES__,__LOCAL_DEPENDENCIES__,__SOURCE_PREFIX__,__IDS_TO_FRAMEWORKS__});\\\";\\n// @ts-ignore\\nvar __ADDS_MAP__ = {};\\n// @ts-ignore\\nvar __MAIN_FILE_LOCATION__ = \\\"/DateTimeSlotPicker.stories.tsx\\\";\\n// @ts-ignore\\nvar __MODULE_DEPENDENCIES__ = [];\\n// @ts-ignore\\nvar __LOCAL_DEPENDENCIES__ = {};\\n// @ts-ignore\\nvar __IDS_TO_FRAMEWORKS__ = {};\\n        \\n\\n\\n// @ts-nocheck\\n// @ts-ignore\\nvar withSourceLoader = require('@storybook/source-loader/preview').withSource;\\n// @ts-ignore\\nvar addSourceDecorator = require(\\\"@storybook/source-loader/preview\\\").addSource;\\n// @ts-ignore\\nvar __SOURCE_PREFIX__ = \\\"/Users/farhanansari/Desktop/CODE/PrxProject/untitled folder/reactStoryBook/src/components/molecules/DateTimeSlotPicker\\\";\\n// @ts-ignore\\nvar __STORY__ = \\\"import React from 'react'\\\\nimport { path } from '..'\\\\nimport DateTimeSlotPicker from '.'\\\\nimport { object, withKnobs, boolean } from '@storybook/addon-knobs'\\\\nimport ThemeWrapper from '../../../utilities/components/ThemeWrapper'\\\\nimport Data from './Data'\\\\nimport TextInput from '../TextInput'\\\\nimport { IDateTimeSlotPickerChildren } from './interfaces'\\\\nimport { action } from '@storybook/addon-actions'\\\\n\\\\nexport default {\\\\n  title: `${path}/DateTimeSlotPicker`,\\\\n  decorators: [withKnobs],\\\\n  component: DateTimeSlotPicker\\\\n}\\\\n\\\\nconst DropdownOption = [\\\\n  {\\\\n    id: 'units',\\\\n    label: 'Units',\\\\n    value: 'unit',\\\\n    availableSlotObjectKey: 'availableNumberOfItems',\\\\n    totalSlotObjectKey: 'totalNumberOfItems'\\\\n  },\\\\n  {\\\\n    id: 'weight',\\\\n    label: 'Weight',\\\\n    value: 'weight',\\\\n    availableSlotObjectKey: 'availableWeight',\\\\n    totalSlotObjectKey: 'totalWeight'\\\\n  },\\\\n  {\\\\n    id: 'volume',\\\\n    label: 'Volume',\\\\n    value: 'volume',\\\\n    availableSlotObjectKey: 'availableVolume',\\\\n    totalSlotObjectKey: 'totalVolume'\\\\n  },\\\\n  {\\\\n    id: 'stops',\\\\n    label: 'Stops',\\\\n    value: 'stop',\\\\n    availableSlotObjectKey: 'availableStops',\\\\n    totalSlotObjectKey: 'totalStops'\\\\n  }\\\\n]\\\\n\\\\nconst status = {\\\\n  available: {\\\\n    id: 'available',\\\\n    value: 'AVAILABLE',\\\\n    label: 'Suggested'\\\\n  },\\\\n  notAvailable: {\\\\n    id: 'notAvailable',\\\\n    value: 'FULL',\\\\n    label: 'Not Suggested'\\\\n  }\\\\n}\\\\n\\\\nexport const SlotPicker = () => {\\\\n  const todaysDate = new Date()\\\\n  return (\\\\n    <ThemeWrapper>\\\\n      <DateTimeSlotPicker\\\\n        title='Available Time Windows:'\\\\n        preferenceDropdownLabel='Prefrence By '\\\\n        isOpen={boolean('isOpen', false)}\\\\n        date={todaysDate}\\\\n        timeWindowPrefrenceDropdown={object(\\\\n          'timeWindowPrefrenceDropdown',\\\\n          DropdownOption\\\\n        )}\\\\n        status={object('status', status)}\\\\n        DateTimeSlots={object('DateTimeSlots', Data)}\\\\n        style={{\\\\n          position: 'absolute',\\\\n          top: 'auto',\\\\n          left: '0px'\\\\n        }}\\\\n        onChange={action('On Change')}\\\\n      >\\\\n        {({ value, open, setOpen }: IDateTimeSlotPickerChildren) => (\\\\n          <div\\\\n            onClick={() => {\\\\n              console.log(open)\\\\n              setOpen(!open)\\\\n            }}\\\\n          >\\\\n            <TextInput\\\\n              id='someId'\\\\n              name='someName'\\\\n              className='someClassname'\\\\n              placeholder='Please Click Here'\\\\n              variant='withIcon'\\\\n              iconVariant='calendar'\\\\n              iconSize='md'\\\\n              value={`${value ? value?.startTimeWindow : ''} - ${\\\\n                value ? value?.endTimeWindow : ''\\\\n              }`}\\\\n              readOnly\\\\n              iconStyle={{ padding: '9px 9px 9px 9px' }}\\\\n            />\\\\n          </div>\\\\n        )}\\\\n      </DateTimeSlotPicker>\\\\n    </ThemeWrapper>\\\\n  )\\\\n}\\\\n\\\";\\n// @ts-ignore\\nvar __ADDS_MAP__ = {};\\n// @ts-ignore\\nvar __MAIN_FILE_LOCATION__ = \\\"/DateTimeSlotPicker.stories.tsx\\\";\\n// @ts-ignore\\nvar __MODULE_DEPENDENCIES__ = [];\\n// @ts-ignore\\nvar __LOCAL_DEPENDENCIES__ = {};\\n// @ts-ignore\\nvar __IDS_TO_FRAMEWORKS__ = {};\\n        \\nimport React from 'react'\\nimport { path } from '..'\\nimport DateTimeSlotPicker from '.'\\nimport { object, withKnobs, boolean } from '@storybook/addon-knobs'\\nimport ThemeWrapper from '../../../utilities/components/ThemeWrapper'\\nimport Data from './Data'\\nimport TextInput from '../TextInput'\\nimport { IDateTimeSlotPickerChildren } from './interfaces'\\nimport { action } from '@storybook/addon-actions'\\n\\nexport default {parameters: {\\\"storySource\\\":{\\\"source\\\":\\\"\\\\n\\\\n// @ts-nocheck\\\\n// @ts-ignore\\\\nvar withSourceLoader = require('@storybook/source-loader/preview').withSource;\\\\n// @ts-ignore\\\\nvar addSourceDecorator = require(\\\\\\\"@storybook/source-loader/preview\\\\\\\").addSource;\\\\n// @ts-ignore\\\\nvar __SOURCE_PREFIX__ = \\\\\\\"/Users/farhanansari/Desktop/CODE/PrxProject/untitled folder/reactStoryBook/src/components/molecules/DateTimeSlotPicker\\\\\\\";\\\\n// @ts-ignore\\\\nvar __STORY__ = \\\\\\\"import React from 'react'\\\\\\\\nimport { path } from '..'\\\\\\\\nimport DateTimeSlotPicker from '.'\\\\\\\\nimport { object, withKnobs, boolean } from '@storybook/addon-knobs'\\\\\\\\nimport ThemeWrapper from '../../../utilities/components/ThemeWrapper'\\\\\\\\nimport Data from './Data'\\\\\\\\nimport TextInput from '../TextInput'\\\\\\\\nimport { IDateTimeSlotPickerChildren } from './interfaces'\\\\\\\\nimport { action } from '@storybook/addon-actions'\\\\\\\\n\\\\\\\\nexport default {\\\\\\\\n  title: `${path}/DateTimeSlotPicker`,\\\\\\\\n  decorators: [withKnobs],\\\\\\\\n  component: DateTimeSlotPicker\\\\\\\\n}\\\\\\\\n\\\\\\\\nconst DropdownOption = [\\\\\\\\n  {\\\\\\\\n    id: 'units',\\\\\\\\n    label: 'Units',\\\\\\\\n    value: 'unit',\\\\\\\\n    availableSlotObjectKey: 'availableNumberOfItems',\\\\\\\\n    totalSlotObjectKey: 'totalNumberOfItems'\\\\\\\\n  },\\\\\\\\n  {\\\\\\\\n    id: 'weight',\\\\\\\\n    label: 'Weight',\\\\\\\\n    value: 'weight',\\\\\\\\n    availableSlotObjectKey: 'availableWeight',\\\\\\\\n    totalSlotObjectKey: 'totalWeight'\\\\\\\\n  },\\\\\\\\n  {\\\\\\\\n    id: 'volume',\\\\\\\\n    label: 'Volume',\\\\\\\\n    value: 'volume',\\\\\\\\n    availableSlotObjectKey: 'availableVolume',\\\\\\\\n    totalSlotObjectKey: 'totalVolume'\\\\\\\\n  },\\\\\\\\n  {\\\\\\\\n    id: 'stops',\\\\\\\\n    label: 'Stops',\\\\\\\\n    value: 'stop',\\\\\\\\n    availableSlotObjectKey: 'availableStops',\\\\\\\\n    totalSlotObjectKey: 'totalStops'\\\\\\\\n  }\\\\\\\\n]\\\\\\\\n\\\\\\\\nconst status = {\\\\\\\\n  available: {\\\\\\\\n    id: 'available',\\\\\\\\n    value: 'AVAILABLE',\\\\\\\\n    label: 'Suggested'\\\\\\\\n  },\\\\\\\\n  notAvailable: {\\\\\\\\n    id: 'notAvailable',\\\\\\\\n    value: 'FULL',\\\\\\\\n    label: 'Not Suggested'\\\\\\\\n  }\\\\\\\\n}\\\\\\\\n\\\\\\\\nexport const SlotPicker = () => {\\\\\\\\n  const todaysDate = new Date()\\\\\\\\n  return (\\\\\\\\n    <ThemeWrapper>\\\\\\\\n      <DateTimeSlotPicker\\\\\\\\n        title='Available Time Windows:'\\\\\\\\n        preferenceDropdownLabel='Prefrence By '\\\\\\\\n        isOpen={boolean('isOpen', false)}\\\\\\\\n        date={todaysDate}\\\\\\\\n        timeWindowPrefrenceDropdown={object(\\\\\\\\n          'timeWindowPrefrenceDropdown',\\\\\\\\n          DropdownOption\\\\\\\\n        )}\\\\\\\\n        status={object('status', status)}\\\\\\\\n        DateTimeSlots={object('DateTimeSlots', Data)}\\\\\\\\n        style={{\\\\\\\\n          position: 'absolute',\\\\\\\\n          top: 'auto',\\\\\\\\n          left: '0px'\\\\\\\\n        }}\\\\\\\\n        onChange={action('On Change')}\\\\\\\\n      >\\\\\\\\n        {({ value, open, setOpen }: IDateTimeSlotPickerChildren) => (\\\\\\\\n          <div\\\\\\\\n            onClick={() => {\\\\\\\\n              console.log(open)\\\\\\\\n              setOpen(!open)\\\\\\\\n            }}\\\\\\\\n          >\\\\\\\\n            <TextInput\\\\\\\\n              id='someId'\\\\\\\\n              name='someName'\\\\\\\\n              className='someClassname'\\\\\\\\n              placeholder='Please Click Here'\\\\\\\\n              variant='withIcon'\\\\\\\\n              iconVariant='calendar'\\\\\\\\n              iconSize='md'\\\\\\\\n              value={`${value ? value?.startTimeWindow : ''} - ${\\\\\\\\n                value ? value?.endTimeWindow : ''\\\\\\\\n              }`}\\\\\\\\n              readOnly\\\\\\\\n              iconStyle={{ padding: '9px 9px 9px 9px' }}\\\\\\\\n            />\\\\\\\\n          </div>\\\\\\\\n        )}\\\\\\\\n      </DateTimeSlotPicker>\\\\\\\\n    </ThemeWrapper>\\\\\\\\n  )\\\\\\\\n}\\\\\\\\n\\\\\\\";\\\\n// @ts-ignore\\\\nvar __ADDS_MAP__ = {};\\\\n// @ts-ignore\\\\nvar __MAIN_FILE_LOCATION__ = \\\\\\\"/DateTimeSlotPicker.stories.tsx\\\\\\\";\\\\n// @ts-ignore\\\\nvar __MODULE_DEPENDENCIES__ = [];\\\\n// @ts-ignore\\\\nvar __LOCAL_DEPENDENCIES__ = {};\\\\n// @ts-ignore\\\\nvar __IDS_TO_FRAMEWORKS__ = {};\\\\n        \\\\nimport React from 'react'\\\\nimport { path } from '..'\\\\nimport DateTimeSlotPicker from '.'\\\\nimport { object, withKnobs, boolean } from '@storybook/addon-knobs'\\\\nimport ThemeWrapper from '../../../utilities/components/ThemeWrapper'\\\\nimport Data from './Data'\\\\nimport TextInput from '../TextInput'\\\\nimport { IDateTimeSlotPickerChildren } from './interfaces'\\\\nimport { action } from '@storybook/addon-actions'\\\\n\\\\nexport default {parameters: {\\\\\\\"storySource\\\\\\\":{\\\\\\\"source\\\\\\\":\\\\\\\"import React from 'react'\\\\\\\\nimport { path } from '..'\\\\\\\\nimport DateTimeSlotPicker from '.'\\\\\\\\nimport { object, withKnobs, boolean } from '@storybook/addon-knobs'\\\\\\\\nimport ThemeWrapper from '../../../utilities/components/ThemeWrapper'\\\\\\\\nimport Data from './Data'\\\\\\\\nimport TextInput from '../TextInput'\\\\\\\\nimport { IDateTimeSlotPickerChildren } from './interfaces'\\\\\\\\nimport { action } from '@storybook/addon-actions'\\\\\\\\n\\\\\\\\nexport default {\\\\\\\\n  title: `${path}/DateTimeSlotPicker`,\\\\\\\\n  decorators: [withKnobs],\\\\\\\\n  component: DateTimeSlotPicker\\\\\\\\n}\\\\\\\\n\\\\\\\\nconst DropdownOption = [\\\\\\\\n  {\\\\\\\\n    id: 'units',\\\\\\\\n    label: 'Units',\\\\\\\\n    value: 'unit',\\\\\\\\n    availableSlotObjectKey: 'availableNumberOfItems',\\\\\\\\n    totalSlotObjectKey: 'totalNumberOfItems'\\\\\\\\n  },\\\\\\\\n  {\\\\\\\\n    id: 'weight',\\\\\\\\n    label: 'Weight',\\\\\\\\n    value: 'weight',\\\\\\\\n    availableSlotObjectKey: 'availableWeight',\\\\\\\\n    totalSlotObjectKey: 'totalWeight'\\\\\\\\n  },\\\\\\\\n  {\\\\\\\\n    id: 'volume',\\\\\\\\n    label: 'Volume',\\\\\\\\n    value: 'volume',\\\\\\\\n    availableSlotObjectKey: 'availableVolume',\\\\\\\\n    totalSlotObjectKey: 'totalVolume'\\\\\\\\n  },\\\\\\\\n  {\\\\\\\\n    id: 'stops',\\\\\\\\n    label: 'Stops',\\\\\\\\n    value: 'stop',\\\\\\\\n    availableSlotObjectKey: 'availableStops',\\\\\\\\n    totalSlotObjectKey: 'totalStops'\\\\\\\\n  }\\\\\\\\n]\\\\\\\\n\\\\\\\\nconst status = {\\\\\\\\n  available: {\\\\\\\\n    id: 'available',\\\\\\\\n    value: 'AVAILABLE',\\\\\\\\n    label: 'Suggested'\\\\\\\\n  },\\\\\\\\n  notAvailable: {\\\\\\\\n    id: 'notAvailable',\\\\\\\\n    value: 'FULL',\\\\\\\\n    label: 'Not Suggested'\\\\\\\\n  }\\\\\\\\n}\\\\\\\\n\\\\\\\\nexport const SlotPicker = () => {\\\\\\\\n  const todaysDate = new Date()\\\\\\\\n  return (\\\\\\\\n    <ThemeWrapper>\\\\\\\\n      <DateTimeSlotPicker\\\\\\\\n        title='Available Time Windows:'\\\\\\\\n        preferenceDropdownLabel='Prefrence By '\\\\\\\\n        isOpen={boolean('isOpen', false)}\\\\\\\\n        date={todaysDate}\\\\\\\\n        timeWindowPrefrenceDropdown={object(\\\\\\\\n          'timeWindowPrefrenceDropdown',\\\\\\\\n          DropdownOption\\\\\\\\n        )}\\\\\\\\n        status={object('status', status)}\\\\\\\\n        DateTimeSlots={object('DateTimeSlots', Data)}\\\\\\\\n        style={{\\\\\\\\n          position: 'absolute',\\\\\\\\n          top: 'auto',\\\\\\\\n          left: '0px'\\\\\\\\n        }}\\\\\\\\n        onChange={action('On Change')}\\\\\\\\n      >\\\\\\\\n        {({ value, open, setOpen }: IDateTimeSlotPickerChildren) => (\\\\\\\\n          <div\\\\\\\\n            onClick={() => {\\\\\\\\n              console.log(open)\\\\\\\\n              setOpen(!open)\\\\\\\\n            }}\\\\\\\\n          >\\\\\\\\n            <TextInput\\\\\\\\n              id='someId'\\\\\\\\n              name='someName'\\\\\\\\n              className='someClassname'\\\\\\\\n              placeholder='Please Click Here'\\\\\\\\n              variant='withIcon'\\\\\\\\n              iconVariant='calendar'\\\\\\\\n              iconSize='md'\\\\\\\\n              value={`${value ? value?.startTimeWindow : ''} - ${\\\\\\\\n                value ? value?.endTimeWindow : ''\\\\\\\\n              }`}\\\\\\\\n              readOnly\\\\\\\\n              iconStyle={{ padding: '9px 9px 9px 9px' }}\\\\\\\\n            />\\\\\\\\n          </div>\\\\\\\\n        )}\\\\\\\\n      </DateTimeSlotPicker>\\\\\\\\n    </ThemeWrapper>\\\\\\\\n  )\\\\\\\\n}\\\\\\\\n\\\\\\\",\\\\\\\"locationsMap\\\\\\\":{}},},\\\\n  title: `${path}/DateTimeSlotPicker`,\\\\n  decorators: [withKnobs],\\\\n  component: DateTimeSlotPicker\\\\n}\\\\n\\\\nconst DropdownOption = [\\\\n  {\\\\n    id: 'units',\\\\n    label: 'Units',\\\\n    value: 'unit',\\\\n    availableSlotObjectKey: 'availableNumberOfItems',\\\\n    totalSlotObjectKey: 'totalNumberOfItems'\\\\n  },\\\\n  {\\\\n    id: 'weight',\\\\n    label: 'Weight',\\\\n    value: 'weight',\\\\n    availableSlotObjectKey: 'availableWeight',\\\\n    totalSlotObjectKey: 'totalWeight'\\\\n  },\\\\n  {\\\\n    id: 'volume',\\\\n    label: 'Volume',\\\\n    value: 'volume',\\\\n    availableSlotObjectKey: 'availableVolume',\\\\n    totalSlotObjectKey: 'totalVolume'\\\\n  },\\\\n  {\\\\n    id: 'stops',\\\\n    label: 'Stops',\\\\n    value: 'stop',\\\\n    availableSlotObjectKey: 'availableStops',\\\\n    totalSlotObjectKey: 'totalStops'\\\\n  }\\\\n]\\\\n\\\\nconst status = {\\\\n  available: {\\\\n    id: 'available',\\\\n    value: 'AVAILABLE',\\\\n    label: 'Suggested'\\\\n  },\\\\n  notAvailable: {\\\\n    id: 'notAvailable',\\\\n    value: 'FULL',\\\\n    label: 'Not Suggested'\\\\n  }\\\\n}\\\\n\\\\nexport const SlotPicker = addSourceDecorator(() => {\\\\n  const todaysDate = new Date()\\\\n  return (\\\\n    <ThemeWrapper>\\\\n      <DateTimeSlotPicker\\\\n        title='Available Time Windows:'\\\\n        preferenceDropdownLabel='Prefrence By '\\\\n        isOpen={boolean('isOpen', false)}\\\\n        date={todaysDate}\\\\n        timeWindowPrefrenceDropdown={object(\\\\n          'timeWindowPrefrenceDropdown',\\\\n          DropdownOption\\\\n        )}\\\\n        status={object('status', status)}\\\\n        DateTimeSlots={object('DateTimeSlots', Data)}\\\\n        style={{\\\\n          position: 'absolute',\\\\n          top: 'auto',\\\\n          left: '0px'\\\\n        }}\\\\n        onChange={action('On Change')}\\\\n      >\\\\n        {({ value, open, setOpen }: IDateTimeSlotPickerChildren) => (\\\\n          <div\\\\n            onClick={() => {\\\\n              console.log(open)\\\\n              setOpen(!open)\\\\n            }}\\\\n          >\\\\n            <TextInput\\\\n              id='someId'\\\\n              name='someName'\\\\n              className='someClassname'\\\\n              placeholder='Please Click Here'\\\\n              variant='withIcon'\\\\n              iconVariant='calendar'\\\\n              iconSize='md'\\\\n              value={`${value ? value?.startTimeWindow : ''} - ${\\\\n                value ? value?.endTimeWindow : ''\\\\n              }`}\\\\n              readOnly\\\\n              iconStyle={{ padding: '9px 9px 9px 9px' }}\\\\n            />\\\\n          </div>\\\\n        )}\\\\n      </DateTimeSlotPicker>\\\\n    </ThemeWrapper>\\\\n  )\\\\n}, {__STORY__, __ADDS_MAP__,__MAIN_FILE_LOCATION__,__MODULE_DEPENDENCIES__,__LOCAL_DEPENDENCIES__,__SOURCE_PREFIX__,__IDS_TO_FRAMEWORKS__});\\\",\\\"locationsMap\\\":{}},\\\"storySource\\\":{\\\"source\\\":\\\"import React from 'react'\\\\nimport { path } from '..'\\\\nimport DateTimeSlotPicker from '.'\\\\nimport { object, withKnobs, boolean } from '@storybook/addon-knobs'\\\\nimport ThemeWrapper from '../../../utilities/components/ThemeWrapper'\\\\nimport Data from './Data'\\\\nimport TextInput from '../TextInput'\\\\nimport { IDateTimeSlotPickerChildren } from './interfaces'\\\\nimport { action } from '@storybook/addon-actions'\\\\n\\\\nexport default {\\\\n  title: `${path}/DateTimeSlotPicker`,\\\\n  decorators: [withKnobs],\\\\n  component: DateTimeSlotPicker\\\\n}\\\\n\\\\nconst DropdownOption = [\\\\n  {\\\\n    id: 'units',\\\\n    label: 'Units',\\\\n    value: 'unit',\\\\n    availableSlotObjectKey: 'availableNumberOfItems',\\\\n    totalSlotObjectKey: 'totalNumberOfItems'\\\\n  },\\\\n  {\\\\n    id: 'weight',\\\\n    label: 'Weight',\\\\n    value: 'weight',\\\\n    availableSlotObjectKey: 'availableWeight',\\\\n    totalSlotObjectKey: 'totalWeight'\\\\n  },\\\\n  {\\\\n    id: 'volume',\\\\n    label: 'Volume',\\\\n    value: 'volume',\\\\n    availableSlotObjectKey: 'availableVolume',\\\\n    totalSlotObjectKey: 'totalVolume'\\\\n  },\\\\n  {\\\\n    id: 'stops',\\\\n    label: 'Stops',\\\\n    value: 'stop',\\\\n    availableSlotObjectKey: 'availableStops',\\\\n    totalSlotObjectKey: 'totalStops'\\\\n  }\\\\n]\\\\n\\\\nconst status = {\\\\n  available: {\\\\n    id: 'available',\\\\n    value: 'AVAILABLE',\\\\n    label: 'Suggested'\\\\n  },\\\\n  notAvailable: {\\\\n    id: 'notAvailable',\\\\n    value: 'FULL',\\\\n    label: 'Not Suggested'\\\\n  }\\\\n}\\\\n\\\\nexport const SlotPicker = () => {\\\\n  const todaysDate = new Date()\\\\n  return (\\\\n    <ThemeWrapper>\\\\n      <DateTimeSlotPicker\\\\n        title='Available Time Windows:'\\\\n        preferenceDropdownLabel='Prefrence By '\\\\n        isOpen={boolean('isOpen', false)}\\\\n        date={todaysDate}\\\\n        timeWindowPrefrenceDropdown={object(\\\\n          'timeWindowPrefrenceDropdown',\\\\n          DropdownOption\\\\n        )}\\\\n        status={object('status', status)}\\\\n        DateTimeSlots={object('DateTimeSlots', Data)}\\\\n        style={{\\\\n          position: 'absolute',\\\\n          top: 'auto',\\\\n          left: '0px'\\\\n        }}\\\\n        onChange={action('On Change')}\\\\n      >\\\\n        {({ value, open, setOpen }: IDateTimeSlotPickerChildren) => (\\\\n          <div\\\\n            onClick={() => {\\\\n              console.log(open)\\\\n              setOpen(!open)\\\\n            }}\\\\n          >\\\\n            <TextInput\\\\n              id='someId'\\\\n              name='someName'\\\\n              className='someClassname'\\\\n              placeholder='Please Click Here'\\\\n              variant='withIcon'\\\\n              iconVariant='calendar'\\\\n              iconSize='md'\\\\n              value={`${value ? value?.startTimeWindow : ''} - ${\\\\n                value ? value?.endTimeWindow : ''\\\\n              }`}\\\\n              readOnly\\\\n              iconStyle={{ padding: '9px 9px 9px 9px' }}\\\\n            />\\\\n          </div>\\\\n        )}\\\\n      </DateTimeSlotPicker>\\\\n    </ThemeWrapper>\\\\n  )\\\\n}\\\\n\\\",\\\"locationsMap\\\":{}},},\\n  title: `${path}/DateTimeSlotPicker`,\\n  decorators: [withKnobs],\\n  component: DateTimeSlotPicker\\n}\\n\\nconst DropdownOption = [\\n  {\\n    id: 'units',\\n    label: 'Units',\\n    value: 'unit',\\n    availableSlotObjectKey: 'availableNumberOfItems',\\n    totalSlotObjectKey: 'totalNumberOfItems'\\n  },\\n  {\\n    id: 'weight',\\n    label: 'Weight',\\n    value: 'weight',\\n    availableSlotObjectKey: 'availableWeight',\\n    totalSlotObjectKey: 'totalWeight'\\n  },\\n  {\\n    id: 'volume',\\n    label: 'Volume',\\n    value: 'volume',\\n    availableSlotObjectKey: 'availableVolume',\\n    totalSlotObjectKey: 'totalVolume'\\n  },\\n  {\\n    id: 'stops',\\n    label: 'Stops',\\n    value: 'stop',\\n    availableSlotObjectKey: 'availableStops',\\n    totalSlotObjectKey: 'totalStops'\\n  }\\n]\\n\\nconst status = {\\n  available: {\\n    id: 'available',\\n    value: 'AVAILABLE',\\n    label: 'Suggested'\\n  },\\n  notAvailable: {\\n    id: 'notAvailable',\\n    value: 'FULL',\\n    label: 'Not Suggested'\\n  }\\n}\\n\\nexport const SlotPicker = addSourceDecorator(addSourceDecorator(() => {\\n  const todaysDate = new Date()\\n  return (\\n    <ThemeWrapper>\\n      <DateTimeSlotPicker\\n        title='Available Time Windows:'\\n        preferenceDropdownLabel='Prefrence By '\\n        isOpen={boolean('isOpen', false)}\\n        date={todaysDate}\\n        timeWindowPrefrenceDropdown={object(\\n          'timeWindowPrefrenceDropdown',\\n          DropdownOption\\n        )}\\n        status={object('status', status)}\\n        DateTimeSlots={object('DateTimeSlots', Data)}\\n        style={{\\n          position: 'absolute',\\n          top: 'auto',\\n          left: '0px'\\n        }}\\n        onChange={action('On Change')}\\n      >\\n        {({ value, open, setOpen }: IDateTimeSlotPickerChildren) => (\\n          <div\\n            onClick={() => {\\n              console.log(open)\\n              setOpen(!open)\\n            }}\\n          >\\n            <TextInput\\n              id='someId'\\n              name='someName'\\n              className='someClassname'\\n              placeholder='Please Click Here'\\n              variant='withIcon'\\n              iconVariant='calendar'\\n              iconSize='md'\\n              value={`${value ? value?.startTimeWindow : ''} - ${\\n                value ? value?.endTimeWindow : ''\\n              }`}\\n              readOnly\\n              iconStyle={{ padding: '9px 9px 9px 9px' }}\\n            />\\n          </div>\\n        )}\\n      </DateTimeSlotPicker>\\n    </ThemeWrapper>\\n  )\\n}, {__STORY__, __ADDS_MAP__,__MAIN_FILE_LOCATION__,__MODULE_DEPENDENCIES__,__LOCAL_DEPENDENCIES__,__SOURCE_PREFIX__,__IDS_TO_FRAMEWORKS__}), {__STORY__, __ADDS_MAP__,__MAIN_FILE_LOCATION__,__MODULE_DEPENDENCIES__,__LOCAL_DEPENDENCIES__,__SOURCE_PREFIX__,__IDS_TO_FRAMEWORKS__});\";\n// @ts-ignore\nvar __ADDS_MAP__ = {};\n// @ts-ignore\nvar __MAIN_FILE_LOCATION__ = \"/DateTimeSlotPicker.stories.tsx\";\n// @ts-ignore\nvar __MODULE_DEPENDENCIES__ = [];\n// @ts-ignore\nvar __LOCAL_DEPENDENCIES__ = {};\n// @ts-ignore\nvar __IDS_TO_FRAMEWORKS__ = {};\n        \n\n/* eslint-disable */\n// @ts-nocheck\n// @ts-ignore\nvar withSourceLoader = require('@storybook/source-loader/preview').withSource;\n// @ts-ignore\nvar addSourceDecorator = require(\"@storybook/source-loader/preview\").addSource;\n// @ts-ignore\nvar __SOURCE_PREFIX__ = \"/Users/farhanansari/Desktop/CODE/PrxProject/untitled folder/reactStoryBook/src/components/molecules/DateTimeSlotPicker\";\n// @ts-ignore\nvar __STORY__ = \"\\n\\n// @ts-nocheck\\n// @ts-ignore\\nvar withSourceLoader = require('@storybook/source-loader/preview').withSource;\\n// @ts-ignore\\nvar addSourceDecorator = require(\\\"@storybook/source-loader/preview\\\").addSource;\\n// @ts-ignore\\nvar __SOURCE_PREFIX__ = \\\"/Users/farhanansari/Desktop/CODE/PrxProject/untitled folder/reactStoryBook/src/components/molecules/DateTimeSlotPicker\\\";\\n// @ts-ignore\\nvar __STORY__ = \\\"import React from 'react'\\\\nimport { path } from '..'\\\\nimport DateTimeSlotPicker from '.'\\\\nimport { object, withKnobs, boolean } from '@storybook/addon-knobs'\\\\nimport ThemeWrapper from '../../../utilities/components/ThemeWrapper'\\\\nimport Data from './Data'\\\\nimport TextInput from '../TextInput'\\\\nimport { IDateTimeSlotPickerChildren } from './interfaces'\\\\nimport { action } from '@storybook/addon-actions'\\\\n\\\\nexport default {\\\\n  title: `${path}/DateTimeSlotPicker`,\\\\n  decorators: [withKnobs],\\\\n  component: DateTimeSlotPicker\\\\n}\\\\n\\\\nconst DropdownOption = [\\\\n  {\\\\n    id: 'units',\\\\n    label: 'Units',\\\\n    value: 'unit',\\\\n    availableSlotObjectKey: 'availableNumberOfItems',\\\\n    totalSlotObjectKey: 'totalNumberOfItems'\\\\n  },\\\\n  {\\\\n    id: 'weight',\\\\n    label: 'Weight',\\\\n    value: 'weight',\\\\n    availableSlotObjectKey: 'availableWeight',\\\\n    totalSlotObjectKey: 'totalWeight'\\\\n  },\\\\n  {\\\\n    id: 'volume',\\\\n    label: 'Volume',\\\\n    value: 'volume',\\\\n    availableSlotObjectKey: 'availableVolume',\\\\n    totalSlotObjectKey: 'totalVolume'\\\\n  },\\\\n  {\\\\n    id: 'stops',\\\\n    label: 'Stops',\\\\n    value: 'stop',\\\\n    availableSlotObjectKey: 'availableStops',\\\\n    totalSlotObjectKey: 'totalStops'\\\\n  }\\\\n]\\\\n\\\\nconst status = {\\\\n  available: {\\\\n    id: 'available',\\\\n    value: 'AVAILABLE',\\\\n    label: 'Suggested'\\\\n  },\\\\n  notAvailable: {\\\\n    id: 'notAvailable',\\\\n    value: 'FULL',\\\\n    label: 'Not Suggested'\\\\n  }\\\\n}\\\\n\\\\nexport const SlotPicker = () => {\\\\n  const todaysDate = new Date()\\\\n  return (\\\\n    <ThemeWrapper>\\\\n      <DateTimeSlotPicker\\\\n        title='Available Time Windows:'\\\\n        preferenceDropdownLabel='Prefrence By '\\\\n        isOpen={boolean('isOpen', false)}\\\\n        date={todaysDate}\\\\n        timeWindowPrefrenceDropdown={object(\\\\n          'timeWindowPrefrenceDropdown',\\\\n          DropdownOption\\\\n        )}\\\\n        status={object('status', status)}\\\\n        DateTimeSlots={object('DateTimeSlots', Data)}\\\\n        style={{\\\\n          position: 'absolute',\\\\n          top: 'auto',\\\\n          left: '0px'\\\\n        }}\\\\n        onChange={action('On Change')}\\\\n      >\\\\n        {({ value, open, setOpen }: IDateTimeSlotPickerChildren) => (\\\\n          <div\\\\n            onClick={() => {\\\\n              console.log(open)\\\\n              setOpen(!open)\\\\n            }}\\\\n          >\\\\n            <TextInput\\\\n              id='someId'\\\\n              name='someName'\\\\n              className='someClassname'\\\\n              placeholder='Please Click Here'\\\\n              variant='withIcon'\\\\n              iconVariant='calendar'\\\\n              iconSize='md'\\\\n              value={`${value ? value?.startTimeWindow : ''} - ${\\\\n                value ? value?.endTimeWindow : ''\\\\n              }`}\\\\n              readOnly\\\\n              iconStyle={{ padding: '9px 9px 9px 9px' }}\\\\n            />\\\\n          </div>\\\\n        )}\\\\n      </DateTimeSlotPicker>\\\\n    </ThemeWrapper>\\\\n  )\\\\n}\\\\n\\\";\\n// @ts-ignore\\nvar __ADDS_MAP__ = {};\\n// @ts-ignore\\nvar __MAIN_FILE_LOCATION__ = \\\"/DateTimeSlotPicker.stories.tsx\\\";\\n// @ts-ignore\\nvar __MODULE_DEPENDENCIES__ = [];\\n// @ts-ignore\\nvar __LOCAL_DEPENDENCIES__ = {};\\n// @ts-ignore\\nvar __IDS_TO_FRAMEWORKS__ = {};\\n        \\nimport React from 'react'\\nimport { path } from '..'\\nimport DateTimeSlotPicker from '.'\\nimport { object, withKnobs, boolean } from '@storybook/addon-knobs'\\nimport ThemeWrapper from '../../../utilities/components/ThemeWrapper'\\nimport Data from './Data'\\nimport TextInput from '../TextInput'\\nimport { IDateTimeSlotPickerChildren } from './interfaces'\\nimport { action } from '@storybook/addon-actions'\\n\\nexport default {parameters: {\\\"storySource\\\":{\\\"source\\\":\\\"import React from 'react'\\\\nimport { path } from '..'\\\\nimport DateTimeSlotPicker from '.'\\\\nimport { object, withKnobs, boolean } from '@storybook/addon-knobs'\\\\nimport ThemeWrapper from '../../../utilities/components/ThemeWrapper'\\\\nimport Data from './Data'\\\\nimport TextInput from '../TextInput'\\\\nimport { IDateTimeSlotPickerChildren } from './interfaces'\\\\nimport { action } from '@storybook/addon-actions'\\\\n\\\\nexport default {\\\\n  title: `${path}/DateTimeSlotPicker`,\\\\n  decorators: [withKnobs],\\\\n  component: DateTimeSlotPicker\\\\n}\\\\n\\\\nconst DropdownOption = [\\\\n  {\\\\n    id: 'units',\\\\n    label: 'Units',\\\\n    value: 'unit',\\\\n    availableSlotObjectKey: 'availableNumberOfItems',\\\\n    totalSlotObjectKey: 'totalNumberOfItems'\\\\n  },\\\\n  {\\\\n    id: 'weight',\\\\n    label: 'Weight',\\\\n    value: 'weight',\\\\n    availableSlotObjectKey: 'availableWeight',\\\\n    totalSlotObjectKey: 'totalWeight'\\\\n  },\\\\n  {\\\\n    id: 'volume',\\\\n    label: 'Volume',\\\\n    value: 'volume',\\\\n    availableSlotObjectKey: 'availableVolume',\\\\n    totalSlotObjectKey: 'totalVolume'\\\\n  },\\\\n  {\\\\n    id: 'stops',\\\\n    label: 'Stops',\\\\n    value: 'stop',\\\\n    availableSlotObjectKey: 'availableStops',\\\\n    totalSlotObjectKey: 'totalStops'\\\\n  }\\\\n]\\\\n\\\\nconst status = {\\\\n  available: {\\\\n    id: 'available',\\\\n    value: 'AVAILABLE',\\\\n    label: 'Suggested'\\\\n  },\\\\n  notAvailable: {\\\\n    id: 'notAvailable',\\\\n    value: 'FULL',\\\\n    label: 'Not Suggested'\\\\n  }\\\\n}\\\\n\\\\nexport const SlotPicker = () => {\\\\n  const todaysDate = new Date()\\\\n  return (\\\\n    <ThemeWrapper>\\\\n      <DateTimeSlotPicker\\\\n        title='Available Time Windows:'\\\\n        preferenceDropdownLabel='Prefrence By '\\\\n        isOpen={boolean('isOpen', false)}\\\\n        date={todaysDate}\\\\n        timeWindowPrefrenceDropdown={object(\\\\n          'timeWindowPrefrenceDropdown',\\\\n          DropdownOption\\\\n        )}\\\\n        status={object('status', status)}\\\\n        DateTimeSlots={object('DateTimeSlots', Data)}\\\\n        style={{\\\\n          position: 'absolute',\\\\n          top: 'auto',\\\\n          left: '0px'\\\\n        }}\\\\n        onChange={action('On Change')}\\\\n      >\\\\n        {({ value, open, setOpen }: IDateTimeSlotPickerChildren) => (\\\\n          <div\\\\n            onClick={() => {\\\\n              console.log(open)\\\\n              setOpen(!open)\\\\n            }}\\\\n          >\\\\n            <TextInput\\\\n              id='someId'\\\\n              name='someName'\\\\n              className='someClassname'\\\\n              placeholder='Please Click Here'\\\\n              variant='withIcon'\\\\n              iconVariant='calendar'\\\\n              iconSize='md'\\\\n              value={`${value ? value?.startTimeWindow : ''} - ${\\\\n                value ? value?.endTimeWindow : ''\\\\n              }`}\\\\n              readOnly\\\\n              iconStyle={{ padding: '9px 9px 9px 9px' }}\\\\n            />\\\\n          </div>\\\\n        )}\\\\n      </DateTimeSlotPicker>\\\\n    </ThemeWrapper>\\\\n  )\\\\n}\\\\n\\\",\\\"locationsMap\\\":{}},},\\n  title: `${path}/DateTimeSlotPicker`,\\n  decorators: [withKnobs],\\n  component: DateTimeSlotPicker\\n}\\n\\nconst DropdownOption = [\\n  {\\n    id: 'units',\\n    label: 'Units',\\n    value: 'unit',\\n    availableSlotObjectKey: 'availableNumberOfItems',\\n    totalSlotObjectKey: 'totalNumberOfItems'\\n  },\\n  {\\n    id: 'weight',\\n    label: 'Weight',\\n    value: 'weight',\\n    availableSlotObjectKey: 'availableWeight',\\n    totalSlotObjectKey: 'totalWeight'\\n  },\\n  {\\n    id: 'volume',\\n    label: 'Volume',\\n    value: 'volume',\\n    availableSlotObjectKey: 'availableVolume',\\n    totalSlotObjectKey: 'totalVolume'\\n  },\\n  {\\n    id: 'stops',\\n    label: 'Stops',\\n    value: 'stop',\\n    availableSlotObjectKey: 'availableStops',\\n    totalSlotObjectKey: 'totalStops'\\n  }\\n]\\n\\nconst status = {\\n  available: {\\n    id: 'available',\\n    value: 'AVAILABLE',\\n    label: 'Suggested'\\n  },\\n  notAvailable: {\\n    id: 'notAvailable',\\n    value: 'FULL',\\n    label: 'Not Suggested'\\n  }\\n}\\n\\nexport const SlotPicker = addSourceDecorator(() => {\\n  const todaysDate = new Date()\\n  return (\\n    <ThemeWrapper>\\n      <DateTimeSlotPicker\\n        title='Available Time Windows:'\\n        preferenceDropdownLabel='Prefrence By '\\n        isOpen={boolean('isOpen', false)}\\n        date={todaysDate}\\n        timeWindowPrefrenceDropdown={object(\\n          'timeWindowPrefrenceDropdown',\\n          DropdownOption\\n        )}\\n        status={object('status', status)}\\n        DateTimeSlots={object('DateTimeSlots', Data)}\\n        style={{\\n          position: 'absolute',\\n          top: 'auto',\\n          left: '0px'\\n        }}\\n        onChange={action('On Change')}\\n      >\\n        {({ value, open, setOpen }: IDateTimeSlotPickerChildren) => (\\n          <div\\n            onClick={() => {\\n              console.log(open)\\n              setOpen(!open)\\n            }}\\n          >\\n            <TextInput\\n              id='someId'\\n              name='someName'\\n              className='someClassname'\\n              placeholder='Please Click Here'\\n              variant='withIcon'\\n              iconVariant='calendar'\\n              iconSize='md'\\n              value={`${value ? value?.startTimeWindow : ''} - ${\\n                value ? value?.endTimeWindow : ''\\n              }`}\\n              readOnly\\n              iconStyle={{ padding: '9px 9px 9px 9px' }}\\n            />\\n          </div>\\n        )}\\n      </DateTimeSlotPicker>\\n    </ThemeWrapper>\\n  )\\n}, {__STORY__, __ADDS_MAP__,__MAIN_FILE_LOCATION__,__MODULE_DEPENDENCIES__,__LOCAL_DEPENDENCIES__,__SOURCE_PREFIX__,__IDS_TO_FRAMEWORKS__});\";\n// @ts-ignore\nvar __ADDS_MAP__ = {};\n// @ts-ignore\nvar __MAIN_FILE_LOCATION__ = \"/DateTimeSlotPicker.stories.tsx\";\n// @ts-ignore\nvar __MODULE_DEPENDENCIES__ = [];\n// @ts-ignore\nvar __LOCAL_DEPENDENCIES__ = {};\n// @ts-ignore\nvar __IDS_TO_FRAMEWORKS__ = {};\n        \n\n/* eslint-disable */\n// @ts-nocheck\n// @ts-ignore\nvar withSourceLoader = require('@storybook/source-loader/preview').withSource;\n// @ts-ignore\nvar addSourceDecorator = require(\"@storybook/source-loader/preview\").addSource;\n// @ts-ignore\nvar __SOURCE_PREFIX__ = \"/Users/farhanansari/Desktop/CODE/PrxProject/untitled folder/reactStoryBook/src/components/molecules/DateTimeSlotPicker\";\n// @ts-ignore\nvar __STORY__ = \"import React from 'react'\\nimport { path } from '..'\\nimport DateTimeSlotPicker from '.'\\nimport { object, withKnobs, boolean } from '@storybook/addon-knobs'\\nimport ThemeWrapper from '../../../utilities/components/ThemeWrapper'\\nimport Data from './Data'\\nimport TextInput from '../TextInput'\\nimport { IDateTimeSlotPickerChildren } from './interfaces'\\nimport { action } from '@storybook/addon-actions'\\n\\nexport default {\\n  title: `${path}/DateTimeSlotPicker`,\\n  decorators: [withKnobs],\\n  component: DateTimeSlotPicker\\n}\\n\\nconst DropdownOption = [\\n  {\\n    id: 'units',\\n    label: 'Units',\\n    value: 'unit',\\n    availableSlotObjectKey: 'availableNumberOfItems',\\n    totalSlotObjectKey: 'totalNumberOfItems'\\n  },\\n  {\\n    id: 'weight',\\n    label: 'Weight',\\n    value: 'weight',\\n    availableSlotObjectKey: 'availableWeight',\\n    totalSlotObjectKey: 'totalWeight'\\n  },\\n  {\\n    id: 'volume',\\n    label: 'Volume',\\n    value: 'volume',\\n    availableSlotObjectKey: 'availableVolume',\\n    totalSlotObjectKey: 'totalVolume'\\n  },\\n  {\\n    id: 'stops',\\n    label: 'Stops',\\n    value: 'stop',\\n    availableSlotObjectKey: 'availableStops',\\n    totalSlotObjectKey: 'totalStops'\\n  }\\n]\\n\\nconst status = {\\n  available: {\\n    id: 'available',\\n    value: 'AVAILABLE',\\n    label: 'Suggested'\\n  },\\n  notAvailable: {\\n    id: 'notAvailable',\\n    value: 'FULL',\\n    label: 'Not Suggested'\\n  }\\n}\\n\\nexport const SlotPicker = () => {\\n  const todaysDate = new Date()\\n  return (\\n    <ThemeWrapper>\\n      <DateTimeSlotPicker\\n        title='Available Time Windows:'\\n        preferenceDropdownLabel='Prefrence By '\\n        isOpen={boolean('isOpen', false)}\\n        date={todaysDate}\\n        timeWindowPrefrenceDropdown={object(\\n          'timeWindowPrefrenceDropdown',\\n          DropdownOption\\n        )}\\n        status={object('status', status)}\\n        DateTimeSlots={object('DateTimeSlots', Data)}\\n        style={{\\n          position: 'absolute',\\n          top: 'auto',\\n          left: '0px'\\n        }}\\n        onChange={action('On Change')}\\n      >\\n        {({ value, open, setOpen }: IDateTimeSlotPickerChildren) => (\\n          <div\\n            onClick={() => {\\n              console.log(open)\\n              setOpen(!open)\\n            }}\\n          >\\n            <TextInput\\n              id='someId'\\n              name='someName'\\n              className='someClassname'\\n              placeholder='Please Click Here'\\n              variant='withIcon'\\n              iconVariant='calendar'\\n              iconSize='md'\\n              value={`${value ? value?.startTimeWindow : ''} - ${\\n                value ? value?.endTimeWindow : ''\\n              }`}\\n              readOnly\\n              iconStyle={{ padding: '9px 9px 9px 9px' }}\\n            />\\n          </div>\\n        )}\\n      </DateTimeSlotPicker>\\n    </ThemeWrapper>\\n  )\\n}\\n\";\n// @ts-ignore\nvar __ADDS_MAP__ = {};\n// @ts-ignore\nvar __MAIN_FILE_LOCATION__ = \"/DateTimeSlotPicker.stories.tsx\";\n// @ts-ignore\nvar __MODULE_DEPENDENCIES__ = [];\n// @ts-ignore\nvar __LOCAL_DEPENDENCIES__ = {};\n// @ts-ignore\nvar __IDS_TO_FRAMEWORKS__ = {};\n        \nimport React from 'react'\nimport { path } from '..'\nimport DateTimeSlotPicker from '.'\nimport { object, withKnobs, boolean } from '@storybook/addon-knobs'\nimport ThemeWrapper from '../../../utilities/components/ThemeWrapper'\nimport Data from './Data'\nimport TextInput from '../TextInput'\nimport { IDateTimeSlotPickerChildren } from './interfaces'\nimport { action } from '@storybook/addon-actions'\n\nexport default {parameters: {\"storySource\":{\"source\":\"\\n\\n// @ts-nocheck\\n// @ts-ignore\\nvar withSourceLoader = require('@storybook/source-loader/preview').withSource;\\n// @ts-ignore\\nvar addSourceDecorator = require(\\\"@storybook/source-loader/preview\\\").addSource;\\n// @ts-ignore\\nvar __SOURCE_PREFIX__ = \\\"/Users/farhanansari/Desktop/CODE/PrxProject/untitled folder/reactStoryBook/src/components/molecules/DateTimeSlotPicker\\\";\\n// @ts-ignore\\nvar __STORY__ = \\\"\\\\n\\\\n// @ts-nocheck\\\\n// @ts-ignore\\\\nvar withSourceLoader = require('@storybook/source-loader/preview').withSource;\\\\n// @ts-ignore\\\\nvar addSourceDecorator = require(\\\\\\\"@storybook/source-loader/preview\\\\\\\").addSource;\\\\n// @ts-ignore\\\\nvar __SOURCE_PREFIX__ = \\\\\\\"/Users/farhanansari/Desktop/CODE/PrxProject/untitled folder/reactStoryBook/src/components/molecules/DateTimeSlotPicker\\\\\\\";\\\\n// @ts-ignore\\\\nvar __STORY__ = \\\\\\\"import React from 'react'\\\\\\\\nimport { path } from '..'\\\\\\\\nimport DateTimeSlotPicker from '.'\\\\\\\\nimport { object, withKnobs, boolean } from '@storybook/addon-knobs'\\\\\\\\nimport ThemeWrapper from '../../../utilities/components/ThemeWrapper'\\\\\\\\nimport Data from './Data'\\\\\\\\nimport TextInput from '../TextInput'\\\\\\\\nimport { IDateTimeSlotPickerChildren } from './interfaces'\\\\\\\\nimport { action } from '@storybook/addon-actions'\\\\\\\\n\\\\\\\\nexport default {\\\\\\\\n  title: `${path}/DateTimeSlotPicker`,\\\\\\\\n  decorators: [withKnobs],\\\\\\\\n  component: DateTimeSlotPicker\\\\\\\\n}\\\\\\\\n\\\\\\\\nconst DropdownOption = [\\\\\\\\n  {\\\\\\\\n    id: 'units',\\\\\\\\n    label: 'Units',\\\\\\\\n    value: 'unit',\\\\\\\\n    availableSlotObjectKey: 'availableNumberOfItems',\\\\\\\\n    totalSlotObjectKey: 'totalNumberOfItems'\\\\\\\\n  },\\\\\\\\n  {\\\\\\\\n    id: 'weight',\\\\\\\\n    label: 'Weight',\\\\\\\\n    value: 'weight',\\\\\\\\n    availableSlotObjectKey: 'availableWeight',\\\\\\\\n    totalSlotObjectKey: 'totalWeight'\\\\\\\\n  },\\\\\\\\n  {\\\\\\\\n    id: 'volume',\\\\\\\\n    label: 'Volume',\\\\\\\\n    value: 'volume',\\\\\\\\n    availableSlotObjectKey: 'availableVolume',\\\\\\\\n    totalSlotObjectKey: 'totalVolume'\\\\\\\\n  },\\\\\\\\n  {\\\\\\\\n    id: 'stops',\\\\\\\\n    label: 'Stops',\\\\\\\\n    value: 'stop',\\\\\\\\n    availableSlotObjectKey: 'availableStops',\\\\\\\\n    totalSlotObjectKey: 'totalStops'\\\\\\\\n  }\\\\\\\\n]\\\\\\\\n\\\\\\\\nconst status = {\\\\\\\\n  available: {\\\\\\\\n    id: 'available',\\\\\\\\n    value: 'AVAILABLE',\\\\\\\\n    label: 'Suggested'\\\\\\\\n  },\\\\\\\\n  notAvailable: {\\\\\\\\n    id: 'notAvailable',\\\\\\\\n    value: 'FULL',\\\\\\\\n    label: 'Not Suggested'\\\\\\\\n  }\\\\\\\\n}\\\\\\\\n\\\\\\\\nexport const SlotPicker = () => {\\\\\\\\n  const todaysDate = new Date()\\\\\\\\n  return (\\\\\\\\n    <ThemeWrapper>\\\\\\\\n      <DateTimeSlotPicker\\\\\\\\n        title='Available Time Windows:'\\\\\\\\n        preferenceDropdownLabel='Prefrence By '\\\\\\\\n        isOpen={boolean('isOpen', false)}\\\\\\\\n        date={todaysDate}\\\\\\\\n        timeWindowPrefrenceDropdown={object(\\\\\\\\n          'timeWindowPrefrenceDropdown',\\\\\\\\n          DropdownOption\\\\\\\\n        )}\\\\\\\\n        status={object('status', status)}\\\\\\\\n        DateTimeSlots={object('DateTimeSlots', Data)}\\\\\\\\n        style={{\\\\\\\\n          position: 'absolute',\\\\\\\\n          top: 'auto',\\\\\\\\n          left: '0px'\\\\\\\\n        }}\\\\\\\\n        onChange={action('On Change')}\\\\\\\\n      >\\\\\\\\n        {({ value, open, setOpen }: IDateTimeSlotPickerChildren) => (\\\\\\\\n          <div\\\\\\\\n            onClick={() => {\\\\\\\\n              console.log(open)\\\\\\\\n              setOpen(!open)\\\\\\\\n            }}\\\\\\\\n          >\\\\\\\\n            <TextInput\\\\\\\\n              id='someId'\\\\\\\\n              name='someName'\\\\\\\\n              className='someClassname'\\\\\\\\n              placeholder='Please Click Here'\\\\\\\\n              variant='withIcon'\\\\\\\\n              iconVariant='calendar'\\\\\\\\n              iconSize='md'\\\\\\\\n              value={`${value ? value?.startTimeWindow : ''} - ${\\\\\\\\n                value ? value?.endTimeWindow : ''\\\\\\\\n              }`}\\\\\\\\n              readOnly\\\\\\\\n              iconStyle={{ padding: '9px 9px 9px 9px' }}\\\\\\\\n            />\\\\\\\\n          </div>\\\\\\\\n        )}\\\\\\\\n      </DateTimeSlotPicker>\\\\\\\\n    </ThemeWrapper>\\\\\\\\n  )\\\\\\\\n}\\\\\\\\n\\\\\\\";\\\\n// @ts-ignore\\\\nvar __ADDS_MAP__ = {};\\\\n// @ts-ignore\\\\nvar __MAIN_FILE_LOCATION__ = \\\\\\\"/DateTimeSlotPicker.stories.tsx\\\\\\\";\\\\n// @ts-ignore\\\\nvar __MODULE_DEPENDENCIES__ = [];\\\\n// @ts-ignore\\\\nvar __LOCAL_DEPENDENCIES__ = {};\\\\n// @ts-ignore\\\\nvar __IDS_TO_FRAMEWORKS__ = {};\\\\n        \\\\nimport React from 'react'\\\\nimport { path } from '..'\\\\nimport DateTimeSlotPicker from '.'\\\\nimport { object, withKnobs, boolean } from '@storybook/addon-knobs'\\\\nimport ThemeWrapper from '../../../utilities/components/ThemeWrapper'\\\\nimport Data from './Data'\\\\nimport TextInput from '../TextInput'\\\\nimport { IDateTimeSlotPickerChildren } from './interfaces'\\\\nimport { action } from '@storybook/addon-actions'\\\\n\\\\nexport default {parameters: {\\\\\\\"storySource\\\\\\\":{\\\\\\\"source\\\\\\\":\\\\\\\"import React from 'react'\\\\\\\\nimport { path } from '..'\\\\\\\\nimport DateTimeSlotPicker from '.'\\\\\\\\nimport { object, withKnobs, boolean } from '@storybook/addon-knobs'\\\\\\\\nimport ThemeWrapper from '../../../utilities/components/ThemeWrapper'\\\\\\\\nimport Data from './Data'\\\\\\\\nimport TextInput from '../TextInput'\\\\\\\\nimport { IDateTimeSlotPickerChildren } from './interfaces'\\\\\\\\nimport { action } from '@storybook/addon-actions'\\\\\\\\n\\\\\\\\nexport default {\\\\\\\\n  title: `${path}/DateTimeSlotPicker`,\\\\\\\\n  decorators: [withKnobs],\\\\\\\\n  component: DateTimeSlotPicker\\\\\\\\n}\\\\\\\\n\\\\\\\\nconst DropdownOption = [\\\\\\\\n  {\\\\\\\\n    id: 'units',\\\\\\\\n    label: 'Units',\\\\\\\\n    value: 'unit',\\\\\\\\n    availableSlotObjectKey: 'availableNumberOfItems',\\\\\\\\n    totalSlotObjectKey: 'totalNumberOfItems'\\\\\\\\n  },\\\\\\\\n  {\\\\\\\\n    id: 'weight',\\\\\\\\n    label: 'Weight',\\\\\\\\n    value: 'weight',\\\\\\\\n    availableSlotObjectKey: 'availableWeight',\\\\\\\\n    totalSlotObjectKey: 'totalWeight'\\\\\\\\n  },\\\\\\\\n  {\\\\\\\\n    id: 'volume',\\\\\\\\n    label: 'Volume',\\\\\\\\n    value: 'volume',\\\\\\\\n    availableSlotObjectKey: 'availableVolume',\\\\\\\\n    totalSlotObjectKey: 'totalVolume'\\\\\\\\n  },\\\\\\\\n  {\\\\\\\\n    id: 'stops',\\\\\\\\n    label: 'Stops',\\\\\\\\n    value: 'stop',\\\\\\\\n    availableSlotObjectKey: 'availableStops',\\\\\\\\n    totalSlotObjectKey: 'totalStops'\\\\\\\\n  }\\\\\\\\n]\\\\\\\\n\\\\\\\\nconst status = {\\\\\\\\n  available: {\\\\\\\\n    id: 'available',\\\\\\\\n    value: 'AVAILABLE',\\\\\\\\n    label: 'Suggested'\\\\\\\\n  },\\\\\\\\n  notAvailable: {\\\\\\\\n    id: 'notAvailable',\\\\\\\\n    value: 'FULL',\\\\\\\\n    label: 'Not Suggested'\\\\\\\\n  }\\\\\\\\n}\\\\\\\\n\\\\\\\\nexport const SlotPicker = () => {\\\\\\\\n  const todaysDate = new Date()\\\\\\\\n  return (\\\\\\\\n    <ThemeWrapper>\\\\\\\\n      <DateTimeSlotPicker\\\\\\\\n        title='Available Time Windows:'\\\\\\\\n        preferenceDropdownLabel='Prefrence By '\\\\\\\\n        isOpen={boolean('isOpen', false)}\\\\\\\\n        date={todaysDate}\\\\\\\\n        timeWindowPrefrenceDropdown={object(\\\\\\\\n          'timeWindowPrefrenceDropdown',\\\\\\\\n          DropdownOption\\\\\\\\n        )}\\\\\\\\n        status={object('status', status)}\\\\\\\\n        DateTimeSlots={object('DateTimeSlots', Data)}\\\\\\\\n        style={{\\\\\\\\n          position: 'absolute',\\\\\\\\n          top: 'auto',\\\\\\\\n          left: '0px'\\\\\\\\n        }}\\\\\\\\n        onChange={action('On Change')}\\\\\\\\n      >\\\\\\\\n        {({ value, open, setOpen }: IDateTimeSlotPickerChildren) => (\\\\\\\\n          <div\\\\\\\\n            onClick={() => {\\\\\\\\n              console.log(open)\\\\\\\\n              setOpen(!open)\\\\\\\\n            }}\\\\\\\\n          >\\\\\\\\n            <TextInput\\\\\\\\n              id='someId'\\\\\\\\n              name='someName'\\\\\\\\n              className='someClassname'\\\\\\\\n              placeholder='Please Click Here'\\\\\\\\n              variant='withIcon'\\\\\\\\n              iconVariant='calendar'\\\\\\\\n              iconSize='md'\\\\\\\\n              value={`${value ? value?.startTimeWindow : ''} - ${\\\\\\\\n                value ? value?.endTimeWindow : ''\\\\\\\\n              }`}\\\\\\\\n              readOnly\\\\\\\\n              iconStyle={{ padding: '9px 9px 9px 9px' }}\\\\\\\\n            />\\\\\\\\n          </div>\\\\\\\\n        )}\\\\\\\\n      </DateTimeSlotPicker>\\\\\\\\n    </ThemeWrapper>\\\\\\\\n  )\\\\\\\\n}\\\\\\\\n\\\\\\\",\\\\\\\"locationsMap\\\\\\\":{}},},\\\\n  title: `${path}/DateTimeSlotPicker`,\\\\n  decorators: [withKnobs],\\\\n  component: DateTimeSlotPicker\\\\n}\\\\n\\\\nconst DropdownOption = [\\\\n  {\\\\n    id: 'units',\\\\n    label: 'Units',\\\\n    value: 'unit',\\\\n    availableSlotObjectKey: 'availableNumberOfItems',\\\\n    totalSlotObjectKey: 'totalNumberOfItems'\\\\n  },\\\\n  {\\\\n    id: 'weight',\\\\n    label: 'Weight',\\\\n    value: 'weight',\\\\n    availableSlotObjectKey: 'availableWeight',\\\\n    totalSlotObjectKey: 'totalWeight'\\\\n  },\\\\n  {\\\\n    id: 'volume',\\\\n    label: 'Volume',\\\\n    value: 'volume',\\\\n    availableSlotObjectKey: 'availableVolume',\\\\n    totalSlotObjectKey: 'totalVolume'\\\\n  },\\\\n  {\\\\n    id: 'stops',\\\\n    label: 'Stops',\\\\n    value: 'stop',\\\\n    availableSlotObjectKey: 'availableStops',\\\\n    totalSlotObjectKey: 'totalStops'\\\\n  }\\\\n]\\\\n\\\\nconst status = {\\\\n  available: {\\\\n    id: 'available',\\\\n    value: 'AVAILABLE',\\\\n    label: 'Suggested'\\\\n  },\\\\n  notAvailable: {\\\\n    id: 'notAvailable',\\\\n    value: 'FULL',\\\\n    label: 'Not Suggested'\\\\n  }\\\\n}\\\\n\\\\nexport const SlotPicker = addSourceDecorator(() => {\\\\n  const todaysDate = new Date()\\\\n  return (\\\\n    <ThemeWrapper>\\\\n      <DateTimeSlotPicker\\\\n        title='Available Time Windows:'\\\\n        preferenceDropdownLabel='Prefrence By '\\\\n        isOpen={boolean('isOpen', false)}\\\\n        date={todaysDate}\\\\n        timeWindowPrefrenceDropdown={object(\\\\n          'timeWindowPrefrenceDropdown',\\\\n          DropdownOption\\\\n        )}\\\\n        status={object('status', status)}\\\\n        DateTimeSlots={object('DateTimeSlots', Data)}\\\\n        style={{\\\\n          position: 'absolute',\\\\n          top: 'auto',\\\\n          left: '0px'\\\\n        }}\\\\n        onChange={action('On Change')}\\\\n      >\\\\n        {({ value, open, setOpen }: IDateTimeSlotPickerChildren) => (\\\\n          <div\\\\n            onClick={() => {\\\\n              console.log(open)\\\\n              setOpen(!open)\\\\n            }}\\\\n          >\\\\n            <TextInput\\\\n              id='someId'\\\\n              name='someName'\\\\n              className='someClassname'\\\\n              placeholder='Please Click Here'\\\\n              variant='withIcon'\\\\n              iconVariant='calendar'\\\\n              iconSize='md'\\\\n              value={`${value ? value?.startTimeWindow : ''} - ${\\\\n                value ? value?.endTimeWindow : ''\\\\n              }`}\\\\n              readOnly\\\\n              iconStyle={{ padding: '9px 9px 9px 9px' }}\\\\n            />\\\\n          </div>\\\\n        )}\\\\n      </DateTimeSlotPicker>\\\\n    </ThemeWrapper>\\\\n  )\\\\n}, {__STORY__, __ADDS_MAP__,__MAIN_FILE_LOCATION__,__MODULE_DEPENDENCIES__,__LOCAL_DEPENDENCIES__,__SOURCE_PREFIX__,__IDS_TO_FRAMEWORKS__});\\\";\\n// @ts-ignore\\nvar __ADDS_MAP__ = {};\\n// @ts-ignore\\nvar __MAIN_FILE_LOCATION__ = \\\"/DateTimeSlotPicker.stories.tsx\\\";\\n// @ts-ignore\\nvar __MODULE_DEPENDENCIES__ = [];\\n// @ts-ignore\\nvar __LOCAL_DEPENDENCIES__ = {};\\n// @ts-ignore\\nvar __IDS_TO_FRAMEWORKS__ = {};\\n        \\n\\n\\n// @ts-nocheck\\n// @ts-ignore\\nvar withSourceLoader = require('@storybook/source-loader/preview').withSource;\\n// @ts-ignore\\nvar addSourceDecorator = require(\\\"@storybook/source-loader/preview\\\").addSource;\\n// @ts-ignore\\nvar __SOURCE_PREFIX__ = \\\"/Users/farhanansari/Desktop/CODE/PrxProject/untitled folder/reactStoryBook/src/components/molecules/DateTimeSlotPicker\\\";\\n// @ts-ignore\\nvar __STORY__ = \\\"import React from 'react'\\\\nimport { path } from '..'\\\\nimport DateTimeSlotPicker from '.'\\\\nimport { object, withKnobs, boolean } from '@storybook/addon-knobs'\\\\nimport ThemeWrapper from '../../../utilities/components/ThemeWrapper'\\\\nimport Data from './Data'\\\\nimport TextInput from '../TextInput'\\\\nimport { IDateTimeSlotPickerChildren } from './interfaces'\\\\nimport { action } from '@storybook/addon-actions'\\\\n\\\\nexport default {\\\\n  title: `${path}/DateTimeSlotPicker`,\\\\n  decorators: [withKnobs],\\\\n  component: DateTimeSlotPicker\\\\n}\\\\n\\\\nconst DropdownOption = [\\\\n  {\\\\n    id: 'units',\\\\n    label: 'Units',\\\\n    value: 'unit',\\\\n    availableSlotObjectKey: 'availableNumberOfItems',\\\\n    totalSlotObjectKey: 'totalNumberOfItems'\\\\n  },\\\\n  {\\\\n    id: 'weight',\\\\n    label: 'Weight',\\\\n    value: 'weight',\\\\n    availableSlotObjectKey: 'availableWeight',\\\\n    totalSlotObjectKey: 'totalWeight'\\\\n  },\\\\n  {\\\\n    id: 'volume',\\\\n    label: 'Volume',\\\\n    value: 'volume',\\\\n    availableSlotObjectKey: 'availableVolume',\\\\n    totalSlotObjectKey: 'totalVolume'\\\\n  },\\\\n  {\\\\n    id: 'stops',\\\\n    label: 'Stops',\\\\n    value: 'stop',\\\\n    availableSlotObjectKey: 'availableStops',\\\\n    totalSlotObjectKey: 'totalStops'\\\\n  }\\\\n]\\\\n\\\\nconst status = {\\\\n  available: {\\\\n    id: 'available',\\\\n    value: 'AVAILABLE',\\\\n    label: 'Suggested'\\\\n  },\\\\n  notAvailable: {\\\\n    id: 'notAvailable',\\\\n    value: 'FULL',\\\\n    label: 'Not Suggested'\\\\n  }\\\\n}\\\\n\\\\nexport const SlotPicker = () => {\\\\n  const todaysDate = new Date()\\\\n  return (\\\\n    <ThemeWrapper>\\\\n      <DateTimeSlotPicker\\\\n        title='Available Time Windows:'\\\\n        preferenceDropdownLabel='Prefrence By '\\\\n        isOpen={boolean('isOpen', false)}\\\\n        date={todaysDate}\\\\n        timeWindowPrefrenceDropdown={object(\\\\n          'timeWindowPrefrenceDropdown',\\\\n          DropdownOption\\\\n        )}\\\\n        status={object('status', status)}\\\\n        DateTimeSlots={object('DateTimeSlots', Data)}\\\\n        style={{\\\\n          position: 'absolute',\\\\n          top: 'auto',\\\\n          left: '0px'\\\\n        }}\\\\n        onChange={action('On Change')}\\\\n      >\\\\n        {({ value, open, setOpen }: IDateTimeSlotPickerChildren) => (\\\\n          <div\\\\n            onClick={() => {\\\\n              console.log(open)\\\\n              setOpen(!open)\\\\n            }}\\\\n          >\\\\n            <TextInput\\\\n              id='someId'\\\\n              name='someName'\\\\n              className='someClassname'\\\\n              placeholder='Please Click Here'\\\\n              variant='withIcon'\\\\n              iconVariant='calendar'\\\\n              iconSize='md'\\\\n              value={`${value ? value?.startTimeWindow : ''} - ${\\\\n                value ? value?.endTimeWindow : ''\\\\n              }`}\\\\n              readOnly\\\\n              iconStyle={{ padding: '9px 9px 9px 9px' }}\\\\n            />\\\\n          </div>\\\\n        )}\\\\n      </DateTimeSlotPicker>\\\\n    </ThemeWrapper>\\\\n  )\\\\n}\\\\n\\\";\\n// @ts-ignore\\nvar __ADDS_MAP__ = {};\\n// @ts-ignore\\nvar __MAIN_FILE_LOCATION__ = \\\"/DateTimeSlotPicker.stories.tsx\\\";\\n// @ts-ignore\\nvar __MODULE_DEPENDENCIES__ = [];\\n// @ts-ignore\\nvar __LOCAL_DEPENDENCIES__ = {};\\n// @ts-ignore\\nvar __IDS_TO_FRAMEWORKS__ = {};\\n        \\nimport React from 'react'\\nimport { path } from '..'\\nimport DateTimeSlotPicker from '.'\\nimport { object, withKnobs, boolean } from '@storybook/addon-knobs'\\nimport ThemeWrapper from '../../../utilities/components/ThemeWrapper'\\nimport Data from './Data'\\nimport TextInput from '../TextInput'\\nimport { IDateTimeSlotPickerChildren } from './interfaces'\\nimport { action } from '@storybook/addon-actions'\\n\\nexport default {parameters: {\\\"storySource\\\":{\\\"source\\\":\\\"\\\\n\\\\n// @ts-nocheck\\\\n// @ts-ignore\\\\nvar withSourceLoader = require('@storybook/source-loader/preview').withSource;\\\\n// @ts-ignore\\\\nvar addSourceDecorator = require(\\\\\\\"@storybook/source-loader/preview\\\\\\\").addSource;\\\\n// @ts-ignore\\\\nvar __SOURCE_PREFIX__ = \\\\\\\"/Users/farhanansari/Desktop/CODE/PrxProject/untitled folder/reactStoryBook/src/components/molecules/DateTimeSlotPicker\\\\\\\";\\\\n// @ts-ignore\\\\nvar __STORY__ = \\\\\\\"import React from 'react'\\\\\\\\nimport { path } from '..'\\\\\\\\nimport DateTimeSlotPicker from '.'\\\\\\\\nimport { object, withKnobs, boolean } from '@storybook/addon-knobs'\\\\\\\\nimport ThemeWrapper from '../../../utilities/components/ThemeWrapper'\\\\\\\\nimport Data from './Data'\\\\\\\\nimport TextInput from '../TextInput'\\\\\\\\nimport { IDateTimeSlotPickerChildren } from './interfaces'\\\\\\\\nimport { action } from '@storybook/addon-actions'\\\\\\\\n\\\\\\\\nexport default {\\\\\\\\n  title: `${path}/DateTimeSlotPicker`,\\\\\\\\n  decorators: [withKnobs],\\\\\\\\n  component: DateTimeSlotPicker\\\\\\\\n}\\\\\\\\n\\\\\\\\nconst DropdownOption = [\\\\\\\\n  {\\\\\\\\n    id: 'units',\\\\\\\\n    label: 'Units',\\\\\\\\n    value: 'unit',\\\\\\\\n    availableSlotObjectKey: 'availableNumberOfItems',\\\\\\\\n    totalSlotObjectKey: 'totalNumberOfItems'\\\\\\\\n  },\\\\\\\\n  {\\\\\\\\n    id: 'weight',\\\\\\\\n    label: 'Weight',\\\\\\\\n    value: 'weight',\\\\\\\\n    availableSlotObjectKey: 'availableWeight',\\\\\\\\n    totalSlotObjectKey: 'totalWeight'\\\\\\\\n  },\\\\\\\\n  {\\\\\\\\n    id: 'volume',\\\\\\\\n    label: 'Volume',\\\\\\\\n    value: 'volume',\\\\\\\\n    availableSlotObjectKey: 'availableVolume',\\\\\\\\n    totalSlotObjectKey: 'totalVolume'\\\\\\\\n  },\\\\\\\\n  {\\\\\\\\n    id: 'stops',\\\\\\\\n    label: 'Stops',\\\\\\\\n    value: 'stop',\\\\\\\\n    availableSlotObjectKey: 'availableStops',\\\\\\\\n    totalSlotObjectKey: 'totalStops'\\\\\\\\n  }\\\\\\\\n]\\\\\\\\n\\\\\\\\nconst status = {\\\\\\\\n  available: {\\\\\\\\n    id: 'available',\\\\\\\\n    value: 'AVAILABLE',\\\\\\\\n    label: 'Suggested'\\\\\\\\n  },\\\\\\\\n  notAvailable: {\\\\\\\\n    id: 'notAvailable',\\\\\\\\n    value: 'FULL',\\\\\\\\n    label: 'Not Suggested'\\\\\\\\n  }\\\\\\\\n}\\\\\\\\n\\\\\\\\nexport const SlotPicker = () => {\\\\\\\\n  const todaysDate = new Date()\\\\\\\\n  return (\\\\\\\\n    <ThemeWrapper>\\\\\\\\n      <DateTimeSlotPicker\\\\\\\\n        title='Available Time Windows:'\\\\\\\\n        preferenceDropdownLabel='Prefrence By '\\\\\\\\n        isOpen={boolean('isOpen', false)}\\\\\\\\n        date={todaysDate}\\\\\\\\n        timeWindowPrefrenceDropdown={object(\\\\\\\\n          'timeWindowPrefrenceDropdown',\\\\\\\\n          DropdownOption\\\\\\\\n        )}\\\\\\\\n        status={object('status', status)}\\\\\\\\n        DateTimeSlots={object('DateTimeSlots', Data)}\\\\\\\\n        style={{\\\\\\\\n          position: 'absolute',\\\\\\\\n          top: 'auto',\\\\\\\\n          left: '0px'\\\\\\\\n        }}\\\\\\\\n        onChange={action('On Change')}\\\\\\\\n      >\\\\\\\\n        {({ value, open, setOpen }: IDateTimeSlotPickerChildren) => (\\\\\\\\n          <div\\\\\\\\n            onClick={() => {\\\\\\\\n              console.log(open)\\\\\\\\n              setOpen(!open)\\\\\\\\n            }}\\\\\\\\n          >\\\\\\\\n            <TextInput\\\\\\\\n              id='someId'\\\\\\\\n              name='someName'\\\\\\\\n              className='someClassname'\\\\\\\\n              placeholder='Please Click Here'\\\\\\\\n              variant='withIcon'\\\\\\\\n              iconVariant='calendar'\\\\\\\\n              iconSize='md'\\\\\\\\n              value={`${value ? value?.startTimeWindow : ''} - ${\\\\\\\\n                value ? value?.endTimeWindow : ''\\\\\\\\n              }`}\\\\\\\\n              readOnly\\\\\\\\n              iconStyle={{ padding: '9px 9px 9px 9px' }}\\\\\\\\n            />\\\\\\\\n          </div>\\\\\\\\n        )}\\\\\\\\n      </DateTimeSlotPicker>\\\\\\\\n    </ThemeWrapper>\\\\\\\\n  )\\\\\\\\n}\\\\\\\\n\\\\\\\";\\\\n// @ts-ignore\\\\nvar __ADDS_MAP__ = {};\\\\n// @ts-ignore\\\\nvar __MAIN_FILE_LOCATION__ = \\\\\\\"/DateTimeSlotPicker.stories.tsx\\\\\\\";\\\\n// @ts-ignore\\\\nvar __MODULE_DEPENDENCIES__ = [];\\\\n// @ts-ignore\\\\nvar __LOCAL_DEPENDENCIES__ = {};\\\\n// @ts-ignore\\\\nvar __IDS_TO_FRAMEWORKS__ = {};\\\\n        \\\\nimport React from 'react'\\\\nimport { path } from '..'\\\\nimport DateTimeSlotPicker from '.'\\\\nimport { object, withKnobs, boolean } from '@storybook/addon-knobs'\\\\nimport ThemeWrapper from '../../../utilities/components/ThemeWrapper'\\\\nimport Data from './Data'\\\\nimport TextInput from '../TextInput'\\\\nimport { IDateTimeSlotPickerChildren } from './interfaces'\\\\nimport { action } from '@storybook/addon-actions'\\\\n\\\\nexport default {parameters: {\\\\\\\"storySource\\\\\\\":{\\\\\\\"source\\\\\\\":\\\\\\\"import React from 'react'\\\\\\\\nimport { path } from '..'\\\\\\\\nimport DateTimeSlotPicker from '.'\\\\\\\\nimport { object, withKnobs, boolean } from '@storybook/addon-knobs'\\\\\\\\nimport ThemeWrapper from '../../../utilities/components/ThemeWrapper'\\\\\\\\nimport Data from './Data'\\\\\\\\nimport TextInput from '../TextInput'\\\\\\\\nimport { IDateTimeSlotPickerChildren } from './interfaces'\\\\\\\\nimport { action } from '@storybook/addon-actions'\\\\\\\\n\\\\\\\\nexport default {\\\\\\\\n  title: `${path}/DateTimeSlotPicker`,\\\\\\\\n  decorators: [withKnobs],\\\\\\\\n  component: DateTimeSlotPicker\\\\\\\\n}\\\\\\\\n\\\\\\\\nconst DropdownOption = [\\\\\\\\n  {\\\\\\\\n    id: 'units',\\\\\\\\n    label: 'Units',\\\\\\\\n    value: 'unit',\\\\\\\\n    availableSlotObjectKey: 'availableNumberOfItems',\\\\\\\\n    totalSlotObjectKey: 'totalNumberOfItems'\\\\\\\\n  },\\\\\\\\n  {\\\\\\\\n    id: 'weight',\\\\\\\\n    label: 'Weight',\\\\\\\\n    value: 'weight',\\\\\\\\n    availableSlotObjectKey: 'availableWeight',\\\\\\\\n    totalSlotObjectKey: 'totalWeight'\\\\\\\\n  },\\\\\\\\n  {\\\\\\\\n    id: 'volume',\\\\\\\\n    label: 'Volume',\\\\\\\\n    value: 'volume',\\\\\\\\n    availableSlotObjectKey: 'availableVolume',\\\\\\\\n    totalSlotObjectKey: 'totalVolume'\\\\\\\\n  },\\\\\\\\n  {\\\\\\\\n    id: 'stops',\\\\\\\\n    label: 'Stops',\\\\\\\\n    value: 'stop',\\\\\\\\n    availableSlotObjectKey: 'availableStops',\\\\\\\\n    totalSlotObjectKey: 'totalStops'\\\\\\\\n  }\\\\\\\\n]\\\\\\\\n\\\\\\\\nconst status = {\\\\\\\\n  available: {\\\\\\\\n    id: 'available',\\\\\\\\n    value: 'AVAILABLE',\\\\\\\\n    label: 'Suggested'\\\\\\\\n  },\\\\\\\\n  notAvailable: {\\\\\\\\n    id: 'notAvailable',\\\\\\\\n    value: 'FULL',\\\\\\\\n    label: 'Not Suggested'\\\\\\\\n  }\\\\\\\\n}\\\\\\\\n\\\\\\\\nexport const SlotPicker = () => {\\\\\\\\n  const todaysDate = new Date()\\\\\\\\n  return (\\\\\\\\n    <ThemeWrapper>\\\\\\\\n      <DateTimeSlotPicker\\\\\\\\n        title='Available Time Windows:'\\\\\\\\n        preferenceDropdownLabel='Prefrence By '\\\\\\\\n        isOpen={boolean('isOpen', false)}\\\\\\\\n        date={todaysDate}\\\\\\\\n        timeWindowPrefrenceDropdown={object(\\\\\\\\n          'timeWindowPrefrenceDropdown',\\\\\\\\n          DropdownOption\\\\\\\\n        )}\\\\\\\\n        status={object('status', status)}\\\\\\\\n        DateTimeSlots={object('DateTimeSlots', Data)}\\\\\\\\n        style={{\\\\\\\\n          position: 'absolute',\\\\\\\\n          top: 'auto',\\\\\\\\n          left: '0px'\\\\\\\\n        }}\\\\\\\\n        onChange={action('On Change')}\\\\\\\\n      >\\\\\\\\n        {({ value, open, setOpen }: IDateTimeSlotPickerChildren) => (\\\\\\\\n          <div\\\\\\\\n            onClick={() => {\\\\\\\\n              console.log(open)\\\\\\\\n              setOpen(!open)\\\\\\\\n            }}\\\\\\\\n          >\\\\\\\\n            <TextInput\\\\\\\\n              id='someId'\\\\\\\\n              name='someName'\\\\\\\\n              className='someClassname'\\\\\\\\n              placeholder='Please Click Here'\\\\\\\\n              variant='withIcon'\\\\\\\\n              iconVariant='calendar'\\\\\\\\n              iconSize='md'\\\\\\\\n              value={`${value ? value?.startTimeWindow : ''} - ${\\\\\\\\n                value ? value?.endTimeWindow : ''\\\\\\\\n              }`}\\\\\\\\n              readOnly\\\\\\\\n              iconStyle={{ padding: '9px 9px 9px 9px' }}\\\\\\\\n            />\\\\\\\\n          </div>\\\\\\\\n        )}\\\\\\\\n      </DateTimeSlotPicker>\\\\\\\\n    </ThemeWrapper>\\\\\\\\n  )\\\\\\\\n}\\\\\\\\n\\\\\\\",\\\\\\\"locationsMap\\\\\\\":{}},},\\\\n  title: `${path}/DateTimeSlotPicker`,\\\\n  decorators: [withKnobs],\\\\n  component: DateTimeSlotPicker\\\\n}\\\\n\\\\nconst DropdownOption = [\\\\n  {\\\\n    id: 'units',\\\\n    label: 'Units',\\\\n    value: 'unit',\\\\n    availableSlotObjectKey: 'availableNumberOfItems',\\\\n    totalSlotObjectKey: 'totalNumberOfItems'\\\\n  },\\\\n  {\\\\n    id: 'weight',\\\\n    label: 'Weight',\\\\n    value: 'weight',\\\\n    availableSlotObjectKey: 'availableWeight',\\\\n    totalSlotObjectKey: 'totalWeight'\\\\n  },\\\\n  {\\\\n    id: 'volume',\\\\n    label: 'Volume',\\\\n    value: 'volume',\\\\n    availableSlotObjectKey: 'availableVolume',\\\\n    totalSlotObjectKey: 'totalVolume'\\\\n  },\\\\n  {\\\\n    id: 'stops',\\\\n    label: 'Stops',\\\\n    value: 'stop',\\\\n    availableSlotObjectKey: 'availableStops',\\\\n    totalSlotObjectKey: 'totalStops'\\\\n  }\\\\n]\\\\n\\\\nconst status = {\\\\n  available: {\\\\n    id: 'available',\\\\n    value: 'AVAILABLE',\\\\n    label: 'Suggested'\\\\n  },\\\\n  notAvailable: {\\\\n    id: 'notAvailable',\\\\n    value: 'FULL',\\\\n    label: 'Not Suggested'\\\\n  }\\\\n}\\\\n\\\\nexport const SlotPicker = addSourceDecorator(() => {\\\\n  const todaysDate = new Date()\\\\n  return (\\\\n    <ThemeWrapper>\\\\n      <DateTimeSlotPicker\\\\n        title='Available Time Windows:'\\\\n        preferenceDropdownLabel='Prefrence By '\\\\n        isOpen={boolean('isOpen', false)}\\\\n        date={todaysDate}\\\\n        timeWindowPrefrenceDropdown={object(\\\\n          'timeWindowPrefrenceDropdown',\\\\n          DropdownOption\\\\n        )}\\\\n        status={object('status', status)}\\\\n        DateTimeSlots={object('DateTimeSlots', Data)}\\\\n        style={{\\\\n          position: 'absolute',\\\\n          top: 'auto',\\\\n          left: '0px'\\\\n        }}\\\\n        onChange={action('On Change')}\\\\n      >\\\\n        {({ value, open, setOpen }: IDateTimeSlotPickerChildren) => (\\\\n          <div\\\\n            onClick={() => {\\\\n              console.log(open)\\\\n              setOpen(!open)\\\\n            }}\\\\n          >\\\\n            <TextInput\\\\n              id='someId'\\\\n              name='someName'\\\\n              className='someClassname'\\\\n              placeholder='Please Click Here'\\\\n              variant='withIcon'\\\\n              iconVariant='calendar'\\\\n              iconSize='md'\\\\n              value={`${value ? value?.startTimeWindow : ''} - ${\\\\n                value ? value?.endTimeWindow : ''\\\\n              }`}\\\\n              readOnly\\\\n              iconStyle={{ padding: '9px 9px 9px 9px' }}\\\\n            />\\\\n          </div>\\\\n        )}\\\\n      </DateTimeSlotPicker>\\\\n    </ThemeWrapper>\\\\n  )\\\\n}, {__STORY__, __ADDS_MAP__,__MAIN_FILE_LOCATION__,__MODULE_DEPENDENCIES__,__LOCAL_DEPENDENCIES__,__SOURCE_PREFIX__,__IDS_TO_FRAMEWORKS__});\\\",\\\"locationsMap\\\":{}},\\\"storySource\\\":{\\\"source\\\":\\\"import React from 'react'\\\\nimport { path } from '..'\\\\nimport DateTimeSlotPicker from '.'\\\\nimport { object, withKnobs, boolean } from '@storybook/addon-knobs'\\\\nimport ThemeWrapper from '../../../utilities/components/ThemeWrapper'\\\\nimport Data from './Data'\\\\nimport TextInput from '../TextInput'\\\\nimport { IDateTimeSlotPickerChildren } from './interfaces'\\\\nimport { action } from '@storybook/addon-actions'\\\\n\\\\nexport default {\\\\n  title: `${path}/DateTimeSlotPicker`,\\\\n  decorators: [withKnobs],\\\\n  component: DateTimeSlotPicker\\\\n}\\\\n\\\\nconst DropdownOption = [\\\\n  {\\\\n    id: 'units',\\\\n    label: 'Units',\\\\n    value: 'unit',\\\\n    availableSlotObjectKey: 'availableNumberOfItems',\\\\n    totalSlotObjectKey: 'totalNumberOfItems'\\\\n  },\\\\n  {\\\\n    id: 'weight',\\\\n    label: 'Weight',\\\\n    value: 'weight',\\\\n    availableSlotObjectKey: 'availableWeight',\\\\n    totalSlotObjectKey: 'totalWeight'\\\\n  },\\\\n  {\\\\n    id: 'volume',\\\\n    label: 'Volume',\\\\n    value: 'volume',\\\\n    availableSlotObjectKey: 'availableVolume',\\\\n    totalSlotObjectKey: 'totalVolume'\\\\n  },\\\\n  {\\\\n    id: 'stops',\\\\n    label: 'Stops',\\\\n    value: 'stop',\\\\n    availableSlotObjectKey: 'availableStops',\\\\n    totalSlotObjectKey: 'totalStops'\\\\n  }\\\\n]\\\\n\\\\nconst status = {\\\\n  available: {\\\\n    id: 'available',\\\\n    value: 'AVAILABLE',\\\\n    label: 'Suggested'\\\\n  },\\\\n  notAvailable: {\\\\n    id: 'notAvailable',\\\\n    value: 'FULL',\\\\n    label: 'Not Suggested'\\\\n  }\\\\n}\\\\n\\\\nexport const SlotPicker = () => {\\\\n  const todaysDate = new Date()\\\\n  return (\\\\n    <ThemeWrapper>\\\\n      <DateTimeSlotPicker\\\\n        title='Available Time Windows:'\\\\n        preferenceDropdownLabel='Prefrence By '\\\\n        isOpen={boolean('isOpen', false)}\\\\n        date={todaysDate}\\\\n        timeWindowPrefrenceDropdown={object(\\\\n          'timeWindowPrefrenceDropdown',\\\\n          DropdownOption\\\\n        )}\\\\n        status={object('status', status)}\\\\n        DateTimeSlots={object('DateTimeSlots', Data)}\\\\n        style={{\\\\n          position: 'absolute',\\\\n          top: 'auto',\\\\n          left: '0px'\\\\n        }}\\\\n        onChange={action('On Change')}\\\\n      >\\\\n        {({ value, open, setOpen }: IDateTimeSlotPickerChildren) => (\\\\n          <div\\\\n            onClick={() => {\\\\n              console.log(open)\\\\n              setOpen(!open)\\\\n            }}\\\\n          >\\\\n            <TextInput\\\\n              id='someId'\\\\n              name='someName'\\\\n              className='someClassname'\\\\n              placeholder='Please Click Here'\\\\n              variant='withIcon'\\\\n              iconVariant='calendar'\\\\n              iconSize='md'\\\\n              value={`${value ? value?.startTimeWindow : ''} - ${\\\\n                value ? value?.endTimeWindow : ''\\\\n              }`}\\\\n              readOnly\\\\n              iconStyle={{ padding: '9px 9px 9px 9px' }}\\\\n            />\\\\n          </div>\\\\n        )}\\\\n      </DateTimeSlotPicker>\\\\n    </ThemeWrapper>\\\\n  )\\\\n}\\\\n\\\",\\\"locationsMap\\\":{}},},\\n  title: `${path}/DateTimeSlotPicker`,\\n  decorators: [withKnobs],\\n  component: DateTimeSlotPicker\\n}\\n\\nconst DropdownOption = [\\n  {\\n    id: 'units',\\n    label: 'Units',\\n    value: 'unit',\\n    availableSlotObjectKey: 'availableNumberOfItems',\\n    totalSlotObjectKey: 'totalNumberOfItems'\\n  },\\n  {\\n    id: 'weight',\\n    label: 'Weight',\\n    value: 'weight',\\n    availableSlotObjectKey: 'availableWeight',\\n    totalSlotObjectKey: 'totalWeight'\\n  },\\n  {\\n    id: 'volume',\\n    label: 'Volume',\\n    value: 'volume',\\n    availableSlotObjectKey: 'availableVolume',\\n    totalSlotObjectKey: 'totalVolume'\\n  },\\n  {\\n    id: 'stops',\\n    label: 'Stops',\\n    value: 'stop',\\n    availableSlotObjectKey: 'availableStops',\\n    totalSlotObjectKey: 'totalStops'\\n  }\\n]\\n\\nconst status = {\\n  available: {\\n    id: 'available',\\n    value: 'AVAILABLE',\\n    label: 'Suggested'\\n  },\\n  notAvailable: {\\n    id: 'notAvailable',\\n    value: 'FULL',\\n    label: 'Not Suggested'\\n  }\\n}\\n\\nexport const SlotPicker = addSourceDecorator(addSourceDecorator(() => {\\n  const todaysDate = new Date()\\n  return (\\n    <ThemeWrapper>\\n      <DateTimeSlotPicker\\n        title='Available Time Windows:'\\n        preferenceDropdownLabel='Prefrence By '\\n        isOpen={boolean('isOpen', false)}\\n        date={todaysDate}\\n        timeWindowPrefrenceDropdown={object(\\n          'timeWindowPrefrenceDropdown',\\n          DropdownOption\\n        )}\\n        status={object('status', status)}\\n        DateTimeSlots={object('DateTimeSlots', Data)}\\n        style={{\\n          position: 'absolute',\\n          top: 'auto',\\n          left: '0px'\\n        }}\\n        onChange={action('On Change')}\\n      >\\n        {({ value, open, setOpen }: IDateTimeSlotPickerChildren) => (\\n          <div\\n            onClick={() => {\\n              console.log(open)\\n              setOpen(!open)\\n            }}\\n          >\\n            <TextInput\\n              id='someId'\\n              name='someName'\\n              className='someClassname'\\n              placeholder='Please Click Here'\\n              variant='withIcon'\\n              iconVariant='calendar'\\n              iconSize='md'\\n              value={`${value ? value?.startTimeWindow : ''} - ${\\n                value ? value?.endTimeWindow : ''\\n              }`}\\n              readOnly\\n              iconStyle={{ padding: '9px 9px 9px 9px' }}\\n            />\\n          </div>\\n        )}\\n      </DateTimeSlotPicker>\\n    </ThemeWrapper>\\n  )\\n}, {__STORY__, __ADDS_MAP__,__MAIN_FILE_LOCATION__,__MODULE_DEPENDENCIES__,__LOCAL_DEPENDENCIES__,__SOURCE_PREFIX__,__IDS_TO_FRAMEWORKS__}), {__STORY__, __ADDS_MAP__,__MAIN_FILE_LOCATION__,__MODULE_DEPENDENCIES__,__LOCAL_DEPENDENCIES__,__SOURCE_PREFIX__,__IDS_TO_FRAMEWORKS__});\",\"locationsMap\":{}},\"storySource\":{\"source\":\"\\n\\n// @ts-nocheck\\n// @ts-ignore\\nvar withSourceLoader = require('@storybook/source-loader/preview').withSource;\\n// @ts-ignore\\nvar addSourceDecorator = require(\\\"@storybook/source-loader/preview\\\").addSource;\\n// @ts-ignore\\nvar __SOURCE_PREFIX__ = \\\"/Users/farhanansari/Desktop/CODE/PrxProject/untitled folder/reactStoryBook/src/components/molecules/DateTimeSlotPicker\\\";\\n// @ts-ignore\\nvar __STORY__ = \\\"import React from 'react'\\\\nimport { path } from '..'\\\\nimport DateTimeSlotPicker from '.'\\\\nimport { object, withKnobs, boolean } from '@storybook/addon-knobs'\\\\nimport ThemeWrapper from '../../../utilities/components/ThemeWrapper'\\\\nimport Data from './Data'\\\\nimport TextInput from '../TextInput'\\\\nimport { IDateTimeSlotPickerChildren } from './interfaces'\\\\nimport { action } from '@storybook/addon-actions'\\\\n\\\\nexport default {\\\\n  title: `${path}/DateTimeSlotPicker`,\\\\n  decorators: [withKnobs],\\\\n  component: DateTimeSlotPicker\\\\n}\\\\n\\\\nconst DropdownOption = [\\\\n  {\\\\n    id: 'units',\\\\n    label: 'Units',\\\\n    value: 'unit',\\\\n    availableSlotObjectKey: 'availableNumberOfItems',\\\\n    totalSlotObjectKey: 'totalNumberOfItems'\\\\n  },\\\\n  {\\\\n    id: 'weight',\\\\n    label: 'Weight',\\\\n    value: 'weight',\\\\n    availableSlotObjectKey: 'availableWeight',\\\\n    totalSlotObjectKey: 'totalWeight'\\\\n  },\\\\n  {\\\\n    id: 'volume',\\\\n    label: 'Volume',\\\\n    value: 'volume',\\\\n    availableSlotObjectKey: 'availableVolume',\\\\n    totalSlotObjectKey: 'totalVolume'\\\\n  },\\\\n  {\\\\n    id: 'stops',\\\\n    label: 'Stops',\\\\n    value: 'stop',\\\\n    availableSlotObjectKey: 'availableStops',\\\\n    totalSlotObjectKey: 'totalStops'\\\\n  }\\\\n]\\\\n\\\\nconst status = {\\\\n  available: {\\\\n    id: 'available',\\\\n    value: 'AVAILABLE',\\\\n    label: 'Suggested'\\\\n  },\\\\n  notAvailable: {\\\\n    id: 'notAvailable',\\\\n    value: 'FULL',\\\\n    label: 'Not Suggested'\\\\n  }\\\\n}\\\\n\\\\nexport const SlotPicker = () => {\\\\n  const todaysDate = new Date()\\\\n  return (\\\\n    <ThemeWrapper>\\\\n      <DateTimeSlotPicker\\\\n        title='Available Time Windows:'\\\\n        preferenceDropdownLabel='Prefrence By '\\\\n        isOpen={boolean('isOpen', false)}\\\\n        date={todaysDate}\\\\n        timeWindowPrefrenceDropdown={object(\\\\n          'timeWindowPrefrenceDropdown',\\\\n          DropdownOption\\\\n        )}\\\\n        status={object('status', status)}\\\\n        DateTimeSlots={object('DateTimeSlots', Data)}\\\\n        style={{\\\\n          position: 'absolute',\\\\n          top: 'auto',\\\\n          left: '0px'\\\\n        }}\\\\n        onChange={action('On Change')}\\\\n      >\\\\n        {({ value, open, setOpen }: IDateTimeSlotPickerChildren) => (\\\\n          <div\\\\n            onClick={() => {\\\\n              console.log(open)\\\\n              setOpen(!open)\\\\n            }}\\\\n          >\\\\n            <TextInput\\\\n              id='someId'\\\\n              name='someName'\\\\n              className='someClassname'\\\\n              placeholder='Please Click Here'\\\\n              variant='withIcon'\\\\n              iconVariant='calendar'\\\\n              iconSize='md'\\\\n              value={`${value ? value?.startTimeWindow : ''} - ${\\\\n                value ? value?.endTimeWindow : ''\\\\n              }`}\\\\n              readOnly\\\\n              iconStyle={{ padding: '9px 9px 9px 9px' }}\\\\n            />\\\\n          </div>\\\\n        )}\\\\n      </DateTimeSlotPicker>\\\\n    </ThemeWrapper>\\\\n  )\\\\n}\\\\n\\\";\\n// @ts-ignore\\nvar __ADDS_MAP__ = {};\\n// @ts-ignore\\nvar __MAIN_FILE_LOCATION__ = \\\"/DateTimeSlotPicker.stories.tsx\\\";\\n// @ts-ignore\\nvar __MODULE_DEPENDENCIES__ = [];\\n// @ts-ignore\\nvar __LOCAL_DEPENDENCIES__ = {};\\n// @ts-ignore\\nvar __IDS_TO_FRAMEWORKS__ = {};\\n        \\nimport React from 'react'\\nimport { path } from '..'\\nimport DateTimeSlotPicker from '.'\\nimport { object, withKnobs, boolean } from '@storybook/addon-knobs'\\nimport ThemeWrapper from '../../../utilities/components/ThemeWrapper'\\nimport Data from './Data'\\nimport TextInput from '../TextInput'\\nimport { IDateTimeSlotPickerChildren } from './interfaces'\\nimport { action } from '@storybook/addon-actions'\\n\\nexport default {parameters: {\\\"storySource\\\":{\\\"source\\\":\\\"import React from 'react'\\\\nimport { path } from '..'\\\\nimport DateTimeSlotPicker from '.'\\\\nimport { object, withKnobs, boolean } from '@storybook/addon-knobs'\\\\nimport ThemeWrapper from '../../../utilities/components/ThemeWrapper'\\\\nimport Data from './Data'\\\\nimport TextInput from '../TextInput'\\\\nimport { IDateTimeSlotPickerChildren } from './interfaces'\\\\nimport { action } from '@storybook/addon-actions'\\\\n\\\\nexport default {\\\\n  title: `${path}/DateTimeSlotPicker`,\\\\n  decorators: [withKnobs],\\\\n  component: DateTimeSlotPicker\\\\n}\\\\n\\\\nconst DropdownOption = [\\\\n  {\\\\n    id: 'units',\\\\n    label: 'Units',\\\\n    value: 'unit',\\\\n    availableSlotObjectKey: 'availableNumberOfItems',\\\\n    totalSlotObjectKey: 'totalNumberOfItems'\\\\n  },\\\\n  {\\\\n    id: 'weight',\\\\n    label: 'Weight',\\\\n    value: 'weight',\\\\n    availableSlotObjectKey: 'availableWeight',\\\\n    totalSlotObjectKey: 'totalWeight'\\\\n  },\\\\n  {\\\\n    id: 'volume',\\\\n    label: 'Volume',\\\\n    value: 'volume',\\\\n    availableSlotObjectKey: 'availableVolume',\\\\n    totalSlotObjectKey: 'totalVolume'\\\\n  },\\\\n  {\\\\n    id: 'stops',\\\\n    label: 'Stops',\\\\n    value: 'stop',\\\\n    availableSlotObjectKey: 'availableStops',\\\\n    totalSlotObjectKey: 'totalStops'\\\\n  }\\\\n]\\\\n\\\\nconst status = {\\\\n  available: {\\\\n    id: 'available',\\\\n    value: 'AVAILABLE',\\\\n    label: 'Suggested'\\\\n  },\\\\n  notAvailable: {\\\\n    id: 'notAvailable',\\\\n    value: 'FULL',\\\\n    label: 'Not Suggested'\\\\n  }\\\\n}\\\\n\\\\nexport const SlotPicker = () => {\\\\n  const todaysDate = new Date()\\\\n  return (\\\\n    <ThemeWrapper>\\\\n      <DateTimeSlotPicker\\\\n        title='Available Time Windows:'\\\\n        preferenceDropdownLabel='Prefrence By '\\\\n        isOpen={boolean('isOpen', false)}\\\\n        date={todaysDate}\\\\n        timeWindowPrefrenceDropdown={object(\\\\n          'timeWindowPrefrenceDropdown',\\\\n          DropdownOption\\\\n        )}\\\\n        status={object('status', status)}\\\\n        DateTimeSlots={object('DateTimeSlots', Data)}\\\\n        style={{\\\\n          position: 'absolute',\\\\n          top: 'auto',\\\\n          left: '0px'\\\\n        }}\\\\n        onChange={action('On Change')}\\\\n      >\\\\n        {({ value, open, setOpen }: IDateTimeSlotPickerChildren) => (\\\\n          <div\\\\n            onClick={() => {\\\\n              console.log(open)\\\\n              setOpen(!open)\\\\n            }}\\\\n          >\\\\n            <TextInput\\\\n              id='someId'\\\\n              name='someName'\\\\n              className='someClassname'\\\\n              placeholder='Please Click Here'\\\\n              variant='withIcon'\\\\n              iconVariant='calendar'\\\\n              iconSize='md'\\\\n              value={`${value ? value?.startTimeWindow : ''} - ${\\\\n                value ? value?.endTimeWindow : ''\\\\n              }`}\\\\n              readOnly\\\\n              iconStyle={{ padding: '9px 9px 9px 9px' }}\\\\n            />\\\\n          </div>\\\\n        )}\\\\n      </DateTimeSlotPicker>\\\\n    </ThemeWrapper>\\\\n  )\\\\n}\\\\n\\\",\\\"locationsMap\\\":{}},},\\n  title: `${path}/DateTimeSlotPicker`,\\n  decorators: [withKnobs],\\n  component: DateTimeSlotPicker\\n}\\n\\nconst DropdownOption = [\\n  {\\n    id: 'units',\\n    label: 'Units',\\n    value: 'unit',\\n    availableSlotObjectKey: 'availableNumberOfItems',\\n    totalSlotObjectKey: 'totalNumberOfItems'\\n  },\\n  {\\n    id: 'weight',\\n    label: 'Weight',\\n    value: 'weight',\\n    availableSlotObjectKey: 'availableWeight',\\n    totalSlotObjectKey: 'totalWeight'\\n  },\\n  {\\n    id: 'volume',\\n    label: 'Volume',\\n    value: 'volume',\\n    availableSlotObjectKey: 'availableVolume',\\n    totalSlotObjectKey: 'totalVolume'\\n  },\\n  {\\n    id: 'stops',\\n    label: 'Stops',\\n    value: 'stop',\\n    availableSlotObjectKey: 'availableStops',\\n    totalSlotObjectKey: 'totalStops'\\n  }\\n]\\n\\nconst status = {\\n  available: {\\n    id: 'available',\\n    value: 'AVAILABLE',\\n    label: 'Suggested'\\n  },\\n  notAvailable: {\\n    id: 'notAvailable',\\n    value: 'FULL',\\n    label: 'Not Suggested'\\n  }\\n}\\n\\nexport const SlotPicker = addSourceDecorator(() => {\\n  const todaysDate = new Date()\\n  return (\\n    <ThemeWrapper>\\n      <DateTimeSlotPicker\\n        title='Available Time Windows:'\\n        preferenceDropdownLabel='Prefrence By '\\n        isOpen={boolean('isOpen', false)}\\n        date={todaysDate}\\n        timeWindowPrefrenceDropdown={object(\\n          'timeWindowPrefrenceDropdown',\\n          DropdownOption\\n        )}\\n        status={object('status', status)}\\n        DateTimeSlots={object('DateTimeSlots', Data)}\\n        style={{\\n          position: 'absolute',\\n          top: 'auto',\\n          left: '0px'\\n        }}\\n        onChange={action('On Change')}\\n      >\\n        {({ value, open, setOpen }: IDateTimeSlotPickerChildren) => (\\n          <div\\n            onClick={() => {\\n              console.log(open)\\n              setOpen(!open)\\n            }}\\n          >\\n            <TextInput\\n              id='someId'\\n              name='someName'\\n              className='someClassname'\\n              placeholder='Please Click Here'\\n              variant='withIcon'\\n              iconVariant='calendar'\\n              iconSize='md'\\n              value={`${value ? value?.startTimeWindow : ''} - ${\\n                value ? value?.endTimeWindow : ''\\n              }`}\\n              readOnly\\n              iconStyle={{ padding: '9px 9px 9px 9px' }}\\n            />\\n          </div>\\n        )}\\n      </DateTimeSlotPicker>\\n    </ThemeWrapper>\\n  )\\n}, {__STORY__, __ADDS_MAP__,__MAIN_FILE_LOCATION__,__MODULE_DEPENDENCIES__,__LOCAL_DEPENDENCIES__,__SOURCE_PREFIX__,__IDS_TO_FRAMEWORKS__});\",\"locationsMap\":{}},\"storySource\":{\"source\":\"import React from 'react'\\nimport { path } from '..'\\nimport DateTimeSlotPicker from '.'\\nimport { object, withKnobs, boolean } from '@storybook/addon-knobs'\\nimport ThemeWrapper from '../../../utilities/components/ThemeWrapper'\\nimport Data from './Data'\\nimport TextInput from '../TextInput'\\nimport { IDateTimeSlotPickerChildren } from './interfaces'\\nimport { action } from '@storybook/addon-actions'\\n\\nexport default {\\n  title: `${path}/DateTimeSlotPicker`,\\n  decorators: [withKnobs],\\n  component: DateTimeSlotPicker\\n}\\n\\nconst DropdownOption = [\\n  {\\n    id: 'units',\\n    label: 'Units',\\n    value: 'unit',\\n    availableSlotObjectKey: 'availableNumberOfItems',\\n    totalSlotObjectKey: 'totalNumberOfItems'\\n  },\\n  {\\n    id: 'weight',\\n    label: 'Weight',\\n    value: 'weight',\\n    availableSlotObjectKey: 'availableWeight',\\n    totalSlotObjectKey: 'totalWeight'\\n  },\\n  {\\n    id: 'volume',\\n    label: 'Volume',\\n    value: 'volume',\\n    availableSlotObjectKey: 'availableVolume',\\n    totalSlotObjectKey: 'totalVolume'\\n  },\\n  {\\n    id: 'stops',\\n    label: 'Stops',\\n    value: 'stop',\\n    availableSlotObjectKey: 'availableStops',\\n    totalSlotObjectKey: 'totalStops'\\n  }\\n]\\n\\nconst status = {\\n  available: {\\n    id: 'available',\\n    value: 'AVAILABLE',\\n    label: 'Suggested'\\n  },\\n  notAvailable: {\\n    id: 'notAvailable',\\n    value: 'FULL',\\n    label: 'Not Suggested'\\n  }\\n}\\n\\nexport const SlotPicker = () => {\\n  const todaysDate = new Date()\\n  return (\\n    <ThemeWrapper>\\n      <DateTimeSlotPicker\\n        title='Available Time Windows:'\\n        preferenceDropdownLabel='Prefrence By '\\n        isOpen={boolean('isOpen', false)}\\n        date={todaysDate}\\n        timeWindowPrefrenceDropdown={object(\\n          'timeWindowPrefrenceDropdown',\\n          DropdownOption\\n        )}\\n        status={object('status', status)}\\n        DateTimeSlots={object('DateTimeSlots', Data)}\\n        style={{\\n          position: 'absolute',\\n          top: 'auto',\\n          left: '0px'\\n        }}\\n        onChange={action('On Change')}\\n      >\\n        {({ value, open, setOpen }: IDateTimeSlotPickerChildren) => (\\n          <div\\n            onClick={() => {\\n              console.log(open)\\n              setOpen(!open)\\n            }}\\n          >\\n            <TextInput\\n              id='someId'\\n              name='someName'\\n              className='someClassname'\\n              placeholder='Please Click Here'\\n              variant='withIcon'\\n              iconVariant='calendar'\\n              iconSize='md'\\n              value={`${value ? value?.startTimeWindow : ''} - ${\\n                value ? value?.endTimeWindow : ''\\n              }`}\\n              readOnly\\n              iconStyle={{ padding: '9px 9px 9px 9px' }}\\n            />\\n          </div>\\n        )}\\n      </DateTimeSlotPicker>\\n    </ThemeWrapper>\\n  )\\n}\\n\",\"locationsMap\":{}},},\n  title: `${path}/DateTimeSlotPicker`,\n  decorators: [withKnobs],\n  component: DateTimeSlotPicker\n}\n\nconst DropdownOption = [\n  {\n    id: 'units',\n    label: 'Units',\n    value: 'unit',\n    availableSlotObjectKey: 'availableNumberOfItems',\n    totalSlotObjectKey: 'totalNumberOfItems'\n  },\n  {\n    id: 'weight',\n    label: 'Weight',\n    value: 'weight',\n    availableSlotObjectKey: 'availableWeight',\n    totalSlotObjectKey: 'totalWeight'\n  },\n  {\n    id: 'volume',\n    label: 'Volume',\n    value: 'volume',\n    availableSlotObjectKey: 'availableVolume',\n    totalSlotObjectKey: 'totalVolume'\n  },\n  {\n    id: 'stops',\n    label: 'Stops',\n    value: 'stop',\n    availableSlotObjectKey: 'availableStops',\n    totalSlotObjectKey: 'totalStops'\n  }\n]\n\nconst status = {\n  available: {\n    id: 'available',\n    value: 'AVAILABLE',\n    label: 'Suggested'\n  },\n  notAvailable: {\n    id: 'notAvailable',\n    value: 'FULL',\n    label: 'Not Suggested'\n  }\n}\n\nexport const SlotPicker = addSourceDecorator(addSourceDecorator(addSourceDecorator(() => {\n  const todaysDate = new Date()\n  return (\n    <ThemeWrapper>\n      <DateTimeSlotPicker\n        title='Available Time Windows:'\n        preferenceDropdownLabel='Prefrence By '\n        isOpen={boolean('isOpen', false)}\n        date={todaysDate}\n        timeWindowPrefrenceDropdown={object(\n          'timeWindowPrefrenceDropdown',\n          DropdownOption\n        )}\n        status={object('status', status)}\n        DateTimeSlots={object('DateTimeSlots', Data)}\n        style={{\n          position: 'absolute',\n          top: 'auto',\n          left: '0px'\n        }}\n        onChange={action('On Change')}\n      >\n        {({ value, open, setOpen }: IDateTimeSlotPickerChildren) => (\n          <div\n            onClick={() => {\n              console.log(open)\n              setOpen(!open)\n            }}\n          >\n            <TextInput\n              id='someId'\n              name='someName'\n              className='someClassname'\n              placeholder='Please Click Here'\n              variant='withIcon'\n              iconVariant='calendar'\n              iconSize='md'\n              value={`${value ? value?.startTimeWindow : ''} - ${\n                value ? value?.endTimeWindow : ''\n              }`}\n              readOnly\n              iconStyle={{ padding: '9px 9px 9px 9px' }}\n            />\n          </div>\n        )}\n      </DateTimeSlotPicker>\n    </ThemeWrapper>\n  )\n}, {__STORY__, __ADDS_MAP__,__MAIN_FILE_LOCATION__,__MODULE_DEPENDENCIES__,__LOCAL_DEPENDENCIES__,__SOURCE_PREFIX__,__IDS_TO_FRAMEWORKS__}), {__STORY__, __ADDS_MAP__,__MAIN_FILE_LOCATION__,__MODULE_DEPENDENCIES__,__LOCAL_DEPENDENCIES__,__SOURCE_PREFIX__,__IDS_TO_FRAMEWORKS__}), {__STORY__, __ADDS_MAP__,__MAIN_FILE_LOCATION__,__MODULE_DEPENDENCIES__,__LOCAL_DEPENDENCIES__,__SOURCE_PREFIX__,__IDS_TO_FRAMEWORKS__});"],"sourceRoot":""},"metadata":{},"sourceType":"module"}