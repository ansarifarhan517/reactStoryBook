{"ast":null,"code":"import _objectSpread from \"/Users/farhanansari/Code/ui-library/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/objectSpread2\";\nimport _slicedToArray from \"/Users/farhanansari/Code/ui-library/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/slicedToArray\";\n\nvar _this = this,\n    _jsxFileName = \"/Users/farhanansari/Code/ui-library/src/components/organisms/ListView/utils/helpers.tsx\";\n\nimport React from 'react';\nimport TextInput from '../../../molecules/TextInput';\nimport TextFilter from '../../../atoms/TextFilter';\nexport var generateColumns = function generateColumns(count) {\n  var columns = [];\n\n  for (var i = 1; i <= count; i++) {\n    columns.push({\n      Header: \"Column \".concat(i),\n      accessor: \"column\".concat(i)\n    });\n  }\n\n  return columns;\n};\nexport var generateRows = function generateRows(_ref) {\n  var rowCount = _ref.rowCount,\n      columnCount = _ref.columnCount,\n      pageNumber = _ref.pageNumber;\n  var rows = [];\n\n  for (var j = 1; j <= rowCount; j++) {\n    var c = {};\n\n    for (var i = 1; i <= columnCount; i++) {\n      c['column' + i] = \"P\".concat(pageNumber, \"-R\").concat(j, \"-C\").concat(i);\n    }\n\n    c.id = \"uniqId-P\".concat(pageNumber, \"-R\").concat(j);\n    c.isFavourite = j % 3 === 0;\n    rows.push(c);\n  }\n\n  return rows;\n};\nexport var defaultColumn = {\n  Filter: function Filter(_ref2) {\n    var textFieldProps = _ref2.textFieldProps;\n    return /*#__PURE__*/React.createElement(TextFilter, Object.assign({}, textFieldProps, {\n      __self: _this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 39,\n        columnNumber: 5\n      }\n    }));\n  },\n  EditableCell: function EditableCell(_ref3) {\n    var value = _ref3.value,\n        error = _ref3.error;\n    return /*#__PURE__*/React.createElement(TextInput, {\n      variant: \"inline-edit\",\n      defaultValue: value,\n      error: error,\n      fullWidth: true,\n      __self: _this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 42,\n        columnNumber: 5\n      }\n    });\n  }\n};\nexport var combinedSortOptions = function combinedSortOptions(sortBy) {\n  if (!sortBy.length) {\n    return {};\n  }\n\n  var sortObject = {\n    sortBy: '',\n    sortOrder: ''\n  };\n  sortBy.forEach(function (sortingRule) {\n    sortObject.sortBy += sortingRule.id + '#@#';\n    sortObject.sortOrder += (sortingRule.desc ? 'DESC' : 'ASC') + '#@#';\n  });\n  sortObject.sortBy = sortObject.sortBy.substring(0, sortObject.sortBy.length - 3);\n  sortObject.sortOrder = sortObject.sortOrder.substring(0, sortObject.sortOrder.length - 3);\n  return sortObject;\n};\nexport var handleCellMouseEnter = function handleCellMouseEnter(rowIndex) {\n  var cells = document.getElementsByClassName(\"cell--hover\".concat(rowIndex));\n\n  if (cells.length) {\n    for (var i = 0; i < cells.length; i++) {\n      var _cells$item;\n\n      (_cells$item = cells.item(i)) === null || _cells$item === void 0 ? void 0 : _cells$item.classList.add('rowHover');\n    }\n  }\n};\nexport var handleCellMouseLeave = function handleCellMouseLeave(rowIndex) {\n  var cells = document.getElementsByClassName(\"cell--hover\".concat(rowIndex));\n\n  if (cells.length) {\n    for (var i = 0; i < cells.length; i++) {\n      var _cells$item2;\n\n      // cells.item(i)?.classList.remove('tablegrid__cellhovered')\n      (_cells$item2 = cells.item(i)) === null || _cells$item2 === void 0 ? void 0 : _cells$item2.classList.remove('rowHover');\n    }\n  }\n};\nexport var getRenderedCursor = function getRenderedCursor(children) {\n  return children === null || children === void 0 ? void 0 : children.reduce(function (_ref4, _ref5) {\n    var _ref6 = _slicedToArray(_ref4, 4),\n        minRow = _ref6[0],\n        maxRow = _ref6[1],\n        minColumn = _ref6[2],\n        maxColumn = _ref6[3];\n\n    var _ref5$props = _ref5.props,\n        columnIndex = _ref5$props.columnIndex,\n        rowIndex = _ref5$props.rowIndex;\n\n    if (rowIndex < minRow) {\n      minRow = rowIndex;\n    }\n\n    if (rowIndex > maxRow) {\n      maxRow = rowIndex;\n    }\n\n    if (columnIndex < minColumn) {\n      minColumn = columnIndex;\n    }\n\n    if (columnIndex > maxColumn) {\n      maxColumn = columnIndex;\n    }\n\n    return [minRow, maxRow, minColumn, maxColumn];\n  }, [Number.POSITIVE_INFINITY, Number.NEGATIVE_INFINITY, Number.POSITIVE_INFINITY, Number.NEGATIVE_INFINITY]);\n};\nexport var calculateColumnsWidth = function calculateColumnsWidth(columns, containerWidth) {\n  var visibleColumnsCount = 0;\n  var totalColumnsWidth = 0;\n  columns.forEach(function (c) {\n    if (c.isVisible !== false) {\n      visibleColumnsCount++;\n      totalColumnsWidth += c.width || 150;\n    }\n  });\n\n  if (containerWidth > totalColumnsWidth) {\n    var perColumnExtraWidth = (containerWidth - totalColumnsWidth) / visibleColumnsCount;\n    return columns.map(function (c, i) {\n      return _objectSpread(_objectSpread({}, c), {}, {\n        width: (c.width || 150) + perColumnExtraWidth - (i === columns.length - 1 ? 15 : 0)\n      });\n    });\n  } else {\n    return columns.map(function (c) {\n      if (!c.width) {\n        delete c.width;\n      }\n\n      return c;\n    });\n  }\n};","map":{"version":3,"sources":["/Users/farhanansari/Code/ui-library/src/components/organisms/ListView/utils/helpers.tsx"],"names":["React","TextInput","TextFilter","generateColumns","count","columns","i","push","Header","accessor","generateRows","rowCount","columnCount","pageNumber","rows","j","c","id","isFavourite","defaultColumn","Filter","textFieldProps","EditableCell","value","error","combinedSortOptions","sortBy","length","sortObject","sortOrder","forEach","sortingRule","desc","substring","handleCellMouseEnter","rowIndex","cells","document","getElementsByClassName","item","classList","add","handleCellMouseLeave","remove","getRenderedCursor","children","reduce","minRow","maxRow","minColumn","maxColumn","props","columnIndex","Number","POSITIVE_INFINITY","NEGATIVE_INFINITY","calculateColumnsWidth","containerWidth","visibleColumnsCount","totalColumnsWidth","isVisible","width","perColumnExtraWidth","map"],"mappings":"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","sourcesContent":["import {\n  IFilterProps,\n  IEditableCellProps,\n  IListViewColumn,\n  ISortOptions\n} from '../interfaces'\nimport { SortingRule } from 'react-table'\nimport React from 'react'\n\nimport TextInput from '../../../molecules/TextInput'\nimport TextFilter from '../../../atoms/TextFilter'\n\nexport const generateColumns = (count: number): IListViewColumn[] => {\n  const columns: IListViewColumn[] = []\n  for (let i = 1; i <= count; i++) {\n    columns.push({ Header: `Column ${i}`, accessor: `column${i}` })\n  }\n\n  return columns\n}\n\nexport const generateRows = ({ rowCount, columnCount, pageNumber }: any) => {\n  const rows: any = []\n  for (let j = 1; j <= rowCount; j++) {\n    const c: any = {}\n    for (let i = 1; i <= columnCount; i++) {\n      c['column' + i] = `P${pageNumber}-R${j}-C${i}`\n    }\n    c.id = `uniqId-P${pageNumber}-R${j}`\n    c.isFavourite = j % 3 === 0\n    rows.push(c)\n  }\n\n  return rows\n}\n\nexport const defaultColumn = {\n  Filter: ({ textFieldProps }: IFilterProps) => (\n    <TextFilter {...textFieldProps} />\n  ),\n  EditableCell: ({ value, error }: IEditableCellProps) => (\n    <TextInput\n      variant='inline-edit'\n      defaultValue={value}\n      error={error}\n      fullWidth\n    />\n  )\n}\n\nexport const combinedSortOptions = (\n  sortBy: SortingRule<object>[]\n): ISortOptions => {\n  if (!sortBy.length) {\n    return {}\n  }\n\n  const sortObject = {\n    sortBy: '',\n    sortOrder: ''\n  }\n\n  sortBy.forEach((sortingRule) => {\n    sortObject.sortBy += sortingRule.id + '#@#'\n    sortObject.sortOrder += (sortingRule.desc ? 'DESC' : 'ASC') + '#@#'\n  })\n\n  sortObject.sortBy = sortObject.sortBy.substring(\n    0,\n    sortObject.sortBy.length - 3\n  )\n  sortObject.sortOrder = sortObject.sortOrder.substring(\n    0,\n    sortObject.sortOrder.length - 3\n  )\n\n  return sortObject\n}\n\nexport const handleCellMouseEnter = (rowIndex: number) => {\n  const cells = document.getElementsByClassName(`cell--hover${rowIndex}`)\n  if (cells.length) {\n    for (let i = 0; i < cells.length; i++) {\n      cells.item(i)?.classList.add('rowHover')\n    }\n  }\n}\n\nexport const handleCellMouseLeave = (rowIndex: number) => {\n  const cells = document.getElementsByClassName(`cell--hover${rowIndex}`)\n  if (cells.length) {\n    for (let i = 0; i < cells.length; i++) {\n      // cells.item(i)?.classList.remove('tablegrid__cellhovered')\n      cells.item(i)?.classList.remove('rowHover')\n    }\n  }\n}\n\nexport const getRenderedCursor = (children: JSX.Element[]) =>\n  children?.reduce(\n    (\n      [minRow, maxRow, minColumn, maxColumn],\n      { props: { columnIndex, rowIndex } }\n    ) => {\n      if (rowIndex < minRow) {\n        minRow = rowIndex\n      }\n      if (rowIndex > maxRow) {\n        maxRow = rowIndex\n      }\n      if (columnIndex < minColumn) {\n        minColumn = columnIndex\n      }\n      if (columnIndex > maxColumn) {\n        maxColumn = columnIndex\n      }\n\n      return [minRow, maxRow, minColumn, maxColumn]\n    },\n    [\n      Number.POSITIVE_INFINITY,\n      Number.NEGATIVE_INFINITY,\n      Number.POSITIVE_INFINITY,\n      Number.NEGATIVE_INFINITY\n    ]\n  )\n\nexport const calculateColumnsWidth = (\n  columns: IListViewColumn[],\n  containerWidth: number\n) => {\n  let visibleColumnsCount = 0\n  let totalColumnsWidth = 0\n  columns.forEach((c) => {\n    if (c.isVisible !== false) {\n      visibleColumnsCount++\n      totalColumnsWidth += c.width || 150\n    }\n  })\n\n  if (containerWidth > totalColumnsWidth) {\n    const perColumnExtraWidth =\n      (containerWidth - totalColumnsWidth) / visibleColumnsCount\n    return columns.map((c, i) => ({\n      ...c,\n      width:\n        (c.width || 150) +\n        perColumnExtraWidth -\n        (i === columns.length - 1 ? 15 : 0)\n    }))\n  } else {\n    return columns.map((c) => {\n      if (!c.width) {\n        delete c.width\n      }\n      return c\n    })\n  }\n}\n"]},"metadata":{},"sourceType":"module"}