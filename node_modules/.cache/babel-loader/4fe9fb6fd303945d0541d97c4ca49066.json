{"ast":null,"code":"import _toConsumableArray from \"/Users/farhanansari/Desktop/CODE/PrxProject/untitled folder/reactStoryBook/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/toConsumableArray\";\nimport _slicedToArray from \"/Users/farhanansari/Desktop/CODE/PrxProject/untitled folder/reactStoryBook/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/slicedToArray\";\nimport _defineProperty from \"/Users/farhanansari/Desktop/CODE/PrxProject/untitled folder/reactStoryBook/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/defineProperty\";\nimport _objectSpread from \"/Users/farhanansari/Desktop/CODE/PrxProject/untitled folder/reactStoryBook/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/objectSpread2\";\n\nvar _this = this,\n    _jsxFileName = \"/Users/farhanansari/Desktop/CODE/PrxProject/untitled folder/reactStoryBook/src/components/organisms/AdvancedFilter/ThirdElement/index.tsx\";\n\nimport React, { useState, useEffect } from 'react';\nimport TextInput from '../../../molecules/TextInput';\nimport MultiSelect from '../../../molecules/MultiSelect';\nimport InputField from '../../../atoms/InputField';\nimport AdvFilterDropdown from '../components/AdvFiterDropdown';\nimport { DatePicker, DateRangePicker } from '../../../molecules/DatePicker';\n// import operationTypes from './Data/operationType'\nimport columnsSelector from '../Data/columnsStructure';\nimport { branchList, DeliveryType, statusList, weeklyOff } from './data';\n\nvar CreateHashMaps = function CreateHashMaps(arr) {\n  var HashMapArray = {};\n  arr.forEach(function (m) {\n    return HashMapArray = _objectSpread(_objectSpread({}, HashMapArray), {}, _defineProperty({}, m.value, m));\n  });\n  return HashMapArray;\n};\n\nvar getSelectValuesArray = function getSelectValuesArray(hsetArray, value) {\n  var arrayOfValues = [];\n  var valueArr = value.split(',');\n  valueArr.forEach(function (v) {\n    arrayOfValues.push(hsetArray[v]);\n  });\n  return arrayOfValues;\n};\n\nvar ThirdElement = function ThirdElement(_ref) {\n  var value = _ref.value,\n      setValue = _ref.setValue,\n      operationType = _ref.operationType,\n      fieldType = _ref.fieldType,\n      columnName = _ref.columnName;\n\n  var _useState = useState([]),\n      _useState2 = _slicedToArray(_useState, 2),\n      options = _useState2[0],\n      setOptions = _useState2[1];\n\n  var _useState3 = useState([]),\n      _useState4 = _slicedToArray(_useState3, 2),\n      valueArray = _useState4[0],\n      setValueArray = _useState4[1];\n\n  var DropdownOptions = function DropdownOptions(columnName, columnsSelector) {\n    var _columnsSelector$cNam;\n\n    var cName = typeof columnName === 'object' ? columnName.value : columnName;\n\n    if ((_columnsSelector$cNam = columnsSelector[cName]) === null || _columnsSelector$cNam === void 0 ? void 0 : _columnsSelector$cNam.dropdownValues) {\n      return columnsSelector[cName].dropdownValues;\n    } else if (cName === 'branchName') {\n      return branchList;\n    } else if (cName === 'deliveryMediumMasterTypeCd') {\n      return DeliveryType;\n    } else if (cName === 'statusCd') {\n      return statusList;\n    } else if (cName === 'isAttandanceFl') {\n      return [{\n        label: 'Absent',\n        value: 'Absent'\n      }, {\n        label: 'Present',\n        value: 'Present'\n      }];\n    } else if (cName === 'isActiveFl') {\n      return [{\n        label: 'Active',\n        value: 'Active'\n      }, {\n        label: 'InActive',\n        value: 'InActive'\n      }];\n    } else if (cName === 'weeklyOff') {\n      return weeklyOff;\n    } else if (cName === 'loggedInStatus') {\n      return [{\n        label: 'Logged In',\n        value: 'Logged In'\n      }, {\n        label: 'Logged Out',\n        value: 'Logged Out'\n      }, {\n        label: 'Never Logged In',\n        value: 'Never Logged In'\n      }];\n    } else {\n      return [];\n    }\n  };\n\n  useEffect(function () {\n    setOptions(DropdownOptions(columnName, columnsSelector));\n  }, [columnsSelector, columnName]);\n  useEffect(function () {\n    if (typeof value === 'string') {\n      if (fieldType === 'select' || fieldType === 'dropdown') {\n        // do the conversion\n        var HSetArray = CreateHashMaps(options);\n        var values = getSelectValuesArray(HSetArray, value);\n        setValueArray(_toConsumableArray(values));\n      }\n    } else {\n      setValueArray(value);\n    }\n  }, [options, fieldType, operationType, value]);\n  var oType = typeof operationType === 'string' ? operationType : (operationType === null || operationType === void 0 ? void 0 : operationType.labelKey) ? operationType.labelKey : operationType;\n\n  if (fieldType === 'text' && oType !== null) {\n    return /*#__PURE__*/React.createElement(TextInput, {\n      value: value,\n      onChange: function onChange(e) {\n        return setValue(e.target.value);\n      },\n      __self: _this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 125,\n        columnNumber: 7\n      }\n    });\n  } else if (fieldType === 'number' && oType !== null) {\n    return /*#__PURE__*/React.createElement(TextInput, {\n      value: value,\n      type: \"number\",\n      onChange: function onChange(e) {\n        return setValue(e.target.value);\n      },\n      __self: _this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 132,\n        columnNumber: 7\n      }\n    });\n  } else if (fieldType === 'dropdown' && oType === 'filterOpIn' || fieldType === 'select' && oType === 'filterOpIn' || fieldType === 'multiselect' && oType === 'filterOpIn') {\n    var handleChange = function handleChange(event, value, isSelected, newSelectedOption) {\n      console.log(event, value, isSelected);\n      setValue(newSelectedOption);\n    };\n\n    return /*#__PURE__*/React.createElement(MultiSelect, {\n      id: \"MultiSelect\",\n      width: \"100%\",\n      options: Object.values(options),\n      selected: valueArray,\n      onChange: handleChange,\n      style: {\n        position: 'absolute',\n        top: 'auto',\n        left: 'auto',\n        backgroundColor: 'white'\n      },\n      menuOpen: false,\n      __self: _this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 154,\n        columnNumber: 7\n      }\n    }, function (_ref2) {\n      var optionSelected = _ref2.optionSelected,\n          isMenuOpen = _ref2.isMenuOpen,\n          openMenu = _ref2.openMenu;\n      return /*#__PURE__*/React.createElement(InputField, {\n        onClick: function onClick() {\n          openMenu(!isMenuOpen);\n        },\n        value: optionSelected && (optionSelected === null || optionSelected === void 0 ? void 0 : optionSelected.length) > 0 ? (optionSelected === null || optionSelected === void 0 ? void 0 : optionSelected.length) + ' Selected' : 'Select',\n        __self: _this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 170,\n          columnNumber: 13\n        }\n      });\n    });\n  } else if (fieldType === 'select' && oType !== null || fieldType === 'dropdown' && oType !== null) {\n    return /*#__PURE__*/React.createElement(AdvFilterDropdown, {\n      variant: \"default-select\",\n      options: Object.values(options),\n      onChange: function onChange(e) {\n        setValue(e.value, e.label);\n      },\n      placeholder: \"Select\",\n      value: valueArray[0],\n      __self: _this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 189,\n        columnNumber: 7\n      }\n    });\n  } else if (fieldType === 'multiselect') {\n    var _handleChange = function _handleChange(event, value, isSelected, newSelectedOption) {\n      console.log(event, value, isSelected);\n      setValue(newSelectedOption);\n    };\n\n    return /*#__PURE__*/React.createElement(MultiSelect, {\n      id: \"MultiSelect\",\n      width: \"100%\",\n      options: Object.values(options),\n      selected: valueArray,\n      onChange: _handleChange,\n      style: {\n        position: 'absolute',\n        top: 'auto',\n        left: 'auto',\n        backgroundColor: 'white'\n      },\n      menuOpen: false,\n      __self: _this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 211,\n        columnNumber: 7\n      }\n    }, function (_ref3) {\n      var optionSelected = _ref3.optionSelected,\n          isMenuOpen = _ref3.isMenuOpen,\n          openMenu = _ref3.openMenu;\n      return /*#__PURE__*/React.createElement(InputField, {\n        onClick: function onClick() {\n          openMenu(!isMenuOpen);\n        },\n        value: optionSelected && (optionSelected === null || optionSelected === void 0 ? void 0 : optionSelected.length) > 0 ? (optionSelected === null || optionSelected === void 0 ? void 0 : optionSelected.length) + ' Selected' : 'Select',\n        __self: _this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 227,\n          columnNumber: 13\n        }\n      });\n    });\n  } else if (fieldType === 'time' && oType !== null) {\n    return /*#__PURE__*/React.createElement(DatePicker, {\n      onChange: function onChange(e) {\n        return setValue(e);\n      },\n      label: \"Time\",\n      variant: \"time\",\n      timeInterval: 15,\n      timeFormat: 12,\n      style: {\n        position: 'absolute',\n        top: 'auto',\n        right: 'auto'\n      },\n      __self: _this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 243,\n        columnNumber: 7\n      }\n    }, function (_ref4) {\n      var value = _ref4.value,\n          open = _ref4.open,\n          setOpen = _ref4.setOpen;\n      return /*#__PURE__*/React.createElement(\"div\", {\n        onClick: function onClick() {\n          return setOpen(!open);\n        },\n        __self: _this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 256,\n          columnNumber: 11\n        }\n      }, /*#__PURE__*/React.createElement(TextInput, {\n        id: \"someId\",\n        name: \"\".concat(columnName, \"-text\"),\n        className: \"someClassname\",\n        placeholder: \"Please Click Here\",\n        variant: \"withIcon\",\n        iconVariant: \"calendar\",\n        iconSize: \"md\",\n        value: value === null || value === void 0 ? void 0 : value.toString(),\n        \"read-only\": true,\n        iconStyle: {\n          padding: '9px 9px 9px 9px'\n        },\n        __self: _this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 257,\n          columnNumber: 13\n        }\n      }));\n    });\n  } else if (fieldType === 'date' || fieldType === 'calendar') {\n    var startDate, endDate;\n\n    if (!value) {\n      startDate = new Date();\n      endDate = new Date();\n    } else if (typeof value === 'string') {\n      var _value$split = value.split(','),\n          _value$split2 = _slicedToArray(_value$split, 2),\n          sDate = _value$split2[0],\n          eDate = _value$split2[1];\n\n      startDate = new Date(0);\n      endDate = new Date(0);\n      startDate.setUTCSeconds(parseInt(sDate));\n      endDate.setUTCSeconds(parseInt(eDate));\n    } else {\n      startDate = value[0];\n      endDate = value[1];\n    }\n\n    return /*#__PURE__*/React.createElement(DateRangePicker, {\n      onApply: function onApply(e) {\n        return setValue(e);\n      },\n      label: \"Date\",\n      variant: \"daterange\",\n      timeFormat: 24,\n      showTime: false,\n      startDate: startDate,\n      endDate: endDate,\n      fromDateFormatter: getFormattedDate,\n      toDateFormatter: getFormattedDate,\n      style: {\n        position: 'fixed',\n        left: '0px',\n        top: '20%',\n        zIndex: 999\n      },\n      __self: _this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 290,\n        columnNumber: 7\n      }\n    }, function (_ref5) {\n      var value = _ref5.value,\n          open = _ref5.open,\n          setOpen = _ref5.setOpen;\n      return /*#__PURE__*/React.createElement(\"div\", {\n        onClick: function onClick() {\n          return setOpen(!open);\n        },\n        __self: _this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 308,\n          columnNumber: 11\n        }\n      }, /*#__PURE__*/React.createElement(TextInput, {\n        id: \"someId\",\n        name: \"\".concat(columnName, \"-text\"),\n        className: \"someClassname\",\n        variant: \"basic\",\n        border: false,\n        labelColor: \"text.inputLabel.default\",\n        placeholder: \"Please Click Here\",\n        fullWidth: true,\n        value: value === null || value === void 0 ? void 0 : value.toString(),\n        __self: _this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 309,\n          columnNumber: 13\n        }\n      }));\n    });\n  } else {\n    return null;\n  }\n};\n\nvar getFormattedDate = function getFormattedDate(date) {\n  var todayTime = date;\n  var month = todayTime.getMonth() + 1;\n  var day = todayTime.getDate();\n  var year = todayTime.getFullYear();\n  var hours = todayTime.getHours();\n  var minutes = todayTime.getMinutes();\n  return month + '/' + day + '/' + year + ' ' + hours + ':' + minutes;\n};\n\nexport default ThirdElement;","map":{"version":3,"sources":["/Users/farhanansari/Desktop/CODE/PrxProject/untitled folder/reactStoryBook/src/components/organisms/AdvancedFilter/ThirdElement/index.tsx"],"names":["React","useState","useEffect","TextInput","MultiSelect","InputField","AdvFilterDropdown","DatePicker","DateRangePicker","columnsSelector","branchList","DeliveryType","statusList","weeklyOff","CreateHashMaps","arr","HashMapArray","forEach","m","value","getSelectValuesArray","hsetArray","arrayOfValues","valueArr","split","v","push","ThirdElement","setValue","operationType","fieldType","columnName","options","setOptions","valueArray","setValueArray","DropdownOptions","cName","dropdownValues","label","HSetArray","values","oType","labelKey","e","target","handleChange","event","isSelected","newSelectedOption","console","log","Object","position","top","left","backgroundColor","optionSelected","isMenuOpen","openMenu","length","right","open","setOpen","toString","padding","startDate","endDate","Date","sDate","eDate","setUTCSeconds","parseInt","getFormattedDate","zIndex","date","todayTime","month","getMonth","day","getDate","year","getFullYear","hours","getHours","minutes","getMinutes"],"mappings":";;;;;;;;AAAA,OAAOA,KAAP,IAAgBC,QAAhB,EAA0BC,SAA1B,QAA2C,OAA3C;AACA,OAAOC,SAAP,MAAsB,8BAAtB;AACA,OAAOC,WAAP,MAAwB,gCAAxB;AAEA,OAAOC,UAAP,MAAuB,2BAAvB;AACA,OAAOC,iBAAP,MAA8B,gCAA9B;AACA,SAASC,UAAT,EAAqBC,eAArB,QAA4C,+BAA5C;AAEA;AACA,OAAOC,eAAP,MAA4B,0BAA5B;AACA,SAASC,UAAT,EAAqBC,YAArB,EAAmCC,UAAnC,EAA+CC,SAA/C,QAAgE,QAAhE;;AAEA,IAAMC,cAAc,GAAG,SAAjBA,cAAiB,CAACC,GAAD,EAAc;AACnC,MAAIC,YAAY,GAAG,EAAnB;AACAD,EAAAA,GAAG,CAACE,OAAJ,CACE,UAACC,CAAD;AAAA,WACGF,YAAY,mCACRA,YADQ,2BAEVE,CAAC,CAACC,KAFQ,EAEAD,CAFA,EADf;AAAA,GADF;AAOA,SAAOF,YAAP;AACD,CAVD;;AAYA,IAAMI,oBAAoB,GAAG,SAAvBA,oBAAuB,CAACC,SAAD,EAAiBF,KAAjB,EAAmC;AAC9D,MAAMG,aAAoB,GAAG,EAA7B;AACA,MAAMC,QAAQ,GAAGJ,KAAK,CAACK,KAAN,CAAY,GAAZ,CAAjB;AACAD,EAAAA,QAAQ,CAACN,OAAT,CAAiB,UAACQ,CAAD,EAAe;AAC9BH,IAAAA,aAAa,CAACI,IAAd,CAAmBL,SAAS,CAACI,CAAD,CAA5B;AACD,GAFD;AAGA,SAAOH,aAAP;AACD,CAPD;;AASA,IAAMK,YAAY,GAAG,SAAfA,YAAe,OAMK;AAAA,MALxBR,KAKwB,QALxBA,KAKwB;AAAA,MAJxBS,QAIwB,QAJxBA,QAIwB;AAAA,MAHxBC,aAGwB,QAHxBA,aAGwB;AAAA,MAFxBC,SAEwB,QAFxBA,SAEwB;AAAA,MADxBC,UACwB,QADxBA,UACwB;;AAAA,kBACM9B,QAAQ,CAAQ,EAAR,CADd;AAAA;AAAA,MACjB+B,OADiB;AAAA,MACRC,UADQ;;AAAA,mBAEYhC,QAAQ,CAAM,EAAN,CAFpB;AAAA;AAAA,MAEjBiC,UAFiB;AAAA,MAELC,aAFK;;AAIxB,MAAMC,eAAe,GAAG,SAAlBA,eAAkB,CAACL,UAAD,EAAkBtB,eAAlB,EAA2C;AAAA;;AACjE,QAAM4B,KAAK,GAAG,OAAON,UAAP,KAAsB,QAAtB,GAAiCA,UAAU,CAACZ,KAA5C,GAAoDY,UAAlE;;AAEA,iCAAItB,eAAe,CAAC4B,KAAD,CAAnB,0DAAI,sBAAwBC,cAA5B,EAA4C;AAC1C,aAAO7B,eAAe,CAAC4B,KAAD,CAAf,CAAuBC,cAA9B;AACD,KAFD,MAEO,IAAID,KAAK,KAAK,YAAd,EAA4B;AACjC,aAAO3B,UAAP;AACD,KAFM,MAEA,IAAI2B,KAAK,KAAK,4BAAd,EAA4C;AACjD,aAAO1B,YAAP;AACD,KAFM,MAEA,IAAI0B,KAAK,KAAK,UAAd,EAA0B;AAC/B,aAAOzB,UAAP;AACD,KAFM,MAEA,IAAIyB,KAAK,KAAK,gBAAd,EAAgC;AACrC,aAAO,CACL;AACEE,QAAAA,KAAK,EAAE,QADT;AAEEpB,QAAAA,KAAK,EAAE;AAFT,OADK,EAKL;AACEoB,QAAAA,KAAK,EAAE,SADT;AAEEpB,QAAAA,KAAK,EAAE;AAFT,OALK,CAAP;AAUD,KAXM,MAWA,IAAIkB,KAAK,KAAK,YAAd,EAA4B;AACjC,aAAO,CACL;AACEE,QAAAA,KAAK,EAAE,QADT;AAEEpB,QAAAA,KAAK,EAAE;AAFT,OADK,EAKL;AACEoB,QAAAA,KAAK,EAAE,UADT;AAEEpB,QAAAA,KAAK,EAAE;AAFT,OALK,CAAP;AAUD,KAXM,MAWA,IAAIkB,KAAK,KAAK,WAAd,EAA2B;AAChC,aAAOxB,SAAP;AACD,KAFM,MAEA,IAAIwB,KAAK,KAAK,gBAAd,EAAgC;AACrC,aAAO,CACL;AACEE,QAAAA,KAAK,EAAE,WADT;AAEEpB,QAAAA,KAAK,EAAE;AAFT,OADK,EAKL;AACEoB,QAAAA,KAAK,EAAE,YADT;AAEEpB,QAAAA,KAAK,EAAE;AAFT,OALK,EASL;AACEoB,QAAAA,KAAK,EAAE,iBADT;AAEEpB,QAAAA,KAAK,EAAE;AAFT,OATK,CAAP;AAcD,KAfM,MAeA;AACL,aAAO,EAAP;AACD;AACF,GArDD;;AAuDAjB,EAAAA,SAAS,CAAC,YAAM;AACd+B,IAAAA,UAAU,CAACG,eAAe,CAACL,UAAD,EAAatB,eAAb,CAAhB,CAAV;AACD,GAFQ,EAEN,CAACA,eAAD,EAAkBsB,UAAlB,CAFM,CAAT;AAIA7B,EAAAA,SAAS,CAAC,YAAM;AACd,QAAI,OAAOiB,KAAP,KAAiB,QAArB,EAA+B;AAC7B,UAAIW,SAAS,KAAK,QAAd,IAA0BA,SAAS,KAAK,UAA5C,EAAwD;AACtD;AACA,YAAMU,SAAS,GAAG1B,cAAc,CAACkB,OAAD,CAAhC;AACA,YAAMS,MAAM,GAAGrB,oBAAoB,CAACoB,SAAD,EAAYrB,KAAZ,CAAnC;AACAgB,QAAAA,aAAa,oBAAKM,MAAL,EAAb;AACD;AACF,KAPD,MAOO;AACLN,MAAAA,aAAa,CAAChB,KAAD,CAAb;AACD;AACF,GAXQ,EAWN,CAACa,OAAD,EAAUF,SAAV,EAAqBD,aAArB,EAAoCV,KAApC,CAXM,CAAT;AAaA,MAAMuB,KAAK,GACT,OAAOb,aAAP,KAAyB,QAAzB,GACIA,aADJ,GAEI,CAAAA,aAAa,SAAb,IAAAA,aAAa,WAAb,YAAAA,aAAa,CAAEc,QAAf,IACAd,aAAa,CAACc,QADd,GAEAd,aALN;;AAOA,MAAIC,SAAS,KAAK,MAAd,IAAwBY,KAAK,KAAK,IAAtC,EAA4C;AAC1C,wBACE,oBAAC,SAAD;AACE,MAAA,KAAK,EAAEvB,KADT;AAEE,MAAA,QAAQ,EAAE,kBAACyB,CAAD;AAAA,eAAYhB,QAAQ,CAACgB,CAAC,CAACC,MAAF,CAAS1B,KAAV,CAApB;AAAA,OAFZ;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,MADF;AAMD,GAPD,MAOO,IAAIW,SAAS,KAAK,QAAd,IAA0BY,KAAK,KAAK,IAAxC,EAA8C;AACnD,wBACE,oBAAC,SAAD;AACE,MAAA,KAAK,EAAEvB,KADT;AAEE,MAAA,IAAI,EAAC,QAFP;AAGE,MAAA,QAAQ,EAAE,kBAACyB,CAAD;AAAA,eAAYhB,QAAQ,CAACgB,CAAC,CAACC,MAAF,CAAS1B,KAAV,CAApB;AAAA,OAHZ;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,MADF;AAOD,GARM,MAQA,IACJW,SAAS,KAAK,UAAd,IAA4BY,KAAK,KAAK,YAAvC,IACCZ,SAAS,KAAK,QAAd,IAA0BY,KAAK,KAAK,YADrC,IAECZ,SAAS,KAAK,aAAd,IAA+BY,KAAK,KAAK,YAHrC,EAIL;AACA,QAAMI,YAAY,GAAG,SAAfA,YAAe,CACnBC,KADmB,EAEnB5B,KAFmB,EAGnB6B,UAHmB,EAInBC,iBAJmB,EAKhB;AACHC,MAAAA,OAAO,CAACC,GAAR,CAAYJ,KAAZ,EAAmB5B,KAAnB,EAA0B6B,UAA1B;AACApB,MAAAA,QAAQ,CAACqB,iBAAD,CAAR;AACD,KARD;;AAUA,wBACE,oBAAC,WAAD;AACE,MAAA,EAAE,EAAC,aADL;AAEE,MAAA,KAAK,EAAC,MAFR;AAGE,MAAA,OAAO,EAAEG,MAAM,CAACX,MAAP,CAAcT,OAAd,CAHX;AAIE,MAAA,QAAQ,EAAEE,UAJZ;AAKE,MAAA,QAAQ,EAAEY,YALZ;AAME,MAAA,KAAK,EAAE;AACLO,QAAAA,QAAQ,EAAE,UADL;AAELC,QAAAA,GAAG,EAAE,MAFA;AAGLC,QAAAA,IAAI,EAAE,MAHD;AAILC,QAAAA,eAAe,EAAE;AAJZ,OANT;AAYE,MAAA,QAAQ,EAAE,KAZZ;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,OAcG,iBAAoE;AAAA,UAAjEC,cAAiE,SAAjEA,cAAiE;AAAA,UAAjDC,UAAiD,SAAjDA,UAAiD;AAAA,UAArCC,QAAqC,SAArCA,QAAqC;AACnE,0BACE,oBAAC,UAAD;AACE,QAAA,OAAO,EAAE,mBAAM;AACbA,UAAAA,QAAQ,CAAC,CAACD,UAAF,CAAR;AACD,SAHH;AAIE,QAAA,KAAK,EACHD,cAAc,IAAI,CAAAA,cAAc,SAAd,IAAAA,cAAc,WAAd,YAAAA,cAAc,CAAEG,MAAhB,IAAyB,CAA3C,GACI,CAAAH,cAAc,SAAd,IAAAA,cAAc,WAAd,YAAAA,cAAc,CAAEG,MAAhB,IAAyB,WAD7B,GAEI,QAPR;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,QADF;AAYD,KA3BH,CADF;AA+BD,GA9CM,MA8CA,IACJ9B,SAAS,KAAK,QAAd,IAA0BY,KAAK,KAAK,IAArC,IACCZ,SAAS,KAAK,UAAd,IAA4BY,KAAK,KAAK,IAFlC,EAGL;AACA,wBACE,oBAAC,iBAAD;AACE,MAAA,OAAO,EAAC,gBADV;AAEE,MAAA,OAAO,EAAEU,MAAM,CAACX,MAAP,CAAcT,OAAd,CAFX;AAGE,MAAA,QAAQ,EAAE,kBAACY,CAAD,EAAY;AACpBhB,QAAAA,QAAQ,CAACgB,CAAC,CAACzB,KAAH,EAAUyB,CAAC,CAACL,KAAZ,CAAR;AACD,OALH;AAME,MAAA,WAAW,EAAC,QANd;AAOE,MAAA,KAAK,EAAEL,UAAU,CAAC,CAAD,CAPnB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,MADF;AAWD,GAfM,MAeA,IAAIJ,SAAS,KAAK,aAAlB,EAAiC;AACtC,QAAMgB,aAAY,GAAG,SAAfA,aAAe,CACnBC,KADmB,EAEnB5B,KAFmB,EAGnB6B,UAHmB,EAInBC,iBAJmB,EAKhB;AACHC,MAAAA,OAAO,CAACC,GAAR,CAAYJ,KAAZ,EAAmB5B,KAAnB,EAA0B6B,UAA1B;AACApB,MAAAA,QAAQ,CAACqB,iBAAD,CAAR;AACD,KARD;;AAUA,wBACE,oBAAC,WAAD;AACE,MAAA,EAAE,EAAC,aADL;AAEE,MAAA,KAAK,EAAC,MAFR;AAGE,MAAA,OAAO,EAAEG,MAAM,CAACX,MAAP,CAAcT,OAAd,CAHX;AAIE,MAAA,QAAQ,EAAEE,UAJZ;AAKE,MAAA,QAAQ,EAAEY,aALZ;AAME,MAAA,KAAK,EAAE;AACLO,QAAAA,QAAQ,EAAE,UADL;AAELC,QAAAA,GAAG,EAAE,MAFA;AAGLC,QAAAA,IAAI,EAAE,MAHD;AAILC,QAAAA,eAAe,EAAE;AAJZ,OANT;AAYE,MAAA,QAAQ,EAAE,KAZZ;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,OAcG,iBAAoE;AAAA,UAAjEC,cAAiE,SAAjEA,cAAiE;AAAA,UAAjDC,UAAiD,SAAjDA,UAAiD;AAAA,UAArCC,QAAqC,SAArCA,QAAqC;AACnE,0BACE,oBAAC,UAAD;AACE,QAAA,OAAO,EAAE,mBAAM;AACbA,UAAAA,QAAQ,CAAC,CAACD,UAAF,CAAR;AACD,SAHH;AAIE,QAAA,KAAK,EACHD,cAAc,IAAI,CAAAA,cAAc,SAAd,IAAAA,cAAc,WAAd,YAAAA,cAAc,CAAEG,MAAhB,IAAyB,CAA3C,GACI,CAAAH,cAAc,SAAd,IAAAA,cAAc,WAAd,YAAAA,cAAc,CAAEG,MAAhB,IAAyB,WAD7B,GAEI,QAPR;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,QADF;AAYD,KA3BH,CADF;AA+BD,GA1CM,MA0CA,IAAI9B,SAAS,KAAK,MAAd,IAAwBY,KAAK,KAAK,IAAtC,EAA4C;AACjD,wBACE,oBAAC,UAAD;AACE,MAAA,QAAQ,EAAE,kBAACE,CAAD;AAAA,eAAYhB,QAAQ,CAACgB,CAAD,CAApB;AAAA,OADZ;AAEE,MAAA,KAAK,EAAC,MAFR;AAGE,MAAA,OAAO,EAAC,MAHV;AAIE,MAAA,YAAY,EAAE,EAJhB;AAKE,MAAA,UAAU,EAAE,EALd;AAME,MAAA,KAAK,EAAE;AACLS,QAAAA,QAAQ,EAAE,UADL;AAELC,QAAAA,GAAG,EAAE,MAFA;AAGLO,QAAAA,KAAK,EAAE;AAHF,OANT;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,OAYG;AAAA,UAAG1C,KAAH,SAAGA,KAAH;AAAA,UAAU2C,IAAV,SAAUA,IAAV;AAAA,UAAgBC,OAAhB,SAAgBA,OAAhB;AAAA,0BACC;AAAK,QAAA,OAAO,EAAE;AAAA,iBAAMA,OAAO,CAAC,CAACD,IAAF,CAAb;AAAA,SAAd;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,sBACE,oBAAC,SAAD;AACE,QAAA,EAAE,EAAC,QADL;AAEE,QAAA,IAAI,YAAK/B,UAAL,UAFN;AAGE,QAAA,SAAS,EAAC,eAHZ;AAIE,QAAA,WAAW,EAAC,mBAJd;AAKE,QAAA,OAAO,EAAC,UALV;AAME,QAAA,WAAW,EAAC,UANd;AAOE,QAAA,QAAQ,EAAC,IAPX;AAQE,QAAA,KAAK,EAAEZ,KAAF,aAAEA,KAAF,uBAAEA,KAAK,CAAE6C,QAAP,EART;AASE,yBATF;AAUE,QAAA,SAAS,EAAE;AAAEC,UAAAA,OAAO,EAAE;AAAX,SAVb;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,QADF,CADD;AAAA,KAZH,CADF;AA+BD,GAhCM,MAgCA,IAAInC,SAAS,KAAK,MAAd,IAAwBA,SAAS,KAAK,UAA1C,EAAsD;AAC3D,QAAIoC,SAAJ,EAAeC,OAAf;;AACA,QAAI,CAAChD,KAAL,EAAY;AACV+C,MAAAA,SAAS,GAAG,IAAIE,IAAJ,EAAZ;AACAD,MAAAA,OAAO,GAAG,IAAIC,IAAJ,EAAV;AACD,KAHD,MAGO,IAAI,OAAOjD,KAAP,KAAiB,QAArB,EAA+B;AAAA,yBACbA,KAAK,CAACK,KAAN,CAAY,GAAZ,CADa;AAAA;AAAA,UAC7B6C,KAD6B;AAAA,UACtBC,KADsB;;AAEpCJ,MAAAA,SAAS,GAAG,IAAIE,IAAJ,CAAS,CAAT,CAAZ;AACAD,MAAAA,OAAO,GAAG,IAAIC,IAAJ,CAAS,CAAT,CAAV;AACAF,MAAAA,SAAS,CAACK,aAAV,CAAwBC,QAAQ,CAACH,KAAD,CAAhC;AACAF,MAAAA,OAAO,CAACI,aAAR,CAAsBC,QAAQ,CAACF,KAAD,CAA9B;AACD,KANM,MAMA;AACLJ,MAAAA,SAAS,GAAG/C,KAAK,CAAC,CAAD,CAAjB;AACAgD,MAAAA,OAAO,GAAGhD,KAAK,CAAC,CAAD,CAAf;AACD;;AAED,wBACE,oBAAC,eAAD;AACE,MAAA,OAAO,EAAE,iBAACyB,CAAD;AAAA,eAAYhB,QAAQ,CAACgB,CAAD,CAApB;AAAA,OADX;AAEE,MAAA,KAAK,EAAC,MAFR;AAGE,MAAA,OAAO,EAAC,WAHV;AAIE,MAAA,UAAU,EAAE,EAJd;AAKE,MAAA,QAAQ,EAAE,KALZ;AAME,MAAA,SAAS,EAAEsB,SANb;AAOE,MAAA,OAAO,EAAEC,OAPX;AAQE,MAAA,iBAAiB,EAAEM,gBARrB;AASE,MAAA,eAAe,EAAEA,gBATnB;AAUE,MAAA,KAAK,EAAE;AACLpB,QAAAA,QAAQ,EAAE,OADL;AAELE,QAAAA,IAAI,EAAE,KAFD;AAGLD,QAAAA,GAAG,EAAE,KAHA;AAILoB,QAAAA,MAAM,EAAE;AAJH,OAVT;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,OAiBG;AAAA,UAAGvD,KAAH,SAAGA,KAAH;AAAA,UAAU2C,IAAV,SAAUA,IAAV;AAAA,UAAgBC,OAAhB,SAAgBA,OAAhB;AAAA,0BACC;AAAK,QAAA,OAAO,EAAE;AAAA,iBAAMA,OAAO,CAAC,CAACD,IAAF,CAAb;AAAA,SAAd;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,sBACE,oBAAC,SAAD;AACE,QAAA,EAAE,EAAC,QADL;AAEE,QAAA,IAAI,YAAK/B,UAAL,UAFN;AAGE,QAAA,SAAS,EAAC,eAHZ;AAIE,QAAA,OAAO,EAAC,OAJV;AAKE,QAAA,MAAM,EAAE,KALV;AAME,QAAA,UAAU,EAAC,yBANb;AAOE,QAAA,WAAW,EAAC,mBAPd;AAQE,QAAA,SAAS,MARX;AASE,QAAA,KAAK,EAAEZ,KAAF,aAAEA,KAAF,uBAAEA,KAAK,CAAE6C,QAAP,EATT;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,QADF,CADD;AAAA,KAjBH,CADF;AAmCD,GAnDM,MAmDA;AACL,WAAO,IAAP;AACD;AACF,CArSD;;AAuSA,IAAMS,gBAAgB,GAAG,SAAnBA,gBAAmB,CAACE,IAAD,EAAgB;AACvC,MAAMC,SAAS,GAAGD,IAAlB;AACA,MAAME,KAAK,GAAGD,SAAS,CAACE,QAAV,KAAuB,CAArC;AACA,MAAMC,GAAG,GAAGH,SAAS,CAACI,OAAV,EAAZ;AACA,MAAMC,IAAI,GAAGL,SAAS,CAACM,WAAV,EAAb;AACA,MAAMC,KAAK,GAAGP,SAAS,CAACQ,QAAV,EAAd;AACA,MAAMC,OAAO,GAAGT,SAAS,CAACU,UAAV,EAAhB;AACA,SAAOT,KAAK,GAAG,GAAR,GAAcE,GAAd,GAAoB,GAApB,GAA0BE,IAA1B,GAAiC,GAAjC,GAAuCE,KAAvC,GAA+C,GAA/C,GAAqDE,OAA5D;AACD,CARD;;AAUA,eAAe1D,YAAf","sourcesContent":["import React, { useState, useEffect } from 'react'\nimport TextInput from '../../../molecules/TextInput'\nimport MultiSelect from '../../../molecules/MultiSelect'\nimport { tMultiSelectChildren } from '../../../molecules/MultiSelect/interfaces'\nimport InputField from '../../../atoms/InputField'\nimport AdvFilterDropdown from '../components/AdvFiterDropdown'\nimport { DatePicker, DateRangePicker } from '../../../molecules/DatePicker'\nimport { IThirdElementProps } from '../interfaces'\n// import operationTypes from './Data/operationType'\nimport columnsSelector from '../Data/columnsStructure'\nimport { branchList, DeliveryType, statusList, weeklyOff } from './data'\n\nconst CreateHashMaps = (arr: any) => {\n  let HashMapArray = {}\n  arr.forEach(\n    (m: any) =>\n      (HashMapArray = {\n        ...HashMapArray,\n        [m.value]: m\n      })\n  )\n  return HashMapArray\n}\n\nconst getSelectValuesArray = (hsetArray: any, value: string) => {\n  const arrayOfValues: any[] = []\n  const valueArr = value.split(',')\n  valueArr.forEach((v: string) => {\n    arrayOfValues.push(hsetArray[v])\n  })\n  return arrayOfValues\n}\n\nconst ThirdElement = ({\n  value,\n  setValue,\n  operationType,\n  fieldType,\n  columnName\n}: IThirdElementProps) => {\n  const [options, setOptions] = useState<any[]>([])\n  const [valueArray, setValueArray] = useState<any>([])\n\n  const DropdownOptions = (columnName: any, columnsSelector: any) => {\n    const cName = typeof columnName === 'object' ? columnName.value : columnName\n\n    if (columnsSelector[cName]?.dropdownValues) {\n      return columnsSelector[cName].dropdownValues\n    } else if (cName === 'branchName') {\n      return branchList\n    } else if (cName === 'deliveryMediumMasterTypeCd') {\n      return DeliveryType\n    } else if (cName === 'statusCd') {\n      return statusList\n    } else if (cName === 'isAttandanceFl') {\n      return [\n        {\n          label: 'Absent',\n          value: 'Absent'\n        },\n        {\n          label: 'Present',\n          value: 'Present'\n        }\n      ]\n    } else if (cName === 'isActiveFl') {\n      return [\n        {\n          label: 'Active',\n          value: 'Active'\n        },\n        {\n          label: 'InActive',\n          value: 'InActive'\n        }\n      ]\n    } else if (cName === 'weeklyOff') {\n      return weeklyOff\n    } else if (cName === 'loggedInStatus') {\n      return [\n        {\n          label: 'Logged In',\n          value: 'Logged In'\n        },\n        {\n          label: 'Logged Out',\n          value: 'Logged Out'\n        },\n        {\n          label: 'Never Logged In',\n          value: 'Never Logged In'\n        }\n      ]\n    } else {\n      return []\n    }\n  }\n\n  useEffect(() => {\n    setOptions(DropdownOptions(columnName, columnsSelector))\n  }, [columnsSelector, columnName])\n\n  useEffect(() => {\n    if (typeof value === 'string') {\n      if (fieldType === 'select' || fieldType === 'dropdown') {\n        // do the conversion\n        const HSetArray = CreateHashMaps(options)\n        const values = getSelectValuesArray(HSetArray, value)\n        setValueArray([...values])\n      }\n    } else {\n      setValueArray(value)\n    }\n  }, [options, fieldType, operationType, value])\n\n  const oType =\n    typeof operationType === 'string'\n      ? operationType\n      : operationType?.labelKey\n      ? operationType.labelKey\n      : operationType\n\n  if (fieldType === 'text' && oType !== null) {\n    return (\n      <TextInput\n        value={value}\n        onChange={(e: any) => setValue(e.target.value)}\n      />\n    )\n  } else if (fieldType === 'number' && oType !== null) {\n    return (\n      <TextInput\n        value={value}\n        type='number'\n        onChange={(e: any) => setValue(e.target.value)}\n      />\n    )\n  } else if (\n    (fieldType === 'dropdown' && oType === 'filterOpIn') ||\n    (fieldType === 'select' && oType === 'filterOpIn') ||\n    (fieldType === 'multiselect' && oType === 'filterOpIn')\n  ) {\n    const handleChange = (\n      event: any,\n      value: any,\n      isSelected: any,\n      newSelectedOption: any\n    ) => {\n      console.log(event, value, isSelected)\n      setValue(newSelectedOption)\n    }\n\n    return (\n      <MultiSelect\n        id='MultiSelect'\n        width='100%'\n        options={Object.values(options)}\n        selected={valueArray}\n        onChange={handleChange}\n        style={{\n          position: 'absolute',\n          top: 'auto',\n          left: 'auto',\n          backgroundColor: 'white'\n        }}\n        menuOpen={false}\n      >\n        {({ optionSelected, isMenuOpen, openMenu }: tMultiSelectChildren) => {\n          return (\n            <InputField\n              onClick={() => {\n                openMenu(!isMenuOpen)\n              }}\n              value={\n                optionSelected && optionSelected?.length > 0\n                  ? optionSelected?.length + ' Selected'\n                  : 'Select'\n              }\n            />\n          )\n        }}\n      </MultiSelect>\n    )\n  } else if (\n    (fieldType === 'select' && oType !== null) ||\n    (fieldType === 'dropdown' && oType !== null)\n  ) {\n    return (\n      <AdvFilterDropdown\n        variant='default-select'\n        options={Object.values(options)}\n        onChange={(e: any) => {\n          setValue(e.value, e.label)\n        }}\n        placeholder='Select'\n        value={valueArray[0]}\n      />\n    )\n  } else if (fieldType === 'multiselect') {\n    const handleChange = (\n      event: any,\n      value: any,\n      isSelected: any,\n      newSelectedOption: any\n    ) => {\n      console.log(event, value, isSelected)\n      setValue(newSelectedOption)\n    }\n\n    return (\n      <MultiSelect\n        id='MultiSelect'\n        width='100%'\n        options={Object.values(options)}\n        selected={valueArray}\n        onChange={handleChange}\n        style={{\n          position: 'absolute',\n          top: 'auto',\n          left: 'auto',\n          backgroundColor: 'white'\n        }}\n        menuOpen={false}\n      >\n        {({ optionSelected, isMenuOpen, openMenu }: tMultiSelectChildren) => {\n          return (\n            <InputField\n              onClick={() => {\n                openMenu(!isMenuOpen)\n              }}\n              value={\n                optionSelected && optionSelected?.length > 0\n                  ? optionSelected?.length + ' Selected'\n                  : 'Select'\n              }\n            />\n          )\n        }}\n      </MultiSelect>\n    )\n  } else if (fieldType === 'time' && oType !== null) {\n    return (\n      <DatePicker\n        onChange={(e: any) => setValue(e)}\n        label='Time'\n        variant='time'\n        timeInterval={15}\n        timeFormat={12}\n        style={{\n          position: 'absolute',\n          top: 'auto',\n          right: 'auto'\n        }}\n      >\n        {({ value, open, setOpen }: any) => (\n          <div onClick={() => setOpen(!open)}>\n            <TextInput\n              id='someId'\n              name={`${columnName}-text`}\n              className='someClassname'\n              placeholder='Please Click Here'\n              variant='withIcon'\n              iconVariant='calendar'\n              iconSize='md'\n              value={value?.toString()}\n              read-only\n              iconStyle={{ padding: '9px 9px 9px 9px' }}\n            />\n          </div>\n        )}\n      </DatePicker>\n    )\n  } else if (fieldType === 'date' || fieldType === 'calendar') {\n    let startDate, endDate\n    if (!value) {\n      startDate = new Date()\n      endDate = new Date()\n    } else if (typeof value === 'string') {\n      const [sDate, eDate] = value.split(',')\n      startDate = new Date(0)\n      endDate = new Date(0)\n      startDate.setUTCSeconds(parseInt(sDate))\n      endDate.setUTCSeconds(parseInt(eDate))\n    } else {\n      startDate = value[0]\n      endDate = value[1]\n    }\n\n    return (\n      <DateRangePicker\n        onApply={(e: any) => setValue(e)}\n        label='Date'\n        variant='daterange'\n        timeFormat={24}\n        showTime={false}\n        startDate={startDate}\n        endDate={endDate}\n        fromDateFormatter={getFormattedDate}\n        toDateFormatter={getFormattedDate}\n        style={{\n          position: 'fixed',\n          left: '0px',\n          top: '20%',\n          zIndex: 999\n        }}\n      >\n        {({ value, open, setOpen }: any) => (\n          <div onClick={() => setOpen(!open)}>\n            <TextInput\n              id='someId'\n              name={`${columnName}-text`}\n              className='someClassname'\n              variant='basic'\n              border={false}\n              labelColor='text.inputLabel.default'\n              placeholder='Please Click Here'\n              fullWidth\n              value={value?.toString()}\n            />\n          </div>\n        )}\n      </DateRangePicker>\n    )\n  } else {\n    return null\n  }\n}\n\nconst getFormattedDate = (date: Date) => {\n  const todayTime = date\n  const month = todayTime.getMonth() + 1\n  const day = todayTime.getDate()\n  const year = todayTime.getFullYear()\n  const hours = todayTime.getHours()\n  const minutes = todayTime.getMinutes()\n  return month + '/' + day + '/' + year + ' ' + hours + ':' + minutes\n}\n\nexport default ThirdElement\n"]},"metadata":{},"sourceType":"module"}