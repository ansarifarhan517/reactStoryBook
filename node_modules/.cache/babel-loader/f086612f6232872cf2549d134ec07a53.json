{"ast":null,"code":"import _objectWithoutProperties from \"/Users/farhanansari/Code/ui-library/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/objectWithoutProperties\";\n\nvar _this = this,\n    _jsxFileName = \"/Users/farhanansari/Code/ui-library/src/components/atoms/Radio/index.tsx\";\n\nimport React from 'react';\nimport { RadioContainer, StyledRadio, RadioLabel, RadioWrapper, Icon, HiddenRadio } from './Radio.styled';\nvar radioSizeMapping = {\n  sm: 13,\n  md: 15,\n  lg: 18\n};\nvar Radio = React.forwardRef(function (_ref, ref) {\n  var id = _ref.id,\n      _ref$disabled = _ref.disabled,\n      disabled = _ref$disabled === void 0 ? false : _ref$disabled,\n      _ref$radioSize = _ref.radioSize,\n      radioSize = _ref$radioSize === void 0 ? 'sm' : _ref$radioSize,\n      fontWeight = _ref.fontWeight,\n      _ref$label = _ref.label,\n      label = _ref$label === void 0 ? '' : _ref$label,\n      labelColor = _ref.labelColor,\n      labelComponent = _ref.labelComponent,\n      rest = _objectWithoutProperties(_ref, [\"id\", \"disabled\", \"radioSize\", \"fontWeight\", \"label\", \"labelColor\", \"labelComponent\"]);\n\n  // const [isChecked, setIsChecked] = useState(defaultChecked || checked)\n  // useEffect(() => {\n  //   setIsChecked(checked)\n  // }, [checked])\n  return /*#__PURE__*/React.createElement(RadioWrapper, {\n    id: id + '-RadioWrapper',\n    disabled: disabled,\n    htmlFor: id,\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 51,\n      columnNumber: 7\n    }\n  }, /*#__PURE__*/React.createElement(RadioContainer, {\n    style: {\n      width: radioSizeMapping[radioSize] || 15,\n      height: radioSizeMapping[radioSize] || 15\n    },\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 52,\n      columnNumber: 9\n    }\n  }, /*#__PURE__*/React.createElement(HiddenRadio, Object.assign({\n    type: \"radio\",\n    id: id,\n    disabled: disabled // checked={isChecked}\n    // name={name}\n    // value={value}\n    // onChange={(e: React.ChangeEvent<HTMLInputElement>) => {\n    //   e.target && setIsChecked(e.target.checked)\n    //   onChange(e)\n    // }}\n    ,\n    ref: ref\n  }, rest, {\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 58,\n      columnNumber: 11\n    }\n  })), /*#__PURE__*/React.createElement(StyledRadio, {\n    disabled: disabled,\n    radioSize: radioSize && typeof radioSize === 'number' ? radioSize : radioSizeMapping[radioSize],\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 72,\n      columnNumber: 11\n    }\n  }, /*#__PURE__*/React.createElement(Icon, {\n    viewBox: \"0 0 20 20\",\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 80,\n      columnNumber: 13\n    }\n  }, /*#__PURE__*/React.createElement(\"circle\", {\n    cx: \"10\",\n    cy: \"10\",\n    r: \"8\",\n    stroke: \"primary.contrastText\",\n    strokeWidth: \"3\",\n    fill: \"primary.main\" // style={{ paddingBottom: '4px' }}\n    ,\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 81,\n      columnNumber: 15\n    }\n  })))), labelComponent || label && /*#__PURE__*/React.createElement(RadioLabel, {\n    fontWeight: fontWeight,\n    htmlFor: id,\n    color: labelColor,\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 95,\n      columnNumber: 13\n    }\n  }, label));\n});\nRadio.__docgenInfo = {\n  \"description\": \"\",\n  \"methods\": [],\n  \"displayName\": \"Radio\",\n  \"props\": {\n    \"disabled\": {\n      \"defaultValue\": {\n        \"value\": \"false\",\n        \"computed\": false\n      },\n      \"required\": false\n    },\n    \"radioSize\": {\n      \"defaultValue\": {\n        \"value\": \"'sm'\",\n        \"computed\": false\n      },\n      \"required\": false\n    },\n    \"label\": {\n      \"defaultValue\": {\n        \"value\": \"''\",\n        \"computed\": false\n      },\n      \"required\": false\n    }\n  }\n};\nexport default Radio;\n\nif (typeof STORYBOOK_REACT_CLASSES !== \"undefined\") {\n  STORYBOOK_REACT_CLASSES[\"src/components/atoms/Radio/index.tsx\"] = {\n    name: \"Radio\",\n    docgenInfo: Radio.__docgenInfo,\n    path: \"src/components/atoms/Radio/index.tsx\"\n  };\n}","map":{"version":3,"sources":["/Users/farhanansari/Code/ui-library/src/components/atoms/Radio/index.tsx"],"names":["React","RadioContainer","StyledRadio","RadioLabel","RadioWrapper","Icon","HiddenRadio","radioSizeMapping","sm","md","lg","Radio","forwardRef","ref","id","disabled","radioSize","fontWeight","label","labelColor","labelComponent","rest","width","height"],"mappings":";;;;;AAAA,OAAOA,KAAP,MAAiC,OAAjC;AACA,SACEC,cADF,EAEEC,WAFF,EAGEC,UAHF,EAIEC,YAJF,EAKEC,IALF,EAMEC,WANF,QAOO,gBAPP;AASA,IAAMC,gBAAgB,GAAG;AACvBC,EAAAA,EAAE,EAAE,EADmB;AAEvBC,EAAAA,EAAE,EAAE,EAFmB;AAGvBC,EAAAA,EAAE,EAAE;AAHmB,CAAzB;AAgBA,IAAMC,KAAK,GAAGX,KAAK,CAACY,UAAN,CACZ,gBAgBEC,GAhBF,EAiBK;AAAA,MAfDC,EAeC,QAfDA,EAeC;AAAA,2BAdDC,QAcC;AAAA,MAdDA,QAcC,8BAdU,KAcV;AAAA,4BAbDC,SAaC;AAAA,MAbDA,SAaC,+BAbW,IAaX;AAAA,MAZDC,UAYC,QAZDA,UAYC;AAAA,wBATDC,KASC;AAAA,MATDA,KASC,2BATO,EASP;AAAA,MARDC,UAQC,QARDA,UAQC;AAAA,MAJDC,cAIC,QAJDA,cAIC;AAAA,MAHEC,IAGF;;AACH;AACA;AACA;AACA;AACA,sBACE,oBAAC,YAAD;AAAc,IAAA,EAAE,EAAEP,EAAE,GAAG,eAAvB;AAAwC,IAAA,QAAQ,EAAEC,QAAlD;AAA4D,IAAA,OAAO,EAAED,EAArE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,kBACE,oBAAC,cAAD;AACE,IAAA,KAAK,EAAE;AACLQ,MAAAA,KAAK,EAAEf,gBAAgB,CAACS,SAAD,CAAhB,IAA+B,EADjC;AAELO,MAAAA,MAAM,EAAEhB,gBAAgB,CAACS,SAAD,CAAhB,IAA+B;AAFlC,KADT;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,kBAME,oBAAC,WAAD;AACE,IAAA,IAAI,EAAC,OADP;AAEE,IAAA,EAAE,EAAEF,EAFN;AAGE,IAAA,QAAQ,EAAEC,QAHZ,CAIE;AACA;AACA;AACA;AACA;AACA;AACA;AAVF;AAWE,IAAA,GAAG,EAAEF;AAXP,KAYMQ,IAZN;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KANF,eAoBE,oBAAC,WAAD;AACE,IAAA,QAAQ,EAAEN,QADZ;AAEE,IAAA,SAAS,EACPC,SAAS,IAAI,OAAOA,SAAP,KAAqB,QAAlC,GACIA,SADJ,GAEIT,gBAAgB,CAACS,SAAD,CALxB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,kBAQE,oBAAC,IAAD;AAAM,IAAA,OAAO,EAAC,WAAd;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,kBACE;AACE,IAAA,EAAE,EAAC,IADL;AAEE,IAAA,EAAE,EAAC,IAFL;AAGE,IAAA,CAAC,EAAC,GAHJ;AAIE,IAAA,MAAM,EAAC,sBAJT;AAKE,IAAA,WAAW,EAAC,GALd;AAME,IAAA,IAAI,EAAC,cANP,CAOE;AAPF;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,IADF,CARF,CApBF,CADF,EA0CGI,cAAc,IACZF,KAAK,iBACJ,oBAAC,UAAD;AAAY,IAAA,UAAU,EAAED,UAAxB;AAAoC,IAAA,OAAO,EAAEH,EAA7C;AAAiD,IAAA,KAAK,EAAEK,UAAxD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KACGD,KADH,CA5CN,CADF;AAmDD,CA1EW,CAAd;;;;;;;;;;;;;;;;;;;;;;;;;;;;;AA6EA,eAAeP,KAAf","sourcesContent":["import React, { ReactNode } from 'react'\nimport {\n  RadioContainer,\n  StyledRadio,\n  RadioLabel,\n  RadioWrapper,\n  Icon,\n  HiddenRadio\n} from './Radio.styled'\n\nconst radioSizeMapping = {\n  sm: 13,\n  md: 15,\n  lg: 18\n}\nexport type tRadioSize = 'sm' | 'md' | 'lg' | number\nexport interface IRadioProps\n  extends React.InputHTMLAttributes<HTMLInputElement> {\n  // extends React.DetailedHTMLProps< //   React.InputHTMLAttributes<HTMLInputElement>, //   HTMLInputElement // >\n  radioSize?: tRadioSize\n  label?: string\n  labelColor?: string\n  labelComponent?: ReactNode\n  fontWeight?:string\n}\n\nconst Radio = React.forwardRef<HTMLInputElement, IRadioProps>(\n  (\n    {\n      id,\n      disabled = false,\n      radioSize = 'sm',\n      fontWeight,\n      // checked = false,\n      // defaultChecked = false,\n      label = '',\n      labelColor,\n      // value,\n      // name,\n      // onChange = () => {},\n      labelComponent,\n      ...rest\n    },\n    ref\n  ) => {\n    // const [isChecked, setIsChecked] = useState(defaultChecked || checked)\n    // useEffect(() => {\n    //   setIsChecked(checked)\n    // }, [checked])\n    return (\n      <RadioWrapper id={id + '-RadioWrapper'} disabled={disabled} htmlFor={id}>\n        <RadioContainer\n          style={{\n            width: radioSizeMapping[radioSize] || 15,\n            height: radioSizeMapping[radioSize] || 15\n          }}\n        >\n          <HiddenRadio\n            type='radio'\n            id={id}\n            disabled={disabled}\n            // checked={isChecked}\n            // name={name}\n            // value={value}\n            // onChange={(e: React.ChangeEvent<HTMLInputElement>) => {\n            //   e.target && setIsChecked(e.target.checked)\n            //   onChange(e)\n            // }}\n            ref={ref}\n            {...rest}\n          />\n          <StyledRadio\n            disabled={disabled}\n            radioSize={\n              radioSize && typeof radioSize === 'number'\n                ? radioSize\n                : radioSizeMapping[radioSize]\n            }\n          >\n            <Icon viewBox='0 0 20 20'>\n              <circle\n                cx='10'\n                cy='10'\n                r='8'\n                stroke='primary.contrastText'\n                strokeWidth='3'\n                fill='primary.main'\n                // style={{ paddingBottom: '4px' }}\n              />\n            </Icon>\n          </StyledRadio>\n        </RadioContainer>\n        {labelComponent ||\n          (label && (\n            <RadioLabel fontWeight={fontWeight} htmlFor={id} color={labelColor}>\n              {label}\n            </RadioLabel>\n          ))}\n      </RadioWrapper>\n    )\n  }\n)\n\nexport default Radio\n"]},"metadata":{},"sourceType":"module"}