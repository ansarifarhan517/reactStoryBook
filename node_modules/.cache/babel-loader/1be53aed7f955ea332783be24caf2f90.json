{"ast":null,"code":"import _defineProperty from \"/Users/farhanansari/Code/ui-library/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/defineProperty\";\n\nvar _this = this,\n    _jsxFileName = \"/Users/farhanansari/Code/ui-library/src/components/atoms/CheckboxGroup/index.tsx\";\n\nimport React from 'react';\nimport { CheckboxGroupStyled } from './CheckboxGroup.styled';\nimport Checkbox from '../Checkbox';\n\nvar CheckboxGroup = function CheckboxGroup(_ref) {\n  var _ref$checkOptions = _ref.checkOptions,\n      checkOptions = _ref$checkOptions === void 0 ? [] : _ref$checkOptions,\n      _ref$orientation = _ref.orientation,\n      orientation = _ref$orientation === void 0 ? false : _ref$orientation,\n      _ref$onChange = _ref.onChange,\n      onChange = _ref$onChange === void 0 ? function () {} : _ref$onChange,\n      _ref$spacing = _ref.spacing,\n      spacing = _ref$spacing === void 0 ? '' : _ref$spacing,\n      _ref$checkboxSize = _ref.checkboxSize,\n      checkboxSize = _ref$checkboxSize === void 0 ? 'sm' : _ref$checkboxSize,\n      style = _ref.style;\n\n  var handleChange = function handleChange(checkboxId, checked) {\n    onChange(checkboxId, checked, checkOptions);\n  };\n\n  var spacingProps = spacing ? _defineProperty({}, orientation ? 'verticalSpacing' : 'horizontalSpacing', spacing) : {};\n  return /*#__PURE__*/React.createElement(CheckboxGroupStyled, Object.assign({\n    orientation: orientation\n  }, spacingProps, {\n    style: style,\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 47,\n      columnNumber: 5\n    }\n  }), checkOptions.map(function (_ref3) {\n    var id = _ref3.id,\n        _ref3$checked = _ref3.checked,\n        checked = _ref3$checked === void 0 ? false : _ref3$checked,\n        _ref3$value = _ref3.value,\n        value = _ref3$value === void 0 ? '' : _ref3$value,\n        _ref3$disabled = _ref3.disabled,\n        disabled = _ref3$disabled === void 0 ? false : _ref3$disabled,\n        color = _ref3.color;\n    return /*#__PURE__*/React.createElement(Checkbox, {\n      key: id,\n      id: id,\n      label: value,\n      checked: checked,\n      disabled: disabled,\n      checkboxSize: checkboxSize,\n      color: color,\n      onChange: function onChange(e) {\n        return handleChange(id, e.target.checked);\n      },\n      __self: _this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 60,\n        columnNumber: 11\n      }\n    });\n  }));\n};\n\nCheckboxGroup.__docgenInfo = {\n  \"description\": \"\",\n  \"methods\": [],\n  \"displayName\": \"CheckboxGroup\",\n  \"props\": {\n    \"checkOptions\": {\n      \"defaultValue\": {\n        \"value\": \"[]\",\n        \"computed\": false\n      },\n      \"required\": false,\n      \"tsType\": {\n        \"name\": \"any\"\n      },\n      \"description\": \"\"\n    },\n    \"orientation\": {\n      \"defaultValue\": {\n        \"value\": \"false\",\n        \"computed\": false\n      },\n      \"required\": false,\n      \"tsType\": {\n        \"name\": \"boolean\"\n      },\n      \"description\": \"\"\n    },\n    \"onChange\": {\n      \"defaultValue\": {\n        \"value\": \"() => {}\",\n        \"computed\": false\n      },\n      \"required\": false,\n      \"tsType\": {\n        \"name\": \"signature\",\n        \"type\": \"function\",\n        \"raw\": \"(\\n  id: string,\\n  checked: boolean,\\n  checkBoxStateArray: IOptionType[]\\n) => void\",\n        \"signature\": {\n          \"arguments\": [{\n            \"name\": \"id\",\n            \"type\": {\n              \"name\": \"string\"\n            }\n          }, {\n            \"name\": \"checked\",\n            \"type\": {\n              \"name\": \"boolean\"\n            }\n          }, {\n            \"name\": \"checkBoxStateArray\",\n            \"type\": {\n              \"name\": \"Array\",\n              \"elements\": [{\n                \"name\": \"IOptionType\"\n              }],\n              \"raw\": \"IOptionType[]\"\n            }\n          }],\n          \"return\": {\n            \"name\": \"void\"\n          }\n        }\n      },\n      \"description\": \"\"\n    },\n    \"spacing\": {\n      \"defaultValue\": {\n        \"value\": \"''\",\n        \"computed\": false\n      },\n      \"required\": false,\n      \"tsType\": {\n        \"name\": \"union\",\n        \"raw\": \"number | string\",\n        \"elements\": [{\n          \"name\": \"number\"\n        }, {\n          \"name\": \"string\"\n        }]\n      },\n      \"description\": \"\"\n    },\n    \"checkboxSize\": {\n      \"defaultValue\": {\n        \"value\": \"'sm'\",\n        \"computed\": false\n      },\n      \"required\": false,\n      \"tsType\": {\n        \"name\": \"tCheckboxSize\"\n      },\n      \"description\": \"'sm' | 'md' | 'lg' | number\"\n    },\n    \"style\": {\n      \"required\": false,\n      \"tsType\": {\n        \"name\": \"CSSProperties\"\n      },\n      \"description\": \"\"\n    }\n  }\n};\nexport default CheckboxGroup;\n\nif (typeof STORYBOOK_REACT_CLASSES !== \"undefined\") {\n  STORYBOOK_REACT_CLASSES[\"src/components/atoms/CheckboxGroup/index.tsx\"] = {\n    name: \"CheckboxGroup\",\n    docgenInfo: CheckboxGroup.__docgenInfo,\n    path: \"src/components/atoms/CheckboxGroup/index.tsx\"\n  };\n}","map":{"version":3,"sources":["/Users/farhanansari/Code/ui-library/src/components/atoms/CheckboxGroup/index.tsx"],"names":["React","CheckboxGroupStyled","Checkbox","CheckboxGroup","checkOptions","orientation","onChange","spacing","checkboxSize","style","handleChange","checkboxId","checked","spacingProps","map","id","value","disabled","color","e","target"],"mappings":";;;;;AAAA,OAAOA,KAAP,MAAqC,OAArC;AACA,SAASC,mBAAT,QAAoC,wBAApC;AAEA,OAAOC,QAAP,MAAwC,aAAxC;;AAyBA,IAAMC,aAAa,GAAG,SAAhBA,aAAgB,OAOK;AAAA,+BANzBC,YAMyB;AAAA,MANzBA,YAMyB,kCANV,EAMU;AAAA,8BALzBC,WAKyB;AAAA,MALzBA,WAKyB,iCALX,KAKW;AAAA,2BAJzBC,QAIyB;AAAA,MAJzBA,QAIyB,8BAJd,YAAM,CAAE,CAIM;AAAA,0BAHzBC,OAGyB;AAAA,MAHzBA,OAGyB,6BAHf,EAGe;AAAA,+BAFzBC,YAEyB;AAAA,MAFzBA,YAEyB,kCAFV,IAEU;AAAA,MADzBC,KACyB,QADzBA,KACyB;;AACzB,MAAMC,YAAY,GAAG,SAAfA,YAAe,CAACC,UAAD,EAAqBC,OAArB,EAA0C;AAC7DN,IAAAA,QAAQ,CAACK,UAAD,EAAaC,OAAb,EAAsBR,YAAtB,CAAR;AACD,GAFD;;AAIA,MAAMS,YAAY,GAAGN,OAAO,uBAErBF,WAAW,GAAG,iBAAH,GAAuB,mBAFb,EAEmCE,OAFnC,IAIxB,EAJJ;AAKA,sBACE,oBAAC,mBAAD;AACE,IAAA,WAAW,EAAEF;AADf,KAEMQ,YAFN;AAGE,IAAA,KAAK,EAAEJ,KAHT;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,MAKGL,YAAY,CAACU,GAAb,CACC;AAAA,QACEC,EADF,SACEA,EADF;AAAA,8BAEEH,OAFF;AAAA,QAEEA,OAFF,8BAEY,KAFZ;AAAA,4BAGEI,KAHF;AAAA,QAGEA,KAHF,4BAGU,EAHV;AAAA,+BAIEC,QAJF;AAAA,QAIEA,QAJF,+BAIa,KAJb;AAAA,QAKEC,KALF,SAKEA,KALF;AAAA,wBAOE,oBAAC,QAAD;AACE,MAAA,GAAG,EAAEH,EADP;AAEE,MAAA,EAAE,EAAEA,EAFN;AAGE,MAAA,KAAK,EAAEC,KAHT;AAIE,MAAA,OAAO,EAAEJ,OAJX;AAKE,MAAA,QAAQ,EAAEK,QALZ;AAME,MAAA,YAAY,EAAET,YANhB;AAOE,MAAA,KAAK,EAAEU,KAPT;AAQE,MAAA,QAAQ,EAAE,kBAACC,CAAD;AAAA,eACRT,YAAY,CAACK,EAAD,EAAKI,CAAC,CAACC,MAAF,CAASR,OAAd,CADJ;AAAA,OARZ;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,MAPF;AAAA,GADD,CALH,CADF;AA8BD,CA/CD;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;AAgDA,eAAeT,aAAf","sourcesContent":["import React, { CSSProperties } from 'react'\nimport { CheckboxGroupStyled } from './CheckboxGroup.styled'\n\nimport Checkbox, { tCheckboxSize } from '../Checkbox'\n\nexport interface IOptionType {\n  value?: string\n  checked?: boolean\n  id: string\n  disabled?: boolean\n  size?: number\n  color?: string\n}\n\nexport interface ICheckboxGroupProps {\n  checkOptions?: any\n  orientation?: boolean\n  onChange?: (\n    id: string,\n    checked: boolean,\n    checkBoxStateArray: IOptionType[]\n  ) => void\n  spacing?: number | string\n  /** 'sm' | 'md' | 'lg' | number */\n  checkboxSize?: tCheckboxSize\n  style?: CSSProperties\n}\n\nconst CheckboxGroup = ({\n  checkOptions = [],\n  orientation = false,\n  onChange = () => {},\n  spacing = '',\n  checkboxSize = 'sm',\n  style\n}: ICheckboxGroupProps) => {\n  const handleChange = (checkboxId: string, checked: boolean) => {\n    onChange(checkboxId, checked, checkOptions)\n  }\n\n  const spacingProps = spacing\n    ? {\n        [orientation ? 'verticalSpacing' : 'horizontalSpacing']: spacing\n      }\n    : {}\n  return (\n    <CheckboxGroupStyled\n      orientation={orientation}\n      {...spacingProps}\n      style={style}\n    >\n      {checkOptions.map(\n        ({\n          id,\n          checked = false,\n          value = '',\n          disabled = false,\n          color\n        }: IOptionType): JSX.Element => (\n          <Checkbox\n            key={id}\n            id={id}\n            label={value}\n            checked={checked}\n            disabled={disabled}\n            checkboxSize={checkboxSize}\n            color={color}\n            onChange={(e: React.ChangeEvent<HTMLInputElement>) =>\n              handleChange(id, e.target.checked)\n            }\n          />\n        )\n      )}\n    </CheckboxGroupStyled>\n  )\n}\nexport default CheckboxGroup\n"]},"metadata":{},"sourceType":"module"}