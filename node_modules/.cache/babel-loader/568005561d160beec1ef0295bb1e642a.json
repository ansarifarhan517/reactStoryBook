{"ast":null,"code":"import _defineProperty from \"/Users/farhanansari/Code/ui-library/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/defineProperty\";\n\nvar _parameters;\n\n/* eslint-disable */\n// @ts-nocheck\n// @ts-ignore\nvar withSourceLoader = require('@storybook/source-loader/preview').withSource; // @ts-ignore\n\n\nvar addSourceDecorator = require(\"@storybook/source-loader/preview\").addSource; // @ts-ignore\n\n\nvar __SOURCE_PREFIX__ = \"/Users/farhanansari/Code/ui-library/src/components/molecules/NumInput\"; // @ts-ignore\n\nvar __STORY__ = \"\\n\\n// @ts-nocheck\\n// @ts-ignore\\nvar withSourceLoader = require('@storybook/source-loader/preview').withSource;\\n// @ts-ignore\\nvar addSourceDecorator = require(\\\"@storybook/source-loader/preview\\\").addSource;\\n// @ts-ignore\\nvar __SOURCE_PREFIX__ = \\\"/Users/farhanansari/Code/ui-library/src/components/molecules/NumInput\\\";\\n// @ts-ignore\\nvar __STORY__ = \\\"\\\\n\\\\n// @ts-nocheck\\\\n// @ts-ignore\\\\nvar withSourceLoader = require('@storybook/source-loader/preview').withSource;\\\\n// @ts-ignore\\\\nvar addSourceDecorator = require(\\\\\\\"@storybook/source-loader/preview\\\\\\\").addSource;\\\\n// @ts-ignore\\\\nvar __SOURCE_PREFIX__ = \\\\\\\"/Users/farhanansari/Code/ui-library/src/components/molecules/NumInput\\\\\\\";\\\\n// @ts-ignore\\\\nvar __STORY__ = \\\\\\\"import { action } from '@storybook/addon-actions'\\\\\\\\nimport { boolean, number, object, text } from '@storybook/addon-knobs'\\\\\\\\nimport React from 'react'\\\\\\\\nimport NumInput from '.'\\\\\\\\nimport { path } from '..'\\\\\\\\nimport ThemeWrapper from '../../../utilities/components/ThemeWrapper'\\\\\\\\nimport Box from '../../atoms/Box'\\\\\\\\nimport Position from '../Position'\\\\\\\\n\\\\\\\\nexport default {\\\\\\\\n  title: `${path}/NumInput`,\\\\\\\\n  component: NumInput\\\\\\\\n}\\\\\\\\n\\\\\\\\nexport const DefaultField = () => (\\\\\\\\n  <ThemeWrapper>\\\\\\\\n    <Box p='1em'>\\\\\\\\n      <NumInput\\\\\\\\n        id='someId'\\\\\\\\n        name='someName'\\\\\\\\n        className='someClassName'\\\\\\\\n        label={text('label', 'Username')}\\\\\\\\n        labelColor={text('labelColor', 'text.inputLabel.default')}\\\\\\\\n        placeholder={text('placeholder', 'Enter text here...')}\\\\\\\\n        maxLength={number('maxLength', 10)}\\\\\\\\n        error={boolean('error', false)}\\\\\\\\n        errorMessage={text('errorMessage', '')}\\\\\\\\n        required={boolean('required', false)}\\\\\\\\n        fullWidth={boolean('fullWidth', false)}\\\\\\\\n        onChange={action('Triggered: onChange')}\\\\\\\\n        tooltipMesaage={text('tooltipMesaage', 'i am default label tooltip')}\\\\\\\\n      />\\\\\\\\n    </Box>\\\\\\\\n  </ThemeWrapper>\\\\\\\\n)\\\\\\\\n\\\\\\\\nexport const RequiredField = () => (\\\\\\\\n  <ThemeWrapper>\\\\\\\\n    <Box p='1em'>\\\\\\\\n      <NumInput\\\\\\\\n        id='someId'\\\\\\\\n        name='someName'\\\\\\\\n        className='someClassName'\\\\\\\\n        label={text('label', 'Username')}\\\\\\\\n        labelColor={text('labelColor', 'text.inputLabel.default')}\\\\\\\\n        placeholder={text('placeholder', 'Enter text here...')}\\\\\\\\n        maxLength={number('maxLength', 10)}\\\\\\\\n        error={boolean('error', false)}\\\\\\\\n        errorMessage={text('errorMessage', '')}\\\\\\\\n        required={boolean('required', true)}\\\\\\\\n        fullWidth={boolean('fullWidth', false)}\\\\\\\\n        onChange={action('Triggered: onChange')}\\\\\\\\n      />\\\\\\\\n    </Box>\\\\\\\\n  </ThemeWrapper>\\\\\\\\n)\\\\\\\\nexport const ErrorField = () => (\\\\\\\\n  <ThemeWrapper>\\\\\\\\n    <Box p='1em'>\\\\\\\\n      <NumInput\\\\\\\\n        id='someId'\\\\\\\\n        name='someName'\\\\\\\\n        className='someClassName'\\\\\\\\n        label={text('label', 'Username')}\\\\\\\\n        labelColor={text('labelColor', 'text.inputLabel.default')}\\\\\\\\n        placeholder={text('placeholder', 'Enter text here...')}\\\\\\\\n        maxLength={number('maxLength', 10)}\\\\\\\\n        error={boolean('error', true)}\\\\\\\\n        errorMessage={text('errorMessage', 'Some Field Error')}\\\\\\\\n        required={boolean('required', false)}\\\\\\\\n        fullWidth={boolean('fullWidth', false)}\\\\\\\\n        onChange={action('Triggered: onChange')}\\\\\\\\n      />\\\\\\\\n    </Box>\\\\\\\\n  </ThemeWrapper>\\\\\\\\n)\\\\\\\\n\\\\\\\\nexport const WithOutBorder = () => (\\\\\\\\n  <ThemeWrapper>\\\\\\\\n    <Box bgColor='grey.100' p='2em'>\\\\\\\\n      <NumInput\\\\\\\\n        id='someId'\\\\\\\\n        name='someName'\\\\\\\\n        className='someClassName'\\\\\\\\n        maxLength={number('maxLength', 10)}\\\\\\\\n        error={boolean('error', false)}\\\\\\\\n        onChange={action('Triggered: onChange')}\\\\\\\\n        variant='inline-edit'\\\\\\\\n      />\\\\\\\\n    </Box>\\\\\\\\n  </ThemeWrapper>\\\\\\\\n)\\\\\\\\n\\\\\\\\nexport const withIcon = () => (\\\\\\\\n  <ThemeWrapper>\\\\\\\\n    <Box p='2em'>\\\\\\\\n      <Position\\\\\\\\n        type='relative'\\\\\\\\n        display='block'\\\\\\\\n        style={object('WrapperStyle', {\\\\\\\\n          // boxShadow: '2px 3px 10px 0px lightgrey',\\\\\\\\n          width: '50%'\\\\\\\\n        })}\\\\\\\\n      >\\\\\\\\n        <NumInput\\\\\\\\n          id='someId'\\\\\\\\n          name='someName'\\\\\\\\n          className='someClassName'\\\\\\\\n          placeholder={text('placeholder', 'Enter text here...')}\\\\\\\\n          maxLength={number('maxLength', 10)}\\\\\\\\n          error={boolean('error', false)}\\\\\\\\n          errorMessage={text('errorMessage', 'Some Field Error')}\\\\\\\\n          required={boolean('required', false)}\\\\\\\\n          fullWidth={boolean('fullWidth', true)}\\\\\\\\n          onChange={action('Triggered: onChange')}\\\\\\\\n          // border={boolean('border', false)}\\\\\\\\n          color={text('color', 'primary.main')}\\\\\\\\n          variant='withIcon'\\\\\\\\n          iconVariant='calendar'\\\\\\\\n          iconSize={15}\\\\\\\\n          // iconStyle={{ padding: '7px 7px 7px 7px' }}\\\\\\\\n          // style={object('style', {\\\\\\\\n          //   fontSize: '14px',\\\\\\\\n          //   minHeight: '30px'\\\\\\\\n          // })}\\\\\\\\n        />\\\\\\\\n      </Position>\\\\\\\\n    </Box>\\\\\\\\n  </ThemeWrapper>\\\\\\\\n)\\\\\\\\n\\\\\\\";\\\\n// @ts-ignore\\\\nvar __ADDS_MAP__ = {};\\\\n// @ts-ignore\\\\nvar __MAIN_FILE_LOCATION__ = \\\\\\\"/NumtInput.stories.tsx\\\\\\\";\\\\n// @ts-ignore\\\\nvar __MODULE_DEPENDENCIES__ = [];\\\\n// @ts-ignore\\\\nvar __LOCAL_DEPENDENCIES__ = {};\\\\n// @ts-ignore\\\\nvar __IDS_TO_FRAMEWORKS__ = {};\\\\n        \\\\nimport { action } from '@storybook/addon-actions'\\\\nimport { boolean, number, object, text } from '@storybook/addon-knobs'\\\\nimport React from 'react'\\\\nimport NumInput from '.'\\\\nimport { path } from '..'\\\\nimport ThemeWrapper from '../../../utilities/components/ThemeWrapper'\\\\nimport Box from '../../atoms/Box'\\\\nimport Position from '../Position'\\\\n\\\\nexport default {parameters: {\\\\\\\"storySource\\\\\\\":{\\\\\\\"source\\\\\\\":\\\\\\\"import { action } from '@storybook/addon-actions'\\\\\\\\nimport { boolean, number, object, text } from '@storybook/addon-knobs'\\\\\\\\nimport React from 'react'\\\\\\\\nimport NumInput from '.'\\\\\\\\nimport { path } from '..'\\\\\\\\nimport ThemeWrapper from '../../../utilities/components/ThemeWrapper'\\\\\\\\nimport Box from '../../atoms/Box'\\\\\\\\nimport Position from '../Position'\\\\\\\\n\\\\\\\\nexport default {\\\\\\\\n  title: `${path}/NumInput`,\\\\\\\\n  component: NumInput\\\\\\\\n}\\\\\\\\n\\\\\\\\nexport const DefaultField = () => (\\\\\\\\n  <ThemeWrapper>\\\\\\\\n    <Box p='1em'>\\\\\\\\n      <NumInput\\\\\\\\n        id='someId'\\\\\\\\n        name='someName'\\\\\\\\n        className='someClassName'\\\\\\\\n        label={text('label', 'Username')}\\\\\\\\n        labelColor={text('labelColor', 'text.inputLabel.default')}\\\\\\\\n        placeholder={text('placeholder', 'Enter text here...')}\\\\\\\\n        maxLength={number('maxLength', 10)}\\\\\\\\n        error={boolean('error', false)}\\\\\\\\n        errorMessage={text('errorMessage', '')}\\\\\\\\n        required={boolean('required', false)}\\\\\\\\n        fullWidth={boolean('fullWidth', false)}\\\\\\\\n        onChange={action('Triggered: onChange')}\\\\\\\\n        tooltipMesaage={text('tooltipMesaage', 'i am default label tooltip')}\\\\\\\\n      />\\\\\\\\n    </Box>\\\\\\\\n  </ThemeWrapper>\\\\\\\\n)\\\\\\\\n\\\\\\\\nexport const RequiredField = () => (\\\\\\\\n  <ThemeWrapper>\\\\\\\\n    <Box p='1em'>\\\\\\\\n      <NumInput\\\\\\\\n        id='someId'\\\\\\\\n        name='someName'\\\\\\\\n        className='someClassName'\\\\\\\\n        label={text('label', 'Username')}\\\\\\\\n        labelColor={text('labelColor', 'text.inputLabel.default')}\\\\\\\\n        placeholder={text('placeholder', 'Enter text here...')}\\\\\\\\n        maxLength={number('maxLength', 10)}\\\\\\\\n        error={boolean('error', false)}\\\\\\\\n        errorMessage={text('errorMessage', '')}\\\\\\\\n        required={boolean('required', true)}\\\\\\\\n        fullWidth={boolean('fullWidth', false)}\\\\\\\\n        onChange={action('Triggered: onChange')}\\\\\\\\n      />\\\\\\\\n    </Box>\\\\\\\\n  </ThemeWrapper>\\\\\\\\n)\\\\\\\\nexport const ErrorField = () => (\\\\\\\\n  <ThemeWrapper>\\\\\\\\n    <Box p='1em'>\\\\\\\\n      <NumInput\\\\\\\\n        id='someId'\\\\\\\\n        name='someName'\\\\\\\\n        className='someClassName'\\\\\\\\n        label={text('label', 'Username')}\\\\\\\\n        labelColor={text('labelColor', 'text.inputLabel.default')}\\\\\\\\n        placeholder={text('placeholder', 'Enter text here...')}\\\\\\\\n        maxLength={number('maxLength', 10)}\\\\\\\\n        error={boolean('error', true)}\\\\\\\\n        errorMessage={text('errorMessage', 'Some Field Error')}\\\\\\\\n        required={boolean('required', false)}\\\\\\\\n        fullWidth={boolean('fullWidth', false)}\\\\\\\\n        onChange={action('Triggered: onChange')}\\\\\\\\n      />\\\\\\\\n    </Box>\\\\\\\\n  </ThemeWrapper>\\\\\\\\n)\\\\\\\\n\\\\\\\\nexport const WithOutBorder = () => (\\\\\\\\n  <ThemeWrapper>\\\\\\\\n    <Box bgColor='grey.100' p='2em'>\\\\\\\\n      <NumInput\\\\\\\\n        id='someId'\\\\\\\\n        name='someName'\\\\\\\\n        className='someClassName'\\\\\\\\n        maxLength={number('maxLength', 10)}\\\\\\\\n        error={boolean('error', false)}\\\\\\\\n        onChange={action('Triggered: onChange')}\\\\\\\\n        variant='inline-edit'\\\\\\\\n      />\\\\\\\\n    </Box>\\\\\\\\n  </ThemeWrapper>\\\\\\\\n)\\\\\\\\n\\\\\\\\nexport const withIcon = () => (\\\\\\\\n  <ThemeWrapper>\\\\\\\\n    <Box p='2em'>\\\\\\\\n      <Position\\\\\\\\n        type='relative'\\\\\\\\n        display='block'\\\\\\\\n        style={object('WrapperStyle', {\\\\\\\\n          // boxShadow: '2px 3px 10px 0px lightgrey',\\\\\\\\n          width: '50%'\\\\\\\\n        })}\\\\\\\\n      >\\\\\\\\n        <NumInput\\\\\\\\n          id='someId'\\\\\\\\n          name='someName'\\\\\\\\n          className='someClassName'\\\\\\\\n          placeholder={text('placeholder', 'Enter text here...')}\\\\\\\\n          maxLength={number('maxLength', 10)}\\\\\\\\n          error={boolean('error', false)}\\\\\\\\n          errorMessage={text('errorMessage', 'Some Field Error')}\\\\\\\\n          required={boolean('required', false)}\\\\\\\\n          fullWidth={boolean('fullWidth', true)}\\\\\\\\n          onChange={action('Triggered: onChange')}\\\\\\\\n          // border={boolean('border', false)}\\\\\\\\n          color={text('color', 'primary.main')}\\\\\\\\n          variant='withIcon'\\\\\\\\n          iconVariant='calendar'\\\\\\\\n          iconSize={15}\\\\\\\\n          // iconStyle={{ padding: '7px 7px 7px 7px' }}\\\\\\\\n          // style={object('style', {\\\\\\\\n          //   fontSize: '14px',\\\\\\\\n          //   minHeight: '30px'\\\\\\\\n          // })}\\\\\\\\n        />\\\\\\\\n      </Position>\\\\\\\\n    </Box>\\\\\\\\n  </ThemeWrapper>\\\\\\\\n)\\\\\\\\n\\\\\\\",\\\\\\\"locationsMap\\\\\\\":{}},},\\\\n  title: `${path}/NumInput`,\\\\n  component: NumInput\\\\n}\\\\n\\\\nexport const DefaultField = addSourceDecorator(() => (\\\\n  <ThemeWrapper>\\\\n    <Box p='1em'>\\\\n      <NumInput\\\\n        id='someId'\\\\n        name='someName'\\\\n        className='someClassName'\\\\n        label={text('label', 'Username')}\\\\n        labelColor={text('labelColor', 'text.inputLabel.default')}\\\\n        placeholder={text('placeholder', 'Enter text here...')}\\\\n        maxLength={number('maxLength', 10)}\\\\n        error={boolean('error', false)}\\\\n        errorMessage={text('errorMessage', '')}\\\\n        required={boolean('required', false)}\\\\n        fullWidth={boolean('fullWidth', false)}\\\\n        onChange={action('Triggered: onChange')}\\\\n        tooltipMesaage={text('tooltipMesaage', 'i am default label tooltip')}\\\\n      />\\\\n    </Box>\\\\n  </ThemeWrapper>\\\\n), {__STORY__, __ADDS_MAP__,__MAIN_FILE_LOCATION__,__MODULE_DEPENDENCIES__,__LOCAL_DEPENDENCIES__,__SOURCE_PREFIX__,__IDS_TO_FRAMEWORKS__});\\\\n\\\\nexport const RequiredField = addSourceDecorator(() => (\\\\n  <ThemeWrapper>\\\\n    <Box p='1em'>\\\\n      <NumInput\\\\n        id='someId'\\\\n        name='someName'\\\\n        className='someClassName'\\\\n        label={text('label', 'Username')}\\\\n        labelColor={text('labelColor', 'text.inputLabel.default')}\\\\n        placeholder={text('placeholder', 'Enter text here...')}\\\\n        maxLength={number('maxLength', 10)}\\\\n        error={boolean('error', false)}\\\\n        errorMessage={text('errorMessage', '')}\\\\n        required={boolean('required', true)}\\\\n        fullWidth={boolean('fullWidth', false)}\\\\n        onChange={action('Triggered: onChange')}\\\\n      />\\\\n    </Box>\\\\n  </ThemeWrapper>\\\\n), {__STORY__, __ADDS_MAP__,__MAIN_FILE_LOCATION__,__MODULE_DEPENDENCIES__,__LOCAL_DEPENDENCIES__,__SOURCE_PREFIX__,__IDS_TO_FRAMEWORKS__});\\\\nexport const ErrorField = addSourceDecorator(() => (\\\\n  <ThemeWrapper>\\\\n    <Box p='1em'>\\\\n      <NumInput\\\\n        id='someId'\\\\n        name='someName'\\\\n        className='someClassName'\\\\n        label={text('label', 'Username')}\\\\n        labelColor={text('labelColor', 'text.inputLabel.default')}\\\\n        placeholder={text('placeholder', 'Enter text here...')}\\\\n        maxLength={number('maxLength', 10)}\\\\n        error={boolean('error', true)}\\\\n        errorMessage={text('errorMessage', 'Some Field Error')}\\\\n        required={boolean('required', false)}\\\\n        fullWidth={boolean('fullWidth', false)}\\\\n        onChange={action('Triggered: onChange')}\\\\n      />\\\\n    </Box>\\\\n  </ThemeWrapper>\\\\n), {__STORY__, __ADDS_MAP__,__MAIN_FILE_LOCATION__,__MODULE_DEPENDENCIES__,__LOCAL_DEPENDENCIES__,__SOURCE_PREFIX__,__IDS_TO_FRAMEWORKS__});\\\\n\\\\nexport const WithOutBorder = addSourceDecorator(() => (\\\\n  <ThemeWrapper>\\\\n    <Box bgColor='grey.100' p='2em'>\\\\n      <NumInput\\\\n        id='someId'\\\\n        name='someName'\\\\n        className='someClassName'\\\\n        maxLength={number('maxLength', 10)}\\\\n        error={boolean('error', false)}\\\\n        onChange={action('Triggered: onChange')}\\\\n        variant='inline-edit'\\\\n      />\\\\n    </Box>\\\\n  </ThemeWrapper>\\\\n), {__STORY__, __ADDS_MAP__,__MAIN_FILE_LOCATION__,__MODULE_DEPENDENCIES__,__LOCAL_DEPENDENCIES__,__SOURCE_PREFIX__,__IDS_TO_FRAMEWORKS__});\\\\n\\\\nexport const withIcon = addSourceDecorator(() => (\\\\n  <ThemeWrapper>\\\\n    <Box p='2em'>\\\\n      <Position\\\\n        type='relative'\\\\n        display='block'\\\\n        style={object('WrapperStyle', {\\\\n          // boxShadow: '2px 3px 10px 0px lightgrey',\\\\n          width: '50%'\\\\n        })}\\\\n      >\\\\n        <NumInput\\\\n          id='someId'\\\\n          name='someName'\\\\n          className='someClassName'\\\\n          placeholder={text('placeholder', 'Enter text here...')}\\\\n          maxLength={number('maxLength', 10)}\\\\n          error={boolean('error', false)}\\\\n          errorMessage={text('errorMessage', 'Some Field Error')}\\\\n          required={boolean('required', false)}\\\\n          fullWidth={boolean('fullWidth', true)}\\\\n          onChange={action('Triggered: onChange')}\\\\n          // border={boolean('border', false)}\\\\n          color={text('color', 'primary.main')}\\\\n          variant='withIcon'\\\\n          iconVariant='calendar'\\\\n          iconSize={15}\\\\n          // iconStyle={{ padding: '7px 7px 7px 7px' }}\\\\n          // style={object('style', {\\\\n          //   fontSize: '14px',\\\\n          //   minHeight: '30px'\\\\n          // })}\\\\n        />\\\\n      </Position>\\\\n    </Box>\\\\n  </ThemeWrapper>\\\\n), {__STORY__, __ADDS_MAP__,__MAIN_FILE_LOCATION__,__MODULE_DEPENDENCIES__,__LOCAL_DEPENDENCIES__,__SOURCE_PREFIX__,__IDS_TO_FRAMEWORKS__});\\\";\\n// @ts-ignore\\nvar __ADDS_MAP__ = {};\\n// @ts-ignore\\nvar __MAIN_FILE_LOCATION__ = \\\"/NumtInput.stories.tsx\\\";\\n// @ts-ignore\\nvar __MODULE_DEPENDENCIES__ = [];\\n// @ts-ignore\\nvar __LOCAL_DEPENDENCIES__ = {};\\n// @ts-ignore\\nvar __IDS_TO_FRAMEWORKS__ = {};\\n        \\n\\n\\n// @ts-nocheck\\n// @ts-ignore\\nvar withSourceLoader = require('@storybook/source-loader/preview').withSource;\\n// @ts-ignore\\nvar addSourceDecorator = require(\\\"@storybook/source-loader/preview\\\").addSource;\\n// @ts-ignore\\nvar __SOURCE_PREFIX__ = \\\"/Users/farhanansari/Code/ui-library/src/components/molecules/NumInput\\\";\\n// @ts-ignore\\nvar __STORY__ = \\\"import { action } from '@storybook/addon-actions'\\\\nimport { boolean, number, object, text } from '@storybook/addon-knobs'\\\\nimport React from 'react'\\\\nimport NumInput from '.'\\\\nimport { path } from '..'\\\\nimport ThemeWrapper from '../../../utilities/components/ThemeWrapper'\\\\nimport Box from '../../atoms/Box'\\\\nimport Position from '../Position'\\\\n\\\\nexport default {\\\\n  title: `${path}/NumInput`,\\\\n  component: NumInput\\\\n}\\\\n\\\\nexport const DefaultField = () => (\\\\n  <ThemeWrapper>\\\\n    <Box p='1em'>\\\\n      <NumInput\\\\n        id='someId'\\\\n        name='someName'\\\\n        className='someClassName'\\\\n        label={text('label', 'Username')}\\\\n        labelColor={text('labelColor', 'text.inputLabel.default')}\\\\n        placeholder={text('placeholder', 'Enter text here...')}\\\\n        maxLength={number('maxLength', 10)}\\\\n        error={boolean('error', false)}\\\\n        errorMessage={text('errorMessage', '')}\\\\n        required={boolean('required', false)}\\\\n        fullWidth={boolean('fullWidth', false)}\\\\n        onChange={action('Triggered: onChange')}\\\\n        tooltipMesaage={text('tooltipMesaage', 'i am default label tooltip')}\\\\n      />\\\\n    </Box>\\\\n  </ThemeWrapper>\\\\n)\\\\n\\\\nexport const RequiredField = () => (\\\\n  <ThemeWrapper>\\\\n    <Box p='1em'>\\\\n      <NumInput\\\\n        id='someId'\\\\n        name='someName'\\\\n        className='someClassName'\\\\n        label={text('label', 'Username')}\\\\n        labelColor={text('labelColor', 'text.inputLabel.default')}\\\\n        placeholder={text('placeholder', 'Enter text here...')}\\\\n        maxLength={number('maxLength', 10)}\\\\n        error={boolean('error', false)}\\\\n        errorMessage={text('errorMessage', '')}\\\\n        required={boolean('required', true)}\\\\n        fullWidth={boolean('fullWidth', false)}\\\\n        onChange={action('Triggered: onChange')}\\\\n      />\\\\n    </Box>\\\\n  </ThemeWrapper>\\\\n)\\\\nexport const ErrorField = () => (\\\\n  <ThemeWrapper>\\\\n    <Box p='1em'>\\\\n      <NumInput\\\\n        id='someId'\\\\n        name='someName'\\\\n        className='someClassName'\\\\n        label={text('label', 'Username')}\\\\n        labelColor={text('labelColor', 'text.inputLabel.default')}\\\\n        placeholder={text('placeholder', 'Enter text here...')}\\\\n        maxLength={number('maxLength', 10)}\\\\n        error={boolean('error', true)}\\\\n        errorMessage={text('errorMessage', 'Some Field Error')}\\\\n        required={boolean('required', false)}\\\\n        fullWidth={boolean('fullWidth', false)}\\\\n        onChange={action('Triggered: onChange')}\\\\n      />\\\\n    </Box>\\\\n  </ThemeWrapper>\\\\n)\\\\n\\\\nexport const WithOutBorder = () => (\\\\n  <ThemeWrapper>\\\\n    <Box bgColor='grey.100' p='2em'>\\\\n      <NumInput\\\\n        id='someId'\\\\n        name='someName'\\\\n        className='someClassName'\\\\n        maxLength={number('maxLength', 10)}\\\\n        error={boolean('error', false)}\\\\n        onChange={action('Triggered: onChange')}\\\\n        variant='inline-edit'\\\\n      />\\\\n    </Box>\\\\n  </ThemeWrapper>\\\\n)\\\\n\\\\nexport const withIcon = () => (\\\\n  <ThemeWrapper>\\\\n    <Box p='2em'>\\\\n      <Position\\\\n        type='relative'\\\\n        display='block'\\\\n        style={object('WrapperStyle', {\\\\n          // boxShadow: '2px 3px 10px 0px lightgrey',\\\\n          width: '50%'\\\\n        })}\\\\n      >\\\\n        <NumInput\\\\n          id='someId'\\\\n          name='someName'\\\\n          className='someClassName'\\\\n          placeholder={text('placeholder', 'Enter text here...')}\\\\n          maxLength={number('maxLength', 10)}\\\\n          error={boolean('error', false)}\\\\n          errorMessage={text('errorMessage', 'Some Field Error')}\\\\n          required={boolean('required', false)}\\\\n          fullWidth={boolean('fullWidth', true)}\\\\n          onChange={action('Triggered: onChange')}\\\\n          // border={boolean('border', false)}\\\\n          color={text('color', 'primary.main')}\\\\n          variant='withIcon'\\\\n          iconVariant='calendar'\\\\n          iconSize={15}\\\\n          // iconStyle={{ padding: '7px 7px 7px 7px' }}\\\\n          // style={object('style', {\\\\n          //   fontSize: '14px',\\\\n          //   minHeight: '30px'\\\\n          // })}\\\\n        />\\\\n      </Position>\\\\n    </Box>\\\\n  </ThemeWrapper>\\\\n)\\\\n\\\";\\n// @ts-ignore\\nvar __ADDS_MAP__ = {};\\n// @ts-ignore\\nvar __MAIN_FILE_LOCATION__ = \\\"/NumtInput.stories.tsx\\\";\\n// @ts-ignore\\nvar __MODULE_DEPENDENCIES__ = [];\\n// @ts-ignore\\nvar __LOCAL_DEPENDENCIES__ = {};\\n// @ts-ignore\\nvar __IDS_TO_FRAMEWORKS__ = {};\\n        \\nimport { action } from '@storybook/addon-actions'\\nimport { boolean, number, object, text } from '@storybook/addon-knobs'\\nimport React from 'react'\\nimport NumInput from '.'\\nimport { path } from '..'\\nimport ThemeWrapper from '../../../utilities/components/ThemeWrapper'\\nimport Box from '../../atoms/Box'\\nimport Position from '../Position'\\n\\nexport default {parameters: {\\\"storySource\\\":{\\\"source\\\":\\\"\\\\n\\\\n// @ts-nocheck\\\\n// @ts-ignore\\\\nvar withSourceLoader = require('@storybook/source-loader/preview').withSource;\\\\n// @ts-ignore\\\\nvar addSourceDecorator = require(\\\\\\\"@storybook/source-loader/preview\\\\\\\").addSource;\\\\n// @ts-ignore\\\\nvar __SOURCE_PREFIX__ = \\\\\\\"/Users/farhanansari/Code/ui-library/src/components/molecules/NumInput\\\\\\\";\\\\n// @ts-ignore\\\\nvar __STORY__ = \\\\\\\"import { action } from '@storybook/addon-actions'\\\\\\\\nimport { boolean, number, object, text } from '@storybook/addon-knobs'\\\\\\\\nimport React from 'react'\\\\\\\\nimport NumInput from '.'\\\\\\\\nimport { path } from '..'\\\\\\\\nimport ThemeWrapper from '../../../utilities/components/ThemeWrapper'\\\\\\\\nimport Box from '../../atoms/Box'\\\\\\\\nimport Position from '../Position'\\\\\\\\n\\\\\\\\nexport default {\\\\\\\\n  title: `${path}/NumInput`,\\\\\\\\n  component: NumInput\\\\\\\\n}\\\\\\\\n\\\\\\\\nexport const DefaultField = () => (\\\\\\\\n  <ThemeWrapper>\\\\\\\\n    <Box p='1em'>\\\\\\\\n      <NumInput\\\\\\\\n        id='someId'\\\\\\\\n        name='someName'\\\\\\\\n        className='someClassName'\\\\\\\\n        label={text('label', 'Username')}\\\\\\\\n        labelColor={text('labelColor', 'text.inputLabel.default')}\\\\\\\\n        placeholder={text('placeholder', 'Enter text here...')}\\\\\\\\n        maxLength={number('maxLength', 10)}\\\\\\\\n        error={boolean('error', false)}\\\\\\\\n        errorMessage={text('errorMessage', '')}\\\\\\\\n        required={boolean('required', false)}\\\\\\\\n        fullWidth={boolean('fullWidth', false)}\\\\\\\\n        onChange={action('Triggered: onChange')}\\\\\\\\n        tooltipMesaage={text('tooltipMesaage', 'i am default label tooltip')}\\\\\\\\n      />\\\\\\\\n    </Box>\\\\\\\\n  </ThemeWrapper>\\\\\\\\n)\\\\\\\\n\\\\\\\\nexport const RequiredField = () => (\\\\\\\\n  <ThemeWrapper>\\\\\\\\n    <Box p='1em'>\\\\\\\\n      <NumInput\\\\\\\\n        id='someId'\\\\\\\\n        name='someName'\\\\\\\\n        className='someClassName'\\\\\\\\n        label={text('label', 'Username')}\\\\\\\\n        labelColor={text('labelColor', 'text.inputLabel.default')}\\\\\\\\n        placeholder={text('placeholder', 'Enter text here...')}\\\\\\\\n        maxLength={number('maxLength', 10)}\\\\\\\\n        error={boolean('error', false)}\\\\\\\\n        errorMessage={text('errorMessage', '')}\\\\\\\\n        required={boolean('required', true)}\\\\\\\\n        fullWidth={boolean('fullWidth', false)}\\\\\\\\n        onChange={action('Triggered: onChange')}\\\\\\\\n      />\\\\\\\\n    </Box>\\\\\\\\n  </ThemeWrapper>\\\\\\\\n)\\\\\\\\nexport const ErrorField = () => (\\\\\\\\n  <ThemeWrapper>\\\\\\\\n    <Box p='1em'>\\\\\\\\n      <NumInput\\\\\\\\n        id='someId'\\\\\\\\n        name='someName'\\\\\\\\n        className='someClassName'\\\\\\\\n        label={text('label', 'Username')}\\\\\\\\n        labelColor={text('labelColor', 'text.inputLabel.default')}\\\\\\\\n        placeholder={text('placeholder', 'Enter text here...')}\\\\\\\\n        maxLength={number('maxLength', 10)}\\\\\\\\n        error={boolean('error', true)}\\\\\\\\n        errorMessage={text('errorMessage', 'Some Field Error')}\\\\\\\\n        required={boolean('required', false)}\\\\\\\\n        fullWidth={boolean('fullWidth', false)}\\\\\\\\n        onChange={action('Triggered: onChange')}\\\\\\\\n      />\\\\\\\\n    </Box>\\\\\\\\n  </ThemeWrapper>\\\\\\\\n)\\\\\\\\n\\\\\\\\nexport const WithOutBorder = () => (\\\\\\\\n  <ThemeWrapper>\\\\\\\\n    <Box bgColor='grey.100' p='2em'>\\\\\\\\n      <NumInput\\\\\\\\n        id='someId'\\\\\\\\n        name='someName'\\\\\\\\n        className='someClassName'\\\\\\\\n        maxLength={number('maxLength', 10)}\\\\\\\\n        error={boolean('error', false)}\\\\\\\\n        onChange={action('Triggered: onChange')}\\\\\\\\n        variant='inline-edit'\\\\\\\\n      />\\\\\\\\n    </Box>\\\\\\\\n  </ThemeWrapper>\\\\\\\\n)\\\\\\\\n\\\\\\\\nexport const withIcon = () => (\\\\\\\\n  <ThemeWrapper>\\\\\\\\n    <Box p='2em'>\\\\\\\\n      <Position\\\\\\\\n        type='relative'\\\\\\\\n        display='block'\\\\\\\\n        style={object('WrapperStyle', {\\\\\\\\n          // boxShadow: '2px 3px 10px 0px lightgrey',\\\\\\\\n          width: '50%'\\\\\\\\n        })}\\\\\\\\n      >\\\\\\\\n        <NumInput\\\\\\\\n          id='someId'\\\\\\\\n          name='someName'\\\\\\\\n          className='someClassName'\\\\\\\\n          placeholder={text('placeholder', 'Enter text here...')}\\\\\\\\n          maxLength={number('maxLength', 10)}\\\\\\\\n          error={boolean('error', false)}\\\\\\\\n          errorMessage={text('errorMessage', 'Some Field Error')}\\\\\\\\n          required={boolean('required', false)}\\\\\\\\n          fullWidth={boolean('fullWidth', true)}\\\\\\\\n          onChange={action('Triggered: onChange')}\\\\\\\\n          // border={boolean('border', false)}\\\\\\\\n          color={text('color', 'primary.main')}\\\\\\\\n          variant='withIcon'\\\\\\\\n          iconVariant='calendar'\\\\\\\\n          iconSize={15}\\\\\\\\n          // iconStyle={{ padding: '7px 7px 7px 7px' }}\\\\\\\\n          // style={object('style', {\\\\\\\\n          //   fontSize: '14px',\\\\\\\\n          //   minHeight: '30px'\\\\\\\\n          // })}\\\\\\\\n        />\\\\\\\\n      </Position>\\\\\\\\n    </Box>\\\\\\\\n  </ThemeWrapper>\\\\\\\\n)\\\\\\\\n\\\\\\\";\\\\n// @ts-ignore\\\\nvar __ADDS_MAP__ = {};\\\\n// @ts-ignore\\\\nvar __MAIN_FILE_LOCATION__ = \\\\\\\"/NumtInput.stories.tsx\\\\\\\";\\\\n// @ts-ignore\\\\nvar __MODULE_DEPENDENCIES__ = [];\\\\n// @ts-ignore\\\\nvar __LOCAL_DEPENDENCIES__ = {};\\\\n// @ts-ignore\\\\nvar __IDS_TO_FRAMEWORKS__ = {};\\\\n        \\\\nimport { action } from '@storybook/addon-actions'\\\\nimport { boolean, number, object, text } from '@storybook/addon-knobs'\\\\nimport React from 'react'\\\\nimport NumInput from '.'\\\\nimport { path } from '..'\\\\nimport ThemeWrapper from '../../../utilities/components/ThemeWrapper'\\\\nimport Box from '../../atoms/Box'\\\\nimport Position from '../Position'\\\\n\\\\nexport default {parameters: {\\\\\\\"storySource\\\\\\\":{\\\\\\\"source\\\\\\\":\\\\\\\"import { action } from '@storybook/addon-actions'\\\\\\\\nimport { boolean, number, object, text } from '@storybook/addon-knobs'\\\\\\\\nimport React from 'react'\\\\\\\\nimport NumInput from '.'\\\\\\\\nimport { path } from '..'\\\\\\\\nimport ThemeWrapper from '../../../utilities/components/ThemeWrapper'\\\\\\\\nimport Box from '../../atoms/Box'\\\\\\\\nimport Position from '../Position'\\\\\\\\n\\\\\\\\nexport default {\\\\\\\\n  title: `${path}/NumInput`,\\\\\\\\n  component: NumInput\\\\\\\\n}\\\\\\\\n\\\\\\\\nexport const DefaultField = () => (\\\\\\\\n  <ThemeWrapper>\\\\\\\\n    <Box p='1em'>\\\\\\\\n      <NumInput\\\\\\\\n        id='someId'\\\\\\\\n        name='someName'\\\\\\\\n        className='someClassName'\\\\\\\\n        label={text('label', 'Username')}\\\\\\\\n        labelColor={text('labelColor', 'text.inputLabel.default')}\\\\\\\\n        placeholder={text('placeholder', 'Enter text here...')}\\\\\\\\n        maxLength={number('maxLength', 10)}\\\\\\\\n        error={boolean('error', false)}\\\\\\\\n        errorMessage={text('errorMessage', '')}\\\\\\\\n        required={boolean('required', false)}\\\\\\\\n        fullWidth={boolean('fullWidth', false)}\\\\\\\\n        onChange={action('Triggered: onChange')}\\\\\\\\n        tooltipMesaage={text('tooltipMesaage', 'i am default label tooltip')}\\\\\\\\n      />\\\\\\\\n    </Box>\\\\\\\\n  </ThemeWrapper>\\\\\\\\n)\\\\\\\\n\\\\\\\\nexport const RequiredField = () => (\\\\\\\\n  <ThemeWrapper>\\\\\\\\n    <Box p='1em'>\\\\\\\\n      <NumInput\\\\\\\\n        id='someId'\\\\\\\\n        name='someName'\\\\\\\\n        className='someClassName'\\\\\\\\n        label={text('label', 'Username')}\\\\\\\\n        labelColor={text('labelColor', 'text.inputLabel.default')}\\\\\\\\n        placeholder={text('placeholder', 'Enter text here...')}\\\\\\\\n        maxLength={number('maxLength', 10)}\\\\\\\\n        error={boolean('error', false)}\\\\\\\\n        errorMessage={text('errorMessage', '')}\\\\\\\\n        required={boolean('required', true)}\\\\\\\\n        fullWidth={boolean('fullWidth', false)}\\\\\\\\n        onChange={action('Triggered: onChange')}\\\\\\\\n      />\\\\\\\\n    </Box>\\\\\\\\n  </ThemeWrapper>\\\\\\\\n)\\\\\\\\nexport const ErrorField = () => (\\\\\\\\n  <ThemeWrapper>\\\\\\\\n    <Box p='1em'>\\\\\\\\n      <NumInput\\\\\\\\n        id='someId'\\\\\\\\n        name='someName'\\\\\\\\n        className='someClassName'\\\\\\\\n        label={text('label', 'Username')}\\\\\\\\n        labelColor={text('labelColor', 'text.inputLabel.default')}\\\\\\\\n        placeholder={text('placeholder', 'Enter text here...')}\\\\\\\\n        maxLength={number('maxLength', 10)}\\\\\\\\n        error={boolean('error', true)}\\\\\\\\n        errorMessage={text('errorMessage', 'Some Field Error')}\\\\\\\\n        required={boolean('required', false)}\\\\\\\\n        fullWidth={boolean('fullWidth', false)}\\\\\\\\n        onChange={action('Triggered: onChange')}\\\\\\\\n      />\\\\\\\\n    </Box>\\\\\\\\n  </ThemeWrapper>\\\\\\\\n)\\\\\\\\n\\\\\\\\nexport const WithOutBorder = () => (\\\\\\\\n  <ThemeWrapper>\\\\\\\\n    <Box bgColor='grey.100' p='2em'>\\\\\\\\n      <NumInput\\\\\\\\n        id='someId'\\\\\\\\n        name='someName'\\\\\\\\n        className='someClassName'\\\\\\\\n        maxLength={number('maxLength', 10)}\\\\\\\\n        error={boolean('error', false)}\\\\\\\\n        onChange={action('Triggered: onChange')}\\\\\\\\n        variant='inline-edit'\\\\\\\\n      />\\\\\\\\n    </Box>\\\\\\\\n  </ThemeWrapper>\\\\\\\\n)\\\\\\\\n\\\\\\\\nexport const withIcon = () => (\\\\\\\\n  <ThemeWrapper>\\\\\\\\n    <Box p='2em'>\\\\\\\\n      <Position\\\\\\\\n        type='relative'\\\\\\\\n        display='block'\\\\\\\\n        style={object('WrapperStyle', {\\\\\\\\n          // boxShadow: '2px 3px 10px 0px lightgrey',\\\\\\\\n          width: '50%'\\\\\\\\n        })}\\\\\\\\n      >\\\\\\\\n        <NumInput\\\\\\\\n          id='someId'\\\\\\\\n          name='someName'\\\\\\\\n          className='someClassName'\\\\\\\\n          placeholder={text('placeholder', 'Enter text here...')}\\\\\\\\n          maxLength={number('maxLength', 10)}\\\\\\\\n          error={boolean('error', false)}\\\\\\\\n          errorMessage={text('errorMessage', 'Some Field Error')}\\\\\\\\n          required={boolean('required', false)}\\\\\\\\n          fullWidth={boolean('fullWidth', true)}\\\\\\\\n          onChange={action('Triggered: onChange')}\\\\\\\\n          // border={boolean('border', false)}\\\\\\\\n          color={text('color', 'primary.main')}\\\\\\\\n          variant='withIcon'\\\\\\\\n          iconVariant='calendar'\\\\\\\\n          iconSize={15}\\\\\\\\n          // iconStyle={{ padding: '7px 7px 7px 7px' }}\\\\\\\\n          // style={object('style', {\\\\\\\\n          //   fontSize: '14px',\\\\\\\\n          //   minHeight: '30px'\\\\\\\\n          // })}\\\\\\\\n        />\\\\\\\\n      </Position>\\\\\\\\n    </Box>\\\\\\\\n  </ThemeWrapper>\\\\\\\\n)\\\\\\\\n\\\\\\\",\\\\\\\"locationsMap\\\\\\\":{}},},\\\\n  title: `${path}/NumInput`,\\\\n  component: NumInput\\\\n}\\\\n\\\\nexport const DefaultField = addSourceDecorator(() => (\\\\n  <ThemeWrapper>\\\\n    <Box p='1em'>\\\\n      <NumInput\\\\n        id='someId'\\\\n        name='someName'\\\\n        className='someClassName'\\\\n        label={text('label', 'Username')}\\\\n        labelColor={text('labelColor', 'text.inputLabel.default')}\\\\n        placeholder={text('placeholder', 'Enter text here...')}\\\\n        maxLength={number('maxLength', 10)}\\\\n        error={boolean('error', false)}\\\\n        errorMessage={text('errorMessage', '')}\\\\n        required={boolean('required', false)}\\\\n        fullWidth={boolean('fullWidth', false)}\\\\n        onChange={action('Triggered: onChange')}\\\\n        tooltipMesaage={text('tooltipMesaage', 'i am default label tooltip')}\\\\n      />\\\\n    </Box>\\\\n  </ThemeWrapper>\\\\n), {__STORY__, __ADDS_MAP__,__MAIN_FILE_LOCATION__,__MODULE_DEPENDENCIES__,__LOCAL_DEPENDENCIES__,__SOURCE_PREFIX__,__IDS_TO_FRAMEWORKS__});\\\\n\\\\nexport const RequiredField = addSourceDecorator(() => (\\\\n  <ThemeWrapper>\\\\n    <Box p='1em'>\\\\n      <NumInput\\\\n        id='someId'\\\\n        name='someName'\\\\n        className='someClassName'\\\\n        label={text('label', 'Username')}\\\\n        labelColor={text('labelColor', 'text.inputLabel.default')}\\\\n        placeholder={text('placeholder', 'Enter text here...')}\\\\n        maxLength={number('maxLength', 10)}\\\\n        error={boolean('error', false)}\\\\n        errorMessage={text('errorMessage', '')}\\\\n        required={boolean('required', true)}\\\\n        fullWidth={boolean('fullWidth', false)}\\\\n        onChange={action('Triggered: onChange')}\\\\n      />\\\\n    </Box>\\\\n  </ThemeWrapper>\\\\n), {__STORY__, __ADDS_MAP__,__MAIN_FILE_LOCATION__,__MODULE_DEPENDENCIES__,__LOCAL_DEPENDENCIES__,__SOURCE_PREFIX__,__IDS_TO_FRAMEWORKS__});\\\\nexport const ErrorField = addSourceDecorator(() => (\\\\n  <ThemeWrapper>\\\\n    <Box p='1em'>\\\\n      <NumInput\\\\n        id='someId'\\\\n        name='someName'\\\\n        className='someClassName'\\\\n        label={text('label', 'Username')}\\\\n        labelColor={text('labelColor', 'text.inputLabel.default')}\\\\n        placeholder={text('placeholder', 'Enter text here...')}\\\\n        maxLength={number('maxLength', 10)}\\\\n        error={boolean('error', true)}\\\\n        errorMessage={text('errorMessage', 'Some Field Error')}\\\\n        required={boolean('required', false)}\\\\n        fullWidth={boolean('fullWidth', false)}\\\\n        onChange={action('Triggered: onChange')}\\\\n      />\\\\n    </Box>\\\\n  </ThemeWrapper>\\\\n), {__STORY__, __ADDS_MAP__,__MAIN_FILE_LOCATION__,__MODULE_DEPENDENCIES__,__LOCAL_DEPENDENCIES__,__SOURCE_PREFIX__,__IDS_TO_FRAMEWORKS__});\\\\n\\\\nexport const WithOutBorder = addSourceDecorator(() => (\\\\n  <ThemeWrapper>\\\\n    <Box bgColor='grey.100' p='2em'>\\\\n      <NumInput\\\\n        id='someId'\\\\n        name='someName'\\\\n        className='someClassName'\\\\n        maxLength={number('maxLength', 10)}\\\\n        error={boolean('error', false)}\\\\n        onChange={action('Triggered: onChange')}\\\\n        variant='inline-edit'\\\\n      />\\\\n    </Box>\\\\n  </ThemeWrapper>\\\\n), {__STORY__, __ADDS_MAP__,__MAIN_FILE_LOCATION__,__MODULE_DEPENDENCIES__,__LOCAL_DEPENDENCIES__,__SOURCE_PREFIX__,__IDS_TO_FRAMEWORKS__});\\\\n\\\\nexport const withIcon = addSourceDecorator(() => (\\\\n  <ThemeWrapper>\\\\n    <Box p='2em'>\\\\n      <Position\\\\n        type='relative'\\\\n        display='block'\\\\n        style={object('WrapperStyle', {\\\\n          // boxShadow: '2px 3px 10px 0px lightgrey',\\\\n          width: '50%'\\\\n        })}\\\\n      >\\\\n        <NumInput\\\\n          id='someId'\\\\n          name='someName'\\\\n          className='someClassName'\\\\n          placeholder={text('placeholder', 'Enter text here...')}\\\\n          maxLength={number('maxLength', 10)}\\\\n          error={boolean('error', false)}\\\\n          errorMessage={text('errorMessage', 'Some Field Error')}\\\\n          required={boolean('required', false)}\\\\n          fullWidth={boolean('fullWidth', true)}\\\\n          onChange={action('Triggered: onChange')}\\\\n          // border={boolean('border', false)}\\\\n          color={text('color', 'primary.main')}\\\\n          variant='withIcon'\\\\n          iconVariant='calendar'\\\\n          iconSize={15}\\\\n          // iconStyle={{ padding: '7px 7px 7px 7px' }}\\\\n          // style={object('style', {\\\\n          //   fontSize: '14px',\\\\n          //   minHeight: '30px'\\\\n          // })}\\\\n        />\\\\n      </Position>\\\\n    </Box>\\\\n  </ThemeWrapper>\\\\n), {__STORY__, __ADDS_MAP__,__MAIN_FILE_LOCATION__,__MODULE_DEPENDENCIES__,__LOCAL_DEPENDENCIES__,__SOURCE_PREFIX__,__IDS_TO_FRAMEWORKS__});\\\",\\\"locationsMap\\\":{}},\\\"storySource\\\":{\\\"source\\\":\\\"import { action } from '@storybook/addon-actions'\\\\nimport { boolean, number, object, text } from '@storybook/addon-knobs'\\\\nimport React from 'react'\\\\nimport NumInput from '.'\\\\nimport { path } from '..'\\\\nimport ThemeWrapper from '../../../utilities/components/ThemeWrapper'\\\\nimport Box from '../../atoms/Box'\\\\nimport Position from '../Position'\\\\n\\\\nexport default {\\\\n  title: `${path}/NumInput`,\\\\n  component: NumInput\\\\n}\\\\n\\\\nexport const DefaultField = () => (\\\\n  <ThemeWrapper>\\\\n    <Box p='1em'>\\\\n      <NumInput\\\\n        id='someId'\\\\n        name='someName'\\\\n        className='someClassName'\\\\n        label={text('label', 'Username')}\\\\n        labelColor={text('labelColor', 'text.inputLabel.default')}\\\\n        placeholder={text('placeholder', 'Enter text here...')}\\\\n        maxLength={number('maxLength', 10)}\\\\n        error={boolean('error', false)}\\\\n        errorMessage={text('errorMessage', '')}\\\\n        required={boolean('required', false)}\\\\n        fullWidth={boolean('fullWidth', false)}\\\\n        onChange={action('Triggered: onChange')}\\\\n        tooltipMesaage={text('tooltipMesaage', 'i am default label tooltip')}\\\\n      />\\\\n    </Box>\\\\n  </ThemeWrapper>\\\\n)\\\\n\\\\nexport const RequiredField = () => (\\\\n  <ThemeWrapper>\\\\n    <Box p='1em'>\\\\n      <NumInput\\\\n        id='someId'\\\\n        name='someName'\\\\n        className='someClassName'\\\\n        label={text('label', 'Username')}\\\\n        labelColor={text('labelColor', 'text.inputLabel.default')}\\\\n        placeholder={text('placeholder', 'Enter text here...')}\\\\n        maxLength={number('maxLength', 10)}\\\\n        error={boolean('error', false)}\\\\n        errorMessage={text('errorMessage', '')}\\\\n        required={boolean('required', true)}\\\\n        fullWidth={boolean('fullWidth', false)}\\\\n        onChange={action('Triggered: onChange')}\\\\n      />\\\\n    </Box>\\\\n  </ThemeWrapper>\\\\n)\\\\nexport const ErrorField = () => (\\\\n  <ThemeWrapper>\\\\n    <Box p='1em'>\\\\n      <NumInput\\\\n        id='someId'\\\\n        name='someName'\\\\n        className='someClassName'\\\\n        label={text('label', 'Username')}\\\\n        labelColor={text('labelColor', 'text.inputLabel.default')}\\\\n        placeholder={text('placeholder', 'Enter text here...')}\\\\n        maxLength={number('maxLength', 10)}\\\\n        error={boolean('error', true)}\\\\n        errorMessage={text('errorMessage', 'Some Field Error')}\\\\n        required={boolean('required', false)}\\\\n        fullWidth={boolean('fullWidth', false)}\\\\n        onChange={action('Triggered: onChange')}\\\\n      />\\\\n    </Box>\\\\n  </ThemeWrapper>\\\\n)\\\\n\\\\nexport const WithOutBorder = () => (\\\\n  <ThemeWrapper>\\\\n    <Box bgColor='grey.100' p='2em'>\\\\n      <NumInput\\\\n        id='someId'\\\\n        name='someName'\\\\n        className='someClassName'\\\\n        maxLength={number('maxLength', 10)}\\\\n        error={boolean('error', false)}\\\\n        onChange={action('Triggered: onChange')}\\\\n        variant='inline-edit'\\\\n      />\\\\n    </Box>\\\\n  </ThemeWrapper>\\\\n)\\\\n\\\\nexport const withIcon = () => (\\\\n  <ThemeWrapper>\\\\n    <Box p='2em'>\\\\n      <Position\\\\n        type='relative'\\\\n        display='block'\\\\n        style={object('WrapperStyle', {\\\\n          // boxShadow: '2px 3px 10px 0px lightgrey',\\\\n          width: '50%'\\\\n        })}\\\\n      >\\\\n        <NumInput\\\\n          id='someId'\\\\n          name='someName'\\\\n          className='someClassName'\\\\n          placeholder={text('placeholder', 'Enter text here...')}\\\\n          maxLength={number('maxLength', 10)}\\\\n          error={boolean('error', false)}\\\\n          errorMessage={text('errorMessage', 'Some Field Error')}\\\\n          required={boolean('required', false)}\\\\n          fullWidth={boolean('fullWidth', true)}\\\\n          onChange={action('Triggered: onChange')}\\\\n          // border={boolean('border', false)}\\\\n          color={text('color', 'primary.main')}\\\\n          variant='withIcon'\\\\n          iconVariant='calendar'\\\\n          iconSize={15}\\\\n          // iconStyle={{ padding: '7px 7px 7px 7px' }}\\\\n          // style={object('style', {\\\\n          //   fontSize: '14px',\\\\n          //   minHeight: '30px'\\\\n          // })}\\\\n        />\\\\n      </Position>\\\\n    </Box>\\\\n  </ThemeWrapper>\\\\n)\\\\n\\\",\\\"locationsMap\\\":{}},},\\n  title: `${path}/NumInput`,\\n  component: NumInput\\n}\\n\\nexport const DefaultField = addSourceDecorator(addSourceDecorator(() => (\\n  <ThemeWrapper>\\n    <Box p='1em'>\\n      <NumInput\\n        id='someId'\\n        name='someName'\\n        className='someClassName'\\n        label={text('label', 'Username')}\\n        labelColor={text('labelColor', 'text.inputLabel.default')}\\n        placeholder={text('placeholder', 'Enter text here...')}\\n        maxLength={number('maxLength', 10)}\\n        error={boolean('error', false)}\\n        errorMessage={text('errorMessage', '')}\\n        required={boolean('required', false)}\\n        fullWidth={boolean('fullWidth', false)}\\n        onChange={action('Triggered: onChange')}\\n        tooltipMesaage={text('tooltipMesaage', 'i am default label tooltip')}\\n      />\\n    </Box>\\n  </ThemeWrapper>\\n), {__STORY__, __ADDS_MAP__,__MAIN_FILE_LOCATION__,__MODULE_DEPENDENCIES__,__LOCAL_DEPENDENCIES__,__SOURCE_PREFIX__,__IDS_TO_FRAMEWORKS__}), {__STORY__, __ADDS_MAP__,__MAIN_FILE_LOCATION__,__MODULE_DEPENDENCIES__,__LOCAL_DEPENDENCIES__,__SOURCE_PREFIX__,__IDS_TO_FRAMEWORKS__});;\\n\\nexport const RequiredField = addSourceDecorator(addSourceDecorator(() => (\\n  <ThemeWrapper>\\n    <Box p='1em'>\\n      <NumInput\\n        id='someId'\\n        name='someName'\\n        className='someClassName'\\n        label={text('label', 'Username')}\\n        labelColor={text('labelColor', 'text.inputLabel.default')}\\n        placeholder={text('placeholder', 'Enter text here...')}\\n        maxLength={number('maxLength', 10)}\\n        error={boolean('error', false)}\\n        errorMessage={text('errorMessage', '')}\\n        required={boolean('required', true)}\\n        fullWidth={boolean('fullWidth', false)}\\n        onChange={action('Triggered: onChange')}\\n      />\\n    </Box>\\n  </ThemeWrapper>\\n), {__STORY__, __ADDS_MAP__,__MAIN_FILE_LOCATION__,__MODULE_DEPENDENCIES__,__LOCAL_DEPENDENCIES__,__SOURCE_PREFIX__,__IDS_TO_FRAMEWORKS__}), {__STORY__, __ADDS_MAP__,__MAIN_FILE_LOCATION__,__MODULE_DEPENDENCIES__,__LOCAL_DEPENDENCIES__,__SOURCE_PREFIX__,__IDS_TO_FRAMEWORKS__});;\\nexport const ErrorField = addSourceDecorator(addSourceDecorator(() => (\\n  <ThemeWrapper>\\n    <Box p='1em'>\\n      <NumInput\\n        id='someId'\\n        name='someName'\\n        className='someClassName'\\n        label={text('label', 'Username')}\\n        labelColor={text('labelColor', 'text.inputLabel.default')}\\n        placeholder={text('placeholder', 'Enter text here...')}\\n        maxLength={number('maxLength', 10)}\\n        error={boolean('error', true)}\\n        errorMessage={text('errorMessage', 'Some Field Error')}\\n        required={boolean('required', false)}\\n        fullWidth={boolean('fullWidth', false)}\\n        onChange={action('Triggered: onChange')}\\n      />\\n    </Box>\\n  </ThemeWrapper>\\n), {__STORY__, __ADDS_MAP__,__MAIN_FILE_LOCATION__,__MODULE_DEPENDENCIES__,__LOCAL_DEPENDENCIES__,__SOURCE_PREFIX__,__IDS_TO_FRAMEWORKS__}), {__STORY__, __ADDS_MAP__,__MAIN_FILE_LOCATION__,__MODULE_DEPENDENCIES__,__LOCAL_DEPENDENCIES__,__SOURCE_PREFIX__,__IDS_TO_FRAMEWORKS__});;\\n\\nexport const WithOutBorder = addSourceDecorator(addSourceDecorator(() => (\\n  <ThemeWrapper>\\n    <Box bgColor='grey.100' p='2em'>\\n      <NumInput\\n        id='someId'\\n        name='someName'\\n        className='someClassName'\\n        maxLength={number('maxLength', 10)}\\n        error={boolean('error', false)}\\n        onChange={action('Triggered: onChange')}\\n        variant='inline-edit'\\n      />\\n    </Box>\\n  </ThemeWrapper>\\n), {__STORY__, __ADDS_MAP__,__MAIN_FILE_LOCATION__,__MODULE_DEPENDENCIES__,__LOCAL_DEPENDENCIES__,__SOURCE_PREFIX__,__IDS_TO_FRAMEWORKS__}), {__STORY__, __ADDS_MAP__,__MAIN_FILE_LOCATION__,__MODULE_DEPENDENCIES__,__LOCAL_DEPENDENCIES__,__SOURCE_PREFIX__,__IDS_TO_FRAMEWORKS__});;\\n\\nexport const withIcon = addSourceDecorator(addSourceDecorator(() => (\\n  <ThemeWrapper>\\n    <Box p='2em'>\\n      <Position\\n        type='relative'\\n        display='block'\\n        style={object('WrapperStyle', {\\n          // boxShadow: '2px 3px 10px 0px lightgrey',\\n          width: '50%'\\n        })}\\n      >\\n        <NumInput\\n          id='someId'\\n          name='someName'\\n          className='someClassName'\\n          placeholder={text('placeholder', 'Enter text here...')}\\n          maxLength={number('maxLength', 10)}\\n          error={boolean('error', false)}\\n          errorMessage={text('errorMessage', 'Some Field Error')}\\n          required={boolean('required', false)}\\n          fullWidth={boolean('fullWidth', true)}\\n          onChange={action('Triggered: onChange')}\\n          // border={boolean('border', false)}\\n          color={text('color', 'primary.main')}\\n          variant='withIcon'\\n          iconVariant='calendar'\\n          iconSize={15}\\n          // iconStyle={{ padding: '7px 7px 7px 7px' }}\\n          // style={object('style', {\\n          //   fontSize: '14px',\\n          //   minHeight: '30px'\\n          // })}\\n        />\\n      </Position>\\n    </Box>\\n  </ThemeWrapper>\\n), {__STORY__, __ADDS_MAP__,__MAIN_FILE_LOCATION__,__MODULE_DEPENDENCIES__,__LOCAL_DEPENDENCIES__,__SOURCE_PREFIX__,__IDS_TO_FRAMEWORKS__}), {__STORY__, __ADDS_MAP__,__MAIN_FILE_LOCATION__,__MODULE_DEPENDENCIES__,__LOCAL_DEPENDENCIES__,__SOURCE_PREFIX__,__IDS_TO_FRAMEWORKS__});\"; // @ts-ignore\n\nvar __ADDS_MAP__ = {}; // @ts-ignore\n\nvar __MAIN_FILE_LOCATION__ = \"/NumtInput.stories.tsx\"; // @ts-ignore\n\nvar __MODULE_DEPENDENCIES__ = []; // @ts-ignore\n\nvar __LOCAL_DEPENDENCIES__ = {}; // @ts-ignore\n\nvar __IDS_TO_FRAMEWORKS__ = {};\n/* eslint-disable */\n// @ts-nocheck\n// @ts-ignore\n\nvar withSourceLoader = require('@storybook/source-loader/preview').withSource; // @ts-ignore\n\n\nvar addSourceDecorator = require(\"@storybook/source-loader/preview\").addSource; // @ts-ignore\n\n\nvar __SOURCE_PREFIX__ = \"/Users/farhanansari/Code/ui-library/src/components/molecules/NumInput\"; // @ts-ignore\n\nvar __STORY__ = \"\\n\\n// @ts-nocheck\\n// @ts-ignore\\nvar withSourceLoader = require('@storybook/source-loader/preview').withSource;\\n// @ts-ignore\\nvar addSourceDecorator = require(\\\"@storybook/source-loader/preview\\\").addSource;\\n// @ts-ignore\\nvar __SOURCE_PREFIX__ = \\\"/Users/farhanansari/Code/ui-library/src/components/molecules/NumInput\\\";\\n// @ts-ignore\\nvar __STORY__ = \\\"import { action } from '@storybook/addon-actions'\\\\nimport { boolean, number, object, text } from '@storybook/addon-knobs'\\\\nimport React from 'react'\\\\nimport NumInput from '.'\\\\nimport { path } from '..'\\\\nimport ThemeWrapper from '../../../utilities/components/ThemeWrapper'\\\\nimport Box from '../../atoms/Box'\\\\nimport Position from '../Position'\\\\n\\\\nexport default {\\\\n  title: `${path}/NumInput`,\\\\n  component: NumInput\\\\n}\\\\n\\\\nexport const DefaultField = () => (\\\\n  <ThemeWrapper>\\\\n    <Box p='1em'>\\\\n      <NumInput\\\\n        id='someId'\\\\n        name='someName'\\\\n        className='someClassName'\\\\n        label={text('label', 'Username')}\\\\n        labelColor={text('labelColor', 'text.inputLabel.default')}\\\\n        placeholder={text('placeholder', 'Enter text here...')}\\\\n        maxLength={number('maxLength', 10)}\\\\n        error={boolean('error', false)}\\\\n        errorMessage={text('errorMessage', '')}\\\\n        required={boolean('required', false)}\\\\n        fullWidth={boolean('fullWidth', false)}\\\\n        onChange={action('Triggered: onChange')}\\\\n        tooltipMesaage={text('tooltipMesaage', 'i am default label tooltip')}\\\\n      />\\\\n    </Box>\\\\n  </ThemeWrapper>\\\\n)\\\\n\\\\nexport const RequiredField = () => (\\\\n  <ThemeWrapper>\\\\n    <Box p='1em'>\\\\n      <NumInput\\\\n        id='someId'\\\\n        name='someName'\\\\n        className='someClassName'\\\\n        label={text('label', 'Username')}\\\\n        labelColor={text('labelColor', 'text.inputLabel.default')}\\\\n        placeholder={text('placeholder', 'Enter text here...')}\\\\n        maxLength={number('maxLength', 10)}\\\\n        error={boolean('error', false)}\\\\n        errorMessage={text('errorMessage', '')}\\\\n        required={boolean('required', true)}\\\\n        fullWidth={boolean('fullWidth', false)}\\\\n        onChange={action('Triggered: onChange')}\\\\n      />\\\\n    </Box>\\\\n  </ThemeWrapper>\\\\n)\\\\nexport const ErrorField = () => (\\\\n  <ThemeWrapper>\\\\n    <Box p='1em'>\\\\n      <NumInput\\\\n        id='someId'\\\\n        name='someName'\\\\n        className='someClassName'\\\\n        label={text('label', 'Username')}\\\\n        labelColor={text('labelColor', 'text.inputLabel.default')}\\\\n        placeholder={text('placeholder', 'Enter text here...')}\\\\n        maxLength={number('maxLength', 10)}\\\\n        error={boolean('error', true)}\\\\n        errorMessage={text('errorMessage', 'Some Field Error')}\\\\n        required={boolean('required', false)}\\\\n        fullWidth={boolean('fullWidth', false)}\\\\n        onChange={action('Triggered: onChange')}\\\\n      />\\\\n    </Box>\\\\n  </ThemeWrapper>\\\\n)\\\\n\\\\nexport const WithOutBorder = () => (\\\\n  <ThemeWrapper>\\\\n    <Box bgColor='grey.100' p='2em'>\\\\n      <NumInput\\\\n        id='someId'\\\\n        name='someName'\\\\n        className='someClassName'\\\\n        maxLength={number('maxLength', 10)}\\\\n        error={boolean('error', false)}\\\\n        onChange={action('Triggered: onChange')}\\\\n        variant='inline-edit'\\\\n      />\\\\n    </Box>\\\\n  </ThemeWrapper>\\\\n)\\\\n\\\\nexport const withIcon = () => (\\\\n  <ThemeWrapper>\\\\n    <Box p='2em'>\\\\n      <Position\\\\n        type='relative'\\\\n        display='block'\\\\n        style={object('WrapperStyle', {\\\\n          // boxShadow: '2px 3px 10px 0px lightgrey',\\\\n          width: '50%'\\\\n        })}\\\\n      >\\\\n        <NumInput\\\\n          id='someId'\\\\n          name='someName'\\\\n          className='someClassName'\\\\n          placeholder={text('placeholder', 'Enter text here...')}\\\\n          maxLength={number('maxLength', 10)}\\\\n          error={boolean('error', false)}\\\\n          errorMessage={text('errorMessage', 'Some Field Error')}\\\\n          required={boolean('required', false)}\\\\n          fullWidth={boolean('fullWidth', true)}\\\\n          onChange={action('Triggered: onChange')}\\\\n          // border={boolean('border', false)}\\\\n          color={text('color', 'primary.main')}\\\\n          variant='withIcon'\\\\n          iconVariant='calendar'\\\\n          iconSize={15}\\\\n          // iconStyle={{ padding: '7px 7px 7px 7px' }}\\\\n          // style={object('style', {\\\\n          //   fontSize: '14px',\\\\n          //   minHeight: '30px'\\\\n          // })}\\\\n        />\\\\n      </Position>\\\\n    </Box>\\\\n  </ThemeWrapper>\\\\n)\\\\n\\\";\\n// @ts-ignore\\nvar __ADDS_MAP__ = {};\\n// @ts-ignore\\nvar __MAIN_FILE_LOCATION__ = \\\"/NumtInput.stories.tsx\\\";\\n// @ts-ignore\\nvar __MODULE_DEPENDENCIES__ = [];\\n// @ts-ignore\\nvar __LOCAL_DEPENDENCIES__ = {};\\n// @ts-ignore\\nvar __IDS_TO_FRAMEWORKS__ = {};\\n        \\nimport { action } from '@storybook/addon-actions'\\nimport { boolean, number, object, text } from '@storybook/addon-knobs'\\nimport React from 'react'\\nimport NumInput from '.'\\nimport { path } from '..'\\nimport ThemeWrapper from '../../../utilities/components/ThemeWrapper'\\nimport Box from '../../atoms/Box'\\nimport Position from '../Position'\\n\\nexport default {parameters: {\\\"storySource\\\":{\\\"source\\\":\\\"import { action } from '@storybook/addon-actions'\\\\nimport { boolean, number, object, text } from '@storybook/addon-knobs'\\\\nimport React from 'react'\\\\nimport NumInput from '.'\\\\nimport { path } from '..'\\\\nimport ThemeWrapper from '../../../utilities/components/ThemeWrapper'\\\\nimport Box from '../../atoms/Box'\\\\nimport Position from '../Position'\\\\n\\\\nexport default {\\\\n  title: `${path}/NumInput`,\\\\n  component: NumInput\\\\n}\\\\n\\\\nexport const DefaultField = () => (\\\\n  <ThemeWrapper>\\\\n    <Box p='1em'>\\\\n      <NumInput\\\\n        id='someId'\\\\n        name='someName'\\\\n        className='someClassName'\\\\n        label={text('label', 'Username')}\\\\n        labelColor={text('labelColor', 'text.inputLabel.default')}\\\\n        placeholder={text('placeholder', 'Enter text here...')}\\\\n        maxLength={number('maxLength', 10)}\\\\n        error={boolean('error', false)}\\\\n        errorMessage={text('errorMessage', '')}\\\\n        required={boolean('required', false)}\\\\n        fullWidth={boolean('fullWidth', false)}\\\\n        onChange={action('Triggered: onChange')}\\\\n        tooltipMesaage={text('tooltipMesaage', 'i am default label tooltip')}\\\\n      />\\\\n    </Box>\\\\n  </ThemeWrapper>\\\\n)\\\\n\\\\nexport const RequiredField = () => (\\\\n  <ThemeWrapper>\\\\n    <Box p='1em'>\\\\n      <NumInput\\\\n        id='someId'\\\\n        name='someName'\\\\n        className='someClassName'\\\\n        label={text('label', 'Username')}\\\\n        labelColor={text('labelColor', 'text.inputLabel.default')}\\\\n        placeholder={text('placeholder', 'Enter text here...')}\\\\n        maxLength={number('maxLength', 10)}\\\\n        error={boolean('error', false)}\\\\n        errorMessage={text('errorMessage', '')}\\\\n        required={boolean('required', true)}\\\\n        fullWidth={boolean('fullWidth', false)}\\\\n        onChange={action('Triggered: onChange')}\\\\n      />\\\\n    </Box>\\\\n  </ThemeWrapper>\\\\n)\\\\nexport const ErrorField = () => (\\\\n  <ThemeWrapper>\\\\n    <Box p='1em'>\\\\n      <NumInput\\\\n        id='someId'\\\\n        name='someName'\\\\n        className='someClassName'\\\\n        label={text('label', 'Username')}\\\\n        labelColor={text('labelColor', 'text.inputLabel.default')}\\\\n        placeholder={text('placeholder', 'Enter text here...')}\\\\n        maxLength={number('maxLength', 10)}\\\\n        error={boolean('error', true)}\\\\n        errorMessage={text('errorMessage', 'Some Field Error')}\\\\n        required={boolean('required', false)}\\\\n        fullWidth={boolean('fullWidth', false)}\\\\n        onChange={action('Triggered: onChange')}\\\\n      />\\\\n    </Box>\\\\n  </ThemeWrapper>\\\\n)\\\\n\\\\nexport const WithOutBorder = () => (\\\\n  <ThemeWrapper>\\\\n    <Box bgColor='grey.100' p='2em'>\\\\n      <NumInput\\\\n        id='someId'\\\\n        name='someName'\\\\n        className='someClassName'\\\\n        maxLength={number('maxLength', 10)}\\\\n        error={boolean('error', false)}\\\\n        onChange={action('Triggered: onChange')}\\\\n        variant='inline-edit'\\\\n      />\\\\n    </Box>\\\\n  </ThemeWrapper>\\\\n)\\\\n\\\\nexport const withIcon = () => (\\\\n  <ThemeWrapper>\\\\n    <Box p='2em'>\\\\n      <Position\\\\n        type='relative'\\\\n        display='block'\\\\n        style={object('WrapperStyle', {\\\\n          // boxShadow: '2px 3px 10px 0px lightgrey',\\\\n          width: '50%'\\\\n        })}\\\\n      >\\\\n        <NumInput\\\\n          id='someId'\\\\n          name='someName'\\\\n          className='someClassName'\\\\n          placeholder={text('placeholder', 'Enter text here...')}\\\\n          maxLength={number('maxLength', 10)}\\\\n          error={boolean('error', false)}\\\\n          errorMessage={text('errorMessage', 'Some Field Error')}\\\\n          required={boolean('required', false)}\\\\n          fullWidth={boolean('fullWidth', true)}\\\\n          onChange={action('Triggered: onChange')}\\\\n          // border={boolean('border', false)}\\\\n          color={text('color', 'primary.main')}\\\\n          variant='withIcon'\\\\n          iconVariant='calendar'\\\\n          iconSize={15}\\\\n          // iconStyle={{ padding: '7px 7px 7px 7px' }}\\\\n          // style={object('style', {\\\\n          //   fontSize: '14px',\\\\n          //   minHeight: '30px'\\\\n          // })}\\\\n        />\\\\n      </Position>\\\\n    </Box>\\\\n  </ThemeWrapper>\\\\n)\\\\n\\\",\\\"locationsMap\\\":{}},},\\n  title: `${path}/NumInput`,\\n  component: NumInput\\n}\\n\\nexport const DefaultField = addSourceDecorator(() => (\\n  <ThemeWrapper>\\n    <Box p='1em'>\\n      <NumInput\\n        id='someId'\\n        name='someName'\\n        className='someClassName'\\n        label={text('label', 'Username')}\\n        labelColor={text('labelColor', 'text.inputLabel.default')}\\n        placeholder={text('placeholder', 'Enter text here...')}\\n        maxLength={number('maxLength', 10)}\\n        error={boolean('error', false)}\\n        errorMessage={text('errorMessage', '')}\\n        required={boolean('required', false)}\\n        fullWidth={boolean('fullWidth', false)}\\n        onChange={action('Triggered: onChange')}\\n        tooltipMesaage={text('tooltipMesaage', 'i am default label tooltip')}\\n      />\\n    </Box>\\n  </ThemeWrapper>\\n), {__STORY__, __ADDS_MAP__,__MAIN_FILE_LOCATION__,__MODULE_DEPENDENCIES__,__LOCAL_DEPENDENCIES__,__SOURCE_PREFIX__,__IDS_TO_FRAMEWORKS__});\\n\\nexport const RequiredField = addSourceDecorator(() => (\\n  <ThemeWrapper>\\n    <Box p='1em'>\\n      <NumInput\\n        id='someId'\\n        name='someName'\\n        className='someClassName'\\n        label={text('label', 'Username')}\\n        labelColor={text('labelColor', 'text.inputLabel.default')}\\n        placeholder={text('placeholder', 'Enter text here...')}\\n        maxLength={number('maxLength', 10)}\\n        error={boolean('error', false)}\\n        errorMessage={text('errorMessage', '')}\\n        required={boolean('required', true)}\\n        fullWidth={boolean('fullWidth', false)}\\n        onChange={action('Triggered: onChange')}\\n      />\\n    </Box>\\n  </ThemeWrapper>\\n), {__STORY__, __ADDS_MAP__,__MAIN_FILE_LOCATION__,__MODULE_DEPENDENCIES__,__LOCAL_DEPENDENCIES__,__SOURCE_PREFIX__,__IDS_TO_FRAMEWORKS__});\\nexport const ErrorField = addSourceDecorator(() => (\\n  <ThemeWrapper>\\n    <Box p='1em'>\\n      <NumInput\\n        id='someId'\\n        name='someName'\\n        className='someClassName'\\n        label={text('label', 'Username')}\\n        labelColor={text('labelColor', 'text.inputLabel.default')}\\n        placeholder={text('placeholder', 'Enter text here...')}\\n        maxLength={number('maxLength', 10)}\\n        error={boolean('error', true)}\\n        errorMessage={text('errorMessage', 'Some Field Error')}\\n        required={boolean('required', false)}\\n        fullWidth={boolean('fullWidth', false)}\\n        onChange={action('Triggered: onChange')}\\n      />\\n    </Box>\\n  </ThemeWrapper>\\n), {__STORY__, __ADDS_MAP__,__MAIN_FILE_LOCATION__,__MODULE_DEPENDENCIES__,__LOCAL_DEPENDENCIES__,__SOURCE_PREFIX__,__IDS_TO_FRAMEWORKS__});\\n\\nexport const WithOutBorder = addSourceDecorator(() => (\\n  <ThemeWrapper>\\n    <Box bgColor='grey.100' p='2em'>\\n      <NumInput\\n        id='someId'\\n        name='someName'\\n        className='someClassName'\\n        maxLength={number('maxLength', 10)}\\n        error={boolean('error', false)}\\n        onChange={action('Triggered: onChange')}\\n        variant='inline-edit'\\n      />\\n    </Box>\\n  </ThemeWrapper>\\n), {__STORY__, __ADDS_MAP__,__MAIN_FILE_LOCATION__,__MODULE_DEPENDENCIES__,__LOCAL_DEPENDENCIES__,__SOURCE_PREFIX__,__IDS_TO_FRAMEWORKS__});\\n\\nexport const withIcon = addSourceDecorator(() => (\\n  <ThemeWrapper>\\n    <Box p='2em'>\\n      <Position\\n        type='relative'\\n        display='block'\\n        style={object('WrapperStyle', {\\n          // boxShadow: '2px 3px 10px 0px lightgrey',\\n          width: '50%'\\n        })}\\n      >\\n        <NumInput\\n          id='someId'\\n          name='someName'\\n          className='someClassName'\\n          placeholder={text('placeholder', 'Enter text here...')}\\n          maxLength={number('maxLength', 10)}\\n          error={boolean('error', false)}\\n          errorMessage={text('errorMessage', 'Some Field Error')}\\n          required={boolean('required', false)}\\n          fullWidth={boolean('fullWidth', true)}\\n          onChange={action('Triggered: onChange')}\\n          // border={boolean('border', false)}\\n          color={text('color', 'primary.main')}\\n          variant='withIcon'\\n          iconVariant='calendar'\\n          iconSize={15}\\n          // iconStyle={{ padding: '7px 7px 7px 7px' }}\\n          // style={object('style', {\\n          //   fontSize: '14px',\\n          //   minHeight: '30px'\\n          // })}\\n        />\\n      </Position>\\n    </Box>\\n  </ThemeWrapper>\\n), {__STORY__, __ADDS_MAP__,__MAIN_FILE_LOCATION__,__MODULE_DEPENDENCIES__,__LOCAL_DEPENDENCIES__,__SOURCE_PREFIX__,__IDS_TO_FRAMEWORKS__});\"; // @ts-ignore\n\nvar __ADDS_MAP__ = {}; // @ts-ignore\n\nvar __MAIN_FILE_LOCATION__ = \"/NumtInput.stories.tsx\"; // @ts-ignore\n\nvar __MODULE_DEPENDENCIES__ = []; // @ts-ignore\n\nvar __LOCAL_DEPENDENCIES__ = {}; // @ts-ignore\n\nvar __IDS_TO_FRAMEWORKS__ = {};\n/* eslint-disable */\n// @ts-nocheck\n// @ts-ignore\n\nvar withSourceLoader = require('@storybook/source-loader/preview').withSource; // @ts-ignore\n\n\nvar addSourceDecorator = require(\"@storybook/source-loader/preview\").addSource; // @ts-ignore\n\n\nvar __SOURCE_PREFIX__ = \"/Users/farhanansari/Code/ui-library/src/components/molecules/NumInput\"; // @ts-ignore\n\nvar __STORY__ = \"import { action } from '@storybook/addon-actions'\\nimport { boolean, number, object, text } from '@storybook/addon-knobs'\\nimport React from 'react'\\nimport NumInput from '.'\\nimport { path } from '..'\\nimport ThemeWrapper from '../../../utilities/components/ThemeWrapper'\\nimport Box from '../../atoms/Box'\\nimport Position from '../Position'\\n\\nexport default {\\n  title: `${path}/NumInput`,\\n  component: NumInput\\n}\\n\\nexport const DefaultField = () => (\\n  <ThemeWrapper>\\n    <Box p='1em'>\\n      <NumInput\\n        id='someId'\\n        name='someName'\\n        className='someClassName'\\n        label={text('label', 'Username')}\\n        labelColor={text('labelColor', 'text.inputLabel.default')}\\n        placeholder={text('placeholder', 'Enter text here...')}\\n        maxLength={number('maxLength', 10)}\\n        error={boolean('error', false)}\\n        errorMessage={text('errorMessage', '')}\\n        required={boolean('required', false)}\\n        fullWidth={boolean('fullWidth', false)}\\n        onChange={action('Triggered: onChange')}\\n        tooltipMesaage={text('tooltipMesaage', 'i am default label tooltip')}\\n      />\\n    </Box>\\n  </ThemeWrapper>\\n)\\n\\nexport const RequiredField = () => (\\n  <ThemeWrapper>\\n    <Box p='1em'>\\n      <NumInput\\n        id='someId'\\n        name='someName'\\n        className='someClassName'\\n        label={text('label', 'Username')}\\n        labelColor={text('labelColor', 'text.inputLabel.default')}\\n        placeholder={text('placeholder', 'Enter text here...')}\\n        maxLength={number('maxLength', 10)}\\n        error={boolean('error', false)}\\n        errorMessage={text('errorMessage', '')}\\n        required={boolean('required', true)}\\n        fullWidth={boolean('fullWidth', false)}\\n        onChange={action('Triggered: onChange')}\\n      />\\n    </Box>\\n  </ThemeWrapper>\\n)\\nexport const ErrorField = () => (\\n  <ThemeWrapper>\\n    <Box p='1em'>\\n      <NumInput\\n        id='someId'\\n        name='someName'\\n        className='someClassName'\\n        label={text('label', 'Username')}\\n        labelColor={text('labelColor', 'text.inputLabel.default')}\\n        placeholder={text('placeholder', 'Enter text here...')}\\n        maxLength={number('maxLength', 10)}\\n        error={boolean('error', true)}\\n        errorMessage={text('errorMessage', 'Some Field Error')}\\n        required={boolean('required', false)}\\n        fullWidth={boolean('fullWidth', false)}\\n        onChange={action('Triggered: onChange')}\\n      />\\n    </Box>\\n  </ThemeWrapper>\\n)\\n\\nexport const WithOutBorder = () => (\\n  <ThemeWrapper>\\n    <Box bgColor='grey.100' p='2em'>\\n      <NumInput\\n        id='someId'\\n        name='someName'\\n        className='someClassName'\\n        maxLength={number('maxLength', 10)}\\n        error={boolean('error', false)}\\n        onChange={action('Triggered: onChange')}\\n        variant='inline-edit'\\n      />\\n    </Box>\\n  </ThemeWrapper>\\n)\\n\\nexport const withIcon = () => (\\n  <ThemeWrapper>\\n    <Box p='2em'>\\n      <Position\\n        type='relative'\\n        display='block'\\n        style={object('WrapperStyle', {\\n          // boxShadow: '2px 3px 10px 0px lightgrey',\\n          width: '50%'\\n        })}\\n      >\\n        <NumInput\\n          id='someId'\\n          name='someName'\\n          className='someClassName'\\n          placeholder={text('placeholder', 'Enter text here...')}\\n          maxLength={number('maxLength', 10)}\\n          error={boolean('error', false)}\\n          errorMessage={text('errorMessage', 'Some Field Error')}\\n          required={boolean('required', false)}\\n          fullWidth={boolean('fullWidth', true)}\\n          onChange={action('Triggered: onChange')}\\n          // border={boolean('border', false)}\\n          color={text('color', 'primary.main')}\\n          variant='withIcon'\\n          iconVariant='calendar'\\n          iconSize={15}\\n          // iconStyle={{ padding: '7px 7px 7px 7px' }}\\n          // style={object('style', {\\n          //   fontSize: '14px',\\n          //   minHeight: '30px'\\n          // })}\\n        />\\n      </Position>\\n    </Box>\\n  </ThemeWrapper>\\n)\\n\"; // @ts-ignore\n\nvar __ADDS_MAP__ = {}; // @ts-ignore\n\nvar __MAIN_FILE_LOCATION__ = \"/NumtInput.stories.tsx\"; // @ts-ignore\n\nvar __MODULE_DEPENDENCIES__ = []; // @ts-ignore\n\nvar __LOCAL_DEPENDENCIES__ = {}; // @ts-ignore\n\nvar __IDS_TO_FRAMEWORKS__ = {};\nimport { action } from '@storybook/addon-actions';\nimport { boolean as _boolean, number, object, text } from '@storybook/addon-knobs';\nimport React from 'react';\nimport NumInput from '.';\nimport { path } from '..';\nimport ThemeWrapper from '../../../utilities/components/ThemeWrapper';\nimport Box from '../../atoms/Box';\nimport Position from '../Position';\nexport default {\n  parameters: (_parameters = {\n    \"storySource\": {\n      \"source\": \"\\n\\n// @ts-nocheck\\n// @ts-ignore\\nvar withSourceLoader = require('@storybook/source-loader/preview').withSource;\\n// @ts-ignore\\nvar addSourceDecorator = require(\\\"@storybook/source-loader/preview\\\").addSource;\\n// @ts-ignore\\nvar __SOURCE_PREFIX__ = \\\"/Users/farhanansari/Code/ui-library/src/components/molecules/NumInput\\\";\\n// @ts-ignore\\nvar __STORY__ = \\\"\\\\n\\\\n// @ts-nocheck\\\\n// @ts-ignore\\\\nvar withSourceLoader = require('@storybook/source-loader/preview').withSource;\\\\n// @ts-ignore\\\\nvar addSourceDecorator = require(\\\\\\\"@storybook/source-loader/preview\\\\\\\").addSource;\\\\n// @ts-ignore\\\\nvar __SOURCE_PREFIX__ = \\\\\\\"/Users/farhanansari/Code/ui-library/src/components/molecules/NumInput\\\\\\\";\\\\n// @ts-ignore\\\\nvar __STORY__ = \\\\\\\"import { action } from '@storybook/addon-actions'\\\\\\\\nimport { boolean, number, object, text } from '@storybook/addon-knobs'\\\\\\\\nimport React from 'react'\\\\\\\\nimport NumInput from '.'\\\\\\\\nimport { path } from '..'\\\\\\\\nimport ThemeWrapper from '../../../utilities/components/ThemeWrapper'\\\\\\\\nimport Box from '../../atoms/Box'\\\\\\\\nimport Position from '../Position'\\\\\\\\n\\\\\\\\nexport default {\\\\\\\\n  title: `${path}/NumInput`,\\\\\\\\n  component: NumInput\\\\\\\\n}\\\\\\\\n\\\\\\\\nexport const DefaultField = () => (\\\\\\\\n  <ThemeWrapper>\\\\\\\\n    <Box p='1em'>\\\\\\\\n      <NumInput\\\\\\\\n        id='someId'\\\\\\\\n        name='someName'\\\\\\\\n        className='someClassName'\\\\\\\\n        label={text('label', 'Username')}\\\\\\\\n        labelColor={text('labelColor', 'text.inputLabel.default')}\\\\\\\\n        placeholder={text('placeholder', 'Enter text here...')}\\\\\\\\n        maxLength={number('maxLength', 10)}\\\\\\\\n        error={boolean('error', false)}\\\\\\\\n        errorMessage={text('errorMessage', '')}\\\\\\\\n        required={boolean('required', false)}\\\\\\\\n        fullWidth={boolean('fullWidth', false)}\\\\\\\\n        onChange={action('Triggered: onChange')}\\\\\\\\n        tooltipMesaage={text('tooltipMesaage', 'i am default label tooltip')}\\\\\\\\n      />\\\\\\\\n    </Box>\\\\\\\\n  </ThemeWrapper>\\\\\\\\n)\\\\\\\\n\\\\\\\\nexport const RequiredField = () => (\\\\\\\\n  <ThemeWrapper>\\\\\\\\n    <Box p='1em'>\\\\\\\\n      <NumInput\\\\\\\\n        id='someId'\\\\\\\\n        name='someName'\\\\\\\\n        className='someClassName'\\\\\\\\n        label={text('label', 'Username')}\\\\\\\\n        labelColor={text('labelColor', 'text.inputLabel.default')}\\\\\\\\n        placeholder={text('placeholder', 'Enter text here...')}\\\\\\\\n        maxLength={number('maxLength', 10)}\\\\\\\\n        error={boolean('error', false)}\\\\\\\\n        errorMessage={text('errorMessage', '')}\\\\\\\\n        required={boolean('required', true)}\\\\\\\\n        fullWidth={boolean('fullWidth', false)}\\\\\\\\n        onChange={action('Triggered: onChange')}\\\\\\\\n      />\\\\\\\\n    </Box>\\\\\\\\n  </ThemeWrapper>\\\\\\\\n)\\\\\\\\nexport const ErrorField = () => (\\\\\\\\n  <ThemeWrapper>\\\\\\\\n    <Box p='1em'>\\\\\\\\n      <NumInput\\\\\\\\n        id='someId'\\\\\\\\n        name='someName'\\\\\\\\n        className='someClassName'\\\\\\\\n        label={text('label', 'Username')}\\\\\\\\n        labelColor={text('labelColor', 'text.inputLabel.default')}\\\\\\\\n        placeholder={text('placeholder', 'Enter text here...')}\\\\\\\\n        maxLength={number('maxLength', 10)}\\\\\\\\n        error={boolean('error', true)}\\\\\\\\n        errorMessage={text('errorMessage', 'Some Field Error')}\\\\\\\\n        required={boolean('required', false)}\\\\\\\\n        fullWidth={boolean('fullWidth', false)}\\\\\\\\n        onChange={action('Triggered: onChange')}\\\\\\\\n      />\\\\\\\\n    </Box>\\\\\\\\n  </ThemeWrapper>\\\\\\\\n)\\\\\\\\n\\\\\\\\nexport const WithOutBorder = () => (\\\\\\\\n  <ThemeWrapper>\\\\\\\\n    <Box bgColor='grey.100' p='2em'>\\\\\\\\n      <NumInput\\\\\\\\n        id='someId'\\\\\\\\n        name='someName'\\\\\\\\n        className='someClassName'\\\\\\\\n        maxLength={number('maxLength', 10)}\\\\\\\\n        error={boolean('error', false)}\\\\\\\\n        onChange={action('Triggered: onChange')}\\\\\\\\n        variant='inline-edit'\\\\\\\\n      />\\\\\\\\n    </Box>\\\\\\\\n  </ThemeWrapper>\\\\\\\\n)\\\\\\\\n\\\\\\\\nexport const withIcon = () => (\\\\\\\\n  <ThemeWrapper>\\\\\\\\n    <Box p='2em'>\\\\\\\\n      <Position\\\\\\\\n        type='relative'\\\\\\\\n        display='block'\\\\\\\\n        style={object('WrapperStyle', {\\\\\\\\n          // boxShadow: '2px 3px 10px 0px lightgrey',\\\\\\\\n          width: '50%'\\\\\\\\n        })}\\\\\\\\n      >\\\\\\\\n        <NumInput\\\\\\\\n          id='someId'\\\\\\\\n          name='someName'\\\\\\\\n          className='someClassName'\\\\\\\\n          placeholder={text('placeholder', 'Enter text here...')}\\\\\\\\n          maxLength={number('maxLength', 10)}\\\\\\\\n          error={boolean('error', false)}\\\\\\\\n          errorMessage={text('errorMessage', 'Some Field Error')}\\\\\\\\n          required={boolean('required', false)}\\\\\\\\n          fullWidth={boolean('fullWidth', true)}\\\\\\\\n          onChange={action('Triggered: onChange')}\\\\\\\\n          // border={boolean('border', false)}\\\\\\\\n          color={text('color', 'primary.main')}\\\\\\\\n          variant='withIcon'\\\\\\\\n          iconVariant='calendar'\\\\\\\\n          iconSize={15}\\\\\\\\n          // iconStyle={{ padding: '7px 7px 7px 7px' }}\\\\\\\\n          // style={object('style', {\\\\\\\\n          //   fontSize: '14px',\\\\\\\\n          //   minHeight: '30px'\\\\\\\\n          // })}\\\\\\\\n        />\\\\\\\\n      </Position>\\\\\\\\n    </Box>\\\\\\\\n  </ThemeWrapper>\\\\\\\\n)\\\\\\\\n\\\\\\\";\\\\n// @ts-ignore\\\\nvar __ADDS_MAP__ = {};\\\\n// @ts-ignore\\\\nvar __MAIN_FILE_LOCATION__ = \\\\\\\"/NumtInput.stories.tsx\\\\\\\";\\\\n// @ts-ignore\\\\nvar __MODULE_DEPENDENCIES__ = [];\\\\n// @ts-ignore\\\\nvar __LOCAL_DEPENDENCIES__ = {};\\\\n// @ts-ignore\\\\nvar __IDS_TO_FRAMEWORKS__ = {};\\\\n        \\\\nimport { action } from '@storybook/addon-actions'\\\\nimport { boolean, number, object, text } from '@storybook/addon-knobs'\\\\nimport React from 'react'\\\\nimport NumInput from '.'\\\\nimport { path } from '..'\\\\nimport ThemeWrapper from '../../../utilities/components/ThemeWrapper'\\\\nimport Box from '../../atoms/Box'\\\\nimport Position from '../Position'\\\\n\\\\nexport default {parameters: {\\\\\\\"storySource\\\\\\\":{\\\\\\\"source\\\\\\\":\\\\\\\"import { action } from '@storybook/addon-actions'\\\\\\\\nimport { boolean, number, object, text } from '@storybook/addon-knobs'\\\\\\\\nimport React from 'react'\\\\\\\\nimport NumInput from '.'\\\\\\\\nimport { path } from '..'\\\\\\\\nimport ThemeWrapper from '../../../utilities/components/ThemeWrapper'\\\\\\\\nimport Box from '../../atoms/Box'\\\\\\\\nimport Position from '../Position'\\\\\\\\n\\\\\\\\nexport default {\\\\\\\\n  title: `${path}/NumInput`,\\\\\\\\n  component: NumInput\\\\\\\\n}\\\\\\\\n\\\\\\\\nexport const DefaultField = () => (\\\\\\\\n  <ThemeWrapper>\\\\\\\\n    <Box p='1em'>\\\\\\\\n      <NumInput\\\\\\\\n        id='someId'\\\\\\\\n        name='someName'\\\\\\\\n        className='someClassName'\\\\\\\\n        label={text('label', 'Username')}\\\\\\\\n        labelColor={text('labelColor', 'text.inputLabel.default')}\\\\\\\\n        placeholder={text('placeholder', 'Enter text here...')}\\\\\\\\n        maxLength={number('maxLength', 10)}\\\\\\\\n        error={boolean('error', false)}\\\\\\\\n        errorMessage={text('errorMessage', '')}\\\\\\\\n        required={boolean('required', false)}\\\\\\\\n        fullWidth={boolean('fullWidth', false)}\\\\\\\\n        onChange={action('Triggered: onChange')}\\\\\\\\n        tooltipMesaage={text('tooltipMesaage', 'i am default label tooltip')}\\\\\\\\n      />\\\\\\\\n    </Box>\\\\\\\\n  </ThemeWrapper>\\\\\\\\n)\\\\\\\\n\\\\\\\\nexport const RequiredField = () => (\\\\\\\\n  <ThemeWrapper>\\\\\\\\n    <Box p='1em'>\\\\\\\\n      <NumInput\\\\\\\\n        id='someId'\\\\\\\\n        name='someName'\\\\\\\\n        className='someClassName'\\\\\\\\n        label={text('label', 'Username')}\\\\\\\\n        labelColor={text('labelColor', 'text.inputLabel.default')}\\\\\\\\n        placeholder={text('placeholder', 'Enter text here...')}\\\\\\\\n        maxLength={number('maxLength', 10)}\\\\\\\\n        error={boolean('error', false)}\\\\\\\\n        errorMessage={text('errorMessage', '')}\\\\\\\\n        required={boolean('required', true)}\\\\\\\\n        fullWidth={boolean('fullWidth', false)}\\\\\\\\n        onChange={action('Triggered: onChange')}\\\\\\\\n      />\\\\\\\\n    </Box>\\\\\\\\n  </ThemeWrapper>\\\\\\\\n)\\\\\\\\nexport const ErrorField = () => (\\\\\\\\n  <ThemeWrapper>\\\\\\\\n    <Box p='1em'>\\\\\\\\n      <NumInput\\\\\\\\n        id='someId'\\\\\\\\n        name='someName'\\\\\\\\n        className='someClassName'\\\\\\\\n        label={text('label', 'Username')}\\\\\\\\n        labelColor={text('labelColor', 'text.inputLabel.default')}\\\\\\\\n        placeholder={text('placeholder', 'Enter text here...')}\\\\\\\\n        maxLength={number('maxLength', 10)}\\\\\\\\n        error={boolean('error', true)}\\\\\\\\n        errorMessage={text('errorMessage', 'Some Field Error')}\\\\\\\\n        required={boolean('required', false)}\\\\\\\\n        fullWidth={boolean('fullWidth', false)}\\\\\\\\n        onChange={action('Triggered: onChange')}\\\\\\\\n      />\\\\\\\\n    </Box>\\\\\\\\n  </ThemeWrapper>\\\\\\\\n)\\\\\\\\n\\\\\\\\nexport const WithOutBorder = () => (\\\\\\\\n  <ThemeWrapper>\\\\\\\\n    <Box bgColor='grey.100' p='2em'>\\\\\\\\n      <NumInput\\\\\\\\n        id='someId'\\\\\\\\n        name='someName'\\\\\\\\n        className='someClassName'\\\\\\\\n        maxLength={number('maxLength', 10)}\\\\\\\\n        error={boolean('error', false)}\\\\\\\\n        onChange={action('Triggered: onChange')}\\\\\\\\n        variant='inline-edit'\\\\\\\\n      />\\\\\\\\n    </Box>\\\\\\\\n  </ThemeWrapper>\\\\\\\\n)\\\\\\\\n\\\\\\\\nexport const withIcon = () => (\\\\\\\\n  <ThemeWrapper>\\\\\\\\n    <Box p='2em'>\\\\\\\\n      <Position\\\\\\\\n        type='relative'\\\\\\\\n        display='block'\\\\\\\\n        style={object('WrapperStyle', {\\\\\\\\n          // boxShadow: '2px 3px 10px 0px lightgrey',\\\\\\\\n          width: '50%'\\\\\\\\n        })}\\\\\\\\n      >\\\\\\\\n        <NumInput\\\\\\\\n          id='someId'\\\\\\\\n          name='someName'\\\\\\\\n          className='someClassName'\\\\\\\\n          placeholder={text('placeholder', 'Enter text here...')}\\\\\\\\n          maxLength={number('maxLength', 10)}\\\\\\\\n          error={boolean('error', false)}\\\\\\\\n          errorMessage={text('errorMessage', 'Some Field Error')}\\\\\\\\n          required={boolean('required', false)}\\\\\\\\n          fullWidth={boolean('fullWidth', true)}\\\\\\\\n          onChange={action('Triggered: onChange')}\\\\\\\\n          // border={boolean('border', false)}\\\\\\\\n          color={text('color', 'primary.main')}\\\\\\\\n          variant='withIcon'\\\\\\\\n          iconVariant='calendar'\\\\\\\\n          iconSize={15}\\\\\\\\n          // iconStyle={{ padding: '7px 7px 7px 7px' }}\\\\\\\\n          // style={object('style', {\\\\\\\\n          //   fontSize: '14px',\\\\\\\\n          //   minHeight: '30px'\\\\\\\\n          // })}\\\\\\\\n        />\\\\\\\\n      </Position>\\\\\\\\n    </Box>\\\\\\\\n  </ThemeWrapper>\\\\\\\\n)\\\\\\\\n\\\\\\\",\\\\\\\"locationsMap\\\\\\\":{}},},\\\\n  title: `${path}/NumInput`,\\\\n  component: NumInput\\\\n}\\\\n\\\\nexport const DefaultField = addSourceDecorator(() => (\\\\n  <ThemeWrapper>\\\\n    <Box p='1em'>\\\\n      <NumInput\\\\n        id='someId'\\\\n        name='someName'\\\\n        className='someClassName'\\\\n        label={text('label', 'Username')}\\\\n        labelColor={text('labelColor', 'text.inputLabel.default')}\\\\n        placeholder={text('placeholder', 'Enter text here...')}\\\\n        maxLength={number('maxLength', 10)}\\\\n        error={boolean('error', false)}\\\\n        errorMessage={text('errorMessage', '')}\\\\n        required={boolean('required', false)}\\\\n        fullWidth={boolean('fullWidth', false)}\\\\n        onChange={action('Triggered: onChange')}\\\\n        tooltipMesaage={text('tooltipMesaage', 'i am default label tooltip')}\\\\n      />\\\\n    </Box>\\\\n  </ThemeWrapper>\\\\n), {__STORY__, __ADDS_MAP__,__MAIN_FILE_LOCATION__,__MODULE_DEPENDENCIES__,__LOCAL_DEPENDENCIES__,__SOURCE_PREFIX__,__IDS_TO_FRAMEWORKS__});\\\\n\\\\nexport const RequiredField = addSourceDecorator(() => (\\\\n  <ThemeWrapper>\\\\n    <Box p='1em'>\\\\n      <NumInput\\\\n        id='someId'\\\\n        name='someName'\\\\n        className='someClassName'\\\\n        label={text('label', 'Username')}\\\\n        labelColor={text('labelColor', 'text.inputLabel.default')}\\\\n        placeholder={text('placeholder', 'Enter text here...')}\\\\n        maxLength={number('maxLength', 10)}\\\\n        error={boolean('error', false)}\\\\n        errorMessage={text('errorMessage', '')}\\\\n        required={boolean('required', true)}\\\\n        fullWidth={boolean('fullWidth', false)}\\\\n        onChange={action('Triggered: onChange')}\\\\n      />\\\\n    </Box>\\\\n  </ThemeWrapper>\\\\n), {__STORY__, __ADDS_MAP__,__MAIN_FILE_LOCATION__,__MODULE_DEPENDENCIES__,__LOCAL_DEPENDENCIES__,__SOURCE_PREFIX__,__IDS_TO_FRAMEWORKS__});\\\\nexport const ErrorField = addSourceDecorator(() => (\\\\n  <ThemeWrapper>\\\\n    <Box p='1em'>\\\\n      <NumInput\\\\n        id='someId'\\\\n        name='someName'\\\\n        className='someClassName'\\\\n        label={text('label', 'Username')}\\\\n        labelColor={text('labelColor', 'text.inputLabel.default')}\\\\n        placeholder={text('placeholder', 'Enter text here...')}\\\\n        maxLength={number('maxLength', 10)}\\\\n        error={boolean('error', true)}\\\\n        errorMessage={text('errorMessage', 'Some Field Error')}\\\\n        required={boolean('required', false)}\\\\n        fullWidth={boolean('fullWidth', false)}\\\\n        onChange={action('Triggered: onChange')}\\\\n      />\\\\n    </Box>\\\\n  </ThemeWrapper>\\\\n), {__STORY__, __ADDS_MAP__,__MAIN_FILE_LOCATION__,__MODULE_DEPENDENCIES__,__LOCAL_DEPENDENCIES__,__SOURCE_PREFIX__,__IDS_TO_FRAMEWORKS__});\\\\n\\\\nexport const WithOutBorder = addSourceDecorator(() => (\\\\n  <ThemeWrapper>\\\\n    <Box bgColor='grey.100' p='2em'>\\\\n      <NumInput\\\\n        id='someId'\\\\n        name='someName'\\\\n        className='someClassName'\\\\n        maxLength={number('maxLength', 10)}\\\\n        error={boolean('error', false)}\\\\n        onChange={action('Triggered: onChange')}\\\\n        variant='inline-edit'\\\\n      />\\\\n    </Box>\\\\n  </ThemeWrapper>\\\\n), {__STORY__, __ADDS_MAP__,__MAIN_FILE_LOCATION__,__MODULE_DEPENDENCIES__,__LOCAL_DEPENDENCIES__,__SOURCE_PREFIX__,__IDS_TO_FRAMEWORKS__});\\\\n\\\\nexport const withIcon = addSourceDecorator(() => (\\\\n  <ThemeWrapper>\\\\n    <Box p='2em'>\\\\n      <Position\\\\n        type='relative'\\\\n        display='block'\\\\n        style={object('WrapperStyle', {\\\\n          // boxShadow: '2px 3px 10px 0px lightgrey',\\\\n          width: '50%'\\\\n        })}\\\\n      >\\\\n        <NumInput\\\\n          id='someId'\\\\n          name='someName'\\\\n          className='someClassName'\\\\n          placeholder={text('placeholder', 'Enter text here...')}\\\\n          maxLength={number('maxLength', 10)}\\\\n          error={boolean('error', false)}\\\\n          errorMessage={text('errorMessage', 'Some Field Error')}\\\\n          required={boolean('required', false)}\\\\n          fullWidth={boolean('fullWidth', true)}\\\\n          onChange={action('Triggered: onChange')}\\\\n          // border={boolean('border', false)}\\\\n          color={text('color', 'primary.main')}\\\\n          variant='withIcon'\\\\n          iconVariant='calendar'\\\\n          iconSize={15}\\\\n          // iconStyle={{ padding: '7px 7px 7px 7px' }}\\\\n          // style={object('style', {\\\\n          //   fontSize: '14px',\\\\n          //   minHeight: '30px'\\\\n          // })}\\\\n        />\\\\n      </Position>\\\\n    </Box>\\\\n  </ThemeWrapper>\\\\n), {__STORY__, __ADDS_MAP__,__MAIN_FILE_LOCATION__,__MODULE_DEPENDENCIES__,__LOCAL_DEPENDENCIES__,__SOURCE_PREFIX__,__IDS_TO_FRAMEWORKS__});\\\";\\n// @ts-ignore\\nvar __ADDS_MAP__ = {};\\n// @ts-ignore\\nvar __MAIN_FILE_LOCATION__ = \\\"/NumtInput.stories.tsx\\\";\\n// @ts-ignore\\nvar __MODULE_DEPENDENCIES__ = [];\\n// @ts-ignore\\nvar __LOCAL_DEPENDENCIES__ = {};\\n// @ts-ignore\\nvar __IDS_TO_FRAMEWORKS__ = {};\\n        \\n\\n\\n// @ts-nocheck\\n// @ts-ignore\\nvar withSourceLoader = require('@storybook/source-loader/preview').withSource;\\n// @ts-ignore\\nvar addSourceDecorator = require(\\\"@storybook/source-loader/preview\\\").addSource;\\n// @ts-ignore\\nvar __SOURCE_PREFIX__ = \\\"/Users/farhanansari/Code/ui-library/src/components/molecules/NumInput\\\";\\n// @ts-ignore\\nvar __STORY__ = \\\"import { action } from '@storybook/addon-actions'\\\\nimport { boolean, number, object, text } from '@storybook/addon-knobs'\\\\nimport React from 'react'\\\\nimport NumInput from '.'\\\\nimport { path } from '..'\\\\nimport ThemeWrapper from '../../../utilities/components/ThemeWrapper'\\\\nimport Box from '../../atoms/Box'\\\\nimport Position from '../Position'\\\\n\\\\nexport default {\\\\n  title: `${path}/NumInput`,\\\\n  component: NumInput\\\\n}\\\\n\\\\nexport const DefaultField = () => (\\\\n  <ThemeWrapper>\\\\n    <Box p='1em'>\\\\n      <NumInput\\\\n        id='someId'\\\\n        name='someName'\\\\n        className='someClassName'\\\\n        label={text('label', 'Username')}\\\\n        labelColor={text('labelColor', 'text.inputLabel.default')}\\\\n        placeholder={text('placeholder', 'Enter text here...')}\\\\n        maxLength={number('maxLength', 10)}\\\\n        error={boolean('error', false)}\\\\n        errorMessage={text('errorMessage', '')}\\\\n        required={boolean('required', false)}\\\\n        fullWidth={boolean('fullWidth', false)}\\\\n        onChange={action('Triggered: onChange')}\\\\n        tooltipMesaage={text('tooltipMesaage', 'i am default label tooltip')}\\\\n      />\\\\n    </Box>\\\\n  </ThemeWrapper>\\\\n)\\\\n\\\\nexport const RequiredField = () => (\\\\n  <ThemeWrapper>\\\\n    <Box p='1em'>\\\\n      <NumInput\\\\n        id='someId'\\\\n        name='someName'\\\\n        className='someClassName'\\\\n        label={text('label', 'Username')}\\\\n        labelColor={text('labelColor', 'text.inputLabel.default')}\\\\n        placeholder={text('placeholder', 'Enter text here...')}\\\\n        maxLength={number('maxLength', 10)}\\\\n        error={boolean('error', false)}\\\\n        errorMessage={text('errorMessage', '')}\\\\n        required={boolean('required', true)}\\\\n        fullWidth={boolean('fullWidth', false)}\\\\n        onChange={action('Triggered: onChange')}\\\\n      />\\\\n    </Box>\\\\n  </ThemeWrapper>\\\\n)\\\\nexport const ErrorField = () => (\\\\n  <ThemeWrapper>\\\\n    <Box p='1em'>\\\\n      <NumInput\\\\n        id='someId'\\\\n        name='someName'\\\\n        className='someClassName'\\\\n        label={text('label', 'Username')}\\\\n        labelColor={text('labelColor', 'text.inputLabel.default')}\\\\n        placeholder={text('placeholder', 'Enter text here...')}\\\\n        maxLength={number('maxLength', 10)}\\\\n        error={boolean('error', true)}\\\\n        errorMessage={text('errorMessage', 'Some Field Error')}\\\\n        required={boolean('required', false)}\\\\n        fullWidth={boolean('fullWidth', false)}\\\\n        onChange={action('Triggered: onChange')}\\\\n      />\\\\n    </Box>\\\\n  </ThemeWrapper>\\\\n)\\\\n\\\\nexport const WithOutBorder = () => (\\\\n  <ThemeWrapper>\\\\n    <Box bgColor='grey.100' p='2em'>\\\\n      <NumInput\\\\n        id='someId'\\\\n        name='someName'\\\\n        className='someClassName'\\\\n        maxLength={number('maxLength', 10)}\\\\n        error={boolean('error', false)}\\\\n        onChange={action('Triggered: onChange')}\\\\n        variant='inline-edit'\\\\n      />\\\\n    </Box>\\\\n  </ThemeWrapper>\\\\n)\\\\n\\\\nexport const withIcon = () => (\\\\n  <ThemeWrapper>\\\\n    <Box p='2em'>\\\\n      <Position\\\\n        type='relative'\\\\n        display='block'\\\\n        style={object('WrapperStyle', {\\\\n          // boxShadow: '2px 3px 10px 0px lightgrey',\\\\n          width: '50%'\\\\n        })}\\\\n      >\\\\n        <NumInput\\\\n          id='someId'\\\\n          name='someName'\\\\n          className='someClassName'\\\\n          placeholder={text('placeholder', 'Enter text here...')}\\\\n          maxLength={number('maxLength', 10)}\\\\n          error={boolean('error', false)}\\\\n          errorMessage={text('errorMessage', 'Some Field Error')}\\\\n          required={boolean('required', false)}\\\\n          fullWidth={boolean('fullWidth', true)}\\\\n          onChange={action('Triggered: onChange')}\\\\n          // border={boolean('border', false)}\\\\n          color={text('color', 'primary.main')}\\\\n          variant='withIcon'\\\\n          iconVariant='calendar'\\\\n          iconSize={15}\\\\n          // iconStyle={{ padding: '7px 7px 7px 7px' }}\\\\n          // style={object('style', {\\\\n          //   fontSize: '14px',\\\\n          //   minHeight: '30px'\\\\n          // })}\\\\n        />\\\\n      </Position>\\\\n    </Box>\\\\n  </ThemeWrapper>\\\\n)\\\\n\\\";\\n// @ts-ignore\\nvar __ADDS_MAP__ = {};\\n// @ts-ignore\\nvar __MAIN_FILE_LOCATION__ = \\\"/NumtInput.stories.tsx\\\";\\n// @ts-ignore\\nvar __MODULE_DEPENDENCIES__ = [];\\n// @ts-ignore\\nvar __LOCAL_DEPENDENCIES__ = {};\\n// @ts-ignore\\nvar __IDS_TO_FRAMEWORKS__ = {};\\n        \\nimport { action } from '@storybook/addon-actions'\\nimport { boolean, number, object, text } from '@storybook/addon-knobs'\\nimport React from 'react'\\nimport NumInput from '.'\\nimport { path } from '..'\\nimport ThemeWrapper from '../../../utilities/components/ThemeWrapper'\\nimport Box from '../../atoms/Box'\\nimport Position from '../Position'\\n\\nexport default {parameters: {\\\"storySource\\\":{\\\"source\\\":\\\"\\\\n\\\\n// @ts-nocheck\\\\n// @ts-ignore\\\\nvar withSourceLoader = require('@storybook/source-loader/preview').withSource;\\\\n// @ts-ignore\\\\nvar addSourceDecorator = require(\\\\\\\"@storybook/source-loader/preview\\\\\\\").addSource;\\\\n// @ts-ignore\\\\nvar __SOURCE_PREFIX__ = \\\\\\\"/Users/farhanansari/Code/ui-library/src/components/molecules/NumInput\\\\\\\";\\\\n// @ts-ignore\\\\nvar __STORY__ = \\\\\\\"import { action } from '@storybook/addon-actions'\\\\\\\\nimport { boolean, number, object, text } from '@storybook/addon-knobs'\\\\\\\\nimport React from 'react'\\\\\\\\nimport NumInput from '.'\\\\\\\\nimport { path } from '..'\\\\\\\\nimport ThemeWrapper from '../../../utilities/components/ThemeWrapper'\\\\\\\\nimport Box from '../../atoms/Box'\\\\\\\\nimport Position from '../Position'\\\\\\\\n\\\\\\\\nexport default {\\\\\\\\n  title: `${path}/NumInput`,\\\\\\\\n  component: NumInput\\\\\\\\n}\\\\\\\\n\\\\\\\\nexport const DefaultField = () => (\\\\\\\\n  <ThemeWrapper>\\\\\\\\n    <Box p='1em'>\\\\\\\\n      <NumInput\\\\\\\\n        id='someId'\\\\\\\\n        name='someName'\\\\\\\\n        className='someClassName'\\\\\\\\n        label={text('label', 'Username')}\\\\\\\\n        labelColor={text('labelColor', 'text.inputLabel.default')}\\\\\\\\n        placeholder={text('placeholder', 'Enter text here...')}\\\\\\\\n        maxLength={number('maxLength', 10)}\\\\\\\\n        error={boolean('error', false)}\\\\\\\\n        errorMessage={text('errorMessage', '')}\\\\\\\\n        required={boolean('required', false)}\\\\\\\\n        fullWidth={boolean('fullWidth', false)}\\\\\\\\n        onChange={action('Triggered: onChange')}\\\\\\\\n        tooltipMesaage={text('tooltipMesaage', 'i am default label tooltip')}\\\\\\\\n      />\\\\\\\\n    </Box>\\\\\\\\n  </ThemeWrapper>\\\\\\\\n)\\\\\\\\n\\\\\\\\nexport const RequiredField = () => (\\\\\\\\n  <ThemeWrapper>\\\\\\\\n    <Box p='1em'>\\\\\\\\n      <NumInput\\\\\\\\n        id='someId'\\\\\\\\n        name='someName'\\\\\\\\n        className='someClassName'\\\\\\\\n        label={text('label', 'Username')}\\\\\\\\n        labelColor={text('labelColor', 'text.inputLabel.default')}\\\\\\\\n        placeholder={text('placeholder', 'Enter text here...')}\\\\\\\\n        maxLength={number('maxLength', 10)}\\\\\\\\n        error={boolean('error', false)}\\\\\\\\n        errorMessage={text('errorMessage', '')}\\\\\\\\n        required={boolean('required', true)}\\\\\\\\n        fullWidth={boolean('fullWidth', false)}\\\\\\\\n        onChange={action('Triggered: onChange')}\\\\\\\\n      />\\\\\\\\n    </Box>\\\\\\\\n  </ThemeWrapper>\\\\\\\\n)\\\\\\\\nexport const ErrorField = () => (\\\\\\\\n  <ThemeWrapper>\\\\\\\\n    <Box p='1em'>\\\\\\\\n      <NumInput\\\\\\\\n        id='someId'\\\\\\\\n        name='someName'\\\\\\\\n        className='someClassName'\\\\\\\\n        label={text('label', 'Username')}\\\\\\\\n        labelColor={text('labelColor', 'text.inputLabel.default')}\\\\\\\\n        placeholder={text('placeholder', 'Enter text here...')}\\\\\\\\n        maxLength={number('maxLength', 10)}\\\\\\\\n        error={boolean('error', true)}\\\\\\\\n        errorMessage={text('errorMessage', 'Some Field Error')}\\\\\\\\n        required={boolean('required', false)}\\\\\\\\n        fullWidth={boolean('fullWidth', false)}\\\\\\\\n        onChange={action('Triggered: onChange')}\\\\\\\\n      />\\\\\\\\n    </Box>\\\\\\\\n  </ThemeWrapper>\\\\\\\\n)\\\\\\\\n\\\\\\\\nexport const WithOutBorder = () => (\\\\\\\\n  <ThemeWrapper>\\\\\\\\n    <Box bgColor='grey.100' p='2em'>\\\\\\\\n      <NumInput\\\\\\\\n        id='someId'\\\\\\\\n        name='someName'\\\\\\\\n        className='someClassName'\\\\\\\\n        maxLength={number('maxLength', 10)}\\\\\\\\n        error={boolean('error', false)}\\\\\\\\n        onChange={action('Triggered: onChange')}\\\\\\\\n        variant='inline-edit'\\\\\\\\n      />\\\\\\\\n    </Box>\\\\\\\\n  </ThemeWrapper>\\\\\\\\n)\\\\\\\\n\\\\\\\\nexport const withIcon = () => (\\\\\\\\n  <ThemeWrapper>\\\\\\\\n    <Box p='2em'>\\\\\\\\n      <Position\\\\\\\\n        type='relative'\\\\\\\\n        display='block'\\\\\\\\n        style={object('WrapperStyle', {\\\\\\\\n          // boxShadow: '2px 3px 10px 0px lightgrey',\\\\\\\\n          width: '50%'\\\\\\\\n        })}\\\\\\\\n      >\\\\\\\\n        <NumInput\\\\\\\\n          id='someId'\\\\\\\\n          name='someName'\\\\\\\\n          className='someClassName'\\\\\\\\n          placeholder={text('placeholder', 'Enter text here...')}\\\\\\\\n          maxLength={number('maxLength', 10)}\\\\\\\\n          error={boolean('error', false)}\\\\\\\\n          errorMessage={text('errorMessage', 'Some Field Error')}\\\\\\\\n          required={boolean('required', false)}\\\\\\\\n          fullWidth={boolean('fullWidth', true)}\\\\\\\\n          onChange={action('Triggered: onChange')}\\\\\\\\n          // border={boolean('border', false)}\\\\\\\\n          color={text('color', 'primary.main')}\\\\\\\\n          variant='withIcon'\\\\\\\\n          iconVariant='calendar'\\\\\\\\n          iconSize={15}\\\\\\\\n          // iconStyle={{ padding: '7px 7px 7px 7px' }}\\\\\\\\n          // style={object('style', {\\\\\\\\n          //   fontSize: '14px',\\\\\\\\n          //   minHeight: '30px'\\\\\\\\n          // })}\\\\\\\\n        />\\\\\\\\n      </Position>\\\\\\\\n    </Box>\\\\\\\\n  </ThemeWrapper>\\\\\\\\n)\\\\\\\\n\\\\\\\";\\\\n// @ts-ignore\\\\nvar __ADDS_MAP__ = {};\\\\n// @ts-ignore\\\\nvar __MAIN_FILE_LOCATION__ = \\\\\\\"/NumtInput.stories.tsx\\\\\\\";\\\\n// @ts-ignore\\\\nvar __MODULE_DEPENDENCIES__ = [];\\\\n// @ts-ignore\\\\nvar __LOCAL_DEPENDENCIES__ = {};\\\\n// @ts-ignore\\\\nvar __IDS_TO_FRAMEWORKS__ = {};\\\\n        \\\\nimport { action } from '@storybook/addon-actions'\\\\nimport { boolean, number, object, text } from '@storybook/addon-knobs'\\\\nimport React from 'react'\\\\nimport NumInput from '.'\\\\nimport { path } from '..'\\\\nimport ThemeWrapper from '../../../utilities/components/ThemeWrapper'\\\\nimport Box from '../../atoms/Box'\\\\nimport Position from '../Position'\\\\n\\\\nexport default {parameters: {\\\\\\\"storySource\\\\\\\":{\\\\\\\"source\\\\\\\":\\\\\\\"import { action } from '@storybook/addon-actions'\\\\\\\\nimport { boolean, number, object, text } from '@storybook/addon-knobs'\\\\\\\\nimport React from 'react'\\\\\\\\nimport NumInput from '.'\\\\\\\\nimport { path } from '..'\\\\\\\\nimport ThemeWrapper from '../../../utilities/components/ThemeWrapper'\\\\\\\\nimport Box from '../../atoms/Box'\\\\\\\\nimport Position from '../Position'\\\\\\\\n\\\\\\\\nexport default {\\\\\\\\n  title: `${path}/NumInput`,\\\\\\\\n  component: NumInput\\\\\\\\n}\\\\\\\\n\\\\\\\\nexport const DefaultField = () => (\\\\\\\\n  <ThemeWrapper>\\\\\\\\n    <Box p='1em'>\\\\\\\\n      <NumInput\\\\\\\\n        id='someId'\\\\\\\\n        name='someName'\\\\\\\\n        className='someClassName'\\\\\\\\n        label={text('label', 'Username')}\\\\\\\\n        labelColor={text('labelColor', 'text.inputLabel.default')}\\\\\\\\n        placeholder={text('placeholder', 'Enter text here...')}\\\\\\\\n        maxLength={number('maxLength', 10)}\\\\\\\\n        error={boolean('error', false)}\\\\\\\\n        errorMessage={text('errorMessage', '')}\\\\\\\\n        required={boolean('required', false)}\\\\\\\\n        fullWidth={boolean('fullWidth', false)}\\\\\\\\n        onChange={action('Triggered: onChange')}\\\\\\\\n        tooltipMesaage={text('tooltipMesaage', 'i am default label tooltip')}\\\\\\\\n      />\\\\\\\\n    </Box>\\\\\\\\n  </ThemeWrapper>\\\\\\\\n)\\\\\\\\n\\\\\\\\nexport const RequiredField = () => (\\\\\\\\n  <ThemeWrapper>\\\\\\\\n    <Box p='1em'>\\\\\\\\n      <NumInput\\\\\\\\n        id='someId'\\\\\\\\n        name='someName'\\\\\\\\n        className='someClassName'\\\\\\\\n        label={text('label', 'Username')}\\\\\\\\n        labelColor={text('labelColor', 'text.inputLabel.default')}\\\\\\\\n        placeholder={text('placeholder', 'Enter text here...')}\\\\\\\\n        maxLength={number('maxLength', 10)}\\\\\\\\n        error={boolean('error', false)}\\\\\\\\n        errorMessage={text('errorMessage', '')}\\\\\\\\n        required={boolean('required', true)}\\\\\\\\n        fullWidth={boolean('fullWidth', false)}\\\\\\\\n        onChange={action('Triggered: onChange')}\\\\\\\\n      />\\\\\\\\n    </Box>\\\\\\\\n  </ThemeWrapper>\\\\\\\\n)\\\\\\\\nexport const ErrorField = () => (\\\\\\\\n  <ThemeWrapper>\\\\\\\\n    <Box p='1em'>\\\\\\\\n      <NumInput\\\\\\\\n        id='someId'\\\\\\\\n        name='someName'\\\\\\\\n        className='someClassName'\\\\\\\\n        label={text('label', 'Username')}\\\\\\\\n        labelColor={text('labelColor', 'text.inputLabel.default')}\\\\\\\\n        placeholder={text('placeholder', 'Enter text here...')}\\\\\\\\n        maxLength={number('maxLength', 10)}\\\\\\\\n        error={boolean('error', true)}\\\\\\\\n        errorMessage={text('errorMessage', 'Some Field Error')}\\\\\\\\n        required={boolean('required', false)}\\\\\\\\n        fullWidth={boolean('fullWidth', false)}\\\\\\\\n        onChange={action('Triggered: onChange')}\\\\\\\\n      />\\\\\\\\n    </Box>\\\\\\\\n  </ThemeWrapper>\\\\\\\\n)\\\\\\\\n\\\\\\\\nexport const WithOutBorder = () => (\\\\\\\\n  <ThemeWrapper>\\\\\\\\n    <Box bgColor='grey.100' p='2em'>\\\\\\\\n      <NumInput\\\\\\\\n        id='someId'\\\\\\\\n        name='someName'\\\\\\\\n        className='someClassName'\\\\\\\\n        maxLength={number('maxLength', 10)}\\\\\\\\n        error={boolean('error', false)}\\\\\\\\n        onChange={action('Triggered: onChange')}\\\\\\\\n        variant='inline-edit'\\\\\\\\n      />\\\\\\\\n    </Box>\\\\\\\\n  </ThemeWrapper>\\\\\\\\n)\\\\\\\\n\\\\\\\\nexport const withIcon = () => (\\\\\\\\n  <ThemeWrapper>\\\\\\\\n    <Box p='2em'>\\\\\\\\n      <Position\\\\\\\\n        type='relative'\\\\\\\\n        display='block'\\\\\\\\n        style={object('WrapperStyle', {\\\\\\\\n          // boxShadow: '2px 3px 10px 0px lightgrey',\\\\\\\\n          width: '50%'\\\\\\\\n        })}\\\\\\\\n      >\\\\\\\\n        <NumInput\\\\\\\\n          id='someId'\\\\\\\\n          name='someName'\\\\\\\\n          className='someClassName'\\\\\\\\n          placeholder={text('placeholder', 'Enter text here...')}\\\\\\\\n          maxLength={number('maxLength', 10)}\\\\\\\\n          error={boolean('error', false)}\\\\\\\\n          errorMessage={text('errorMessage', 'Some Field Error')}\\\\\\\\n          required={boolean('required', false)}\\\\\\\\n          fullWidth={boolean('fullWidth', true)}\\\\\\\\n          onChange={action('Triggered: onChange')}\\\\\\\\n          // border={boolean('border', false)}\\\\\\\\n          color={text('color', 'primary.main')}\\\\\\\\n          variant='withIcon'\\\\\\\\n          iconVariant='calendar'\\\\\\\\n          iconSize={15}\\\\\\\\n          // iconStyle={{ padding: '7px 7px 7px 7px' }}\\\\\\\\n          // style={object('style', {\\\\\\\\n          //   fontSize: '14px',\\\\\\\\n          //   minHeight: '30px'\\\\\\\\n          // })}\\\\\\\\n        />\\\\\\\\n      </Position>\\\\\\\\n    </Box>\\\\\\\\n  </ThemeWrapper>\\\\\\\\n)\\\\\\\\n\\\\\\\",\\\\\\\"locationsMap\\\\\\\":{}},},\\\\n  title: `${path}/NumInput`,\\\\n  component: NumInput\\\\n}\\\\n\\\\nexport const DefaultField = addSourceDecorator(() => (\\\\n  <ThemeWrapper>\\\\n    <Box p='1em'>\\\\n      <NumInput\\\\n        id='someId'\\\\n        name='someName'\\\\n        className='someClassName'\\\\n        label={text('label', 'Username')}\\\\n        labelColor={text('labelColor', 'text.inputLabel.default')}\\\\n        placeholder={text('placeholder', 'Enter text here...')}\\\\n        maxLength={number('maxLength', 10)}\\\\n        error={boolean('error', false)}\\\\n        errorMessage={text('errorMessage', '')}\\\\n        required={boolean('required', false)}\\\\n        fullWidth={boolean('fullWidth', false)}\\\\n        onChange={action('Triggered: onChange')}\\\\n        tooltipMesaage={text('tooltipMesaage', 'i am default label tooltip')}\\\\n      />\\\\n    </Box>\\\\n  </ThemeWrapper>\\\\n), {__STORY__, __ADDS_MAP__,__MAIN_FILE_LOCATION__,__MODULE_DEPENDENCIES__,__LOCAL_DEPENDENCIES__,__SOURCE_PREFIX__,__IDS_TO_FRAMEWORKS__});\\\\n\\\\nexport const RequiredField = addSourceDecorator(() => (\\\\n  <ThemeWrapper>\\\\n    <Box p='1em'>\\\\n      <NumInput\\\\n        id='someId'\\\\n        name='someName'\\\\n        className='someClassName'\\\\n        label={text('label', 'Username')}\\\\n        labelColor={text('labelColor', 'text.inputLabel.default')}\\\\n        placeholder={text('placeholder', 'Enter text here...')}\\\\n        maxLength={number('maxLength', 10)}\\\\n        error={boolean('error', false)}\\\\n        errorMessage={text('errorMessage', '')}\\\\n        required={boolean('required', true)}\\\\n        fullWidth={boolean('fullWidth', false)}\\\\n        onChange={action('Triggered: onChange')}\\\\n      />\\\\n    </Box>\\\\n  </ThemeWrapper>\\\\n), {__STORY__, __ADDS_MAP__,__MAIN_FILE_LOCATION__,__MODULE_DEPENDENCIES__,__LOCAL_DEPENDENCIES__,__SOURCE_PREFIX__,__IDS_TO_FRAMEWORKS__});\\\\nexport const ErrorField = addSourceDecorator(() => (\\\\n  <ThemeWrapper>\\\\n    <Box p='1em'>\\\\n      <NumInput\\\\n        id='someId'\\\\n        name='someName'\\\\n        className='someClassName'\\\\n        label={text('label', 'Username')}\\\\n        labelColor={text('labelColor', 'text.inputLabel.default')}\\\\n        placeholder={text('placeholder', 'Enter text here...')}\\\\n        maxLength={number('maxLength', 10)}\\\\n        error={boolean('error', true)}\\\\n        errorMessage={text('errorMessage', 'Some Field Error')}\\\\n        required={boolean('required', false)}\\\\n        fullWidth={boolean('fullWidth', false)}\\\\n        onChange={action('Triggered: onChange')}\\\\n      />\\\\n    </Box>\\\\n  </ThemeWrapper>\\\\n), {__STORY__, __ADDS_MAP__,__MAIN_FILE_LOCATION__,__MODULE_DEPENDENCIES__,__LOCAL_DEPENDENCIES__,__SOURCE_PREFIX__,__IDS_TO_FRAMEWORKS__});\\\\n\\\\nexport const WithOutBorder = addSourceDecorator(() => (\\\\n  <ThemeWrapper>\\\\n    <Box bgColor='grey.100' p='2em'>\\\\n      <NumInput\\\\n        id='someId'\\\\n        name='someName'\\\\n        className='someClassName'\\\\n        maxLength={number('maxLength', 10)}\\\\n        error={boolean('error', false)}\\\\n        onChange={action('Triggered: onChange')}\\\\n        variant='inline-edit'\\\\n      />\\\\n    </Box>\\\\n  </ThemeWrapper>\\\\n), {__STORY__, __ADDS_MAP__,__MAIN_FILE_LOCATION__,__MODULE_DEPENDENCIES__,__LOCAL_DEPENDENCIES__,__SOURCE_PREFIX__,__IDS_TO_FRAMEWORKS__});\\\\n\\\\nexport const withIcon = addSourceDecorator(() => (\\\\n  <ThemeWrapper>\\\\n    <Box p='2em'>\\\\n      <Position\\\\n        type='relative'\\\\n        display='block'\\\\n        style={object('WrapperStyle', {\\\\n          // boxShadow: '2px 3px 10px 0px lightgrey',\\\\n          width: '50%'\\\\n        })}\\\\n      >\\\\n        <NumInput\\\\n          id='someId'\\\\n          name='someName'\\\\n          className='someClassName'\\\\n          placeholder={text('placeholder', 'Enter text here...')}\\\\n          maxLength={number('maxLength', 10)}\\\\n          error={boolean('error', false)}\\\\n          errorMessage={text('errorMessage', 'Some Field Error')}\\\\n          required={boolean('required', false)}\\\\n          fullWidth={boolean('fullWidth', true)}\\\\n          onChange={action('Triggered: onChange')}\\\\n          // border={boolean('border', false)}\\\\n          color={text('color', 'primary.main')}\\\\n          variant='withIcon'\\\\n          iconVariant='calendar'\\\\n          iconSize={15}\\\\n          // iconStyle={{ padding: '7px 7px 7px 7px' }}\\\\n          // style={object('style', {\\\\n          //   fontSize: '14px',\\\\n          //   minHeight: '30px'\\\\n          // })}\\\\n        />\\\\n      </Position>\\\\n    </Box>\\\\n  </ThemeWrapper>\\\\n), {__STORY__, __ADDS_MAP__,__MAIN_FILE_LOCATION__,__MODULE_DEPENDENCIES__,__LOCAL_DEPENDENCIES__,__SOURCE_PREFIX__,__IDS_TO_FRAMEWORKS__});\\\",\\\"locationsMap\\\":{}},\\\"storySource\\\":{\\\"source\\\":\\\"import { action } from '@storybook/addon-actions'\\\\nimport { boolean, number, object, text } from '@storybook/addon-knobs'\\\\nimport React from 'react'\\\\nimport NumInput from '.'\\\\nimport { path } from '..'\\\\nimport ThemeWrapper from '../../../utilities/components/ThemeWrapper'\\\\nimport Box from '../../atoms/Box'\\\\nimport Position from '../Position'\\\\n\\\\nexport default {\\\\n  title: `${path}/NumInput`,\\\\n  component: NumInput\\\\n}\\\\n\\\\nexport const DefaultField = () => (\\\\n  <ThemeWrapper>\\\\n    <Box p='1em'>\\\\n      <NumInput\\\\n        id='someId'\\\\n        name='someName'\\\\n        className='someClassName'\\\\n        label={text('label', 'Username')}\\\\n        labelColor={text('labelColor', 'text.inputLabel.default')}\\\\n        placeholder={text('placeholder', 'Enter text here...')}\\\\n        maxLength={number('maxLength', 10)}\\\\n        error={boolean('error', false)}\\\\n        errorMessage={text('errorMessage', '')}\\\\n        required={boolean('required', false)}\\\\n        fullWidth={boolean('fullWidth', false)}\\\\n        onChange={action('Triggered: onChange')}\\\\n        tooltipMesaage={text('tooltipMesaage', 'i am default label tooltip')}\\\\n      />\\\\n    </Box>\\\\n  </ThemeWrapper>\\\\n)\\\\n\\\\nexport const RequiredField = () => (\\\\n  <ThemeWrapper>\\\\n    <Box p='1em'>\\\\n      <NumInput\\\\n        id='someId'\\\\n        name='someName'\\\\n        className='someClassName'\\\\n        label={text('label', 'Username')}\\\\n        labelColor={text('labelColor', 'text.inputLabel.default')}\\\\n        placeholder={text('placeholder', 'Enter text here...')}\\\\n        maxLength={number('maxLength', 10)}\\\\n        error={boolean('error', false)}\\\\n        errorMessage={text('errorMessage', '')}\\\\n        required={boolean('required', true)}\\\\n        fullWidth={boolean('fullWidth', false)}\\\\n        onChange={action('Triggered: onChange')}\\\\n      />\\\\n    </Box>\\\\n  </ThemeWrapper>\\\\n)\\\\nexport const ErrorField = () => (\\\\n  <ThemeWrapper>\\\\n    <Box p='1em'>\\\\n      <NumInput\\\\n        id='someId'\\\\n        name='someName'\\\\n        className='someClassName'\\\\n        label={text('label', 'Username')}\\\\n        labelColor={text('labelColor', 'text.inputLabel.default')}\\\\n        placeholder={text('placeholder', 'Enter text here...')}\\\\n        maxLength={number('maxLength', 10)}\\\\n        error={boolean('error', true)}\\\\n        errorMessage={text('errorMessage', 'Some Field Error')}\\\\n        required={boolean('required', false)}\\\\n        fullWidth={boolean('fullWidth', false)}\\\\n        onChange={action('Triggered: onChange')}\\\\n      />\\\\n    </Box>\\\\n  </ThemeWrapper>\\\\n)\\\\n\\\\nexport const WithOutBorder = () => (\\\\n  <ThemeWrapper>\\\\n    <Box bgColor='grey.100' p='2em'>\\\\n      <NumInput\\\\n        id='someId'\\\\n        name='someName'\\\\n        className='someClassName'\\\\n        maxLength={number('maxLength', 10)}\\\\n        error={boolean('error', false)}\\\\n        onChange={action('Triggered: onChange')}\\\\n        variant='inline-edit'\\\\n      />\\\\n    </Box>\\\\n  </ThemeWrapper>\\\\n)\\\\n\\\\nexport const withIcon = () => (\\\\n  <ThemeWrapper>\\\\n    <Box p='2em'>\\\\n      <Position\\\\n        type='relative'\\\\n        display='block'\\\\n        style={object('WrapperStyle', {\\\\n          // boxShadow: '2px 3px 10px 0px lightgrey',\\\\n          width: '50%'\\\\n        })}\\\\n      >\\\\n        <NumInput\\\\n          id='someId'\\\\n          name='someName'\\\\n          className='someClassName'\\\\n          placeholder={text('placeholder', 'Enter text here...')}\\\\n          maxLength={number('maxLength', 10)}\\\\n          error={boolean('error', false)}\\\\n          errorMessage={text('errorMessage', 'Some Field Error')}\\\\n          required={boolean('required', false)}\\\\n          fullWidth={boolean('fullWidth', true)}\\\\n          onChange={action('Triggered: onChange')}\\\\n          // border={boolean('border', false)}\\\\n          color={text('color', 'primary.main')}\\\\n          variant='withIcon'\\\\n          iconVariant='calendar'\\\\n          iconSize={15}\\\\n          // iconStyle={{ padding: '7px 7px 7px 7px' }}\\\\n          // style={object('style', {\\\\n          //   fontSize: '14px',\\\\n          //   minHeight: '30px'\\\\n          // })}\\\\n        />\\\\n      </Position>\\\\n    </Box>\\\\n  </ThemeWrapper>\\\\n)\\\\n\\\",\\\"locationsMap\\\":{}},},\\n  title: `${path}/NumInput`,\\n  component: NumInput\\n}\\n\\nexport const DefaultField = addSourceDecorator(addSourceDecorator(() => (\\n  <ThemeWrapper>\\n    <Box p='1em'>\\n      <NumInput\\n        id='someId'\\n        name='someName'\\n        className='someClassName'\\n        label={text('label', 'Username')}\\n        labelColor={text('labelColor', 'text.inputLabel.default')}\\n        placeholder={text('placeholder', 'Enter text here...')}\\n        maxLength={number('maxLength', 10)}\\n        error={boolean('error', false)}\\n        errorMessage={text('errorMessage', '')}\\n        required={boolean('required', false)}\\n        fullWidth={boolean('fullWidth', false)}\\n        onChange={action('Triggered: onChange')}\\n        tooltipMesaage={text('tooltipMesaage', 'i am default label tooltip')}\\n      />\\n    </Box>\\n  </ThemeWrapper>\\n), {__STORY__, __ADDS_MAP__,__MAIN_FILE_LOCATION__,__MODULE_DEPENDENCIES__,__LOCAL_DEPENDENCIES__,__SOURCE_PREFIX__,__IDS_TO_FRAMEWORKS__}), {__STORY__, __ADDS_MAP__,__MAIN_FILE_LOCATION__,__MODULE_DEPENDENCIES__,__LOCAL_DEPENDENCIES__,__SOURCE_PREFIX__,__IDS_TO_FRAMEWORKS__});;\\n\\nexport const RequiredField = addSourceDecorator(addSourceDecorator(() => (\\n  <ThemeWrapper>\\n    <Box p='1em'>\\n      <NumInput\\n        id='someId'\\n        name='someName'\\n        className='someClassName'\\n        label={text('label', 'Username')}\\n        labelColor={text('labelColor', 'text.inputLabel.default')}\\n        placeholder={text('placeholder', 'Enter text here...')}\\n        maxLength={number('maxLength', 10)}\\n        error={boolean('error', false)}\\n        errorMessage={text('errorMessage', '')}\\n        required={boolean('required', true)}\\n        fullWidth={boolean('fullWidth', false)}\\n        onChange={action('Triggered: onChange')}\\n      />\\n    </Box>\\n  </ThemeWrapper>\\n), {__STORY__, __ADDS_MAP__,__MAIN_FILE_LOCATION__,__MODULE_DEPENDENCIES__,__LOCAL_DEPENDENCIES__,__SOURCE_PREFIX__,__IDS_TO_FRAMEWORKS__}), {__STORY__, __ADDS_MAP__,__MAIN_FILE_LOCATION__,__MODULE_DEPENDENCIES__,__LOCAL_DEPENDENCIES__,__SOURCE_PREFIX__,__IDS_TO_FRAMEWORKS__});;\\nexport const ErrorField = addSourceDecorator(addSourceDecorator(() => (\\n  <ThemeWrapper>\\n    <Box p='1em'>\\n      <NumInput\\n        id='someId'\\n        name='someName'\\n        className='someClassName'\\n        label={text('label', 'Username')}\\n        labelColor={text('labelColor', 'text.inputLabel.default')}\\n        placeholder={text('placeholder', 'Enter text here...')}\\n        maxLength={number('maxLength', 10)}\\n        error={boolean('error', true)}\\n        errorMessage={text('errorMessage', 'Some Field Error')}\\n        required={boolean('required', false)}\\n        fullWidth={boolean('fullWidth', false)}\\n        onChange={action('Triggered: onChange')}\\n      />\\n    </Box>\\n  </ThemeWrapper>\\n), {__STORY__, __ADDS_MAP__,__MAIN_FILE_LOCATION__,__MODULE_DEPENDENCIES__,__LOCAL_DEPENDENCIES__,__SOURCE_PREFIX__,__IDS_TO_FRAMEWORKS__}), {__STORY__, __ADDS_MAP__,__MAIN_FILE_LOCATION__,__MODULE_DEPENDENCIES__,__LOCAL_DEPENDENCIES__,__SOURCE_PREFIX__,__IDS_TO_FRAMEWORKS__});;\\n\\nexport const WithOutBorder = addSourceDecorator(addSourceDecorator(() => (\\n  <ThemeWrapper>\\n    <Box bgColor='grey.100' p='2em'>\\n      <NumInput\\n        id='someId'\\n        name='someName'\\n        className='someClassName'\\n        maxLength={number('maxLength', 10)}\\n        error={boolean('error', false)}\\n        onChange={action('Triggered: onChange')}\\n        variant='inline-edit'\\n      />\\n    </Box>\\n  </ThemeWrapper>\\n), {__STORY__, __ADDS_MAP__,__MAIN_FILE_LOCATION__,__MODULE_DEPENDENCIES__,__LOCAL_DEPENDENCIES__,__SOURCE_PREFIX__,__IDS_TO_FRAMEWORKS__}), {__STORY__, __ADDS_MAP__,__MAIN_FILE_LOCATION__,__MODULE_DEPENDENCIES__,__LOCAL_DEPENDENCIES__,__SOURCE_PREFIX__,__IDS_TO_FRAMEWORKS__});;\\n\\nexport const withIcon = addSourceDecorator(addSourceDecorator(() => (\\n  <ThemeWrapper>\\n    <Box p='2em'>\\n      <Position\\n        type='relative'\\n        display='block'\\n        style={object('WrapperStyle', {\\n          // boxShadow: '2px 3px 10px 0px lightgrey',\\n          width: '50%'\\n        })}\\n      >\\n        <NumInput\\n          id='someId'\\n          name='someName'\\n          className='someClassName'\\n          placeholder={text('placeholder', 'Enter text here...')}\\n          maxLength={number('maxLength', 10)}\\n          error={boolean('error', false)}\\n          errorMessage={text('errorMessage', 'Some Field Error')}\\n          required={boolean('required', false)}\\n          fullWidth={boolean('fullWidth', true)}\\n          onChange={action('Triggered: onChange')}\\n          // border={boolean('border', false)}\\n          color={text('color', 'primary.main')}\\n          variant='withIcon'\\n          iconVariant='calendar'\\n          iconSize={15}\\n          // iconStyle={{ padding: '7px 7px 7px 7px' }}\\n          // style={object('style', {\\n          //   fontSize: '14px',\\n          //   minHeight: '30px'\\n          // })}\\n        />\\n      </Position>\\n    </Box>\\n  </ThemeWrapper>\\n), {__STORY__, __ADDS_MAP__,__MAIN_FILE_LOCATION__,__MODULE_DEPENDENCIES__,__LOCAL_DEPENDENCIES__,__SOURCE_PREFIX__,__IDS_TO_FRAMEWORKS__}), {__STORY__, __ADDS_MAP__,__MAIN_FILE_LOCATION__,__MODULE_DEPENDENCIES__,__LOCAL_DEPENDENCIES__,__SOURCE_PREFIX__,__IDS_TO_FRAMEWORKS__});\",\n      \"locationsMap\": {}\n    }\n  }, _defineProperty(_parameters, \"storySource\", {\n    \"source\": \"\\n\\n// @ts-nocheck\\n// @ts-ignore\\nvar withSourceLoader = require('@storybook/source-loader/preview').withSource;\\n// @ts-ignore\\nvar addSourceDecorator = require(\\\"@storybook/source-loader/preview\\\").addSource;\\n// @ts-ignore\\nvar __SOURCE_PREFIX__ = \\\"/Users/farhanansari/Code/ui-library/src/components/molecules/NumInput\\\";\\n// @ts-ignore\\nvar __STORY__ = \\\"import { action } from '@storybook/addon-actions'\\\\nimport { boolean, number, object, text } from '@storybook/addon-knobs'\\\\nimport React from 'react'\\\\nimport NumInput from '.'\\\\nimport { path } from '..'\\\\nimport ThemeWrapper from '../../../utilities/components/ThemeWrapper'\\\\nimport Box from '../../atoms/Box'\\\\nimport Position from '../Position'\\\\n\\\\nexport default {\\\\n  title: `${path}/NumInput`,\\\\n  component: NumInput\\\\n}\\\\n\\\\nexport const DefaultField = () => (\\\\n  <ThemeWrapper>\\\\n    <Box p='1em'>\\\\n      <NumInput\\\\n        id='someId'\\\\n        name='someName'\\\\n        className='someClassName'\\\\n        label={text('label', 'Username')}\\\\n        labelColor={text('labelColor', 'text.inputLabel.default')}\\\\n        placeholder={text('placeholder', 'Enter text here...')}\\\\n        maxLength={number('maxLength', 10)}\\\\n        error={boolean('error', false)}\\\\n        errorMessage={text('errorMessage', '')}\\\\n        required={boolean('required', false)}\\\\n        fullWidth={boolean('fullWidth', false)}\\\\n        onChange={action('Triggered: onChange')}\\\\n        tooltipMesaage={text('tooltipMesaage', 'i am default label tooltip')}\\\\n      />\\\\n    </Box>\\\\n  </ThemeWrapper>\\\\n)\\\\n\\\\nexport const RequiredField = () => (\\\\n  <ThemeWrapper>\\\\n    <Box p='1em'>\\\\n      <NumInput\\\\n        id='someId'\\\\n        name='someName'\\\\n        className='someClassName'\\\\n        label={text('label', 'Username')}\\\\n        labelColor={text('labelColor', 'text.inputLabel.default')}\\\\n        placeholder={text('placeholder', 'Enter text here...')}\\\\n        maxLength={number('maxLength', 10)}\\\\n        error={boolean('error', false)}\\\\n        errorMessage={text('errorMessage', '')}\\\\n        required={boolean('required', true)}\\\\n        fullWidth={boolean('fullWidth', false)}\\\\n        onChange={action('Triggered: onChange')}\\\\n      />\\\\n    </Box>\\\\n  </ThemeWrapper>\\\\n)\\\\nexport const ErrorField = () => (\\\\n  <ThemeWrapper>\\\\n    <Box p='1em'>\\\\n      <NumInput\\\\n        id='someId'\\\\n        name='someName'\\\\n        className='someClassName'\\\\n        label={text('label', 'Username')}\\\\n        labelColor={text('labelColor', 'text.inputLabel.default')}\\\\n        placeholder={text('placeholder', 'Enter text here...')}\\\\n        maxLength={number('maxLength', 10)}\\\\n        error={boolean('error', true)}\\\\n        errorMessage={text('errorMessage', 'Some Field Error')}\\\\n        required={boolean('required', false)}\\\\n        fullWidth={boolean('fullWidth', false)}\\\\n        onChange={action('Triggered: onChange')}\\\\n      />\\\\n    </Box>\\\\n  </ThemeWrapper>\\\\n)\\\\n\\\\nexport const WithOutBorder = () => (\\\\n  <ThemeWrapper>\\\\n    <Box bgColor='grey.100' p='2em'>\\\\n      <NumInput\\\\n        id='someId'\\\\n        name='someName'\\\\n        className='someClassName'\\\\n        maxLength={number('maxLength', 10)}\\\\n        error={boolean('error', false)}\\\\n        onChange={action('Triggered: onChange')}\\\\n        variant='inline-edit'\\\\n      />\\\\n    </Box>\\\\n  </ThemeWrapper>\\\\n)\\\\n\\\\nexport const withIcon = () => (\\\\n  <ThemeWrapper>\\\\n    <Box p='2em'>\\\\n      <Position\\\\n        type='relative'\\\\n        display='block'\\\\n        style={object('WrapperStyle', {\\\\n          // boxShadow: '2px 3px 10px 0px lightgrey',\\\\n          width: '50%'\\\\n        })}\\\\n      >\\\\n        <NumInput\\\\n          id='someId'\\\\n          name='someName'\\\\n          className='someClassName'\\\\n          placeholder={text('placeholder', 'Enter text here...')}\\\\n          maxLength={number('maxLength', 10)}\\\\n          error={boolean('error', false)}\\\\n          errorMessage={text('errorMessage', 'Some Field Error')}\\\\n          required={boolean('required', false)}\\\\n          fullWidth={boolean('fullWidth', true)}\\\\n          onChange={action('Triggered: onChange')}\\\\n          // border={boolean('border', false)}\\\\n          color={text('color', 'primary.main')}\\\\n          variant='withIcon'\\\\n          iconVariant='calendar'\\\\n          iconSize={15}\\\\n          // iconStyle={{ padding: '7px 7px 7px 7px' }}\\\\n          // style={object('style', {\\\\n          //   fontSize: '14px',\\\\n          //   minHeight: '30px'\\\\n          // })}\\\\n        />\\\\n      </Position>\\\\n    </Box>\\\\n  </ThemeWrapper>\\\\n)\\\\n\\\";\\n// @ts-ignore\\nvar __ADDS_MAP__ = {};\\n// @ts-ignore\\nvar __MAIN_FILE_LOCATION__ = \\\"/NumtInput.stories.tsx\\\";\\n// @ts-ignore\\nvar __MODULE_DEPENDENCIES__ = [];\\n// @ts-ignore\\nvar __LOCAL_DEPENDENCIES__ = {};\\n// @ts-ignore\\nvar __IDS_TO_FRAMEWORKS__ = {};\\n        \\nimport { action } from '@storybook/addon-actions'\\nimport { boolean, number, object, text } from '@storybook/addon-knobs'\\nimport React from 'react'\\nimport NumInput from '.'\\nimport { path } from '..'\\nimport ThemeWrapper from '../../../utilities/components/ThemeWrapper'\\nimport Box from '../../atoms/Box'\\nimport Position from '../Position'\\n\\nexport default {parameters: {\\\"storySource\\\":{\\\"source\\\":\\\"import { action } from '@storybook/addon-actions'\\\\nimport { boolean, number, object, text } from '@storybook/addon-knobs'\\\\nimport React from 'react'\\\\nimport NumInput from '.'\\\\nimport { path } from '..'\\\\nimport ThemeWrapper from '../../../utilities/components/ThemeWrapper'\\\\nimport Box from '../../atoms/Box'\\\\nimport Position from '../Position'\\\\n\\\\nexport default {\\\\n  title: `${path}/NumInput`,\\\\n  component: NumInput\\\\n}\\\\n\\\\nexport const DefaultField = () => (\\\\n  <ThemeWrapper>\\\\n    <Box p='1em'>\\\\n      <NumInput\\\\n        id='someId'\\\\n        name='someName'\\\\n        className='someClassName'\\\\n        label={text('label', 'Username')}\\\\n        labelColor={text('labelColor', 'text.inputLabel.default')}\\\\n        placeholder={text('placeholder', 'Enter text here...')}\\\\n        maxLength={number('maxLength', 10)}\\\\n        error={boolean('error', false)}\\\\n        errorMessage={text('errorMessage', '')}\\\\n        required={boolean('required', false)}\\\\n        fullWidth={boolean('fullWidth', false)}\\\\n        onChange={action('Triggered: onChange')}\\\\n        tooltipMesaage={text('tooltipMesaage', 'i am default label tooltip')}\\\\n      />\\\\n    </Box>\\\\n  </ThemeWrapper>\\\\n)\\\\n\\\\nexport const RequiredField = () => (\\\\n  <ThemeWrapper>\\\\n    <Box p='1em'>\\\\n      <NumInput\\\\n        id='someId'\\\\n        name='someName'\\\\n        className='someClassName'\\\\n        label={text('label', 'Username')}\\\\n        labelColor={text('labelColor', 'text.inputLabel.default')}\\\\n        placeholder={text('placeholder', 'Enter text here...')}\\\\n        maxLength={number('maxLength', 10)}\\\\n        error={boolean('error', false)}\\\\n        errorMessage={text('errorMessage', '')}\\\\n        required={boolean('required', true)}\\\\n        fullWidth={boolean('fullWidth', false)}\\\\n        onChange={action('Triggered: onChange')}\\\\n      />\\\\n    </Box>\\\\n  </ThemeWrapper>\\\\n)\\\\nexport const ErrorField = () => (\\\\n  <ThemeWrapper>\\\\n    <Box p='1em'>\\\\n      <NumInput\\\\n        id='someId'\\\\n        name='someName'\\\\n        className='someClassName'\\\\n        label={text('label', 'Username')}\\\\n        labelColor={text('labelColor', 'text.inputLabel.default')}\\\\n        placeholder={text('placeholder', 'Enter text here...')}\\\\n        maxLength={number('maxLength', 10)}\\\\n        error={boolean('error', true)}\\\\n        errorMessage={text('errorMessage', 'Some Field Error')}\\\\n        required={boolean('required', false)}\\\\n        fullWidth={boolean('fullWidth', false)}\\\\n        onChange={action('Triggered: onChange')}\\\\n      />\\\\n    </Box>\\\\n  </ThemeWrapper>\\\\n)\\\\n\\\\nexport const WithOutBorder = () => (\\\\n  <ThemeWrapper>\\\\n    <Box bgColor='grey.100' p='2em'>\\\\n      <NumInput\\\\n        id='someId'\\\\n        name='someName'\\\\n        className='someClassName'\\\\n        maxLength={number('maxLength', 10)}\\\\n        error={boolean('error', false)}\\\\n        onChange={action('Triggered: onChange')}\\\\n        variant='inline-edit'\\\\n      />\\\\n    </Box>\\\\n  </ThemeWrapper>\\\\n)\\\\n\\\\nexport const withIcon = () => (\\\\n  <ThemeWrapper>\\\\n    <Box p='2em'>\\\\n      <Position\\\\n        type='relative'\\\\n        display='block'\\\\n        style={object('WrapperStyle', {\\\\n          // boxShadow: '2px 3px 10px 0px lightgrey',\\\\n          width: '50%'\\\\n        })}\\\\n      >\\\\n        <NumInput\\\\n          id='someId'\\\\n          name='someName'\\\\n          className='someClassName'\\\\n          placeholder={text('placeholder', 'Enter text here...')}\\\\n          maxLength={number('maxLength', 10)}\\\\n          error={boolean('error', false)}\\\\n          errorMessage={text('errorMessage', 'Some Field Error')}\\\\n          required={boolean('required', false)}\\\\n          fullWidth={boolean('fullWidth', true)}\\\\n          onChange={action('Triggered: onChange')}\\\\n          // border={boolean('border', false)}\\\\n          color={text('color', 'primary.main')}\\\\n          variant='withIcon'\\\\n          iconVariant='calendar'\\\\n          iconSize={15}\\\\n          // iconStyle={{ padding: '7px 7px 7px 7px' }}\\\\n          // style={object('style', {\\\\n          //   fontSize: '14px',\\\\n          //   minHeight: '30px'\\\\n          // })}\\\\n        />\\\\n      </Position>\\\\n    </Box>\\\\n  </ThemeWrapper>\\\\n)\\\\n\\\",\\\"locationsMap\\\":{}},},\\n  title: `${path}/NumInput`,\\n  component: NumInput\\n}\\n\\nexport const DefaultField = addSourceDecorator(() => (\\n  <ThemeWrapper>\\n    <Box p='1em'>\\n      <NumInput\\n        id='someId'\\n        name='someName'\\n        className='someClassName'\\n        label={text('label', 'Username')}\\n        labelColor={text('labelColor', 'text.inputLabel.default')}\\n        placeholder={text('placeholder', 'Enter text here...')}\\n        maxLength={number('maxLength', 10)}\\n        error={boolean('error', false)}\\n        errorMessage={text('errorMessage', '')}\\n        required={boolean('required', false)}\\n        fullWidth={boolean('fullWidth', false)}\\n        onChange={action('Triggered: onChange')}\\n        tooltipMesaage={text('tooltipMesaage', 'i am default label tooltip')}\\n      />\\n    </Box>\\n  </ThemeWrapper>\\n), {__STORY__, __ADDS_MAP__,__MAIN_FILE_LOCATION__,__MODULE_DEPENDENCIES__,__LOCAL_DEPENDENCIES__,__SOURCE_PREFIX__,__IDS_TO_FRAMEWORKS__});\\n\\nexport const RequiredField = addSourceDecorator(() => (\\n  <ThemeWrapper>\\n    <Box p='1em'>\\n      <NumInput\\n        id='someId'\\n        name='someName'\\n        className='someClassName'\\n        label={text('label', 'Username')}\\n        labelColor={text('labelColor', 'text.inputLabel.default')}\\n        placeholder={text('placeholder', 'Enter text here...')}\\n        maxLength={number('maxLength', 10)}\\n        error={boolean('error', false)}\\n        errorMessage={text('errorMessage', '')}\\n        required={boolean('required', true)}\\n        fullWidth={boolean('fullWidth', false)}\\n        onChange={action('Triggered: onChange')}\\n      />\\n    </Box>\\n  </ThemeWrapper>\\n), {__STORY__, __ADDS_MAP__,__MAIN_FILE_LOCATION__,__MODULE_DEPENDENCIES__,__LOCAL_DEPENDENCIES__,__SOURCE_PREFIX__,__IDS_TO_FRAMEWORKS__});\\nexport const ErrorField = addSourceDecorator(() => (\\n  <ThemeWrapper>\\n    <Box p='1em'>\\n      <NumInput\\n        id='someId'\\n        name='someName'\\n        className='someClassName'\\n        label={text('label', 'Username')}\\n        labelColor={text('labelColor', 'text.inputLabel.default')}\\n        placeholder={text('placeholder', 'Enter text here...')}\\n        maxLength={number('maxLength', 10)}\\n        error={boolean('error', true)}\\n        errorMessage={text('errorMessage', 'Some Field Error')}\\n        required={boolean('required', false)}\\n        fullWidth={boolean('fullWidth', false)}\\n        onChange={action('Triggered: onChange')}\\n      />\\n    </Box>\\n  </ThemeWrapper>\\n), {__STORY__, __ADDS_MAP__,__MAIN_FILE_LOCATION__,__MODULE_DEPENDENCIES__,__LOCAL_DEPENDENCIES__,__SOURCE_PREFIX__,__IDS_TO_FRAMEWORKS__});\\n\\nexport const WithOutBorder = addSourceDecorator(() => (\\n  <ThemeWrapper>\\n    <Box bgColor='grey.100' p='2em'>\\n      <NumInput\\n        id='someId'\\n        name='someName'\\n        className='someClassName'\\n        maxLength={number('maxLength', 10)}\\n        error={boolean('error', false)}\\n        onChange={action('Triggered: onChange')}\\n        variant='inline-edit'\\n      />\\n    </Box>\\n  </ThemeWrapper>\\n), {__STORY__, __ADDS_MAP__,__MAIN_FILE_LOCATION__,__MODULE_DEPENDENCIES__,__LOCAL_DEPENDENCIES__,__SOURCE_PREFIX__,__IDS_TO_FRAMEWORKS__});\\n\\nexport const withIcon = addSourceDecorator(() => (\\n  <ThemeWrapper>\\n    <Box p='2em'>\\n      <Position\\n        type='relative'\\n        display='block'\\n        style={object('WrapperStyle', {\\n          // boxShadow: '2px 3px 10px 0px lightgrey',\\n          width: '50%'\\n        })}\\n      >\\n        <NumInput\\n          id='someId'\\n          name='someName'\\n          className='someClassName'\\n          placeholder={text('placeholder', 'Enter text here...')}\\n          maxLength={number('maxLength', 10)}\\n          error={boolean('error', false)}\\n          errorMessage={text('errorMessage', 'Some Field Error')}\\n          required={boolean('required', false)}\\n          fullWidth={boolean('fullWidth', true)}\\n          onChange={action('Triggered: onChange')}\\n          // border={boolean('border', false)}\\n          color={text('color', 'primary.main')}\\n          variant='withIcon'\\n          iconVariant='calendar'\\n          iconSize={15}\\n          // iconStyle={{ padding: '7px 7px 7px 7px' }}\\n          // style={object('style', {\\n          //   fontSize: '14px',\\n          //   minHeight: '30px'\\n          // })}\\n        />\\n      </Position>\\n    </Box>\\n  </ThemeWrapper>\\n), {__STORY__, __ADDS_MAP__,__MAIN_FILE_LOCATION__,__MODULE_DEPENDENCIES__,__LOCAL_DEPENDENCIES__,__SOURCE_PREFIX__,__IDS_TO_FRAMEWORKS__});\",\n    \"locationsMap\": {}\n  }), _defineProperty(_parameters, \"storySource\", {\n    \"source\": \"import { action } from '@storybook/addon-actions'\\nimport { boolean, number, object, text } from '@storybook/addon-knobs'\\nimport React from 'react'\\nimport NumInput from '.'\\nimport { path } from '..'\\nimport ThemeWrapper from '../../../utilities/components/ThemeWrapper'\\nimport Box from '../../atoms/Box'\\nimport Position from '../Position'\\n\\nexport default {\\n  title: `${path}/NumInput`,\\n  component: NumInput\\n}\\n\\nexport const DefaultField = () => (\\n  <ThemeWrapper>\\n    <Box p='1em'>\\n      <NumInput\\n        id='someId'\\n        name='someName'\\n        className='someClassName'\\n        label={text('label', 'Username')}\\n        labelColor={text('labelColor', 'text.inputLabel.default')}\\n        placeholder={text('placeholder', 'Enter text here...')}\\n        maxLength={number('maxLength', 10)}\\n        error={boolean('error', false)}\\n        errorMessage={text('errorMessage', '')}\\n        required={boolean('required', false)}\\n        fullWidth={boolean('fullWidth', false)}\\n        onChange={action('Triggered: onChange')}\\n        tooltipMesaage={text('tooltipMesaage', 'i am default label tooltip')}\\n      />\\n    </Box>\\n  </ThemeWrapper>\\n)\\n\\nexport const RequiredField = () => (\\n  <ThemeWrapper>\\n    <Box p='1em'>\\n      <NumInput\\n        id='someId'\\n        name='someName'\\n        className='someClassName'\\n        label={text('label', 'Username')}\\n        labelColor={text('labelColor', 'text.inputLabel.default')}\\n        placeholder={text('placeholder', 'Enter text here...')}\\n        maxLength={number('maxLength', 10)}\\n        error={boolean('error', false)}\\n        errorMessage={text('errorMessage', '')}\\n        required={boolean('required', true)}\\n        fullWidth={boolean('fullWidth', false)}\\n        onChange={action('Triggered: onChange')}\\n      />\\n    </Box>\\n  </ThemeWrapper>\\n)\\nexport const ErrorField = () => (\\n  <ThemeWrapper>\\n    <Box p='1em'>\\n      <NumInput\\n        id='someId'\\n        name='someName'\\n        className='someClassName'\\n        label={text('label', 'Username')}\\n        labelColor={text('labelColor', 'text.inputLabel.default')}\\n        placeholder={text('placeholder', 'Enter text here...')}\\n        maxLength={number('maxLength', 10)}\\n        error={boolean('error', true)}\\n        errorMessage={text('errorMessage', 'Some Field Error')}\\n        required={boolean('required', false)}\\n        fullWidth={boolean('fullWidth', false)}\\n        onChange={action('Triggered: onChange')}\\n      />\\n    </Box>\\n  </ThemeWrapper>\\n)\\n\\nexport const WithOutBorder = () => (\\n  <ThemeWrapper>\\n    <Box bgColor='grey.100' p='2em'>\\n      <NumInput\\n        id='someId'\\n        name='someName'\\n        className='someClassName'\\n        maxLength={number('maxLength', 10)}\\n        error={boolean('error', false)}\\n        onChange={action('Triggered: onChange')}\\n        variant='inline-edit'\\n      />\\n    </Box>\\n  </ThemeWrapper>\\n)\\n\\nexport const withIcon = () => (\\n  <ThemeWrapper>\\n    <Box p='2em'>\\n      <Position\\n        type='relative'\\n        display='block'\\n        style={object('WrapperStyle', {\\n          // boxShadow: '2px 3px 10px 0px lightgrey',\\n          width: '50%'\\n        })}\\n      >\\n        <NumInput\\n          id='someId'\\n          name='someName'\\n          className='someClassName'\\n          placeholder={text('placeholder', 'Enter text here...')}\\n          maxLength={number('maxLength', 10)}\\n          error={boolean('error', false)}\\n          errorMessage={text('errorMessage', 'Some Field Error')}\\n          required={boolean('required', false)}\\n          fullWidth={boolean('fullWidth', true)}\\n          onChange={action('Triggered: onChange')}\\n          // border={boolean('border', false)}\\n          color={text('color', 'primary.main')}\\n          variant='withIcon'\\n          iconVariant='calendar'\\n          iconSize={15}\\n          // iconStyle={{ padding: '7px 7px 7px 7px' }}\\n          // style={object('style', {\\n          //   fontSize: '14px',\\n          //   minHeight: '30px'\\n          // })}\\n        />\\n      </Position>\\n    </Box>\\n  </ThemeWrapper>\\n)\\n\",\n    \"locationsMap\": {}\n  }), _parameters),\n  title: path + \"/NumInput\",\n  component: NumInput\n};\nexport var DefaultField = addSourceDecorator(addSourceDecorator(addSourceDecorator(function () {\n  return React.createElement(ThemeWrapper, null, React.createElement(Box, {\n    p: '1em'\n  }, React.createElement(NumInput, {\n    id: 'someId',\n    name: 'someName',\n    className: 'someClassName',\n    label: text('label', 'Username'),\n    labelColor: text('labelColor', 'text.inputLabel.default'),\n    placeholder: text('placeholder', 'Enter text here...'),\n    maxLength: number('maxLength', 10),\n    error: _boolean('error', false),\n    errorMessage: text('errorMessage', ''),\n    required: _boolean('required', false),\n    fullWidth: _boolean('fullWidth', false),\n    onChange: action('Triggered: onChange'),\n    tooltipMesaage: text('tooltipMesaage', 'i am default label tooltip')\n  })));\n}, {\n  __STORY__: __STORY__,\n  __ADDS_MAP__: __ADDS_MAP__,\n  __MAIN_FILE_LOCATION__: __MAIN_FILE_LOCATION__,\n  __MODULE_DEPENDENCIES__: __MODULE_DEPENDENCIES__,\n  __LOCAL_DEPENDENCIES__: __LOCAL_DEPENDENCIES__,\n  __SOURCE_PREFIX__: __SOURCE_PREFIX__,\n  __IDS_TO_FRAMEWORKS__: __IDS_TO_FRAMEWORKS__\n}), {\n  __STORY__: __STORY__,\n  __ADDS_MAP__: __ADDS_MAP__,\n  __MAIN_FILE_LOCATION__: __MAIN_FILE_LOCATION__,\n  __MODULE_DEPENDENCIES__: __MODULE_DEPENDENCIES__,\n  __LOCAL_DEPENDENCIES__: __LOCAL_DEPENDENCIES__,\n  __SOURCE_PREFIX__: __SOURCE_PREFIX__,\n  __IDS_TO_FRAMEWORKS__: __IDS_TO_FRAMEWORKS__\n}), {\n  __STORY__: __STORY__,\n  __ADDS_MAP__: __ADDS_MAP__,\n  __MAIN_FILE_LOCATION__: __MAIN_FILE_LOCATION__,\n  __MODULE_DEPENDENCIES__: __MODULE_DEPENDENCIES__,\n  __LOCAL_DEPENDENCIES__: __LOCAL_DEPENDENCIES__,\n  __SOURCE_PREFIX__: __SOURCE_PREFIX__,\n  __IDS_TO_FRAMEWORKS__: __IDS_TO_FRAMEWORKS__\n});\n;\n;\nexport var RequiredField = addSourceDecorator(addSourceDecorator(addSourceDecorator(function () {\n  return React.createElement(ThemeWrapper, null, React.createElement(Box, {\n    p: '1em'\n  }, React.createElement(NumInput, {\n    id: 'someId',\n    name: 'someName',\n    className: 'someClassName',\n    label: text('label', 'Username'),\n    labelColor: text('labelColor', 'text.inputLabel.default'),\n    placeholder: text('placeholder', 'Enter text here...'),\n    maxLength: number('maxLength', 10),\n    error: _boolean('error', false),\n    errorMessage: text('errorMessage', ''),\n    required: _boolean('required', true),\n    fullWidth: _boolean('fullWidth', false),\n    onChange: action('Triggered: onChange')\n  })));\n}, {\n  __STORY__: __STORY__,\n  __ADDS_MAP__: __ADDS_MAP__,\n  __MAIN_FILE_LOCATION__: __MAIN_FILE_LOCATION__,\n  __MODULE_DEPENDENCIES__: __MODULE_DEPENDENCIES__,\n  __LOCAL_DEPENDENCIES__: __LOCAL_DEPENDENCIES__,\n  __SOURCE_PREFIX__: __SOURCE_PREFIX__,\n  __IDS_TO_FRAMEWORKS__: __IDS_TO_FRAMEWORKS__\n}), {\n  __STORY__: __STORY__,\n  __ADDS_MAP__: __ADDS_MAP__,\n  __MAIN_FILE_LOCATION__: __MAIN_FILE_LOCATION__,\n  __MODULE_DEPENDENCIES__: __MODULE_DEPENDENCIES__,\n  __LOCAL_DEPENDENCIES__: __LOCAL_DEPENDENCIES__,\n  __SOURCE_PREFIX__: __SOURCE_PREFIX__,\n  __IDS_TO_FRAMEWORKS__: __IDS_TO_FRAMEWORKS__\n}), {\n  __STORY__: __STORY__,\n  __ADDS_MAP__: __ADDS_MAP__,\n  __MAIN_FILE_LOCATION__: __MAIN_FILE_LOCATION__,\n  __MODULE_DEPENDENCIES__: __MODULE_DEPENDENCIES__,\n  __LOCAL_DEPENDENCIES__: __LOCAL_DEPENDENCIES__,\n  __SOURCE_PREFIX__: __SOURCE_PREFIX__,\n  __IDS_TO_FRAMEWORKS__: __IDS_TO_FRAMEWORKS__\n});\n;\n;\nexport var ErrorField = addSourceDecorator(addSourceDecorator(addSourceDecorator(function () {\n  return React.createElement(ThemeWrapper, null, React.createElement(Box, {\n    p: '1em'\n  }, React.createElement(NumInput, {\n    id: 'someId',\n    name: 'someName',\n    className: 'someClassName',\n    label: text('label', 'Username'),\n    labelColor: text('labelColor', 'text.inputLabel.default'),\n    placeholder: text('placeholder', 'Enter text here...'),\n    maxLength: number('maxLength', 10),\n    error: _boolean('error', true),\n    errorMessage: text('errorMessage', 'Some Field Error'),\n    required: _boolean('required', false),\n    fullWidth: _boolean('fullWidth', false),\n    onChange: action('Triggered: onChange')\n  })));\n}, {\n  __STORY__: __STORY__,\n  __ADDS_MAP__: __ADDS_MAP__,\n  __MAIN_FILE_LOCATION__: __MAIN_FILE_LOCATION__,\n  __MODULE_DEPENDENCIES__: __MODULE_DEPENDENCIES__,\n  __LOCAL_DEPENDENCIES__: __LOCAL_DEPENDENCIES__,\n  __SOURCE_PREFIX__: __SOURCE_PREFIX__,\n  __IDS_TO_FRAMEWORKS__: __IDS_TO_FRAMEWORKS__\n}), {\n  __STORY__: __STORY__,\n  __ADDS_MAP__: __ADDS_MAP__,\n  __MAIN_FILE_LOCATION__: __MAIN_FILE_LOCATION__,\n  __MODULE_DEPENDENCIES__: __MODULE_DEPENDENCIES__,\n  __LOCAL_DEPENDENCIES__: __LOCAL_DEPENDENCIES__,\n  __SOURCE_PREFIX__: __SOURCE_PREFIX__,\n  __IDS_TO_FRAMEWORKS__: __IDS_TO_FRAMEWORKS__\n}), {\n  __STORY__: __STORY__,\n  __ADDS_MAP__: __ADDS_MAP__,\n  __MAIN_FILE_LOCATION__: __MAIN_FILE_LOCATION__,\n  __MODULE_DEPENDENCIES__: __MODULE_DEPENDENCIES__,\n  __LOCAL_DEPENDENCIES__: __LOCAL_DEPENDENCIES__,\n  __SOURCE_PREFIX__: __SOURCE_PREFIX__,\n  __IDS_TO_FRAMEWORKS__: __IDS_TO_FRAMEWORKS__\n});\n;\n;\nexport var WithOutBorder = addSourceDecorator(addSourceDecorator(addSourceDecorator(function () {\n  return React.createElement(ThemeWrapper, null, React.createElement(Box, {\n    bgColor: 'grey.100',\n    p: '2em'\n  }, React.createElement(NumInput, {\n    id: 'someId',\n    name: 'someName',\n    className: 'someClassName',\n    maxLength: number('maxLength', 10),\n    error: _boolean('error', false),\n    onChange: action('Triggered: onChange'),\n    variant: 'inline-edit'\n  })));\n}, {\n  __STORY__: __STORY__,\n  __ADDS_MAP__: __ADDS_MAP__,\n  __MAIN_FILE_LOCATION__: __MAIN_FILE_LOCATION__,\n  __MODULE_DEPENDENCIES__: __MODULE_DEPENDENCIES__,\n  __LOCAL_DEPENDENCIES__: __LOCAL_DEPENDENCIES__,\n  __SOURCE_PREFIX__: __SOURCE_PREFIX__,\n  __IDS_TO_FRAMEWORKS__: __IDS_TO_FRAMEWORKS__\n}), {\n  __STORY__: __STORY__,\n  __ADDS_MAP__: __ADDS_MAP__,\n  __MAIN_FILE_LOCATION__: __MAIN_FILE_LOCATION__,\n  __MODULE_DEPENDENCIES__: __MODULE_DEPENDENCIES__,\n  __LOCAL_DEPENDENCIES__: __LOCAL_DEPENDENCIES__,\n  __SOURCE_PREFIX__: __SOURCE_PREFIX__,\n  __IDS_TO_FRAMEWORKS__: __IDS_TO_FRAMEWORKS__\n}), {\n  __STORY__: __STORY__,\n  __ADDS_MAP__: __ADDS_MAP__,\n  __MAIN_FILE_LOCATION__: __MAIN_FILE_LOCATION__,\n  __MODULE_DEPENDENCIES__: __MODULE_DEPENDENCIES__,\n  __LOCAL_DEPENDENCIES__: __LOCAL_DEPENDENCIES__,\n  __SOURCE_PREFIX__: __SOURCE_PREFIX__,\n  __IDS_TO_FRAMEWORKS__: __IDS_TO_FRAMEWORKS__\n});\n;\n;\nexport var withIcon = addSourceDecorator(addSourceDecorator(addSourceDecorator(function () {\n  return React.createElement(ThemeWrapper, null, React.createElement(Box, {\n    p: '2em'\n  }, React.createElement(Position, {\n    type: 'relative',\n    display: 'block',\n    style: object('WrapperStyle', {\n      // boxShadow: '2px 3px 10px 0px lightgrey',\n      width: '50%'\n    })\n  }, React.createElement(NumInput, {\n    id: 'someId',\n    name: 'someName',\n    className: 'someClassName',\n    placeholder: text('placeholder', 'Enter text here...'),\n    maxLength: number('maxLength', 10),\n    error: _boolean('error', false),\n    errorMessage: text('errorMessage', 'Some Field Error'),\n    required: _boolean('required', false),\n    fullWidth: _boolean('fullWidth', true),\n    onChange: action('Triggered: onChange'),\n    // border={boolean('border', false)}\n    color: text('color', 'primary.main'),\n    variant: 'withIcon',\n    iconVariant: 'calendar',\n    iconSize: 15\n  }))));\n}, {\n  __STORY__: __STORY__,\n  __ADDS_MAP__: __ADDS_MAP__,\n  __MAIN_FILE_LOCATION__: __MAIN_FILE_LOCATION__,\n  __MODULE_DEPENDENCIES__: __MODULE_DEPENDENCIES__,\n  __LOCAL_DEPENDENCIES__: __LOCAL_DEPENDENCIES__,\n  __SOURCE_PREFIX__: __SOURCE_PREFIX__,\n  __IDS_TO_FRAMEWORKS__: __IDS_TO_FRAMEWORKS__\n}), {\n  __STORY__: __STORY__,\n  __ADDS_MAP__: __ADDS_MAP__,\n  __MAIN_FILE_LOCATION__: __MAIN_FILE_LOCATION__,\n  __MODULE_DEPENDENCIES__: __MODULE_DEPENDENCIES__,\n  __LOCAL_DEPENDENCIES__: __LOCAL_DEPENDENCIES__,\n  __SOURCE_PREFIX__: __SOURCE_PREFIX__,\n  __IDS_TO_FRAMEWORKS__: __IDS_TO_FRAMEWORKS__\n}), {\n  __STORY__: __STORY__,\n  __ADDS_MAP__: __ADDS_MAP__,\n  __MAIN_FILE_LOCATION__: __MAIN_FILE_LOCATION__,\n  __MODULE_DEPENDENCIES__: __MODULE_DEPENDENCIES__,\n  __LOCAL_DEPENDENCIES__: __LOCAL_DEPENDENCIES__,\n  __SOURCE_PREFIX__: __SOURCE_PREFIX__,\n  __IDS_TO_FRAMEWORKS__: __IDS_TO_FRAMEWORKS__\n});","map":{"version":3,"sources":["/Users/farhanansari/Code/ui-library/node_modules/react-docgen-typescript-loader/dist/index.js!/Users/farhanansari/Code/ui-library/node_modules/eslint-loader/dist/cjs.js??ref--6-0!/Users/farhanansari/Code/ui-library/node_modules/@storybook/source-loader/dist/server/index.js??ref--11!/Users/farhanansari/Code/ui-library/node_modules/@storybook/source-loader/dist/server/index.js!/Users/farhanansari/Code/ui-library/node_modules/@storybook/source-loader/dist/server/index.js!/Users/farhanansari/Code/ui-library/src/components/molecules/NumInput/NumtInput.stories.tsx"],"names":[],"mappings":";;;;AACA;AACA;AACA;AACA,IAAI,gBAAgB,GAAG,OAAO,CAAC,kCAAD,CAAP,CAA4C,UAAnE,C,CACA;;;AACA,IAAI,kBAAkB,GAAG,OAAO,CAAC,kCAAD,CAAP,CAA4C,SAArE,C,CACA;;;AACA,IAAI,iBAAiB,GAAG,uEAAxB,C,CACA;;AACA,IAAI,SAAS,GAAG,sz4CAAhB,C,CACA;;AACA,IAAI,YAAY,GAAG,EAAnB,C,CACA;;AACA,IAAI,sBAAsB,GAAG,wBAA7B,C,CACA;;AACA,IAAI,uBAAuB,GAAG,EAA9B,C,CACA;;AACA,IAAI,sBAAsB,GAAG,EAA7B,C,CACA;;AACA,IAAI,qBAAqB,GAAG,EAA5B;AAGA;AACA;AACA;;AACA,IAAI,gBAAgB,GAAG,OAAO,CAAC,kCAAD,CAAP,CAA4C,UAAnE,C,CACA;;;AACA,IAAI,kBAAkB,GAAG,OAAO,CAAC,kCAAD,CAAP,CAA4C,SAArE,C,CACA;;;AACA,IAAI,iBAAiB,GAAG,uEAAxB,C,CACA;;AACA,IAAI,SAAS,GAAG,k1bAAhB,C,CACA;;AACA,IAAI,YAAY,GAAG,EAAnB,C,CACA;;AACA,IAAI,sBAAsB,GAAG,wBAA7B,C,CACA;;AACA,IAAI,uBAAuB,GAAG,EAA9B,C,CACA;;AACA,IAAI,sBAAsB,GAAG,EAA7B,C,CACA;;AACA,IAAI,qBAAqB,GAAG,EAA5B;AAGA;AACA;AACA;;AACA,IAAI,gBAAgB,GAAG,OAAO,CAAC,kCAAD,CAAP,CAA4C,UAAnE,C,CACA;;;AACA,IAAI,kBAAkB,GAAG,OAAO,CAAC,kCAAD,CAAP,CAA4C,SAArE,C,CACA;;;AACA,IAAI,iBAAiB,GAAG,uEAAxB,C,CACA;;AACA,IAAI,SAAS,GAAG,0iIAAhB,C,CACA;;AACA,IAAI,YAAY,GAAG,EAAnB,C,CACA;;AACA,IAAI,sBAAsB,GAAG,wBAA7B,C,CACA;;AACA,IAAI,uBAAuB,GAAG,EAA9B,C,CACA;;AACA,IAAI,sBAAsB,GAAG,EAA7B,C,CACA;;AACA,IAAI,qBAAqB,GAAG,EAA5B;AAEA,SAAS,MAAT,QAAuB,0BAAvB;AACA,SAAS,OAAO,IAAP,QAAT,EAAkB,MAAlB,EAA0B,MAA1B,EAAkC,IAAlC,QAA8C,wBAA9C;AACA,OAAO,KAAP,MAAkB,OAAlB;AACA,OAAO,QAAP,MAAqB,GAArB;AACA,SAAS,IAAT,QAAqB,IAArB;AACA,OAAO,YAAP,MAAyB,4CAAzB;AACA,OAAO,GAAP,MAAgB,iBAAhB;AACA,OAAO,QAAP,MAAqB,aAArB;AAEA,eAAe;AAAC,EAAA,UAAU;AAAG,mBAAc;AAAC,gBAAS,sz4CAAV;AAAi04C,sBAAe;AAAh14C;AAAjB,iDAAm34C;AAAC,cAAS,k1bAAV;AAA61b,oBAAe;AAA52b,GAAn34C,+CAAiv0D;AAAC,cAAS,0iIAAV;AAAqjI,oBAAe;AAApkI,GAAjv0D,eAAX;AACb,EAAA,KAAK,EAAK,IAAI,GAAA,WADD;AAEb,EAAA,SAAS,EAAE;AAFE,CAAf;AAKA,OAAO,IAAM,YAAY,GAAG,kBAAkB,CAAC,kBAAkB,CAAC,kBAAkB,CAAC,YAAA;AAAM,SACzF,KAAA,CAAA,aAAA,CAAC,YAAD,EAAa,IAAb,EACE,KAAA,CAAA,aAAA,CAAC,GAAD,EAAI;AAAC,IAAA,CAAC,EAAC;AAAH,GAAJ,EACE,KAAA,CAAA,aAAA,CAAC,QAAD,EAAS;AACP,IAAA,EAAE,EAAC,QADI;AAEP,IAAA,IAAI,EAAC,UAFE;AAGP,IAAA,SAAS,EAAC,eAHH;AAIP,IAAA,KAAK,EAAE,IAAI,CAAC,OAAD,EAAU,UAAV,CAJJ;AAKP,IAAA,UAAU,EAAE,IAAI,CAAC,YAAD,EAAe,yBAAf,CALT;AAMP,IAAA,WAAW,EAAE,IAAI,CAAC,aAAD,EAAgB,oBAAhB,CANV;AAOP,IAAA,SAAS,EAAE,MAAM,CAAC,WAAD,EAAc,EAAd,CAPV;AAQP,IAAA,KAAK,EAAE,QAAO,CAAC,OAAD,EAAU,KAAV,CARP;AASP,IAAA,YAAY,EAAE,IAAI,CAAC,cAAD,EAAiB,EAAjB,CATX;AAUP,IAAA,QAAQ,EAAE,QAAO,CAAC,UAAD,EAAa,KAAb,CAVV;AAWP,IAAA,SAAS,EAAE,QAAO,CAAC,WAAD,EAAc,KAAd,CAXX;AAYP,IAAA,QAAQ,EAAE,MAAM,CAAC,qBAAD,CAZT;AAaP,IAAA,cAAc,EAAE,IAAI,CAAC,gBAAD,EAhB+D,4BAgB/D;AAbb,GAAT,CADF,CADF,CADyF;AAoB1F,CApBmF,EAoBjF;AAAC,EAAA,SAAS,EAAA,SAAV;AAAY,EAAA,YAAY,EAAA,YAAxB;AAAyB,EAAA,sBAAsB,EAAA,sBAA/C;AAAgD,EAAA,uBAAuB,EAAA,uBAAvE;AAAwE,EAAA,sBAAsB,EAAA,sBAA9F;AAA+F,EAAA,iBAAiB,EAAA,iBAAhH;AAAiH,EAAA,qBAAqB,EAAA;AAAtI,CApBiF,CAAnB,EAoB4E;AAAC,EAAA,SAAS,EAAA,SAAV;AAAY,EAAA,YAAY,EAAA,YAAxB;AAAyB,EAAA,sBAAsB,EAAA,sBAA/C;AAAgD,EAAA,uBAAuB,EAAA,uBAAvE;AAAwE,EAAA,sBAAsB,EAAA,sBAA9F;AAA+F,EAAA,iBAAiB,EAAA,iBAAhH;AAAiH,EAAA,qBAAqB,EAAA;AAAtI,CApB5E,CAAnB,EAoByO;AAAC,EAAA,SAAS,EAAA,SAAV;AAAY,EAAA,YAAY,EAAA,YAAxB;AAAyB,EAAA,sBAAsB,EAAA,sBAA/C;AAAgD,EAAA,uBAAuB,EAAA,uBAAvE;AAAwE,EAAA,sBAAsB,EAAA,sBAA9F;AAA+F,EAAA,iBAAiB,EAAA,iBAAhH;AAAiH,EAAA,qBAAqB,EAAA;AAAtI,CApBzO,CAAvC;AAoByZ;AAAC;AAEja,OAAO,IAAM,aAAa,GAAG,kBAAkB,CAAC,kBAAkB,CAAC,kBAAkB,CAAC,YAAA;AAAM,SAC1F,KAAA,CAAA,aAAA,CAAC,YAAD,EAAa,IAAb,EACE,KAAA,CAAA,aAAA,CAAC,GAAD,EAAI;AAAC,IAAA,CAAC,EAAC;AAAH,GAAJ,EACE,KAAA,CAAA,aAAA,CAAC,QAAD,EAAS;AACP,IAAA,EAAE,EAAC,QADI;AAEP,IAAA,IAAI,EAAC,UAFE;AAGP,IAAA,SAAS,EAAC,eAHH;AAIP,IAAA,KAAK,EAAE,IAAI,CAAC,OAAD,EAAU,UAAV,CAJJ;AAKP,IAAA,UAAU,EAAE,IAAI,CAAC,YAAD,EAAe,yBAAf,CALT;AAMP,IAAA,WAAW,EAAE,IAAI,CAAC,aAAD,EAAgB,oBAAhB,CANV;AAOP,IAAA,SAAS,EAAE,MAAM,CAAC,WAAD,EAAc,EAAd,CAPV;AAQP,IAAA,KAAK,EAAE,QAAO,CAAC,OAAD,EAAU,KAAV,CARP;AASP,IAAA,YAAY,EAAE,IAAI,CAAC,cAAD,EAAiB,EAAjB,CATX;AAUP,IAAA,QAAQ,EAAE,QAAO,CAAC,UAAD,EAAa,IAAb,CAVV;AAWP,IAAA,SAAS,EAAE,QAAO,CAAC,WAAD,EAAc,KAAd,CAXX;AAYP,IAAA,QAAQ,EAAE,MAAM,CAfoE,qBAepE;AAZT,GAAT,CADF,CADF,CAD0F;AAmB3F,CAnBoF,EAmBlF;AAAC,EAAA,SAAS,EAAA,SAAV;AAAY,EAAA,YAAY,EAAA,YAAxB;AAAyB,EAAA,sBAAsB,EAAA,sBAA/C;AAAgD,EAAA,uBAAuB,EAAA,uBAAvE;AAAwE,EAAA,sBAAsB,EAAA,sBAA9F;AAA+F,EAAA,iBAAiB,EAAA,iBAAhH;AAAiH,EAAA,qBAAqB,EAAA;AAAtI,CAnBkF,CAAnB,EAmB2E;AAAC,EAAA,SAAS,EAAA,SAAV;AAAY,EAAA,YAAY,EAAA,YAAxB;AAAyB,EAAA,sBAAsB,EAAA,sBAA/C;AAAgD,EAAA,uBAAuB,EAAA,uBAAvE;AAAwE,EAAA,sBAAsB,EAAA,sBAA9F;AAA+F,EAAA,iBAAiB,EAAA,iBAAhH;AAAiH,EAAA,qBAAqB,EAAA;AAAtI,CAnB3E,CAAnB,EAmBwO;AAAC,EAAA,SAAS,EAAA,SAAV;AAAY,EAAA,YAAY,EAAA,YAAxB;AAAyB,EAAA,sBAAsB,EAAA,sBAA/C;AAAgD,EAAA,uBAAuB,EAAA,uBAAvE;AAAwE,EAAA,sBAAsB,EAAA,sBAA9F;AAA+F,EAAA,iBAAiB,EAAA,iBAAhH;AAAiH,EAAA,qBAAqB,EAAA;AAAtI,CAnBxO,CAAxC;AAmByZ;AAAC;AACja,OAAO,IAAM,UAAU,GAAG,kBAAkB,CAAC,kBAAkB,CAAC,kBAAkB,CAAC,YAAA;AAAM,SACvF,KAAA,CAAA,aAAA,CAAC,YAAD,EAAa,IAAb,EACE,KAAA,CAAA,aAAA,CAAC,GAAD,EAAI;AAAC,IAAA,CAAC,EAAC;AAAH,GAAJ,EACE,KAAA,CAAA,aAAA,CAAC,QAAD,EAAS;AACP,IAAA,EAAE,EAAC,QADI;AAEP,IAAA,IAAI,EAAC,UAFE;AAGP,IAAA,SAAS,EAAC,eAHH;AAIP,IAAA,KAAK,EAAE,IAAI,CAAC,OAAD,EAAU,UAAV,CAJJ;AAKP,IAAA,UAAU,EAAE,IAAI,CAAC,YAAD,EAAe,yBAAf,CALT;AAMP,IAAA,WAAW,EAAE,IAAI,CAAC,aAAD,EAAgB,oBAAhB,CANV;AAOP,IAAA,SAAS,EAAE,MAAM,CAAC,WAAD,EAAc,EAAd,CAPV;AAQP,IAAA,KAAK,EAAE,QAAO,CAAC,OAAD,EAAU,IAAV,CARP;AASP,IAAA,YAAY,EAAE,IAAI,CAAC,cAAD,EAAiB,kBAAjB,CATX;AAUP,IAAA,QAAQ,EAAE,QAAO,CAAC,UAAD,EAAa,KAAb,CAVV;AAWP,IAAA,SAAS,EAAE,QAAO,CAAC,WAAD,EAAc,KAAd,CAXX;AAYP,IAAA,QAAQ,EAAE,MAAM,CAfiE,qBAejE;AAZT,GAAT,CADF,CADF,CADuF;AAmBxF,CAnBiF,EAmB/E;AAAC,EAAA,SAAS,EAAA,SAAV;AAAY,EAAA,YAAY,EAAA,YAAxB;AAAyB,EAAA,sBAAsB,EAAA,sBAA/C;AAAgD,EAAA,uBAAuB,EAAA,uBAAvE;AAAwE,EAAA,sBAAsB,EAAA,sBAA9F;AAA+F,EAAA,iBAAiB,EAAA,iBAAhH;AAAiH,EAAA,qBAAqB,EAAA;AAAtI,CAnB+E,CAAnB,EAmB8E;AAAC,EAAA,SAAS,EAAA,SAAV;AAAY,EAAA,YAAY,EAAA,YAAxB;AAAyB,EAAA,sBAAsB,EAAA,sBAA/C;AAAgD,EAAA,uBAAuB,EAAA,uBAAvE;AAAwE,EAAA,sBAAsB,EAAA,sBAA9F;AAA+F,EAAA,iBAAiB,EAAA,iBAAhH;AAAiH,EAAA,qBAAqB,EAAA;AAAtI,CAnB9E,CAAnB,EAmB2O;AAAC,EAAA,SAAS,EAAA,SAAV;AAAY,EAAA,YAAY,EAAA,YAAxB;AAAyB,EAAA,sBAAsB,EAAA,sBAA/C;AAAgD,EAAA,uBAAuB,EAAA,uBAAvE;AAAwE,EAAA,sBAAsB,EAAA,sBAA9F;AAA+F,EAAA,iBAAiB,EAAA,iBAAhH;AAAiH,EAAA,qBAAqB,EAAA;AAAtI,CAnB3O,CAArC;AAmByZ;AAAC;AAEja,OAAO,IAAM,aAAa,GAAG,kBAAkB,CAAC,kBAAkB,CAAC,kBAAkB,CAAC,YAAA;AAAM,SAC1F,KAAA,CAAA,aAAA,CAAC,YAAD,EAAa,IAAb,EACE,KAAA,CAAA,aAAA,CAAC,GAAD,EAAI;AAAC,IAAA,OAAO,EAAC,UAAT;AAAoB,IAAA,CAAC,EAAC;AAAtB,GAAJ,EACE,KAAA,CAAA,aAAA,CAAC,QAAD,EAAS;AACP,IAAA,EAAE,EAAC,QADI;AAEP,IAAA,IAAI,EAAC,UAFE;AAGP,IAAA,SAAS,EAAC,eAHH;AAIP,IAAA,SAAS,EAAE,MAAM,CAAC,WAAD,EAAc,EAAd,CAJV;AAKP,IAAA,KAAK,EAAE,QAAO,CAAC,OAAD,EAAU,KAAV,CALP;AAMP,IAAA,QAAQ,EAAE,MAAM,CAAC,qBAAD,CANT;AAOP,IAAA,OAAO,EAV6E;AAG7E,GAAT,CADF,CADF,CAD0F;AAc3F,CAdoF,EAclF;AAAC,EAAA,SAAS,EAAA,SAAV;AAAY,EAAA,YAAY,EAAA,YAAxB;AAAyB,EAAA,sBAAsB,EAAA,sBAA/C;AAAgD,EAAA,uBAAuB,EAAA,uBAAvE;AAAwE,EAAA,sBAAsB,EAAA,sBAA9F;AAA+F,EAAA,iBAAiB,EAAA,iBAAhH;AAAiH,EAAA,qBAAqB,EAAA;AAAtI,CAdkF,CAAnB,EAc2E;AAAC,EAAA,SAAS,EAAA,SAAV;AAAY,EAAA,YAAY,EAAA,YAAxB;AAAyB,EAAA,sBAAsB,EAAA,sBAA/C;AAAgD,EAAA,uBAAuB,EAAA,uBAAvE;AAAwE,EAAA,sBAAsB,EAAA,sBAA9F;AAA+F,EAAA,iBAAiB,EAAA,iBAAhH;AAAiH,EAAA,qBAAqB,EAAA;AAAtI,CAd3E,CAAnB,EAcwO;AAAC,EAAA,SAAS,EAAA,SAAV;AAAY,EAAA,YAAY,EAAA,YAAxB;AAAyB,EAAA,sBAAsB,EAAA,sBAA/C;AAAgD,EAAA,uBAAuB,EAAA,uBAAvE;AAAwE,EAAA,sBAAsB,EAAA,sBAA9F;AAA+F,EAAA,iBAAiB,EAAA,iBAAhH;AAAiH,EAAA,qBAAqB,EAAA;AAAtI,CAdxO,CAAxC;AAcyZ;AAAC;AAEja,OAAO,IAAM,QAAQ,GAAG,kBAAkB,CAAC,kBAAkB,CAAC,kBAAkB,CAAC,YAAA;AAAM,SACrF,KAAA,CAAA,aAAA,CAAC,YAAD,EAAa,IAAb,EACE,KAAA,CAAA,aAAA,CAAC,GAAD,EAAI;AAAC,IAAA,CAAC,EAAC;AAAH,GAAJ,EACE,KAAA,CAAA,aAAA,CAAC,QAAD,EAAS;AACP,IAAA,IAAI,EAAC,UADE;AAEP,IAAA,OAAO,EAAC,OAFD;AAGP,IAAA,KAAK,EAAE,MAAM,CAAC,cAAD,EAAiB;AAC5B;AACA,MAAA,KAAK,EAAE;AAFqB,KAAjB;AAHN,GAAT,EAQE,KAAA,CAAA,aAAA,CAAC,QAAD,EAAS;AACP,IAAA,EAAE,EAAC,QADI;AAEP,IAAA,IAAI,EAAC,UAFE;AAGP,IAAA,SAAS,EAAC,eAHH;AAIP,IAAA,WAAW,EAAE,IAAI,CAAC,aAAD,EAAgB,oBAAhB,CAJV;AAKP,IAAA,SAAS,EAAE,MAAM,CAAC,WAAD,EAAc,EAAd,CALV;AAMP,IAAA,KAAK,EAAE,QAAO,CAAC,OAAD,EAAU,KAAV,CANP;AAOP,IAAA,YAAY,EAAE,IAAI,CAAC,cAAD,EAAiB,kBAAjB,CAPX;AAQP,IAAA,QAAQ,EAAE,QAAO,CAAC,UAAD,EAAa,KAAb,CARV;AASP,IAAA,SAAS,EAAE,QAAO,CAAC,WAAD,EAAc,IAAd,CATX;AAUP,IAAA,QAAQ,EAAE,MAAM,CAAC,qBAAD,CAVT;AAWP;AACA,IAAA,KAAK,EAAE,IAAI,CAAC,OAAD,EAAU,cAAV,CAZJ;AAaP,IAAA,OAAO,EAAC,UAbD;AAcP,IAAA,WAAW,EAAC,UAdL;AAeP,IAAA,QAAQ,EA1BqE;AAWtE,GAAT,CARF,CADF,CADF,CADqF;AAoCtF,CApC+E,EAoC7E;AAAC,EAAA,SAAS,EAAA,SAAV;AAAY,EAAA,YAAY,EAAA,YAAxB;AAAyB,EAAA,sBAAsB,EAAA,sBAA/C;AAAgD,EAAA,uBAAuB,EAAA,uBAAvE;AAAwE,EAAA,sBAAsB,EAAA,sBAA9F;AAA+F,EAAA,iBAAiB,EAAA,iBAAhH;AAAiH,EAAA,qBAAqB,EAAA;AAAtI,CApC6E,CAAnB,EAoCgF;AAAC,EAAA,SAAS,EAAA,SAAV;AAAY,EAAA,YAAY,EAAA,YAAxB;AAAyB,EAAA,sBAAsB,EAAA,sBAA/C;AAAgD,EAAA,uBAAuB,EAAA,uBAAvE;AAAwE,EAAA,sBAAsB,EAAA,sBAA9F;AAA+F,EAAA,iBAAiB,EAAA,iBAAhH;AAAiH,EAAA,qBAAqB,EAAA;AAAtI,CApChF,CAAnB,EAoC6O;AAAC,EAAA,SAAS,EAAA,SAAV;AAAY,EAAA,YAAY,EAAA,YAAxB;AAAyB,EAAA,sBAAsB,EAAA,sBAA/C;AAAgD,EAAA,uBAAuB,EAAA,uBAAvE;AAAwE,EAAA,sBAAsB,EAAA,sBAA9F;AAA+F,EAAA,iBAAiB,EAAA,iBAAhH;AAAiH,EAAA,qBAAqB,EAAA;AAAtI,CApC7O,CAAnC","sourcesContent":["\n/* eslint-disable */\n// @ts-nocheck\n// @ts-ignore\nvar withSourceLoader = require('@storybook/source-loader/preview').withSource;\n// @ts-ignore\nvar addSourceDecorator = require(\"@storybook/source-loader/preview\").addSource;\n// @ts-ignore\nvar __SOURCE_PREFIX__ = \"/Users/farhanansari/Code/ui-library/src/components/molecules/NumInput\";\n// @ts-ignore\nvar __STORY__ = \"\\n\\n// @ts-nocheck\\n// @ts-ignore\\nvar withSourceLoader = require('@storybook/source-loader/preview').withSource;\\n// @ts-ignore\\nvar addSourceDecorator = require(\\\"@storybook/source-loader/preview\\\").addSource;\\n// @ts-ignore\\nvar __SOURCE_PREFIX__ = \\\"/Users/farhanansari/Code/ui-library/src/components/molecules/NumInput\\\";\\n// @ts-ignore\\nvar __STORY__ = \\\"\\\\n\\\\n// @ts-nocheck\\\\n// @ts-ignore\\\\nvar withSourceLoader = require('@storybook/source-loader/preview').withSource;\\\\n// @ts-ignore\\\\nvar addSourceDecorator = require(\\\\\\\"@storybook/source-loader/preview\\\\\\\").addSource;\\\\n// @ts-ignore\\\\nvar __SOURCE_PREFIX__ = \\\\\\\"/Users/farhanansari/Code/ui-library/src/components/molecules/NumInput\\\\\\\";\\\\n// @ts-ignore\\\\nvar __STORY__ = \\\\\\\"import { action } from '@storybook/addon-actions'\\\\\\\\nimport { boolean, number, object, text } from '@storybook/addon-knobs'\\\\\\\\nimport React from 'react'\\\\\\\\nimport NumInput from '.'\\\\\\\\nimport { path } from '..'\\\\\\\\nimport ThemeWrapper from '../../../utilities/components/ThemeWrapper'\\\\\\\\nimport Box from '../../atoms/Box'\\\\\\\\nimport Position from '../Position'\\\\\\\\n\\\\\\\\nexport default {\\\\\\\\n  title: `${path}/NumInput`,\\\\\\\\n  component: NumInput\\\\\\\\n}\\\\\\\\n\\\\\\\\nexport const DefaultField = () => (\\\\\\\\n  <ThemeWrapper>\\\\\\\\n    <Box p='1em'>\\\\\\\\n      <NumInput\\\\\\\\n        id='someId'\\\\\\\\n        name='someName'\\\\\\\\n        className='someClassName'\\\\\\\\n        label={text('label', 'Username')}\\\\\\\\n        labelColor={text('labelColor', 'text.inputLabel.default')}\\\\\\\\n        placeholder={text('placeholder', 'Enter text here...')}\\\\\\\\n        maxLength={number('maxLength', 10)}\\\\\\\\n        error={boolean('error', false)}\\\\\\\\n        errorMessage={text('errorMessage', '')}\\\\\\\\n        required={boolean('required', false)}\\\\\\\\n        fullWidth={boolean('fullWidth', false)}\\\\\\\\n        onChange={action('Triggered: onChange')}\\\\\\\\n        tooltipMesaage={text('tooltipMesaage', 'i am default label tooltip')}\\\\\\\\n      />\\\\\\\\n    </Box>\\\\\\\\n  </ThemeWrapper>\\\\\\\\n)\\\\\\\\n\\\\\\\\nexport const RequiredField = () => (\\\\\\\\n  <ThemeWrapper>\\\\\\\\n    <Box p='1em'>\\\\\\\\n      <NumInput\\\\\\\\n        id='someId'\\\\\\\\n        name='someName'\\\\\\\\n        className='someClassName'\\\\\\\\n        label={text('label', 'Username')}\\\\\\\\n        labelColor={text('labelColor', 'text.inputLabel.default')}\\\\\\\\n        placeholder={text('placeholder', 'Enter text here...')}\\\\\\\\n        maxLength={number('maxLength', 10)}\\\\\\\\n        error={boolean('error', false)}\\\\\\\\n        errorMessage={text('errorMessage', '')}\\\\\\\\n        required={boolean('required', true)}\\\\\\\\n        fullWidth={boolean('fullWidth', false)}\\\\\\\\n        onChange={action('Triggered: onChange')}\\\\\\\\n      />\\\\\\\\n    </Box>\\\\\\\\n  </ThemeWrapper>\\\\\\\\n)\\\\\\\\nexport const ErrorField = () => (\\\\\\\\n  <ThemeWrapper>\\\\\\\\n    <Box p='1em'>\\\\\\\\n      <NumInput\\\\\\\\n        id='someId'\\\\\\\\n        name='someName'\\\\\\\\n        className='someClassName'\\\\\\\\n        label={text('label', 'Username')}\\\\\\\\n        labelColor={text('labelColor', 'text.inputLabel.default')}\\\\\\\\n        placeholder={text('placeholder', 'Enter text here...')}\\\\\\\\n        maxLength={number('maxLength', 10)}\\\\\\\\n        error={boolean('error', true)}\\\\\\\\n        errorMessage={text('errorMessage', 'Some Field Error')}\\\\\\\\n        required={boolean('required', false)}\\\\\\\\n        fullWidth={boolean('fullWidth', false)}\\\\\\\\n        onChange={action('Triggered: onChange')}\\\\\\\\n      />\\\\\\\\n    </Box>\\\\\\\\n  </ThemeWrapper>\\\\\\\\n)\\\\\\\\n\\\\\\\\nexport const WithOutBorder = () => (\\\\\\\\n  <ThemeWrapper>\\\\\\\\n    <Box bgColor='grey.100' p='2em'>\\\\\\\\n      <NumInput\\\\\\\\n        id='someId'\\\\\\\\n        name='someName'\\\\\\\\n        className='someClassName'\\\\\\\\n        maxLength={number('maxLength', 10)}\\\\\\\\n        error={boolean('error', false)}\\\\\\\\n        onChange={action('Triggered: onChange')}\\\\\\\\n        variant='inline-edit'\\\\\\\\n      />\\\\\\\\n    </Box>\\\\\\\\n  </ThemeWrapper>\\\\\\\\n)\\\\\\\\n\\\\\\\\nexport const withIcon = () => (\\\\\\\\n  <ThemeWrapper>\\\\\\\\n    <Box p='2em'>\\\\\\\\n      <Position\\\\\\\\n        type='relative'\\\\\\\\n        display='block'\\\\\\\\n        style={object('WrapperStyle', {\\\\\\\\n          // boxShadow: '2px 3px 10px 0px lightgrey',\\\\\\\\n          width: '50%'\\\\\\\\n        })}\\\\\\\\n      >\\\\\\\\n        <NumInput\\\\\\\\n          id='someId'\\\\\\\\n          name='someName'\\\\\\\\n          className='someClassName'\\\\\\\\n          placeholder={text('placeholder', 'Enter text here...')}\\\\\\\\n          maxLength={number('maxLength', 10)}\\\\\\\\n          error={boolean('error', false)}\\\\\\\\n          errorMessage={text('errorMessage', 'Some Field Error')}\\\\\\\\n          required={boolean('required', false)}\\\\\\\\n          fullWidth={boolean('fullWidth', true)}\\\\\\\\n          onChange={action('Triggered: onChange')}\\\\\\\\n          // border={boolean('border', false)}\\\\\\\\n          color={text('color', 'primary.main')}\\\\\\\\n          variant='withIcon'\\\\\\\\n          iconVariant='calendar'\\\\\\\\n          iconSize={15}\\\\\\\\n          // iconStyle={{ padding: '7px 7px 7px 7px' }}\\\\\\\\n          // style={object('style', {\\\\\\\\n          //   fontSize: '14px',\\\\\\\\n          //   minHeight: '30px'\\\\\\\\n          // })}\\\\\\\\n        />\\\\\\\\n      </Position>\\\\\\\\n    </Box>\\\\\\\\n  </ThemeWrapper>\\\\\\\\n)\\\\\\\\n\\\\\\\";\\\\n// @ts-ignore\\\\nvar __ADDS_MAP__ = {};\\\\n// @ts-ignore\\\\nvar __MAIN_FILE_LOCATION__ = \\\\\\\"/NumtInput.stories.tsx\\\\\\\";\\\\n// @ts-ignore\\\\nvar __MODULE_DEPENDENCIES__ = [];\\\\n// @ts-ignore\\\\nvar __LOCAL_DEPENDENCIES__ = {};\\\\n// @ts-ignore\\\\nvar __IDS_TO_FRAMEWORKS__ = {};\\\\n        \\\\nimport { action } from '@storybook/addon-actions'\\\\nimport { boolean, number, object, text } from '@storybook/addon-knobs'\\\\nimport React from 'react'\\\\nimport NumInput from '.'\\\\nimport { path } from '..'\\\\nimport ThemeWrapper from '../../../utilities/components/ThemeWrapper'\\\\nimport Box from '../../atoms/Box'\\\\nimport Position from '../Position'\\\\n\\\\nexport default {parameters: {\\\\\\\"storySource\\\\\\\":{\\\\\\\"source\\\\\\\":\\\\\\\"import { action } from '@storybook/addon-actions'\\\\\\\\nimport { boolean, number, object, text } from '@storybook/addon-knobs'\\\\\\\\nimport React from 'react'\\\\\\\\nimport NumInput from '.'\\\\\\\\nimport { path } from '..'\\\\\\\\nimport ThemeWrapper from '../../../utilities/components/ThemeWrapper'\\\\\\\\nimport Box from '../../atoms/Box'\\\\\\\\nimport Position from '../Position'\\\\\\\\n\\\\\\\\nexport default {\\\\\\\\n  title: `${path}/NumInput`,\\\\\\\\n  component: NumInput\\\\\\\\n}\\\\\\\\n\\\\\\\\nexport const DefaultField = () => (\\\\\\\\n  <ThemeWrapper>\\\\\\\\n    <Box p='1em'>\\\\\\\\n      <NumInput\\\\\\\\n        id='someId'\\\\\\\\n        name='someName'\\\\\\\\n        className='someClassName'\\\\\\\\n        label={text('label', 'Username')}\\\\\\\\n        labelColor={text('labelColor', 'text.inputLabel.default')}\\\\\\\\n        placeholder={text('placeholder', 'Enter text here...')}\\\\\\\\n        maxLength={number('maxLength', 10)}\\\\\\\\n        error={boolean('error', false)}\\\\\\\\n        errorMessage={text('errorMessage', '')}\\\\\\\\n        required={boolean('required', false)}\\\\\\\\n        fullWidth={boolean('fullWidth', false)}\\\\\\\\n        onChange={action('Triggered: onChange')}\\\\\\\\n        tooltipMesaage={text('tooltipMesaage', 'i am default label tooltip')}\\\\\\\\n      />\\\\\\\\n    </Box>\\\\\\\\n  </ThemeWrapper>\\\\\\\\n)\\\\\\\\n\\\\\\\\nexport const RequiredField = () => (\\\\\\\\n  <ThemeWrapper>\\\\\\\\n    <Box p='1em'>\\\\\\\\n      <NumInput\\\\\\\\n        id='someId'\\\\\\\\n        name='someName'\\\\\\\\n        className='someClassName'\\\\\\\\n        label={text('label', 'Username')}\\\\\\\\n        labelColor={text('labelColor', 'text.inputLabel.default')}\\\\\\\\n        placeholder={text('placeholder', 'Enter text here...')}\\\\\\\\n        maxLength={number('maxLength', 10)}\\\\\\\\n        error={boolean('error', false)}\\\\\\\\n        errorMessage={text('errorMessage', '')}\\\\\\\\n        required={boolean('required', true)}\\\\\\\\n        fullWidth={boolean('fullWidth', false)}\\\\\\\\n        onChange={action('Triggered: onChange')}\\\\\\\\n      />\\\\\\\\n    </Box>\\\\\\\\n  </ThemeWrapper>\\\\\\\\n)\\\\\\\\nexport const ErrorField = () => (\\\\\\\\n  <ThemeWrapper>\\\\\\\\n    <Box p='1em'>\\\\\\\\n      <NumInput\\\\\\\\n        id='someId'\\\\\\\\n        name='someName'\\\\\\\\n        className='someClassName'\\\\\\\\n        label={text('label', 'Username')}\\\\\\\\n        labelColor={text('labelColor', 'text.inputLabel.default')}\\\\\\\\n        placeholder={text('placeholder', 'Enter text here...')}\\\\\\\\n        maxLength={number('maxLength', 10)}\\\\\\\\n        error={boolean('error', true)}\\\\\\\\n        errorMessage={text('errorMessage', 'Some Field Error')}\\\\\\\\n        required={boolean('required', false)}\\\\\\\\n        fullWidth={boolean('fullWidth', false)}\\\\\\\\n        onChange={action('Triggered: onChange')}\\\\\\\\n      />\\\\\\\\n    </Box>\\\\\\\\n  </ThemeWrapper>\\\\\\\\n)\\\\\\\\n\\\\\\\\nexport const WithOutBorder = () => (\\\\\\\\n  <ThemeWrapper>\\\\\\\\n    <Box bgColor='grey.100' p='2em'>\\\\\\\\n      <NumInput\\\\\\\\n        id='someId'\\\\\\\\n        name='someName'\\\\\\\\n        className='someClassName'\\\\\\\\n        maxLength={number('maxLength', 10)}\\\\\\\\n        error={boolean('error', false)}\\\\\\\\n        onChange={action('Triggered: onChange')}\\\\\\\\n        variant='inline-edit'\\\\\\\\n      />\\\\\\\\n    </Box>\\\\\\\\n  </ThemeWrapper>\\\\\\\\n)\\\\\\\\n\\\\\\\\nexport const withIcon = () => (\\\\\\\\n  <ThemeWrapper>\\\\\\\\n    <Box p='2em'>\\\\\\\\n      <Position\\\\\\\\n        type='relative'\\\\\\\\n        display='block'\\\\\\\\n        style={object('WrapperStyle', {\\\\\\\\n          // boxShadow: '2px 3px 10px 0px lightgrey',\\\\\\\\n          width: '50%'\\\\\\\\n        })}\\\\\\\\n      >\\\\\\\\n        <NumInput\\\\\\\\n          id='someId'\\\\\\\\n          name='someName'\\\\\\\\n          className='someClassName'\\\\\\\\n          placeholder={text('placeholder', 'Enter text here...')}\\\\\\\\n          maxLength={number('maxLength', 10)}\\\\\\\\n          error={boolean('error', false)}\\\\\\\\n          errorMessage={text('errorMessage', 'Some Field Error')}\\\\\\\\n          required={boolean('required', false)}\\\\\\\\n          fullWidth={boolean('fullWidth', true)}\\\\\\\\n          onChange={action('Triggered: onChange')}\\\\\\\\n          // border={boolean('border', false)}\\\\\\\\n          color={text('color', 'primary.main')}\\\\\\\\n          variant='withIcon'\\\\\\\\n          iconVariant='calendar'\\\\\\\\n          iconSize={15}\\\\\\\\n          // iconStyle={{ padding: '7px 7px 7px 7px' }}\\\\\\\\n          // style={object('style', {\\\\\\\\n          //   fontSize: '14px',\\\\\\\\n          //   minHeight: '30px'\\\\\\\\n          // })}\\\\\\\\n        />\\\\\\\\n      </Position>\\\\\\\\n    </Box>\\\\\\\\n  </ThemeWrapper>\\\\\\\\n)\\\\\\\\n\\\\\\\",\\\\\\\"locationsMap\\\\\\\":{}},},\\\\n  title: `${path}/NumInput`,\\\\n  component: NumInput\\\\n}\\\\n\\\\nexport const DefaultField = addSourceDecorator(() => (\\\\n  <ThemeWrapper>\\\\n    <Box p='1em'>\\\\n      <NumInput\\\\n        id='someId'\\\\n        name='someName'\\\\n        className='someClassName'\\\\n        label={text('label', 'Username')}\\\\n        labelColor={text('labelColor', 'text.inputLabel.default')}\\\\n        placeholder={text('placeholder', 'Enter text here...')}\\\\n        maxLength={number('maxLength', 10)}\\\\n        error={boolean('error', false)}\\\\n        errorMessage={text('errorMessage', '')}\\\\n        required={boolean('required', false)}\\\\n        fullWidth={boolean('fullWidth', false)}\\\\n        onChange={action('Triggered: onChange')}\\\\n        tooltipMesaage={text('tooltipMesaage', 'i am default label tooltip')}\\\\n      />\\\\n    </Box>\\\\n  </ThemeWrapper>\\\\n), {__STORY__, __ADDS_MAP__,__MAIN_FILE_LOCATION__,__MODULE_DEPENDENCIES__,__LOCAL_DEPENDENCIES__,__SOURCE_PREFIX__,__IDS_TO_FRAMEWORKS__});\\\\n\\\\nexport const RequiredField = addSourceDecorator(() => (\\\\n  <ThemeWrapper>\\\\n    <Box p='1em'>\\\\n      <NumInput\\\\n        id='someId'\\\\n        name='someName'\\\\n        className='someClassName'\\\\n        label={text('label', 'Username')}\\\\n        labelColor={text('labelColor', 'text.inputLabel.default')}\\\\n        placeholder={text('placeholder', 'Enter text here...')}\\\\n        maxLength={number('maxLength', 10)}\\\\n        error={boolean('error', false)}\\\\n        errorMessage={text('errorMessage', '')}\\\\n        required={boolean('required', true)}\\\\n        fullWidth={boolean('fullWidth', false)}\\\\n        onChange={action('Triggered: onChange')}\\\\n      />\\\\n    </Box>\\\\n  </ThemeWrapper>\\\\n), {__STORY__, __ADDS_MAP__,__MAIN_FILE_LOCATION__,__MODULE_DEPENDENCIES__,__LOCAL_DEPENDENCIES__,__SOURCE_PREFIX__,__IDS_TO_FRAMEWORKS__});\\\\nexport const ErrorField = addSourceDecorator(() => (\\\\n  <ThemeWrapper>\\\\n    <Box p='1em'>\\\\n      <NumInput\\\\n        id='someId'\\\\n        name='someName'\\\\n        className='someClassName'\\\\n        label={text('label', 'Username')}\\\\n        labelColor={text('labelColor', 'text.inputLabel.default')}\\\\n        placeholder={text('placeholder', 'Enter text here...')}\\\\n        maxLength={number('maxLength', 10)}\\\\n        error={boolean('error', true)}\\\\n        errorMessage={text('errorMessage', 'Some Field Error')}\\\\n        required={boolean('required', false)}\\\\n        fullWidth={boolean('fullWidth', false)}\\\\n        onChange={action('Triggered: onChange')}\\\\n      />\\\\n    </Box>\\\\n  </ThemeWrapper>\\\\n), {__STORY__, __ADDS_MAP__,__MAIN_FILE_LOCATION__,__MODULE_DEPENDENCIES__,__LOCAL_DEPENDENCIES__,__SOURCE_PREFIX__,__IDS_TO_FRAMEWORKS__});\\\\n\\\\nexport const WithOutBorder = addSourceDecorator(() => (\\\\n  <ThemeWrapper>\\\\n    <Box bgColor='grey.100' p='2em'>\\\\n      <NumInput\\\\n        id='someId'\\\\n        name='someName'\\\\n        className='someClassName'\\\\n        maxLength={number('maxLength', 10)}\\\\n        error={boolean('error', false)}\\\\n        onChange={action('Triggered: onChange')}\\\\n        variant='inline-edit'\\\\n      />\\\\n    </Box>\\\\n  </ThemeWrapper>\\\\n), {__STORY__, __ADDS_MAP__,__MAIN_FILE_LOCATION__,__MODULE_DEPENDENCIES__,__LOCAL_DEPENDENCIES__,__SOURCE_PREFIX__,__IDS_TO_FRAMEWORKS__});\\\\n\\\\nexport const withIcon = addSourceDecorator(() => (\\\\n  <ThemeWrapper>\\\\n    <Box p='2em'>\\\\n      <Position\\\\n        type='relative'\\\\n        display='block'\\\\n        style={object('WrapperStyle', {\\\\n          // boxShadow: '2px 3px 10px 0px lightgrey',\\\\n          width: '50%'\\\\n        })}\\\\n      >\\\\n        <NumInput\\\\n          id='someId'\\\\n          name='someName'\\\\n          className='someClassName'\\\\n          placeholder={text('placeholder', 'Enter text here...')}\\\\n          maxLength={number('maxLength', 10)}\\\\n          error={boolean('error', false)}\\\\n          errorMessage={text('errorMessage', 'Some Field Error')}\\\\n          required={boolean('required', false)}\\\\n          fullWidth={boolean('fullWidth', true)}\\\\n          onChange={action('Triggered: onChange')}\\\\n          // border={boolean('border', false)}\\\\n          color={text('color', 'primary.main')}\\\\n          variant='withIcon'\\\\n          iconVariant='calendar'\\\\n          iconSize={15}\\\\n          // iconStyle={{ padding: '7px 7px 7px 7px' }}\\\\n          // style={object('style', {\\\\n          //   fontSize: '14px',\\\\n          //   minHeight: '30px'\\\\n          // })}\\\\n        />\\\\n      </Position>\\\\n    </Box>\\\\n  </ThemeWrapper>\\\\n), {__STORY__, __ADDS_MAP__,__MAIN_FILE_LOCATION__,__MODULE_DEPENDENCIES__,__LOCAL_DEPENDENCIES__,__SOURCE_PREFIX__,__IDS_TO_FRAMEWORKS__});\\\";\\n// @ts-ignore\\nvar __ADDS_MAP__ = {};\\n// @ts-ignore\\nvar __MAIN_FILE_LOCATION__ = \\\"/NumtInput.stories.tsx\\\";\\n// @ts-ignore\\nvar __MODULE_DEPENDENCIES__ = [];\\n// @ts-ignore\\nvar __LOCAL_DEPENDENCIES__ = {};\\n// @ts-ignore\\nvar __IDS_TO_FRAMEWORKS__ = {};\\n        \\n\\n\\n// @ts-nocheck\\n// @ts-ignore\\nvar withSourceLoader = require('@storybook/source-loader/preview').withSource;\\n// @ts-ignore\\nvar addSourceDecorator = require(\\\"@storybook/source-loader/preview\\\").addSource;\\n// @ts-ignore\\nvar __SOURCE_PREFIX__ = \\\"/Users/farhanansari/Code/ui-library/src/components/molecules/NumInput\\\";\\n// @ts-ignore\\nvar __STORY__ = \\\"import { action } from '@storybook/addon-actions'\\\\nimport { boolean, number, object, text } from '@storybook/addon-knobs'\\\\nimport React from 'react'\\\\nimport NumInput from '.'\\\\nimport { path } from '..'\\\\nimport ThemeWrapper from '../../../utilities/components/ThemeWrapper'\\\\nimport Box from '../../atoms/Box'\\\\nimport Position from '../Position'\\\\n\\\\nexport default {\\\\n  title: `${path}/NumInput`,\\\\n  component: NumInput\\\\n}\\\\n\\\\nexport const DefaultField = () => (\\\\n  <ThemeWrapper>\\\\n    <Box p='1em'>\\\\n      <NumInput\\\\n        id='someId'\\\\n        name='someName'\\\\n        className='someClassName'\\\\n        label={text('label', 'Username')}\\\\n        labelColor={text('labelColor', 'text.inputLabel.default')}\\\\n        placeholder={text('placeholder', 'Enter text here...')}\\\\n        maxLength={number('maxLength', 10)}\\\\n        error={boolean('error', false)}\\\\n        errorMessage={text('errorMessage', '')}\\\\n        required={boolean('required', false)}\\\\n        fullWidth={boolean('fullWidth', false)}\\\\n        onChange={action('Triggered: onChange')}\\\\n        tooltipMesaage={text('tooltipMesaage', 'i am default label tooltip')}\\\\n      />\\\\n    </Box>\\\\n  </ThemeWrapper>\\\\n)\\\\n\\\\nexport const RequiredField = () => (\\\\n  <ThemeWrapper>\\\\n    <Box p='1em'>\\\\n      <NumInput\\\\n        id='someId'\\\\n        name='someName'\\\\n        className='someClassName'\\\\n        label={text('label', 'Username')}\\\\n        labelColor={text('labelColor', 'text.inputLabel.default')}\\\\n        placeholder={text('placeholder', 'Enter text here...')}\\\\n        maxLength={number('maxLength', 10)}\\\\n        error={boolean('error', false)}\\\\n        errorMessage={text('errorMessage', '')}\\\\n        required={boolean('required', true)}\\\\n        fullWidth={boolean('fullWidth', false)}\\\\n        onChange={action('Triggered: onChange')}\\\\n      />\\\\n    </Box>\\\\n  </ThemeWrapper>\\\\n)\\\\nexport const ErrorField = () => (\\\\n  <ThemeWrapper>\\\\n    <Box p='1em'>\\\\n      <NumInput\\\\n        id='someId'\\\\n        name='someName'\\\\n        className='someClassName'\\\\n        label={text('label', 'Username')}\\\\n        labelColor={text('labelColor', 'text.inputLabel.default')}\\\\n        placeholder={text('placeholder', 'Enter text here...')}\\\\n        maxLength={number('maxLength', 10)}\\\\n        error={boolean('error', true)}\\\\n        errorMessage={text('errorMessage', 'Some Field Error')}\\\\n        required={boolean('required', false)}\\\\n        fullWidth={boolean('fullWidth', false)}\\\\n        onChange={action('Triggered: onChange')}\\\\n      />\\\\n    </Box>\\\\n  </ThemeWrapper>\\\\n)\\\\n\\\\nexport const WithOutBorder = () => (\\\\n  <ThemeWrapper>\\\\n    <Box bgColor='grey.100' p='2em'>\\\\n      <NumInput\\\\n        id='someId'\\\\n        name='someName'\\\\n        className='someClassName'\\\\n        maxLength={number('maxLength', 10)}\\\\n        error={boolean('error', false)}\\\\n        onChange={action('Triggered: onChange')}\\\\n        variant='inline-edit'\\\\n      />\\\\n    </Box>\\\\n  </ThemeWrapper>\\\\n)\\\\n\\\\nexport const withIcon = () => (\\\\n  <ThemeWrapper>\\\\n    <Box p='2em'>\\\\n      <Position\\\\n        type='relative'\\\\n        display='block'\\\\n        style={object('WrapperStyle', {\\\\n          // boxShadow: '2px 3px 10px 0px lightgrey',\\\\n          width: '50%'\\\\n        })}\\\\n      >\\\\n        <NumInput\\\\n          id='someId'\\\\n          name='someName'\\\\n          className='someClassName'\\\\n          placeholder={text('placeholder', 'Enter text here...')}\\\\n          maxLength={number('maxLength', 10)}\\\\n          error={boolean('error', false)}\\\\n          errorMessage={text('errorMessage', 'Some Field Error')}\\\\n          required={boolean('required', false)}\\\\n          fullWidth={boolean('fullWidth', true)}\\\\n          onChange={action('Triggered: onChange')}\\\\n          // border={boolean('border', false)}\\\\n          color={text('color', 'primary.main')}\\\\n          variant='withIcon'\\\\n          iconVariant='calendar'\\\\n          iconSize={15}\\\\n          // iconStyle={{ padding: '7px 7px 7px 7px' }}\\\\n          // style={object('style', {\\\\n          //   fontSize: '14px',\\\\n          //   minHeight: '30px'\\\\n          // })}\\\\n        />\\\\n      </Position>\\\\n    </Box>\\\\n  </ThemeWrapper>\\\\n)\\\\n\\\";\\n// @ts-ignore\\nvar __ADDS_MAP__ = {};\\n// @ts-ignore\\nvar __MAIN_FILE_LOCATION__ = \\\"/NumtInput.stories.tsx\\\";\\n// @ts-ignore\\nvar __MODULE_DEPENDENCIES__ = [];\\n// @ts-ignore\\nvar __LOCAL_DEPENDENCIES__ = {};\\n// @ts-ignore\\nvar __IDS_TO_FRAMEWORKS__ = {};\\n        \\nimport { action } from '@storybook/addon-actions'\\nimport { boolean, number, object, text } from '@storybook/addon-knobs'\\nimport React from 'react'\\nimport NumInput from '.'\\nimport { path } from '..'\\nimport ThemeWrapper from '../../../utilities/components/ThemeWrapper'\\nimport Box from '../../atoms/Box'\\nimport Position from '../Position'\\n\\nexport default {parameters: {\\\"storySource\\\":{\\\"source\\\":\\\"\\\\n\\\\n// @ts-nocheck\\\\n// @ts-ignore\\\\nvar withSourceLoader = require('@storybook/source-loader/preview').withSource;\\\\n// @ts-ignore\\\\nvar addSourceDecorator = require(\\\\\\\"@storybook/source-loader/preview\\\\\\\").addSource;\\\\n// @ts-ignore\\\\nvar __SOURCE_PREFIX__ = \\\\\\\"/Users/farhanansari/Code/ui-library/src/components/molecules/NumInput\\\\\\\";\\\\n// @ts-ignore\\\\nvar __STORY__ = \\\\\\\"import { action } from '@storybook/addon-actions'\\\\\\\\nimport { boolean, number, object, text } from '@storybook/addon-knobs'\\\\\\\\nimport React from 'react'\\\\\\\\nimport NumInput from '.'\\\\\\\\nimport { path } from '..'\\\\\\\\nimport ThemeWrapper from '../../../utilities/components/ThemeWrapper'\\\\\\\\nimport Box from '../../atoms/Box'\\\\\\\\nimport Position from '../Position'\\\\\\\\n\\\\\\\\nexport default {\\\\\\\\n  title: `${path}/NumInput`,\\\\\\\\n  component: NumInput\\\\\\\\n}\\\\\\\\n\\\\\\\\nexport const DefaultField = () => (\\\\\\\\n  <ThemeWrapper>\\\\\\\\n    <Box p='1em'>\\\\\\\\n      <NumInput\\\\\\\\n        id='someId'\\\\\\\\n        name='someName'\\\\\\\\n        className='someClassName'\\\\\\\\n        label={text('label', 'Username')}\\\\\\\\n        labelColor={text('labelColor', 'text.inputLabel.default')}\\\\\\\\n        placeholder={text('placeholder', 'Enter text here...')}\\\\\\\\n        maxLength={number('maxLength', 10)}\\\\\\\\n        error={boolean('error', false)}\\\\\\\\n        errorMessage={text('errorMessage', '')}\\\\\\\\n        required={boolean('required', false)}\\\\\\\\n        fullWidth={boolean('fullWidth', false)}\\\\\\\\n        onChange={action('Triggered: onChange')}\\\\\\\\n        tooltipMesaage={text('tooltipMesaage', 'i am default label tooltip')}\\\\\\\\n      />\\\\\\\\n    </Box>\\\\\\\\n  </ThemeWrapper>\\\\\\\\n)\\\\\\\\n\\\\\\\\nexport const RequiredField = () => (\\\\\\\\n  <ThemeWrapper>\\\\\\\\n    <Box p='1em'>\\\\\\\\n      <NumInput\\\\\\\\n        id='someId'\\\\\\\\n        name='someName'\\\\\\\\n        className='someClassName'\\\\\\\\n        label={text('label', 'Username')}\\\\\\\\n        labelColor={text('labelColor', 'text.inputLabel.default')}\\\\\\\\n        placeholder={text('placeholder', 'Enter text here...')}\\\\\\\\n        maxLength={number('maxLength', 10)}\\\\\\\\n        error={boolean('error', false)}\\\\\\\\n        errorMessage={text('errorMessage', '')}\\\\\\\\n        required={boolean('required', true)}\\\\\\\\n        fullWidth={boolean('fullWidth', false)}\\\\\\\\n        onChange={action('Triggered: onChange')}\\\\\\\\n      />\\\\\\\\n    </Box>\\\\\\\\n  </ThemeWrapper>\\\\\\\\n)\\\\\\\\nexport const ErrorField = () => (\\\\\\\\n  <ThemeWrapper>\\\\\\\\n    <Box p='1em'>\\\\\\\\n      <NumInput\\\\\\\\n        id='someId'\\\\\\\\n        name='someName'\\\\\\\\n        className='someClassName'\\\\\\\\n        label={text('label', 'Username')}\\\\\\\\n        labelColor={text('labelColor', 'text.inputLabel.default')}\\\\\\\\n        placeholder={text('placeholder', 'Enter text here...')}\\\\\\\\n        maxLength={number('maxLength', 10)}\\\\\\\\n        error={boolean('error', true)}\\\\\\\\n        errorMessage={text('errorMessage', 'Some Field Error')}\\\\\\\\n        required={boolean('required', false)}\\\\\\\\n        fullWidth={boolean('fullWidth', false)}\\\\\\\\n        onChange={action('Triggered: onChange')}\\\\\\\\n      />\\\\\\\\n    </Box>\\\\\\\\n  </ThemeWrapper>\\\\\\\\n)\\\\\\\\n\\\\\\\\nexport const WithOutBorder = () => (\\\\\\\\n  <ThemeWrapper>\\\\\\\\n    <Box bgColor='grey.100' p='2em'>\\\\\\\\n      <NumInput\\\\\\\\n        id='someId'\\\\\\\\n        name='someName'\\\\\\\\n        className='someClassName'\\\\\\\\n        maxLength={number('maxLength', 10)}\\\\\\\\n        error={boolean('error', false)}\\\\\\\\n        onChange={action('Triggered: onChange')}\\\\\\\\n        variant='inline-edit'\\\\\\\\n      />\\\\\\\\n    </Box>\\\\\\\\n  </ThemeWrapper>\\\\\\\\n)\\\\\\\\n\\\\\\\\nexport const withIcon = () => (\\\\\\\\n  <ThemeWrapper>\\\\\\\\n    <Box p='2em'>\\\\\\\\n      <Position\\\\\\\\n        type='relative'\\\\\\\\n        display='block'\\\\\\\\n        style={object('WrapperStyle', {\\\\\\\\n          // boxShadow: '2px 3px 10px 0px lightgrey',\\\\\\\\n          width: '50%'\\\\\\\\n        })}\\\\\\\\n      >\\\\\\\\n        <NumInput\\\\\\\\n          id='someId'\\\\\\\\n          name='someName'\\\\\\\\n          className='someClassName'\\\\\\\\n          placeholder={text('placeholder', 'Enter text here...')}\\\\\\\\n          maxLength={number('maxLength', 10)}\\\\\\\\n          error={boolean('error', false)}\\\\\\\\n          errorMessage={text('errorMessage', 'Some Field Error')}\\\\\\\\n          required={boolean('required', false)}\\\\\\\\n          fullWidth={boolean('fullWidth', true)}\\\\\\\\n          onChange={action('Triggered: onChange')}\\\\\\\\n          // border={boolean('border', false)}\\\\\\\\n          color={text('color', 'primary.main')}\\\\\\\\n          variant='withIcon'\\\\\\\\n          iconVariant='calendar'\\\\\\\\n          iconSize={15}\\\\\\\\n          // iconStyle={{ padding: '7px 7px 7px 7px' }}\\\\\\\\n          // style={object('style', {\\\\\\\\n          //   fontSize: '14px',\\\\\\\\n          //   minHeight: '30px'\\\\\\\\n          // })}\\\\\\\\n        />\\\\\\\\n      </Position>\\\\\\\\n    </Box>\\\\\\\\n  </ThemeWrapper>\\\\\\\\n)\\\\\\\\n\\\\\\\";\\\\n// @ts-ignore\\\\nvar __ADDS_MAP__ = {};\\\\n// @ts-ignore\\\\nvar __MAIN_FILE_LOCATION__ = \\\\\\\"/NumtInput.stories.tsx\\\\\\\";\\\\n// @ts-ignore\\\\nvar __MODULE_DEPENDENCIES__ = [];\\\\n// @ts-ignore\\\\nvar __LOCAL_DEPENDENCIES__ = {};\\\\n// @ts-ignore\\\\nvar __IDS_TO_FRAMEWORKS__ = {};\\\\n        \\\\nimport { action } from '@storybook/addon-actions'\\\\nimport { boolean, number, object, text } from '@storybook/addon-knobs'\\\\nimport React from 'react'\\\\nimport NumInput from '.'\\\\nimport { path } from '..'\\\\nimport ThemeWrapper from '../../../utilities/components/ThemeWrapper'\\\\nimport Box from '../../atoms/Box'\\\\nimport Position from '../Position'\\\\n\\\\nexport default {parameters: {\\\\\\\"storySource\\\\\\\":{\\\\\\\"source\\\\\\\":\\\\\\\"import { action } from '@storybook/addon-actions'\\\\\\\\nimport { boolean, number, object, text } from '@storybook/addon-knobs'\\\\\\\\nimport React from 'react'\\\\\\\\nimport NumInput from '.'\\\\\\\\nimport { path } from '..'\\\\\\\\nimport ThemeWrapper from '../../../utilities/components/ThemeWrapper'\\\\\\\\nimport Box from '../../atoms/Box'\\\\\\\\nimport Position from '../Position'\\\\\\\\n\\\\\\\\nexport default {\\\\\\\\n  title: `${path}/NumInput`,\\\\\\\\n  component: NumInput\\\\\\\\n}\\\\\\\\n\\\\\\\\nexport const DefaultField = () => (\\\\\\\\n  <ThemeWrapper>\\\\\\\\n    <Box p='1em'>\\\\\\\\n      <NumInput\\\\\\\\n        id='someId'\\\\\\\\n        name='someName'\\\\\\\\n        className='someClassName'\\\\\\\\n        label={text('label', 'Username')}\\\\\\\\n        labelColor={text('labelColor', 'text.inputLabel.default')}\\\\\\\\n        placeholder={text('placeholder', 'Enter text here...')}\\\\\\\\n        maxLength={number('maxLength', 10)}\\\\\\\\n        error={boolean('error', false)}\\\\\\\\n        errorMessage={text('errorMessage', '')}\\\\\\\\n        required={boolean('required', false)}\\\\\\\\n        fullWidth={boolean('fullWidth', false)}\\\\\\\\n        onChange={action('Triggered: onChange')}\\\\\\\\n        tooltipMesaage={text('tooltipMesaage', 'i am default label tooltip')}\\\\\\\\n      />\\\\\\\\n    </Box>\\\\\\\\n  </ThemeWrapper>\\\\\\\\n)\\\\\\\\n\\\\\\\\nexport const RequiredField = () => (\\\\\\\\n  <ThemeWrapper>\\\\\\\\n    <Box p='1em'>\\\\\\\\n      <NumInput\\\\\\\\n        id='someId'\\\\\\\\n        name='someName'\\\\\\\\n        className='someClassName'\\\\\\\\n        label={text('label', 'Username')}\\\\\\\\n        labelColor={text('labelColor', 'text.inputLabel.default')}\\\\\\\\n        placeholder={text('placeholder', 'Enter text here...')}\\\\\\\\n        maxLength={number('maxLength', 10)}\\\\\\\\n        error={boolean('error', false)}\\\\\\\\n        errorMessage={text('errorMessage', '')}\\\\\\\\n        required={boolean('required', true)}\\\\\\\\n        fullWidth={boolean('fullWidth', false)}\\\\\\\\n        onChange={action('Triggered: onChange')}\\\\\\\\n      />\\\\\\\\n    </Box>\\\\\\\\n  </ThemeWrapper>\\\\\\\\n)\\\\\\\\nexport const ErrorField = () => (\\\\\\\\n  <ThemeWrapper>\\\\\\\\n    <Box p='1em'>\\\\\\\\n      <NumInput\\\\\\\\n        id='someId'\\\\\\\\n        name='someName'\\\\\\\\n        className='someClassName'\\\\\\\\n        label={text('label', 'Username')}\\\\\\\\n        labelColor={text('labelColor', 'text.inputLabel.default')}\\\\\\\\n        placeholder={text('placeholder', 'Enter text here...')}\\\\\\\\n        maxLength={number('maxLength', 10)}\\\\\\\\n        error={boolean('error', true)}\\\\\\\\n        errorMessage={text('errorMessage', 'Some Field Error')}\\\\\\\\n        required={boolean('required', false)}\\\\\\\\n        fullWidth={boolean('fullWidth', false)}\\\\\\\\n        onChange={action('Triggered: onChange')}\\\\\\\\n      />\\\\\\\\n    </Box>\\\\\\\\n  </ThemeWrapper>\\\\\\\\n)\\\\\\\\n\\\\\\\\nexport const WithOutBorder = () => (\\\\\\\\n  <ThemeWrapper>\\\\\\\\n    <Box bgColor='grey.100' p='2em'>\\\\\\\\n      <NumInput\\\\\\\\n        id='someId'\\\\\\\\n        name='someName'\\\\\\\\n        className='someClassName'\\\\\\\\n        maxLength={number('maxLength', 10)}\\\\\\\\n        error={boolean('error', false)}\\\\\\\\n        onChange={action('Triggered: onChange')}\\\\\\\\n        variant='inline-edit'\\\\\\\\n      />\\\\\\\\n    </Box>\\\\\\\\n  </ThemeWrapper>\\\\\\\\n)\\\\\\\\n\\\\\\\\nexport const withIcon = () => (\\\\\\\\n  <ThemeWrapper>\\\\\\\\n    <Box p='2em'>\\\\\\\\n      <Position\\\\\\\\n        type='relative'\\\\\\\\n        display='block'\\\\\\\\n        style={object('WrapperStyle', {\\\\\\\\n          // boxShadow: '2px 3px 10px 0px lightgrey',\\\\\\\\n          width: '50%'\\\\\\\\n        })}\\\\\\\\n      >\\\\\\\\n        <NumInput\\\\\\\\n          id='someId'\\\\\\\\n          name='someName'\\\\\\\\n          className='someClassName'\\\\\\\\n          placeholder={text('placeholder', 'Enter text here...')}\\\\\\\\n          maxLength={number('maxLength', 10)}\\\\\\\\n          error={boolean('error', false)}\\\\\\\\n          errorMessage={text('errorMessage', 'Some Field Error')}\\\\\\\\n          required={boolean('required', false)}\\\\\\\\n          fullWidth={boolean('fullWidth', true)}\\\\\\\\n          onChange={action('Triggered: onChange')}\\\\\\\\n          // border={boolean('border', false)}\\\\\\\\n          color={text('color', 'primary.main')}\\\\\\\\n          variant='withIcon'\\\\\\\\n          iconVariant='calendar'\\\\\\\\n          iconSize={15}\\\\\\\\n          // iconStyle={{ padding: '7px 7px 7px 7px' }}\\\\\\\\n          // style={object('style', {\\\\\\\\n          //   fontSize: '14px',\\\\\\\\n          //   minHeight: '30px'\\\\\\\\n          // })}\\\\\\\\n        />\\\\\\\\n      </Position>\\\\\\\\n    </Box>\\\\\\\\n  </ThemeWrapper>\\\\\\\\n)\\\\\\\\n\\\\\\\",\\\\\\\"locationsMap\\\\\\\":{}},},\\\\n  title: `${path}/NumInput`,\\\\n  component: NumInput\\\\n}\\\\n\\\\nexport const DefaultField = addSourceDecorator(() => (\\\\n  <ThemeWrapper>\\\\n    <Box p='1em'>\\\\n      <NumInput\\\\n        id='someId'\\\\n        name='someName'\\\\n        className='someClassName'\\\\n        label={text('label', 'Username')}\\\\n        labelColor={text('labelColor', 'text.inputLabel.default')}\\\\n        placeholder={text('placeholder', 'Enter text here...')}\\\\n        maxLength={number('maxLength', 10)}\\\\n        error={boolean('error', false)}\\\\n        errorMessage={text('errorMessage', '')}\\\\n        required={boolean('required', false)}\\\\n        fullWidth={boolean('fullWidth', false)}\\\\n        onChange={action('Triggered: onChange')}\\\\n        tooltipMesaage={text('tooltipMesaage', 'i am default label tooltip')}\\\\n      />\\\\n    </Box>\\\\n  </ThemeWrapper>\\\\n), {__STORY__, __ADDS_MAP__,__MAIN_FILE_LOCATION__,__MODULE_DEPENDENCIES__,__LOCAL_DEPENDENCIES__,__SOURCE_PREFIX__,__IDS_TO_FRAMEWORKS__});\\\\n\\\\nexport const RequiredField = addSourceDecorator(() => (\\\\n  <ThemeWrapper>\\\\n    <Box p='1em'>\\\\n      <NumInput\\\\n        id='someId'\\\\n        name='someName'\\\\n        className='someClassName'\\\\n        label={text('label', 'Username')}\\\\n        labelColor={text('labelColor', 'text.inputLabel.default')}\\\\n        placeholder={text('placeholder', 'Enter text here...')}\\\\n        maxLength={number('maxLength', 10)}\\\\n        error={boolean('error', false)}\\\\n        errorMessage={text('errorMessage', '')}\\\\n        required={boolean('required', true)}\\\\n        fullWidth={boolean('fullWidth', false)}\\\\n        onChange={action('Triggered: onChange')}\\\\n      />\\\\n    </Box>\\\\n  </ThemeWrapper>\\\\n), {__STORY__, __ADDS_MAP__,__MAIN_FILE_LOCATION__,__MODULE_DEPENDENCIES__,__LOCAL_DEPENDENCIES__,__SOURCE_PREFIX__,__IDS_TO_FRAMEWORKS__});\\\\nexport const ErrorField = addSourceDecorator(() => (\\\\n  <ThemeWrapper>\\\\n    <Box p='1em'>\\\\n      <NumInput\\\\n        id='someId'\\\\n        name='someName'\\\\n        className='someClassName'\\\\n        label={text('label', 'Username')}\\\\n        labelColor={text('labelColor', 'text.inputLabel.default')}\\\\n        placeholder={text('placeholder', 'Enter text here...')}\\\\n        maxLength={number('maxLength', 10)}\\\\n        error={boolean('error', true)}\\\\n        errorMessage={text('errorMessage', 'Some Field Error')}\\\\n        required={boolean('required', false)}\\\\n        fullWidth={boolean('fullWidth', false)}\\\\n        onChange={action('Triggered: onChange')}\\\\n      />\\\\n    </Box>\\\\n  </ThemeWrapper>\\\\n), {__STORY__, __ADDS_MAP__,__MAIN_FILE_LOCATION__,__MODULE_DEPENDENCIES__,__LOCAL_DEPENDENCIES__,__SOURCE_PREFIX__,__IDS_TO_FRAMEWORKS__});\\\\n\\\\nexport const WithOutBorder = addSourceDecorator(() => (\\\\n  <ThemeWrapper>\\\\n    <Box bgColor='grey.100' p='2em'>\\\\n      <NumInput\\\\n        id='someId'\\\\n        name='someName'\\\\n        className='someClassName'\\\\n        maxLength={number('maxLength', 10)}\\\\n        error={boolean('error', false)}\\\\n        onChange={action('Triggered: onChange')}\\\\n        variant='inline-edit'\\\\n      />\\\\n    </Box>\\\\n  </ThemeWrapper>\\\\n), {__STORY__, __ADDS_MAP__,__MAIN_FILE_LOCATION__,__MODULE_DEPENDENCIES__,__LOCAL_DEPENDENCIES__,__SOURCE_PREFIX__,__IDS_TO_FRAMEWORKS__});\\\\n\\\\nexport const withIcon = addSourceDecorator(() => (\\\\n  <ThemeWrapper>\\\\n    <Box p='2em'>\\\\n      <Position\\\\n        type='relative'\\\\n        display='block'\\\\n        style={object('WrapperStyle', {\\\\n          // boxShadow: '2px 3px 10px 0px lightgrey',\\\\n          width: '50%'\\\\n        })}\\\\n      >\\\\n        <NumInput\\\\n          id='someId'\\\\n          name='someName'\\\\n          className='someClassName'\\\\n          placeholder={text('placeholder', 'Enter text here...')}\\\\n          maxLength={number('maxLength', 10)}\\\\n          error={boolean('error', false)}\\\\n          errorMessage={text('errorMessage', 'Some Field Error')}\\\\n          required={boolean('required', false)}\\\\n          fullWidth={boolean('fullWidth', true)}\\\\n          onChange={action('Triggered: onChange')}\\\\n          // border={boolean('border', false)}\\\\n          color={text('color', 'primary.main')}\\\\n          variant='withIcon'\\\\n          iconVariant='calendar'\\\\n          iconSize={15}\\\\n          // iconStyle={{ padding: '7px 7px 7px 7px' }}\\\\n          // style={object('style', {\\\\n          //   fontSize: '14px',\\\\n          //   minHeight: '30px'\\\\n          // })}\\\\n        />\\\\n      </Position>\\\\n    </Box>\\\\n  </ThemeWrapper>\\\\n), {__STORY__, __ADDS_MAP__,__MAIN_FILE_LOCATION__,__MODULE_DEPENDENCIES__,__LOCAL_DEPENDENCIES__,__SOURCE_PREFIX__,__IDS_TO_FRAMEWORKS__});\\\",\\\"locationsMap\\\":{}},\\\"storySource\\\":{\\\"source\\\":\\\"import { action } from '@storybook/addon-actions'\\\\nimport { boolean, number, object, text } from '@storybook/addon-knobs'\\\\nimport React from 'react'\\\\nimport NumInput from '.'\\\\nimport { path } from '..'\\\\nimport ThemeWrapper from '../../../utilities/components/ThemeWrapper'\\\\nimport Box from '../../atoms/Box'\\\\nimport Position from '../Position'\\\\n\\\\nexport default {\\\\n  title: `${path}/NumInput`,\\\\n  component: NumInput\\\\n}\\\\n\\\\nexport const DefaultField = () => (\\\\n  <ThemeWrapper>\\\\n    <Box p='1em'>\\\\n      <NumInput\\\\n        id='someId'\\\\n        name='someName'\\\\n        className='someClassName'\\\\n        label={text('label', 'Username')}\\\\n        labelColor={text('labelColor', 'text.inputLabel.default')}\\\\n        placeholder={text('placeholder', 'Enter text here...')}\\\\n        maxLength={number('maxLength', 10)}\\\\n        error={boolean('error', false)}\\\\n        errorMessage={text('errorMessage', '')}\\\\n        required={boolean('required', false)}\\\\n        fullWidth={boolean('fullWidth', false)}\\\\n        onChange={action('Triggered: onChange')}\\\\n        tooltipMesaage={text('tooltipMesaage', 'i am default label tooltip')}\\\\n      />\\\\n    </Box>\\\\n  </ThemeWrapper>\\\\n)\\\\n\\\\nexport const RequiredField = () => (\\\\n  <ThemeWrapper>\\\\n    <Box p='1em'>\\\\n      <NumInput\\\\n        id='someId'\\\\n        name='someName'\\\\n        className='someClassName'\\\\n        label={text('label', 'Username')}\\\\n        labelColor={text('labelColor', 'text.inputLabel.default')}\\\\n        placeholder={text('placeholder', 'Enter text here...')}\\\\n        maxLength={number('maxLength', 10)}\\\\n        error={boolean('error', false)}\\\\n        errorMessage={text('errorMessage', '')}\\\\n        required={boolean('required', true)}\\\\n        fullWidth={boolean('fullWidth', false)}\\\\n        onChange={action('Triggered: onChange')}\\\\n      />\\\\n    </Box>\\\\n  </ThemeWrapper>\\\\n)\\\\nexport const ErrorField = () => (\\\\n  <ThemeWrapper>\\\\n    <Box p='1em'>\\\\n      <NumInput\\\\n        id='someId'\\\\n        name='someName'\\\\n        className='someClassName'\\\\n        label={text('label', 'Username')}\\\\n        labelColor={text('labelColor', 'text.inputLabel.default')}\\\\n        placeholder={text('placeholder', 'Enter text here...')}\\\\n        maxLength={number('maxLength', 10)}\\\\n        error={boolean('error', true)}\\\\n        errorMessage={text('errorMessage', 'Some Field Error')}\\\\n        required={boolean('required', false)}\\\\n        fullWidth={boolean('fullWidth', false)}\\\\n        onChange={action('Triggered: onChange')}\\\\n      />\\\\n    </Box>\\\\n  </ThemeWrapper>\\\\n)\\\\n\\\\nexport const WithOutBorder = () => (\\\\n  <ThemeWrapper>\\\\n    <Box bgColor='grey.100' p='2em'>\\\\n      <NumInput\\\\n        id='someId'\\\\n        name='someName'\\\\n        className='someClassName'\\\\n        maxLength={number('maxLength', 10)}\\\\n        error={boolean('error', false)}\\\\n        onChange={action('Triggered: onChange')}\\\\n        variant='inline-edit'\\\\n      />\\\\n    </Box>\\\\n  </ThemeWrapper>\\\\n)\\\\n\\\\nexport const withIcon = () => (\\\\n  <ThemeWrapper>\\\\n    <Box p='2em'>\\\\n      <Position\\\\n        type='relative'\\\\n        display='block'\\\\n        style={object('WrapperStyle', {\\\\n          // boxShadow: '2px 3px 10px 0px lightgrey',\\\\n          width: '50%'\\\\n        })}\\\\n      >\\\\n        <NumInput\\\\n          id='someId'\\\\n          name='someName'\\\\n          className='someClassName'\\\\n          placeholder={text('placeholder', 'Enter text here...')}\\\\n          maxLength={number('maxLength', 10)}\\\\n          error={boolean('error', false)}\\\\n          errorMessage={text('errorMessage', 'Some Field Error')}\\\\n          required={boolean('required', false)}\\\\n          fullWidth={boolean('fullWidth', true)}\\\\n          onChange={action('Triggered: onChange')}\\\\n          // border={boolean('border', false)}\\\\n          color={text('color', 'primary.main')}\\\\n          variant='withIcon'\\\\n          iconVariant='calendar'\\\\n          iconSize={15}\\\\n          // iconStyle={{ padding: '7px 7px 7px 7px' }}\\\\n          // style={object('style', {\\\\n          //   fontSize: '14px',\\\\n          //   minHeight: '30px'\\\\n          // })}\\\\n        />\\\\n      </Position>\\\\n    </Box>\\\\n  </ThemeWrapper>\\\\n)\\\\n\\\",\\\"locationsMap\\\":{}},},\\n  title: `${path}/NumInput`,\\n  component: NumInput\\n}\\n\\nexport const DefaultField = addSourceDecorator(addSourceDecorator(() => (\\n  <ThemeWrapper>\\n    <Box p='1em'>\\n      <NumInput\\n        id='someId'\\n        name='someName'\\n        className='someClassName'\\n        label={text('label', 'Username')}\\n        labelColor={text('labelColor', 'text.inputLabel.default')}\\n        placeholder={text('placeholder', 'Enter text here...')}\\n        maxLength={number('maxLength', 10)}\\n        error={boolean('error', false)}\\n        errorMessage={text('errorMessage', '')}\\n        required={boolean('required', false)}\\n        fullWidth={boolean('fullWidth', false)}\\n        onChange={action('Triggered: onChange')}\\n        tooltipMesaage={text('tooltipMesaage', 'i am default label tooltip')}\\n      />\\n    </Box>\\n  </ThemeWrapper>\\n), {__STORY__, __ADDS_MAP__,__MAIN_FILE_LOCATION__,__MODULE_DEPENDENCIES__,__LOCAL_DEPENDENCIES__,__SOURCE_PREFIX__,__IDS_TO_FRAMEWORKS__}), {__STORY__, __ADDS_MAP__,__MAIN_FILE_LOCATION__,__MODULE_DEPENDENCIES__,__LOCAL_DEPENDENCIES__,__SOURCE_PREFIX__,__IDS_TO_FRAMEWORKS__});;\\n\\nexport const RequiredField = addSourceDecorator(addSourceDecorator(() => (\\n  <ThemeWrapper>\\n    <Box p='1em'>\\n      <NumInput\\n        id='someId'\\n        name='someName'\\n        className='someClassName'\\n        label={text('label', 'Username')}\\n        labelColor={text('labelColor', 'text.inputLabel.default')}\\n        placeholder={text('placeholder', 'Enter text here...')}\\n        maxLength={number('maxLength', 10)}\\n        error={boolean('error', false)}\\n        errorMessage={text('errorMessage', '')}\\n        required={boolean('required', true)}\\n        fullWidth={boolean('fullWidth', false)}\\n        onChange={action('Triggered: onChange')}\\n      />\\n    </Box>\\n  </ThemeWrapper>\\n), {__STORY__, __ADDS_MAP__,__MAIN_FILE_LOCATION__,__MODULE_DEPENDENCIES__,__LOCAL_DEPENDENCIES__,__SOURCE_PREFIX__,__IDS_TO_FRAMEWORKS__}), {__STORY__, __ADDS_MAP__,__MAIN_FILE_LOCATION__,__MODULE_DEPENDENCIES__,__LOCAL_DEPENDENCIES__,__SOURCE_PREFIX__,__IDS_TO_FRAMEWORKS__});;\\nexport const ErrorField = addSourceDecorator(addSourceDecorator(() => (\\n  <ThemeWrapper>\\n    <Box p='1em'>\\n      <NumInput\\n        id='someId'\\n        name='someName'\\n        className='someClassName'\\n        label={text('label', 'Username')}\\n        labelColor={text('labelColor', 'text.inputLabel.default')}\\n        placeholder={text('placeholder', 'Enter text here...')}\\n        maxLength={number('maxLength', 10)}\\n        error={boolean('error', true)}\\n        errorMessage={text('errorMessage', 'Some Field Error')}\\n        required={boolean('required', false)}\\n        fullWidth={boolean('fullWidth', false)}\\n        onChange={action('Triggered: onChange')}\\n      />\\n    </Box>\\n  </ThemeWrapper>\\n), {__STORY__, __ADDS_MAP__,__MAIN_FILE_LOCATION__,__MODULE_DEPENDENCIES__,__LOCAL_DEPENDENCIES__,__SOURCE_PREFIX__,__IDS_TO_FRAMEWORKS__}), {__STORY__, __ADDS_MAP__,__MAIN_FILE_LOCATION__,__MODULE_DEPENDENCIES__,__LOCAL_DEPENDENCIES__,__SOURCE_PREFIX__,__IDS_TO_FRAMEWORKS__});;\\n\\nexport const WithOutBorder = addSourceDecorator(addSourceDecorator(() => (\\n  <ThemeWrapper>\\n    <Box bgColor='grey.100' p='2em'>\\n      <NumInput\\n        id='someId'\\n        name='someName'\\n        className='someClassName'\\n        maxLength={number('maxLength', 10)}\\n        error={boolean('error', false)}\\n        onChange={action('Triggered: onChange')}\\n        variant='inline-edit'\\n      />\\n    </Box>\\n  </ThemeWrapper>\\n), {__STORY__, __ADDS_MAP__,__MAIN_FILE_LOCATION__,__MODULE_DEPENDENCIES__,__LOCAL_DEPENDENCIES__,__SOURCE_PREFIX__,__IDS_TO_FRAMEWORKS__}), {__STORY__, __ADDS_MAP__,__MAIN_FILE_LOCATION__,__MODULE_DEPENDENCIES__,__LOCAL_DEPENDENCIES__,__SOURCE_PREFIX__,__IDS_TO_FRAMEWORKS__});;\\n\\nexport const withIcon = addSourceDecorator(addSourceDecorator(() => (\\n  <ThemeWrapper>\\n    <Box p='2em'>\\n      <Position\\n        type='relative'\\n        display='block'\\n        style={object('WrapperStyle', {\\n          // boxShadow: '2px 3px 10px 0px lightgrey',\\n          width: '50%'\\n        })}\\n      >\\n        <NumInput\\n          id='someId'\\n          name='someName'\\n          className='someClassName'\\n          placeholder={text('placeholder', 'Enter text here...')}\\n          maxLength={number('maxLength', 10)}\\n          error={boolean('error', false)}\\n          errorMessage={text('errorMessage', 'Some Field Error')}\\n          required={boolean('required', false)}\\n          fullWidth={boolean('fullWidth', true)}\\n          onChange={action('Triggered: onChange')}\\n          // border={boolean('border', false)}\\n          color={text('color', 'primary.main')}\\n          variant='withIcon'\\n          iconVariant='calendar'\\n          iconSize={15}\\n          // iconStyle={{ padding: '7px 7px 7px 7px' }}\\n          // style={object('style', {\\n          //   fontSize: '14px',\\n          //   minHeight: '30px'\\n          // })}\\n        />\\n      </Position>\\n    </Box>\\n  </ThemeWrapper>\\n), {__STORY__, __ADDS_MAP__,__MAIN_FILE_LOCATION__,__MODULE_DEPENDENCIES__,__LOCAL_DEPENDENCIES__,__SOURCE_PREFIX__,__IDS_TO_FRAMEWORKS__}), {__STORY__, __ADDS_MAP__,__MAIN_FILE_LOCATION__,__MODULE_DEPENDENCIES__,__LOCAL_DEPENDENCIES__,__SOURCE_PREFIX__,__IDS_TO_FRAMEWORKS__});\";\n// @ts-ignore\nvar __ADDS_MAP__ = {};\n// @ts-ignore\nvar __MAIN_FILE_LOCATION__ = \"/NumtInput.stories.tsx\";\n// @ts-ignore\nvar __MODULE_DEPENDENCIES__ = [];\n// @ts-ignore\nvar __LOCAL_DEPENDENCIES__ = {};\n// @ts-ignore\nvar __IDS_TO_FRAMEWORKS__ = {};\n        \n\n/* eslint-disable */\n// @ts-nocheck\n// @ts-ignore\nvar withSourceLoader = require('@storybook/source-loader/preview').withSource;\n// @ts-ignore\nvar addSourceDecorator = require(\"@storybook/source-loader/preview\").addSource;\n// @ts-ignore\nvar __SOURCE_PREFIX__ = \"/Users/farhanansari/Code/ui-library/src/components/molecules/NumInput\";\n// @ts-ignore\nvar __STORY__ = \"\\n\\n// @ts-nocheck\\n// @ts-ignore\\nvar withSourceLoader = require('@storybook/source-loader/preview').withSource;\\n// @ts-ignore\\nvar addSourceDecorator = require(\\\"@storybook/source-loader/preview\\\").addSource;\\n// @ts-ignore\\nvar __SOURCE_PREFIX__ = \\\"/Users/farhanansari/Code/ui-library/src/components/molecules/NumInput\\\";\\n// @ts-ignore\\nvar __STORY__ = \\\"import { action } from '@storybook/addon-actions'\\\\nimport { boolean, number, object, text } from '@storybook/addon-knobs'\\\\nimport React from 'react'\\\\nimport NumInput from '.'\\\\nimport { path } from '..'\\\\nimport ThemeWrapper from '../../../utilities/components/ThemeWrapper'\\\\nimport Box from '../../atoms/Box'\\\\nimport Position from '../Position'\\\\n\\\\nexport default {\\\\n  title: `${path}/NumInput`,\\\\n  component: NumInput\\\\n}\\\\n\\\\nexport const DefaultField = () => (\\\\n  <ThemeWrapper>\\\\n    <Box p='1em'>\\\\n      <NumInput\\\\n        id='someId'\\\\n        name='someName'\\\\n        className='someClassName'\\\\n        label={text('label', 'Username')}\\\\n        labelColor={text('labelColor', 'text.inputLabel.default')}\\\\n        placeholder={text('placeholder', 'Enter text here...')}\\\\n        maxLength={number('maxLength', 10)}\\\\n        error={boolean('error', false)}\\\\n        errorMessage={text('errorMessage', '')}\\\\n        required={boolean('required', false)}\\\\n        fullWidth={boolean('fullWidth', false)}\\\\n        onChange={action('Triggered: onChange')}\\\\n        tooltipMesaage={text('tooltipMesaage', 'i am default label tooltip')}\\\\n      />\\\\n    </Box>\\\\n  </ThemeWrapper>\\\\n)\\\\n\\\\nexport const RequiredField = () => (\\\\n  <ThemeWrapper>\\\\n    <Box p='1em'>\\\\n      <NumInput\\\\n        id='someId'\\\\n        name='someName'\\\\n        className='someClassName'\\\\n        label={text('label', 'Username')}\\\\n        labelColor={text('labelColor', 'text.inputLabel.default')}\\\\n        placeholder={text('placeholder', 'Enter text here...')}\\\\n        maxLength={number('maxLength', 10)}\\\\n        error={boolean('error', false)}\\\\n        errorMessage={text('errorMessage', '')}\\\\n        required={boolean('required', true)}\\\\n        fullWidth={boolean('fullWidth', false)}\\\\n        onChange={action('Triggered: onChange')}\\\\n      />\\\\n    </Box>\\\\n  </ThemeWrapper>\\\\n)\\\\nexport const ErrorField = () => (\\\\n  <ThemeWrapper>\\\\n    <Box p='1em'>\\\\n      <NumInput\\\\n        id='someId'\\\\n        name='someName'\\\\n        className='someClassName'\\\\n        label={text('label', 'Username')}\\\\n        labelColor={text('labelColor', 'text.inputLabel.default')}\\\\n        placeholder={text('placeholder', 'Enter text here...')}\\\\n        maxLength={number('maxLength', 10)}\\\\n        error={boolean('error', true)}\\\\n        errorMessage={text('errorMessage', 'Some Field Error')}\\\\n        required={boolean('required', false)}\\\\n        fullWidth={boolean('fullWidth', false)}\\\\n        onChange={action('Triggered: onChange')}\\\\n      />\\\\n    </Box>\\\\n  </ThemeWrapper>\\\\n)\\\\n\\\\nexport const WithOutBorder = () => (\\\\n  <ThemeWrapper>\\\\n    <Box bgColor='grey.100' p='2em'>\\\\n      <NumInput\\\\n        id='someId'\\\\n        name='someName'\\\\n        className='someClassName'\\\\n        maxLength={number('maxLength', 10)}\\\\n        error={boolean('error', false)}\\\\n        onChange={action('Triggered: onChange')}\\\\n        variant='inline-edit'\\\\n      />\\\\n    </Box>\\\\n  </ThemeWrapper>\\\\n)\\\\n\\\\nexport const withIcon = () => (\\\\n  <ThemeWrapper>\\\\n    <Box p='2em'>\\\\n      <Position\\\\n        type='relative'\\\\n        display='block'\\\\n        style={object('WrapperStyle', {\\\\n          // boxShadow: '2px 3px 10px 0px lightgrey',\\\\n          width: '50%'\\\\n        })}\\\\n      >\\\\n        <NumInput\\\\n          id='someId'\\\\n          name='someName'\\\\n          className='someClassName'\\\\n          placeholder={text('placeholder', 'Enter text here...')}\\\\n          maxLength={number('maxLength', 10)}\\\\n          error={boolean('error', false)}\\\\n          errorMessage={text('errorMessage', 'Some Field Error')}\\\\n          required={boolean('required', false)}\\\\n          fullWidth={boolean('fullWidth', true)}\\\\n          onChange={action('Triggered: onChange')}\\\\n          // border={boolean('border', false)}\\\\n          color={text('color', 'primary.main')}\\\\n          variant='withIcon'\\\\n          iconVariant='calendar'\\\\n          iconSize={15}\\\\n          // iconStyle={{ padding: '7px 7px 7px 7px' }}\\\\n          // style={object('style', {\\\\n          //   fontSize: '14px',\\\\n          //   minHeight: '30px'\\\\n          // })}\\\\n        />\\\\n      </Position>\\\\n    </Box>\\\\n  </ThemeWrapper>\\\\n)\\\\n\\\";\\n// @ts-ignore\\nvar __ADDS_MAP__ = {};\\n// @ts-ignore\\nvar __MAIN_FILE_LOCATION__ = \\\"/NumtInput.stories.tsx\\\";\\n// @ts-ignore\\nvar __MODULE_DEPENDENCIES__ = [];\\n// @ts-ignore\\nvar __LOCAL_DEPENDENCIES__ = {};\\n// @ts-ignore\\nvar __IDS_TO_FRAMEWORKS__ = {};\\n        \\nimport { action } from '@storybook/addon-actions'\\nimport { boolean, number, object, text } from '@storybook/addon-knobs'\\nimport React from 'react'\\nimport NumInput from '.'\\nimport { path } from '..'\\nimport ThemeWrapper from '../../../utilities/components/ThemeWrapper'\\nimport Box from '../../atoms/Box'\\nimport Position from '../Position'\\n\\nexport default {parameters: {\\\"storySource\\\":{\\\"source\\\":\\\"import { action } from '@storybook/addon-actions'\\\\nimport { boolean, number, object, text } from '@storybook/addon-knobs'\\\\nimport React from 'react'\\\\nimport NumInput from '.'\\\\nimport { path } from '..'\\\\nimport ThemeWrapper from '../../../utilities/components/ThemeWrapper'\\\\nimport Box from '../../atoms/Box'\\\\nimport Position from '../Position'\\\\n\\\\nexport default {\\\\n  title: `${path}/NumInput`,\\\\n  component: NumInput\\\\n}\\\\n\\\\nexport const DefaultField = () => (\\\\n  <ThemeWrapper>\\\\n    <Box p='1em'>\\\\n      <NumInput\\\\n        id='someId'\\\\n        name='someName'\\\\n        className='someClassName'\\\\n        label={text('label', 'Username')}\\\\n        labelColor={text('labelColor', 'text.inputLabel.default')}\\\\n        placeholder={text('placeholder', 'Enter text here...')}\\\\n        maxLength={number('maxLength', 10)}\\\\n        error={boolean('error', false)}\\\\n        errorMessage={text('errorMessage', '')}\\\\n        required={boolean('required', false)}\\\\n        fullWidth={boolean('fullWidth', false)}\\\\n        onChange={action('Triggered: onChange')}\\\\n        tooltipMesaage={text('tooltipMesaage', 'i am default label tooltip')}\\\\n      />\\\\n    </Box>\\\\n  </ThemeWrapper>\\\\n)\\\\n\\\\nexport const RequiredField = () => (\\\\n  <ThemeWrapper>\\\\n    <Box p='1em'>\\\\n      <NumInput\\\\n        id='someId'\\\\n        name='someName'\\\\n        className='someClassName'\\\\n        label={text('label', 'Username')}\\\\n        labelColor={text('labelColor', 'text.inputLabel.default')}\\\\n        placeholder={text('placeholder', 'Enter text here...')}\\\\n        maxLength={number('maxLength', 10)}\\\\n        error={boolean('error', false)}\\\\n        errorMessage={text('errorMessage', '')}\\\\n        required={boolean('required', true)}\\\\n        fullWidth={boolean('fullWidth', false)}\\\\n        onChange={action('Triggered: onChange')}\\\\n      />\\\\n    </Box>\\\\n  </ThemeWrapper>\\\\n)\\\\nexport const ErrorField = () => (\\\\n  <ThemeWrapper>\\\\n    <Box p='1em'>\\\\n      <NumInput\\\\n        id='someId'\\\\n        name='someName'\\\\n        className='someClassName'\\\\n        label={text('label', 'Username')}\\\\n        labelColor={text('labelColor', 'text.inputLabel.default')}\\\\n        placeholder={text('placeholder', 'Enter text here...')}\\\\n        maxLength={number('maxLength', 10)}\\\\n        error={boolean('error', true)}\\\\n        errorMessage={text('errorMessage', 'Some Field Error')}\\\\n        required={boolean('required', false)}\\\\n        fullWidth={boolean('fullWidth', false)}\\\\n        onChange={action('Triggered: onChange')}\\\\n      />\\\\n    </Box>\\\\n  </ThemeWrapper>\\\\n)\\\\n\\\\nexport const WithOutBorder = () => (\\\\n  <ThemeWrapper>\\\\n    <Box bgColor='grey.100' p='2em'>\\\\n      <NumInput\\\\n        id='someId'\\\\n        name='someName'\\\\n        className='someClassName'\\\\n        maxLength={number('maxLength', 10)}\\\\n        error={boolean('error', false)}\\\\n        onChange={action('Triggered: onChange')}\\\\n        variant='inline-edit'\\\\n      />\\\\n    </Box>\\\\n  </ThemeWrapper>\\\\n)\\\\n\\\\nexport const withIcon = () => (\\\\n  <ThemeWrapper>\\\\n    <Box p='2em'>\\\\n      <Position\\\\n        type='relative'\\\\n        display='block'\\\\n        style={object('WrapperStyle', {\\\\n          // boxShadow: '2px 3px 10px 0px lightgrey',\\\\n          width: '50%'\\\\n        })}\\\\n      >\\\\n        <NumInput\\\\n          id='someId'\\\\n          name='someName'\\\\n          className='someClassName'\\\\n          placeholder={text('placeholder', 'Enter text here...')}\\\\n          maxLength={number('maxLength', 10)}\\\\n          error={boolean('error', false)}\\\\n          errorMessage={text('errorMessage', 'Some Field Error')}\\\\n          required={boolean('required', false)}\\\\n          fullWidth={boolean('fullWidth', true)}\\\\n          onChange={action('Triggered: onChange')}\\\\n          // border={boolean('border', false)}\\\\n          color={text('color', 'primary.main')}\\\\n          variant='withIcon'\\\\n          iconVariant='calendar'\\\\n          iconSize={15}\\\\n          // iconStyle={{ padding: '7px 7px 7px 7px' }}\\\\n          // style={object('style', {\\\\n          //   fontSize: '14px',\\\\n          //   minHeight: '30px'\\\\n          // })}\\\\n        />\\\\n      </Position>\\\\n    </Box>\\\\n  </ThemeWrapper>\\\\n)\\\\n\\\",\\\"locationsMap\\\":{}},},\\n  title: `${path}/NumInput`,\\n  component: NumInput\\n}\\n\\nexport const DefaultField = addSourceDecorator(() => (\\n  <ThemeWrapper>\\n    <Box p='1em'>\\n      <NumInput\\n        id='someId'\\n        name='someName'\\n        className='someClassName'\\n        label={text('label', 'Username')}\\n        labelColor={text('labelColor', 'text.inputLabel.default')}\\n        placeholder={text('placeholder', 'Enter text here...')}\\n        maxLength={number('maxLength', 10)}\\n        error={boolean('error', false)}\\n        errorMessage={text('errorMessage', '')}\\n        required={boolean('required', false)}\\n        fullWidth={boolean('fullWidth', false)}\\n        onChange={action('Triggered: onChange')}\\n        tooltipMesaage={text('tooltipMesaage', 'i am default label tooltip')}\\n      />\\n    </Box>\\n  </ThemeWrapper>\\n), {__STORY__, __ADDS_MAP__,__MAIN_FILE_LOCATION__,__MODULE_DEPENDENCIES__,__LOCAL_DEPENDENCIES__,__SOURCE_PREFIX__,__IDS_TO_FRAMEWORKS__});\\n\\nexport const RequiredField = addSourceDecorator(() => (\\n  <ThemeWrapper>\\n    <Box p='1em'>\\n      <NumInput\\n        id='someId'\\n        name='someName'\\n        className='someClassName'\\n        label={text('label', 'Username')}\\n        labelColor={text('labelColor', 'text.inputLabel.default')}\\n        placeholder={text('placeholder', 'Enter text here...')}\\n        maxLength={number('maxLength', 10)}\\n        error={boolean('error', false)}\\n        errorMessage={text('errorMessage', '')}\\n        required={boolean('required', true)}\\n        fullWidth={boolean('fullWidth', false)}\\n        onChange={action('Triggered: onChange')}\\n      />\\n    </Box>\\n  </ThemeWrapper>\\n), {__STORY__, __ADDS_MAP__,__MAIN_FILE_LOCATION__,__MODULE_DEPENDENCIES__,__LOCAL_DEPENDENCIES__,__SOURCE_PREFIX__,__IDS_TO_FRAMEWORKS__});\\nexport const ErrorField = addSourceDecorator(() => (\\n  <ThemeWrapper>\\n    <Box p='1em'>\\n      <NumInput\\n        id='someId'\\n        name='someName'\\n        className='someClassName'\\n        label={text('label', 'Username')}\\n        labelColor={text('labelColor', 'text.inputLabel.default')}\\n        placeholder={text('placeholder', 'Enter text here...')}\\n        maxLength={number('maxLength', 10)}\\n        error={boolean('error', true)}\\n        errorMessage={text('errorMessage', 'Some Field Error')}\\n        required={boolean('required', false)}\\n        fullWidth={boolean('fullWidth', false)}\\n        onChange={action('Triggered: onChange')}\\n      />\\n    </Box>\\n  </ThemeWrapper>\\n), {__STORY__, __ADDS_MAP__,__MAIN_FILE_LOCATION__,__MODULE_DEPENDENCIES__,__LOCAL_DEPENDENCIES__,__SOURCE_PREFIX__,__IDS_TO_FRAMEWORKS__});\\n\\nexport const WithOutBorder = addSourceDecorator(() => (\\n  <ThemeWrapper>\\n    <Box bgColor='grey.100' p='2em'>\\n      <NumInput\\n        id='someId'\\n        name='someName'\\n        className='someClassName'\\n        maxLength={number('maxLength', 10)}\\n        error={boolean('error', false)}\\n        onChange={action('Triggered: onChange')}\\n        variant='inline-edit'\\n      />\\n    </Box>\\n  </ThemeWrapper>\\n), {__STORY__, __ADDS_MAP__,__MAIN_FILE_LOCATION__,__MODULE_DEPENDENCIES__,__LOCAL_DEPENDENCIES__,__SOURCE_PREFIX__,__IDS_TO_FRAMEWORKS__});\\n\\nexport const withIcon = addSourceDecorator(() => (\\n  <ThemeWrapper>\\n    <Box p='2em'>\\n      <Position\\n        type='relative'\\n        display='block'\\n        style={object('WrapperStyle', {\\n          // boxShadow: '2px 3px 10px 0px lightgrey',\\n          width: '50%'\\n        })}\\n      >\\n        <NumInput\\n          id='someId'\\n          name='someName'\\n          className='someClassName'\\n          placeholder={text('placeholder', 'Enter text here...')}\\n          maxLength={number('maxLength', 10)}\\n          error={boolean('error', false)}\\n          errorMessage={text('errorMessage', 'Some Field Error')}\\n          required={boolean('required', false)}\\n          fullWidth={boolean('fullWidth', true)}\\n          onChange={action('Triggered: onChange')}\\n          // border={boolean('border', false)}\\n          color={text('color', 'primary.main')}\\n          variant='withIcon'\\n          iconVariant='calendar'\\n          iconSize={15}\\n          // iconStyle={{ padding: '7px 7px 7px 7px' }}\\n          // style={object('style', {\\n          //   fontSize: '14px',\\n          //   minHeight: '30px'\\n          // })}\\n        />\\n      </Position>\\n    </Box>\\n  </ThemeWrapper>\\n), {__STORY__, __ADDS_MAP__,__MAIN_FILE_LOCATION__,__MODULE_DEPENDENCIES__,__LOCAL_DEPENDENCIES__,__SOURCE_PREFIX__,__IDS_TO_FRAMEWORKS__});\";\n// @ts-ignore\nvar __ADDS_MAP__ = {};\n// @ts-ignore\nvar __MAIN_FILE_LOCATION__ = \"/NumtInput.stories.tsx\";\n// @ts-ignore\nvar __MODULE_DEPENDENCIES__ = [];\n// @ts-ignore\nvar __LOCAL_DEPENDENCIES__ = {};\n// @ts-ignore\nvar __IDS_TO_FRAMEWORKS__ = {};\n        \n\n/* eslint-disable */\n// @ts-nocheck\n// @ts-ignore\nvar withSourceLoader = require('@storybook/source-loader/preview').withSource;\n// @ts-ignore\nvar addSourceDecorator = require(\"@storybook/source-loader/preview\").addSource;\n// @ts-ignore\nvar __SOURCE_PREFIX__ = \"/Users/farhanansari/Code/ui-library/src/components/molecules/NumInput\";\n// @ts-ignore\nvar __STORY__ = \"import { action } from '@storybook/addon-actions'\\nimport { boolean, number, object, text } from '@storybook/addon-knobs'\\nimport React from 'react'\\nimport NumInput from '.'\\nimport { path } from '..'\\nimport ThemeWrapper from '../../../utilities/components/ThemeWrapper'\\nimport Box from '../../atoms/Box'\\nimport Position from '../Position'\\n\\nexport default {\\n  title: `${path}/NumInput`,\\n  component: NumInput\\n}\\n\\nexport const DefaultField = () => (\\n  <ThemeWrapper>\\n    <Box p='1em'>\\n      <NumInput\\n        id='someId'\\n        name='someName'\\n        className='someClassName'\\n        label={text('label', 'Username')}\\n        labelColor={text('labelColor', 'text.inputLabel.default')}\\n        placeholder={text('placeholder', 'Enter text here...')}\\n        maxLength={number('maxLength', 10)}\\n        error={boolean('error', false)}\\n        errorMessage={text('errorMessage', '')}\\n        required={boolean('required', false)}\\n        fullWidth={boolean('fullWidth', false)}\\n        onChange={action('Triggered: onChange')}\\n        tooltipMesaage={text('tooltipMesaage', 'i am default label tooltip')}\\n      />\\n    </Box>\\n  </ThemeWrapper>\\n)\\n\\nexport const RequiredField = () => (\\n  <ThemeWrapper>\\n    <Box p='1em'>\\n      <NumInput\\n        id='someId'\\n        name='someName'\\n        className='someClassName'\\n        label={text('label', 'Username')}\\n        labelColor={text('labelColor', 'text.inputLabel.default')}\\n        placeholder={text('placeholder', 'Enter text here...')}\\n        maxLength={number('maxLength', 10)}\\n        error={boolean('error', false)}\\n        errorMessage={text('errorMessage', '')}\\n        required={boolean('required', true)}\\n        fullWidth={boolean('fullWidth', false)}\\n        onChange={action('Triggered: onChange')}\\n      />\\n    </Box>\\n  </ThemeWrapper>\\n)\\nexport const ErrorField = () => (\\n  <ThemeWrapper>\\n    <Box p='1em'>\\n      <NumInput\\n        id='someId'\\n        name='someName'\\n        className='someClassName'\\n        label={text('label', 'Username')}\\n        labelColor={text('labelColor', 'text.inputLabel.default')}\\n        placeholder={text('placeholder', 'Enter text here...')}\\n        maxLength={number('maxLength', 10)}\\n        error={boolean('error', true)}\\n        errorMessage={text('errorMessage', 'Some Field Error')}\\n        required={boolean('required', false)}\\n        fullWidth={boolean('fullWidth', false)}\\n        onChange={action('Triggered: onChange')}\\n      />\\n    </Box>\\n  </ThemeWrapper>\\n)\\n\\nexport const WithOutBorder = () => (\\n  <ThemeWrapper>\\n    <Box bgColor='grey.100' p='2em'>\\n      <NumInput\\n        id='someId'\\n        name='someName'\\n        className='someClassName'\\n        maxLength={number('maxLength', 10)}\\n        error={boolean('error', false)}\\n        onChange={action('Triggered: onChange')}\\n        variant='inline-edit'\\n      />\\n    </Box>\\n  </ThemeWrapper>\\n)\\n\\nexport const withIcon = () => (\\n  <ThemeWrapper>\\n    <Box p='2em'>\\n      <Position\\n        type='relative'\\n        display='block'\\n        style={object('WrapperStyle', {\\n          // boxShadow: '2px 3px 10px 0px lightgrey',\\n          width: '50%'\\n        })}\\n      >\\n        <NumInput\\n          id='someId'\\n          name='someName'\\n          className='someClassName'\\n          placeholder={text('placeholder', 'Enter text here...')}\\n          maxLength={number('maxLength', 10)}\\n          error={boolean('error', false)}\\n          errorMessage={text('errorMessage', 'Some Field Error')}\\n          required={boolean('required', false)}\\n          fullWidth={boolean('fullWidth', true)}\\n          onChange={action('Triggered: onChange')}\\n          // border={boolean('border', false)}\\n          color={text('color', 'primary.main')}\\n          variant='withIcon'\\n          iconVariant='calendar'\\n          iconSize={15}\\n          // iconStyle={{ padding: '7px 7px 7px 7px' }}\\n          // style={object('style', {\\n          //   fontSize: '14px',\\n          //   minHeight: '30px'\\n          // })}\\n        />\\n      </Position>\\n    </Box>\\n  </ThemeWrapper>\\n)\\n\";\n// @ts-ignore\nvar __ADDS_MAP__ = {};\n// @ts-ignore\nvar __MAIN_FILE_LOCATION__ = \"/NumtInput.stories.tsx\";\n// @ts-ignore\nvar __MODULE_DEPENDENCIES__ = [];\n// @ts-ignore\nvar __LOCAL_DEPENDENCIES__ = {};\n// @ts-ignore\nvar __IDS_TO_FRAMEWORKS__ = {};\n        \nimport { action } from '@storybook/addon-actions'\nimport { boolean, number, object, text } from '@storybook/addon-knobs'\nimport React from 'react'\nimport NumInput from '.'\nimport { path } from '..'\nimport ThemeWrapper from '../../../utilities/components/ThemeWrapper'\nimport Box from '../../atoms/Box'\nimport Position from '../Position'\n\nexport default {parameters: {\"storySource\":{\"source\":\"\\n\\n// @ts-nocheck\\n// @ts-ignore\\nvar withSourceLoader = require('@storybook/source-loader/preview').withSource;\\n// @ts-ignore\\nvar addSourceDecorator = require(\\\"@storybook/source-loader/preview\\\").addSource;\\n// @ts-ignore\\nvar __SOURCE_PREFIX__ = \\\"/Users/farhanansari/Code/ui-library/src/components/molecules/NumInput\\\";\\n// @ts-ignore\\nvar __STORY__ = \\\"\\\\n\\\\n// @ts-nocheck\\\\n// @ts-ignore\\\\nvar withSourceLoader = require('@storybook/source-loader/preview').withSource;\\\\n// @ts-ignore\\\\nvar addSourceDecorator = require(\\\\\\\"@storybook/source-loader/preview\\\\\\\").addSource;\\\\n// @ts-ignore\\\\nvar __SOURCE_PREFIX__ = \\\\\\\"/Users/farhanansari/Code/ui-library/src/components/molecules/NumInput\\\\\\\";\\\\n// @ts-ignore\\\\nvar __STORY__ = \\\\\\\"import { action } from '@storybook/addon-actions'\\\\\\\\nimport { boolean, number, object, text } from '@storybook/addon-knobs'\\\\\\\\nimport React from 'react'\\\\\\\\nimport NumInput from '.'\\\\\\\\nimport { path } from '..'\\\\\\\\nimport ThemeWrapper from '../../../utilities/components/ThemeWrapper'\\\\\\\\nimport Box from '../../atoms/Box'\\\\\\\\nimport Position from '../Position'\\\\\\\\n\\\\\\\\nexport default {\\\\\\\\n  title: `${path}/NumInput`,\\\\\\\\n  component: NumInput\\\\\\\\n}\\\\\\\\n\\\\\\\\nexport const DefaultField = () => (\\\\\\\\n  <ThemeWrapper>\\\\\\\\n    <Box p='1em'>\\\\\\\\n      <NumInput\\\\\\\\n        id='someId'\\\\\\\\n        name='someName'\\\\\\\\n        className='someClassName'\\\\\\\\n        label={text('label', 'Username')}\\\\\\\\n        labelColor={text('labelColor', 'text.inputLabel.default')}\\\\\\\\n        placeholder={text('placeholder', 'Enter text here...')}\\\\\\\\n        maxLength={number('maxLength', 10)}\\\\\\\\n        error={boolean('error', false)}\\\\\\\\n        errorMessage={text('errorMessage', '')}\\\\\\\\n        required={boolean('required', false)}\\\\\\\\n        fullWidth={boolean('fullWidth', false)}\\\\\\\\n        onChange={action('Triggered: onChange')}\\\\\\\\n        tooltipMesaage={text('tooltipMesaage', 'i am default label tooltip')}\\\\\\\\n      />\\\\\\\\n    </Box>\\\\\\\\n  </ThemeWrapper>\\\\\\\\n)\\\\\\\\n\\\\\\\\nexport const RequiredField = () => (\\\\\\\\n  <ThemeWrapper>\\\\\\\\n    <Box p='1em'>\\\\\\\\n      <NumInput\\\\\\\\n        id='someId'\\\\\\\\n        name='someName'\\\\\\\\n        className='someClassName'\\\\\\\\n        label={text('label', 'Username')}\\\\\\\\n        labelColor={text('labelColor', 'text.inputLabel.default')}\\\\\\\\n        placeholder={text('placeholder', 'Enter text here...')}\\\\\\\\n        maxLength={number('maxLength', 10)}\\\\\\\\n        error={boolean('error', false)}\\\\\\\\n        errorMessage={text('errorMessage', '')}\\\\\\\\n        required={boolean('required', true)}\\\\\\\\n        fullWidth={boolean('fullWidth', false)}\\\\\\\\n        onChange={action('Triggered: onChange')}\\\\\\\\n      />\\\\\\\\n    </Box>\\\\\\\\n  </ThemeWrapper>\\\\\\\\n)\\\\\\\\nexport const ErrorField = () => (\\\\\\\\n  <ThemeWrapper>\\\\\\\\n    <Box p='1em'>\\\\\\\\n      <NumInput\\\\\\\\n        id='someId'\\\\\\\\n        name='someName'\\\\\\\\n        className='someClassName'\\\\\\\\n        label={text('label', 'Username')}\\\\\\\\n        labelColor={text('labelColor', 'text.inputLabel.default')}\\\\\\\\n        placeholder={text('placeholder', 'Enter text here...')}\\\\\\\\n        maxLength={number('maxLength', 10)}\\\\\\\\n        error={boolean('error', true)}\\\\\\\\n        errorMessage={text('errorMessage', 'Some Field Error')}\\\\\\\\n        required={boolean('required', false)}\\\\\\\\n        fullWidth={boolean('fullWidth', false)}\\\\\\\\n        onChange={action('Triggered: onChange')}\\\\\\\\n      />\\\\\\\\n    </Box>\\\\\\\\n  </ThemeWrapper>\\\\\\\\n)\\\\\\\\n\\\\\\\\nexport const WithOutBorder = () => (\\\\\\\\n  <ThemeWrapper>\\\\\\\\n    <Box bgColor='grey.100' p='2em'>\\\\\\\\n      <NumInput\\\\\\\\n        id='someId'\\\\\\\\n        name='someName'\\\\\\\\n        className='someClassName'\\\\\\\\n        maxLength={number('maxLength', 10)}\\\\\\\\n        error={boolean('error', false)}\\\\\\\\n        onChange={action('Triggered: onChange')}\\\\\\\\n        variant='inline-edit'\\\\\\\\n      />\\\\\\\\n    </Box>\\\\\\\\n  </ThemeWrapper>\\\\\\\\n)\\\\\\\\n\\\\\\\\nexport const withIcon = () => (\\\\\\\\n  <ThemeWrapper>\\\\\\\\n    <Box p='2em'>\\\\\\\\n      <Position\\\\\\\\n        type='relative'\\\\\\\\n        display='block'\\\\\\\\n        style={object('WrapperStyle', {\\\\\\\\n          // boxShadow: '2px 3px 10px 0px lightgrey',\\\\\\\\n          width: '50%'\\\\\\\\n        })}\\\\\\\\n      >\\\\\\\\n        <NumInput\\\\\\\\n          id='someId'\\\\\\\\n          name='someName'\\\\\\\\n          className='someClassName'\\\\\\\\n          placeholder={text('placeholder', 'Enter text here...')}\\\\\\\\n          maxLength={number('maxLength', 10)}\\\\\\\\n          error={boolean('error', false)}\\\\\\\\n          errorMessage={text('errorMessage', 'Some Field Error')}\\\\\\\\n          required={boolean('required', false)}\\\\\\\\n          fullWidth={boolean('fullWidth', true)}\\\\\\\\n          onChange={action('Triggered: onChange')}\\\\\\\\n          // border={boolean('border', false)}\\\\\\\\n          color={text('color', 'primary.main')}\\\\\\\\n          variant='withIcon'\\\\\\\\n          iconVariant='calendar'\\\\\\\\n          iconSize={15}\\\\\\\\n          // iconStyle={{ padding: '7px 7px 7px 7px' }}\\\\\\\\n          // style={object('style', {\\\\\\\\n          //   fontSize: '14px',\\\\\\\\n          //   minHeight: '30px'\\\\\\\\n          // })}\\\\\\\\n        />\\\\\\\\n      </Position>\\\\\\\\n    </Box>\\\\\\\\n  </ThemeWrapper>\\\\\\\\n)\\\\\\\\n\\\\\\\";\\\\n// @ts-ignore\\\\nvar __ADDS_MAP__ = {};\\\\n// @ts-ignore\\\\nvar __MAIN_FILE_LOCATION__ = \\\\\\\"/NumtInput.stories.tsx\\\\\\\";\\\\n// @ts-ignore\\\\nvar __MODULE_DEPENDENCIES__ = [];\\\\n// @ts-ignore\\\\nvar __LOCAL_DEPENDENCIES__ = {};\\\\n// @ts-ignore\\\\nvar __IDS_TO_FRAMEWORKS__ = {};\\\\n        \\\\nimport { action } from '@storybook/addon-actions'\\\\nimport { boolean, number, object, text } from '@storybook/addon-knobs'\\\\nimport React from 'react'\\\\nimport NumInput from '.'\\\\nimport { path } from '..'\\\\nimport ThemeWrapper from '../../../utilities/components/ThemeWrapper'\\\\nimport Box from '../../atoms/Box'\\\\nimport Position from '../Position'\\\\n\\\\nexport default {parameters: {\\\\\\\"storySource\\\\\\\":{\\\\\\\"source\\\\\\\":\\\\\\\"import { action } from '@storybook/addon-actions'\\\\\\\\nimport { boolean, number, object, text } from '@storybook/addon-knobs'\\\\\\\\nimport React from 'react'\\\\\\\\nimport NumInput from '.'\\\\\\\\nimport { path } from '..'\\\\\\\\nimport ThemeWrapper from '../../../utilities/components/ThemeWrapper'\\\\\\\\nimport Box from '../../atoms/Box'\\\\\\\\nimport Position from '../Position'\\\\\\\\n\\\\\\\\nexport default {\\\\\\\\n  title: `${path}/NumInput`,\\\\\\\\n  component: NumInput\\\\\\\\n}\\\\\\\\n\\\\\\\\nexport const DefaultField = () => (\\\\\\\\n  <ThemeWrapper>\\\\\\\\n    <Box p='1em'>\\\\\\\\n      <NumInput\\\\\\\\n        id='someId'\\\\\\\\n        name='someName'\\\\\\\\n        className='someClassName'\\\\\\\\n        label={text('label', 'Username')}\\\\\\\\n        labelColor={text('labelColor', 'text.inputLabel.default')}\\\\\\\\n        placeholder={text('placeholder', 'Enter text here...')}\\\\\\\\n        maxLength={number('maxLength', 10)}\\\\\\\\n        error={boolean('error', false)}\\\\\\\\n        errorMessage={text('errorMessage', '')}\\\\\\\\n        required={boolean('required', false)}\\\\\\\\n        fullWidth={boolean('fullWidth', false)}\\\\\\\\n        onChange={action('Triggered: onChange')}\\\\\\\\n        tooltipMesaage={text('tooltipMesaage', 'i am default label tooltip')}\\\\\\\\n      />\\\\\\\\n    </Box>\\\\\\\\n  </ThemeWrapper>\\\\\\\\n)\\\\\\\\n\\\\\\\\nexport const RequiredField = () => (\\\\\\\\n  <ThemeWrapper>\\\\\\\\n    <Box p='1em'>\\\\\\\\n      <NumInput\\\\\\\\n        id='someId'\\\\\\\\n        name='someName'\\\\\\\\n        className='someClassName'\\\\\\\\n        label={text('label', 'Username')}\\\\\\\\n        labelColor={text('labelColor', 'text.inputLabel.default')}\\\\\\\\n        placeholder={text('placeholder', 'Enter text here...')}\\\\\\\\n        maxLength={number('maxLength', 10)}\\\\\\\\n        error={boolean('error', false)}\\\\\\\\n        errorMessage={text('errorMessage', '')}\\\\\\\\n        required={boolean('required', true)}\\\\\\\\n        fullWidth={boolean('fullWidth', false)}\\\\\\\\n        onChange={action('Triggered: onChange')}\\\\\\\\n      />\\\\\\\\n    </Box>\\\\\\\\n  </ThemeWrapper>\\\\\\\\n)\\\\\\\\nexport const ErrorField = () => (\\\\\\\\n  <ThemeWrapper>\\\\\\\\n    <Box p='1em'>\\\\\\\\n      <NumInput\\\\\\\\n        id='someId'\\\\\\\\n        name='someName'\\\\\\\\n        className='someClassName'\\\\\\\\n        label={text('label', 'Username')}\\\\\\\\n        labelColor={text('labelColor', 'text.inputLabel.default')}\\\\\\\\n        placeholder={text('placeholder', 'Enter text here...')}\\\\\\\\n        maxLength={number('maxLength', 10)}\\\\\\\\n        error={boolean('error', true)}\\\\\\\\n        errorMessage={text('errorMessage', 'Some Field Error')}\\\\\\\\n        required={boolean('required', false)}\\\\\\\\n        fullWidth={boolean('fullWidth', false)}\\\\\\\\n        onChange={action('Triggered: onChange')}\\\\\\\\n      />\\\\\\\\n    </Box>\\\\\\\\n  </ThemeWrapper>\\\\\\\\n)\\\\\\\\n\\\\\\\\nexport const WithOutBorder = () => (\\\\\\\\n  <ThemeWrapper>\\\\\\\\n    <Box bgColor='grey.100' p='2em'>\\\\\\\\n      <NumInput\\\\\\\\n        id='someId'\\\\\\\\n        name='someName'\\\\\\\\n        className='someClassName'\\\\\\\\n        maxLength={number('maxLength', 10)}\\\\\\\\n        error={boolean('error', false)}\\\\\\\\n        onChange={action('Triggered: onChange')}\\\\\\\\n        variant='inline-edit'\\\\\\\\n      />\\\\\\\\n    </Box>\\\\\\\\n  </ThemeWrapper>\\\\\\\\n)\\\\\\\\n\\\\\\\\nexport const withIcon = () => (\\\\\\\\n  <ThemeWrapper>\\\\\\\\n    <Box p='2em'>\\\\\\\\n      <Position\\\\\\\\n        type='relative'\\\\\\\\n        display='block'\\\\\\\\n        style={object('WrapperStyle', {\\\\\\\\n          // boxShadow: '2px 3px 10px 0px lightgrey',\\\\\\\\n          width: '50%'\\\\\\\\n        })}\\\\\\\\n      >\\\\\\\\n        <NumInput\\\\\\\\n          id='someId'\\\\\\\\n          name='someName'\\\\\\\\n          className='someClassName'\\\\\\\\n          placeholder={text('placeholder', 'Enter text here...')}\\\\\\\\n          maxLength={number('maxLength', 10)}\\\\\\\\n          error={boolean('error', false)}\\\\\\\\n          errorMessage={text('errorMessage', 'Some Field Error')}\\\\\\\\n          required={boolean('required', false)}\\\\\\\\n          fullWidth={boolean('fullWidth', true)}\\\\\\\\n          onChange={action('Triggered: onChange')}\\\\\\\\n          // border={boolean('border', false)}\\\\\\\\n          color={text('color', 'primary.main')}\\\\\\\\n          variant='withIcon'\\\\\\\\n          iconVariant='calendar'\\\\\\\\n          iconSize={15}\\\\\\\\n          // iconStyle={{ padding: '7px 7px 7px 7px' }}\\\\\\\\n          // style={object('style', {\\\\\\\\n          //   fontSize: '14px',\\\\\\\\n          //   minHeight: '30px'\\\\\\\\n          // })}\\\\\\\\n        />\\\\\\\\n      </Position>\\\\\\\\n    </Box>\\\\\\\\n  </ThemeWrapper>\\\\\\\\n)\\\\\\\\n\\\\\\\",\\\\\\\"locationsMap\\\\\\\":{}},},\\\\n  title: `${path}/NumInput`,\\\\n  component: NumInput\\\\n}\\\\n\\\\nexport const DefaultField = addSourceDecorator(() => (\\\\n  <ThemeWrapper>\\\\n    <Box p='1em'>\\\\n      <NumInput\\\\n        id='someId'\\\\n        name='someName'\\\\n        className='someClassName'\\\\n        label={text('label', 'Username')}\\\\n        labelColor={text('labelColor', 'text.inputLabel.default')}\\\\n        placeholder={text('placeholder', 'Enter text here...')}\\\\n        maxLength={number('maxLength', 10)}\\\\n        error={boolean('error', false)}\\\\n        errorMessage={text('errorMessage', '')}\\\\n        required={boolean('required', false)}\\\\n        fullWidth={boolean('fullWidth', false)}\\\\n        onChange={action('Triggered: onChange')}\\\\n        tooltipMesaage={text('tooltipMesaage', 'i am default label tooltip')}\\\\n      />\\\\n    </Box>\\\\n  </ThemeWrapper>\\\\n), {__STORY__, __ADDS_MAP__,__MAIN_FILE_LOCATION__,__MODULE_DEPENDENCIES__,__LOCAL_DEPENDENCIES__,__SOURCE_PREFIX__,__IDS_TO_FRAMEWORKS__});\\\\n\\\\nexport const RequiredField = addSourceDecorator(() => (\\\\n  <ThemeWrapper>\\\\n    <Box p='1em'>\\\\n      <NumInput\\\\n        id='someId'\\\\n        name='someName'\\\\n        className='someClassName'\\\\n        label={text('label', 'Username')}\\\\n        labelColor={text('labelColor', 'text.inputLabel.default')}\\\\n        placeholder={text('placeholder', 'Enter text here...')}\\\\n        maxLength={number('maxLength', 10)}\\\\n        error={boolean('error', false)}\\\\n        errorMessage={text('errorMessage', '')}\\\\n        required={boolean('required', true)}\\\\n        fullWidth={boolean('fullWidth', false)}\\\\n        onChange={action('Triggered: onChange')}\\\\n      />\\\\n    </Box>\\\\n  </ThemeWrapper>\\\\n), {__STORY__, __ADDS_MAP__,__MAIN_FILE_LOCATION__,__MODULE_DEPENDENCIES__,__LOCAL_DEPENDENCIES__,__SOURCE_PREFIX__,__IDS_TO_FRAMEWORKS__});\\\\nexport const ErrorField = addSourceDecorator(() => (\\\\n  <ThemeWrapper>\\\\n    <Box p='1em'>\\\\n      <NumInput\\\\n        id='someId'\\\\n        name='someName'\\\\n        className='someClassName'\\\\n        label={text('label', 'Username')}\\\\n        labelColor={text('labelColor', 'text.inputLabel.default')}\\\\n        placeholder={text('placeholder', 'Enter text here...')}\\\\n        maxLength={number('maxLength', 10)}\\\\n        error={boolean('error', true)}\\\\n        errorMessage={text('errorMessage', 'Some Field Error')}\\\\n        required={boolean('required', false)}\\\\n        fullWidth={boolean('fullWidth', false)}\\\\n        onChange={action('Triggered: onChange')}\\\\n      />\\\\n    </Box>\\\\n  </ThemeWrapper>\\\\n), {__STORY__, __ADDS_MAP__,__MAIN_FILE_LOCATION__,__MODULE_DEPENDENCIES__,__LOCAL_DEPENDENCIES__,__SOURCE_PREFIX__,__IDS_TO_FRAMEWORKS__});\\\\n\\\\nexport const WithOutBorder = addSourceDecorator(() => (\\\\n  <ThemeWrapper>\\\\n    <Box bgColor='grey.100' p='2em'>\\\\n      <NumInput\\\\n        id='someId'\\\\n        name='someName'\\\\n        className='someClassName'\\\\n        maxLength={number('maxLength', 10)}\\\\n        error={boolean('error', false)}\\\\n        onChange={action('Triggered: onChange')}\\\\n        variant='inline-edit'\\\\n      />\\\\n    </Box>\\\\n  </ThemeWrapper>\\\\n), {__STORY__, __ADDS_MAP__,__MAIN_FILE_LOCATION__,__MODULE_DEPENDENCIES__,__LOCAL_DEPENDENCIES__,__SOURCE_PREFIX__,__IDS_TO_FRAMEWORKS__});\\\\n\\\\nexport const withIcon = addSourceDecorator(() => (\\\\n  <ThemeWrapper>\\\\n    <Box p='2em'>\\\\n      <Position\\\\n        type='relative'\\\\n        display='block'\\\\n        style={object('WrapperStyle', {\\\\n          // boxShadow: '2px 3px 10px 0px lightgrey',\\\\n          width: '50%'\\\\n        })}\\\\n      >\\\\n        <NumInput\\\\n          id='someId'\\\\n          name='someName'\\\\n          className='someClassName'\\\\n          placeholder={text('placeholder', 'Enter text here...')}\\\\n          maxLength={number('maxLength', 10)}\\\\n          error={boolean('error', false)}\\\\n          errorMessage={text('errorMessage', 'Some Field Error')}\\\\n          required={boolean('required', false)}\\\\n          fullWidth={boolean('fullWidth', true)}\\\\n          onChange={action('Triggered: onChange')}\\\\n          // border={boolean('border', false)}\\\\n          color={text('color', 'primary.main')}\\\\n          variant='withIcon'\\\\n          iconVariant='calendar'\\\\n          iconSize={15}\\\\n          // iconStyle={{ padding: '7px 7px 7px 7px' }}\\\\n          // style={object('style', {\\\\n          //   fontSize: '14px',\\\\n          //   minHeight: '30px'\\\\n          // })}\\\\n        />\\\\n      </Position>\\\\n    </Box>\\\\n  </ThemeWrapper>\\\\n), {__STORY__, __ADDS_MAP__,__MAIN_FILE_LOCATION__,__MODULE_DEPENDENCIES__,__LOCAL_DEPENDENCIES__,__SOURCE_PREFIX__,__IDS_TO_FRAMEWORKS__});\\\";\\n// @ts-ignore\\nvar __ADDS_MAP__ = {};\\n// @ts-ignore\\nvar __MAIN_FILE_LOCATION__ = \\\"/NumtInput.stories.tsx\\\";\\n// @ts-ignore\\nvar __MODULE_DEPENDENCIES__ = [];\\n// @ts-ignore\\nvar __LOCAL_DEPENDENCIES__ = {};\\n// @ts-ignore\\nvar __IDS_TO_FRAMEWORKS__ = {};\\n        \\n\\n\\n// @ts-nocheck\\n// @ts-ignore\\nvar withSourceLoader = require('@storybook/source-loader/preview').withSource;\\n// @ts-ignore\\nvar addSourceDecorator = require(\\\"@storybook/source-loader/preview\\\").addSource;\\n// @ts-ignore\\nvar __SOURCE_PREFIX__ = \\\"/Users/farhanansari/Code/ui-library/src/components/molecules/NumInput\\\";\\n// @ts-ignore\\nvar __STORY__ = \\\"import { action } from '@storybook/addon-actions'\\\\nimport { boolean, number, object, text } from '@storybook/addon-knobs'\\\\nimport React from 'react'\\\\nimport NumInput from '.'\\\\nimport { path } from '..'\\\\nimport ThemeWrapper from '../../../utilities/components/ThemeWrapper'\\\\nimport Box from '../../atoms/Box'\\\\nimport Position from '../Position'\\\\n\\\\nexport default {\\\\n  title: `${path}/NumInput`,\\\\n  component: NumInput\\\\n}\\\\n\\\\nexport const DefaultField = () => (\\\\n  <ThemeWrapper>\\\\n    <Box p='1em'>\\\\n      <NumInput\\\\n        id='someId'\\\\n        name='someName'\\\\n        className='someClassName'\\\\n        label={text('label', 'Username')}\\\\n        labelColor={text('labelColor', 'text.inputLabel.default')}\\\\n        placeholder={text('placeholder', 'Enter text here...')}\\\\n        maxLength={number('maxLength', 10)}\\\\n        error={boolean('error', false)}\\\\n        errorMessage={text('errorMessage', '')}\\\\n        required={boolean('required', false)}\\\\n        fullWidth={boolean('fullWidth', false)}\\\\n        onChange={action('Triggered: onChange')}\\\\n        tooltipMesaage={text('tooltipMesaage', 'i am default label tooltip')}\\\\n      />\\\\n    </Box>\\\\n  </ThemeWrapper>\\\\n)\\\\n\\\\nexport const RequiredField = () => (\\\\n  <ThemeWrapper>\\\\n    <Box p='1em'>\\\\n      <NumInput\\\\n        id='someId'\\\\n        name='someName'\\\\n        className='someClassName'\\\\n        label={text('label', 'Username')}\\\\n        labelColor={text('labelColor', 'text.inputLabel.default')}\\\\n        placeholder={text('placeholder', 'Enter text here...')}\\\\n        maxLength={number('maxLength', 10)}\\\\n        error={boolean('error', false)}\\\\n        errorMessage={text('errorMessage', '')}\\\\n        required={boolean('required', true)}\\\\n        fullWidth={boolean('fullWidth', false)}\\\\n        onChange={action('Triggered: onChange')}\\\\n      />\\\\n    </Box>\\\\n  </ThemeWrapper>\\\\n)\\\\nexport const ErrorField = () => (\\\\n  <ThemeWrapper>\\\\n    <Box p='1em'>\\\\n      <NumInput\\\\n        id='someId'\\\\n        name='someName'\\\\n        className='someClassName'\\\\n        label={text('label', 'Username')}\\\\n        labelColor={text('labelColor', 'text.inputLabel.default')}\\\\n        placeholder={text('placeholder', 'Enter text here...')}\\\\n        maxLength={number('maxLength', 10)}\\\\n        error={boolean('error', true)}\\\\n        errorMessage={text('errorMessage', 'Some Field Error')}\\\\n        required={boolean('required', false)}\\\\n        fullWidth={boolean('fullWidth', false)}\\\\n        onChange={action('Triggered: onChange')}\\\\n      />\\\\n    </Box>\\\\n  </ThemeWrapper>\\\\n)\\\\n\\\\nexport const WithOutBorder = () => (\\\\n  <ThemeWrapper>\\\\n    <Box bgColor='grey.100' p='2em'>\\\\n      <NumInput\\\\n        id='someId'\\\\n        name='someName'\\\\n        className='someClassName'\\\\n        maxLength={number('maxLength', 10)}\\\\n        error={boolean('error', false)}\\\\n        onChange={action('Triggered: onChange')}\\\\n        variant='inline-edit'\\\\n      />\\\\n    </Box>\\\\n  </ThemeWrapper>\\\\n)\\\\n\\\\nexport const withIcon = () => (\\\\n  <ThemeWrapper>\\\\n    <Box p='2em'>\\\\n      <Position\\\\n        type='relative'\\\\n        display='block'\\\\n        style={object('WrapperStyle', {\\\\n          // boxShadow: '2px 3px 10px 0px lightgrey',\\\\n          width: '50%'\\\\n        })}\\\\n      >\\\\n        <NumInput\\\\n          id='someId'\\\\n          name='someName'\\\\n          className='someClassName'\\\\n          placeholder={text('placeholder', 'Enter text here...')}\\\\n          maxLength={number('maxLength', 10)}\\\\n          error={boolean('error', false)}\\\\n          errorMessage={text('errorMessage', 'Some Field Error')}\\\\n          required={boolean('required', false)}\\\\n          fullWidth={boolean('fullWidth', true)}\\\\n          onChange={action('Triggered: onChange')}\\\\n          // border={boolean('border', false)}\\\\n          color={text('color', 'primary.main')}\\\\n          variant='withIcon'\\\\n          iconVariant='calendar'\\\\n          iconSize={15}\\\\n          // iconStyle={{ padding: '7px 7px 7px 7px' }}\\\\n          // style={object('style', {\\\\n          //   fontSize: '14px',\\\\n          //   minHeight: '30px'\\\\n          // })}\\\\n        />\\\\n      </Position>\\\\n    </Box>\\\\n  </ThemeWrapper>\\\\n)\\\\n\\\";\\n// @ts-ignore\\nvar __ADDS_MAP__ = {};\\n// @ts-ignore\\nvar __MAIN_FILE_LOCATION__ = \\\"/NumtInput.stories.tsx\\\";\\n// @ts-ignore\\nvar __MODULE_DEPENDENCIES__ = [];\\n// @ts-ignore\\nvar __LOCAL_DEPENDENCIES__ = {};\\n// @ts-ignore\\nvar __IDS_TO_FRAMEWORKS__ = {};\\n        \\nimport { action } from '@storybook/addon-actions'\\nimport { boolean, number, object, text } from '@storybook/addon-knobs'\\nimport React from 'react'\\nimport NumInput from '.'\\nimport { path } from '..'\\nimport ThemeWrapper from '../../../utilities/components/ThemeWrapper'\\nimport Box from '../../atoms/Box'\\nimport Position from '../Position'\\n\\nexport default {parameters: {\\\"storySource\\\":{\\\"source\\\":\\\"\\\\n\\\\n// @ts-nocheck\\\\n// @ts-ignore\\\\nvar withSourceLoader = require('@storybook/source-loader/preview').withSource;\\\\n// @ts-ignore\\\\nvar addSourceDecorator = require(\\\\\\\"@storybook/source-loader/preview\\\\\\\").addSource;\\\\n// @ts-ignore\\\\nvar __SOURCE_PREFIX__ = \\\\\\\"/Users/farhanansari/Code/ui-library/src/components/molecules/NumInput\\\\\\\";\\\\n// @ts-ignore\\\\nvar __STORY__ = \\\\\\\"import { action } from '@storybook/addon-actions'\\\\\\\\nimport { boolean, number, object, text } from '@storybook/addon-knobs'\\\\\\\\nimport React from 'react'\\\\\\\\nimport NumInput from '.'\\\\\\\\nimport { path } from '..'\\\\\\\\nimport ThemeWrapper from '../../../utilities/components/ThemeWrapper'\\\\\\\\nimport Box from '../../atoms/Box'\\\\\\\\nimport Position from '../Position'\\\\\\\\n\\\\\\\\nexport default {\\\\\\\\n  title: `${path}/NumInput`,\\\\\\\\n  component: NumInput\\\\\\\\n}\\\\\\\\n\\\\\\\\nexport const DefaultField = () => (\\\\\\\\n  <ThemeWrapper>\\\\\\\\n    <Box p='1em'>\\\\\\\\n      <NumInput\\\\\\\\n        id='someId'\\\\\\\\n        name='someName'\\\\\\\\n        className='someClassName'\\\\\\\\n        label={text('label', 'Username')}\\\\\\\\n        labelColor={text('labelColor', 'text.inputLabel.default')}\\\\\\\\n        placeholder={text('placeholder', 'Enter text here...')}\\\\\\\\n        maxLength={number('maxLength', 10)}\\\\\\\\n        error={boolean('error', false)}\\\\\\\\n        errorMessage={text('errorMessage', '')}\\\\\\\\n        required={boolean('required', false)}\\\\\\\\n        fullWidth={boolean('fullWidth', false)}\\\\\\\\n        onChange={action('Triggered: onChange')}\\\\\\\\n        tooltipMesaage={text('tooltipMesaage', 'i am default label tooltip')}\\\\\\\\n      />\\\\\\\\n    </Box>\\\\\\\\n  </ThemeWrapper>\\\\\\\\n)\\\\\\\\n\\\\\\\\nexport const RequiredField = () => (\\\\\\\\n  <ThemeWrapper>\\\\\\\\n    <Box p='1em'>\\\\\\\\n      <NumInput\\\\\\\\n        id='someId'\\\\\\\\n        name='someName'\\\\\\\\n        className='someClassName'\\\\\\\\n        label={text('label', 'Username')}\\\\\\\\n        labelColor={text('labelColor', 'text.inputLabel.default')}\\\\\\\\n        placeholder={text('placeholder', 'Enter text here...')}\\\\\\\\n        maxLength={number('maxLength', 10)}\\\\\\\\n        error={boolean('error', false)}\\\\\\\\n        errorMessage={text('errorMessage', '')}\\\\\\\\n        required={boolean('required', true)}\\\\\\\\n        fullWidth={boolean('fullWidth', false)}\\\\\\\\n        onChange={action('Triggered: onChange')}\\\\\\\\n      />\\\\\\\\n    </Box>\\\\\\\\n  </ThemeWrapper>\\\\\\\\n)\\\\\\\\nexport const ErrorField = () => (\\\\\\\\n  <ThemeWrapper>\\\\\\\\n    <Box p='1em'>\\\\\\\\n      <NumInput\\\\\\\\n        id='someId'\\\\\\\\n        name='someName'\\\\\\\\n        className='someClassName'\\\\\\\\n        label={text('label', 'Username')}\\\\\\\\n        labelColor={text('labelColor', 'text.inputLabel.default')}\\\\\\\\n        placeholder={text('placeholder', 'Enter text here...')}\\\\\\\\n        maxLength={number('maxLength', 10)}\\\\\\\\n        error={boolean('error', true)}\\\\\\\\n        errorMessage={text('errorMessage', 'Some Field Error')}\\\\\\\\n        required={boolean('required', false)}\\\\\\\\n        fullWidth={boolean('fullWidth', false)}\\\\\\\\n        onChange={action('Triggered: onChange')}\\\\\\\\n      />\\\\\\\\n    </Box>\\\\\\\\n  </ThemeWrapper>\\\\\\\\n)\\\\\\\\n\\\\\\\\nexport const WithOutBorder = () => (\\\\\\\\n  <ThemeWrapper>\\\\\\\\n    <Box bgColor='grey.100' p='2em'>\\\\\\\\n      <NumInput\\\\\\\\n        id='someId'\\\\\\\\n        name='someName'\\\\\\\\n        className='someClassName'\\\\\\\\n        maxLength={number('maxLength', 10)}\\\\\\\\n        error={boolean('error', false)}\\\\\\\\n        onChange={action('Triggered: onChange')}\\\\\\\\n        variant='inline-edit'\\\\\\\\n      />\\\\\\\\n    </Box>\\\\\\\\n  </ThemeWrapper>\\\\\\\\n)\\\\\\\\n\\\\\\\\nexport const withIcon = () => (\\\\\\\\n  <ThemeWrapper>\\\\\\\\n    <Box p='2em'>\\\\\\\\n      <Position\\\\\\\\n        type='relative'\\\\\\\\n        display='block'\\\\\\\\n        style={object('WrapperStyle', {\\\\\\\\n          // boxShadow: '2px 3px 10px 0px lightgrey',\\\\\\\\n          width: '50%'\\\\\\\\n        })}\\\\\\\\n      >\\\\\\\\n        <NumInput\\\\\\\\n          id='someId'\\\\\\\\n          name='someName'\\\\\\\\n          className='someClassName'\\\\\\\\n          placeholder={text('placeholder', 'Enter text here...')}\\\\\\\\n          maxLength={number('maxLength', 10)}\\\\\\\\n          error={boolean('error', false)}\\\\\\\\n          errorMessage={text('errorMessage', 'Some Field Error')}\\\\\\\\n          required={boolean('required', false)}\\\\\\\\n          fullWidth={boolean('fullWidth', true)}\\\\\\\\n          onChange={action('Triggered: onChange')}\\\\\\\\n          // border={boolean('border', false)}\\\\\\\\n          color={text('color', 'primary.main')}\\\\\\\\n          variant='withIcon'\\\\\\\\n          iconVariant='calendar'\\\\\\\\n          iconSize={15}\\\\\\\\n          // iconStyle={{ padding: '7px 7px 7px 7px' }}\\\\\\\\n          // style={object('style', {\\\\\\\\n          //   fontSize: '14px',\\\\\\\\n          //   minHeight: '30px'\\\\\\\\n          // })}\\\\\\\\n        />\\\\\\\\n      </Position>\\\\\\\\n    </Box>\\\\\\\\n  </ThemeWrapper>\\\\\\\\n)\\\\\\\\n\\\\\\\";\\\\n// @ts-ignore\\\\nvar __ADDS_MAP__ = {};\\\\n// @ts-ignore\\\\nvar __MAIN_FILE_LOCATION__ = \\\\\\\"/NumtInput.stories.tsx\\\\\\\";\\\\n// @ts-ignore\\\\nvar __MODULE_DEPENDENCIES__ = [];\\\\n// @ts-ignore\\\\nvar __LOCAL_DEPENDENCIES__ = {};\\\\n// @ts-ignore\\\\nvar __IDS_TO_FRAMEWORKS__ = {};\\\\n        \\\\nimport { action } from '@storybook/addon-actions'\\\\nimport { boolean, number, object, text } from '@storybook/addon-knobs'\\\\nimport React from 'react'\\\\nimport NumInput from '.'\\\\nimport { path } from '..'\\\\nimport ThemeWrapper from '../../../utilities/components/ThemeWrapper'\\\\nimport Box from '../../atoms/Box'\\\\nimport Position from '../Position'\\\\n\\\\nexport default {parameters: {\\\\\\\"storySource\\\\\\\":{\\\\\\\"source\\\\\\\":\\\\\\\"import { action } from '@storybook/addon-actions'\\\\\\\\nimport { boolean, number, object, text } from '@storybook/addon-knobs'\\\\\\\\nimport React from 'react'\\\\\\\\nimport NumInput from '.'\\\\\\\\nimport { path } from '..'\\\\\\\\nimport ThemeWrapper from '../../../utilities/components/ThemeWrapper'\\\\\\\\nimport Box from '../../atoms/Box'\\\\\\\\nimport Position from '../Position'\\\\\\\\n\\\\\\\\nexport default {\\\\\\\\n  title: `${path}/NumInput`,\\\\\\\\n  component: NumInput\\\\\\\\n}\\\\\\\\n\\\\\\\\nexport const DefaultField = () => (\\\\\\\\n  <ThemeWrapper>\\\\\\\\n    <Box p='1em'>\\\\\\\\n      <NumInput\\\\\\\\n        id='someId'\\\\\\\\n        name='someName'\\\\\\\\n        className='someClassName'\\\\\\\\n        label={text('label', 'Username')}\\\\\\\\n        labelColor={text('labelColor', 'text.inputLabel.default')}\\\\\\\\n        placeholder={text('placeholder', 'Enter text here...')}\\\\\\\\n        maxLength={number('maxLength', 10)}\\\\\\\\n        error={boolean('error', false)}\\\\\\\\n        errorMessage={text('errorMessage', '')}\\\\\\\\n        required={boolean('required', false)}\\\\\\\\n        fullWidth={boolean('fullWidth', false)}\\\\\\\\n        onChange={action('Triggered: onChange')}\\\\\\\\n        tooltipMesaage={text('tooltipMesaage', 'i am default label tooltip')}\\\\\\\\n      />\\\\\\\\n    </Box>\\\\\\\\n  </ThemeWrapper>\\\\\\\\n)\\\\\\\\n\\\\\\\\nexport const RequiredField = () => (\\\\\\\\n  <ThemeWrapper>\\\\\\\\n    <Box p='1em'>\\\\\\\\n      <NumInput\\\\\\\\n        id='someId'\\\\\\\\n        name='someName'\\\\\\\\n        className='someClassName'\\\\\\\\n        label={text('label', 'Username')}\\\\\\\\n        labelColor={text('labelColor', 'text.inputLabel.default')}\\\\\\\\n        placeholder={text('placeholder', 'Enter text here...')}\\\\\\\\n        maxLength={number('maxLength', 10)}\\\\\\\\n        error={boolean('error', false)}\\\\\\\\n        errorMessage={text('errorMessage', '')}\\\\\\\\n        required={boolean('required', true)}\\\\\\\\n        fullWidth={boolean('fullWidth', false)}\\\\\\\\n        onChange={action('Triggered: onChange')}\\\\\\\\n      />\\\\\\\\n    </Box>\\\\\\\\n  </ThemeWrapper>\\\\\\\\n)\\\\\\\\nexport const ErrorField = () => (\\\\\\\\n  <ThemeWrapper>\\\\\\\\n    <Box p='1em'>\\\\\\\\n      <NumInput\\\\\\\\n        id='someId'\\\\\\\\n        name='someName'\\\\\\\\n        className='someClassName'\\\\\\\\n        label={text('label', 'Username')}\\\\\\\\n        labelColor={text('labelColor', 'text.inputLabel.default')}\\\\\\\\n        placeholder={text('placeholder', 'Enter text here...')}\\\\\\\\n        maxLength={number('maxLength', 10)}\\\\\\\\n        error={boolean('error', true)}\\\\\\\\n        errorMessage={text('errorMessage', 'Some Field Error')}\\\\\\\\n        required={boolean('required', false)}\\\\\\\\n        fullWidth={boolean('fullWidth', false)}\\\\\\\\n        onChange={action('Triggered: onChange')}\\\\\\\\n      />\\\\\\\\n    </Box>\\\\\\\\n  </ThemeWrapper>\\\\\\\\n)\\\\\\\\n\\\\\\\\nexport const WithOutBorder = () => (\\\\\\\\n  <ThemeWrapper>\\\\\\\\n    <Box bgColor='grey.100' p='2em'>\\\\\\\\n      <NumInput\\\\\\\\n        id='someId'\\\\\\\\n        name='someName'\\\\\\\\n        className='someClassName'\\\\\\\\n        maxLength={number('maxLength', 10)}\\\\\\\\n        error={boolean('error', false)}\\\\\\\\n        onChange={action('Triggered: onChange')}\\\\\\\\n        variant='inline-edit'\\\\\\\\n      />\\\\\\\\n    </Box>\\\\\\\\n  </ThemeWrapper>\\\\\\\\n)\\\\\\\\n\\\\\\\\nexport const withIcon = () => (\\\\\\\\n  <ThemeWrapper>\\\\\\\\n    <Box p='2em'>\\\\\\\\n      <Position\\\\\\\\n        type='relative'\\\\\\\\n        display='block'\\\\\\\\n        style={object('WrapperStyle', {\\\\\\\\n          // boxShadow: '2px 3px 10px 0px lightgrey',\\\\\\\\n          width: '50%'\\\\\\\\n        })}\\\\\\\\n      >\\\\\\\\n        <NumInput\\\\\\\\n          id='someId'\\\\\\\\n          name='someName'\\\\\\\\n          className='someClassName'\\\\\\\\n          placeholder={text('placeholder', 'Enter text here...')}\\\\\\\\n          maxLength={number('maxLength', 10)}\\\\\\\\n          error={boolean('error', false)}\\\\\\\\n          errorMessage={text('errorMessage', 'Some Field Error')}\\\\\\\\n          required={boolean('required', false)}\\\\\\\\n          fullWidth={boolean('fullWidth', true)}\\\\\\\\n          onChange={action('Triggered: onChange')}\\\\\\\\n          // border={boolean('border', false)}\\\\\\\\n          color={text('color', 'primary.main')}\\\\\\\\n          variant='withIcon'\\\\\\\\n          iconVariant='calendar'\\\\\\\\n          iconSize={15}\\\\\\\\n          // iconStyle={{ padding: '7px 7px 7px 7px' }}\\\\\\\\n          // style={object('style', {\\\\\\\\n          //   fontSize: '14px',\\\\\\\\n          //   minHeight: '30px'\\\\\\\\n          // })}\\\\\\\\n        />\\\\\\\\n      </Position>\\\\\\\\n    </Box>\\\\\\\\n  </ThemeWrapper>\\\\\\\\n)\\\\\\\\n\\\\\\\",\\\\\\\"locationsMap\\\\\\\":{}},},\\\\n  title: `${path}/NumInput`,\\\\n  component: NumInput\\\\n}\\\\n\\\\nexport const DefaultField = addSourceDecorator(() => (\\\\n  <ThemeWrapper>\\\\n    <Box p='1em'>\\\\n      <NumInput\\\\n        id='someId'\\\\n        name='someName'\\\\n        className='someClassName'\\\\n        label={text('label', 'Username')}\\\\n        labelColor={text('labelColor', 'text.inputLabel.default')}\\\\n        placeholder={text('placeholder', 'Enter text here...')}\\\\n        maxLength={number('maxLength', 10)}\\\\n        error={boolean('error', false)}\\\\n        errorMessage={text('errorMessage', '')}\\\\n        required={boolean('required', false)}\\\\n        fullWidth={boolean('fullWidth', false)}\\\\n        onChange={action('Triggered: onChange')}\\\\n        tooltipMesaage={text('tooltipMesaage', 'i am default label tooltip')}\\\\n      />\\\\n    </Box>\\\\n  </ThemeWrapper>\\\\n), {__STORY__, __ADDS_MAP__,__MAIN_FILE_LOCATION__,__MODULE_DEPENDENCIES__,__LOCAL_DEPENDENCIES__,__SOURCE_PREFIX__,__IDS_TO_FRAMEWORKS__});\\\\n\\\\nexport const RequiredField = addSourceDecorator(() => (\\\\n  <ThemeWrapper>\\\\n    <Box p='1em'>\\\\n      <NumInput\\\\n        id='someId'\\\\n        name='someName'\\\\n        className='someClassName'\\\\n        label={text('label', 'Username')}\\\\n        labelColor={text('labelColor', 'text.inputLabel.default')}\\\\n        placeholder={text('placeholder', 'Enter text here...')}\\\\n        maxLength={number('maxLength', 10)}\\\\n        error={boolean('error', false)}\\\\n        errorMessage={text('errorMessage', '')}\\\\n        required={boolean('required', true)}\\\\n        fullWidth={boolean('fullWidth', false)}\\\\n        onChange={action('Triggered: onChange')}\\\\n      />\\\\n    </Box>\\\\n  </ThemeWrapper>\\\\n), {__STORY__, __ADDS_MAP__,__MAIN_FILE_LOCATION__,__MODULE_DEPENDENCIES__,__LOCAL_DEPENDENCIES__,__SOURCE_PREFIX__,__IDS_TO_FRAMEWORKS__});\\\\nexport const ErrorField = addSourceDecorator(() => (\\\\n  <ThemeWrapper>\\\\n    <Box p='1em'>\\\\n      <NumInput\\\\n        id='someId'\\\\n        name='someName'\\\\n        className='someClassName'\\\\n        label={text('label', 'Username')}\\\\n        labelColor={text('labelColor', 'text.inputLabel.default')}\\\\n        placeholder={text('placeholder', 'Enter text here...')}\\\\n        maxLength={number('maxLength', 10)}\\\\n        error={boolean('error', true)}\\\\n        errorMessage={text('errorMessage', 'Some Field Error')}\\\\n        required={boolean('required', false)}\\\\n        fullWidth={boolean('fullWidth', false)}\\\\n        onChange={action('Triggered: onChange')}\\\\n      />\\\\n    </Box>\\\\n  </ThemeWrapper>\\\\n), {__STORY__, __ADDS_MAP__,__MAIN_FILE_LOCATION__,__MODULE_DEPENDENCIES__,__LOCAL_DEPENDENCIES__,__SOURCE_PREFIX__,__IDS_TO_FRAMEWORKS__});\\\\n\\\\nexport const WithOutBorder = addSourceDecorator(() => (\\\\n  <ThemeWrapper>\\\\n    <Box bgColor='grey.100' p='2em'>\\\\n      <NumInput\\\\n        id='someId'\\\\n        name='someName'\\\\n        className='someClassName'\\\\n        maxLength={number('maxLength', 10)}\\\\n        error={boolean('error', false)}\\\\n        onChange={action('Triggered: onChange')}\\\\n        variant='inline-edit'\\\\n      />\\\\n    </Box>\\\\n  </ThemeWrapper>\\\\n), {__STORY__, __ADDS_MAP__,__MAIN_FILE_LOCATION__,__MODULE_DEPENDENCIES__,__LOCAL_DEPENDENCIES__,__SOURCE_PREFIX__,__IDS_TO_FRAMEWORKS__});\\\\n\\\\nexport const withIcon = addSourceDecorator(() => (\\\\n  <ThemeWrapper>\\\\n    <Box p='2em'>\\\\n      <Position\\\\n        type='relative'\\\\n        display='block'\\\\n        style={object('WrapperStyle', {\\\\n          // boxShadow: '2px 3px 10px 0px lightgrey',\\\\n          width: '50%'\\\\n        })}\\\\n      >\\\\n        <NumInput\\\\n          id='someId'\\\\n          name='someName'\\\\n          className='someClassName'\\\\n          placeholder={text('placeholder', 'Enter text here...')}\\\\n          maxLength={number('maxLength', 10)}\\\\n          error={boolean('error', false)}\\\\n          errorMessage={text('errorMessage', 'Some Field Error')}\\\\n          required={boolean('required', false)}\\\\n          fullWidth={boolean('fullWidth', true)}\\\\n          onChange={action('Triggered: onChange')}\\\\n          // border={boolean('border', false)}\\\\n          color={text('color', 'primary.main')}\\\\n          variant='withIcon'\\\\n          iconVariant='calendar'\\\\n          iconSize={15}\\\\n          // iconStyle={{ padding: '7px 7px 7px 7px' }}\\\\n          // style={object('style', {\\\\n          //   fontSize: '14px',\\\\n          //   minHeight: '30px'\\\\n          // })}\\\\n        />\\\\n      </Position>\\\\n    </Box>\\\\n  </ThemeWrapper>\\\\n), {__STORY__, __ADDS_MAP__,__MAIN_FILE_LOCATION__,__MODULE_DEPENDENCIES__,__LOCAL_DEPENDENCIES__,__SOURCE_PREFIX__,__IDS_TO_FRAMEWORKS__});\\\",\\\"locationsMap\\\":{}},\\\"storySource\\\":{\\\"source\\\":\\\"import { action } from '@storybook/addon-actions'\\\\nimport { boolean, number, object, text } from '@storybook/addon-knobs'\\\\nimport React from 'react'\\\\nimport NumInput from '.'\\\\nimport { path } from '..'\\\\nimport ThemeWrapper from '../../../utilities/components/ThemeWrapper'\\\\nimport Box from '../../atoms/Box'\\\\nimport Position from '../Position'\\\\n\\\\nexport default {\\\\n  title: `${path}/NumInput`,\\\\n  component: NumInput\\\\n}\\\\n\\\\nexport const DefaultField = () => (\\\\n  <ThemeWrapper>\\\\n    <Box p='1em'>\\\\n      <NumInput\\\\n        id='someId'\\\\n        name='someName'\\\\n        className='someClassName'\\\\n        label={text('label', 'Username')}\\\\n        labelColor={text('labelColor', 'text.inputLabel.default')}\\\\n        placeholder={text('placeholder', 'Enter text here...')}\\\\n        maxLength={number('maxLength', 10)}\\\\n        error={boolean('error', false)}\\\\n        errorMessage={text('errorMessage', '')}\\\\n        required={boolean('required', false)}\\\\n        fullWidth={boolean('fullWidth', false)}\\\\n        onChange={action('Triggered: onChange')}\\\\n        tooltipMesaage={text('tooltipMesaage', 'i am default label tooltip')}\\\\n      />\\\\n    </Box>\\\\n  </ThemeWrapper>\\\\n)\\\\n\\\\nexport const RequiredField = () => (\\\\n  <ThemeWrapper>\\\\n    <Box p='1em'>\\\\n      <NumInput\\\\n        id='someId'\\\\n        name='someName'\\\\n        className='someClassName'\\\\n        label={text('label', 'Username')}\\\\n        labelColor={text('labelColor', 'text.inputLabel.default')}\\\\n        placeholder={text('placeholder', 'Enter text here...')}\\\\n        maxLength={number('maxLength', 10)}\\\\n        error={boolean('error', false)}\\\\n        errorMessage={text('errorMessage', '')}\\\\n        required={boolean('required', true)}\\\\n        fullWidth={boolean('fullWidth', false)}\\\\n        onChange={action('Triggered: onChange')}\\\\n      />\\\\n    </Box>\\\\n  </ThemeWrapper>\\\\n)\\\\nexport const ErrorField = () => (\\\\n  <ThemeWrapper>\\\\n    <Box p='1em'>\\\\n      <NumInput\\\\n        id='someId'\\\\n        name='someName'\\\\n        className='someClassName'\\\\n        label={text('label', 'Username')}\\\\n        labelColor={text('labelColor', 'text.inputLabel.default')}\\\\n        placeholder={text('placeholder', 'Enter text here...')}\\\\n        maxLength={number('maxLength', 10)}\\\\n        error={boolean('error', true)}\\\\n        errorMessage={text('errorMessage', 'Some Field Error')}\\\\n        required={boolean('required', false)}\\\\n        fullWidth={boolean('fullWidth', false)}\\\\n        onChange={action('Triggered: onChange')}\\\\n      />\\\\n    </Box>\\\\n  </ThemeWrapper>\\\\n)\\\\n\\\\nexport const WithOutBorder = () => (\\\\n  <ThemeWrapper>\\\\n    <Box bgColor='grey.100' p='2em'>\\\\n      <NumInput\\\\n        id='someId'\\\\n        name='someName'\\\\n        className='someClassName'\\\\n        maxLength={number('maxLength', 10)}\\\\n        error={boolean('error', false)}\\\\n        onChange={action('Triggered: onChange')}\\\\n        variant='inline-edit'\\\\n      />\\\\n    </Box>\\\\n  </ThemeWrapper>\\\\n)\\\\n\\\\nexport const withIcon = () => (\\\\n  <ThemeWrapper>\\\\n    <Box p='2em'>\\\\n      <Position\\\\n        type='relative'\\\\n        display='block'\\\\n        style={object('WrapperStyle', {\\\\n          // boxShadow: '2px 3px 10px 0px lightgrey',\\\\n          width: '50%'\\\\n        })}\\\\n      >\\\\n        <NumInput\\\\n          id='someId'\\\\n          name='someName'\\\\n          className='someClassName'\\\\n          placeholder={text('placeholder', 'Enter text here...')}\\\\n          maxLength={number('maxLength', 10)}\\\\n          error={boolean('error', false)}\\\\n          errorMessage={text('errorMessage', 'Some Field Error')}\\\\n          required={boolean('required', false)}\\\\n          fullWidth={boolean('fullWidth', true)}\\\\n          onChange={action('Triggered: onChange')}\\\\n          // border={boolean('border', false)}\\\\n          color={text('color', 'primary.main')}\\\\n          variant='withIcon'\\\\n          iconVariant='calendar'\\\\n          iconSize={15}\\\\n          // iconStyle={{ padding: '7px 7px 7px 7px' }}\\\\n          // style={object('style', {\\\\n          //   fontSize: '14px',\\\\n          //   minHeight: '30px'\\\\n          // })}\\\\n        />\\\\n      </Position>\\\\n    </Box>\\\\n  </ThemeWrapper>\\\\n)\\\\n\\\",\\\"locationsMap\\\":{}},},\\n  title: `${path}/NumInput`,\\n  component: NumInput\\n}\\n\\nexport const DefaultField = addSourceDecorator(addSourceDecorator(() => (\\n  <ThemeWrapper>\\n    <Box p='1em'>\\n      <NumInput\\n        id='someId'\\n        name='someName'\\n        className='someClassName'\\n        label={text('label', 'Username')}\\n        labelColor={text('labelColor', 'text.inputLabel.default')}\\n        placeholder={text('placeholder', 'Enter text here...')}\\n        maxLength={number('maxLength', 10)}\\n        error={boolean('error', false)}\\n        errorMessage={text('errorMessage', '')}\\n        required={boolean('required', false)}\\n        fullWidth={boolean('fullWidth', false)}\\n        onChange={action('Triggered: onChange')}\\n        tooltipMesaage={text('tooltipMesaage', 'i am default label tooltip')}\\n      />\\n    </Box>\\n  </ThemeWrapper>\\n), {__STORY__, __ADDS_MAP__,__MAIN_FILE_LOCATION__,__MODULE_DEPENDENCIES__,__LOCAL_DEPENDENCIES__,__SOURCE_PREFIX__,__IDS_TO_FRAMEWORKS__}), {__STORY__, __ADDS_MAP__,__MAIN_FILE_LOCATION__,__MODULE_DEPENDENCIES__,__LOCAL_DEPENDENCIES__,__SOURCE_PREFIX__,__IDS_TO_FRAMEWORKS__});;\\n\\nexport const RequiredField = addSourceDecorator(addSourceDecorator(() => (\\n  <ThemeWrapper>\\n    <Box p='1em'>\\n      <NumInput\\n        id='someId'\\n        name='someName'\\n        className='someClassName'\\n        label={text('label', 'Username')}\\n        labelColor={text('labelColor', 'text.inputLabel.default')}\\n        placeholder={text('placeholder', 'Enter text here...')}\\n        maxLength={number('maxLength', 10)}\\n        error={boolean('error', false)}\\n        errorMessage={text('errorMessage', '')}\\n        required={boolean('required', true)}\\n        fullWidth={boolean('fullWidth', false)}\\n        onChange={action('Triggered: onChange')}\\n      />\\n    </Box>\\n  </ThemeWrapper>\\n), {__STORY__, __ADDS_MAP__,__MAIN_FILE_LOCATION__,__MODULE_DEPENDENCIES__,__LOCAL_DEPENDENCIES__,__SOURCE_PREFIX__,__IDS_TO_FRAMEWORKS__}), {__STORY__, __ADDS_MAP__,__MAIN_FILE_LOCATION__,__MODULE_DEPENDENCIES__,__LOCAL_DEPENDENCIES__,__SOURCE_PREFIX__,__IDS_TO_FRAMEWORKS__});;\\nexport const ErrorField = addSourceDecorator(addSourceDecorator(() => (\\n  <ThemeWrapper>\\n    <Box p='1em'>\\n      <NumInput\\n        id='someId'\\n        name='someName'\\n        className='someClassName'\\n        label={text('label', 'Username')}\\n        labelColor={text('labelColor', 'text.inputLabel.default')}\\n        placeholder={text('placeholder', 'Enter text here...')}\\n        maxLength={number('maxLength', 10)}\\n        error={boolean('error', true)}\\n        errorMessage={text('errorMessage', 'Some Field Error')}\\n        required={boolean('required', false)}\\n        fullWidth={boolean('fullWidth', false)}\\n        onChange={action('Triggered: onChange')}\\n      />\\n    </Box>\\n  </ThemeWrapper>\\n), {__STORY__, __ADDS_MAP__,__MAIN_FILE_LOCATION__,__MODULE_DEPENDENCIES__,__LOCAL_DEPENDENCIES__,__SOURCE_PREFIX__,__IDS_TO_FRAMEWORKS__}), {__STORY__, __ADDS_MAP__,__MAIN_FILE_LOCATION__,__MODULE_DEPENDENCIES__,__LOCAL_DEPENDENCIES__,__SOURCE_PREFIX__,__IDS_TO_FRAMEWORKS__});;\\n\\nexport const WithOutBorder = addSourceDecorator(addSourceDecorator(() => (\\n  <ThemeWrapper>\\n    <Box bgColor='grey.100' p='2em'>\\n      <NumInput\\n        id='someId'\\n        name='someName'\\n        className='someClassName'\\n        maxLength={number('maxLength', 10)}\\n        error={boolean('error', false)}\\n        onChange={action('Triggered: onChange')}\\n        variant='inline-edit'\\n      />\\n    </Box>\\n  </ThemeWrapper>\\n), {__STORY__, __ADDS_MAP__,__MAIN_FILE_LOCATION__,__MODULE_DEPENDENCIES__,__LOCAL_DEPENDENCIES__,__SOURCE_PREFIX__,__IDS_TO_FRAMEWORKS__}), {__STORY__, __ADDS_MAP__,__MAIN_FILE_LOCATION__,__MODULE_DEPENDENCIES__,__LOCAL_DEPENDENCIES__,__SOURCE_PREFIX__,__IDS_TO_FRAMEWORKS__});;\\n\\nexport const withIcon = addSourceDecorator(addSourceDecorator(() => (\\n  <ThemeWrapper>\\n    <Box p='2em'>\\n      <Position\\n        type='relative'\\n        display='block'\\n        style={object('WrapperStyle', {\\n          // boxShadow: '2px 3px 10px 0px lightgrey',\\n          width: '50%'\\n        })}\\n      >\\n        <NumInput\\n          id='someId'\\n          name='someName'\\n          className='someClassName'\\n          placeholder={text('placeholder', 'Enter text here...')}\\n          maxLength={number('maxLength', 10)}\\n          error={boolean('error', false)}\\n          errorMessage={text('errorMessage', 'Some Field Error')}\\n          required={boolean('required', false)}\\n          fullWidth={boolean('fullWidth', true)}\\n          onChange={action('Triggered: onChange')}\\n          // border={boolean('border', false)}\\n          color={text('color', 'primary.main')}\\n          variant='withIcon'\\n          iconVariant='calendar'\\n          iconSize={15}\\n          // iconStyle={{ padding: '7px 7px 7px 7px' }}\\n          // style={object('style', {\\n          //   fontSize: '14px',\\n          //   minHeight: '30px'\\n          // })}\\n        />\\n      </Position>\\n    </Box>\\n  </ThemeWrapper>\\n), {__STORY__, __ADDS_MAP__,__MAIN_FILE_LOCATION__,__MODULE_DEPENDENCIES__,__LOCAL_DEPENDENCIES__,__SOURCE_PREFIX__,__IDS_TO_FRAMEWORKS__}), {__STORY__, __ADDS_MAP__,__MAIN_FILE_LOCATION__,__MODULE_DEPENDENCIES__,__LOCAL_DEPENDENCIES__,__SOURCE_PREFIX__,__IDS_TO_FRAMEWORKS__});\",\"locationsMap\":{}},\"storySource\":{\"source\":\"\\n\\n// @ts-nocheck\\n// @ts-ignore\\nvar withSourceLoader = require('@storybook/source-loader/preview').withSource;\\n// @ts-ignore\\nvar addSourceDecorator = require(\\\"@storybook/source-loader/preview\\\").addSource;\\n// @ts-ignore\\nvar __SOURCE_PREFIX__ = \\\"/Users/farhanansari/Code/ui-library/src/components/molecules/NumInput\\\";\\n// @ts-ignore\\nvar __STORY__ = \\\"import { action } from '@storybook/addon-actions'\\\\nimport { boolean, number, object, text } from '@storybook/addon-knobs'\\\\nimport React from 'react'\\\\nimport NumInput from '.'\\\\nimport { path } from '..'\\\\nimport ThemeWrapper from '../../../utilities/components/ThemeWrapper'\\\\nimport Box from '../../atoms/Box'\\\\nimport Position from '../Position'\\\\n\\\\nexport default {\\\\n  title: `${path}/NumInput`,\\\\n  component: NumInput\\\\n}\\\\n\\\\nexport const DefaultField = () => (\\\\n  <ThemeWrapper>\\\\n    <Box p='1em'>\\\\n      <NumInput\\\\n        id='someId'\\\\n        name='someName'\\\\n        className='someClassName'\\\\n        label={text('label', 'Username')}\\\\n        labelColor={text('labelColor', 'text.inputLabel.default')}\\\\n        placeholder={text('placeholder', 'Enter text here...')}\\\\n        maxLength={number('maxLength', 10)}\\\\n        error={boolean('error', false)}\\\\n        errorMessage={text('errorMessage', '')}\\\\n        required={boolean('required', false)}\\\\n        fullWidth={boolean('fullWidth', false)}\\\\n        onChange={action('Triggered: onChange')}\\\\n        tooltipMesaage={text('tooltipMesaage', 'i am default label tooltip')}\\\\n      />\\\\n    </Box>\\\\n  </ThemeWrapper>\\\\n)\\\\n\\\\nexport const RequiredField = () => (\\\\n  <ThemeWrapper>\\\\n    <Box p='1em'>\\\\n      <NumInput\\\\n        id='someId'\\\\n        name='someName'\\\\n        className='someClassName'\\\\n        label={text('label', 'Username')}\\\\n        labelColor={text('labelColor', 'text.inputLabel.default')}\\\\n        placeholder={text('placeholder', 'Enter text here...')}\\\\n        maxLength={number('maxLength', 10)}\\\\n        error={boolean('error', false)}\\\\n        errorMessage={text('errorMessage', '')}\\\\n        required={boolean('required', true)}\\\\n        fullWidth={boolean('fullWidth', false)}\\\\n        onChange={action('Triggered: onChange')}\\\\n      />\\\\n    </Box>\\\\n  </ThemeWrapper>\\\\n)\\\\nexport const ErrorField = () => (\\\\n  <ThemeWrapper>\\\\n    <Box p='1em'>\\\\n      <NumInput\\\\n        id='someId'\\\\n        name='someName'\\\\n        className='someClassName'\\\\n        label={text('label', 'Username')}\\\\n        labelColor={text('labelColor', 'text.inputLabel.default')}\\\\n        placeholder={text('placeholder', 'Enter text here...')}\\\\n        maxLength={number('maxLength', 10)}\\\\n        error={boolean('error', true)}\\\\n        errorMessage={text('errorMessage', 'Some Field Error')}\\\\n        required={boolean('required', false)}\\\\n        fullWidth={boolean('fullWidth', false)}\\\\n        onChange={action('Triggered: onChange')}\\\\n      />\\\\n    </Box>\\\\n  </ThemeWrapper>\\\\n)\\\\n\\\\nexport const WithOutBorder = () => (\\\\n  <ThemeWrapper>\\\\n    <Box bgColor='grey.100' p='2em'>\\\\n      <NumInput\\\\n        id='someId'\\\\n        name='someName'\\\\n        className='someClassName'\\\\n        maxLength={number('maxLength', 10)}\\\\n        error={boolean('error', false)}\\\\n        onChange={action('Triggered: onChange')}\\\\n        variant='inline-edit'\\\\n      />\\\\n    </Box>\\\\n  </ThemeWrapper>\\\\n)\\\\n\\\\nexport const withIcon = () => (\\\\n  <ThemeWrapper>\\\\n    <Box p='2em'>\\\\n      <Position\\\\n        type='relative'\\\\n        display='block'\\\\n        style={object('WrapperStyle', {\\\\n          // boxShadow: '2px 3px 10px 0px lightgrey',\\\\n          width: '50%'\\\\n        })}\\\\n      >\\\\n        <NumInput\\\\n          id='someId'\\\\n          name='someName'\\\\n          className='someClassName'\\\\n          placeholder={text('placeholder', 'Enter text here...')}\\\\n          maxLength={number('maxLength', 10)}\\\\n          error={boolean('error', false)}\\\\n          errorMessage={text('errorMessage', 'Some Field Error')}\\\\n          required={boolean('required', false)}\\\\n          fullWidth={boolean('fullWidth', true)}\\\\n          onChange={action('Triggered: onChange')}\\\\n          // border={boolean('border', false)}\\\\n          color={text('color', 'primary.main')}\\\\n          variant='withIcon'\\\\n          iconVariant='calendar'\\\\n          iconSize={15}\\\\n          // iconStyle={{ padding: '7px 7px 7px 7px' }}\\\\n          // style={object('style', {\\\\n          //   fontSize: '14px',\\\\n          //   minHeight: '30px'\\\\n          // })}\\\\n        />\\\\n      </Position>\\\\n    </Box>\\\\n  </ThemeWrapper>\\\\n)\\\\n\\\";\\n// @ts-ignore\\nvar __ADDS_MAP__ = {};\\n// @ts-ignore\\nvar __MAIN_FILE_LOCATION__ = \\\"/NumtInput.stories.tsx\\\";\\n// @ts-ignore\\nvar __MODULE_DEPENDENCIES__ = [];\\n// @ts-ignore\\nvar __LOCAL_DEPENDENCIES__ = {};\\n// @ts-ignore\\nvar __IDS_TO_FRAMEWORKS__ = {};\\n        \\nimport { action } from '@storybook/addon-actions'\\nimport { boolean, number, object, text } from '@storybook/addon-knobs'\\nimport React from 'react'\\nimport NumInput from '.'\\nimport { path } from '..'\\nimport ThemeWrapper from '../../../utilities/components/ThemeWrapper'\\nimport Box from '../../atoms/Box'\\nimport Position from '../Position'\\n\\nexport default {parameters: {\\\"storySource\\\":{\\\"source\\\":\\\"import { action } from '@storybook/addon-actions'\\\\nimport { boolean, number, object, text } from '@storybook/addon-knobs'\\\\nimport React from 'react'\\\\nimport NumInput from '.'\\\\nimport { path } from '..'\\\\nimport ThemeWrapper from '../../../utilities/components/ThemeWrapper'\\\\nimport Box from '../../atoms/Box'\\\\nimport Position from '../Position'\\\\n\\\\nexport default {\\\\n  title: `${path}/NumInput`,\\\\n  component: NumInput\\\\n}\\\\n\\\\nexport const DefaultField = () => (\\\\n  <ThemeWrapper>\\\\n    <Box p='1em'>\\\\n      <NumInput\\\\n        id='someId'\\\\n        name='someName'\\\\n        className='someClassName'\\\\n        label={text('label', 'Username')}\\\\n        labelColor={text('labelColor', 'text.inputLabel.default')}\\\\n        placeholder={text('placeholder', 'Enter text here...')}\\\\n        maxLength={number('maxLength', 10)}\\\\n        error={boolean('error', false)}\\\\n        errorMessage={text('errorMessage', '')}\\\\n        required={boolean('required', false)}\\\\n        fullWidth={boolean('fullWidth', false)}\\\\n        onChange={action('Triggered: onChange')}\\\\n        tooltipMesaage={text('tooltipMesaage', 'i am default label tooltip')}\\\\n      />\\\\n    </Box>\\\\n  </ThemeWrapper>\\\\n)\\\\n\\\\nexport const RequiredField = () => (\\\\n  <ThemeWrapper>\\\\n    <Box p='1em'>\\\\n      <NumInput\\\\n        id='someId'\\\\n        name='someName'\\\\n        className='someClassName'\\\\n        label={text('label', 'Username')}\\\\n        labelColor={text('labelColor', 'text.inputLabel.default')}\\\\n        placeholder={text('placeholder', 'Enter text here...')}\\\\n        maxLength={number('maxLength', 10)}\\\\n        error={boolean('error', false)}\\\\n        errorMessage={text('errorMessage', '')}\\\\n        required={boolean('required', true)}\\\\n        fullWidth={boolean('fullWidth', false)}\\\\n        onChange={action('Triggered: onChange')}\\\\n      />\\\\n    </Box>\\\\n  </ThemeWrapper>\\\\n)\\\\nexport const ErrorField = () => (\\\\n  <ThemeWrapper>\\\\n    <Box p='1em'>\\\\n      <NumInput\\\\n        id='someId'\\\\n        name='someName'\\\\n        className='someClassName'\\\\n        label={text('label', 'Username')}\\\\n        labelColor={text('labelColor', 'text.inputLabel.default')}\\\\n        placeholder={text('placeholder', 'Enter text here...')}\\\\n        maxLength={number('maxLength', 10)}\\\\n        error={boolean('error', true)}\\\\n        errorMessage={text('errorMessage', 'Some Field Error')}\\\\n        required={boolean('required', false)}\\\\n        fullWidth={boolean('fullWidth', false)}\\\\n        onChange={action('Triggered: onChange')}\\\\n      />\\\\n    </Box>\\\\n  </ThemeWrapper>\\\\n)\\\\n\\\\nexport const WithOutBorder = () => (\\\\n  <ThemeWrapper>\\\\n    <Box bgColor='grey.100' p='2em'>\\\\n      <NumInput\\\\n        id='someId'\\\\n        name='someName'\\\\n        className='someClassName'\\\\n        maxLength={number('maxLength', 10)}\\\\n        error={boolean('error', false)}\\\\n        onChange={action('Triggered: onChange')}\\\\n        variant='inline-edit'\\\\n      />\\\\n    </Box>\\\\n  </ThemeWrapper>\\\\n)\\\\n\\\\nexport const withIcon = () => (\\\\n  <ThemeWrapper>\\\\n    <Box p='2em'>\\\\n      <Position\\\\n        type='relative'\\\\n        display='block'\\\\n        style={object('WrapperStyle', {\\\\n          // boxShadow: '2px 3px 10px 0px lightgrey',\\\\n          width: '50%'\\\\n        })}\\\\n      >\\\\n        <NumInput\\\\n          id='someId'\\\\n          name='someName'\\\\n          className='someClassName'\\\\n          placeholder={text('placeholder', 'Enter text here...')}\\\\n          maxLength={number('maxLength', 10)}\\\\n          error={boolean('error', false)}\\\\n          errorMessage={text('errorMessage', 'Some Field Error')}\\\\n          required={boolean('required', false)}\\\\n          fullWidth={boolean('fullWidth', true)}\\\\n          onChange={action('Triggered: onChange')}\\\\n          // border={boolean('border', false)}\\\\n          color={text('color', 'primary.main')}\\\\n          variant='withIcon'\\\\n          iconVariant='calendar'\\\\n          iconSize={15}\\\\n          // iconStyle={{ padding: '7px 7px 7px 7px' }}\\\\n          // style={object('style', {\\\\n          //   fontSize: '14px',\\\\n          //   minHeight: '30px'\\\\n          // })}\\\\n        />\\\\n      </Position>\\\\n    </Box>\\\\n  </ThemeWrapper>\\\\n)\\\\n\\\",\\\"locationsMap\\\":{}},},\\n  title: `${path}/NumInput`,\\n  component: NumInput\\n}\\n\\nexport const DefaultField = addSourceDecorator(() => (\\n  <ThemeWrapper>\\n    <Box p='1em'>\\n      <NumInput\\n        id='someId'\\n        name='someName'\\n        className='someClassName'\\n        label={text('label', 'Username')}\\n        labelColor={text('labelColor', 'text.inputLabel.default')}\\n        placeholder={text('placeholder', 'Enter text here...')}\\n        maxLength={number('maxLength', 10)}\\n        error={boolean('error', false)}\\n        errorMessage={text('errorMessage', '')}\\n        required={boolean('required', false)}\\n        fullWidth={boolean('fullWidth', false)}\\n        onChange={action('Triggered: onChange')}\\n        tooltipMesaage={text('tooltipMesaage', 'i am default label tooltip')}\\n      />\\n    </Box>\\n  </ThemeWrapper>\\n), {__STORY__, __ADDS_MAP__,__MAIN_FILE_LOCATION__,__MODULE_DEPENDENCIES__,__LOCAL_DEPENDENCIES__,__SOURCE_PREFIX__,__IDS_TO_FRAMEWORKS__});\\n\\nexport const RequiredField = addSourceDecorator(() => (\\n  <ThemeWrapper>\\n    <Box p='1em'>\\n      <NumInput\\n        id='someId'\\n        name='someName'\\n        className='someClassName'\\n        label={text('label', 'Username')}\\n        labelColor={text('labelColor', 'text.inputLabel.default')}\\n        placeholder={text('placeholder', 'Enter text here...')}\\n        maxLength={number('maxLength', 10)}\\n        error={boolean('error', false)}\\n        errorMessage={text('errorMessage', '')}\\n        required={boolean('required', true)}\\n        fullWidth={boolean('fullWidth', false)}\\n        onChange={action('Triggered: onChange')}\\n      />\\n    </Box>\\n  </ThemeWrapper>\\n), {__STORY__, __ADDS_MAP__,__MAIN_FILE_LOCATION__,__MODULE_DEPENDENCIES__,__LOCAL_DEPENDENCIES__,__SOURCE_PREFIX__,__IDS_TO_FRAMEWORKS__});\\nexport const ErrorField = addSourceDecorator(() => (\\n  <ThemeWrapper>\\n    <Box p='1em'>\\n      <NumInput\\n        id='someId'\\n        name='someName'\\n        className='someClassName'\\n        label={text('label', 'Username')}\\n        labelColor={text('labelColor', 'text.inputLabel.default')}\\n        placeholder={text('placeholder', 'Enter text here...')}\\n        maxLength={number('maxLength', 10)}\\n        error={boolean('error', true)}\\n        errorMessage={text('errorMessage', 'Some Field Error')}\\n        required={boolean('required', false)}\\n        fullWidth={boolean('fullWidth', false)}\\n        onChange={action('Triggered: onChange')}\\n      />\\n    </Box>\\n  </ThemeWrapper>\\n), {__STORY__, __ADDS_MAP__,__MAIN_FILE_LOCATION__,__MODULE_DEPENDENCIES__,__LOCAL_DEPENDENCIES__,__SOURCE_PREFIX__,__IDS_TO_FRAMEWORKS__});\\n\\nexport const WithOutBorder = addSourceDecorator(() => (\\n  <ThemeWrapper>\\n    <Box bgColor='grey.100' p='2em'>\\n      <NumInput\\n        id='someId'\\n        name='someName'\\n        className='someClassName'\\n        maxLength={number('maxLength', 10)}\\n        error={boolean('error', false)}\\n        onChange={action('Triggered: onChange')}\\n        variant='inline-edit'\\n      />\\n    </Box>\\n  </ThemeWrapper>\\n), {__STORY__, __ADDS_MAP__,__MAIN_FILE_LOCATION__,__MODULE_DEPENDENCIES__,__LOCAL_DEPENDENCIES__,__SOURCE_PREFIX__,__IDS_TO_FRAMEWORKS__});\\n\\nexport const withIcon = addSourceDecorator(() => (\\n  <ThemeWrapper>\\n    <Box p='2em'>\\n      <Position\\n        type='relative'\\n        display='block'\\n        style={object('WrapperStyle', {\\n          // boxShadow: '2px 3px 10px 0px lightgrey',\\n          width: '50%'\\n        })}\\n      >\\n        <NumInput\\n          id='someId'\\n          name='someName'\\n          className='someClassName'\\n          placeholder={text('placeholder', 'Enter text here...')}\\n          maxLength={number('maxLength', 10)}\\n          error={boolean('error', false)}\\n          errorMessage={text('errorMessage', 'Some Field Error')}\\n          required={boolean('required', false)}\\n          fullWidth={boolean('fullWidth', true)}\\n          onChange={action('Triggered: onChange')}\\n          // border={boolean('border', false)}\\n          color={text('color', 'primary.main')}\\n          variant='withIcon'\\n          iconVariant='calendar'\\n          iconSize={15}\\n          // iconStyle={{ padding: '7px 7px 7px 7px' }}\\n          // style={object('style', {\\n          //   fontSize: '14px',\\n          //   minHeight: '30px'\\n          // })}\\n        />\\n      </Position>\\n    </Box>\\n  </ThemeWrapper>\\n), {__STORY__, __ADDS_MAP__,__MAIN_FILE_LOCATION__,__MODULE_DEPENDENCIES__,__LOCAL_DEPENDENCIES__,__SOURCE_PREFIX__,__IDS_TO_FRAMEWORKS__});\",\"locationsMap\":{}},\"storySource\":{\"source\":\"import { action } from '@storybook/addon-actions'\\nimport { boolean, number, object, text } from '@storybook/addon-knobs'\\nimport React from 'react'\\nimport NumInput from '.'\\nimport { path } from '..'\\nimport ThemeWrapper from '../../../utilities/components/ThemeWrapper'\\nimport Box from '../../atoms/Box'\\nimport Position from '../Position'\\n\\nexport default {\\n  title: `${path}/NumInput`,\\n  component: NumInput\\n}\\n\\nexport const DefaultField = () => (\\n  <ThemeWrapper>\\n    <Box p='1em'>\\n      <NumInput\\n        id='someId'\\n        name='someName'\\n        className='someClassName'\\n        label={text('label', 'Username')}\\n        labelColor={text('labelColor', 'text.inputLabel.default')}\\n        placeholder={text('placeholder', 'Enter text here...')}\\n        maxLength={number('maxLength', 10)}\\n        error={boolean('error', false)}\\n        errorMessage={text('errorMessage', '')}\\n        required={boolean('required', false)}\\n        fullWidth={boolean('fullWidth', false)}\\n        onChange={action('Triggered: onChange')}\\n        tooltipMesaage={text('tooltipMesaage', 'i am default label tooltip')}\\n      />\\n    </Box>\\n  </ThemeWrapper>\\n)\\n\\nexport const RequiredField = () => (\\n  <ThemeWrapper>\\n    <Box p='1em'>\\n      <NumInput\\n        id='someId'\\n        name='someName'\\n        className='someClassName'\\n        label={text('label', 'Username')}\\n        labelColor={text('labelColor', 'text.inputLabel.default')}\\n        placeholder={text('placeholder', 'Enter text here...')}\\n        maxLength={number('maxLength', 10)}\\n        error={boolean('error', false)}\\n        errorMessage={text('errorMessage', '')}\\n        required={boolean('required', true)}\\n        fullWidth={boolean('fullWidth', false)}\\n        onChange={action('Triggered: onChange')}\\n      />\\n    </Box>\\n  </ThemeWrapper>\\n)\\nexport const ErrorField = () => (\\n  <ThemeWrapper>\\n    <Box p='1em'>\\n      <NumInput\\n        id='someId'\\n        name='someName'\\n        className='someClassName'\\n        label={text('label', 'Username')}\\n        labelColor={text('labelColor', 'text.inputLabel.default')}\\n        placeholder={text('placeholder', 'Enter text here...')}\\n        maxLength={number('maxLength', 10)}\\n        error={boolean('error', true)}\\n        errorMessage={text('errorMessage', 'Some Field Error')}\\n        required={boolean('required', false)}\\n        fullWidth={boolean('fullWidth', false)}\\n        onChange={action('Triggered: onChange')}\\n      />\\n    </Box>\\n  </ThemeWrapper>\\n)\\n\\nexport const WithOutBorder = () => (\\n  <ThemeWrapper>\\n    <Box bgColor='grey.100' p='2em'>\\n      <NumInput\\n        id='someId'\\n        name='someName'\\n        className='someClassName'\\n        maxLength={number('maxLength', 10)}\\n        error={boolean('error', false)}\\n        onChange={action('Triggered: onChange')}\\n        variant='inline-edit'\\n      />\\n    </Box>\\n  </ThemeWrapper>\\n)\\n\\nexport const withIcon = () => (\\n  <ThemeWrapper>\\n    <Box p='2em'>\\n      <Position\\n        type='relative'\\n        display='block'\\n        style={object('WrapperStyle', {\\n          // boxShadow: '2px 3px 10px 0px lightgrey',\\n          width: '50%'\\n        })}\\n      >\\n        <NumInput\\n          id='someId'\\n          name='someName'\\n          className='someClassName'\\n          placeholder={text('placeholder', 'Enter text here...')}\\n          maxLength={number('maxLength', 10)}\\n          error={boolean('error', false)}\\n          errorMessage={text('errorMessage', 'Some Field Error')}\\n          required={boolean('required', false)}\\n          fullWidth={boolean('fullWidth', true)}\\n          onChange={action('Triggered: onChange')}\\n          // border={boolean('border', false)}\\n          color={text('color', 'primary.main')}\\n          variant='withIcon'\\n          iconVariant='calendar'\\n          iconSize={15}\\n          // iconStyle={{ padding: '7px 7px 7px 7px' }}\\n          // style={object('style', {\\n          //   fontSize: '14px',\\n          //   minHeight: '30px'\\n          // })}\\n        />\\n      </Position>\\n    </Box>\\n  </ThemeWrapper>\\n)\\n\",\"locationsMap\":{}},},\n  title: `${path}/NumInput`,\n  component: NumInput\n}\n\nexport const DefaultField = addSourceDecorator(addSourceDecorator(addSourceDecorator(() => (\n  <ThemeWrapper>\n    <Box p='1em'>\n      <NumInput\n        id='someId'\n        name='someName'\n        className='someClassName'\n        label={text('label', 'Username')}\n        labelColor={text('labelColor', 'text.inputLabel.default')}\n        placeholder={text('placeholder', 'Enter text here...')}\n        maxLength={number('maxLength', 10)}\n        error={boolean('error', false)}\n        errorMessage={text('errorMessage', '')}\n        required={boolean('required', false)}\n        fullWidth={boolean('fullWidth', false)}\n        onChange={action('Triggered: onChange')}\n        tooltipMesaage={text('tooltipMesaage', 'i am default label tooltip')}\n      />\n    </Box>\n  </ThemeWrapper>\n), {__STORY__, __ADDS_MAP__,__MAIN_FILE_LOCATION__,__MODULE_DEPENDENCIES__,__LOCAL_DEPENDENCIES__,__SOURCE_PREFIX__,__IDS_TO_FRAMEWORKS__}), {__STORY__, __ADDS_MAP__,__MAIN_FILE_LOCATION__,__MODULE_DEPENDENCIES__,__LOCAL_DEPENDENCIES__,__SOURCE_PREFIX__,__IDS_TO_FRAMEWORKS__}), {__STORY__, __ADDS_MAP__,__MAIN_FILE_LOCATION__,__MODULE_DEPENDENCIES__,__LOCAL_DEPENDENCIES__,__SOURCE_PREFIX__,__IDS_TO_FRAMEWORKS__});;;\n\nexport const RequiredField = addSourceDecorator(addSourceDecorator(addSourceDecorator(() => (\n  <ThemeWrapper>\n    <Box p='1em'>\n      <NumInput\n        id='someId'\n        name='someName'\n        className='someClassName'\n        label={text('label', 'Username')}\n        labelColor={text('labelColor', 'text.inputLabel.default')}\n        placeholder={text('placeholder', 'Enter text here...')}\n        maxLength={number('maxLength', 10)}\n        error={boolean('error', false)}\n        errorMessage={text('errorMessage', '')}\n        required={boolean('required', true)}\n        fullWidth={boolean('fullWidth', false)}\n        onChange={action('Triggered: onChange')}\n      />\n    </Box>\n  </ThemeWrapper>\n), {__STORY__, __ADDS_MAP__,__MAIN_FILE_LOCATION__,__MODULE_DEPENDENCIES__,__LOCAL_DEPENDENCIES__,__SOURCE_PREFIX__,__IDS_TO_FRAMEWORKS__}), {__STORY__, __ADDS_MAP__,__MAIN_FILE_LOCATION__,__MODULE_DEPENDENCIES__,__LOCAL_DEPENDENCIES__,__SOURCE_PREFIX__,__IDS_TO_FRAMEWORKS__}), {__STORY__, __ADDS_MAP__,__MAIN_FILE_LOCATION__,__MODULE_DEPENDENCIES__,__LOCAL_DEPENDENCIES__,__SOURCE_PREFIX__,__IDS_TO_FRAMEWORKS__});;;\nexport const ErrorField = addSourceDecorator(addSourceDecorator(addSourceDecorator(() => (\n  <ThemeWrapper>\n    <Box p='1em'>\n      <NumInput\n        id='someId'\n        name='someName'\n        className='someClassName'\n        label={text('label', 'Username')}\n        labelColor={text('labelColor', 'text.inputLabel.default')}\n        placeholder={text('placeholder', 'Enter text here...')}\n        maxLength={number('maxLength', 10)}\n        error={boolean('error', true)}\n        errorMessage={text('errorMessage', 'Some Field Error')}\n        required={boolean('required', false)}\n        fullWidth={boolean('fullWidth', false)}\n        onChange={action('Triggered: onChange')}\n      />\n    </Box>\n  </ThemeWrapper>\n), {__STORY__, __ADDS_MAP__,__MAIN_FILE_LOCATION__,__MODULE_DEPENDENCIES__,__LOCAL_DEPENDENCIES__,__SOURCE_PREFIX__,__IDS_TO_FRAMEWORKS__}), {__STORY__, __ADDS_MAP__,__MAIN_FILE_LOCATION__,__MODULE_DEPENDENCIES__,__LOCAL_DEPENDENCIES__,__SOURCE_PREFIX__,__IDS_TO_FRAMEWORKS__}), {__STORY__, __ADDS_MAP__,__MAIN_FILE_LOCATION__,__MODULE_DEPENDENCIES__,__LOCAL_DEPENDENCIES__,__SOURCE_PREFIX__,__IDS_TO_FRAMEWORKS__});;;\n\nexport const WithOutBorder = addSourceDecorator(addSourceDecorator(addSourceDecorator(() => (\n  <ThemeWrapper>\n    <Box bgColor='grey.100' p='2em'>\n      <NumInput\n        id='someId'\n        name='someName'\n        className='someClassName'\n        maxLength={number('maxLength', 10)}\n        error={boolean('error', false)}\n        onChange={action('Triggered: onChange')}\n        variant='inline-edit'\n      />\n    </Box>\n  </ThemeWrapper>\n), {__STORY__, __ADDS_MAP__,__MAIN_FILE_LOCATION__,__MODULE_DEPENDENCIES__,__LOCAL_DEPENDENCIES__,__SOURCE_PREFIX__,__IDS_TO_FRAMEWORKS__}), {__STORY__, __ADDS_MAP__,__MAIN_FILE_LOCATION__,__MODULE_DEPENDENCIES__,__LOCAL_DEPENDENCIES__,__SOURCE_PREFIX__,__IDS_TO_FRAMEWORKS__}), {__STORY__, __ADDS_MAP__,__MAIN_FILE_LOCATION__,__MODULE_DEPENDENCIES__,__LOCAL_DEPENDENCIES__,__SOURCE_PREFIX__,__IDS_TO_FRAMEWORKS__});;;\n\nexport const withIcon = addSourceDecorator(addSourceDecorator(addSourceDecorator(() => (\n  <ThemeWrapper>\n    <Box p='2em'>\n      <Position\n        type='relative'\n        display='block'\n        style={object('WrapperStyle', {\n          // boxShadow: '2px 3px 10px 0px lightgrey',\n          width: '50%'\n        })}\n      >\n        <NumInput\n          id='someId'\n          name='someName'\n          className='someClassName'\n          placeholder={text('placeholder', 'Enter text here...')}\n          maxLength={number('maxLength', 10)}\n          error={boolean('error', false)}\n          errorMessage={text('errorMessage', 'Some Field Error')}\n          required={boolean('required', false)}\n          fullWidth={boolean('fullWidth', true)}\n          onChange={action('Triggered: onChange')}\n          // border={boolean('border', false)}\n          color={text('color', 'primary.main')}\n          variant='withIcon'\n          iconVariant='calendar'\n          iconSize={15}\n          // iconStyle={{ padding: '7px 7px 7px 7px' }}\n          // style={object('style', {\n          //   fontSize: '14px',\n          //   minHeight: '30px'\n          // })}\n        />\n      </Position>\n    </Box>\n  </ThemeWrapper>\n), {__STORY__, __ADDS_MAP__,__MAIN_FILE_LOCATION__,__MODULE_DEPENDENCIES__,__LOCAL_DEPENDENCIES__,__SOURCE_PREFIX__,__IDS_TO_FRAMEWORKS__}), {__STORY__, __ADDS_MAP__,__MAIN_FILE_LOCATION__,__MODULE_DEPENDENCIES__,__LOCAL_DEPENDENCIES__,__SOURCE_PREFIX__,__IDS_TO_FRAMEWORKS__}), {__STORY__, __ADDS_MAP__,__MAIN_FILE_LOCATION__,__MODULE_DEPENDENCIES__,__LOCAL_DEPENDENCIES__,__SOURCE_PREFIX__,__IDS_TO_FRAMEWORKS__});"],"sourceRoot":""},"metadata":{},"sourceType":"module"}