{"ast":null,"code":"import _defineProperty from \"/Users/farhanansari/Desktop/CODE/PrxProject/untitled folder/reactStoryBook/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/defineProperty\";\n\nvar _parameters;\n\n/* eslint-disable */\n// @ts-nocheck\n// @ts-ignore\nvar withSourceLoader = require('@storybook/source-loader/preview').withSource; // @ts-ignore\n\n\nvar addSourceDecorator = require(\"@storybook/source-loader/preview\").addSource; // @ts-ignore\n\n\nvar __SOURCE_PREFIX__ = \"/Users/farhanansari/Desktop/CODE/PrxProject/untitled folder/reactStoryBook/src/components/molecules/MultiSelect/stories\"; // @ts-ignore\n\nvar __STORY__ = \"\\n\\n// @ts-nocheck\\n// @ts-ignore\\nvar withSourceLoader = require('@storybook/source-loader/preview').withSource;\\n// @ts-ignore\\nvar addSourceDecorator = require(\\\"@storybook/source-loader/preview\\\").addSource;\\n// @ts-ignore\\nvar __SOURCE_PREFIX__ = \\\"/Users/farhanansari/Desktop/CODE/PrxProject/untitled folder/reactStoryBook/src/components/molecules/MultiSelect/stories\\\";\\n// @ts-ignore\\nvar __STORY__ = \\\"\\\\n\\\\n// @ts-nocheck\\\\n// @ts-ignore\\\\nvar withSourceLoader = require('@storybook/source-loader/preview').withSource;\\\\n// @ts-ignore\\\\nvar addSourceDecorator = require(\\\\\\\"@storybook/source-loader/preview\\\\\\\").addSource;\\\\n// @ts-ignore\\\\nvar __SOURCE_PREFIX__ = \\\\\\\"/Users/farhanansari/Desktop/CODE/PrxProject/untitled folder/reactStoryBook/src/components/molecules/MultiSelect/stories\\\\\\\";\\\\n// @ts-ignore\\\\nvar __STORY__ = \\\\\\\"import React from 'react'\\\\\\\\nimport MultiSelect from '../index'\\\\\\\\nimport { path } from '../..'\\\\\\\\nimport ThemeWrapper from '../../../../utilities/components/ThemeWrapper'\\\\\\\\n\\\\\\\\nimport {\\\\\\\\n  text,\\\\\\\\n  object,\\\\\\\\n  withKnobs,\\\\\\\\n  boolean,\\\\\\\\n  number,\\\\\\\\n  array\\\\\\\\n} from '@storybook/addon-knobs'\\\\\\\\nimport { action } from '@storybook/addon-actions'\\\\\\\\nimport Button from '../../../atoms/Button'\\\\\\\\nimport Position from '../../Position'\\\\\\\\nimport FontIcon from '../../../atoms/FontIcon'\\\\\\\\nimport { tMultiSelectChildren } from '../interfaces'\\\\\\\\n\\\\\\\\nexport default {\\\\\\\\n  title: `${path}/MultiSelect`,\\\\\\\\n  component: MultiSelect,\\\\\\\\n  decorators: [withKnobs],\\\\\\\\n  parameters: {\\\\\\\\n    props: {\\\\\\\\n      propTablesExclude: [Button, ThemeWrapper, Position, FontIcon]\\\\\\\\n    }\\\\\\\\n  }\\\\\\\\n}\\\\\\\\n\\\\\\\\nconst options = [\\\\\\\\n  { value: 'ocean', label: 'Ocean', phoneNumber: '1234', age: '10' },\\\\\\\\n  { value: 'blue', label: 'Blue', phoneNumber: '455556', age: '12' },\\\\\\\\n  { value: 'purple', label: 'Purple', phoneNumber: '67778', age: '13' },\\\\\\\\n  { value: 'red', label: 'Red', phoneNumber: '89990', age: '14' },\\\\\\\\n  { value: 'orange', label: 'Orange', phoneNumber: '001323', age: '15' },\\\\\\\\n  { value: 'yellow', label: 'Yellow', phoneNumber: '99243452', age: '16' },\\\\\\\\n  { value: 'green', label: 'Green', phoneNumber: '120009', age: '18' },\\\\\\\\n  { value: 'forest', label: 'Forest', phoneNumber: '0000000', age: '20' },\\\\\\\\n  { value: 'slate', label: 'Slate', phoneNumber: '11111111', age: '30' },\\\\\\\\n  { value: 'silver', label: 'Silver', phoneNumber: '22222222', age: '40' }\\\\\\\\n]\\\\\\\\nconst selectedOptions = [\\\\\\\\n  { value: 'ocean', label: 'Ocean', phoneNumber: '1234', age: '10' },\\\\\\\\n  { value: 'blue', label: 'Blue', phoneNumber: '455556', age: '12' },\\\\\\\\n  { value: 'purple', label: 'Purple', phoneNumber: '67778', age: '13' },\\\\\\\\n  { value: 'red', label: 'Red', phoneNumber: '89990', age: '14' },\\\\\\\\n  { value: 'forest', label: 'Forest', phoneNumber: '0000000', age: '20' },\\\\\\\\n  { value: 'slate', label: 'Slate', phoneNumber: '11111111', age: '30' }\\\\\\\\n]\\\\\\\\n\\\\\\\\nexport const withButton = () => (\\\\\\\\n  <ThemeWrapper>\\\\\\\\n    <Position type='relative'>\\\\\\\\n      <MultiSelect\\\\\\\\n        id={text('id', 'Colors')}\\\\\\\\n        width={text('width', '300px')}\\\\\\\\n        options={object('Multi Select Options', options)}\\\\\\\\n        onChange={action('Multi Select changed')}\\\\\\\\n        style={object('styles', {\\\\\\\\n          position: 'absolute',\\\\\\\\n          top: '0px',\\\\\\\\n          left: '145px'\\\\\\\\n        })}\\\\\\\\n        isLoading={boolean('isLoading', false)}\\\\\\\\n        isNoOption={boolean('isNoOption', false)}\\\\\\\\n        menuOpen={boolean('menuOpen', false)}\\\\\\\\n        selected={object('Selected', selectedOptions)}\\\\\\\\n        allowSelectAll={boolean('allowSelectAll', false)}\\\\\\\\n        maximumSelected={number('maximum Selected', 4)}\\\\\\\\n        searchableKeys={array('Searchable Keys', [\\\\\\\\n          'value',\\\\\\\\n          'label',\\\\\\\\n          'phoneNumber',\\\\\\\\n          'age'\\\\\\\\n        ])}\\\\\\\\n      >\\\\\\\\n        {({ optionSelected, isMenuOpen, openMenu }: tMultiSelectChildren) => (\\\\\\\\n          <>\\\\\\\\n            {openMenu}\\\\\\\\n            <Button\\\\\\\\n              id='id'\\\\\\\\n              variant='button'\\\\\\\\n              onClick={() => {\\\\\\\\n                console.log(optionSelected)\\\\\\\\n                openMenu(!isMenuOpen)\\\\\\\\n                action('MultiSelect opened/closed')(isMenuOpen)\\\\\\\\n              }}\\\\\\\\n            >\\\\\\\\n              <React.Fragment>\\\\\\\\n                <span>Open MultiSelect</span>\\\\\\\\n                <FontIcon variant='angle-right' size='sm' />\\\\\\\\n              </React.Fragment>\\\\\\\\n            </Button>\\\\\\\\n          </>\\\\\\\\n        )}\\\\\\\\n      </MultiSelect>\\\\\\\\n    </Position>\\\\\\\\n  </ThemeWrapper>\\\\\\\\n)\\\\\\\\n\\\\\\\";\\\\n// @ts-ignore\\\\nvar __ADDS_MAP__ = {};\\\\n// @ts-ignore\\\\nvar __MAIN_FILE_LOCATION__ = \\\\\\\"/withButton.stories.tsx\\\\\\\";\\\\n// @ts-ignore\\\\nvar __MODULE_DEPENDENCIES__ = [];\\\\n// @ts-ignore\\\\nvar __LOCAL_DEPENDENCIES__ = {};\\\\n// @ts-ignore\\\\nvar __IDS_TO_FRAMEWORKS__ = {};\\\\n        \\\\nimport React from 'react'\\\\nimport MultiSelect from '../index'\\\\nimport { path } from '../..'\\\\nimport ThemeWrapper from '../../../../utilities/components/ThemeWrapper'\\\\n\\\\nimport {\\\\n  text,\\\\n  object,\\\\n  withKnobs,\\\\n  boolean,\\\\n  number,\\\\n  array\\\\n} from '@storybook/addon-knobs'\\\\nimport { action } from '@storybook/addon-actions'\\\\nimport Button from '../../../atoms/Button'\\\\nimport Position from '../../Position'\\\\nimport FontIcon from '../../../atoms/FontIcon'\\\\nimport { tMultiSelectChildren } from '../interfaces'\\\\n\\\\nexport default {\\\\n  title: `${path}/MultiSelect`,\\\\n  component: MultiSelect,\\\\n  decorators: [withKnobs],\\\\n  parameters: {\\\\\\\"storySource\\\\\\\":{\\\\\\\"source\\\\\\\":\\\\\\\"import React from 'react'\\\\\\\\nimport MultiSelect from '../index'\\\\\\\\nimport { path } from '../..'\\\\\\\\nimport ThemeWrapper from '../../../../utilities/components/ThemeWrapper'\\\\\\\\n\\\\\\\\nimport {\\\\\\\\n  text,\\\\\\\\n  object,\\\\\\\\n  withKnobs,\\\\\\\\n  boolean,\\\\\\\\n  number,\\\\\\\\n  array\\\\\\\\n} from '@storybook/addon-knobs'\\\\\\\\nimport { action } from '@storybook/addon-actions'\\\\\\\\nimport Button from '../../../atoms/Button'\\\\\\\\nimport Position from '../../Position'\\\\\\\\nimport FontIcon from '../../../atoms/FontIcon'\\\\\\\\nimport { tMultiSelectChildren } from '../interfaces'\\\\\\\\n\\\\\\\\nexport default {\\\\\\\\n  title: `${path}/MultiSelect`,\\\\\\\\n  component: MultiSelect,\\\\\\\\n  decorators: [withKnobs],\\\\\\\\n  parameters: {\\\\\\\\n    props: {\\\\\\\\n      propTablesExclude: [Button, ThemeWrapper, Position, FontIcon]\\\\\\\\n    }\\\\\\\\n  }\\\\\\\\n}\\\\\\\\n\\\\\\\\nconst options = [\\\\\\\\n  { value: 'ocean', label: 'Ocean', phoneNumber: '1234', age: '10' },\\\\\\\\n  { value: 'blue', label: 'Blue', phoneNumber: '455556', age: '12' },\\\\\\\\n  { value: 'purple', label: 'Purple', phoneNumber: '67778', age: '13' },\\\\\\\\n  { value: 'red', label: 'Red', phoneNumber: '89990', age: '14' },\\\\\\\\n  { value: 'orange', label: 'Orange', phoneNumber: '001323', age: '15' },\\\\\\\\n  { value: 'yellow', label: 'Yellow', phoneNumber: '99243452', age: '16' },\\\\\\\\n  { value: 'green', label: 'Green', phoneNumber: '120009', age: '18' },\\\\\\\\n  { value: 'forest', label: 'Forest', phoneNumber: '0000000', age: '20' },\\\\\\\\n  { value: 'slate', label: 'Slate', phoneNumber: '11111111', age: '30' },\\\\\\\\n  { value: 'silver', label: 'Silver', phoneNumber: '22222222', age: '40' }\\\\\\\\n]\\\\\\\\nconst selectedOptions = [\\\\\\\\n  { value: 'ocean', label: 'Ocean', phoneNumber: '1234', age: '10' },\\\\\\\\n  { value: 'blue', label: 'Blue', phoneNumber: '455556', age: '12' },\\\\\\\\n  { value: 'purple', label: 'Purple', phoneNumber: '67778', age: '13' },\\\\\\\\n  { value: 'red', label: 'Red', phoneNumber: '89990', age: '14' },\\\\\\\\n  { value: 'forest', label: 'Forest', phoneNumber: '0000000', age: '20' },\\\\\\\\n  { value: 'slate', label: 'Slate', phoneNumber: '11111111', age: '30' }\\\\\\\\n]\\\\\\\\n\\\\\\\\nexport const withButton = () => (\\\\\\\\n  <ThemeWrapper>\\\\\\\\n    <Position type='relative'>\\\\\\\\n      <MultiSelect\\\\\\\\n        id={text('id', 'Colors')}\\\\\\\\n        width={text('width', '300px')}\\\\\\\\n        options={object('Multi Select Options', options)}\\\\\\\\n        onChange={action('Multi Select changed')}\\\\\\\\n        style={object('styles', {\\\\\\\\n          position: 'absolute',\\\\\\\\n          top: '0px',\\\\\\\\n          left: '145px'\\\\\\\\n        })}\\\\\\\\n        isLoading={boolean('isLoading', false)}\\\\\\\\n        isNoOption={boolean('isNoOption', false)}\\\\\\\\n        menuOpen={boolean('menuOpen', false)}\\\\\\\\n        selected={object('Selected', selectedOptions)}\\\\\\\\n        allowSelectAll={boolean('allowSelectAll', false)}\\\\\\\\n        maximumSelected={number('maximum Selected', 4)}\\\\\\\\n        searchableKeys={array('Searchable Keys', [\\\\\\\\n          'value',\\\\\\\\n          'label',\\\\\\\\n          'phoneNumber',\\\\\\\\n          'age'\\\\\\\\n        ])}\\\\\\\\n      >\\\\\\\\n        {({ optionSelected, isMenuOpen, openMenu }: tMultiSelectChildren) => (\\\\\\\\n          <>\\\\\\\\n            {openMenu}\\\\\\\\n            <Button\\\\\\\\n              id='id'\\\\\\\\n              variant='button'\\\\\\\\n              onClick={() => {\\\\\\\\n                console.log(optionSelected)\\\\\\\\n                openMenu(!isMenuOpen)\\\\\\\\n                action('MultiSelect opened/closed')(isMenuOpen)\\\\\\\\n              }}\\\\\\\\n            >\\\\\\\\n              <React.Fragment>\\\\\\\\n                <span>Open MultiSelect</span>\\\\\\\\n                <FontIcon variant='angle-right' size='sm' />\\\\\\\\n              </React.Fragment>\\\\\\\\n            </Button>\\\\\\\\n          </>\\\\\\\\n        )}\\\\\\\\n      </MultiSelect>\\\\\\\\n    </Position>\\\\\\\\n  </ThemeWrapper>\\\\\\\\n)\\\\\\\\n\\\\\\\",\\\\\\\"locationsMap\\\\\\\":{}},\\\\n    props: {\\\\n      propTablesExclude: [Button, ThemeWrapper, Position, FontIcon]\\\\n    }\\\\n  },}\\\\n\\\\nconst options = [\\\\n  { value: 'ocean', label: 'Ocean', phoneNumber: '1234', age: '10' },\\\\n  { value: 'blue', label: 'Blue', phoneNumber: '455556', age: '12' },\\\\n  { value: 'purple', label: 'Purple', phoneNumber: '67778', age: '13' },\\\\n  { value: 'red', label: 'Red', phoneNumber: '89990', age: '14' },\\\\n  { value: 'orange', label: 'Orange', phoneNumber: '001323', age: '15' },\\\\n  { value: 'yellow', label: 'Yellow', phoneNumber: '99243452', age: '16' },\\\\n  { value: 'green', label: 'Green', phoneNumber: '120009', age: '18' },\\\\n  { value: 'forest', label: 'Forest', phoneNumber: '0000000', age: '20' },\\\\n  { value: 'slate', label: 'Slate', phoneNumber: '11111111', age: '30' },\\\\n  { value: 'silver', label: 'Silver', phoneNumber: '22222222', age: '40' }\\\\n]\\\\nconst selectedOptions = [\\\\n  { value: 'ocean', label: 'Ocean', phoneNumber: '1234', age: '10' },\\\\n  { value: 'blue', label: 'Blue', phoneNumber: '455556', age: '12' },\\\\n  { value: 'purple', label: 'Purple', phoneNumber: '67778', age: '13' },\\\\n  { value: 'red', label: 'Red', phoneNumber: '89990', age: '14' },\\\\n  { value: 'forest', label: 'Forest', phoneNumber: '0000000', age: '20' },\\\\n  { value: 'slate', label: 'Slate', phoneNumber: '11111111', age: '30' }\\\\n]\\\\n\\\\nexport const withButton = addSourceDecorator(() => (\\\\n  <ThemeWrapper>\\\\n    <Position type='relative'>\\\\n      <MultiSelect\\\\n        id={text('id', 'Colors')}\\\\n        width={text('width', '300px')}\\\\n        options={object('Multi Select Options', options)}\\\\n        onChange={action('Multi Select changed')}\\\\n        style={object('styles', {\\\\n          position: 'absolute',\\\\n          top: '0px',\\\\n          left: '145px'\\\\n        })}\\\\n        isLoading={boolean('isLoading', false)}\\\\n        isNoOption={boolean('isNoOption', false)}\\\\n        menuOpen={boolean('menuOpen', false)}\\\\n        selected={object('Selected', selectedOptions)}\\\\n        allowSelectAll={boolean('allowSelectAll', false)}\\\\n        maximumSelected={number('maximum Selected', 4)}\\\\n        searchableKeys={array('Searchable Keys', [\\\\n          'value',\\\\n          'label',\\\\n          'phoneNumber',\\\\n          'age'\\\\n        ])}\\\\n      >\\\\n        {({ optionSelected, isMenuOpen, openMenu }: tMultiSelectChildren) => (\\\\n          <>\\\\n            {openMenu}\\\\n            <Button\\\\n              id='id'\\\\n              variant='button'\\\\n              onClick={() => {\\\\n                console.log(optionSelected)\\\\n                openMenu(!isMenuOpen)\\\\n                action('MultiSelect opened/closed')(isMenuOpen)\\\\n              }}\\\\n            >\\\\n              <React.Fragment>\\\\n                <span>Open MultiSelect</span>\\\\n                <FontIcon variant='angle-right' size='sm' />\\\\n              </React.Fragment>\\\\n            </Button>\\\\n          </>\\\\n        )}\\\\n      </MultiSelect>\\\\n    </Position>\\\\n  </ThemeWrapper>\\\\n), {__STORY__, __ADDS_MAP__,__MAIN_FILE_LOCATION__,__MODULE_DEPENDENCIES__,__LOCAL_DEPENDENCIES__,__SOURCE_PREFIX__,__IDS_TO_FRAMEWORKS__});\\\";\\n// @ts-ignore\\nvar __ADDS_MAP__ = {};\\n// @ts-ignore\\nvar __MAIN_FILE_LOCATION__ = \\\"/withButton.stories.tsx\\\";\\n// @ts-ignore\\nvar __MODULE_DEPENDENCIES__ = [];\\n// @ts-ignore\\nvar __LOCAL_DEPENDENCIES__ = {};\\n// @ts-ignore\\nvar __IDS_TO_FRAMEWORKS__ = {};\\n        \\n\\n\\n// @ts-nocheck\\n// @ts-ignore\\nvar withSourceLoader = require('@storybook/source-loader/preview').withSource;\\n// @ts-ignore\\nvar addSourceDecorator = require(\\\"@storybook/source-loader/preview\\\").addSource;\\n// @ts-ignore\\nvar __SOURCE_PREFIX__ = \\\"/Users/farhanansari/Desktop/CODE/PrxProject/untitled folder/reactStoryBook/src/components/molecules/MultiSelect/stories\\\";\\n// @ts-ignore\\nvar __STORY__ = \\\"import React from 'react'\\\\nimport MultiSelect from '../index'\\\\nimport { path } from '../..'\\\\nimport ThemeWrapper from '../../../../utilities/components/ThemeWrapper'\\\\n\\\\nimport {\\\\n  text,\\\\n  object,\\\\n  withKnobs,\\\\n  boolean,\\\\n  number,\\\\n  array\\\\n} from '@storybook/addon-knobs'\\\\nimport { action } from '@storybook/addon-actions'\\\\nimport Button from '../../../atoms/Button'\\\\nimport Position from '../../Position'\\\\nimport FontIcon from '../../../atoms/FontIcon'\\\\nimport { tMultiSelectChildren } from '../interfaces'\\\\n\\\\nexport default {\\\\n  title: `${path}/MultiSelect`,\\\\n  component: MultiSelect,\\\\n  decorators: [withKnobs],\\\\n  parameters: {\\\\n    props: {\\\\n      propTablesExclude: [Button, ThemeWrapper, Position, FontIcon]\\\\n    }\\\\n  }\\\\n}\\\\n\\\\nconst options = [\\\\n  { value: 'ocean', label: 'Ocean', phoneNumber: '1234', age: '10' },\\\\n  { value: 'blue', label: 'Blue', phoneNumber: '455556', age: '12' },\\\\n  { value: 'purple', label: 'Purple', phoneNumber: '67778', age: '13' },\\\\n  { value: 'red', label: 'Red', phoneNumber: '89990', age: '14' },\\\\n  { value: 'orange', label: 'Orange', phoneNumber: '001323', age: '15' },\\\\n  { value: 'yellow', label: 'Yellow', phoneNumber: '99243452', age: '16' },\\\\n  { value: 'green', label: 'Green', phoneNumber: '120009', age: '18' },\\\\n  { value: 'forest', label: 'Forest', phoneNumber: '0000000', age: '20' },\\\\n  { value: 'slate', label: 'Slate', phoneNumber: '11111111', age: '30' },\\\\n  { value: 'silver', label: 'Silver', phoneNumber: '22222222', age: '40' }\\\\n]\\\\nconst selectedOptions = [\\\\n  { value: 'ocean', label: 'Ocean', phoneNumber: '1234', age: '10' },\\\\n  { value: 'blue', label: 'Blue', phoneNumber: '455556', age: '12' },\\\\n  { value: 'purple', label: 'Purple', phoneNumber: '67778', age: '13' },\\\\n  { value: 'red', label: 'Red', phoneNumber: '89990', age: '14' },\\\\n  { value: 'forest', label: 'Forest', phoneNumber: '0000000', age: '20' },\\\\n  { value: 'slate', label: 'Slate', phoneNumber: '11111111', age: '30' }\\\\n]\\\\n\\\\nexport const withButton = () => (\\\\n  <ThemeWrapper>\\\\n    <Position type='relative'>\\\\n      <MultiSelect\\\\n        id={text('id', 'Colors')}\\\\n        width={text('width', '300px')}\\\\n        options={object('Multi Select Options', options)}\\\\n        onChange={action('Multi Select changed')}\\\\n        style={object('styles', {\\\\n          position: 'absolute',\\\\n          top: '0px',\\\\n          left: '145px'\\\\n        })}\\\\n        isLoading={boolean('isLoading', false)}\\\\n        isNoOption={boolean('isNoOption', false)}\\\\n        menuOpen={boolean('menuOpen', false)}\\\\n        selected={object('Selected', selectedOptions)}\\\\n        allowSelectAll={boolean('allowSelectAll', false)}\\\\n        maximumSelected={number('maximum Selected', 4)}\\\\n        searchableKeys={array('Searchable Keys', [\\\\n          'value',\\\\n          'label',\\\\n          'phoneNumber',\\\\n          'age'\\\\n        ])}\\\\n      >\\\\n        {({ optionSelected, isMenuOpen, openMenu }: tMultiSelectChildren) => (\\\\n          <>\\\\n            {openMenu}\\\\n            <Button\\\\n              id='id'\\\\n              variant='button'\\\\n              onClick={() => {\\\\n                console.log(optionSelected)\\\\n                openMenu(!isMenuOpen)\\\\n                action('MultiSelect opened/closed')(isMenuOpen)\\\\n              }}\\\\n            >\\\\n              <React.Fragment>\\\\n                <span>Open MultiSelect</span>\\\\n                <FontIcon variant='angle-right' size='sm' />\\\\n              </React.Fragment>\\\\n            </Button>\\\\n          </>\\\\n        )}\\\\n      </MultiSelect>\\\\n    </Position>\\\\n  </ThemeWrapper>\\\\n)\\\\n\\\";\\n// @ts-ignore\\nvar __ADDS_MAP__ = {};\\n// @ts-ignore\\nvar __MAIN_FILE_LOCATION__ = \\\"/withButton.stories.tsx\\\";\\n// @ts-ignore\\nvar __MODULE_DEPENDENCIES__ = [];\\n// @ts-ignore\\nvar __LOCAL_DEPENDENCIES__ = {};\\n// @ts-ignore\\nvar __IDS_TO_FRAMEWORKS__ = {};\\n        \\nimport React from 'react'\\nimport MultiSelect from '../index'\\nimport { path } from '../..'\\nimport ThemeWrapper from '../../../../utilities/components/ThemeWrapper'\\n\\nimport {\\n  text,\\n  object,\\n  withKnobs,\\n  boolean,\\n  number,\\n  array\\n} from '@storybook/addon-knobs'\\nimport { action } from '@storybook/addon-actions'\\nimport Button from '../../../atoms/Button'\\nimport Position from '../../Position'\\nimport FontIcon from '../../../atoms/FontIcon'\\nimport { tMultiSelectChildren } from '../interfaces'\\n\\nexport default {\\n  title: `${path}/MultiSelect`,\\n  component: MultiSelect,\\n  decorators: [withKnobs],\\n  parameters: {\\\"storySource\\\":{\\\"source\\\":\\\"\\\\n\\\\n// @ts-nocheck\\\\n// @ts-ignore\\\\nvar withSourceLoader = require('@storybook/source-loader/preview').withSource;\\\\n// @ts-ignore\\\\nvar addSourceDecorator = require(\\\\\\\"@storybook/source-loader/preview\\\\\\\").addSource;\\\\n// @ts-ignore\\\\nvar __SOURCE_PREFIX__ = \\\\\\\"/Users/farhanansari/Desktop/CODE/PrxProject/untitled folder/reactStoryBook/src/components/molecules/MultiSelect/stories\\\\\\\";\\\\n// @ts-ignore\\\\nvar __STORY__ = \\\\\\\"import React from 'react'\\\\\\\\nimport MultiSelect from '../index'\\\\\\\\nimport { path } from '../..'\\\\\\\\nimport ThemeWrapper from '../../../../utilities/components/ThemeWrapper'\\\\\\\\n\\\\\\\\nimport {\\\\\\\\n  text,\\\\\\\\n  object,\\\\\\\\n  withKnobs,\\\\\\\\n  boolean,\\\\\\\\n  number,\\\\\\\\n  array\\\\\\\\n} from '@storybook/addon-knobs'\\\\\\\\nimport { action } from '@storybook/addon-actions'\\\\\\\\nimport Button from '../../../atoms/Button'\\\\\\\\nimport Position from '../../Position'\\\\\\\\nimport FontIcon from '../../../atoms/FontIcon'\\\\\\\\nimport { tMultiSelectChildren } from '../interfaces'\\\\\\\\n\\\\\\\\nexport default {\\\\\\\\n  title: `${path}/MultiSelect`,\\\\\\\\n  component: MultiSelect,\\\\\\\\n  decorators: [withKnobs],\\\\\\\\n  parameters: {\\\\\\\\n    props: {\\\\\\\\n      propTablesExclude: [Button, ThemeWrapper, Position, FontIcon]\\\\\\\\n    }\\\\\\\\n  }\\\\\\\\n}\\\\\\\\n\\\\\\\\nconst options = [\\\\\\\\n  { value: 'ocean', label: 'Ocean', phoneNumber: '1234', age: '10' },\\\\\\\\n  { value: 'blue', label: 'Blue', phoneNumber: '455556', age: '12' },\\\\\\\\n  { value: 'purple', label: 'Purple', phoneNumber: '67778', age: '13' },\\\\\\\\n  { value: 'red', label: 'Red', phoneNumber: '89990', age: '14' },\\\\\\\\n  { value: 'orange', label: 'Orange', phoneNumber: '001323', age: '15' },\\\\\\\\n  { value: 'yellow', label: 'Yellow', phoneNumber: '99243452', age: '16' },\\\\\\\\n  { value: 'green', label: 'Green', phoneNumber: '120009', age: '18' },\\\\\\\\n  { value: 'forest', label: 'Forest', phoneNumber: '0000000', age: '20' },\\\\\\\\n  { value: 'slate', label: 'Slate', phoneNumber: '11111111', age: '30' },\\\\\\\\n  { value: 'silver', label: 'Silver', phoneNumber: '22222222', age: '40' }\\\\\\\\n]\\\\\\\\nconst selectedOptions = [\\\\\\\\n  { value: 'ocean', label: 'Ocean', phoneNumber: '1234', age: '10' },\\\\\\\\n  { value: 'blue', label: 'Blue', phoneNumber: '455556', age: '12' },\\\\\\\\n  { value: 'purple', label: 'Purple', phoneNumber: '67778', age: '13' },\\\\\\\\n  { value: 'red', label: 'Red', phoneNumber: '89990', age: '14' },\\\\\\\\n  { value: 'forest', label: 'Forest', phoneNumber: '0000000', age: '20' },\\\\\\\\n  { value: 'slate', label: 'Slate', phoneNumber: '11111111', age: '30' }\\\\\\\\n]\\\\\\\\n\\\\\\\\nexport const withButton = () => (\\\\\\\\n  <ThemeWrapper>\\\\\\\\n    <Position type='relative'>\\\\\\\\n      <MultiSelect\\\\\\\\n        id={text('id', 'Colors')}\\\\\\\\n        width={text('width', '300px')}\\\\\\\\n        options={object('Multi Select Options', options)}\\\\\\\\n        onChange={action('Multi Select changed')}\\\\\\\\n        style={object('styles', {\\\\\\\\n          position: 'absolute',\\\\\\\\n          top: '0px',\\\\\\\\n          left: '145px'\\\\\\\\n        })}\\\\\\\\n        isLoading={boolean('isLoading', false)}\\\\\\\\n        isNoOption={boolean('isNoOption', false)}\\\\\\\\n        menuOpen={boolean('menuOpen', false)}\\\\\\\\n        selected={object('Selected', selectedOptions)}\\\\\\\\n        allowSelectAll={boolean('allowSelectAll', false)}\\\\\\\\n        maximumSelected={number('maximum Selected', 4)}\\\\\\\\n        searchableKeys={array('Searchable Keys', [\\\\\\\\n          'value',\\\\\\\\n          'label',\\\\\\\\n          'phoneNumber',\\\\\\\\n          'age'\\\\\\\\n        ])}\\\\\\\\n      >\\\\\\\\n        {({ optionSelected, isMenuOpen, openMenu }: tMultiSelectChildren) => (\\\\\\\\n          <>\\\\\\\\n            {openMenu}\\\\\\\\n            <Button\\\\\\\\n              id='id'\\\\\\\\n              variant='button'\\\\\\\\n              onClick={() => {\\\\\\\\n                console.log(optionSelected)\\\\\\\\n                openMenu(!isMenuOpen)\\\\\\\\n                action('MultiSelect opened/closed')(isMenuOpen)\\\\\\\\n              }}\\\\\\\\n            >\\\\\\\\n              <React.Fragment>\\\\\\\\n                <span>Open MultiSelect</span>\\\\\\\\n                <FontIcon variant='angle-right' size='sm' />\\\\\\\\n              </React.Fragment>\\\\\\\\n            </Button>\\\\\\\\n          </>\\\\\\\\n        )}\\\\\\\\n      </MultiSelect>\\\\\\\\n    </Position>\\\\\\\\n  </ThemeWrapper>\\\\\\\\n)\\\\\\\\n\\\\\\\";\\\\n// @ts-ignore\\\\nvar __ADDS_MAP__ = {};\\\\n// @ts-ignore\\\\nvar __MAIN_FILE_LOCATION__ = \\\\\\\"/withButton.stories.tsx\\\\\\\";\\\\n// @ts-ignore\\\\nvar __MODULE_DEPENDENCIES__ = [];\\\\n// @ts-ignore\\\\nvar __LOCAL_DEPENDENCIES__ = {};\\\\n// @ts-ignore\\\\nvar __IDS_TO_FRAMEWORKS__ = {};\\\\n        \\\\nimport React from 'react'\\\\nimport MultiSelect from '../index'\\\\nimport { path } from '../..'\\\\nimport ThemeWrapper from '../../../../utilities/components/ThemeWrapper'\\\\n\\\\nimport {\\\\n  text,\\\\n  object,\\\\n  withKnobs,\\\\n  boolean,\\\\n  number,\\\\n  array\\\\n} from '@storybook/addon-knobs'\\\\nimport { action } from '@storybook/addon-actions'\\\\nimport Button from '../../../atoms/Button'\\\\nimport Position from '../../Position'\\\\nimport FontIcon from '../../../atoms/FontIcon'\\\\nimport { tMultiSelectChildren } from '../interfaces'\\\\n\\\\nexport default {\\\\n  title: `${path}/MultiSelect`,\\\\n  component: MultiSelect,\\\\n  decorators: [withKnobs],\\\\n  parameters: {\\\\\\\"storySource\\\\\\\":{\\\\\\\"source\\\\\\\":\\\\\\\"import React from 'react'\\\\\\\\nimport MultiSelect from '../index'\\\\\\\\nimport { path } from '../..'\\\\\\\\nimport ThemeWrapper from '../../../../utilities/components/ThemeWrapper'\\\\\\\\n\\\\\\\\nimport {\\\\\\\\n  text,\\\\\\\\n  object,\\\\\\\\n  withKnobs,\\\\\\\\n  boolean,\\\\\\\\n  number,\\\\\\\\n  array\\\\\\\\n} from '@storybook/addon-knobs'\\\\\\\\nimport { action } from '@storybook/addon-actions'\\\\\\\\nimport Button from '../../../atoms/Button'\\\\\\\\nimport Position from '../../Position'\\\\\\\\nimport FontIcon from '../../../atoms/FontIcon'\\\\\\\\nimport { tMultiSelectChildren } from '../interfaces'\\\\\\\\n\\\\\\\\nexport default {\\\\\\\\n  title: `${path}/MultiSelect`,\\\\\\\\n  component: MultiSelect,\\\\\\\\n  decorators: [withKnobs],\\\\\\\\n  parameters: {\\\\\\\\n    props: {\\\\\\\\n      propTablesExclude: [Button, ThemeWrapper, Position, FontIcon]\\\\\\\\n    }\\\\\\\\n  }\\\\\\\\n}\\\\\\\\n\\\\\\\\nconst options = [\\\\\\\\n  { value: 'ocean', label: 'Ocean', phoneNumber: '1234', age: '10' },\\\\\\\\n  { value: 'blue', label: 'Blue', phoneNumber: '455556', age: '12' },\\\\\\\\n  { value: 'purple', label: 'Purple', phoneNumber: '67778', age: '13' },\\\\\\\\n  { value: 'red', label: 'Red', phoneNumber: '89990', age: '14' },\\\\\\\\n  { value: 'orange', label: 'Orange', phoneNumber: '001323', age: '15' },\\\\\\\\n  { value: 'yellow', label: 'Yellow', phoneNumber: '99243452', age: '16' },\\\\\\\\n  { value: 'green', label: 'Green', phoneNumber: '120009', age: '18' },\\\\\\\\n  { value: 'forest', label: 'Forest', phoneNumber: '0000000', age: '20' },\\\\\\\\n  { value: 'slate', label: 'Slate', phoneNumber: '11111111', age: '30' },\\\\\\\\n  { value: 'silver', label: 'Silver', phoneNumber: '22222222', age: '40' }\\\\\\\\n]\\\\\\\\nconst selectedOptions = [\\\\\\\\n  { value: 'ocean', label: 'Ocean', phoneNumber: '1234', age: '10' },\\\\\\\\n  { value: 'blue', label: 'Blue', phoneNumber: '455556', age: '12' },\\\\\\\\n  { value: 'purple', label: 'Purple', phoneNumber: '67778', age: '13' },\\\\\\\\n  { value: 'red', label: 'Red', phoneNumber: '89990', age: '14' },\\\\\\\\n  { value: 'forest', label: 'Forest', phoneNumber: '0000000', age: '20' },\\\\\\\\n  { value: 'slate', label: 'Slate', phoneNumber: '11111111', age: '30' }\\\\\\\\n]\\\\\\\\n\\\\\\\\nexport const withButton = () => (\\\\\\\\n  <ThemeWrapper>\\\\\\\\n    <Position type='relative'>\\\\\\\\n      <MultiSelect\\\\\\\\n        id={text('id', 'Colors')}\\\\\\\\n        width={text('width', '300px')}\\\\\\\\n        options={object('Multi Select Options', options)}\\\\\\\\n        onChange={action('Multi Select changed')}\\\\\\\\n        style={object('styles', {\\\\\\\\n          position: 'absolute',\\\\\\\\n          top: '0px',\\\\\\\\n          left: '145px'\\\\\\\\n        })}\\\\\\\\n        isLoading={boolean('isLoading', false)}\\\\\\\\n        isNoOption={boolean('isNoOption', false)}\\\\\\\\n        menuOpen={boolean('menuOpen', false)}\\\\\\\\n        selected={object('Selected', selectedOptions)}\\\\\\\\n        allowSelectAll={boolean('allowSelectAll', false)}\\\\\\\\n        maximumSelected={number('maximum Selected', 4)}\\\\\\\\n        searchableKeys={array('Searchable Keys', [\\\\\\\\n          'value',\\\\\\\\n          'label',\\\\\\\\n          'phoneNumber',\\\\\\\\n          'age'\\\\\\\\n        ])}\\\\\\\\n      >\\\\\\\\n        {({ optionSelected, isMenuOpen, openMenu }: tMultiSelectChildren) => (\\\\\\\\n          <>\\\\\\\\n            {openMenu}\\\\\\\\n            <Button\\\\\\\\n              id='id'\\\\\\\\n              variant='button'\\\\\\\\n              onClick={() => {\\\\\\\\n                console.log(optionSelected)\\\\\\\\n                openMenu(!isMenuOpen)\\\\\\\\n                action('MultiSelect opened/closed')(isMenuOpen)\\\\\\\\n              }}\\\\\\\\n            >\\\\\\\\n              <React.Fragment>\\\\\\\\n                <span>Open MultiSelect</span>\\\\\\\\n                <FontIcon variant='angle-right' size='sm' />\\\\\\\\n              </React.Fragment>\\\\\\\\n            </Button>\\\\\\\\n          </>\\\\\\\\n        )}\\\\\\\\n      </MultiSelect>\\\\\\\\n    </Position>\\\\\\\\n  </ThemeWrapper>\\\\\\\\n)\\\\\\\\n\\\\\\\",\\\\\\\"locationsMap\\\\\\\":{}},\\\\n    props: {\\\\n      propTablesExclude: [Button, ThemeWrapper, Position, FontIcon]\\\\n    }\\\\n  },}\\\\n\\\\nconst options = [\\\\n  { value: 'ocean', label: 'Ocean', phoneNumber: '1234', age: '10' },\\\\n  { value: 'blue', label: 'Blue', phoneNumber: '455556', age: '12' },\\\\n  { value: 'purple', label: 'Purple', phoneNumber: '67778', age: '13' },\\\\n  { value: 'red', label: 'Red', phoneNumber: '89990', age: '14' },\\\\n  { value: 'orange', label: 'Orange', phoneNumber: '001323', age: '15' },\\\\n  { value: 'yellow', label: 'Yellow', phoneNumber: '99243452', age: '16' },\\\\n  { value: 'green', label: 'Green', phoneNumber: '120009', age: '18' },\\\\n  { value: 'forest', label: 'Forest', phoneNumber: '0000000', age: '20' },\\\\n  { value: 'slate', label: 'Slate', phoneNumber: '11111111', age: '30' },\\\\n  { value: 'silver', label: 'Silver', phoneNumber: '22222222', age: '40' }\\\\n]\\\\nconst selectedOptions = [\\\\n  { value: 'ocean', label: 'Ocean', phoneNumber: '1234', age: '10' },\\\\n  { value: 'blue', label: 'Blue', phoneNumber: '455556', age: '12' },\\\\n  { value: 'purple', label: 'Purple', phoneNumber: '67778', age: '13' },\\\\n  { value: 'red', label: 'Red', phoneNumber: '89990', age: '14' },\\\\n  { value: 'forest', label: 'Forest', phoneNumber: '0000000', age: '20' },\\\\n  { value: 'slate', label: 'Slate', phoneNumber: '11111111', age: '30' }\\\\n]\\\\n\\\\nexport const withButton = addSourceDecorator(() => (\\\\n  <ThemeWrapper>\\\\n    <Position type='relative'>\\\\n      <MultiSelect\\\\n        id={text('id', 'Colors')}\\\\n        width={text('width', '300px')}\\\\n        options={object('Multi Select Options', options)}\\\\n        onChange={action('Multi Select changed')}\\\\n        style={object('styles', {\\\\n          position: 'absolute',\\\\n          top: '0px',\\\\n          left: '145px'\\\\n        })}\\\\n        isLoading={boolean('isLoading', false)}\\\\n        isNoOption={boolean('isNoOption', false)}\\\\n        menuOpen={boolean('menuOpen', false)}\\\\n        selected={object('Selected', selectedOptions)}\\\\n        allowSelectAll={boolean('allowSelectAll', false)}\\\\n        maximumSelected={number('maximum Selected', 4)}\\\\n        searchableKeys={array('Searchable Keys', [\\\\n          'value',\\\\n          'label',\\\\n          'phoneNumber',\\\\n          'age'\\\\n        ])}\\\\n      >\\\\n        {({ optionSelected, isMenuOpen, openMenu }: tMultiSelectChildren) => (\\\\n          <>\\\\n            {openMenu}\\\\n            <Button\\\\n              id='id'\\\\n              variant='button'\\\\n              onClick={() => {\\\\n                console.log(optionSelected)\\\\n                openMenu(!isMenuOpen)\\\\n                action('MultiSelect opened/closed')(isMenuOpen)\\\\n              }}\\\\n            >\\\\n              <React.Fragment>\\\\n                <span>Open MultiSelect</span>\\\\n                <FontIcon variant='angle-right' size='sm' />\\\\n              </React.Fragment>\\\\n            </Button>\\\\n          </>\\\\n        )}\\\\n      </MultiSelect>\\\\n    </Position>\\\\n  </ThemeWrapper>\\\\n), {__STORY__, __ADDS_MAP__,__MAIN_FILE_LOCATION__,__MODULE_DEPENDENCIES__,__LOCAL_DEPENDENCIES__,__SOURCE_PREFIX__,__IDS_TO_FRAMEWORKS__});\\\",\\\"locationsMap\\\":{}},\\\"storySource\\\":{\\\"source\\\":\\\"import React from 'react'\\\\nimport MultiSelect from '../index'\\\\nimport { path } from '../..'\\\\nimport ThemeWrapper from '../../../../utilities/components/ThemeWrapper'\\\\n\\\\nimport {\\\\n  text,\\\\n  object,\\\\n  withKnobs,\\\\n  boolean,\\\\n  number,\\\\n  array\\\\n} from '@storybook/addon-knobs'\\\\nimport { action } from '@storybook/addon-actions'\\\\nimport Button from '../../../atoms/Button'\\\\nimport Position from '../../Position'\\\\nimport FontIcon from '../../../atoms/FontIcon'\\\\nimport { tMultiSelectChildren } from '../interfaces'\\\\n\\\\nexport default {\\\\n  title: `${path}/MultiSelect`,\\\\n  component: MultiSelect,\\\\n  decorators: [withKnobs],\\\\n  parameters: {\\\\n    props: {\\\\n      propTablesExclude: [Button, ThemeWrapper, Position, FontIcon]\\\\n    }\\\\n  }\\\\n}\\\\n\\\\nconst options = [\\\\n  { value: 'ocean', label: 'Ocean', phoneNumber: '1234', age: '10' },\\\\n  { value: 'blue', label: 'Blue', phoneNumber: '455556', age: '12' },\\\\n  { value: 'purple', label: 'Purple', phoneNumber: '67778', age: '13' },\\\\n  { value: 'red', label: 'Red', phoneNumber: '89990', age: '14' },\\\\n  { value: 'orange', label: 'Orange', phoneNumber: '001323', age: '15' },\\\\n  { value: 'yellow', label: 'Yellow', phoneNumber: '99243452', age: '16' },\\\\n  { value: 'green', label: 'Green', phoneNumber: '120009', age: '18' },\\\\n  { value: 'forest', label: 'Forest', phoneNumber: '0000000', age: '20' },\\\\n  { value: 'slate', label: 'Slate', phoneNumber: '11111111', age: '30' },\\\\n  { value: 'silver', label: 'Silver', phoneNumber: '22222222', age: '40' }\\\\n]\\\\nconst selectedOptions = [\\\\n  { value: 'ocean', label: 'Ocean', phoneNumber: '1234', age: '10' },\\\\n  { value: 'blue', label: 'Blue', phoneNumber: '455556', age: '12' },\\\\n  { value: 'purple', label: 'Purple', phoneNumber: '67778', age: '13' },\\\\n  { value: 'red', label: 'Red', phoneNumber: '89990', age: '14' },\\\\n  { value: 'forest', label: 'Forest', phoneNumber: '0000000', age: '20' },\\\\n  { value: 'slate', label: 'Slate', phoneNumber: '11111111', age: '30' }\\\\n]\\\\n\\\\nexport const withButton = () => (\\\\n  <ThemeWrapper>\\\\n    <Position type='relative'>\\\\n      <MultiSelect\\\\n        id={text('id', 'Colors')}\\\\n        width={text('width', '300px')}\\\\n        options={object('Multi Select Options', options)}\\\\n        onChange={action('Multi Select changed')}\\\\n        style={object('styles', {\\\\n          position: 'absolute',\\\\n          top: '0px',\\\\n          left: '145px'\\\\n        })}\\\\n        isLoading={boolean('isLoading', false)}\\\\n        isNoOption={boolean('isNoOption', false)}\\\\n        menuOpen={boolean('menuOpen', false)}\\\\n        selected={object('Selected', selectedOptions)}\\\\n        allowSelectAll={boolean('allowSelectAll', false)}\\\\n        maximumSelected={number('maximum Selected', 4)}\\\\n        searchableKeys={array('Searchable Keys', [\\\\n          'value',\\\\n          'label',\\\\n          'phoneNumber',\\\\n          'age'\\\\n        ])}\\\\n      >\\\\n        {({ optionSelected, isMenuOpen, openMenu }: tMultiSelectChildren) => (\\\\n          <>\\\\n            {openMenu}\\\\n            <Button\\\\n              id='id'\\\\n              variant='button'\\\\n              onClick={() => {\\\\n                console.log(optionSelected)\\\\n                openMenu(!isMenuOpen)\\\\n                action('MultiSelect opened/closed')(isMenuOpen)\\\\n              }}\\\\n            >\\\\n              <React.Fragment>\\\\n                <span>Open MultiSelect</span>\\\\n                <FontIcon variant='angle-right' size='sm' />\\\\n              </React.Fragment>\\\\n            </Button>\\\\n          </>\\\\n        )}\\\\n      </MultiSelect>\\\\n    </Position>\\\\n  </ThemeWrapper>\\\\n)\\\\n\\\",\\\"locationsMap\\\":{}},\\n    props: {\\n      propTablesExclude: [Button, ThemeWrapper, Position, FontIcon]\\n    }\\n  },}\\n\\nconst options = [\\n  { value: 'ocean', label: 'Ocean', phoneNumber: '1234', age: '10' },\\n  { value: 'blue', label: 'Blue', phoneNumber: '455556', age: '12' },\\n  { value: 'purple', label: 'Purple', phoneNumber: '67778', age: '13' },\\n  { value: 'red', label: 'Red', phoneNumber: '89990', age: '14' },\\n  { value: 'orange', label: 'Orange', phoneNumber: '001323', age: '15' },\\n  { value: 'yellow', label: 'Yellow', phoneNumber: '99243452', age: '16' },\\n  { value: 'green', label: 'Green', phoneNumber: '120009', age: '18' },\\n  { value: 'forest', label: 'Forest', phoneNumber: '0000000', age: '20' },\\n  { value: 'slate', label: 'Slate', phoneNumber: '11111111', age: '30' },\\n  { value: 'silver', label: 'Silver', phoneNumber: '22222222', age: '40' }\\n]\\nconst selectedOptions = [\\n  { value: 'ocean', label: 'Ocean', phoneNumber: '1234', age: '10' },\\n  { value: 'blue', label: 'Blue', phoneNumber: '455556', age: '12' },\\n  { value: 'purple', label: 'Purple', phoneNumber: '67778', age: '13' },\\n  { value: 'red', label: 'Red', phoneNumber: '89990', age: '14' },\\n  { value: 'forest', label: 'Forest', phoneNumber: '0000000', age: '20' },\\n  { value: 'slate', label: 'Slate', phoneNumber: '11111111', age: '30' }\\n]\\n\\nexport const withButton = addSourceDecorator(addSourceDecorator(() => (\\n  <ThemeWrapper>\\n    <Position type='relative'>\\n      <MultiSelect\\n        id={text('id', 'Colors')}\\n        width={text('width', '300px')}\\n        options={object('Multi Select Options', options)}\\n        onChange={action('Multi Select changed')}\\n        style={object('styles', {\\n          position: 'absolute',\\n          top: '0px',\\n          left: '145px'\\n        })}\\n        isLoading={boolean('isLoading', false)}\\n        isNoOption={boolean('isNoOption', false)}\\n        menuOpen={boolean('menuOpen', false)}\\n        selected={object('Selected', selectedOptions)}\\n        allowSelectAll={boolean('allowSelectAll', false)}\\n        maximumSelected={number('maximum Selected', 4)}\\n        searchableKeys={array('Searchable Keys', [\\n          'value',\\n          'label',\\n          'phoneNumber',\\n          'age'\\n        ])}\\n      >\\n        {({ optionSelected, isMenuOpen, openMenu }: tMultiSelectChildren) => (\\n          <>\\n            {openMenu}\\n            <Button\\n              id='id'\\n              variant='button'\\n              onClick={() => {\\n                console.log(optionSelected)\\n                openMenu(!isMenuOpen)\\n                action('MultiSelect opened/closed')(isMenuOpen)\\n              }}\\n            >\\n              <React.Fragment>\\n                <span>Open MultiSelect</span>\\n                <FontIcon variant='angle-right' size='sm' />\\n              </React.Fragment>\\n            </Button>\\n          </>\\n        )}\\n      </MultiSelect>\\n    </Position>\\n  </ThemeWrapper>\\n), {__STORY__, __ADDS_MAP__,__MAIN_FILE_LOCATION__,__MODULE_DEPENDENCIES__,__LOCAL_DEPENDENCIES__,__SOURCE_PREFIX__,__IDS_TO_FRAMEWORKS__}), {__STORY__, __ADDS_MAP__,__MAIN_FILE_LOCATION__,__MODULE_DEPENDENCIES__,__LOCAL_DEPENDENCIES__,__SOURCE_PREFIX__,__IDS_TO_FRAMEWORKS__});\"; // @ts-ignore\n\nvar __ADDS_MAP__ = {}; // @ts-ignore\n\nvar __MAIN_FILE_LOCATION__ = \"/withButton.stories.tsx\"; // @ts-ignore\n\nvar __MODULE_DEPENDENCIES__ = []; // @ts-ignore\n\nvar __LOCAL_DEPENDENCIES__ = {}; // @ts-ignore\n\nvar __IDS_TO_FRAMEWORKS__ = {};\n/* eslint-disable */\n// @ts-nocheck\n// @ts-ignore\n\nvar withSourceLoader = require('@storybook/source-loader/preview').withSource; // @ts-ignore\n\n\nvar addSourceDecorator = require(\"@storybook/source-loader/preview\").addSource; // @ts-ignore\n\n\nvar __SOURCE_PREFIX__ = \"/Users/farhanansari/Desktop/CODE/PrxProject/untitled folder/reactStoryBook/src/components/molecules/MultiSelect/stories\"; // @ts-ignore\n\nvar __STORY__ = \"\\n\\n// @ts-nocheck\\n// @ts-ignore\\nvar withSourceLoader = require('@storybook/source-loader/preview').withSource;\\n// @ts-ignore\\nvar addSourceDecorator = require(\\\"@storybook/source-loader/preview\\\").addSource;\\n// @ts-ignore\\nvar __SOURCE_PREFIX__ = \\\"/Users/farhanansari/Desktop/CODE/PrxProject/untitled folder/reactStoryBook/src/components/molecules/MultiSelect/stories\\\";\\n// @ts-ignore\\nvar __STORY__ = \\\"import React from 'react'\\\\nimport MultiSelect from '../index'\\\\nimport { path } from '../..'\\\\nimport ThemeWrapper from '../../../../utilities/components/ThemeWrapper'\\\\n\\\\nimport {\\\\n  text,\\\\n  object,\\\\n  withKnobs,\\\\n  boolean,\\\\n  number,\\\\n  array\\\\n} from '@storybook/addon-knobs'\\\\nimport { action } from '@storybook/addon-actions'\\\\nimport Button from '../../../atoms/Button'\\\\nimport Position from '../../Position'\\\\nimport FontIcon from '../../../atoms/FontIcon'\\\\nimport { tMultiSelectChildren } from '../interfaces'\\\\n\\\\nexport default {\\\\n  title: `${path}/MultiSelect`,\\\\n  component: MultiSelect,\\\\n  decorators: [withKnobs],\\\\n  parameters: {\\\\n    props: {\\\\n      propTablesExclude: [Button, ThemeWrapper, Position, FontIcon]\\\\n    }\\\\n  }\\\\n}\\\\n\\\\nconst options = [\\\\n  { value: 'ocean', label: 'Ocean', phoneNumber: '1234', age: '10' },\\\\n  { value: 'blue', label: 'Blue', phoneNumber: '455556', age: '12' },\\\\n  { value: 'purple', label: 'Purple', phoneNumber: '67778', age: '13' },\\\\n  { value: 'red', label: 'Red', phoneNumber: '89990', age: '14' },\\\\n  { value: 'orange', label: 'Orange', phoneNumber: '001323', age: '15' },\\\\n  { value: 'yellow', label: 'Yellow', phoneNumber: '99243452', age: '16' },\\\\n  { value: 'green', label: 'Green', phoneNumber: '120009', age: '18' },\\\\n  { value: 'forest', label: 'Forest', phoneNumber: '0000000', age: '20' },\\\\n  { value: 'slate', label: 'Slate', phoneNumber: '11111111', age: '30' },\\\\n  { value: 'silver', label: 'Silver', phoneNumber: '22222222', age: '40' }\\\\n]\\\\nconst selectedOptions = [\\\\n  { value: 'ocean', label: 'Ocean', phoneNumber: '1234', age: '10' },\\\\n  { value: 'blue', label: 'Blue', phoneNumber: '455556', age: '12' },\\\\n  { value: 'purple', label: 'Purple', phoneNumber: '67778', age: '13' },\\\\n  { value: 'red', label: 'Red', phoneNumber: '89990', age: '14' },\\\\n  { value: 'forest', label: 'Forest', phoneNumber: '0000000', age: '20' },\\\\n  { value: 'slate', label: 'Slate', phoneNumber: '11111111', age: '30' }\\\\n]\\\\n\\\\nexport const withButton = () => (\\\\n  <ThemeWrapper>\\\\n    <Position type='relative'>\\\\n      <MultiSelect\\\\n        id={text('id', 'Colors')}\\\\n        width={text('width', '300px')}\\\\n        options={object('Multi Select Options', options)}\\\\n        onChange={action('Multi Select changed')}\\\\n        style={object('styles', {\\\\n          position: 'absolute',\\\\n          top: '0px',\\\\n          left: '145px'\\\\n        })}\\\\n        isLoading={boolean('isLoading', false)}\\\\n        isNoOption={boolean('isNoOption', false)}\\\\n        menuOpen={boolean('menuOpen', false)}\\\\n        selected={object('Selected', selectedOptions)}\\\\n        allowSelectAll={boolean('allowSelectAll', false)}\\\\n        maximumSelected={number('maximum Selected', 4)}\\\\n        searchableKeys={array('Searchable Keys', [\\\\n          'value',\\\\n          'label',\\\\n          'phoneNumber',\\\\n          'age'\\\\n        ])}\\\\n      >\\\\n        {({ optionSelected, isMenuOpen, openMenu }: tMultiSelectChildren) => (\\\\n          <>\\\\n            {openMenu}\\\\n            <Button\\\\n              id='id'\\\\n              variant='button'\\\\n              onClick={() => {\\\\n                console.log(optionSelected)\\\\n                openMenu(!isMenuOpen)\\\\n                action('MultiSelect opened/closed')(isMenuOpen)\\\\n              }}\\\\n            >\\\\n              <React.Fragment>\\\\n                <span>Open MultiSelect</span>\\\\n                <FontIcon variant='angle-right' size='sm' />\\\\n              </React.Fragment>\\\\n            </Button>\\\\n          </>\\\\n        )}\\\\n      </MultiSelect>\\\\n    </Position>\\\\n  </ThemeWrapper>\\\\n)\\\\n\\\";\\n// @ts-ignore\\nvar __ADDS_MAP__ = {};\\n// @ts-ignore\\nvar __MAIN_FILE_LOCATION__ = \\\"/withButton.stories.tsx\\\";\\n// @ts-ignore\\nvar __MODULE_DEPENDENCIES__ = [];\\n// @ts-ignore\\nvar __LOCAL_DEPENDENCIES__ = {};\\n// @ts-ignore\\nvar __IDS_TO_FRAMEWORKS__ = {};\\n        \\nimport React from 'react'\\nimport MultiSelect from '../index'\\nimport { path } from '../..'\\nimport ThemeWrapper from '../../../../utilities/components/ThemeWrapper'\\n\\nimport {\\n  text,\\n  object,\\n  withKnobs,\\n  boolean,\\n  number,\\n  array\\n} from '@storybook/addon-knobs'\\nimport { action } from '@storybook/addon-actions'\\nimport Button from '../../../atoms/Button'\\nimport Position from '../../Position'\\nimport FontIcon from '../../../atoms/FontIcon'\\nimport { tMultiSelectChildren } from '../interfaces'\\n\\nexport default {\\n  title: `${path}/MultiSelect`,\\n  component: MultiSelect,\\n  decorators: [withKnobs],\\n  parameters: {\\\"storySource\\\":{\\\"source\\\":\\\"import React from 'react'\\\\nimport MultiSelect from '../index'\\\\nimport { path } from '../..'\\\\nimport ThemeWrapper from '../../../../utilities/components/ThemeWrapper'\\\\n\\\\nimport {\\\\n  text,\\\\n  object,\\\\n  withKnobs,\\\\n  boolean,\\\\n  number,\\\\n  array\\\\n} from '@storybook/addon-knobs'\\\\nimport { action } from '@storybook/addon-actions'\\\\nimport Button from '../../../atoms/Button'\\\\nimport Position from '../../Position'\\\\nimport FontIcon from '../../../atoms/FontIcon'\\\\nimport { tMultiSelectChildren } from '../interfaces'\\\\n\\\\nexport default {\\\\n  title: `${path}/MultiSelect`,\\\\n  component: MultiSelect,\\\\n  decorators: [withKnobs],\\\\n  parameters: {\\\\n    props: {\\\\n      propTablesExclude: [Button, ThemeWrapper, Position, FontIcon]\\\\n    }\\\\n  }\\\\n}\\\\n\\\\nconst options = [\\\\n  { value: 'ocean', label: 'Ocean', phoneNumber: '1234', age: '10' },\\\\n  { value: 'blue', label: 'Blue', phoneNumber: '455556', age: '12' },\\\\n  { value: 'purple', label: 'Purple', phoneNumber: '67778', age: '13' },\\\\n  { value: 'red', label: 'Red', phoneNumber: '89990', age: '14' },\\\\n  { value: 'orange', label: 'Orange', phoneNumber: '001323', age: '15' },\\\\n  { value: 'yellow', label: 'Yellow', phoneNumber: '99243452', age: '16' },\\\\n  { value: 'green', label: 'Green', phoneNumber: '120009', age: '18' },\\\\n  { value: 'forest', label: 'Forest', phoneNumber: '0000000', age: '20' },\\\\n  { value: 'slate', label: 'Slate', phoneNumber: '11111111', age: '30' },\\\\n  { value: 'silver', label: 'Silver', phoneNumber: '22222222', age: '40' }\\\\n]\\\\nconst selectedOptions = [\\\\n  { value: 'ocean', label: 'Ocean', phoneNumber: '1234', age: '10' },\\\\n  { value: 'blue', label: 'Blue', phoneNumber: '455556', age: '12' },\\\\n  { value: 'purple', label: 'Purple', phoneNumber: '67778', age: '13' },\\\\n  { value: 'red', label: 'Red', phoneNumber: '89990', age: '14' },\\\\n  { value: 'forest', label: 'Forest', phoneNumber: '0000000', age: '20' },\\\\n  { value: 'slate', label: 'Slate', phoneNumber: '11111111', age: '30' }\\\\n]\\\\n\\\\nexport const withButton = () => (\\\\n  <ThemeWrapper>\\\\n    <Position type='relative'>\\\\n      <MultiSelect\\\\n        id={text('id', 'Colors')}\\\\n        width={text('width', '300px')}\\\\n        options={object('Multi Select Options', options)}\\\\n        onChange={action('Multi Select changed')}\\\\n        style={object('styles', {\\\\n          position: 'absolute',\\\\n          top: '0px',\\\\n          left: '145px'\\\\n        })}\\\\n        isLoading={boolean('isLoading', false)}\\\\n        isNoOption={boolean('isNoOption', false)}\\\\n        menuOpen={boolean('menuOpen', false)}\\\\n        selected={object('Selected', selectedOptions)}\\\\n        allowSelectAll={boolean('allowSelectAll', false)}\\\\n        maximumSelected={number('maximum Selected', 4)}\\\\n        searchableKeys={array('Searchable Keys', [\\\\n          'value',\\\\n          'label',\\\\n          'phoneNumber',\\\\n          'age'\\\\n        ])}\\\\n      >\\\\n        {({ optionSelected, isMenuOpen, openMenu }: tMultiSelectChildren) => (\\\\n          <>\\\\n            {openMenu}\\\\n            <Button\\\\n              id='id'\\\\n              variant='button'\\\\n              onClick={() => {\\\\n                console.log(optionSelected)\\\\n                openMenu(!isMenuOpen)\\\\n                action('MultiSelect opened/closed')(isMenuOpen)\\\\n              }}\\\\n            >\\\\n              <React.Fragment>\\\\n                <span>Open MultiSelect</span>\\\\n                <FontIcon variant='angle-right' size='sm' />\\\\n              </React.Fragment>\\\\n            </Button>\\\\n          </>\\\\n        )}\\\\n      </MultiSelect>\\\\n    </Position>\\\\n  </ThemeWrapper>\\\\n)\\\\n\\\",\\\"locationsMap\\\":{}},\\n    props: {\\n      propTablesExclude: [Button, ThemeWrapper, Position, FontIcon]\\n    }\\n  },}\\n\\nconst options = [\\n  { value: 'ocean', label: 'Ocean', phoneNumber: '1234', age: '10' },\\n  { value: 'blue', label: 'Blue', phoneNumber: '455556', age: '12' },\\n  { value: 'purple', label: 'Purple', phoneNumber: '67778', age: '13' },\\n  { value: 'red', label: 'Red', phoneNumber: '89990', age: '14' },\\n  { value: 'orange', label: 'Orange', phoneNumber: '001323', age: '15' },\\n  { value: 'yellow', label: 'Yellow', phoneNumber: '99243452', age: '16' },\\n  { value: 'green', label: 'Green', phoneNumber: '120009', age: '18' },\\n  { value: 'forest', label: 'Forest', phoneNumber: '0000000', age: '20' },\\n  { value: 'slate', label: 'Slate', phoneNumber: '11111111', age: '30' },\\n  { value: 'silver', label: 'Silver', phoneNumber: '22222222', age: '40' }\\n]\\nconst selectedOptions = [\\n  { value: 'ocean', label: 'Ocean', phoneNumber: '1234', age: '10' },\\n  { value: 'blue', label: 'Blue', phoneNumber: '455556', age: '12' },\\n  { value: 'purple', label: 'Purple', phoneNumber: '67778', age: '13' },\\n  { value: 'red', label: 'Red', phoneNumber: '89990', age: '14' },\\n  { value: 'forest', label: 'Forest', phoneNumber: '0000000', age: '20' },\\n  { value: 'slate', label: 'Slate', phoneNumber: '11111111', age: '30' }\\n]\\n\\nexport const withButton = addSourceDecorator(() => (\\n  <ThemeWrapper>\\n    <Position type='relative'>\\n      <MultiSelect\\n        id={text('id', 'Colors')}\\n        width={text('width', '300px')}\\n        options={object('Multi Select Options', options)}\\n        onChange={action('Multi Select changed')}\\n        style={object('styles', {\\n          position: 'absolute',\\n          top: '0px',\\n          left: '145px'\\n        })}\\n        isLoading={boolean('isLoading', false)}\\n        isNoOption={boolean('isNoOption', false)}\\n        menuOpen={boolean('menuOpen', false)}\\n        selected={object('Selected', selectedOptions)}\\n        allowSelectAll={boolean('allowSelectAll', false)}\\n        maximumSelected={number('maximum Selected', 4)}\\n        searchableKeys={array('Searchable Keys', [\\n          'value',\\n          'label',\\n          'phoneNumber',\\n          'age'\\n        ])}\\n      >\\n        {({ optionSelected, isMenuOpen, openMenu }: tMultiSelectChildren) => (\\n          <>\\n            {openMenu}\\n            <Button\\n              id='id'\\n              variant='button'\\n              onClick={() => {\\n                console.log(optionSelected)\\n                openMenu(!isMenuOpen)\\n                action('MultiSelect opened/closed')(isMenuOpen)\\n              }}\\n            >\\n              <React.Fragment>\\n                <span>Open MultiSelect</span>\\n                <FontIcon variant='angle-right' size='sm' />\\n              </React.Fragment>\\n            </Button>\\n          </>\\n        )}\\n      </MultiSelect>\\n    </Position>\\n  </ThemeWrapper>\\n), {__STORY__, __ADDS_MAP__,__MAIN_FILE_LOCATION__,__MODULE_DEPENDENCIES__,__LOCAL_DEPENDENCIES__,__SOURCE_PREFIX__,__IDS_TO_FRAMEWORKS__});\"; // @ts-ignore\n\nvar __ADDS_MAP__ = {}; // @ts-ignore\n\nvar __MAIN_FILE_LOCATION__ = \"/withButton.stories.tsx\"; // @ts-ignore\n\nvar __MODULE_DEPENDENCIES__ = []; // @ts-ignore\n\nvar __LOCAL_DEPENDENCIES__ = {}; // @ts-ignore\n\nvar __IDS_TO_FRAMEWORKS__ = {};\n/* eslint-disable */\n// @ts-nocheck\n// @ts-ignore\n\nvar withSourceLoader = require('@storybook/source-loader/preview').withSource; // @ts-ignore\n\n\nvar addSourceDecorator = require(\"@storybook/source-loader/preview\").addSource; // @ts-ignore\n\n\nvar __SOURCE_PREFIX__ = \"/Users/farhanansari/Desktop/CODE/PrxProject/untitled folder/reactStoryBook/src/components/molecules/MultiSelect/stories\"; // @ts-ignore\n\nvar __STORY__ = \"import React from 'react'\\nimport MultiSelect from '../index'\\nimport { path } from '../..'\\nimport ThemeWrapper from '../../../../utilities/components/ThemeWrapper'\\n\\nimport {\\n  text,\\n  object,\\n  withKnobs,\\n  boolean,\\n  number,\\n  array\\n} from '@storybook/addon-knobs'\\nimport { action } from '@storybook/addon-actions'\\nimport Button from '../../../atoms/Button'\\nimport Position from '../../Position'\\nimport FontIcon from '../../../atoms/FontIcon'\\nimport { tMultiSelectChildren } from '../interfaces'\\n\\nexport default {\\n  title: `${path}/MultiSelect`,\\n  component: MultiSelect,\\n  decorators: [withKnobs],\\n  parameters: {\\n    props: {\\n      propTablesExclude: [Button, ThemeWrapper, Position, FontIcon]\\n    }\\n  }\\n}\\n\\nconst options = [\\n  { value: 'ocean', label: 'Ocean', phoneNumber: '1234', age: '10' },\\n  { value: 'blue', label: 'Blue', phoneNumber: '455556', age: '12' },\\n  { value: 'purple', label: 'Purple', phoneNumber: '67778', age: '13' },\\n  { value: 'red', label: 'Red', phoneNumber: '89990', age: '14' },\\n  { value: 'orange', label: 'Orange', phoneNumber: '001323', age: '15' },\\n  { value: 'yellow', label: 'Yellow', phoneNumber: '99243452', age: '16' },\\n  { value: 'green', label: 'Green', phoneNumber: '120009', age: '18' },\\n  { value: 'forest', label: 'Forest', phoneNumber: '0000000', age: '20' },\\n  { value: 'slate', label: 'Slate', phoneNumber: '11111111', age: '30' },\\n  { value: 'silver', label: 'Silver', phoneNumber: '22222222', age: '40' }\\n]\\nconst selectedOptions = [\\n  { value: 'ocean', label: 'Ocean', phoneNumber: '1234', age: '10' },\\n  { value: 'blue', label: 'Blue', phoneNumber: '455556', age: '12' },\\n  { value: 'purple', label: 'Purple', phoneNumber: '67778', age: '13' },\\n  { value: 'red', label: 'Red', phoneNumber: '89990', age: '14' },\\n  { value: 'forest', label: 'Forest', phoneNumber: '0000000', age: '20' },\\n  { value: 'slate', label: 'Slate', phoneNumber: '11111111', age: '30' }\\n]\\n\\nexport const withButton = () => (\\n  <ThemeWrapper>\\n    <Position type='relative'>\\n      <MultiSelect\\n        id={text('id', 'Colors')}\\n        width={text('width', '300px')}\\n        options={object('Multi Select Options', options)}\\n        onChange={action('Multi Select changed')}\\n        style={object('styles', {\\n          position: 'absolute',\\n          top: '0px',\\n          left: '145px'\\n        })}\\n        isLoading={boolean('isLoading', false)}\\n        isNoOption={boolean('isNoOption', false)}\\n        menuOpen={boolean('menuOpen', false)}\\n        selected={object('Selected', selectedOptions)}\\n        allowSelectAll={boolean('allowSelectAll', false)}\\n        maximumSelected={number('maximum Selected', 4)}\\n        searchableKeys={array('Searchable Keys', [\\n          'value',\\n          'label',\\n          'phoneNumber',\\n          'age'\\n        ])}\\n      >\\n        {({ optionSelected, isMenuOpen, openMenu }: tMultiSelectChildren) => (\\n          <>\\n            {openMenu}\\n            <Button\\n              id='id'\\n              variant='button'\\n              onClick={() => {\\n                console.log(optionSelected)\\n                openMenu(!isMenuOpen)\\n                action('MultiSelect opened/closed')(isMenuOpen)\\n              }}\\n            >\\n              <React.Fragment>\\n                <span>Open MultiSelect</span>\\n                <FontIcon variant='angle-right' size='sm' />\\n              </React.Fragment>\\n            </Button>\\n          </>\\n        )}\\n      </MultiSelect>\\n    </Position>\\n  </ThemeWrapper>\\n)\\n\"; // @ts-ignore\n\nvar __ADDS_MAP__ = {}; // @ts-ignore\n\nvar __MAIN_FILE_LOCATION__ = \"/withButton.stories.tsx\"; // @ts-ignore\n\nvar __MODULE_DEPENDENCIES__ = []; // @ts-ignore\n\nvar __LOCAL_DEPENDENCIES__ = {}; // @ts-ignore\n\nvar __IDS_TO_FRAMEWORKS__ = {};\nimport React from 'react';\nimport MultiSelect from '../index';\nimport { path } from '../..';\nimport ThemeWrapper from '../../../../utilities/components/ThemeWrapper';\nimport { text, object, withKnobs, boolean as _boolean, number, array } from '@storybook/addon-knobs';\nimport { action } from '@storybook/addon-actions';\nimport Button from '../../../atoms/Button';\nimport Position from '../../Position';\nimport FontIcon from '../../../atoms/FontIcon';\nexport default {\n  title: path + \"/MultiSelect\",\n  component: MultiSelect,\n  decorators: [withKnobs],\n  parameters: (_parameters = {\n    \"storySource\": {\n      \"source\": \"\\n\\n// @ts-nocheck\\n// @ts-ignore\\nvar withSourceLoader = require('@storybook/source-loader/preview').withSource;\\n// @ts-ignore\\nvar addSourceDecorator = require(\\\"@storybook/source-loader/preview\\\").addSource;\\n// @ts-ignore\\nvar __SOURCE_PREFIX__ = \\\"/Users/farhanansari/Desktop/CODE/PrxProject/untitled folder/reactStoryBook/src/components/molecules/MultiSelect/stories\\\";\\n// @ts-ignore\\nvar __STORY__ = \\\"\\\\n\\\\n// @ts-nocheck\\\\n// @ts-ignore\\\\nvar withSourceLoader = require('@storybook/source-loader/preview').withSource;\\\\n// @ts-ignore\\\\nvar addSourceDecorator = require(\\\\\\\"@storybook/source-loader/preview\\\\\\\").addSource;\\\\n// @ts-ignore\\\\nvar __SOURCE_PREFIX__ = \\\\\\\"/Users/farhanansari/Desktop/CODE/PrxProject/untitled folder/reactStoryBook/src/components/molecules/MultiSelect/stories\\\\\\\";\\\\n// @ts-ignore\\\\nvar __STORY__ = \\\\\\\"import React from 'react'\\\\\\\\nimport MultiSelect from '../index'\\\\\\\\nimport { path } from '../..'\\\\\\\\nimport ThemeWrapper from '../../../../utilities/components/ThemeWrapper'\\\\\\\\n\\\\\\\\nimport {\\\\\\\\n  text,\\\\\\\\n  object,\\\\\\\\n  withKnobs,\\\\\\\\n  boolean,\\\\\\\\n  number,\\\\\\\\n  array\\\\\\\\n} from '@storybook/addon-knobs'\\\\\\\\nimport { action } from '@storybook/addon-actions'\\\\\\\\nimport Button from '../../../atoms/Button'\\\\\\\\nimport Position from '../../Position'\\\\\\\\nimport FontIcon from '../../../atoms/FontIcon'\\\\\\\\nimport { tMultiSelectChildren } from '../interfaces'\\\\\\\\n\\\\\\\\nexport default {\\\\\\\\n  title: `${path}/MultiSelect`,\\\\\\\\n  component: MultiSelect,\\\\\\\\n  decorators: [withKnobs],\\\\\\\\n  parameters: {\\\\\\\\n    props: {\\\\\\\\n      propTablesExclude: [Button, ThemeWrapper, Position, FontIcon]\\\\\\\\n    }\\\\\\\\n  }\\\\\\\\n}\\\\\\\\n\\\\\\\\nconst options = [\\\\\\\\n  { value: 'ocean', label: 'Ocean', phoneNumber: '1234', age: '10' },\\\\\\\\n  { value: 'blue', label: 'Blue', phoneNumber: '455556', age: '12' },\\\\\\\\n  { value: 'purple', label: 'Purple', phoneNumber: '67778', age: '13' },\\\\\\\\n  { value: 'red', label: 'Red', phoneNumber: '89990', age: '14' },\\\\\\\\n  { value: 'orange', label: 'Orange', phoneNumber: '001323', age: '15' },\\\\\\\\n  { value: 'yellow', label: 'Yellow', phoneNumber: '99243452', age: '16' },\\\\\\\\n  { value: 'green', label: 'Green', phoneNumber: '120009', age: '18' },\\\\\\\\n  { value: 'forest', label: 'Forest', phoneNumber: '0000000', age: '20' },\\\\\\\\n  { value: 'slate', label: 'Slate', phoneNumber: '11111111', age: '30' },\\\\\\\\n  { value: 'silver', label: 'Silver', phoneNumber: '22222222', age: '40' }\\\\\\\\n]\\\\\\\\nconst selectedOptions = [\\\\\\\\n  { value: 'ocean', label: 'Ocean', phoneNumber: '1234', age: '10' },\\\\\\\\n  { value: 'blue', label: 'Blue', phoneNumber: '455556', age: '12' },\\\\\\\\n  { value: 'purple', label: 'Purple', phoneNumber: '67778', age: '13' },\\\\\\\\n  { value: 'red', label: 'Red', phoneNumber: '89990', age: '14' },\\\\\\\\n  { value: 'forest', label: 'Forest', phoneNumber: '0000000', age: '20' },\\\\\\\\n  { value: 'slate', label: 'Slate', phoneNumber: '11111111', age: '30' }\\\\\\\\n]\\\\\\\\n\\\\\\\\nexport const withButton = () => (\\\\\\\\n  <ThemeWrapper>\\\\\\\\n    <Position type='relative'>\\\\\\\\n      <MultiSelect\\\\\\\\n        id={text('id', 'Colors')}\\\\\\\\n        width={text('width', '300px')}\\\\\\\\n        options={object('Multi Select Options', options)}\\\\\\\\n        onChange={action('Multi Select changed')}\\\\\\\\n        style={object('styles', {\\\\\\\\n          position: 'absolute',\\\\\\\\n          top: '0px',\\\\\\\\n          left: '145px'\\\\\\\\n        })}\\\\\\\\n        isLoading={boolean('isLoading', false)}\\\\\\\\n        isNoOption={boolean('isNoOption', false)}\\\\\\\\n        menuOpen={boolean('menuOpen', false)}\\\\\\\\n        selected={object('Selected', selectedOptions)}\\\\\\\\n        allowSelectAll={boolean('allowSelectAll', false)}\\\\\\\\n        maximumSelected={number('maximum Selected', 4)}\\\\\\\\n        searchableKeys={array('Searchable Keys', [\\\\\\\\n          'value',\\\\\\\\n          'label',\\\\\\\\n          'phoneNumber',\\\\\\\\n          'age'\\\\\\\\n        ])}\\\\\\\\n      >\\\\\\\\n        {({ optionSelected, isMenuOpen, openMenu }: tMultiSelectChildren) => (\\\\\\\\n          <>\\\\\\\\n            {openMenu}\\\\\\\\n            <Button\\\\\\\\n              id='id'\\\\\\\\n              variant='button'\\\\\\\\n              onClick={() => {\\\\\\\\n                console.log(optionSelected)\\\\\\\\n                openMenu(!isMenuOpen)\\\\\\\\n                action('MultiSelect opened/closed')(isMenuOpen)\\\\\\\\n              }}\\\\\\\\n            >\\\\\\\\n              <React.Fragment>\\\\\\\\n                <span>Open MultiSelect</span>\\\\\\\\n                <FontIcon variant='angle-right' size='sm' />\\\\\\\\n              </React.Fragment>\\\\\\\\n            </Button>\\\\\\\\n          </>\\\\\\\\n        )}\\\\\\\\n      </MultiSelect>\\\\\\\\n    </Position>\\\\\\\\n  </ThemeWrapper>\\\\\\\\n)\\\\\\\\n\\\\\\\";\\\\n// @ts-ignore\\\\nvar __ADDS_MAP__ = {};\\\\n// @ts-ignore\\\\nvar __MAIN_FILE_LOCATION__ = \\\\\\\"/withButton.stories.tsx\\\\\\\";\\\\n// @ts-ignore\\\\nvar __MODULE_DEPENDENCIES__ = [];\\\\n// @ts-ignore\\\\nvar __LOCAL_DEPENDENCIES__ = {};\\\\n// @ts-ignore\\\\nvar __IDS_TO_FRAMEWORKS__ = {};\\\\n        \\\\nimport React from 'react'\\\\nimport MultiSelect from '../index'\\\\nimport { path } from '../..'\\\\nimport ThemeWrapper from '../../../../utilities/components/ThemeWrapper'\\\\n\\\\nimport {\\\\n  text,\\\\n  object,\\\\n  withKnobs,\\\\n  boolean,\\\\n  number,\\\\n  array\\\\n} from '@storybook/addon-knobs'\\\\nimport { action } from '@storybook/addon-actions'\\\\nimport Button from '../../../atoms/Button'\\\\nimport Position from '../../Position'\\\\nimport FontIcon from '../../../atoms/FontIcon'\\\\nimport { tMultiSelectChildren } from '../interfaces'\\\\n\\\\nexport default {\\\\n  title: `${path}/MultiSelect`,\\\\n  component: MultiSelect,\\\\n  decorators: [withKnobs],\\\\n  parameters: {\\\\\\\"storySource\\\\\\\":{\\\\\\\"source\\\\\\\":\\\\\\\"import React from 'react'\\\\\\\\nimport MultiSelect from '../index'\\\\\\\\nimport { path } from '../..'\\\\\\\\nimport ThemeWrapper from '../../../../utilities/components/ThemeWrapper'\\\\\\\\n\\\\\\\\nimport {\\\\\\\\n  text,\\\\\\\\n  object,\\\\\\\\n  withKnobs,\\\\\\\\n  boolean,\\\\\\\\n  number,\\\\\\\\n  array\\\\\\\\n} from '@storybook/addon-knobs'\\\\\\\\nimport { action } from '@storybook/addon-actions'\\\\\\\\nimport Button from '../../../atoms/Button'\\\\\\\\nimport Position from '../../Position'\\\\\\\\nimport FontIcon from '../../../atoms/FontIcon'\\\\\\\\nimport { tMultiSelectChildren } from '../interfaces'\\\\\\\\n\\\\\\\\nexport default {\\\\\\\\n  title: `${path}/MultiSelect`,\\\\\\\\n  component: MultiSelect,\\\\\\\\n  decorators: [withKnobs],\\\\\\\\n  parameters: {\\\\\\\\n    props: {\\\\\\\\n      propTablesExclude: [Button, ThemeWrapper, Position, FontIcon]\\\\\\\\n    }\\\\\\\\n  }\\\\\\\\n}\\\\\\\\n\\\\\\\\nconst options = [\\\\\\\\n  { value: 'ocean', label: 'Ocean', phoneNumber: '1234', age: '10' },\\\\\\\\n  { value: 'blue', label: 'Blue', phoneNumber: '455556', age: '12' },\\\\\\\\n  { value: 'purple', label: 'Purple', phoneNumber: '67778', age: '13' },\\\\\\\\n  { value: 'red', label: 'Red', phoneNumber: '89990', age: '14' },\\\\\\\\n  { value: 'orange', label: 'Orange', phoneNumber: '001323', age: '15' },\\\\\\\\n  { value: 'yellow', label: 'Yellow', phoneNumber: '99243452', age: '16' },\\\\\\\\n  { value: 'green', label: 'Green', phoneNumber: '120009', age: '18' },\\\\\\\\n  { value: 'forest', label: 'Forest', phoneNumber: '0000000', age: '20' },\\\\\\\\n  { value: 'slate', label: 'Slate', phoneNumber: '11111111', age: '30' },\\\\\\\\n  { value: 'silver', label: 'Silver', phoneNumber: '22222222', age: '40' }\\\\\\\\n]\\\\\\\\nconst selectedOptions = [\\\\\\\\n  { value: 'ocean', label: 'Ocean', phoneNumber: '1234', age: '10' },\\\\\\\\n  { value: 'blue', label: 'Blue', phoneNumber: '455556', age: '12' },\\\\\\\\n  { value: 'purple', label: 'Purple', phoneNumber: '67778', age: '13' },\\\\\\\\n  { value: 'red', label: 'Red', phoneNumber: '89990', age: '14' },\\\\\\\\n  { value: 'forest', label: 'Forest', phoneNumber: '0000000', age: '20' },\\\\\\\\n  { value: 'slate', label: 'Slate', phoneNumber: '11111111', age: '30' }\\\\\\\\n]\\\\\\\\n\\\\\\\\nexport const withButton = () => (\\\\\\\\n  <ThemeWrapper>\\\\\\\\n    <Position type='relative'>\\\\\\\\n      <MultiSelect\\\\\\\\n        id={text('id', 'Colors')}\\\\\\\\n        width={text('width', '300px')}\\\\\\\\n        options={object('Multi Select Options', options)}\\\\\\\\n        onChange={action('Multi Select changed')}\\\\\\\\n        style={object('styles', {\\\\\\\\n          position: 'absolute',\\\\\\\\n          top: '0px',\\\\\\\\n          left: '145px'\\\\\\\\n        })}\\\\\\\\n        isLoading={boolean('isLoading', false)}\\\\\\\\n        isNoOption={boolean('isNoOption', false)}\\\\\\\\n        menuOpen={boolean('menuOpen', false)}\\\\\\\\n        selected={object('Selected', selectedOptions)}\\\\\\\\n        allowSelectAll={boolean('allowSelectAll', false)}\\\\\\\\n        maximumSelected={number('maximum Selected', 4)}\\\\\\\\n        searchableKeys={array('Searchable Keys', [\\\\\\\\n          'value',\\\\\\\\n          'label',\\\\\\\\n          'phoneNumber',\\\\\\\\n          'age'\\\\\\\\n        ])}\\\\\\\\n      >\\\\\\\\n        {({ optionSelected, isMenuOpen, openMenu }: tMultiSelectChildren) => (\\\\\\\\n          <>\\\\\\\\n            {openMenu}\\\\\\\\n            <Button\\\\\\\\n              id='id'\\\\\\\\n              variant='button'\\\\\\\\n              onClick={() => {\\\\\\\\n                console.log(optionSelected)\\\\\\\\n                openMenu(!isMenuOpen)\\\\\\\\n                action('MultiSelect opened/closed')(isMenuOpen)\\\\\\\\n              }}\\\\\\\\n            >\\\\\\\\n              <React.Fragment>\\\\\\\\n                <span>Open MultiSelect</span>\\\\\\\\n                <FontIcon variant='angle-right' size='sm' />\\\\\\\\n              </React.Fragment>\\\\\\\\n            </Button>\\\\\\\\n          </>\\\\\\\\n        )}\\\\\\\\n      </MultiSelect>\\\\\\\\n    </Position>\\\\\\\\n  </ThemeWrapper>\\\\\\\\n)\\\\\\\\n\\\\\\\",\\\\\\\"locationsMap\\\\\\\":{}},\\\\n    props: {\\\\n      propTablesExclude: [Button, ThemeWrapper, Position, FontIcon]\\\\n    }\\\\n  },}\\\\n\\\\nconst options = [\\\\n  { value: 'ocean', label: 'Ocean', phoneNumber: '1234', age: '10' },\\\\n  { value: 'blue', label: 'Blue', phoneNumber: '455556', age: '12' },\\\\n  { value: 'purple', label: 'Purple', phoneNumber: '67778', age: '13' },\\\\n  { value: 'red', label: 'Red', phoneNumber: '89990', age: '14' },\\\\n  { value: 'orange', label: 'Orange', phoneNumber: '001323', age: '15' },\\\\n  { value: 'yellow', label: 'Yellow', phoneNumber: '99243452', age: '16' },\\\\n  { value: 'green', label: 'Green', phoneNumber: '120009', age: '18' },\\\\n  { value: 'forest', label: 'Forest', phoneNumber: '0000000', age: '20' },\\\\n  { value: 'slate', label: 'Slate', phoneNumber: '11111111', age: '30' },\\\\n  { value: 'silver', label: 'Silver', phoneNumber: '22222222', age: '40' }\\\\n]\\\\nconst selectedOptions = [\\\\n  { value: 'ocean', label: 'Ocean', phoneNumber: '1234', age: '10' },\\\\n  { value: 'blue', label: 'Blue', phoneNumber: '455556', age: '12' },\\\\n  { value: 'purple', label: 'Purple', phoneNumber: '67778', age: '13' },\\\\n  { value: 'red', label: 'Red', phoneNumber: '89990', age: '14' },\\\\n  { value: 'forest', label: 'Forest', phoneNumber: '0000000', age: '20' },\\\\n  { value: 'slate', label: 'Slate', phoneNumber: '11111111', age: '30' }\\\\n]\\\\n\\\\nexport const withButton = addSourceDecorator(() => (\\\\n  <ThemeWrapper>\\\\n    <Position type='relative'>\\\\n      <MultiSelect\\\\n        id={text('id', 'Colors')}\\\\n        width={text('width', '300px')}\\\\n        options={object('Multi Select Options', options)}\\\\n        onChange={action('Multi Select changed')}\\\\n        style={object('styles', {\\\\n          position: 'absolute',\\\\n          top: '0px',\\\\n          left: '145px'\\\\n        })}\\\\n        isLoading={boolean('isLoading', false)}\\\\n        isNoOption={boolean('isNoOption', false)}\\\\n        menuOpen={boolean('menuOpen', false)}\\\\n        selected={object('Selected', selectedOptions)}\\\\n        allowSelectAll={boolean('allowSelectAll', false)}\\\\n        maximumSelected={number('maximum Selected', 4)}\\\\n        searchableKeys={array('Searchable Keys', [\\\\n          'value',\\\\n          'label',\\\\n          'phoneNumber',\\\\n          'age'\\\\n        ])}\\\\n      >\\\\n        {({ optionSelected, isMenuOpen, openMenu }: tMultiSelectChildren) => (\\\\n          <>\\\\n            {openMenu}\\\\n            <Button\\\\n              id='id'\\\\n              variant='button'\\\\n              onClick={() => {\\\\n                console.log(optionSelected)\\\\n                openMenu(!isMenuOpen)\\\\n                action('MultiSelect opened/closed')(isMenuOpen)\\\\n              }}\\\\n            >\\\\n              <React.Fragment>\\\\n                <span>Open MultiSelect</span>\\\\n                <FontIcon variant='angle-right' size='sm' />\\\\n              </React.Fragment>\\\\n            </Button>\\\\n          </>\\\\n        )}\\\\n      </MultiSelect>\\\\n    </Position>\\\\n  </ThemeWrapper>\\\\n), {__STORY__, __ADDS_MAP__,__MAIN_FILE_LOCATION__,__MODULE_DEPENDENCIES__,__LOCAL_DEPENDENCIES__,__SOURCE_PREFIX__,__IDS_TO_FRAMEWORKS__});\\\";\\n// @ts-ignore\\nvar __ADDS_MAP__ = {};\\n// @ts-ignore\\nvar __MAIN_FILE_LOCATION__ = \\\"/withButton.stories.tsx\\\";\\n// @ts-ignore\\nvar __MODULE_DEPENDENCIES__ = [];\\n// @ts-ignore\\nvar __LOCAL_DEPENDENCIES__ = {};\\n// @ts-ignore\\nvar __IDS_TO_FRAMEWORKS__ = {};\\n        \\n\\n\\n// @ts-nocheck\\n// @ts-ignore\\nvar withSourceLoader = require('@storybook/source-loader/preview').withSource;\\n// @ts-ignore\\nvar addSourceDecorator = require(\\\"@storybook/source-loader/preview\\\").addSource;\\n// @ts-ignore\\nvar __SOURCE_PREFIX__ = \\\"/Users/farhanansari/Desktop/CODE/PrxProject/untitled folder/reactStoryBook/src/components/molecules/MultiSelect/stories\\\";\\n// @ts-ignore\\nvar __STORY__ = \\\"import React from 'react'\\\\nimport MultiSelect from '../index'\\\\nimport { path } from '../..'\\\\nimport ThemeWrapper from '../../../../utilities/components/ThemeWrapper'\\\\n\\\\nimport {\\\\n  text,\\\\n  object,\\\\n  withKnobs,\\\\n  boolean,\\\\n  number,\\\\n  array\\\\n} from '@storybook/addon-knobs'\\\\nimport { action } from '@storybook/addon-actions'\\\\nimport Button from '../../../atoms/Button'\\\\nimport Position from '../../Position'\\\\nimport FontIcon from '../../../atoms/FontIcon'\\\\nimport { tMultiSelectChildren } from '../interfaces'\\\\n\\\\nexport default {\\\\n  title: `${path}/MultiSelect`,\\\\n  component: MultiSelect,\\\\n  decorators: [withKnobs],\\\\n  parameters: {\\\\n    props: {\\\\n      propTablesExclude: [Button, ThemeWrapper, Position, FontIcon]\\\\n    }\\\\n  }\\\\n}\\\\n\\\\nconst options = [\\\\n  { value: 'ocean', label: 'Ocean', phoneNumber: '1234', age: '10' },\\\\n  { value: 'blue', label: 'Blue', phoneNumber: '455556', age: '12' },\\\\n  { value: 'purple', label: 'Purple', phoneNumber: '67778', age: '13' },\\\\n  { value: 'red', label: 'Red', phoneNumber: '89990', age: '14' },\\\\n  { value: 'orange', label: 'Orange', phoneNumber: '001323', age: '15' },\\\\n  { value: 'yellow', label: 'Yellow', phoneNumber: '99243452', age: '16' },\\\\n  { value: 'green', label: 'Green', phoneNumber: '120009', age: '18' },\\\\n  { value: 'forest', label: 'Forest', phoneNumber: '0000000', age: '20' },\\\\n  { value: 'slate', label: 'Slate', phoneNumber: '11111111', age: '30' },\\\\n  { value: 'silver', label: 'Silver', phoneNumber: '22222222', age: '40' }\\\\n]\\\\nconst selectedOptions = [\\\\n  { value: 'ocean', label: 'Ocean', phoneNumber: '1234', age: '10' },\\\\n  { value: 'blue', label: 'Blue', phoneNumber: '455556', age: '12' },\\\\n  { value: 'purple', label: 'Purple', phoneNumber: '67778', age: '13' },\\\\n  { value: 'red', label: 'Red', phoneNumber: '89990', age: '14' },\\\\n  { value: 'forest', label: 'Forest', phoneNumber: '0000000', age: '20' },\\\\n  { value: 'slate', label: 'Slate', phoneNumber: '11111111', age: '30' }\\\\n]\\\\n\\\\nexport const withButton = () => (\\\\n  <ThemeWrapper>\\\\n    <Position type='relative'>\\\\n      <MultiSelect\\\\n        id={text('id', 'Colors')}\\\\n        width={text('width', '300px')}\\\\n        options={object('Multi Select Options', options)}\\\\n        onChange={action('Multi Select changed')}\\\\n        style={object('styles', {\\\\n          position: 'absolute',\\\\n          top: '0px',\\\\n          left: '145px'\\\\n        })}\\\\n        isLoading={boolean('isLoading', false)}\\\\n        isNoOption={boolean('isNoOption', false)}\\\\n        menuOpen={boolean('menuOpen', false)}\\\\n        selected={object('Selected', selectedOptions)}\\\\n        allowSelectAll={boolean('allowSelectAll', false)}\\\\n        maximumSelected={number('maximum Selected', 4)}\\\\n        searchableKeys={array('Searchable Keys', [\\\\n          'value',\\\\n          'label',\\\\n          'phoneNumber',\\\\n          'age'\\\\n        ])}\\\\n      >\\\\n        {({ optionSelected, isMenuOpen, openMenu }: tMultiSelectChildren) => (\\\\n          <>\\\\n            {openMenu}\\\\n            <Button\\\\n              id='id'\\\\n              variant='button'\\\\n              onClick={() => {\\\\n                console.log(optionSelected)\\\\n                openMenu(!isMenuOpen)\\\\n                action('MultiSelect opened/closed')(isMenuOpen)\\\\n              }}\\\\n            >\\\\n              <React.Fragment>\\\\n                <span>Open MultiSelect</span>\\\\n                <FontIcon variant='angle-right' size='sm' />\\\\n              </React.Fragment>\\\\n            </Button>\\\\n          </>\\\\n        )}\\\\n      </MultiSelect>\\\\n    </Position>\\\\n  </ThemeWrapper>\\\\n)\\\\n\\\";\\n// @ts-ignore\\nvar __ADDS_MAP__ = {};\\n// @ts-ignore\\nvar __MAIN_FILE_LOCATION__ = \\\"/withButton.stories.tsx\\\";\\n// @ts-ignore\\nvar __MODULE_DEPENDENCIES__ = [];\\n// @ts-ignore\\nvar __LOCAL_DEPENDENCIES__ = {};\\n// @ts-ignore\\nvar __IDS_TO_FRAMEWORKS__ = {};\\n        \\nimport React from 'react'\\nimport MultiSelect from '../index'\\nimport { path } from '../..'\\nimport ThemeWrapper from '../../../../utilities/components/ThemeWrapper'\\n\\nimport {\\n  text,\\n  object,\\n  withKnobs,\\n  boolean,\\n  number,\\n  array\\n} from '@storybook/addon-knobs'\\nimport { action } from '@storybook/addon-actions'\\nimport Button from '../../../atoms/Button'\\nimport Position from '../../Position'\\nimport FontIcon from '../../../atoms/FontIcon'\\nimport { tMultiSelectChildren } from '../interfaces'\\n\\nexport default {\\n  title: `${path}/MultiSelect`,\\n  component: MultiSelect,\\n  decorators: [withKnobs],\\n  parameters: {\\\"storySource\\\":{\\\"source\\\":\\\"\\\\n\\\\n// @ts-nocheck\\\\n// @ts-ignore\\\\nvar withSourceLoader = require('@storybook/source-loader/preview').withSource;\\\\n// @ts-ignore\\\\nvar addSourceDecorator = require(\\\\\\\"@storybook/source-loader/preview\\\\\\\").addSource;\\\\n// @ts-ignore\\\\nvar __SOURCE_PREFIX__ = \\\\\\\"/Users/farhanansari/Desktop/CODE/PrxProject/untitled folder/reactStoryBook/src/components/molecules/MultiSelect/stories\\\\\\\";\\\\n// @ts-ignore\\\\nvar __STORY__ = \\\\\\\"import React from 'react'\\\\\\\\nimport MultiSelect from '../index'\\\\\\\\nimport { path } from '../..'\\\\\\\\nimport ThemeWrapper from '../../../../utilities/components/ThemeWrapper'\\\\\\\\n\\\\\\\\nimport {\\\\\\\\n  text,\\\\\\\\n  object,\\\\\\\\n  withKnobs,\\\\\\\\n  boolean,\\\\\\\\n  number,\\\\\\\\n  array\\\\\\\\n} from '@storybook/addon-knobs'\\\\\\\\nimport { action } from '@storybook/addon-actions'\\\\\\\\nimport Button from '../../../atoms/Button'\\\\\\\\nimport Position from '../../Position'\\\\\\\\nimport FontIcon from '../../../atoms/FontIcon'\\\\\\\\nimport { tMultiSelectChildren } from '../interfaces'\\\\\\\\n\\\\\\\\nexport default {\\\\\\\\n  title: `${path}/MultiSelect`,\\\\\\\\n  component: MultiSelect,\\\\\\\\n  decorators: [withKnobs],\\\\\\\\n  parameters: {\\\\\\\\n    props: {\\\\\\\\n      propTablesExclude: [Button, ThemeWrapper, Position, FontIcon]\\\\\\\\n    }\\\\\\\\n  }\\\\\\\\n}\\\\\\\\n\\\\\\\\nconst options = [\\\\\\\\n  { value: 'ocean', label: 'Ocean', phoneNumber: '1234', age: '10' },\\\\\\\\n  { value: 'blue', label: 'Blue', phoneNumber: '455556', age: '12' },\\\\\\\\n  { value: 'purple', label: 'Purple', phoneNumber: '67778', age: '13' },\\\\\\\\n  { value: 'red', label: 'Red', phoneNumber: '89990', age: '14' },\\\\\\\\n  { value: 'orange', label: 'Orange', phoneNumber: '001323', age: '15' },\\\\\\\\n  { value: 'yellow', label: 'Yellow', phoneNumber: '99243452', age: '16' },\\\\\\\\n  { value: 'green', label: 'Green', phoneNumber: '120009', age: '18' },\\\\\\\\n  { value: 'forest', label: 'Forest', phoneNumber: '0000000', age: '20' },\\\\\\\\n  { value: 'slate', label: 'Slate', phoneNumber: '11111111', age: '30' },\\\\\\\\n  { value: 'silver', label: 'Silver', phoneNumber: '22222222', age: '40' }\\\\\\\\n]\\\\\\\\nconst selectedOptions = [\\\\\\\\n  { value: 'ocean', label: 'Ocean', phoneNumber: '1234', age: '10' },\\\\\\\\n  { value: 'blue', label: 'Blue', phoneNumber: '455556', age: '12' },\\\\\\\\n  { value: 'purple', label: 'Purple', phoneNumber: '67778', age: '13' },\\\\\\\\n  { value: 'red', label: 'Red', phoneNumber: '89990', age: '14' },\\\\\\\\n  { value: 'forest', label: 'Forest', phoneNumber: '0000000', age: '20' },\\\\\\\\n  { value: 'slate', label: 'Slate', phoneNumber: '11111111', age: '30' }\\\\\\\\n]\\\\\\\\n\\\\\\\\nexport const withButton = () => (\\\\\\\\n  <ThemeWrapper>\\\\\\\\n    <Position type='relative'>\\\\\\\\n      <MultiSelect\\\\\\\\n        id={text('id', 'Colors')}\\\\\\\\n        width={text('width', '300px')}\\\\\\\\n        options={object('Multi Select Options', options)}\\\\\\\\n        onChange={action('Multi Select changed')}\\\\\\\\n        style={object('styles', {\\\\\\\\n          position: 'absolute',\\\\\\\\n          top: '0px',\\\\\\\\n          left: '145px'\\\\\\\\n        })}\\\\\\\\n        isLoading={boolean('isLoading', false)}\\\\\\\\n        isNoOption={boolean('isNoOption', false)}\\\\\\\\n        menuOpen={boolean('menuOpen', false)}\\\\\\\\n        selected={object('Selected', selectedOptions)}\\\\\\\\n        allowSelectAll={boolean('allowSelectAll', false)}\\\\\\\\n        maximumSelected={number('maximum Selected', 4)}\\\\\\\\n        searchableKeys={array('Searchable Keys', [\\\\\\\\n          'value',\\\\\\\\n          'label',\\\\\\\\n          'phoneNumber',\\\\\\\\n          'age'\\\\\\\\n        ])}\\\\\\\\n      >\\\\\\\\n        {({ optionSelected, isMenuOpen, openMenu }: tMultiSelectChildren) => (\\\\\\\\n          <>\\\\\\\\n            {openMenu}\\\\\\\\n            <Button\\\\\\\\n              id='id'\\\\\\\\n              variant='button'\\\\\\\\n              onClick={() => {\\\\\\\\n                console.log(optionSelected)\\\\\\\\n                openMenu(!isMenuOpen)\\\\\\\\n                action('MultiSelect opened/closed')(isMenuOpen)\\\\\\\\n              }}\\\\\\\\n            >\\\\\\\\n              <React.Fragment>\\\\\\\\n                <span>Open MultiSelect</span>\\\\\\\\n                <FontIcon variant='angle-right' size='sm' />\\\\\\\\n              </React.Fragment>\\\\\\\\n            </Button>\\\\\\\\n          </>\\\\\\\\n        )}\\\\\\\\n      </MultiSelect>\\\\\\\\n    </Position>\\\\\\\\n  </ThemeWrapper>\\\\\\\\n)\\\\\\\\n\\\\\\\";\\\\n// @ts-ignore\\\\nvar __ADDS_MAP__ = {};\\\\n// @ts-ignore\\\\nvar __MAIN_FILE_LOCATION__ = \\\\\\\"/withButton.stories.tsx\\\\\\\";\\\\n// @ts-ignore\\\\nvar __MODULE_DEPENDENCIES__ = [];\\\\n// @ts-ignore\\\\nvar __LOCAL_DEPENDENCIES__ = {};\\\\n// @ts-ignore\\\\nvar __IDS_TO_FRAMEWORKS__ = {};\\\\n        \\\\nimport React from 'react'\\\\nimport MultiSelect from '../index'\\\\nimport { path } from '../..'\\\\nimport ThemeWrapper from '../../../../utilities/components/ThemeWrapper'\\\\n\\\\nimport {\\\\n  text,\\\\n  object,\\\\n  withKnobs,\\\\n  boolean,\\\\n  number,\\\\n  array\\\\n} from '@storybook/addon-knobs'\\\\nimport { action } from '@storybook/addon-actions'\\\\nimport Button from '../../../atoms/Button'\\\\nimport Position from '../../Position'\\\\nimport FontIcon from '../../../atoms/FontIcon'\\\\nimport { tMultiSelectChildren } from '../interfaces'\\\\n\\\\nexport default {\\\\n  title: `${path}/MultiSelect`,\\\\n  component: MultiSelect,\\\\n  decorators: [withKnobs],\\\\n  parameters: {\\\\\\\"storySource\\\\\\\":{\\\\\\\"source\\\\\\\":\\\\\\\"import React from 'react'\\\\\\\\nimport MultiSelect from '../index'\\\\\\\\nimport { path } from '../..'\\\\\\\\nimport ThemeWrapper from '../../../../utilities/components/ThemeWrapper'\\\\\\\\n\\\\\\\\nimport {\\\\\\\\n  text,\\\\\\\\n  object,\\\\\\\\n  withKnobs,\\\\\\\\n  boolean,\\\\\\\\n  number,\\\\\\\\n  array\\\\\\\\n} from '@storybook/addon-knobs'\\\\\\\\nimport { action } from '@storybook/addon-actions'\\\\\\\\nimport Button from '../../../atoms/Button'\\\\\\\\nimport Position from '../../Position'\\\\\\\\nimport FontIcon from '../../../atoms/FontIcon'\\\\\\\\nimport { tMultiSelectChildren } from '../interfaces'\\\\\\\\n\\\\\\\\nexport default {\\\\\\\\n  title: `${path}/MultiSelect`,\\\\\\\\n  component: MultiSelect,\\\\\\\\n  decorators: [withKnobs],\\\\\\\\n  parameters: {\\\\\\\\n    props: {\\\\\\\\n      propTablesExclude: [Button, ThemeWrapper, Position, FontIcon]\\\\\\\\n    }\\\\\\\\n  }\\\\\\\\n}\\\\\\\\n\\\\\\\\nconst options = [\\\\\\\\n  { value: 'ocean', label: 'Ocean', phoneNumber: '1234', age: '10' },\\\\\\\\n  { value: 'blue', label: 'Blue', phoneNumber: '455556', age: '12' },\\\\\\\\n  { value: 'purple', label: 'Purple', phoneNumber: '67778', age: '13' },\\\\\\\\n  { value: 'red', label: 'Red', phoneNumber: '89990', age: '14' },\\\\\\\\n  { value: 'orange', label: 'Orange', phoneNumber: '001323', age: '15' },\\\\\\\\n  { value: 'yellow', label: 'Yellow', phoneNumber: '99243452', age: '16' },\\\\\\\\n  { value: 'green', label: 'Green', phoneNumber: '120009', age: '18' },\\\\\\\\n  { value: 'forest', label: 'Forest', phoneNumber: '0000000', age: '20' },\\\\\\\\n  { value: 'slate', label: 'Slate', phoneNumber: '11111111', age: '30' },\\\\\\\\n  { value: 'silver', label: 'Silver', phoneNumber: '22222222', age: '40' }\\\\\\\\n]\\\\\\\\nconst selectedOptions = [\\\\\\\\n  { value: 'ocean', label: 'Ocean', phoneNumber: '1234', age: '10' },\\\\\\\\n  { value: 'blue', label: 'Blue', phoneNumber: '455556', age: '12' },\\\\\\\\n  { value: 'purple', label: 'Purple', phoneNumber: '67778', age: '13' },\\\\\\\\n  { value: 'red', label: 'Red', phoneNumber: '89990', age: '14' },\\\\\\\\n  { value: 'forest', label: 'Forest', phoneNumber: '0000000', age: '20' },\\\\\\\\n  { value: 'slate', label: 'Slate', phoneNumber: '11111111', age: '30' }\\\\\\\\n]\\\\\\\\n\\\\\\\\nexport const withButton = () => (\\\\\\\\n  <ThemeWrapper>\\\\\\\\n    <Position type='relative'>\\\\\\\\n      <MultiSelect\\\\\\\\n        id={text('id', 'Colors')}\\\\\\\\n        width={text('width', '300px')}\\\\\\\\n        options={object('Multi Select Options', options)}\\\\\\\\n        onChange={action('Multi Select changed')}\\\\\\\\n        style={object('styles', {\\\\\\\\n          position: 'absolute',\\\\\\\\n          top: '0px',\\\\\\\\n          left: '145px'\\\\\\\\n        })}\\\\\\\\n        isLoading={boolean('isLoading', false)}\\\\\\\\n        isNoOption={boolean('isNoOption', false)}\\\\\\\\n        menuOpen={boolean('menuOpen', false)}\\\\\\\\n        selected={object('Selected', selectedOptions)}\\\\\\\\n        allowSelectAll={boolean('allowSelectAll', false)}\\\\\\\\n        maximumSelected={number('maximum Selected', 4)}\\\\\\\\n        searchableKeys={array('Searchable Keys', [\\\\\\\\n          'value',\\\\\\\\n          'label',\\\\\\\\n          'phoneNumber',\\\\\\\\n          'age'\\\\\\\\n        ])}\\\\\\\\n      >\\\\\\\\n        {({ optionSelected, isMenuOpen, openMenu }: tMultiSelectChildren) => (\\\\\\\\n          <>\\\\\\\\n            {openMenu}\\\\\\\\n            <Button\\\\\\\\n              id='id'\\\\\\\\n              variant='button'\\\\\\\\n              onClick={() => {\\\\\\\\n                console.log(optionSelected)\\\\\\\\n                openMenu(!isMenuOpen)\\\\\\\\n                action('MultiSelect opened/closed')(isMenuOpen)\\\\\\\\n              }}\\\\\\\\n            >\\\\\\\\n              <React.Fragment>\\\\\\\\n                <span>Open MultiSelect</span>\\\\\\\\n                <FontIcon variant='angle-right' size='sm' />\\\\\\\\n              </React.Fragment>\\\\\\\\n            </Button>\\\\\\\\n          </>\\\\\\\\n        )}\\\\\\\\n      </MultiSelect>\\\\\\\\n    </Position>\\\\\\\\n  </ThemeWrapper>\\\\\\\\n)\\\\\\\\n\\\\\\\",\\\\\\\"locationsMap\\\\\\\":{}},\\\\n    props: {\\\\n      propTablesExclude: [Button, ThemeWrapper, Position, FontIcon]\\\\n    }\\\\n  },}\\\\n\\\\nconst options = [\\\\n  { value: 'ocean', label: 'Ocean', phoneNumber: '1234', age: '10' },\\\\n  { value: 'blue', label: 'Blue', phoneNumber: '455556', age: '12' },\\\\n  { value: 'purple', label: 'Purple', phoneNumber: '67778', age: '13' },\\\\n  { value: 'red', label: 'Red', phoneNumber: '89990', age: '14' },\\\\n  { value: 'orange', label: 'Orange', phoneNumber: '001323', age: '15' },\\\\n  { value: 'yellow', label: 'Yellow', phoneNumber: '99243452', age: '16' },\\\\n  { value: 'green', label: 'Green', phoneNumber: '120009', age: '18' },\\\\n  { value: 'forest', label: 'Forest', phoneNumber: '0000000', age: '20' },\\\\n  { value: 'slate', label: 'Slate', phoneNumber: '11111111', age: '30' },\\\\n  { value: 'silver', label: 'Silver', phoneNumber: '22222222', age: '40' }\\\\n]\\\\nconst selectedOptions = [\\\\n  { value: 'ocean', label: 'Ocean', phoneNumber: '1234', age: '10' },\\\\n  { value: 'blue', label: 'Blue', phoneNumber: '455556', age: '12' },\\\\n  { value: 'purple', label: 'Purple', phoneNumber: '67778', age: '13' },\\\\n  { value: 'red', label: 'Red', phoneNumber: '89990', age: '14' },\\\\n  { value: 'forest', label: 'Forest', phoneNumber: '0000000', age: '20' },\\\\n  { value: 'slate', label: 'Slate', phoneNumber: '11111111', age: '30' }\\\\n]\\\\n\\\\nexport const withButton = addSourceDecorator(() => (\\\\n  <ThemeWrapper>\\\\n    <Position type='relative'>\\\\n      <MultiSelect\\\\n        id={text('id', 'Colors')}\\\\n        width={text('width', '300px')}\\\\n        options={object('Multi Select Options', options)}\\\\n        onChange={action('Multi Select changed')}\\\\n        style={object('styles', {\\\\n          position: 'absolute',\\\\n          top: '0px',\\\\n          left: '145px'\\\\n        })}\\\\n        isLoading={boolean('isLoading', false)}\\\\n        isNoOption={boolean('isNoOption', false)}\\\\n        menuOpen={boolean('menuOpen', false)}\\\\n        selected={object('Selected', selectedOptions)}\\\\n        allowSelectAll={boolean('allowSelectAll', false)}\\\\n        maximumSelected={number('maximum Selected', 4)}\\\\n        searchableKeys={array('Searchable Keys', [\\\\n          'value',\\\\n          'label',\\\\n          'phoneNumber',\\\\n          'age'\\\\n        ])}\\\\n      >\\\\n        {({ optionSelected, isMenuOpen, openMenu }: tMultiSelectChildren) => (\\\\n          <>\\\\n            {openMenu}\\\\n            <Button\\\\n              id='id'\\\\n              variant='button'\\\\n              onClick={() => {\\\\n                console.log(optionSelected)\\\\n                openMenu(!isMenuOpen)\\\\n                action('MultiSelect opened/closed')(isMenuOpen)\\\\n              }}\\\\n            >\\\\n              <React.Fragment>\\\\n                <span>Open MultiSelect</span>\\\\n                <FontIcon variant='angle-right' size='sm' />\\\\n              </React.Fragment>\\\\n            </Button>\\\\n          </>\\\\n        )}\\\\n      </MultiSelect>\\\\n    </Position>\\\\n  </ThemeWrapper>\\\\n), {__STORY__, __ADDS_MAP__,__MAIN_FILE_LOCATION__,__MODULE_DEPENDENCIES__,__LOCAL_DEPENDENCIES__,__SOURCE_PREFIX__,__IDS_TO_FRAMEWORKS__});\\\",\\\"locationsMap\\\":{}},\\\"storySource\\\":{\\\"source\\\":\\\"import React from 'react'\\\\nimport MultiSelect from '../index'\\\\nimport { path } from '../..'\\\\nimport ThemeWrapper from '../../../../utilities/components/ThemeWrapper'\\\\n\\\\nimport {\\\\n  text,\\\\n  object,\\\\n  withKnobs,\\\\n  boolean,\\\\n  number,\\\\n  array\\\\n} from '@storybook/addon-knobs'\\\\nimport { action } from '@storybook/addon-actions'\\\\nimport Button from '../../../atoms/Button'\\\\nimport Position from '../../Position'\\\\nimport FontIcon from '../../../atoms/FontIcon'\\\\nimport { tMultiSelectChildren } from '../interfaces'\\\\n\\\\nexport default {\\\\n  title: `${path}/MultiSelect`,\\\\n  component: MultiSelect,\\\\n  decorators: [withKnobs],\\\\n  parameters: {\\\\n    props: {\\\\n      propTablesExclude: [Button, ThemeWrapper, Position, FontIcon]\\\\n    }\\\\n  }\\\\n}\\\\n\\\\nconst options = [\\\\n  { value: 'ocean', label: 'Ocean', phoneNumber: '1234', age: '10' },\\\\n  { value: 'blue', label: 'Blue', phoneNumber: '455556', age: '12' },\\\\n  { value: 'purple', label: 'Purple', phoneNumber: '67778', age: '13' },\\\\n  { value: 'red', label: 'Red', phoneNumber: '89990', age: '14' },\\\\n  { value: 'orange', label: 'Orange', phoneNumber: '001323', age: '15' },\\\\n  { value: 'yellow', label: 'Yellow', phoneNumber: '99243452', age: '16' },\\\\n  { value: 'green', label: 'Green', phoneNumber: '120009', age: '18' },\\\\n  { value: 'forest', label: 'Forest', phoneNumber: '0000000', age: '20' },\\\\n  { value: 'slate', label: 'Slate', phoneNumber: '11111111', age: '30' },\\\\n  { value: 'silver', label: 'Silver', phoneNumber: '22222222', age: '40' }\\\\n]\\\\nconst selectedOptions = [\\\\n  { value: 'ocean', label: 'Ocean', phoneNumber: '1234', age: '10' },\\\\n  { value: 'blue', label: 'Blue', phoneNumber: '455556', age: '12' },\\\\n  { value: 'purple', label: 'Purple', phoneNumber: '67778', age: '13' },\\\\n  { value: 'red', label: 'Red', phoneNumber: '89990', age: '14' },\\\\n  { value: 'forest', label: 'Forest', phoneNumber: '0000000', age: '20' },\\\\n  { value: 'slate', label: 'Slate', phoneNumber: '11111111', age: '30' }\\\\n]\\\\n\\\\nexport const withButton = () => (\\\\n  <ThemeWrapper>\\\\n    <Position type='relative'>\\\\n      <MultiSelect\\\\n        id={text('id', 'Colors')}\\\\n        width={text('width', '300px')}\\\\n        options={object('Multi Select Options', options)}\\\\n        onChange={action('Multi Select changed')}\\\\n        style={object('styles', {\\\\n          position: 'absolute',\\\\n          top: '0px',\\\\n          left: '145px'\\\\n        })}\\\\n        isLoading={boolean('isLoading', false)}\\\\n        isNoOption={boolean('isNoOption', false)}\\\\n        menuOpen={boolean('menuOpen', false)}\\\\n        selected={object('Selected', selectedOptions)}\\\\n        allowSelectAll={boolean('allowSelectAll', false)}\\\\n        maximumSelected={number('maximum Selected', 4)}\\\\n        searchableKeys={array('Searchable Keys', [\\\\n          'value',\\\\n          'label',\\\\n          'phoneNumber',\\\\n          'age'\\\\n        ])}\\\\n      >\\\\n        {({ optionSelected, isMenuOpen, openMenu }: tMultiSelectChildren) => (\\\\n          <>\\\\n            {openMenu}\\\\n            <Button\\\\n              id='id'\\\\n              variant='button'\\\\n              onClick={() => {\\\\n                console.log(optionSelected)\\\\n                openMenu(!isMenuOpen)\\\\n                action('MultiSelect opened/closed')(isMenuOpen)\\\\n              }}\\\\n            >\\\\n              <React.Fragment>\\\\n                <span>Open MultiSelect</span>\\\\n                <FontIcon variant='angle-right' size='sm' />\\\\n              </React.Fragment>\\\\n            </Button>\\\\n          </>\\\\n        )}\\\\n      </MultiSelect>\\\\n    </Position>\\\\n  </ThemeWrapper>\\\\n)\\\\n\\\",\\\"locationsMap\\\":{}},\\n    props: {\\n      propTablesExclude: [Button, ThemeWrapper, Position, FontIcon]\\n    }\\n  },}\\n\\nconst options = [\\n  { value: 'ocean', label: 'Ocean', phoneNumber: '1234', age: '10' },\\n  { value: 'blue', label: 'Blue', phoneNumber: '455556', age: '12' },\\n  { value: 'purple', label: 'Purple', phoneNumber: '67778', age: '13' },\\n  { value: 'red', label: 'Red', phoneNumber: '89990', age: '14' },\\n  { value: 'orange', label: 'Orange', phoneNumber: '001323', age: '15' },\\n  { value: 'yellow', label: 'Yellow', phoneNumber: '99243452', age: '16' },\\n  { value: 'green', label: 'Green', phoneNumber: '120009', age: '18' },\\n  { value: 'forest', label: 'Forest', phoneNumber: '0000000', age: '20' },\\n  { value: 'slate', label: 'Slate', phoneNumber: '11111111', age: '30' },\\n  { value: 'silver', label: 'Silver', phoneNumber: '22222222', age: '40' }\\n]\\nconst selectedOptions = [\\n  { value: 'ocean', label: 'Ocean', phoneNumber: '1234', age: '10' },\\n  { value: 'blue', label: 'Blue', phoneNumber: '455556', age: '12' },\\n  { value: 'purple', label: 'Purple', phoneNumber: '67778', age: '13' },\\n  { value: 'red', label: 'Red', phoneNumber: '89990', age: '14' },\\n  { value: 'forest', label: 'Forest', phoneNumber: '0000000', age: '20' },\\n  { value: 'slate', label: 'Slate', phoneNumber: '11111111', age: '30' }\\n]\\n\\nexport const withButton = addSourceDecorator(addSourceDecorator(() => (\\n  <ThemeWrapper>\\n    <Position type='relative'>\\n      <MultiSelect\\n        id={text('id', 'Colors')}\\n        width={text('width', '300px')}\\n        options={object('Multi Select Options', options)}\\n        onChange={action('Multi Select changed')}\\n        style={object('styles', {\\n          position: 'absolute',\\n          top: '0px',\\n          left: '145px'\\n        })}\\n        isLoading={boolean('isLoading', false)}\\n        isNoOption={boolean('isNoOption', false)}\\n        menuOpen={boolean('menuOpen', false)}\\n        selected={object('Selected', selectedOptions)}\\n        allowSelectAll={boolean('allowSelectAll', false)}\\n        maximumSelected={number('maximum Selected', 4)}\\n        searchableKeys={array('Searchable Keys', [\\n          'value',\\n          'label',\\n          'phoneNumber',\\n          'age'\\n        ])}\\n      >\\n        {({ optionSelected, isMenuOpen, openMenu }: tMultiSelectChildren) => (\\n          <>\\n            {openMenu}\\n            <Button\\n              id='id'\\n              variant='button'\\n              onClick={() => {\\n                console.log(optionSelected)\\n                openMenu(!isMenuOpen)\\n                action('MultiSelect opened/closed')(isMenuOpen)\\n              }}\\n            >\\n              <React.Fragment>\\n                <span>Open MultiSelect</span>\\n                <FontIcon variant='angle-right' size='sm' />\\n              </React.Fragment>\\n            </Button>\\n          </>\\n        )}\\n      </MultiSelect>\\n    </Position>\\n  </ThemeWrapper>\\n), {__STORY__, __ADDS_MAP__,__MAIN_FILE_LOCATION__,__MODULE_DEPENDENCIES__,__LOCAL_DEPENDENCIES__,__SOURCE_PREFIX__,__IDS_TO_FRAMEWORKS__}), {__STORY__, __ADDS_MAP__,__MAIN_FILE_LOCATION__,__MODULE_DEPENDENCIES__,__LOCAL_DEPENDENCIES__,__SOURCE_PREFIX__,__IDS_TO_FRAMEWORKS__});\",\n      \"locationsMap\": {}\n    }\n  }, _defineProperty(_parameters, \"storySource\", {\n    \"source\": \"\\n\\n// @ts-nocheck\\n// @ts-ignore\\nvar withSourceLoader = require('@storybook/source-loader/preview').withSource;\\n// @ts-ignore\\nvar addSourceDecorator = require(\\\"@storybook/source-loader/preview\\\").addSource;\\n// @ts-ignore\\nvar __SOURCE_PREFIX__ = \\\"/Users/farhanansari/Desktop/CODE/PrxProject/untitled folder/reactStoryBook/src/components/molecules/MultiSelect/stories\\\";\\n// @ts-ignore\\nvar __STORY__ = \\\"import React from 'react'\\\\nimport MultiSelect from '../index'\\\\nimport { path } from '../..'\\\\nimport ThemeWrapper from '../../../../utilities/components/ThemeWrapper'\\\\n\\\\nimport {\\\\n  text,\\\\n  object,\\\\n  withKnobs,\\\\n  boolean,\\\\n  number,\\\\n  array\\\\n} from '@storybook/addon-knobs'\\\\nimport { action } from '@storybook/addon-actions'\\\\nimport Button from '../../../atoms/Button'\\\\nimport Position from '../../Position'\\\\nimport FontIcon from '../../../atoms/FontIcon'\\\\nimport { tMultiSelectChildren } from '../interfaces'\\\\n\\\\nexport default {\\\\n  title: `${path}/MultiSelect`,\\\\n  component: MultiSelect,\\\\n  decorators: [withKnobs],\\\\n  parameters: {\\\\n    props: {\\\\n      propTablesExclude: [Button, ThemeWrapper, Position, FontIcon]\\\\n    }\\\\n  }\\\\n}\\\\n\\\\nconst options = [\\\\n  { value: 'ocean', label: 'Ocean', phoneNumber: '1234', age: '10' },\\\\n  { value: 'blue', label: 'Blue', phoneNumber: '455556', age: '12' },\\\\n  { value: 'purple', label: 'Purple', phoneNumber: '67778', age: '13' },\\\\n  { value: 'red', label: 'Red', phoneNumber: '89990', age: '14' },\\\\n  { value: 'orange', label: 'Orange', phoneNumber: '001323', age: '15' },\\\\n  { value: 'yellow', label: 'Yellow', phoneNumber: '99243452', age: '16' },\\\\n  { value: 'green', label: 'Green', phoneNumber: '120009', age: '18' },\\\\n  { value: 'forest', label: 'Forest', phoneNumber: '0000000', age: '20' },\\\\n  { value: 'slate', label: 'Slate', phoneNumber: '11111111', age: '30' },\\\\n  { value: 'silver', label: 'Silver', phoneNumber: '22222222', age: '40' }\\\\n]\\\\nconst selectedOptions = [\\\\n  { value: 'ocean', label: 'Ocean', phoneNumber: '1234', age: '10' },\\\\n  { value: 'blue', label: 'Blue', phoneNumber: '455556', age: '12' },\\\\n  { value: 'purple', label: 'Purple', phoneNumber: '67778', age: '13' },\\\\n  { value: 'red', label: 'Red', phoneNumber: '89990', age: '14' },\\\\n  { value: 'forest', label: 'Forest', phoneNumber: '0000000', age: '20' },\\\\n  { value: 'slate', label: 'Slate', phoneNumber: '11111111', age: '30' }\\\\n]\\\\n\\\\nexport const withButton = () => (\\\\n  <ThemeWrapper>\\\\n    <Position type='relative'>\\\\n      <MultiSelect\\\\n        id={text('id', 'Colors')}\\\\n        width={text('width', '300px')}\\\\n        options={object('Multi Select Options', options)}\\\\n        onChange={action('Multi Select changed')}\\\\n        style={object('styles', {\\\\n          position: 'absolute',\\\\n          top: '0px',\\\\n          left: '145px'\\\\n        })}\\\\n        isLoading={boolean('isLoading', false)}\\\\n        isNoOption={boolean('isNoOption', false)}\\\\n        menuOpen={boolean('menuOpen', false)}\\\\n        selected={object('Selected', selectedOptions)}\\\\n        allowSelectAll={boolean('allowSelectAll', false)}\\\\n        maximumSelected={number('maximum Selected', 4)}\\\\n        searchableKeys={array('Searchable Keys', [\\\\n          'value',\\\\n          'label',\\\\n          'phoneNumber',\\\\n          'age'\\\\n        ])}\\\\n      >\\\\n        {({ optionSelected, isMenuOpen, openMenu }: tMultiSelectChildren) => (\\\\n          <>\\\\n            {openMenu}\\\\n            <Button\\\\n              id='id'\\\\n              variant='button'\\\\n              onClick={() => {\\\\n                console.log(optionSelected)\\\\n                openMenu(!isMenuOpen)\\\\n                action('MultiSelect opened/closed')(isMenuOpen)\\\\n              }}\\\\n            >\\\\n              <React.Fragment>\\\\n                <span>Open MultiSelect</span>\\\\n                <FontIcon variant='angle-right' size='sm' />\\\\n              </React.Fragment>\\\\n            </Button>\\\\n          </>\\\\n        )}\\\\n      </MultiSelect>\\\\n    </Position>\\\\n  </ThemeWrapper>\\\\n)\\\\n\\\";\\n// @ts-ignore\\nvar __ADDS_MAP__ = {};\\n// @ts-ignore\\nvar __MAIN_FILE_LOCATION__ = \\\"/withButton.stories.tsx\\\";\\n// @ts-ignore\\nvar __MODULE_DEPENDENCIES__ = [];\\n// @ts-ignore\\nvar __LOCAL_DEPENDENCIES__ = {};\\n// @ts-ignore\\nvar __IDS_TO_FRAMEWORKS__ = {};\\n        \\nimport React from 'react'\\nimport MultiSelect from '../index'\\nimport { path } from '../..'\\nimport ThemeWrapper from '../../../../utilities/components/ThemeWrapper'\\n\\nimport {\\n  text,\\n  object,\\n  withKnobs,\\n  boolean,\\n  number,\\n  array\\n} from '@storybook/addon-knobs'\\nimport { action } from '@storybook/addon-actions'\\nimport Button from '../../../atoms/Button'\\nimport Position from '../../Position'\\nimport FontIcon from '../../../atoms/FontIcon'\\nimport { tMultiSelectChildren } from '../interfaces'\\n\\nexport default {\\n  title: `${path}/MultiSelect`,\\n  component: MultiSelect,\\n  decorators: [withKnobs],\\n  parameters: {\\\"storySource\\\":{\\\"source\\\":\\\"import React from 'react'\\\\nimport MultiSelect from '../index'\\\\nimport { path } from '../..'\\\\nimport ThemeWrapper from '../../../../utilities/components/ThemeWrapper'\\\\n\\\\nimport {\\\\n  text,\\\\n  object,\\\\n  withKnobs,\\\\n  boolean,\\\\n  number,\\\\n  array\\\\n} from '@storybook/addon-knobs'\\\\nimport { action } from '@storybook/addon-actions'\\\\nimport Button from '../../../atoms/Button'\\\\nimport Position from '../../Position'\\\\nimport FontIcon from '../../../atoms/FontIcon'\\\\nimport { tMultiSelectChildren } from '../interfaces'\\\\n\\\\nexport default {\\\\n  title: `${path}/MultiSelect`,\\\\n  component: MultiSelect,\\\\n  decorators: [withKnobs],\\\\n  parameters: {\\\\n    props: {\\\\n      propTablesExclude: [Button, ThemeWrapper, Position, FontIcon]\\\\n    }\\\\n  }\\\\n}\\\\n\\\\nconst options = [\\\\n  { value: 'ocean', label: 'Ocean', phoneNumber: '1234', age: '10' },\\\\n  { value: 'blue', label: 'Blue', phoneNumber: '455556', age: '12' },\\\\n  { value: 'purple', label: 'Purple', phoneNumber: '67778', age: '13' },\\\\n  { value: 'red', label: 'Red', phoneNumber: '89990', age: '14' },\\\\n  { value: 'orange', label: 'Orange', phoneNumber: '001323', age: '15' },\\\\n  { value: 'yellow', label: 'Yellow', phoneNumber: '99243452', age: '16' },\\\\n  { value: 'green', label: 'Green', phoneNumber: '120009', age: '18' },\\\\n  { value: 'forest', label: 'Forest', phoneNumber: '0000000', age: '20' },\\\\n  { value: 'slate', label: 'Slate', phoneNumber: '11111111', age: '30' },\\\\n  { value: 'silver', label: 'Silver', phoneNumber: '22222222', age: '40' }\\\\n]\\\\nconst selectedOptions = [\\\\n  { value: 'ocean', label: 'Ocean', phoneNumber: '1234', age: '10' },\\\\n  { value: 'blue', label: 'Blue', phoneNumber: '455556', age: '12' },\\\\n  { value: 'purple', label: 'Purple', phoneNumber: '67778', age: '13' },\\\\n  { value: 'red', label: 'Red', phoneNumber: '89990', age: '14' },\\\\n  { value: 'forest', label: 'Forest', phoneNumber: '0000000', age: '20' },\\\\n  { value: 'slate', label: 'Slate', phoneNumber: '11111111', age: '30' }\\\\n]\\\\n\\\\nexport const withButton = () => (\\\\n  <ThemeWrapper>\\\\n    <Position type='relative'>\\\\n      <MultiSelect\\\\n        id={text('id', 'Colors')}\\\\n        width={text('width', '300px')}\\\\n        options={object('Multi Select Options', options)}\\\\n        onChange={action('Multi Select changed')}\\\\n        style={object('styles', {\\\\n          position: 'absolute',\\\\n          top: '0px',\\\\n          left: '145px'\\\\n        })}\\\\n        isLoading={boolean('isLoading', false)}\\\\n        isNoOption={boolean('isNoOption', false)}\\\\n        menuOpen={boolean('menuOpen', false)}\\\\n        selected={object('Selected', selectedOptions)}\\\\n        allowSelectAll={boolean('allowSelectAll', false)}\\\\n        maximumSelected={number('maximum Selected', 4)}\\\\n        searchableKeys={array('Searchable Keys', [\\\\n          'value',\\\\n          'label',\\\\n          'phoneNumber',\\\\n          'age'\\\\n        ])}\\\\n      >\\\\n        {({ optionSelected, isMenuOpen, openMenu }: tMultiSelectChildren) => (\\\\n          <>\\\\n            {openMenu}\\\\n            <Button\\\\n              id='id'\\\\n              variant='button'\\\\n              onClick={() => {\\\\n                console.log(optionSelected)\\\\n                openMenu(!isMenuOpen)\\\\n                action('MultiSelect opened/closed')(isMenuOpen)\\\\n              }}\\\\n            >\\\\n              <React.Fragment>\\\\n                <span>Open MultiSelect</span>\\\\n                <FontIcon variant='angle-right' size='sm' />\\\\n              </React.Fragment>\\\\n            </Button>\\\\n          </>\\\\n        )}\\\\n      </MultiSelect>\\\\n    </Position>\\\\n  </ThemeWrapper>\\\\n)\\\\n\\\",\\\"locationsMap\\\":{}},\\n    props: {\\n      propTablesExclude: [Button, ThemeWrapper, Position, FontIcon]\\n    }\\n  },}\\n\\nconst options = [\\n  { value: 'ocean', label: 'Ocean', phoneNumber: '1234', age: '10' },\\n  { value: 'blue', label: 'Blue', phoneNumber: '455556', age: '12' },\\n  { value: 'purple', label: 'Purple', phoneNumber: '67778', age: '13' },\\n  { value: 'red', label: 'Red', phoneNumber: '89990', age: '14' },\\n  { value: 'orange', label: 'Orange', phoneNumber: '001323', age: '15' },\\n  { value: 'yellow', label: 'Yellow', phoneNumber: '99243452', age: '16' },\\n  { value: 'green', label: 'Green', phoneNumber: '120009', age: '18' },\\n  { value: 'forest', label: 'Forest', phoneNumber: '0000000', age: '20' },\\n  { value: 'slate', label: 'Slate', phoneNumber: '11111111', age: '30' },\\n  { value: 'silver', label: 'Silver', phoneNumber: '22222222', age: '40' }\\n]\\nconst selectedOptions = [\\n  { value: 'ocean', label: 'Ocean', phoneNumber: '1234', age: '10' },\\n  { value: 'blue', label: 'Blue', phoneNumber: '455556', age: '12' },\\n  { value: 'purple', label: 'Purple', phoneNumber: '67778', age: '13' },\\n  { value: 'red', label: 'Red', phoneNumber: '89990', age: '14' },\\n  { value: 'forest', label: 'Forest', phoneNumber: '0000000', age: '20' },\\n  { value: 'slate', label: 'Slate', phoneNumber: '11111111', age: '30' }\\n]\\n\\nexport const withButton = addSourceDecorator(() => (\\n  <ThemeWrapper>\\n    <Position type='relative'>\\n      <MultiSelect\\n        id={text('id', 'Colors')}\\n        width={text('width', '300px')}\\n        options={object('Multi Select Options', options)}\\n        onChange={action('Multi Select changed')}\\n        style={object('styles', {\\n          position: 'absolute',\\n          top: '0px',\\n          left: '145px'\\n        })}\\n        isLoading={boolean('isLoading', false)}\\n        isNoOption={boolean('isNoOption', false)}\\n        menuOpen={boolean('menuOpen', false)}\\n        selected={object('Selected', selectedOptions)}\\n        allowSelectAll={boolean('allowSelectAll', false)}\\n        maximumSelected={number('maximum Selected', 4)}\\n        searchableKeys={array('Searchable Keys', [\\n          'value',\\n          'label',\\n          'phoneNumber',\\n          'age'\\n        ])}\\n      >\\n        {({ optionSelected, isMenuOpen, openMenu }: tMultiSelectChildren) => (\\n          <>\\n            {openMenu}\\n            <Button\\n              id='id'\\n              variant='button'\\n              onClick={() => {\\n                console.log(optionSelected)\\n                openMenu(!isMenuOpen)\\n                action('MultiSelect opened/closed')(isMenuOpen)\\n              }}\\n            >\\n              <React.Fragment>\\n                <span>Open MultiSelect</span>\\n                <FontIcon variant='angle-right' size='sm' />\\n              </React.Fragment>\\n            </Button>\\n          </>\\n        )}\\n      </MultiSelect>\\n    </Position>\\n  </ThemeWrapper>\\n), {__STORY__, __ADDS_MAP__,__MAIN_FILE_LOCATION__,__MODULE_DEPENDENCIES__,__LOCAL_DEPENDENCIES__,__SOURCE_PREFIX__,__IDS_TO_FRAMEWORKS__});\",\n    \"locationsMap\": {}\n  }), _defineProperty(_parameters, \"storySource\", {\n    \"source\": \"import React from 'react'\\nimport MultiSelect from '../index'\\nimport { path } from '../..'\\nimport ThemeWrapper from '../../../../utilities/components/ThemeWrapper'\\n\\nimport {\\n  text,\\n  object,\\n  withKnobs,\\n  boolean,\\n  number,\\n  array\\n} from '@storybook/addon-knobs'\\nimport { action } from '@storybook/addon-actions'\\nimport Button from '../../../atoms/Button'\\nimport Position from '../../Position'\\nimport FontIcon from '../../../atoms/FontIcon'\\nimport { tMultiSelectChildren } from '../interfaces'\\n\\nexport default {\\n  title: `${path}/MultiSelect`,\\n  component: MultiSelect,\\n  decorators: [withKnobs],\\n  parameters: {\\n    props: {\\n      propTablesExclude: [Button, ThemeWrapper, Position, FontIcon]\\n    }\\n  }\\n}\\n\\nconst options = [\\n  { value: 'ocean', label: 'Ocean', phoneNumber: '1234', age: '10' },\\n  { value: 'blue', label: 'Blue', phoneNumber: '455556', age: '12' },\\n  { value: 'purple', label: 'Purple', phoneNumber: '67778', age: '13' },\\n  { value: 'red', label: 'Red', phoneNumber: '89990', age: '14' },\\n  { value: 'orange', label: 'Orange', phoneNumber: '001323', age: '15' },\\n  { value: 'yellow', label: 'Yellow', phoneNumber: '99243452', age: '16' },\\n  { value: 'green', label: 'Green', phoneNumber: '120009', age: '18' },\\n  { value: 'forest', label: 'Forest', phoneNumber: '0000000', age: '20' },\\n  { value: 'slate', label: 'Slate', phoneNumber: '11111111', age: '30' },\\n  { value: 'silver', label: 'Silver', phoneNumber: '22222222', age: '40' }\\n]\\nconst selectedOptions = [\\n  { value: 'ocean', label: 'Ocean', phoneNumber: '1234', age: '10' },\\n  { value: 'blue', label: 'Blue', phoneNumber: '455556', age: '12' },\\n  { value: 'purple', label: 'Purple', phoneNumber: '67778', age: '13' },\\n  { value: 'red', label: 'Red', phoneNumber: '89990', age: '14' },\\n  { value: 'forest', label: 'Forest', phoneNumber: '0000000', age: '20' },\\n  { value: 'slate', label: 'Slate', phoneNumber: '11111111', age: '30' }\\n]\\n\\nexport const withButton = () => (\\n  <ThemeWrapper>\\n    <Position type='relative'>\\n      <MultiSelect\\n        id={text('id', 'Colors')}\\n        width={text('width', '300px')}\\n        options={object('Multi Select Options', options)}\\n        onChange={action('Multi Select changed')}\\n        style={object('styles', {\\n          position: 'absolute',\\n          top: '0px',\\n          left: '145px'\\n        })}\\n        isLoading={boolean('isLoading', false)}\\n        isNoOption={boolean('isNoOption', false)}\\n        menuOpen={boolean('menuOpen', false)}\\n        selected={object('Selected', selectedOptions)}\\n        allowSelectAll={boolean('allowSelectAll', false)}\\n        maximumSelected={number('maximum Selected', 4)}\\n        searchableKeys={array('Searchable Keys', [\\n          'value',\\n          'label',\\n          'phoneNumber',\\n          'age'\\n        ])}\\n      >\\n        {({ optionSelected, isMenuOpen, openMenu }: tMultiSelectChildren) => (\\n          <>\\n            {openMenu}\\n            <Button\\n              id='id'\\n              variant='button'\\n              onClick={() => {\\n                console.log(optionSelected)\\n                openMenu(!isMenuOpen)\\n                action('MultiSelect opened/closed')(isMenuOpen)\\n              }}\\n            >\\n              <React.Fragment>\\n                <span>Open MultiSelect</span>\\n                <FontIcon variant='angle-right' size='sm' />\\n              </React.Fragment>\\n            </Button>\\n          </>\\n        )}\\n      </MultiSelect>\\n    </Position>\\n  </ThemeWrapper>\\n)\\n\",\n    \"locationsMap\": {}\n  }), _defineProperty(_parameters, \"props\", {\n    propTablesExclude: [Button, ThemeWrapper, Position, FontIcon]\n  }), _parameters)\n};\nvar options = [{\n  value: 'ocean',\n  label: 'Ocean',\n  phoneNumber: '1234',\n  age: '10'\n}, {\n  value: 'blue',\n  label: 'Blue',\n  phoneNumber: '455556',\n  age: '12'\n}, {\n  value: 'purple',\n  label: 'Purple',\n  phoneNumber: '67778',\n  age: '13'\n}, {\n  value: 'red',\n  label: 'Red',\n  phoneNumber: '89990',\n  age: '14'\n}, {\n  value: 'orange',\n  label: 'Orange',\n  phoneNumber: '001323',\n  age: '15'\n}, {\n  value: 'yellow',\n  label: 'Yellow',\n  phoneNumber: '99243452',\n  age: '16'\n}, {\n  value: 'green',\n  label: 'Green',\n  phoneNumber: '120009',\n  age: '18'\n}, {\n  value: 'forest',\n  label: 'Forest',\n  phoneNumber: '0000000',\n  age: '20'\n}, {\n  value: 'slate',\n  label: 'Slate',\n  phoneNumber: '11111111',\n  age: '30'\n}, {\n  value: 'silver',\n  label: 'Silver',\n  phoneNumber: '22222222',\n  age: '40'\n}];\nvar selectedOptions = [{\n  value: 'ocean',\n  label: 'Ocean',\n  phoneNumber: '1234',\n  age: '10'\n}, {\n  value: 'blue',\n  label: 'Blue',\n  phoneNumber: '455556',\n  age: '12'\n}, {\n  value: 'purple',\n  label: 'Purple',\n  phoneNumber: '67778',\n  age: '13'\n}, {\n  value: 'red',\n  label: 'Red',\n  phoneNumber: '89990',\n  age: '14'\n}, {\n  value: 'forest',\n  label: 'Forest',\n  phoneNumber: '0000000',\n  age: '20'\n}, {\n  value: 'slate',\n  label: 'Slate',\n  phoneNumber: '11111111',\n  age: '30'\n}];\nexport var withButton = addSourceDecorator(addSourceDecorator(addSourceDecorator(function () {\n  return React.createElement(ThemeWrapper, null, React.createElement(Position, {\n    type: 'relative'\n  }, React.createElement(MultiSelect, {\n    id: text('id', 'Colors'),\n    width: text('width', '300px'),\n    options: object('Multi Select Options', options),\n    onChange: action('Multi Select changed'),\n    style: object('styles', {\n      position: 'absolute',\n      top: '0px',\n      left: '145px'\n    }),\n    isLoading: _boolean('isLoading', false),\n    isNoOption: _boolean('isNoOption', false),\n    menuOpen: _boolean('menuOpen', false),\n    selected: object('Selected', selectedOptions),\n    allowSelectAll: _boolean('allowSelectAll', false),\n    maximumSelected: number('maximum Selected', 4),\n    searchableKeys: array('Searchable Keys', ['value', 'label', 'phoneNumber', 'age'])\n  }, function (_a) {\n    var optionSelected = _a.optionSelected,\n        isMenuOpen = _a.isMenuOpen,\n        openMenu = _a.openMenu;\n    return React.createElement(React.Fragment, null, openMenu, React.createElement(Button, {\n      id: 'id',\n      variant: 'button',\n      onClick: function onClick() {\n        console.log(optionSelected);\n        openMenu(!isMenuOpen);\n        action('MultiSelect opened/closed')(isMenuOpen);\n      }\n    }, React.createElement(React.Fragment, null, React.createElement(\"span\", null, \"Open MultiSelect\"), React.createElement(FontIcon, {\n      variant: 'angle-right',\n      size: 'sm'\n    }))));\n  })));\n}, {\n  __STORY__: __STORY__,\n  __ADDS_MAP__: __ADDS_MAP__,\n  __MAIN_FILE_LOCATION__: __MAIN_FILE_LOCATION__,\n  __MODULE_DEPENDENCIES__: __MODULE_DEPENDENCIES__,\n  __LOCAL_DEPENDENCIES__: __LOCAL_DEPENDENCIES__,\n  __SOURCE_PREFIX__: __SOURCE_PREFIX__,\n  __IDS_TO_FRAMEWORKS__: __IDS_TO_FRAMEWORKS__\n}), {\n  __STORY__: __STORY__,\n  __ADDS_MAP__: __ADDS_MAP__,\n  __MAIN_FILE_LOCATION__: __MAIN_FILE_LOCATION__,\n  __MODULE_DEPENDENCIES__: __MODULE_DEPENDENCIES__,\n  __LOCAL_DEPENDENCIES__: __LOCAL_DEPENDENCIES__,\n  __SOURCE_PREFIX__: __SOURCE_PREFIX__,\n  __IDS_TO_FRAMEWORKS__: __IDS_TO_FRAMEWORKS__\n}), {\n  __STORY__: __STORY__,\n  __ADDS_MAP__: __ADDS_MAP__,\n  __MAIN_FILE_LOCATION__: __MAIN_FILE_LOCATION__,\n  __MODULE_DEPENDENCIES__: __MODULE_DEPENDENCIES__,\n  __LOCAL_DEPENDENCIES__: __LOCAL_DEPENDENCIES__,\n  __SOURCE_PREFIX__: __SOURCE_PREFIX__,\n  __IDS_TO_FRAMEWORKS__: __IDS_TO_FRAMEWORKS__\n});","map":{"version":3,"sources":["/Users/farhanansari/Desktop/CODE/PrxProject/untitled folder/reactStoryBook/node_modules/react-docgen-typescript-loader/dist/index.js!/Users/farhanansari/Desktop/CODE/PrxProject/untitled folder/reactStoryBook/node_modules/eslint-loader/dist/cjs.js??ref--6-0!/Users/farhanansari/Desktop/CODE/PrxProject/untitled folder/reactStoryBook/node_modules/@storybook/source-loader/dist/server/index.js??ref--11!/Users/farhanansari/Desktop/CODE/PrxProject/untitled folder/reactStoryBook/node_modules/@storybook/source-loader/dist/server/index.js!/Users/farhanansari/Desktop/CODE/PrxProject/untitled folder/reactStoryBook/node_modules/@storybook/source-loader/dist/server/index.js!/Users/farhanansari/Desktop/CODE/PrxProject/untitled folder/reactStoryBook/src/components/molecules/MultiSelect/stories/withButton.stories.tsx"],"names":[],"mappings":";;;;AACA;AACA;AACA;AACA,IAAI,gBAAgB,GAAG,OAAO,CAAC,kCAAD,CAAP,CAA4C,UAAnE,C,CACA;;;AACA,IAAI,kBAAkB,GAAG,OAAO,CAAC,kCAAD,CAAP,CAA4C,SAArE,C,CACA;;;AACA,IAAI,iBAAiB,GAAG,yHAAxB,C,CACA;;AACA,IAAI,SAAS,GAAG,+3oCAAhB,C,CACA;;AACA,IAAI,YAAY,GAAG,EAAnB,C,CACA;;AACA,IAAI,sBAAsB,GAAG,yBAA7B,C,CACA;;AACA,IAAI,uBAAuB,GAAG,EAA9B,C,CACA;;AACA,IAAI,sBAAsB,GAAG,EAA7B,C,CACA;;AACA,IAAI,qBAAqB,GAAG,EAA5B;AAGA;AACA;AACA;;AACA,IAAI,gBAAgB,GAAG,OAAO,CAAC,kCAAD,CAAP,CAA4C,UAAnE,C,CACA;;;AACA,IAAI,kBAAkB,GAAG,OAAO,CAAC,kCAAD,CAAP,CAA4C,SAArE,C,CACA;;;AACA,IAAI,iBAAiB,GAAG,yHAAxB,C,CACA;;AACA,IAAI,SAAS,GAAG,s+WAAhB,C,CACA;;AACA,IAAI,YAAY,GAAG,EAAnB,C,CACA;;AACA,IAAI,sBAAsB,GAAG,yBAA7B,C,CACA;;AACA,IAAI,uBAAuB,GAAG,EAA9B,C,CACA;;AACA,IAAI,sBAAsB,GAAG,EAA7B,C,CACA;;AACA,IAAI,qBAAqB,GAAG,EAA5B;AAGA;AACA;AACA;;AACA,IAAI,gBAAgB,GAAG,OAAO,CAAC,kCAAD,CAAP,CAA4C,UAAnE,C,CACA;;;AACA,IAAI,kBAAkB,GAAG,OAAO,CAAC,kCAAD,CAAP,CAA4C,SAArE,C,CACA;;;AACA,IAAI,iBAAiB,GAAG,yHAAxB,C,CACA;;AACA,IAAI,SAAS,GAAG,i+GAAhB,C,CACA;;AACA,IAAI,YAAY,GAAG,EAAnB,C,CACA;;AACA,IAAI,sBAAsB,GAAG,yBAA7B,C,CACA;;AACA,IAAI,uBAAuB,GAAG,EAA9B,C,CACA;;AACA,IAAI,sBAAsB,GAAG,EAA7B,C,CACA;;AACA,IAAI,qBAAqB,GAAG,EAA5B;AAEA,OAAO,KAAP,MAAkB,OAAlB;AACA,OAAO,WAAP,MAAwB,UAAxB;AACA,SAAS,IAAT,QAAqB,OAArB;AACA,OAAO,YAAP,MAAyB,+CAAzB;AAEA,SACE,IADF,EAEE,MAFF,EAGE,SAHF,EAIE,OAAO,IAAP,QAJF,EAKE,MALF,EAME,KANF,QAOO,wBAPP;AAQA,SAAS,MAAT,QAAuB,0BAAvB;AACA,OAAO,MAAP,MAAmB,uBAAnB;AACA,OAAO,QAAP,MAAqB,gBAArB;AACA,OAAO,QAAP,MAAqB,yBAArB;AAGA,eAAe;AACb,EAAA,KAAK,EAAK,IAAI,GAAA,cADD;AAEb,EAAA,SAAS,EAAE,WAFE;AAGb,EAAA,UAAU,EAAE,CAAC,SAAD,CAHC;AAIb,EAAA,UAAU;AAAG,mBAAc;AAAC,gBAAS,+3oCAAV;AAA04oC,sBAAe;AAAz5oC;AAAjB,iDAA47oC;AAAC,cAAS,s+WAAV;AAAi/W,oBAAe;AAAhgX,GAA57oC,+CAA88/C;AAAC,cAAS,i+GAAV;AAA4+G,oBAAe;AAA3/G,GAA98/C,yCACD;AACL,IAAA,iBAAiB,EAAE,CAAC,MAAD,EAAS,YAAT,EAAuB,QAAvB,EAAiC,QAAjC;AADd,GADC;AAJG,CAAf;AAUA,IAAM,OAAO,GAAG,CACd;AAAE,EAAA,KAAK,EAAE,OAAT;AAAkB,EAAA,KAAK,EAAE,OAAzB;AAAkC,EAAA,WAAW,EAAE,MAA/C;AAAuD,EAAA,GAAG,EAAE;AAA5D,CADc,EAEd;AAAE,EAAA,KAAK,EAAE,MAAT;AAAiB,EAAA,KAAK,EAAE,MAAxB;AAAgC,EAAA,WAAW,EAAE,QAA7C;AAAuD,EAAA,GAAG,EAAE;AAA5D,CAFc,EAGd;AAAE,EAAA,KAAK,EAAE,QAAT;AAAmB,EAAA,KAAK,EAAE,QAA1B;AAAoC,EAAA,WAAW,EAAE,OAAjD;AAA0D,EAAA,GAAG,EAAE;AAA/D,CAHc,EAId;AAAE,EAAA,KAAK,EAAE,KAAT;AAAgB,EAAA,KAAK,EAAE,KAAvB;AAA8B,EAAA,WAAW,EAAE,OAA3C;AAAoD,EAAA,GAAG,EAAE;AAAzD,CAJc,EAKd;AAAE,EAAA,KAAK,EAAE,QAAT;AAAmB,EAAA,KAAK,EAAE,QAA1B;AAAoC,EAAA,WAAW,EAAE,QAAjD;AAA2D,EAAA,GAAG,EAAE;AAAhE,CALc,EAMd;AAAE,EAAA,KAAK,EAAE,QAAT;AAAmB,EAAA,KAAK,EAAE,QAA1B;AAAoC,EAAA,WAAW,EAAE,UAAjD;AAA6D,EAAA,GAAG,EAAE;AAAlE,CANc,EAOd;AAAE,EAAA,KAAK,EAAE,OAAT;AAAkB,EAAA,KAAK,EAAE,OAAzB;AAAkC,EAAA,WAAW,EAAE,QAA/C;AAAyD,EAAA,GAAG,EAAE;AAA9D,CAPc,EAQd;AAAE,EAAA,KAAK,EAAE,QAAT;AAAmB,EAAA,KAAK,EAAE,QAA1B;AAAoC,EAAA,WAAW,EAAE,SAAjD;AAA4D,EAAA,GAAG,EAAE;AAAjE,CARc,EASd;AAAE,EAAA,KAAK,EAAE,OAAT;AAAkB,EAAA,KAAK,EAAE,OAAzB;AAAkC,EAAA,WAAW,EAAE,UAA/C;AAA2D,EAAA,GAAG,EAAE;AAAhE,CATc,EAUd;AAAE,EAAA,KAAK,EAAE,QAAT;AAAmB,EAAA,KAAK,EAAE,QAA1B;AAAoC,EAAA,WAAW,EAAE,UAAjD;AAA6D,EAAA,GAAG,EAAE;AAAlE,CAVc,CAAhB;AAYA,IAAM,eAAe,GAAG,CACtB;AAAE,EAAA,KAAK,EAAE,OAAT;AAAkB,EAAA,KAAK,EAAE,OAAzB;AAAkC,EAAA,WAAW,EAAE,MAA/C;AAAuD,EAAA,GAAG,EAAE;AAA5D,CADsB,EAEtB;AAAE,EAAA,KAAK,EAAE,MAAT;AAAiB,EAAA,KAAK,EAAE,MAAxB;AAAgC,EAAA,WAAW,EAAE,QAA7C;AAAuD,EAAA,GAAG,EAAE;AAA5D,CAFsB,EAGtB;AAAE,EAAA,KAAK,EAAE,QAAT;AAAmB,EAAA,KAAK,EAAE,QAA1B;AAAoC,EAAA,WAAW,EAAE,OAAjD;AAA0D,EAAA,GAAG,EAAE;AAA/D,CAHsB,EAItB;AAAE,EAAA,KAAK,EAAE,KAAT;AAAgB,EAAA,KAAK,EAAE,KAAvB;AAA8B,EAAA,WAAW,EAAE,OAA3C;AAAoD,EAAA,GAAG,EAAE;AAAzD,CAJsB,EAKtB;AAAE,EAAA,KAAK,EAAE,QAAT;AAAmB,EAAA,KAAK,EAAE,QAA1B;AAAoC,EAAA,WAAW,EAAE,SAAjD;AAA4D,EAAA,GAAG,EAAE;AAAjE,CALsB,EAMtB;AAAE,EAAA,KAAK,EAAE,OAAT;AAAkB,EAAA,KAAK,EAAE,OAAzB;AAAkC,EAAA,WAAW,EAAE,UAA/C;AAA2D,EAAA,GAAG,EAAE;AAAhE,CANsB,CAAxB;AASA,OAAO,IAAM,UAAU,GAAG,kBAAkB,CAAC,kBAAkB,CAAC,kBAAkB,CAAC,YAAA;AAAM,SACvF,KAAA,CAAA,aAAA,CAAC,YAAD,EAAa,IAAb,EACE,KAAA,CAAA,aAAA,CAAC,QAAD,EAAS;AAAC,IAAA,IAAI,EAAC;AAAN,GAAT,EACE,KAAA,CAAA,aAAA,CAAC,WAAD,EAAY;AACV,IAAA,EAAE,EAAE,IAAI,CAAC,IAAD,EAAO,QAAP,CADE;AAEV,IAAA,KAAK,EAAE,IAAI,CAAC,OAAD,EAAU,OAAV,CAFD;AAGV,IAAA,OAAO,EAAE,MAAM,CAAC,sBAAD,EAAyB,OAAzB,CAHL;AAIV,IAAA,QAAQ,EAAE,MAAM,CAAC,sBAAD,CAJN;AAKV,IAAA,KAAK,EAAE,MAAM,CAAC,QAAD,EAAW;AACtB,MAAA,QAAQ,EAAE,UADY;AAEtB,MAAA,GAAG,EAAE,KAFiB;AAGtB,MAAA,IAAI,EAAE;AAHgB,KAAX,CALH;AAUV,IAAA,SAAS,EAAE,QAAO,CAAC,WAAD,EAAc,KAAd,CAVR;AAWV,IAAA,UAAU,EAAE,QAAO,CAAC,YAAD,EAAe,KAAf,CAXT;AAYV,IAAA,QAAQ,EAAE,QAAO,CAAC,UAAD,EAAa,KAAb,CAZP;AAaV,IAAA,QAAQ,EAAE,MAAM,CAAC,UAAD,EAAa,eAAb,CAbN;AAcV,IAAA,cAAc,EAAE,QAAO,CAAC,gBAAD,EAAmB,KAAnB,CAdb;AAeV,IAAA,eAAe,EAAE,MAAM,CAAC,kBAAD,EAAqB,CAArB,CAfb;AAgBV,IAAA,cAAc,EAAE,KAAK,CAAC,iBAAD,EAAoB,CACvC,OADuC,EAEvC,OAFuC,EAGvC,aAHuC,EAIvC,KAJuC,CAApB;AAhBX,GAAZ,EAuBG,UAAC,EAAD,EAA+D;QAA5D,cAAc,GAAA,EAAA,CAAA,c;QAAE,UAAU,GAAA,EAAA,CAAA,U;QAAE,QAAQ,GAAA,EAAA,CAAA,Q;AAA6B,WACnE,KAAA,CAAA,aAAA,CAAA,KAAA,CAAA,QAAA,EAAA,IAAA,EACG,QADH,EAEE,KAAA,CAAA,aAAA,CAAC,MAAD,EAAO;AACL,MAAA,EAAE,EAAC,IADE;AAEL,MAAA,OAAO,EAAC,QAFH;AAGL,MAAA,OAAO,EAAE,mBAAA;AACP,QAAA,OAAO,CAAC,GAAR,CAAY,cAAZ;AACA,QAAA,QAAQ,CAAC,CAAC,UAAF,CAAR;AACA,QAAA,MAAM,CAAC,2BAAD,CAAN,CAAoC,UAApC;AACD;AAPI,KAAP,EASE,KAAA,CAAA,aAAA,CAAC,KAAK,CAAC,QAAP,EAAe,IAAf,EACE,KAAA,CAAA,aAAA,CAAA,MAAA,EAAA,IAAA,EAAA,kBAAA,CADF,EAEE,KAAA,CAAA,aAAA,CAAC,QAAD,EAAS;AAAC,MAAA,OAAO,EAAC,aAAT;AAAuB,MAAA,IAAI,EAAC;AAA5B,KAAT,CAFF,CATF,CAFF,CADmE;AA1BY,GAGnF,CADF,CADF,CADuF;AAgDxF,CAhDiF,EAgD/E;AAAC,EAAA,SAAS,EAAA,SAAV;AAAY,EAAA,YAAY,EAAA,YAAxB;AAAyB,EAAA,sBAAsB,EAAA,sBAA/C;AAAgD,EAAA,uBAAuB,EAAA,uBAAvE;AAAwE,EAAA,sBAAsB,EAAA,sBAA9F;AAA+F,EAAA,iBAAiB,EAAA,iBAAhH;AAAiH,EAAA,qBAAqB,EAAA;AAAtI,CAhD+E,CAAnB,EAgD8E;AAAC,EAAA,SAAS,EAAA,SAAV;AAAY,EAAA,YAAY,EAAA,YAAxB;AAAyB,EAAA,sBAAsB,EAAA,sBAA/C;AAAgD,EAAA,uBAAuB,EAAA,uBAAvE;AAAwE,EAAA,sBAAsB,EAAA,sBAA9F;AAA+F,EAAA,iBAAiB,EAAA,iBAAhH;AAAiH,EAAA,qBAAqB,EAAA;AAAtI,CAhD9E,CAAnB,EAgD2O;AAAC,EAAA,SAAS,EAAA,SAAV;AAAY,EAAA,YAAY,EAAA,YAAxB;AAAyB,EAAA,sBAAsB,EAAA,sBAA/C;AAAgD,EAAA,uBAAuB,EAAA,uBAAvE;AAAwE,EAAA,sBAAsB,EAAA,sBAA9F;AAA+F,EAAA,iBAAiB,EAAA,iBAAhH;AAAiH,EAAA,qBAAqB,EAAA;AAAtI,CAhD3O,CAArC","sourcesContent":["\n/* eslint-disable */\n// @ts-nocheck\n// @ts-ignore\nvar withSourceLoader = require('@storybook/source-loader/preview').withSource;\n// @ts-ignore\nvar addSourceDecorator = require(\"@storybook/source-loader/preview\").addSource;\n// @ts-ignore\nvar __SOURCE_PREFIX__ = \"/Users/farhanansari/Desktop/CODE/PrxProject/untitled folder/reactStoryBook/src/components/molecules/MultiSelect/stories\";\n// @ts-ignore\nvar __STORY__ = \"\\n\\n// @ts-nocheck\\n// @ts-ignore\\nvar withSourceLoader = require('@storybook/source-loader/preview').withSource;\\n// @ts-ignore\\nvar addSourceDecorator = require(\\\"@storybook/source-loader/preview\\\").addSource;\\n// @ts-ignore\\nvar __SOURCE_PREFIX__ = \\\"/Users/farhanansari/Desktop/CODE/PrxProject/untitled folder/reactStoryBook/src/components/molecules/MultiSelect/stories\\\";\\n// @ts-ignore\\nvar __STORY__ = \\\"\\\\n\\\\n// @ts-nocheck\\\\n// @ts-ignore\\\\nvar withSourceLoader = require('@storybook/source-loader/preview').withSource;\\\\n// @ts-ignore\\\\nvar addSourceDecorator = require(\\\\\\\"@storybook/source-loader/preview\\\\\\\").addSource;\\\\n// @ts-ignore\\\\nvar __SOURCE_PREFIX__ = \\\\\\\"/Users/farhanansari/Desktop/CODE/PrxProject/untitled folder/reactStoryBook/src/components/molecules/MultiSelect/stories\\\\\\\";\\\\n// @ts-ignore\\\\nvar __STORY__ = \\\\\\\"import React from 'react'\\\\\\\\nimport MultiSelect from '../index'\\\\\\\\nimport { path } from '../..'\\\\\\\\nimport ThemeWrapper from '../../../../utilities/components/ThemeWrapper'\\\\\\\\n\\\\\\\\nimport {\\\\\\\\n  text,\\\\\\\\n  object,\\\\\\\\n  withKnobs,\\\\\\\\n  boolean,\\\\\\\\n  number,\\\\\\\\n  array\\\\\\\\n} from '@storybook/addon-knobs'\\\\\\\\nimport { action } from '@storybook/addon-actions'\\\\\\\\nimport Button from '../../../atoms/Button'\\\\\\\\nimport Position from '../../Position'\\\\\\\\nimport FontIcon from '../../../atoms/FontIcon'\\\\\\\\nimport { tMultiSelectChildren } from '../interfaces'\\\\\\\\n\\\\\\\\nexport default {\\\\\\\\n  title: `${path}/MultiSelect`,\\\\\\\\n  component: MultiSelect,\\\\\\\\n  decorators: [withKnobs],\\\\\\\\n  parameters: {\\\\\\\\n    props: {\\\\\\\\n      propTablesExclude: [Button, ThemeWrapper, Position, FontIcon]\\\\\\\\n    }\\\\\\\\n  }\\\\\\\\n}\\\\\\\\n\\\\\\\\nconst options = [\\\\\\\\n  { value: 'ocean', label: 'Ocean', phoneNumber: '1234', age: '10' },\\\\\\\\n  { value: 'blue', label: 'Blue', phoneNumber: '455556', age: '12' },\\\\\\\\n  { value: 'purple', label: 'Purple', phoneNumber: '67778', age: '13' },\\\\\\\\n  { value: 'red', label: 'Red', phoneNumber: '89990', age: '14' },\\\\\\\\n  { value: 'orange', label: 'Orange', phoneNumber: '001323', age: '15' },\\\\\\\\n  { value: 'yellow', label: 'Yellow', phoneNumber: '99243452', age: '16' },\\\\\\\\n  { value: 'green', label: 'Green', phoneNumber: '120009', age: '18' },\\\\\\\\n  { value: 'forest', label: 'Forest', phoneNumber: '0000000', age: '20' },\\\\\\\\n  { value: 'slate', label: 'Slate', phoneNumber: '11111111', age: '30' },\\\\\\\\n  { value: 'silver', label: 'Silver', phoneNumber: '22222222', age: '40' }\\\\\\\\n]\\\\\\\\nconst selectedOptions = [\\\\\\\\n  { value: 'ocean', label: 'Ocean', phoneNumber: '1234', age: '10' },\\\\\\\\n  { value: 'blue', label: 'Blue', phoneNumber: '455556', age: '12' },\\\\\\\\n  { value: 'purple', label: 'Purple', phoneNumber: '67778', age: '13' },\\\\\\\\n  { value: 'red', label: 'Red', phoneNumber: '89990', age: '14' },\\\\\\\\n  { value: 'forest', label: 'Forest', phoneNumber: '0000000', age: '20' },\\\\\\\\n  { value: 'slate', label: 'Slate', phoneNumber: '11111111', age: '30' }\\\\\\\\n]\\\\\\\\n\\\\\\\\nexport const withButton = () => (\\\\\\\\n  <ThemeWrapper>\\\\\\\\n    <Position type='relative'>\\\\\\\\n      <MultiSelect\\\\\\\\n        id={text('id', 'Colors')}\\\\\\\\n        width={text('width', '300px')}\\\\\\\\n        options={object('Multi Select Options', options)}\\\\\\\\n        onChange={action('Multi Select changed')}\\\\\\\\n        style={object('styles', {\\\\\\\\n          position: 'absolute',\\\\\\\\n          top: '0px',\\\\\\\\n          left: '145px'\\\\\\\\n        })}\\\\\\\\n        isLoading={boolean('isLoading', false)}\\\\\\\\n        isNoOption={boolean('isNoOption', false)}\\\\\\\\n        menuOpen={boolean('menuOpen', false)}\\\\\\\\n        selected={object('Selected', selectedOptions)}\\\\\\\\n        allowSelectAll={boolean('allowSelectAll', false)}\\\\\\\\n        maximumSelected={number('maximum Selected', 4)}\\\\\\\\n        searchableKeys={array('Searchable Keys', [\\\\\\\\n          'value',\\\\\\\\n          'label',\\\\\\\\n          'phoneNumber',\\\\\\\\n          'age'\\\\\\\\n        ])}\\\\\\\\n      >\\\\\\\\n        {({ optionSelected, isMenuOpen, openMenu }: tMultiSelectChildren) => (\\\\\\\\n          <>\\\\\\\\n            {openMenu}\\\\\\\\n            <Button\\\\\\\\n              id='id'\\\\\\\\n              variant='button'\\\\\\\\n              onClick={() => {\\\\\\\\n                console.log(optionSelected)\\\\\\\\n                openMenu(!isMenuOpen)\\\\\\\\n                action('MultiSelect opened/closed')(isMenuOpen)\\\\\\\\n              }}\\\\\\\\n            >\\\\\\\\n              <React.Fragment>\\\\\\\\n                <span>Open MultiSelect</span>\\\\\\\\n                <FontIcon variant='angle-right' size='sm' />\\\\\\\\n              </React.Fragment>\\\\\\\\n            </Button>\\\\\\\\n          </>\\\\\\\\n        )}\\\\\\\\n      </MultiSelect>\\\\\\\\n    </Position>\\\\\\\\n  </ThemeWrapper>\\\\\\\\n)\\\\\\\\n\\\\\\\";\\\\n// @ts-ignore\\\\nvar __ADDS_MAP__ = {};\\\\n// @ts-ignore\\\\nvar __MAIN_FILE_LOCATION__ = \\\\\\\"/withButton.stories.tsx\\\\\\\";\\\\n// @ts-ignore\\\\nvar __MODULE_DEPENDENCIES__ = [];\\\\n// @ts-ignore\\\\nvar __LOCAL_DEPENDENCIES__ = {};\\\\n// @ts-ignore\\\\nvar __IDS_TO_FRAMEWORKS__ = {};\\\\n        \\\\nimport React from 'react'\\\\nimport MultiSelect from '../index'\\\\nimport { path } from '../..'\\\\nimport ThemeWrapper from '../../../../utilities/components/ThemeWrapper'\\\\n\\\\nimport {\\\\n  text,\\\\n  object,\\\\n  withKnobs,\\\\n  boolean,\\\\n  number,\\\\n  array\\\\n} from '@storybook/addon-knobs'\\\\nimport { action } from '@storybook/addon-actions'\\\\nimport Button from '../../../atoms/Button'\\\\nimport Position from '../../Position'\\\\nimport FontIcon from '../../../atoms/FontIcon'\\\\nimport { tMultiSelectChildren } from '../interfaces'\\\\n\\\\nexport default {\\\\n  title: `${path}/MultiSelect`,\\\\n  component: MultiSelect,\\\\n  decorators: [withKnobs],\\\\n  parameters: {\\\\\\\"storySource\\\\\\\":{\\\\\\\"source\\\\\\\":\\\\\\\"import React from 'react'\\\\\\\\nimport MultiSelect from '../index'\\\\\\\\nimport { path } from '../..'\\\\\\\\nimport ThemeWrapper from '../../../../utilities/components/ThemeWrapper'\\\\\\\\n\\\\\\\\nimport {\\\\\\\\n  text,\\\\\\\\n  object,\\\\\\\\n  withKnobs,\\\\\\\\n  boolean,\\\\\\\\n  number,\\\\\\\\n  array\\\\\\\\n} from '@storybook/addon-knobs'\\\\\\\\nimport { action } from '@storybook/addon-actions'\\\\\\\\nimport Button from '../../../atoms/Button'\\\\\\\\nimport Position from '../../Position'\\\\\\\\nimport FontIcon from '../../../atoms/FontIcon'\\\\\\\\nimport { tMultiSelectChildren } from '../interfaces'\\\\\\\\n\\\\\\\\nexport default {\\\\\\\\n  title: `${path}/MultiSelect`,\\\\\\\\n  component: MultiSelect,\\\\\\\\n  decorators: [withKnobs],\\\\\\\\n  parameters: {\\\\\\\\n    props: {\\\\\\\\n      propTablesExclude: [Button, ThemeWrapper, Position, FontIcon]\\\\\\\\n    }\\\\\\\\n  }\\\\\\\\n}\\\\\\\\n\\\\\\\\nconst options = [\\\\\\\\n  { value: 'ocean', label: 'Ocean', phoneNumber: '1234', age: '10' },\\\\\\\\n  { value: 'blue', label: 'Blue', phoneNumber: '455556', age: '12' },\\\\\\\\n  { value: 'purple', label: 'Purple', phoneNumber: '67778', age: '13' },\\\\\\\\n  { value: 'red', label: 'Red', phoneNumber: '89990', age: '14' },\\\\\\\\n  { value: 'orange', label: 'Orange', phoneNumber: '001323', age: '15' },\\\\\\\\n  { value: 'yellow', label: 'Yellow', phoneNumber: '99243452', age: '16' },\\\\\\\\n  { value: 'green', label: 'Green', phoneNumber: '120009', age: '18' },\\\\\\\\n  { value: 'forest', label: 'Forest', phoneNumber: '0000000', age: '20' },\\\\\\\\n  { value: 'slate', label: 'Slate', phoneNumber: '11111111', age: '30' },\\\\\\\\n  { value: 'silver', label: 'Silver', phoneNumber: '22222222', age: '40' }\\\\\\\\n]\\\\\\\\nconst selectedOptions = [\\\\\\\\n  { value: 'ocean', label: 'Ocean', phoneNumber: '1234', age: '10' },\\\\\\\\n  { value: 'blue', label: 'Blue', phoneNumber: '455556', age: '12' },\\\\\\\\n  { value: 'purple', label: 'Purple', phoneNumber: '67778', age: '13' },\\\\\\\\n  { value: 'red', label: 'Red', phoneNumber: '89990', age: '14' },\\\\\\\\n  { value: 'forest', label: 'Forest', phoneNumber: '0000000', age: '20' },\\\\\\\\n  { value: 'slate', label: 'Slate', phoneNumber: '11111111', age: '30' }\\\\\\\\n]\\\\\\\\n\\\\\\\\nexport const withButton = () => (\\\\\\\\n  <ThemeWrapper>\\\\\\\\n    <Position type='relative'>\\\\\\\\n      <MultiSelect\\\\\\\\n        id={text('id', 'Colors')}\\\\\\\\n        width={text('width', '300px')}\\\\\\\\n        options={object('Multi Select Options', options)}\\\\\\\\n        onChange={action('Multi Select changed')}\\\\\\\\n        style={object('styles', {\\\\\\\\n          position: 'absolute',\\\\\\\\n          top: '0px',\\\\\\\\n          left: '145px'\\\\\\\\n        })}\\\\\\\\n        isLoading={boolean('isLoading', false)}\\\\\\\\n        isNoOption={boolean('isNoOption', false)}\\\\\\\\n        menuOpen={boolean('menuOpen', false)}\\\\\\\\n        selected={object('Selected', selectedOptions)}\\\\\\\\n        allowSelectAll={boolean('allowSelectAll', false)}\\\\\\\\n        maximumSelected={number('maximum Selected', 4)}\\\\\\\\n        searchableKeys={array('Searchable Keys', [\\\\\\\\n          'value',\\\\\\\\n          'label',\\\\\\\\n          'phoneNumber',\\\\\\\\n          'age'\\\\\\\\n        ])}\\\\\\\\n      >\\\\\\\\n        {({ optionSelected, isMenuOpen, openMenu }: tMultiSelectChildren) => (\\\\\\\\n          <>\\\\\\\\n            {openMenu}\\\\\\\\n            <Button\\\\\\\\n              id='id'\\\\\\\\n              variant='button'\\\\\\\\n              onClick={() => {\\\\\\\\n                console.log(optionSelected)\\\\\\\\n                openMenu(!isMenuOpen)\\\\\\\\n                action('MultiSelect opened/closed')(isMenuOpen)\\\\\\\\n              }}\\\\\\\\n            >\\\\\\\\n              <React.Fragment>\\\\\\\\n                <span>Open MultiSelect</span>\\\\\\\\n                <FontIcon variant='angle-right' size='sm' />\\\\\\\\n              </React.Fragment>\\\\\\\\n            </Button>\\\\\\\\n          </>\\\\\\\\n        )}\\\\\\\\n      </MultiSelect>\\\\\\\\n    </Position>\\\\\\\\n  </ThemeWrapper>\\\\\\\\n)\\\\\\\\n\\\\\\\",\\\\\\\"locationsMap\\\\\\\":{}},\\\\n    props: {\\\\n      propTablesExclude: [Button, ThemeWrapper, Position, FontIcon]\\\\n    }\\\\n  },}\\\\n\\\\nconst options = [\\\\n  { value: 'ocean', label: 'Ocean', phoneNumber: '1234', age: '10' },\\\\n  { value: 'blue', label: 'Blue', phoneNumber: '455556', age: '12' },\\\\n  { value: 'purple', label: 'Purple', phoneNumber: '67778', age: '13' },\\\\n  { value: 'red', label: 'Red', phoneNumber: '89990', age: '14' },\\\\n  { value: 'orange', label: 'Orange', phoneNumber: '001323', age: '15' },\\\\n  { value: 'yellow', label: 'Yellow', phoneNumber: '99243452', age: '16' },\\\\n  { value: 'green', label: 'Green', phoneNumber: '120009', age: '18' },\\\\n  { value: 'forest', label: 'Forest', phoneNumber: '0000000', age: '20' },\\\\n  { value: 'slate', label: 'Slate', phoneNumber: '11111111', age: '30' },\\\\n  { value: 'silver', label: 'Silver', phoneNumber: '22222222', age: '40' }\\\\n]\\\\nconst selectedOptions = [\\\\n  { value: 'ocean', label: 'Ocean', phoneNumber: '1234', age: '10' },\\\\n  { value: 'blue', label: 'Blue', phoneNumber: '455556', age: '12' },\\\\n  { value: 'purple', label: 'Purple', phoneNumber: '67778', age: '13' },\\\\n  { value: 'red', label: 'Red', phoneNumber: '89990', age: '14' },\\\\n  { value: 'forest', label: 'Forest', phoneNumber: '0000000', age: '20' },\\\\n  { value: 'slate', label: 'Slate', phoneNumber: '11111111', age: '30' }\\\\n]\\\\n\\\\nexport const withButton = addSourceDecorator(() => (\\\\n  <ThemeWrapper>\\\\n    <Position type='relative'>\\\\n      <MultiSelect\\\\n        id={text('id', 'Colors')}\\\\n        width={text('width', '300px')}\\\\n        options={object('Multi Select Options', options)}\\\\n        onChange={action('Multi Select changed')}\\\\n        style={object('styles', {\\\\n          position: 'absolute',\\\\n          top: '0px',\\\\n          left: '145px'\\\\n        })}\\\\n        isLoading={boolean('isLoading', false)}\\\\n        isNoOption={boolean('isNoOption', false)}\\\\n        menuOpen={boolean('menuOpen', false)}\\\\n        selected={object('Selected', selectedOptions)}\\\\n        allowSelectAll={boolean('allowSelectAll', false)}\\\\n        maximumSelected={number('maximum Selected', 4)}\\\\n        searchableKeys={array('Searchable Keys', [\\\\n          'value',\\\\n          'label',\\\\n          'phoneNumber',\\\\n          'age'\\\\n        ])}\\\\n      >\\\\n        {({ optionSelected, isMenuOpen, openMenu }: tMultiSelectChildren) => (\\\\n          <>\\\\n            {openMenu}\\\\n            <Button\\\\n              id='id'\\\\n              variant='button'\\\\n              onClick={() => {\\\\n                console.log(optionSelected)\\\\n                openMenu(!isMenuOpen)\\\\n                action('MultiSelect opened/closed')(isMenuOpen)\\\\n              }}\\\\n            >\\\\n              <React.Fragment>\\\\n                <span>Open MultiSelect</span>\\\\n                <FontIcon variant='angle-right' size='sm' />\\\\n              </React.Fragment>\\\\n            </Button>\\\\n          </>\\\\n        )}\\\\n      </MultiSelect>\\\\n    </Position>\\\\n  </ThemeWrapper>\\\\n), {__STORY__, __ADDS_MAP__,__MAIN_FILE_LOCATION__,__MODULE_DEPENDENCIES__,__LOCAL_DEPENDENCIES__,__SOURCE_PREFIX__,__IDS_TO_FRAMEWORKS__});\\\";\\n// @ts-ignore\\nvar __ADDS_MAP__ = {};\\n// @ts-ignore\\nvar __MAIN_FILE_LOCATION__ = \\\"/withButton.stories.tsx\\\";\\n// @ts-ignore\\nvar __MODULE_DEPENDENCIES__ = [];\\n// @ts-ignore\\nvar __LOCAL_DEPENDENCIES__ = {};\\n// @ts-ignore\\nvar __IDS_TO_FRAMEWORKS__ = {};\\n        \\n\\n\\n// @ts-nocheck\\n// @ts-ignore\\nvar withSourceLoader = require('@storybook/source-loader/preview').withSource;\\n// @ts-ignore\\nvar addSourceDecorator = require(\\\"@storybook/source-loader/preview\\\").addSource;\\n// @ts-ignore\\nvar __SOURCE_PREFIX__ = \\\"/Users/farhanansari/Desktop/CODE/PrxProject/untitled folder/reactStoryBook/src/components/molecules/MultiSelect/stories\\\";\\n// @ts-ignore\\nvar __STORY__ = \\\"import React from 'react'\\\\nimport MultiSelect from '../index'\\\\nimport { path } from '../..'\\\\nimport ThemeWrapper from '../../../../utilities/components/ThemeWrapper'\\\\n\\\\nimport {\\\\n  text,\\\\n  object,\\\\n  withKnobs,\\\\n  boolean,\\\\n  number,\\\\n  array\\\\n} from '@storybook/addon-knobs'\\\\nimport { action } from '@storybook/addon-actions'\\\\nimport Button from '../../../atoms/Button'\\\\nimport Position from '../../Position'\\\\nimport FontIcon from '../../../atoms/FontIcon'\\\\nimport { tMultiSelectChildren } from '../interfaces'\\\\n\\\\nexport default {\\\\n  title: `${path}/MultiSelect`,\\\\n  component: MultiSelect,\\\\n  decorators: [withKnobs],\\\\n  parameters: {\\\\n    props: {\\\\n      propTablesExclude: [Button, ThemeWrapper, Position, FontIcon]\\\\n    }\\\\n  }\\\\n}\\\\n\\\\nconst options = [\\\\n  { value: 'ocean', label: 'Ocean', phoneNumber: '1234', age: '10' },\\\\n  { value: 'blue', label: 'Blue', phoneNumber: '455556', age: '12' },\\\\n  { value: 'purple', label: 'Purple', phoneNumber: '67778', age: '13' },\\\\n  { value: 'red', label: 'Red', phoneNumber: '89990', age: '14' },\\\\n  { value: 'orange', label: 'Orange', phoneNumber: '001323', age: '15' },\\\\n  { value: 'yellow', label: 'Yellow', phoneNumber: '99243452', age: '16' },\\\\n  { value: 'green', label: 'Green', phoneNumber: '120009', age: '18' },\\\\n  { value: 'forest', label: 'Forest', phoneNumber: '0000000', age: '20' },\\\\n  { value: 'slate', label: 'Slate', phoneNumber: '11111111', age: '30' },\\\\n  { value: 'silver', label: 'Silver', phoneNumber: '22222222', age: '40' }\\\\n]\\\\nconst selectedOptions = [\\\\n  { value: 'ocean', label: 'Ocean', phoneNumber: '1234', age: '10' },\\\\n  { value: 'blue', label: 'Blue', phoneNumber: '455556', age: '12' },\\\\n  { value: 'purple', label: 'Purple', phoneNumber: '67778', age: '13' },\\\\n  { value: 'red', label: 'Red', phoneNumber: '89990', age: '14' },\\\\n  { value: 'forest', label: 'Forest', phoneNumber: '0000000', age: '20' },\\\\n  { value: 'slate', label: 'Slate', phoneNumber: '11111111', age: '30' }\\\\n]\\\\n\\\\nexport const withButton = () => (\\\\n  <ThemeWrapper>\\\\n    <Position type='relative'>\\\\n      <MultiSelect\\\\n        id={text('id', 'Colors')}\\\\n        width={text('width', '300px')}\\\\n        options={object('Multi Select Options', options)}\\\\n        onChange={action('Multi Select changed')}\\\\n        style={object('styles', {\\\\n          position: 'absolute',\\\\n          top: '0px',\\\\n          left: '145px'\\\\n        })}\\\\n        isLoading={boolean('isLoading', false)}\\\\n        isNoOption={boolean('isNoOption', false)}\\\\n        menuOpen={boolean('menuOpen', false)}\\\\n        selected={object('Selected', selectedOptions)}\\\\n        allowSelectAll={boolean('allowSelectAll', false)}\\\\n        maximumSelected={number('maximum Selected', 4)}\\\\n        searchableKeys={array('Searchable Keys', [\\\\n          'value',\\\\n          'label',\\\\n          'phoneNumber',\\\\n          'age'\\\\n        ])}\\\\n      >\\\\n        {({ optionSelected, isMenuOpen, openMenu }: tMultiSelectChildren) => (\\\\n          <>\\\\n            {openMenu}\\\\n            <Button\\\\n              id='id'\\\\n              variant='button'\\\\n              onClick={() => {\\\\n                console.log(optionSelected)\\\\n                openMenu(!isMenuOpen)\\\\n                action('MultiSelect opened/closed')(isMenuOpen)\\\\n              }}\\\\n            >\\\\n              <React.Fragment>\\\\n                <span>Open MultiSelect</span>\\\\n                <FontIcon variant='angle-right' size='sm' />\\\\n              </React.Fragment>\\\\n            </Button>\\\\n          </>\\\\n        )}\\\\n      </MultiSelect>\\\\n    </Position>\\\\n  </ThemeWrapper>\\\\n)\\\\n\\\";\\n// @ts-ignore\\nvar __ADDS_MAP__ = {};\\n// @ts-ignore\\nvar __MAIN_FILE_LOCATION__ = \\\"/withButton.stories.tsx\\\";\\n// @ts-ignore\\nvar __MODULE_DEPENDENCIES__ = [];\\n// @ts-ignore\\nvar __LOCAL_DEPENDENCIES__ = {};\\n// @ts-ignore\\nvar __IDS_TO_FRAMEWORKS__ = {};\\n        \\nimport React from 'react'\\nimport MultiSelect from '../index'\\nimport { path } from '../..'\\nimport ThemeWrapper from '../../../../utilities/components/ThemeWrapper'\\n\\nimport {\\n  text,\\n  object,\\n  withKnobs,\\n  boolean,\\n  number,\\n  array\\n} from '@storybook/addon-knobs'\\nimport { action } from '@storybook/addon-actions'\\nimport Button from '../../../atoms/Button'\\nimport Position from '../../Position'\\nimport FontIcon from '../../../atoms/FontIcon'\\nimport { tMultiSelectChildren } from '../interfaces'\\n\\nexport default {\\n  title: `${path}/MultiSelect`,\\n  component: MultiSelect,\\n  decorators: [withKnobs],\\n  parameters: {\\\"storySource\\\":{\\\"source\\\":\\\"\\\\n\\\\n// @ts-nocheck\\\\n// @ts-ignore\\\\nvar withSourceLoader = require('@storybook/source-loader/preview').withSource;\\\\n// @ts-ignore\\\\nvar addSourceDecorator = require(\\\\\\\"@storybook/source-loader/preview\\\\\\\").addSource;\\\\n// @ts-ignore\\\\nvar __SOURCE_PREFIX__ = \\\\\\\"/Users/farhanansari/Desktop/CODE/PrxProject/untitled folder/reactStoryBook/src/components/molecules/MultiSelect/stories\\\\\\\";\\\\n// @ts-ignore\\\\nvar __STORY__ = \\\\\\\"import React from 'react'\\\\\\\\nimport MultiSelect from '../index'\\\\\\\\nimport { path } from '../..'\\\\\\\\nimport ThemeWrapper from '../../../../utilities/components/ThemeWrapper'\\\\\\\\n\\\\\\\\nimport {\\\\\\\\n  text,\\\\\\\\n  object,\\\\\\\\n  withKnobs,\\\\\\\\n  boolean,\\\\\\\\n  number,\\\\\\\\n  array\\\\\\\\n} from '@storybook/addon-knobs'\\\\\\\\nimport { action } from '@storybook/addon-actions'\\\\\\\\nimport Button from '../../../atoms/Button'\\\\\\\\nimport Position from '../../Position'\\\\\\\\nimport FontIcon from '../../../atoms/FontIcon'\\\\\\\\nimport { tMultiSelectChildren } from '../interfaces'\\\\\\\\n\\\\\\\\nexport default {\\\\\\\\n  title: `${path}/MultiSelect`,\\\\\\\\n  component: MultiSelect,\\\\\\\\n  decorators: [withKnobs],\\\\\\\\n  parameters: {\\\\\\\\n    props: {\\\\\\\\n      propTablesExclude: [Button, ThemeWrapper, Position, FontIcon]\\\\\\\\n    }\\\\\\\\n  }\\\\\\\\n}\\\\\\\\n\\\\\\\\nconst options = [\\\\\\\\n  { value: 'ocean', label: 'Ocean', phoneNumber: '1234', age: '10' },\\\\\\\\n  { value: 'blue', label: 'Blue', phoneNumber: '455556', age: '12' },\\\\\\\\n  { value: 'purple', label: 'Purple', phoneNumber: '67778', age: '13' },\\\\\\\\n  { value: 'red', label: 'Red', phoneNumber: '89990', age: '14' },\\\\\\\\n  { value: 'orange', label: 'Orange', phoneNumber: '001323', age: '15' },\\\\\\\\n  { value: 'yellow', label: 'Yellow', phoneNumber: '99243452', age: '16' },\\\\\\\\n  { value: 'green', label: 'Green', phoneNumber: '120009', age: '18' },\\\\\\\\n  { value: 'forest', label: 'Forest', phoneNumber: '0000000', age: '20' },\\\\\\\\n  { value: 'slate', label: 'Slate', phoneNumber: '11111111', age: '30' },\\\\\\\\n  { value: 'silver', label: 'Silver', phoneNumber: '22222222', age: '40' }\\\\\\\\n]\\\\\\\\nconst selectedOptions = [\\\\\\\\n  { value: 'ocean', label: 'Ocean', phoneNumber: '1234', age: '10' },\\\\\\\\n  { value: 'blue', label: 'Blue', phoneNumber: '455556', age: '12' },\\\\\\\\n  { value: 'purple', label: 'Purple', phoneNumber: '67778', age: '13' },\\\\\\\\n  { value: 'red', label: 'Red', phoneNumber: '89990', age: '14' },\\\\\\\\n  { value: 'forest', label: 'Forest', phoneNumber: '0000000', age: '20' },\\\\\\\\n  { value: 'slate', label: 'Slate', phoneNumber: '11111111', age: '30' }\\\\\\\\n]\\\\\\\\n\\\\\\\\nexport const withButton = () => (\\\\\\\\n  <ThemeWrapper>\\\\\\\\n    <Position type='relative'>\\\\\\\\n      <MultiSelect\\\\\\\\n        id={text('id', 'Colors')}\\\\\\\\n        width={text('width', '300px')}\\\\\\\\n        options={object('Multi Select Options', options)}\\\\\\\\n        onChange={action('Multi Select changed')}\\\\\\\\n        style={object('styles', {\\\\\\\\n          position: 'absolute',\\\\\\\\n          top: '0px',\\\\\\\\n          left: '145px'\\\\\\\\n        })}\\\\\\\\n        isLoading={boolean('isLoading', false)}\\\\\\\\n        isNoOption={boolean('isNoOption', false)}\\\\\\\\n        menuOpen={boolean('menuOpen', false)}\\\\\\\\n        selected={object('Selected', selectedOptions)}\\\\\\\\n        allowSelectAll={boolean('allowSelectAll', false)}\\\\\\\\n        maximumSelected={number('maximum Selected', 4)}\\\\\\\\n        searchableKeys={array('Searchable Keys', [\\\\\\\\n          'value',\\\\\\\\n          'label',\\\\\\\\n          'phoneNumber',\\\\\\\\n          'age'\\\\\\\\n        ])}\\\\\\\\n      >\\\\\\\\n        {({ optionSelected, isMenuOpen, openMenu }: tMultiSelectChildren) => (\\\\\\\\n          <>\\\\\\\\n            {openMenu}\\\\\\\\n            <Button\\\\\\\\n              id='id'\\\\\\\\n              variant='button'\\\\\\\\n              onClick={() => {\\\\\\\\n                console.log(optionSelected)\\\\\\\\n                openMenu(!isMenuOpen)\\\\\\\\n                action('MultiSelect opened/closed')(isMenuOpen)\\\\\\\\n              }}\\\\\\\\n            >\\\\\\\\n              <React.Fragment>\\\\\\\\n                <span>Open MultiSelect</span>\\\\\\\\n                <FontIcon variant='angle-right' size='sm' />\\\\\\\\n              </React.Fragment>\\\\\\\\n            </Button>\\\\\\\\n          </>\\\\\\\\n        )}\\\\\\\\n      </MultiSelect>\\\\\\\\n    </Position>\\\\\\\\n  </ThemeWrapper>\\\\\\\\n)\\\\\\\\n\\\\\\\";\\\\n// @ts-ignore\\\\nvar __ADDS_MAP__ = {};\\\\n// @ts-ignore\\\\nvar __MAIN_FILE_LOCATION__ = \\\\\\\"/withButton.stories.tsx\\\\\\\";\\\\n// @ts-ignore\\\\nvar __MODULE_DEPENDENCIES__ = [];\\\\n// @ts-ignore\\\\nvar __LOCAL_DEPENDENCIES__ = {};\\\\n// @ts-ignore\\\\nvar __IDS_TO_FRAMEWORKS__ = {};\\\\n        \\\\nimport React from 'react'\\\\nimport MultiSelect from '../index'\\\\nimport { path } from '../..'\\\\nimport ThemeWrapper from '../../../../utilities/components/ThemeWrapper'\\\\n\\\\nimport {\\\\n  text,\\\\n  object,\\\\n  withKnobs,\\\\n  boolean,\\\\n  number,\\\\n  array\\\\n} from '@storybook/addon-knobs'\\\\nimport { action } from '@storybook/addon-actions'\\\\nimport Button from '../../../atoms/Button'\\\\nimport Position from '../../Position'\\\\nimport FontIcon from '../../../atoms/FontIcon'\\\\nimport { tMultiSelectChildren } from '../interfaces'\\\\n\\\\nexport default {\\\\n  title: `${path}/MultiSelect`,\\\\n  component: MultiSelect,\\\\n  decorators: [withKnobs],\\\\n  parameters: {\\\\\\\"storySource\\\\\\\":{\\\\\\\"source\\\\\\\":\\\\\\\"import React from 'react'\\\\\\\\nimport MultiSelect from '../index'\\\\\\\\nimport { path } from '../..'\\\\\\\\nimport ThemeWrapper from '../../../../utilities/components/ThemeWrapper'\\\\\\\\n\\\\\\\\nimport {\\\\\\\\n  text,\\\\\\\\n  object,\\\\\\\\n  withKnobs,\\\\\\\\n  boolean,\\\\\\\\n  number,\\\\\\\\n  array\\\\\\\\n} from '@storybook/addon-knobs'\\\\\\\\nimport { action } from '@storybook/addon-actions'\\\\\\\\nimport Button from '../../../atoms/Button'\\\\\\\\nimport Position from '../../Position'\\\\\\\\nimport FontIcon from '../../../atoms/FontIcon'\\\\\\\\nimport { tMultiSelectChildren } from '../interfaces'\\\\\\\\n\\\\\\\\nexport default {\\\\\\\\n  title: `${path}/MultiSelect`,\\\\\\\\n  component: MultiSelect,\\\\\\\\n  decorators: [withKnobs],\\\\\\\\n  parameters: {\\\\\\\\n    props: {\\\\\\\\n      propTablesExclude: [Button, ThemeWrapper, Position, FontIcon]\\\\\\\\n    }\\\\\\\\n  }\\\\\\\\n}\\\\\\\\n\\\\\\\\nconst options = [\\\\\\\\n  { value: 'ocean', label: 'Ocean', phoneNumber: '1234', age: '10' },\\\\\\\\n  { value: 'blue', label: 'Blue', phoneNumber: '455556', age: '12' },\\\\\\\\n  { value: 'purple', label: 'Purple', phoneNumber: '67778', age: '13' },\\\\\\\\n  { value: 'red', label: 'Red', phoneNumber: '89990', age: '14' },\\\\\\\\n  { value: 'orange', label: 'Orange', phoneNumber: '001323', age: '15' },\\\\\\\\n  { value: 'yellow', label: 'Yellow', phoneNumber: '99243452', age: '16' },\\\\\\\\n  { value: 'green', label: 'Green', phoneNumber: '120009', age: '18' },\\\\\\\\n  { value: 'forest', label: 'Forest', phoneNumber: '0000000', age: '20' },\\\\\\\\n  { value: 'slate', label: 'Slate', phoneNumber: '11111111', age: '30' },\\\\\\\\n  { value: 'silver', label: 'Silver', phoneNumber: '22222222', age: '40' }\\\\\\\\n]\\\\\\\\nconst selectedOptions = [\\\\\\\\n  { value: 'ocean', label: 'Ocean', phoneNumber: '1234', age: '10' },\\\\\\\\n  { value: 'blue', label: 'Blue', phoneNumber: '455556', age: '12' },\\\\\\\\n  { value: 'purple', label: 'Purple', phoneNumber: '67778', age: '13' },\\\\\\\\n  { value: 'red', label: 'Red', phoneNumber: '89990', age: '14' },\\\\\\\\n  { value: 'forest', label: 'Forest', phoneNumber: '0000000', age: '20' },\\\\\\\\n  { value: 'slate', label: 'Slate', phoneNumber: '11111111', age: '30' }\\\\\\\\n]\\\\\\\\n\\\\\\\\nexport const withButton = () => (\\\\\\\\n  <ThemeWrapper>\\\\\\\\n    <Position type='relative'>\\\\\\\\n      <MultiSelect\\\\\\\\n        id={text('id', 'Colors')}\\\\\\\\n        width={text('width', '300px')}\\\\\\\\n        options={object('Multi Select Options', options)}\\\\\\\\n        onChange={action('Multi Select changed')}\\\\\\\\n        style={object('styles', {\\\\\\\\n          position: 'absolute',\\\\\\\\n          top: '0px',\\\\\\\\n          left: '145px'\\\\\\\\n        })}\\\\\\\\n        isLoading={boolean('isLoading', false)}\\\\\\\\n        isNoOption={boolean('isNoOption', false)}\\\\\\\\n        menuOpen={boolean('menuOpen', false)}\\\\\\\\n        selected={object('Selected', selectedOptions)}\\\\\\\\n        allowSelectAll={boolean('allowSelectAll', false)}\\\\\\\\n        maximumSelected={number('maximum Selected', 4)}\\\\\\\\n        searchableKeys={array('Searchable Keys', [\\\\\\\\n          'value',\\\\\\\\n          'label',\\\\\\\\n          'phoneNumber',\\\\\\\\n          'age'\\\\\\\\n        ])}\\\\\\\\n      >\\\\\\\\n        {({ optionSelected, isMenuOpen, openMenu }: tMultiSelectChildren) => (\\\\\\\\n          <>\\\\\\\\n            {openMenu}\\\\\\\\n            <Button\\\\\\\\n              id='id'\\\\\\\\n              variant='button'\\\\\\\\n              onClick={() => {\\\\\\\\n                console.log(optionSelected)\\\\\\\\n                openMenu(!isMenuOpen)\\\\\\\\n                action('MultiSelect opened/closed')(isMenuOpen)\\\\\\\\n              }}\\\\\\\\n            >\\\\\\\\n              <React.Fragment>\\\\\\\\n                <span>Open MultiSelect</span>\\\\\\\\n                <FontIcon variant='angle-right' size='sm' />\\\\\\\\n              </React.Fragment>\\\\\\\\n            </Button>\\\\\\\\n          </>\\\\\\\\n        )}\\\\\\\\n      </MultiSelect>\\\\\\\\n    </Position>\\\\\\\\n  </ThemeWrapper>\\\\\\\\n)\\\\\\\\n\\\\\\\",\\\\\\\"locationsMap\\\\\\\":{}},\\\\n    props: {\\\\n      propTablesExclude: [Button, ThemeWrapper, Position, FontIcon]\\\\n    }\\\\n  },}\\\\n\\\\nconst options = [\\\\n  { value: 'ocean', label: 'Ocean', phoneNumber: '1234', age: '10' },\\\\n  { value: 'blue', label: 'Blue', phoneNumber: '455556', age: '12' },\\\\n  { value: 'purple', label: 'Purple', phoneNumber: '67778', age: '13' },\\\\n  { value: 'red', label: 'Red', phoneNumber: '89990', age: '14' },\\\\n  { value: 'orange', label: 'Orange', phoneNumber: '001323', age: '15' },\\\\n  { value: 'yellow', label: 'Yellow', phoneNumber: '99243452', age: '16' },\\\\n  { value: 'green', label: 'Green', phoneNumber: '120009', age: '18' },\\\\n  { value: 'forest', label: 'Forest', phoneNumber: '0000000', age: '20' },\\\\n  { value: 'slate', label: 'Slate', phoneNumber: '11111111', age: '30' },\\\\n  { value: 'silver', label: 'Silver', phoneNumber: '22222222', age: '40' }\\\\n]\\\\nconst selectedOptions = [\\\\n  { value: 'ocean', label: 'Ocean', phoneNumber: '1234', age: '10' },\\\\n  { value: 'blue', label: 'Blue', phoneNumber: '455556', age: '12' },\\\\n  { value: 'purple', label: 'Purple', phoneNumber: '67778', age: '13' },\\\\n  { value: 'red', label: 'Red', phoneNumber: '89990', age: '14' },\\\\n  { value: 'forest', label: 'Forest', phoneNumber: '0000000', age: '20' },\\\\n  { value: 'slate', label: 'Slate', phoneNumber: '11111111', age: '30' }\\\\n]\\\\n\\\\nexport const withButton = addSourceDecorator(() => (\\\\n  <ThemeWrapper>\\\\n    <Position type='relative'>\\\\n      <MultiSelect\\\\n        id={text('id', 'Colors')}\\\\n        width={text('width', '300px')}\\\\n        options={object('Multi Select Options', options)}\\\\n        onChange={action('Multi Select changed')}\\\\n        style={object('styles', {\\\\n          position: 'absolute',\\\\n          top: '0px',\\\\n          left: '145px'\\\\n        })}\\\\n        isLoading={boolean('isLoading', false)}\\\\n        isNoOption={boolean('isNoOption', false)}\\\\n        menuOpen={boolean('menuOpen', false)}\\\\n        selected={object('Selected', selectedOptions)}\\\\n        allowSelectAll={boolean('allowSelectAll', false)}\\\\n        maximumSelected={number('maximum Selected', 4)}\\\\n        searchableKeys={array('Searchable Keys', [\\\\n          'value',\\\\n          'label',\\\\n          'phoneNumber',\\\\n          'age'\\\\n        ])}\\\\n      >\\\\n        {({ optionSelected, isMenuOpen, openMenu }: tMultiSelectChildren) => (\\\\n          <>\\\\n            {openMenu}\\\\n            <Button\\\\n              id='id'\\\\n              variant='button'\\\\n              onClick={() => {\\\\n                console.log(optionSelected)\\\\n                openMenu(!isMenuOpen)\\\\n                action('MultiSelect opened/closed')(isMenuOpen)\\\\n              }}\\\\n            >\\\\n              <React.Fragment>\\\\n                <span>Open MultiSelect</span>\\\\n                <FontIcon variant='angle-right' size='sm' />\\\\n              </React.Fragment>\\\\n            </Button>\\\\n          </>\\\\n        )}\\\\n      </MultiSelect>\\\\n    </Position>\\\\n  </ThemeWrapper>\\\\n), {__STORY__, __ADDS_MAP__,__MAIN_FILE_LOCATION__,__MODULE_DEPENDENCIES__,__LOCAL_DEPENDENCIES__,__SOURCE_PREFIX__,__IDS_TO_FRAMEWORKS__});\\\",\\\"locationsMap\\\":{}},\\\"storySource\\\":{\\\"source\\\":\\\"import React from 'react'\\\\nimport MultiSelect from '../index'\\\\nimport { path } from '../..'\\\\nimport ThemeWrapper from '../../../../utilities/components/ThemeWrapper'\\\\n\\\\nimport {\\\\n  text,\\\\n  object,\\\\n  withKnobs,\\\\n  boolean,\\\\n  number,\\\\n  array\\\\n} from '@storybook/addon-knobs'\\\\nimport { action } from '@storybook/addon-actions'\\\\nimport Button from '../../../atoms/Button'\\\\nimport Position from '../../Position'\\\\nimport FontIcon from '../../../atoms/FontIcon'\\\\nimport { tMultiSelectChildren } from '../interfaces'\\\\n\\\\nexport default {\\\\n  title: `${path}/MultiSelect`,\\\\n  component: MultiSelect,\\\\n  decorators: [withKnobs],\\\\n  parameters: {\\\\n    props: {\\\\n      propTablesExclude: [Button, ThemeWrapper, Position, FontIcon]\\\\n    }\\\\n  }\\\\n}\\\\n\\\\nconst options = [\\\\n  { value: 'ocean', label: 'Ocean', phoneNumber: '1234', age: '10' },\\\\n  { value: 'blue', label: 'Blue', phoneNumber: '455556', age: '12' },\\\\n  { value: 'purple', label: 'Purple', phoneNumber: '67778', age: '13' },\\\\n  { value: 'red', label: 'Red', phoneNumber: '89990', age: '14' },\\\\n  { value: 'orange', label: 'Orange', phoneNumber: '001323', age: '15' },\\\\n  { value: 'yellow', label: 'Yellow', phoneNumber: '99243452', age: '16' },\\\\n  { value: 'green', label: 'Green', phoneNumber: '120009', age: '18' },\\\\n  { value: 'forest', label: 'Forest', phoneNumber: '0000000', age: '20' },\\\\n  { value: 'slate', label: 'Slate', phoneNumber: '11111111', age: '30' },\\\\n  { value: 'silver', label: 'Silver', phoneNumber: '22222222', age: '40' }\\\\n]\\\\nconst selectedOptions = [\\\\n  { value: 'ocean', label: 'Ocean', phoneNumber: '1234', age: '10' },\\\\n  { value: 'blue', label: 'Blue', phoneNumber: '455556', age: '12' },\\\\n  { value: 'purple', label: 'Purple', phoneNumber: '67778', age: '13' },\\\\n  { value: 'red', label: 'Red', phoneNumber: '89990', age: '14' },\\\\n  { value: 'forest', label: 'Forest', phoneNumber: '0000000', age: '20' },\\\\n  { value: 'slate', label: 'Slate', phoneNumber: '11111111', age: '30' }\\\\n]\\\\n\\\\nexport const withButton = () => (\\\\n  <ThemeWrapper>\\\\n    <Position type='relative'>\\\\n      <MultiSelect\\\\n        id={text('id', 'Colors')}\\\\n        width={text('width', '300px')}\\\\n        options={object('Multi Select Options', options)}\\\\n        onChange={action('Multi Select changed')}\\\\n        style={object('styles', {\\\\n          position: 'absolute',\\\\n          top: '0px',\\\\n          left: '145px'\\\\n        })}\\\\n        isLoading={boolean('isLoading', false)}\\\\n        isNoOption={boolean('isNoOption', false)}\\\\n        menuOpen={boolean('menuOpen', false)}\\\\n        selected={object('Selected', selectedOptions)}\\\\n        allowSelectAll={boolean('allowSelectAll', false)}\\\\n        maximumSelected={number('maximum Selected', 4)}\\\\n        searchableKeys={array('Searchable Keys', [\\\\n          'value',\\\\n          'label',\\\\n          'phoneNumber',\\\\n          'age'\\\\n        ])}\\\\n      >\\\\n        {({ optionSelected, isMenuOpen, openMenu }: tMultiSelectChildren) => (\\\\n          <>\\\\n            {openMenu}\\\\n            <Button\\\\n              id='id'\\\\n              variant='button'\\\\n              onClick={() => {\\\\n                console.log(optionSelected)\\\\n                openMenu(!isMenuOpen)\\\\n                action('MultiSelect opened/closed')(isMenuOpen)\\\\n              }}\\\\n            >\\\\n              <React.Fragment>\\\\n                <span>Open MultiSelect</span>\\\\n                <FontIcon variant='angle-right' size='sm' />\\\\n              </React.Fragment>\\\\n            </Button>\\\\n          </>\\\\n        )}\\\\n      </MultiSelect>\\\\n    </Position>\\\\n  </ThemeWrapper>\\\\n)\\\\n\\\",\\\"locationsMap\\\":{}},\\n    props: {\\n      propTablesExclude: [Button, ThemeWrapper, Position, FontIcon]\\n    }\\n  },}\\n\\nconst options = [\\n  { value: 'ocean', label: 'Ocean', phoneNumber: '1234', age: '10' },\\n  { value: 'blue', label: 'Blue', phoneNumber: '455556', age: '12' },\\n  { value: 'purple', label: 'Purple', phoneNumber: '67778', age: '13' },\\n  { value: 'red', label: 'Red', phoneNumber: '89990', age: '14' },\\n  { value: 'orange', label: 'Orange', phoneNumber: '001323', age: '15' },\\n  { value: 'yellow', label: 'Yellow', phoneNumber: '99243452', age: '16' },\\n  { value: 'green', label: 'Green', phoneNumber: '120009', age: '18' },\\n  { value: 'forest', label: 'Forest', phoneNumber: '0000000', age: '20' },\\n  { value: 'slate', label: 'Slate', phoneNumber: '11111111', age: '30' },\\n  { value: 'silver', label: 'Silver', phoneNumber: '22222222', age: '40' }\\n]\\nconst selectedOptions = [\\n  { value: 'ocean', label: 'Ocean', phoneNumber: '1234', age: '10' },\\n  { value: 'blue', label: 'Blue', phoneNumber: '455556', age: '12' },\\n  { value: 'purple', label: 'Purple', phoneNumber: '67778', age: '13' },\\n  { value: 'red', label: 'Red', phoneNumber: '89990', age: '14' },\\n  { value: 'forest', label: 'Forest', phoneNumber: '0000000', age: '20' },\\n  { value: 'slate', label: 'Slate', phoneNumber: '11111111', age: '30' }\\n]\\n\\nexport const withButton = addSourceDecorator(addSourceDecorator(() => (\\n  <ThemeWrapper>\\n    <Position type='relative'>\\n      <MultiSelect\\n        id={text('id', 'Colors')}\\n        width={text('width', '300px')}\\n        options={object('Multi Select Options', options)}\\n        onChange={action('Multi Select changed')}\\n        style={object('styles', {\\n          position: 'absolute',\\n          top: '0px',\\n          left: '145px'\\n        })}\\n        isLoading={boolean('isLoading', false)}\\n        isNoOption={boolean('isNoOption', false)}\\n        menuOpen={boolean('menuOpen', false)}\\n        selected={object('Selected', selectedOptions)}\\n        allowSelectAll={boolean('allowSelectAll', false)}\\n        maximumSelected={number('maximum Selected', 4)}\\n        searchableKeys={array('Searchable Keys', [\\n          'value',\\n          'label',\\n          'phoneNumber',\\n          'age'\\n        ])}\\n      >\\n        {({ optionSelected, isMenuOpen, openMenu }: tMultiSelectChildren) => (\\n          <>\\n            {openMenu}\\n            <Button\\n              id='id'\\n              variant='button'\\n              onClick={() => {\\n                console.log(optionSelected)\\n                openMenu(!isMenuOpen)\\n                action('MultiSelect opened/closed')(isMenuOpen)\\n              }}\\n            >\\n              <React.Fragment>\\n                <span>Open MultiSelect</span>\\n                <FontIcon variant='angle-right' size='sm' />\\n              </React.Fragment>\\n            </Button>\\n          </>\\n        )}\\n      </MultiSelect>\\n    </Position>\\n  </ThemeWrapper>\\n), {__STORY__, __ADDS_MAP__,__MAIN_FILE_LOCATION__,__MODULE_DEPENDENCIES__,__LOCAL_DEPENDENCIES__,__SOURCE_PREFIX__,__IDS_TO_FRAMEWORKS__}), {__STORY__, __ADDS_MAP__,__MAIN_FILE_LOCATION__,__MODULE_DEPENDENCIES__,__LOCAL_DEPENDENCIES__,__SOURCE_PREFIX__,__IDS_TO_FRAMEWORKS__});\";\n// @ts-ignore\nvar __ADDS_MAP__ = {};\n// @ts-ignore\nvar __MAIN_FILE_LOCATION__ = \"/withButton.stories.tsx\";\n// @ts-ignore\nvar __MODULE_DEPENDENCIES__ = [];\n// @ts-ignore\nvar __LOCAL_DEPENDENCIES__ = {};\n// @ts-ignore\nvar __IDS_TO_FRAMEWORKS__ = {};\n        \n\n/* eslint-disable */\n// @ts-nocheck\n// @ts-ignore\nvar withSourceLoader = require('@storybook/source-loader/preview').withSource;\n// @ts-ignore\nvar addSourceDecorator = require(\"@storybook/source-loader/preview\").addSource;\n// @ts-ignore\nvar __SOURCE_PREFIX__ = \"/Users/farhanansari/Desktop/CODE/PrxProject/untitled folder/reactStoryBook/src/components/molecules/MultiSelect/stories\";\n// @ts-ignore\nvar __STORY__ = \"\\n\\n// @ts-nocheck\\n// @ts-ignore\\nvar withSourceLoader = require('@storybook/source-loader/preview').withSource;\\n// @ts-ignore\\nvar addSourceDecorator = require(\\\"@storybook/source-loader/preview\\\").addSource;\\n// @ts-ignore\\nvar __SOURCE_PREFIX__ = \\\"/Users/farhanansari/Desktop/CODE/PrxProject/untitled folder/reactStoryBook/src/components/molecules/MultiSelect/stories\\\";\\n// @ts-ignore\\nvar __STORY__ = \\\"import React from 'react'\\\\nimport MultiSelect from '../index'\\\\nimport { path } from '../..'\\\\nimport ThemeWrapper from '../../../../utilities/components/ThemeWrapper'\\\\n\\\\nimport {\\\\n  text,\\\\n  object,\\\\n  withKnobs,\\\\n  boolean,\\\\n  number,\\\\n  array\\\\n} from '@storybook/addon-knobs'\\\\nimport { action } from '@storybook/addon-actions'\\\\nimport Button from '../../../atoms/Button'\\\\nimport Position from '../../Position'\\\\nimport FontIcon from '../../../atoms/FontIcon'\\\\nimport { tMultiSelectChildren } from '../interfaces'\\\\n\\\\nexport default {\\\\n  title: `${path}/MultiSelect`,\\\\n  component: MultiSelect,\\\\n  decorators: [withKnobs],\\\\n  parameters: {\\\\n    props: {\\\\n      propTablesExclude: [Button, ThemeWrapper, Position, FontIcon]\\\\n    }\\\\n  }\\\\n}\\\\n\\\\nconst options = [\\\\n  { value: 'ocean', label: 'Ocean', phoneNumber: '1234', age: '10' },\\\\n  { value: 'blue', label: 'Blue', phoneNumber: '455556', age: '12' },\\\\n  { value: 'purple', label: 'Purple', phoneNumber: '67778', age: '13' },\\\\n  { value: 'red', label: 'Red', phoneNumber: '89990', age: '14' },\\\\n  { value: 'orange', label: 'Orange', phoneNumber: '001323', age: '15' },\\\\n  { value: 'yellow', label: 'Yellow', phoneNumber: '99243452', age: '16' },\\\\n  { value: 'green', label: 'Green', phoneNumber: '120009', age: '18' },\\\\n  { value: 'forest', label: 'Forest', phoneNumber: '0000000', age: '20' },\\\\n  { value: 'slate', label: 'Slate', phoneNumber: '11111111', age: '30' },\\\\n  { value: 'silver', label: 'Silver', phoneNumber: '22222222', age: '40' }\\\\n]\\\\nconst selectedOptions = [\\\\n  { value: 'ocean', label: 'Ocean', phoneNumber: '1234', age: '10' },\\\\n  { value: 'blue', label: 'Blue', phoneNumber: '455556', age: '12' },\\\\n  { value: 'purple', label: 'Purple', phoneNumber: '67778', age: '13' },\\\\n  { value: 'red', label: 'Red', phoneNumber: '89990', age: '14' },\\\\n  { value: 'forest', label: 'Forest', phoneNumber: '0000000', age: '20' },\\\\n  { value: 'slate', label: 'Slate', phoneNumber: '11111111', age: '30' }\\\\n]\\\\n\\\\nexport const withButton = () => (\\\\n  <ThemeWrapper>\\\\n    <Position type='relative'>\\\\n      <MultiSelect\\\\n        id={text('id', 'Colors')}\\\\n        width={text('width', '300px')}\\\\n        options={object('Multi Select Options', options)}\\\\n        onChange={action('Multi Select changed')}\\\\n        style={object('styles', {\\\\n          position: 'absolute',\\\\n          top: '0px',\\\\n          left: '145px'\\\\n        })}\\\\n        isLoading={boolean('isLoading', false)}\\\\n        isNoOption={boolean('isNoOption', false)}\\\\n        menuOpen={boolean('menuOpen', false)}\\\\n        selected={object('Selected', selectedOptions)}\\\\n        allowSelectAll={boolean('allowSelectAll', false)}\\\\n        maximumSelected={number('maximum Selected', 4)}\\\\n        searchableKeys={array('Searchable Keys', [\\\\n          'value',\\\\n          'label',\\\\n          'phoneNumber',\\\\n          'age'\\\\n        ])}\\\\n      >\\\\n        {({ optionSelected, isMenuOpen, openMenu }: tMultiSelectChildren) => (\\\\n          <>\\\\n            {openMenu}\\\\n            <Button\\\\n              id='id'\\\\n              variant='button'\\\\n              onClick={() => {\\\\n                console.log(optionSelected)\\\\n                openMenu(!isMenuOpen)\\\\n                action('MultiSelect opened/closed')(isMenuOpen)\\\\n              }}\\\\n            >\\\\n              <React.Fragment>\\\\n                <span>Open MultiSelect</span>\\\\n                <FontIcon variant='angle-right' size='sm' />\\\\n              </React.Fragment>\\\\n            </Button>\\\\n          </>\\\\n        )}\\\\n      </MultiSelect>\\\\n    </Position>\\\\n  </ThemeWrapper>\\\\n)\\\\n\\\";\\n// @ts-ignore\\nvar __ADDS_MAP__ = {};\\n// @ts-ignore\\nvar __MAIN_FILE_LOCATION__ = \\\"/withButton.stories.tsx\\\";\\n// @ts-ignore\\nvar __MODULE_DEPENDENCIES__ = [];\\n// @ts-ignore\\nvar __LOCAL_DEPENDENCIES__ = {};\\n// @ts-ignore\\nvar __IDS_TO_FRAMEWORKS__ = {};\\n        \\nimport React from 'react'\\nimport MultiSelect from '../index'\\nimport { path } from '../..'\\nimport ThemeWrapper from '../../../../utilities/components/ThemeWrapper'\\n\\nimport {\\n  text,\\n  object,\\n  withKnobs,\\n  boolean,\\n  number,\\n  array\\n} from '@storybook/addon-knobs'\\nimport { action } from '@storybook/addon-actions'\\nimport Button from '../../../atoms/Button'\\nimport Position from '../../Position'\\nimport FontIcon from '../../../atoms/FontIcon'\\nimport { tMultiSelectChildren } from '../interfaces'\\n\\nexport default {\\n  title: `${path}/MultiSelect`,\\n  component: MultiSelect,\\n  decorators: [withKnobs],\\n  parameters: {\\\"storySource\\\":{\\\"source\\\":\\\"import React from 'react'\\\\nimport MultiSelect from '../index'\\\\nimport { path } from '../..'\\\\nimport ThemeWrapper from '../../../../utilities/components/ThemeWrapper'\\\\n\\\\nimport {\\\\n  text,\\\\n  object,\\\\n  withKnobs,\\\\n  boolean,\\\\n  number,\\\\n  array\\\\n} from '@storybook/addon-knobs'\\\\nimport { action } from '@storybook/addon-actions'\\\\nimport Button from '../../../atoms/Button'\\\\nimport Position from '../../Position'\\\\nimport FontIcon from '../../../atoms/FontIcon'\\\\nimport { tMultiSelectChildren } from '../interfaces'\\\\n\\\\nexport default {\\\\n  title: `${path}/MultiSelect`,\\\\n  component: MultiSelect,\\\\n  decorators: [withKnobs],\\\\n  parameters: {\\\\n    props: {\\\\n      propTablesExclude: [Button, ThemeWrapper, Position, FontIcon]\\\\n    }\\\\n  }\\\\n}\\\\n\\\\nconst options = [\\\\n  { value: 'ocean', label: 'Ocean', phoneNumber: '1234', age: '10' },\\\\n  { value: 'blue', label: 'Blue', phoneNumber: '455556', age: '12' },\\\\n  { value: 'purple', label: 'Purple', phoneNumber: '67778', age: '13' },\\\\n  { value: 'red', label: 'Red', phoneNumber: '89990', age: '14' },\\\\n  { value: 'orange', label: 'Orange', phoneNumber: '001323', age: '15' },\\\\n  { value: 'yellow', label: 'Yellow', phoneNumber: '99243452', age: '16' },\\\\n  { value: 'green', label: 'Green', phoneNumber: '120009', age: '18' },\\\\n  { value: 'forest', label: 'Forest', phoneNumber: '0000000', age: '20' },\\\\n  { value: 'slate', label: 'Slate', phoneNumber: '11111111', age: '30' },\\\\n  { value: 'silver', label: 'Silver', phoneNumber: '22222222', age: '40' }\\\\n]\\\\nconst selectedOptions = [\\\\n  { value: 'ocean', label: 'Ocean', phoneNumber: '1234', age: '10' },\\\\n  { value: 'blue', label: 'Blue', phoneNumber: '455556', age: '12' },\\\\n  { value: 'purple', label: 'Purple', phoneNumber: '67778', age: '13' },\\\\n  { value: 'red', label: 'Red', phoneNumber: '89990', age: '14' },\\\\n  { value: 'forest', label: 'Forest', phoneNumber: '0000000', age: '20' },\\\\n  { value: 'slate', label: 'Slate', phoneNumber: '11111111', age: '30' }\\\\n]\\\\n\\\\nexport const withButton = () => (\\\\n  <ThemeWrapper>\\\\n    <Position type='relative'>\\\\n      <MultiSelect\\\\n        id={text('id', 'Colors')}\\\\n        width={text('width', '300px')}\\\\n        options={object('Multi Select Options', options)}\\\\n        onChange={action('Multi Select changed')}\\\\n        style={object('styles', {\\\\n          position: 'absolute',\\\\n          top: '0px',\\\\n          left: '145px'\\\\n        })}\\\\n        isLoading={boolean('isLoading', false)}\\\\n        isNoOption={boolean('isNoOption', false)}\\\\n        menuOpen={boolean('menuOpen', false)}\\\\n        selected={object('Selected', selectedOptions)}\\\\n        allowSelectAll={boolean('allowSelectAll', false)}\\\\n        maximumSelected={number('maximum Selected', 4)}\\\\n        searchableKeys={array('Searchable Keys', [\\\\n          'value',\\\\n          'label',\\\\n          'phoneNumber',\\\\n          'age'\\\\n        ])}\\\\n      >\\\\n        {({ optionSelected, isMenuOpen, openMenu }: tMultiSelectChildren) => (\\\\n          <>\\\\n            {openMenu}\\\\n            <Button\\\\n              id='id'\\\\n              variant='button'\\\\n              onClick={() => {\\\\n                console.log(optionSelected)\\\\n                openMenu(!isMenuOpen)\\\\n                action('MultiSelect opened/closed')(isMenuOpen)\\\\n              }}\\\\n            >\\\\n              <React.Fragment>\\\\n                <span>Open MultiSelect</span>\\\\n                <FontIcon variant='angle-right' size='sm' />\\\\n              </React.Fragment>\\\\n            </Button>\\\\n          </>\\\\n        )}\\\\n      </MultiSelect>\\\\n    </Position>\\\\n  </ThemeWrapper>\\\\n)\\\\n\\\",\\\"locationsMap\\\":{}},\\n    props: {\\n      propTablesExclude: [Button, ThemeWrapper, Position, FontIcon]\\n    }\\n  },}\\n\\nconst options = [\\n  { value: 'ocean', label: 'Ocean', phoneNumber: '1234', age: '10' },\\n  { value: 'blue', label: 'Blue', phoneNumber: '455556', age: '12' },\\n  { value: 'purple', label: 'Purple', phoneNumber: '67778', age: '13' },\\n  { value: 'red', label: 'Red', phoneNumber: '89990', age: '14' },\\n  { value: 'orange', label: 'Orange', phoneNumber: '001323', age: '15' },\\n  { value: 'yellow', label: 'Yellow', phoneNumber: '99243452', age: '16' },\\n  { value: 'green', label: 'Green', phoneNumber: '120009', age: '18' },\\n  { value: 'forest', label: 'Forest', phoneNumber: '0000000', age: '20' },\\n  { value: 'slate', label: 'Slate', phoneNumber: '11111111', age: '30' },\\n  { value: 'silver', label: 'Silver', phoneNumber: '22222222', age: '40' }\\n]\\nconst selectedOptions = [\\n  { value: 'ocean', label: 'Ocean', phoneNumber: '1234', age: '10' },\\n  { value: 'blue', label: 'Blue', phoneNumber: '455556', age: '12' },\\n  { value: 'purple', label: 'Purple', phoneNumber: '67778', age: '13' },\\n  { value: 'red', label: 'Red', phoneNumber: '89990', age: '14' },\\n  { value: 'forest', label: 'Forest', phoneNumber: '0000000', age: '20' },\\n  { value: 'slate', label: 'Slate', phoneNumber: '11111111', age: '30' }\\n]\\n\\nexport const withButton = addSourceDecorator(() => (\\n  <ThemeWrapper>\\n    <Position type='relative'>\\n      <MultiSelect\\n        id={text('id', 'Colors')}\\n        width={text('width', '300px')}\\n        options={object('Multi Select Options', options)}\\n        onChange={action('Multi Select changed')}\\n        style={object('styles', {\\n          position: 'absolute',\\n          top: '0px',\\n          left: '145px'\\n        })}\\n        isLoading={boolean('isLoading', false)}\\n        isNoOption={boolean('isNoOption', false)}\\n        menuOpen={boolean('menuOpen', false)}\\n        selected={object('Selected', selectedOptions)}\\n        allowSelectAll={boolean('allowSelectAll', false)}\\n        maximumSelected={number('maximum Selected', 4)}\\n        searchableKeys={array('Searchable Keys', [\\n          'value',\\n          'label',\\n          'phoneNumber',\\n          'age'\\n        ])}\\n      >\\n        {({ optionSelected, isMenuOpen, openMenu }: tMultiSelectChildren) => (\\n          <>\\n            {openMenu}\\n            <Button\\n              id='id'\\n              variant='button'\\n              onClick={() => {\\n                console.log(optionSelected)\\n                openMenu(!isMenuOpen)\\n                action('MultiSelect opened/closed')(isMenuOpen)\\n              }}\\n            >\\n              <React.Fragment>\\n                <span>Open MultiSelect</span>\\n                <FontIcon variant='angle-right' size='sm' />\\n              </React.Fragment>\\n            </Button>\\n          </>\\n        )}\\n      </MultiSelect>\\n    </Position>\\n  </ThemeWrapper>\\n), {__STORY__, __ADDS_MAP__,__MAIN_FILE_LOCATION__,__MODULE_DEPENDENCIES__,__LOCAL_DEPENDENCIES__,__SOURCE_PREFIX__,__IDS_TO_FRAMEWORKS__});\";\n// @ts-ignore\nvar __ADDS_MAP__ = {};\n// @ts-ignore\nvar __MAIN_FILE_LOCATION__ = \"/withButton.stories.tsx\";\n// @ts-ignore\nvar __MODULE_DEPENDENCIES__ = [];\n// @ts-ignore\nvar __LOCAL_DEPENDENCIES__ = {};\n// @ts-ignore\nvar __IDS_TO_FRAMEWORKS__ = {};\n        \n\n/* eslint-disable */\n// @ts-nocheck\n// @ts-ignore\nvar withSourceLoader = require('@storybook/source-loader/preview').withSource;\n// @ts-ignore\nvar addSourceDecorator = require(\"@storybook/source-loader/preview\").addSource;\n// @ts-ignore\nvar __SOURCE_PREFIX__ = \"/Users/farhanansari/Desktop/CODE/PrxProject/untitled folder/reactStoryBook/src/components/molecules/MultiSelect/stories\";\n// @ts-ignore\nvar __STORY__ = \"import React from 'react'\\nimport MultiSelect from '../index'\\nimport { path } from '../..'\\nimport ThemeWrapper from '../../../../utilities/components/ThemeWrapper'\\n\\nimport {\\n  text,\\n  object,\\n  withKnobs,\\n  boolean,\\n  number,\\n  array\\n} from '@storybook/addon-knobs'\\nimport { action } from '@storybook/addon-actions'\\nimport Button from '../../../atoms/Button'\\nimport Position from '../../Position'\\nimport FontIcon from '../../../atoms/FontIcon'\\nimport { tMultiSelectChildren } from '../interfaces'\\n\\nexport default {\\n  title: `${path}/MultiSelect`,\\n  component: MultiSelect,\\n  decorators: [withKnobs],\\n  parameters: {\\n    props: {\\n      propTablesExclude: [Button, ThemeWrapper, Position, FontIcon]\\n    }\\n  }\\n}\\n\\nconst options = [\\n  { value: 'ocean', label: 'Ocean', phoneNumber: '1234', age: '10' },\\n  { value: 'blue', label: 'Blue', phoneNumber: '455556', age: '12' },\\n  { value: 'purple', label: 'Purple', phoneNumber: '67778', age: '13' },\\n  { value: 'red', label: 'Red', phoneNumber: '89990', age: '14' },\\n  { value: 'orange', label: 'Orange', phoneNumber: '001323', age: '15' },\\n  { value: 'yellow', label: 'Yellow', phoneNumber: '99243452', age: '16' },\\n  { value: 'green', label: 'Green', phoneNumber: '120009', age: '18' },\\n  { value: 'forest', label: 'Forest', phoneNumber: '0000000', age: '20' },\\n  { value: 'slate', label: 'Slate', phoneNumber: '11111111', age: '30' },\\n  { value: 'silver', label: 'Silver', phoneNumber: '22222222', age: '40' }\\n]\\nconst selectedOptions = [\\n  { value: 'ocean', label: 'Ocean', phoneNumber: '1234', age: '10' },\\n  { value: 'blue', label: 'Blue', phoneNumber: '455556', age: '12' },\\n  { value: 'purple', label: 'Purple', phoneNumber: '67778', age: '13' },\\n  { value: 'red', label: 'Red', phoneNumber: '89990', age: '14' },\\n  { value: 'forest', label: 'Forest', phoneNumber: '0000000', age: '20' },\\n  { value: 'slate', label: 'Slate', phoneNumber: '11111111', age: '30' }\\n]\\n\\nexport const withButton = () => (\\n  <ThemeWrapper>\\n    <Position type='relative'>\\n      <MultiSelect\\n        id={text('id', 'Colors')}\\n        width={text('width', '300px')}\\n        options={object('Multi Select Options', options)}\\n        onChange={action('Multi Select changed')}\\n        style={object('styles', {\\n          position: 'absolute',\\n          top: '0px',\\n          left: '145px'\\n        })}\\n        isLoading={boolean('isLoading', false)}\\n        isNoOption={boolean('isNoOption', false)}\\n        menuOpen={boolean('menuOpen', false)}\\n        selected={object('Selected', selectedOptions)}\\n        allowSelectAll={boolean('allowSelectAll', false)}\\n        maximumSelected={number('maximum Selected', 4)}\\n        searchableKeys={array('Searchable Keys', [\\n          'value',\\n          'label',\\n          'phoneNumber',\\n          'age'\\n        ])}\\n      >\\n        {({ optionSelected, isMenuOpen, openMenu }: tMultiSelectChildren) => (\\n          <>\\n            {openMenu}\\n            <Button\\n              id='id'\\n              variant='button'\\n              onClick={() => {\\n                console.log(optionSelected)\\n                openMenu(!isMenuOpen)\\n                action('MultiSelect opened/closed')(isMenuOpen)\\n              }}\\n            >\\n              <React.Fragment>\\n                <span>Open MultiSelect</span>\\n                <FontIcon variant='angle-right' size='sm' />\\n              </React.Fragment>\\n            </Button>\\n          </>\\n        )}\\n      </MultiSelect>\\n    </Position>\\n  </ThemeWrapper>\\n)\\n\";\n// @ts-ignore\nvar __ADDS_MAP__ = {};\n// @ts-ignore\nvar __MAIN_FILE_LOCATION__ = \"/withButton.stories.tsx\";\n// @ts-ignore\nvar __MODULE_DEPENDENCIES__ = [];\n// @ts-ignore\nvar __LOCAL_DEPENDENCIES__ = {};\n// @ts-ignore\nvar __IDS_TO_FRAMEWORKS__ = {};\n        \nimport React from 'react'\nimport MultiSelect from '../index'\nimport { path } from '../..'\nimport ThemeWrapper from '../../../../utilities/components/ThemeWrapper'\n\nimport {\n  text,\n  object,\n  withKnobs,\n  boolean,\n  number,\n  array\n} from '@storybook/addon-knobs'\nimport { action } from '@storybook/addon-actions'\nimport Button from '../../../atoms/Button'\nimport Position from '../../Position'\nimport FontIcon from '../../../atoms/FontIcon'\nimport { tMultiSelectChildren } from '../interfaces'\n\nexport default {\n  title: `${path}/MultiSelect`,\n  component: MultiSelect,\n  decorators: [withKnobs],\n  parameters: {\"storySource\":{\"source\":\"\\n\\n// @ts-nocheck\\n// @ts-ignore\\nvar withSourceLoader = require('@storybook/source-loader/preview').withSource;\\n// @ts-ignore\\nvar addSourceDecorator = require(\\\"@storybook/source-loader/preview\\\").addSource;\\n// @ts-ignore\\nvar __SOURCE_PREFIX__ = \\\"/Users/farhanansari/Desktop/CODE/PrxProject/untitled folder/reactStoryBook/src/components/molecules/MultiSelect/stories\\\";\\n// @ts-ignore\\nvar __STORY__ = \\\"\\\\n\\\\n// @ts-nocheck\\\\n// @ts-ignore\\\\nvar withSourceLoader = require('@storybook/source-loader/preview').withSource;\\\\n// @ts-ignore\\\\nvar addSourceDecorator = require(\\\\\\\"@storybook/source-loader/preview\\\\\\\").addSource;\\\\n// @ts-ignore\\\\nvar __SOURCE_PREFIX__ = \\\\\\\"/Users/farhanansari/Desktop/CODE/PrxProject/untitled folder/reactStoryBook/src/components/molecules/MultiSelect/stories\\\\\\\";\\\\n// @ts-ignore\\\\nvar __STORY__ = \\\\\\\"import React from 'react'\\\\\\\\nimport MultiSelect from '../index'\\\\\\\\nimport { path } from '../..'\\\\\\\\nimport ThemeWrapper from '../../../../utilities/components/ThemeWrapper'\\\\\\\\n\\\\\\\\nimport {\\\\\\\\n  text,\\\\\\\\n  object,\\\\\\\\n  withKnobs,\\\\\\\\n  boolean,\\\\\\\\n  number,\\\\\\\\n  array\\\\\\\\n} from '@storybook/addon-knobs'\\\\\\\\nimport { action } from '@storybook/addon-actions'\\\\\\\\nimport Button from '../../../atoms/Button'\\\\\\\\nimport Position from '../../Position'\\\\\\\\nimport FontIcon from '../../../atoms/FontIcon'\\\\\\\\nimport { tMultiSelectChildren } from '../interfaces'\\\\\\\\n\\\\\\\\nexport default {\\\\\\\\n  title: `${path}/MultiSelect`,\\\\\\\\n  component: MultiSelect,\\\\\\\\n  decorators: [withKnobs],\\\\\\\\n  parameters: {\\\\\\\\n    props: {\\\\\\\\n      propTablesExclude: [Button, ThemeWrapper, Position, FontIcon]\\\\\\\\n    }\\\\\\\\n  }\\\\\\\\n}\\\\\\\\n\\\\\\\\nconst options = [\\\\\\\\n  { value: 'ocean', label: 'Ocean', phoneNumber: '1234', age: '10' },\\\\\\\\n  { value: 'blue', label: 'Blue', phoneNumber: '455556', age: '12' },\\\\\\\\n  { value: 'purple', label: 'Purple', phoneNumber: '67778', age: '13' },\\\\\\\\n  { value: 'red', label: 'Red', phoneNumber: '89990', age: '14' },\\\\\\\\n  { value: 'orange', label: 'Orange', phoneNumber: '001323', age: '15' },\\\\\\\\n  { value: 'yellow', label: 'Yellow', phoneNumber: '99243452', age: '16' },\\\\\\\\n  { value: 'green', label: 'Green', phoneNumber: '120009', age: '18' },\\\\\\\\n  { value: 'forest', label: 'Forest', phoneNumber: '0000000', age: '20' },\\\\\\\\n  { value: 'slate', label: 'Slate', phoneNumber: '11111111', age: '30' },\\\\\\\\n  { value: 'silver', label: 'Silver', phoneNumber: '22222222', age: '40' }\\\\\\\\n]\\\\\\\\nconst selectedOptions = [\\\\\\\\n  { value: 'ocean', label: 'Ocean', phoneNumber: '1234', age: '10' },\\\\\\\\n  { value: 'blue', label: 'Blue', phoneNumber: '455556', age: '12' },\\\\\\\\n  { value: 'purple', label: 'Purple', phoneNumber: '67778', age: '13' },\\\\\\\\n  { value: 'red', label: 'Red', phoneNumber: '89990', age: '14' },\\\\\\\\n  { value: 'forest', label: 'Forest', phoneNumber: '0000000', age: '20' },\\\\\\\\n  { value: 'slate', label: 'Slate', phoneNumber: '11111111', age: '30' }\\\\\\\\n]\\\\\\\\n\\\\\\\\nexport const withButton = () => (\\\\\\\\n  <ThemeWrapper>\\\\\\\\n    <Position type='relative'>\\\\\\\\n      <MultiSelect\\\\\\\\n        id={text('id', 'Colors')}\\\\\\\\n        width={text('width', '300px')}\\\\\\\\n        options={object('Multi Select Options', options)}\\\\\\\\n        onChange={action('Multi Select changed')}\\\\\\\\n        style={object('styles', {\\\\\\\\n          position: 'absolute',\\\\\\\\n          top: '0px',\\\\\\\\n          left: '145px'\\\\\\\\n        })}\\\\\\\\n        isLoading={boolean('isLoading', false)}\\\\\\\\n        isNoOption={boolean('isNoOption', false)}\\\\\\\\n        menuOpen={boolean('menuOpen', false)}\\\\\\\\n        selected={object('Selected', selectedOptions)}\\\\\\\\n        allowSelectAll={boolean('allowSelectAll', false)}\\\\\\\\n        maximumSelected={number('maximum Selected', 4)}\\\\\\\\n        searchableKeys={array('Searchable Keys', [\\\\\\\\n          'value',\\\\\\\\n          'label',\\\\\\\\n          'phoneNumber',\\\\\\\\n          'age'\\\\\\\\n        ])}\\\\\\\\n      >\\\\\\\\n        {({ optionSelected, isMenuOpen, openMenu }: tMultiSelectChildren) => (\\\\\\\\n          <>\\\\\\\\n            {openMenu}\\\\\\\\n            <Button\\\\\\\\n              id='id'\\\\\\\\n              variant='button'\\\\\\\\n              onClick={() => {\\\\\\\\n                console.log(optionSelected)\\\\\\\\n                openMenu(!isMenuOpen)\\\\\\\\n                action('MultiSelect opened/closed')(isMenuOpen)\\\\\\\\n              }}\\\\\\\\n            >\\\\\\\\n              <React.Fragment>\\\\\\\\n                <span>Open MultiSelect</span>\\\\\\\\n                <FontIcon variant='angle-right' size='sm' />\\\\\\\\n              </React.Fragment>\\\\\\\\n            </Button>\\\\\\\\n          </>\\\\\\\\n        )}\\\\\\\\n      </MultiSelect>\\\\\\\\n    </Position>\\\\\\\\n  </ThemeWrapper>\\\\\\\\n)\\\\\\\\n\\\\\\\";\\\\n// @ts-ignore\\\\nvar __ADDS_MAP__ = {};\\\\n// @ts-ignore\\\\nvar __MAIN_FILE_LOCATION__ = \\\\\\\"/withButton.stories.tsx\\\\\\\";\\\\n// @ts-ignore\\\\nvar __MODULE_DEPENDENCIES__ = [];\\\\n// @ts-ignore\\\\nvar __LOCAL_DEPENDENCIES__ = {};\\\\n// @ts-ignore\\\\nvar __IDS_TO_FRAMEWORKS__ = {};\\\\n        \\\\nimport React from 'react'\\\\nimport MultiSelect from '../index'\\\\nimport { path } from '../..'\\\\nimport ThemeWrapper from '../../../../utilities/components/ThemeWrapper'\\\\n\\\\nimport {\\\\n  text,\\\\n  object,\\\\n  withKnobs,\\\\n  boolean,\\\\n  number,\\\\n  array\\\\n} from '@storybook/addon-knobs'\\\\nimport { action } from '@storybook/addon-actions'\\\\nimport Button from '../../../atoms/Button'\\\\nimport Position from '../../Position'\\\\nimport FontIcon from '../../../atoms/FontIcon'\\\\nimport { tMultiSelectChildren } from '../interfaces'\\\\n\\\\nexport default {\\\\n  title: `${path}/MultiSelect`,\\\\n  component: MultiSelect,\\\\n  decorators: [withKnobs],\\\\n  parameters: {\\\\\\\"storySource\\\\\\\":{\\\\\\\"source\\\\\\\":\\\\\\\"import React from 'react'\\\\\\\\nimport MultiSelect from '../index'\\\\\\\\nimport { path } from '../..'\\\\\\\\nimport ThemeWrapper from '../../../../utilities/components/ThemeWrapper'\\\\\\\\n\\\\\\\\nimport {\\\\\\\\n  text,\\\\\\\\n  object,\\\\\\\\n  withKnobs,\\\\\\\\n  boolean,\\\\\\\\n  number,\\\\\\\\n  array\\\\\\\\n} from '@storybook/addon-knobs'\\\\\\\\nimport { action } from '@storybook/addon-actions'\\\\\\\\nimport Button from '../../../atoms/Button'\\\\\\\\nimport Position from '../../Position'\\\\\\\\nimport FontIcon from '../../../atoms/FontIcon'\\\\\\\\nimport { tMultiSelectChildren } from '../interfaces'\\\\\\\\n\\\\\\\\nexport default {\\\\\\\\n  title: `${path}/MultiSelect`,\\\\\\\\n  component: MultiSelect,\\\\\\\\n  decorators: [withKnobs],\\\\\\\\n  parameters: {\\\\\\\\n    props: {\\\\\\\\n      propTablesExclude: [Button, ThemeWrapper, Position, FontIcon]\\\\\\\\n    }\\\\\\\\n  }\\\\\\\\n}\\\\\\\\n\\\\\\\\nconst options = [\\\\\\\\n  { value: 'ocean', label: 'Ocean', phoneNumber: '1234', age: '10' },\\\\\\\\n  { value: 'blue', label: 'Blue', phoneNumber: '455556', age: '12' },\\\\\\\\n  { value: 'purple', label: 'Purple', phoneNumber: '67778', age: '13' },\\\\\\\\n  { value: 'red', label: 'Red', phoneNumber: '89990', age: '14' },\\\\\\\\n  { value: 'orange', label: 'Orange', phoneNumber: '001323', age: '15' },\\\\\\\\n  { value: 'yellow', label: 'Yellow', phoneNumber: '99243452', age: '16' },\\\\\\\\n  { value: 'green', label: 'Green', phoneNumber: '120009', age: '18' },\\\\\\\\n  { value: 'forest', label: 'Forest', phoneNumber: '0000000', age: '20' },\\\\\\\\n  { value: 'slate', label: 'Slate', phoneNumber: '11111111', age: '30' },\\\\\\\\n  { value: 'silver', label: 'Silver', phoneNumber: '22222222', age: '40' }\\\\\\\\n]\\\\\\\\nconst selectedOptions = [\\\\\\\\n  { value: 'ocean', label: 'Ocean', phoneNumber: '1234', age: '10' },\\\\\\\\n  { value: 'blue', label: 'Blue', phoneNumber: '455556', age: '12' },\\\\\\\\n  { value: 'purple', label: 'Purple', phoneNumber: '67778', age: '13' },\\\\\\\\n  { value: 'red', label: 'Red', phoneNumber: '89990', age: '14' },\\\\\\\\n  { value: 'forest', label: 'Forest', phoneNumber: '0000000', age: '20' },\\\\\\\\n  { value: 'slate', label: 'Slate', phoneNumber: '11111111', age: '30' }\\\\\\\\n]\\\\\\\\n\\\\\\\\nexport const withButton = () => (\\\\\\\\n  <ThemeWrapper>\\\\\\\\n    <Position type='relative'>\\\\\\\\n      <MultiSelect\\\\\\\\n        id={text('id', 'Colors')}\\\\\\\\n        width={text('width', '300px')}\\\\\\\\n        options={object('Multi Select Options', options)}\\\\\\\\n        onChange={action('Multi Select changed')}\\\\\\\\n        style={object('styles', {\\\\\\\\n          position: 'absolute',\\\\\\\\n          top: '0px',\\\\\\\\n          left: '145px'\\\\\\\\n        })}\\\\\\\\n        isLoading={boolean('isLoading', false)}\\\\\\\\n        isNoOption={boolean('isNoOption', false)}\\\\\\\\n        menuOpen={boolean('menuOpen', false)}\\\\\\\\n        selected={object('Selected', selectedOptions)}\\\\\\\\n        allowSelectAll={boolean('allowSelectAll', false)}\\\\\\\\n        maximumSelected={number('maximum Selected', 4)}\\\\\\\\n        searchableKeys={array('Searchable Keys', [\\\\\\\\n          'value',\\\\\\\\n          'label',\\\\\\\\n          'phoneNumber',\\\\\\\\n          'age'\\\\\\\\n        ])}\\\\\\\\n      >\\\\\\\\n        {({ optionSelected, isMenuOpen, openMenu }: tMultiSelectChildren) => (\\\\\\\\n          <>\\\\\\\\n            {openMenu}\\\\\\\\n            <Button\\\\\\\\n              id='id'\\\\\\\\n              variant='button'\\\\\\\\n              onClick={() => {\\\\\\\\n                console.log(optionSelected)\\\\\\\\n                openMenu(!isMenuOpen)\\\\\\\\n                action('MultiSelect opened/closed')(isMenuOpen)\\\\\\\\n              }}\\\\\\\\n            >\\\\\\\\n              <React.Fragment>\\\\\\\\n                <span>Open MultiSelect</span>\\\\\\\\n                <FontIcon variant='angle-right' size='sm' />\\\\\\\\n              </React.Fragment>\\\\\\\\n            </Button>\\\\\\\\n          </>\\\\\\\\n        )}\\\\\\\\n      </MultiSelect>\\\\\\\\n    </Position>\\\\\\\\n  </ThemeWrapper>\\\\\\\\n)\\\\\\\\n\\\\\\\",\\\\\\\"locationsMap\\\\\\\":{}},\\\\n    props: {\\\\n      propTablesExclude: [Button, ThemeWrapper, Position, FontIcon]\\\\n    }\\\\n  },}\\\\n\\\\nconst options = [\\\\n  { value: 'ocean', label: 'Ocean', phoneNumber: '1234', age: '10' },\\\\n  { value: 'blue', label: 'Blue', phoneNumber: '455556', age: '12' },\\\\n  { value: 'purple', label: 'Purple', phoneNumber: '67778', age: '13' },\\\\n  { value: 'red', label: 'Red', phoneNumber: '89990', age: '14' },\\\\n  { value: 'orange', label: 'Orange', phoneNumber: '001323', age: '15' },\\\\n  { value: 'yellow', label: 'Yellow', phoneNumber: '99243452', age: '16' },\\\\n  { value: 'green', label: 'Green', phoneNumber: '120009', age: '18' },\\\\n  { value: 'forest', label: 'Forest', phoneNumber: '0000000', age: '20' },\\\\n  { value: 'slate', label: 'Slate', phoneNumber: '11111111', age: '30' },\\\\n  { value: 'silver', label: 'Silver', phoneNumber: '22222222', age: '40' }\\\\n]\\\\nconst selectedOptions = [\\\\n  { value: 'ocean', label: 'Ocean', phoneNumber: '1234', age: '10' },\\\\n  { value: 'blue', label: 'Blue', phoneNumber: '455556', age: '12' },\\\\n  { value: 'purple', label: 'Purple', phoneNumber: '67778', age: '13' },\\\\n  { value: 'red', label: 'Red', phoneNumber: '89990', age: '14' },\\\\n  { value: 'forest', label: 'Forest', phoneNumber: '0000000', age: '20' },\\\\n  { value: 'slate', label: 'Slate', phoneNumber: '11111111', age: '30' }\\\\n]\\\\n\\\\nexport const withButton = addSourceDecorator(() => (\\\\n  <ThemeWrapper>\\\\n    <Position type='relative'>\\\\n      <MultiSelect\\\\n        id={text('id', 'Colors')}\\\\n        width={text('width', '300px')}\\\\n        options={object('Multi Select Options', options)}\\\\n        onChange={action('Multi Select changed')}\\\\n        style={object('styles', {\\\\n          position: 'absolute',\\\\n          top: '0px',\\\\n          left: '145px'\\\\n        })}\\\\n        isLoading={boolean('isLoading', false)}\\\\n        isNoOption={boolean('isNoOption', false)}\\\\n        menuOpen={boolean('menuOpen', false)}\\\\n        selected={object('Selected', selectedOptions)}\\\\n        allowSelectAll={boolean('allowSelectAll', false)}\\\\n        maximumSelected={number('maximum Selected', 4)}\\\\n        searchableKeys={array('Searchable Keys', [\\\\n          'value',\\\\n          'label',\\\\n          'phoneNumber',\\\\n          'age'\\\\n        ])}\\\\n      >\\\\n        {({ optionSelected, isMenuOpen, openMenu }: tMultiSelectChildren) => (\\\\n          <>\\\\n            {openMenu}\\\\n            <Button\\\\n              id='id'\\\\n              variant='button'\\\\n              onClick={() => {\\\\n                console.log(optionSelected)\\\\n                openMenu(!isMenuOpen)\\\\n                action('MultiSelect opened/closed')(isMenuOpen)\\\\n              }}\\\\n            >\\\\n              <React.Fragment>\\\\n                <span>Open MultiSelect</span>\\\\n                <FontIcon variant='angle-right' size='sm' />\\\\n              </React.Fragment>\\\\n            </Button>\\\\n          </>\\\\n        )}\\\\n      </MultiSelect>\\\\n    </Position>\\\\n  </ThemeWrapper>\\\\n), {__STORY__, __ADDS_MAP__,__MAIN_FILE_LOCATION__,__MODULE_DEPENDENCIES__,__LOCAL_DEPENDENCIES__,__SOURCE_PREFIX__,__IDS_TO_FRAMEWORKS__});\\\";\\n// @ts-ignore\\nvar __ADDS_MAP__ = {};\\n// @ts-ignore\\nvar __MAIN_FILE_LOCATION__ = \\\"/withButton.stories.tsx\\\";\\n// @ts-ignore\\nvar __MODULE_DEPENDENCIES__ = [];\\n// @ts-ignore\\nvar __LOCAL_DEPENDENCIES__ = {};\\n// @ts-ignore\\nvar __IDS_TO_FRAMEWORKS__ = {};\\n        \\n\\n\\n// @ts-nocheck\\n// @ts-ignore\\nvar withSourceLoader = require('@storybook/source-loader/preview').withSource;\\n// @ts-ignore\\nvar addSourceDecorator = require(\\\"@storybook/source-loader/preview\\\").addSource;\\n// @ts-ignore\\nvar __SOURCE_PREFIX__ = \\\"/Users/farhanansari/Desktop/CODE/PrxProject/untitled folder/reactStoryBook/src/components/molecules/MultiSelect/stories\\\";\\n// @ts-ignore\\nvar __STORY__ = \\\"import React from 'react'\\\\nimport MultiSelect from '../index'\\\\nimport { path } from '../..'\\\\nimport ThemeWrapper from '../../../../utilities/components/ThemeWrapper'\\\\n\\\\nimport {\\\\n  text,\\\\n  object,\\\\n  withKnobs,\\\\n  boolean,\\\\n  number,\\\\n  array\\\\n} from '@storybook/addon-knobs'\\\\nimport { action } from '@storybook/addon-actions'\\\\nimport Button from '../../../atoms/Button'\\\\nimport Position from '../../Position'\\\\nimport FontIcon from '../../../atoms/FontIcon'\\\\nimport { tMultiSelectChildren } from '../interfaces'\\\\n\\\\nexport default {\\\\n  title: `${path}/MultiSelect`,\\\\n  component: MultiSelect,\\\\n  decorators: [withKnobs],\\\\n  parameters: {\\\\n    props: {\\\\n      propTablesExclude: [Button, ThemeWrapper, Position, FontIcon]\\\\n    }\\\\n  }\\\\n}\\\\n\\\\nconst options = [\\\\n  { value: 'ocean', label: 'Ocean', phoneNumber: '1234', age: '10' },\\\\n  { value: 'blue', label: 'Blue', phoneNumber: '455556', age: '12' },\\\\n  { value: 'purple', label: 'Purple', phoneNumber: '67778', age: '13' },\\\\n  { value: 'red', label: 'Red', phoneNumber: '89990', age: '14' },\\\\n  { value: 'orange', label: 'Orange', phoneNumber: '001323', age: '15' },\\\\n  { value: 'yellow', label: 'Yellow', phoneNumber: '99243452', age: '16' },\\\\n  { value: 'green', label: 'Green', phoneNumber: '120009', age: '18' },\\\\n  { value: 'forest', label: 'Forest', phoneNumber: '0000000', age: '20' },\\\\n  { value: 'slate', label: 'Slate', phoneNumber: '11111111', age: '30' },\\\\n  { value: 'silver', label: 'Silver', phoneNumber: '22222222', age: '40' }\\\\n]\\\\nconst selectedOptions = [\\\\n  { value: 'ocean', label: 'Ocean', phoneNumber: '1234', age: '10' },\\\\n  { value: 'blue', label: 'Blue', phoneNumber: '455556', age: '12' },\\\\n  { value: 'purple', label: 'Purple', phoneNumber: '67778', age: '13' },\\\\n  { value: 'red', label: 'Red', phoneNumber: '89990', age: '14' },\\\\n  { value: 'forest', label: 'Forest', phoneNumber: '0000000', age: '20' },\\\\n  { value: 'slate', label: 'Slate', phoneNumber: '11111111', age: '30' }\\\\n]\\\\n\\\\nexport const withButton = () => (\\\\n  <ThemeWrapper>\\\\n    <Position type='relative'>\\\\n      <MultiSelect\\\\n        id={text('id', 'Colors')}\\\\n        width={text('width', '300px')}\\\\n        options={object('Multi Select Options', options)}\\\\n        onChange={action('Multi Select changed')}\\\\n        style={object('styles', {\\\\n          position: 'absolute',\\\\n          top: '0px',\\\\n          left: '145px'\\\\n        })}\\\\n        isLoading={boolean('isLoading', false)}\\\\n        isNoOption={boolean('isNoOption', false)}\\\\n        menuOpen={boolean('menuOpen', false)}\\\\n        selected={object('Selected', selectedOptions)}\\\\n        allowSelectAll={boolean('allowSelectAll', false)}\\\\n        maximumSelected={number('maximum Selected', 4)}\\\\n        searchableKeys={array('Searchable Keys', [\\\\n          'value',\\\\n          'label',\\\\n          'phoneNumber',\\\\n          'age'\\\\n        ])}\\\\n      >\\\\n        {({ optionSelected, isMenuOpen, openMenu }: tMultiSelectChildren) => (\\\\n          <>\\\\n            {openMenu}\\\\n            <Button\\\\n              id='id'\\\\n              variant='button'\\\\n              onClick={() => {\\\\n                console.log(optionSelected)\\\\n                openMenu(!isMenuOpen)\\\\n                action('MultiSelect opened/closed')(isMenuOpen)\\\\n              }}\\\\n            >\\\\n              <React.Fragment>\\\\n                <span>Open MultiSelect</span>\\\\n                <FontIcon variant='angle-right' size='sm' />\\\\n              </React.Fragment>\\\\n            </Button>\\\\n          </>\\\\n        )}\\\\n      </MultiSelect>\\\\n    </Position>\\\\n  </ThemeWrapper>\\\\n)\\\\n\\\";\\n// @ts-ignore\\nvar __ADDS_MAP__ = {};\\n// @ts-ignore\\nvar __MAIN_FILE_LOCATION__ = \\\"/withButton.stories.tsx\\\";\\n// @ts-ignore\\nvar __MODULE_DEPENDENCIES__ = [];\\n// @ts-ignore\\nvar __LOCAL_DEPENDENCIES__ = {};\\n// @ts-ignore\\nvar __IDS_TO_FRAMEWORKS__ = {};\\n        \\nimport React from 'react'\\nimport MultiSelect from '../index'\\nimport { path } from '../..'\\nimport ThemeWrapper from '../../../../utilities/components/ThemeWrapper'\\n\\nimport {\\n  text,\\n  object,\\n  withKnobs,\\n  boolean,\\n  number,\\n  array\\n} from '@storybook/addon-knobs'\\nimport { action } from '@storybook/addon-actions'\\nimport Button from '../../../atoms/Button'\\nimport Position from '../../Position'\\nimport FontIcon from '../../../atoms/FontIcon'\\nimport { tMultiSelectChildren } from '../interfaces'\\n\\nexport default {\\n  title: `${path}/MultiSelect`,\\n  component: MultiSelect,\\n  decorators: [withKnobs],\\n  parameters: {\\\"storySource\\\":{\\\"source\\\":\\\"\\\\n\\\\n// @ts-nocheck\\\\n// @ts-ignore\\\\nvar withSourceLoader = require('@storybook/source-loader/preview').withSource;\\\\n// @ts-ignore\\\\nvar addSourceDecorator = require(\\\\\\\"@storybook/source-loader/preview\\\\\\\").addSource;\\\\n// @ts-ignore\\\\nvar __SOURCE_PREFIX__ = \\\\\\\"/Users/farhanansari/Desktop/CODE/PrxProject/untitled folder/reactStoryBook/src/components/molecules/MultiSelect/stories\\\\\\\";\\\\n// @ts-ignore\\\\nvar __STORY__ = \\\\\\\"import React from 'react'\\\\\\\\nimport MultiSelect from '../index'\\\\\\\\nimport { path } from '../..'\\\\\\\\nimport ThemeWrapper from '../../../../utilities/components/ThemeWrapper'\\\\\\\\n\\\\\\\\nimport {\\\\\\\\n  text,\\\\\\\\n  object,\\\\\\\\n  withKnobs,\\\\\\\\n  boolean,\\\\\\\\n  number,\\\\\\\\n  array\\\\\\\\n} from '@storybook/addon-knobs'\\\\\\\\nimport { action } from '@storybook/addon-actions'\\\\\\\\nimport Button from '../../../atoms/Button'\\\\\\\\nimport Position from '../../Position'\\\\\\\\nimport FontIcon from '../../../atoms/FontIcon'\\\\\\\\nimport { tMultiSelectChildren } from '../interfaces'\\\\\\\\n\\\\\\\\nexport default {\\\\\\\\n  title: `${path}/MultiSelect`,\\\\\\\\n  component: MultiSelect,\\\\\\\\n  decorators: [withKnobs],\\\\\\\\n  parameters: {\\\\\\\\n    props: {\\\\\\\\n      propTablesExclude: [Button, ThemeWrapper, Position, FontIcon]\\\\\\\\n    }\\\\\\\\n  }\\\\\\\\n}\\\\\\\\n\\\\\\\\nconst options = [\\\\\\\\n  { value: 'ocean', label: 'Ocean', phoneNumber: '1234', age: '10' },\\\\\\\\n  { value: 'blue', label: 'Blue', phoneNumber: '455556', age: '12' },\\\\\\\\n  { value: 'purple', label: 'Purple', phoneNumber: '67778', age: '13' },\\\\\\\\n  { value: 'red', label: 'Red', phoneNumber: '89990', age: '14' },\\\\\\\\n  { value: 'orange', label: 'Orange', phoneNumber: '001323', age: '15' },\\\\\\\\n  { value: 'yellow', label: 'Yellow', phoneNumber: '99243452', age: '16' },\\\\\\\\n  { value: 'green', label: 'Green', phoneNumber: '120009', age: '18' },\\\\\\\\n  { value: 'forest', label: 'Forest', phoneNumber: '0000000', age: '20' },\\\\\\\\n  { value: 'slate', label: 'Slate', phoneNumber: '11111111', age: '30' },\\\\\\\\n  { value: 'silver', label: 'Silver', phoneNumber: '22222222', age: '40' }\\\\\\\\n]\\\\\\\\nconst selectedOptions = [\\\\\\\\n  { value: 'ocean', label: 'Ocean', phoneNumber: '1234', age: '10' },\\\\\\\\n  { value: 'blue', label: 'Blue', phoneNumber: '455556', age: '12' },\\\\\\\\n  { value: 'purple', label: 'Purple', phoneNumber: '67778', age: '13' },\\\\\\\\n  { value: 'red', label: 'Red', phoneNumber: '89990', age: '14' },\\\\\\\\n  { value: 'forest', label: 'Forest', phoneNumber: '0000000', age: '20' },\\\\\\\\n  { value: 'slate', label: 'Slate', phoneNumber: '11111111', age: '30' }\\\\\\\\n]\\\\\\\\n\\\\\\\\nexport const withButton = () => (\\\\\\\\n  <ThemeWrapper>\\\\\\\\n    <Position type='relative'>\\\\\\\\n      <MultiSelect\\\\\\\\n        id={text('id', 'Colors')}\\\\\\\\n        width={text('width', '300px')}\\\\\\\\n        options={object('Multi Select Options', options)}\\\\\\\\n        onChange={action('Multi Select changed')}\\\\\\\\n        style={object('styles', {\\\\\\\\n          position: 'absolute',\\\\\\\\n          top: '0px',\\\\\\\\n          left: '145px'\\\\\\\\n        })}\\\\\\\\n        isLoading={boolean('isLoading', false)}\\\\\\\\n        isNoOption={boolean('isNoOption', false)}\\\\\\\\n        menuOpen={boolean('menuOpen', false)}\\\\\\\\n        selected={object('Selected', selectedOptions)}\\\\\\\\n        allowSelectAll={boolean('allowSelectAll', false)}\\\\\\\\n        maximumSelected={number('maximum Selected', 4)}\\\\\\\\n        searchableKeys={array('Searchable Keys', [\\\\\\\\n          'value',\\\\\\\\n          'label',\\\\\\\\n          'phoneNumber',\\\\\\\\n          'age'\\\\\\\\n        ])}\\\\\\\\n      >\\\\\\\\n        {({ optionSelected, isMenuOpen, openMenu }: tMultiSelectChildren) => (\\\\\\\\n          <>\\\\\\\\n            {openMenu}\\\\\\\\n            <Button\\\\\\\\n              id='id'\\\\\\\\n              variant='button'\\\\\\\\n              onClick={() => {\\\\\\\\n                console.log(optionSelected)\\\\\\\\n                openMenu(!isMenuOpen)\\\\\\\\n                action('MultiSelect opened/closed')(isMenuOpen)\\\\\\\\n              }}\\\\\\\\n            >\\\\\\\\n              <React.Fragment>\\\\\\\\n                <span>Open MultiSelect</span>\\\\\\\\n                <FontIcon variant='angle-right' size='sm' />\\\\\\\\n              </React.Fragment>\\\\\\\\n            </Button>\\\\\\\\n          </>\\\\\\\\n        )}\\\\\\\\n      </MultiSelect>\\\\\\\\n    </Position>\\\\\\\\n  </ThemeWrapper>\\\\\\\\n)\\\\\\\\n\\\\\\\";\\\\n// @ts-ignore\\\\nvar __ADDS_MAP__ = {};\\\\n// @ts-ignore\\\\nvar __MAIN_FILE_LOCATION__ = \\\\\\\"/withButton.stories.tsx\\\\\\\";\\\\n// @ts-ignore\\\\nvar __MODULE_DEPENDENCIES__ = [];\\\\n// @ts-ignore\\\\nvar __LOCAL_DEPENDENCIES__ = {};\\\\n// @ts-ignore\\\\nvar __IDS_TO_FRAMEWORKS__ = {};\\\\n        \\\\nimport React from 'react'\\\\nimport MultiSelect from '../index'\\\\nimport { path } from '../..'\\\\nimport ThemeWrapper from '../../../../utilities/components/ThemeWrapper'\\\\n\\\\nimport {\\\\n  text,\\\\n  object,\\\\n  withKnobs,\\\\n  boolean,\\\\n  number,\\\\n  array\\\\n} from '@storybook/addon-knobs'\\\\nimport { action } from '@storybook/addon-actions'\\\\nimport Button from '../../../atoms/Button'\\\\nimport Position from '../../Position'\\\\nimport FontIcon from '../../../atoms/FontIcon'\\\\nimport { tMultiSelectChildren } from '../interfaces'\\\\n\\\\nexport default {\\\\n  title: `${path}/MultiSelect`,\\\\n  component: MultiSelect,\\\\n  decorators: [withKnobs],\\\\n  parameters: {\\\\\\\"storySource\\\\\\\":{\\\\\\\"source\\\\\\\":\\\\\\\"import React from 'react'\\\\\\\\nimport MultiSelect from '../index'\\\\\\\\nimport { path } from '../..'\\\\\\\\nimport ThemeWrapper from '../../../../utilities/components/ThemeWrapper'\\\\\\\\n\\\\\\\\nimport {\\\\\\\\n  text,\\\\\\\\n  object,\\\\\\\\n  withKnobs,\\\\\\\\n  boolean,\\\\\\\\n  number,\\\\\\\\n  array\\\\\\\\n} from '@storybook/addon-knobs'\\\\\\\\nimport { action } from '@storybook/addon-actions'\\\\\\\\nimport Button from '../../../atoms/Button'\\\\\\\\nimport Position from '../../Position'\\\\\\\\nimport FontIcon from '../../../atoms/FontIcon'\\\\\\\\nimport { tMultiSelectChildren } from '../interfaces'\\\\\\\\n\\\\\\\\nexport default {\\\\\\\\n  title: `${path}/MultiSelect`,\\\\\\\\n  component: MultiSelect,\\\\\\\\n  decorators: [withKnobs],\\\\\\\\n  parameters: {\\\\\\\\n    props: {\\\\\\\\n      propTablesExclude: [Button, ThemeWrapper, Position, FontIcon]\\\\\\\\n    }\\\\\\\\n  }\\\\\\\\n}\\\\\\\\n\\\\\\\\nconst options = [\\\\\\\\n  { value: 'ocean', label: 'Ocean', phoneNumber: '1234', age: '10' },\\\\\\\\n  { value: 'blue', label: 'Blue', phoneNumber: '455556', age: '12' },\\\\\\\\n  { value: 'purple', label: 'Purple', phoneNumber: '67778', age: '13' },\\\\\\\\n  { value: 'red', label: 'Red', phoneNumber: '89990', age: '14' },\\\\\\\\n  { value: 'orange', label: 'Orange', phoneNumber: '001323', age: '15' },\\\\\\\\n  { value: 'yellow', label: 'Yellow', phoneNumber: '99243452', age: '16' },\\\\\\\\n  { value: 'green', label: 'Green', phoneNumber: '120009', age: '18' },\\\\\\\\n  { value: 'forest', label: 'Forest', phoneNumber: '0000000', age: '20' },\\\\\\\\n  { value: 'slate', label: 'Slate', phoneNumber: '11111111', age: '30' },\\\\\\\\n  { value: 'silver', label: 'Silver', phoneNumber: '22222222', age: '40' }\\\\\\\\n]\\\\\\\\nconst selectedOptions = [\\\\\\\\n  { value: 'ocean', label: 'Ocean', phoneNumber: '1234', age: '10' },\\\\\\\\n  { value: 'blue', label: 'Blue', phoneNumber: '455556', age: '12' },\\\\\\\\n  { value: 'purple', label: 'Purple', phoneNumber: '67778', age: '13' },\\\\\\\\n  { value: 'red', label: 'Red', phoneNumber: '89990', age: '14' },\\\\\\\\n  { value: 'forest', label: 'Forest', phoneNumber: '0000000', age: '20' },\\\\\\\\n  { value: 'slate', label: 'Slate', phoneNumber: '11111111', age: '30' }\\\\\\\\n]\\\\\\\\n\\\\\\\\nexport const withButton = () => (\\\\\\\\n  <ThemeWrapper>\\\\\\\\n    <Position type='relative'>\\\\\\\\n      <MultiSelect\\\\\\\\n        id={text('id', 'Colors')}\\\\\\\\n        width={text('width', '300px')}\\\\\\\\n        options={object('Multi Select Options', options)}\\\\\\\\n        onChange={action('Multi Select changed')}\\\\\\\\n        style={object('styles', {\\\\\\\\n          position: 'absolute',\\\\\\\\n          top: '0px',\\\\\\\\n          left: '145px'\\\\\\\\n        })}\\\\\\\\n        isLoading={boolean('isLoading', false)}\\\\\\\\n        isNoOption={boolean('isNoOption', false)}\\\\\\\\n        menuOpen={boolean('menuOpen', false)}\\\\\\\\n        selected={object('Selected', selectedOptions)}\\\\\\\\n        allowSelectAll={boolean('allowSelectAll', false)}\\\\\\\\n        maximumSelected={number('maximum Selected', 4)}\\\\\\\\n        searchableKeys={array('Searchable Keys', [\\\\\\\\n          'value',\\\\\\\\n          'label',\\\\\\\\n          'phoneNumber',\\\\\\\\n          'age'\\\\\\\\n        ])}\\\\\\\\n      >\\\\\\\\n        {({ optionSelected, isMenuOpen, openMenu }: tMultiSelectChildren) => (\\\\\\\\n          <>\\\\\\\\n            {openMenu}\\\\\\\\n            <Button\\\\\\\\n              id='id'\\\\\\\\n              variant='button'\\\\\\\\n              onClick={() => {\\\\\\\\n                console.log(optionSelected)\\\\\\\\n                openMenu(!isMenuOpen)\\\\\\\\n                action('MultiSelect opened/closed')(isMenuOpen)\\\\\\\\n              }}\\\\\\\\n            >\\\\\\\\n              <React.Fragment>\\\\\\\\n                <span>Open MultiSelect</span>\\\\\\\\n                <FontIcon variant='angle-right' size='sm' />\\\\\\\\n              </React.Fragment>\\\\\\\\n            </Button>\\\\\\\\n          </>\\\\\\\\n        )}\\\\\\\\n      </MultiSelect>\\\\\\\\n    </Position>\\\\\\\\n  </ThemeWrapper>\\\\\\\\n)\\\\\\\\n\\\\\\\",\\\\\\\"locationsMap\\\\\\\":{}},\\\\n    props: {\\\\n      propTablesExclude: [Button, ThemeWrapper, Position, FontIcon]\\\\n    }\\\\n  },}\\\\n\\\\nconst options = [\\\\n  { value: 'ocean', label: 'Ocean', phoneNumber: '1234', age: '10' },\\\\n  { value: 'blue', label: 'Blue', phoneNumber: '455556', age: '12' },\\\\n  { value: 'purple', label: 'Purple', phoneNumber: '67778', age: '13' },\\\\n  { value: 'red', label: 'Red', phoneNumber: '89990', age: '14' },\\\\n  { value: 'orange', label: 'Orange', phoneNumber: '001323', age: '15' },\\\\n  { value: 'yellow', label: 'Yellow', phoneNumber: '99243452', age: '16' },\\\\n  { value: 'green', label: 'Green', phoneNumber: '120009', age: '18' },\\\\n  { value: 'forest', label: 'Forest', phoneNumber: '0000000', age: '20' },\\\\n  { value: 'slate', label: 'Slate', phoneNumber: '11111111', age: '30' },\\\\n  { value: 'silver', label: 'Silver', phoneNumber: '22222222', age: '40' }\\\\n]\\\\nconst selectedOptions = [\\\\n  { value: 'ocean', label: 'Ocean', phoneNumber: '1234', age: '10' },\\\\n  { value: 'blue', label: 'Blue', phoneNumber: '455556', age: '12' },\\\\n  { value: 'purple', label: 'Purple', phoneNumber: '67778', age: '13' },\\\\n  { value: 'red', label: 'Red', phoneNumber: '89990', age: '14' },\\\\n  { value: 'forest', label: 'Forest', phoneNumber: '0000000', age: '20' },\\\\n  { value: 'slate', label: 'Slate', phoneNumber: '11111111', age: '30' }\\\\n]\\\\n\\\\nexport const withButton = addSourceDecorator(() => (\\\\n  <ThemeWrapper>\\\\n    <Position type='relative'>\\\\n      <MultiSelect\\\\n        id={text('id', 'Colors')}\\\\n        width={text('width', '300px')}\\\\n        options={object('Multi Select Options', options)}\\\\n        onChange={action('Multi Select changed')}\\\\n        style={object('styles', {\\\\n          position: 'absolute',\\\\n          top: '0px',\\\\n          left: '145px'\\\\n        })}\\\\n        isLoading={boolean('isLoading', false)}\\\\n        isNoOption={boolean('isNoOption', false)}\\\\n        menuOpen={boolean('menuOpen', false)}\\\\n        selected={object('Selected', selectedOptions)}\\\\n        allowSelectAll={boolean('allowSelectAll', false)}\\\\n        maximumSelected={number('maximum Selected', 4)}\\\\n        searchableKeys={array('Searchable Keys', [\\\\n          'value',\\\\n          'label',\\\\n          'phoneNumber',\\\\n          'age'\\\\n        ])}\\\\n      >\\\\n        {({ optionSelected, isMenuOpen, openMenu }: tMultiSelectChildren) => (\\\\n          <>\\\\n            {openMenu}\\\\n            <Button\\\\n              id='id'\\\\n              variant='button'\\\\n              onClick={() => {\\\\n                console.log(optionSelected)\\\\n                openMenu(!isMenuOpen)\\\\n                action('MultiSelect opened/closed')(isMenuOpen)\\\\n              }}\\\\n            >\\\\n              <React.Fragment>\\\\n                <span>Open MultiSelect</span>\\\\n                <FontIcon variant='angle-right' size='sm' />\\\\n              </React.Fragment>\\\\n            </Button>\\\\n          </>\\\\n        )}\\\\n      </MultiSelect>\\\\n    </Position>\\\\n  </ThemeWrapper>\\\\n), {__STORY__, __ADDS_MAP__,__MAIN_FILE_LOCATION__,__MODULE_DEPENDENCIES__,__LOCAL_DEPENDENCIES__,__SOURCE_PREFIX__,__IDS_TO_FRAMEWORKS__});\\\",\\\"locationsMap\\\":{}},\\\"storySource\\\":{\\\"source\\\":\\\"import React from 'react'\\\\nimport MultiSelect from '../index'\\\\nimport { path } from '../..'\\\\nimport ThemeWrapper from '../../../../utilities/components/ThemeWrapper'\\\\n\\\\nimport {\\\\n  text,\\\\n  object,\\\\n  withKnobs,\\\\n  boolean,\\\\n  number,\\\\n  array\\\\n} from '@storybook/addon-knobs'\\\\nimport { action } from '@storybook/addon-actions'\\\\nimport Button from '../../../atoms/Button'\\\\nimport Position from '../../Position'\\\\nimport FontIcon from '../../../atoms/FontIcon'\\\\nimport { tMultiSelectChildren } from '../interfaces'\\\\n\\\\nexport default {\\\\n  title: `${path}/MultiSelect`,\\\\n  component: MultiSelect,\\\\n  decorators: [withKnobs],\\\\n  parameters: {\\\\n    props: {\\\\n      propTablesExclude: [Button, ThemeWrapper, Position, FontIcon]\\\\n    }\\\\n  }\\\\n}\\\\n\\\\nconst options = [\\\\n  { value: 'ocean', label: 'Ocean', phoneNumber: '1234', age: '10' },\\\\n  { value: 'blue', label: 'Blue', phoneNumber: '455556', age: '12' },\\\\n  { value: 'purple', label: 'Purple', phoneNumber: '67778', age: '13' },\\\\n  { value: 'red', label: 'Red', phoneNumber: '89990', age: '14' },\\\\n  { value: 'orange', label: 'Orange', phoneNumber: '001323', age: '15' },\\\\n  { value: 'yellow', label: 'Yellow', phoneNumber: '99243452', age: '16' },\\\\n  { value: 'green', label: 'Green', phoneNumber: '120009', age: '18' },\\\\n  { value: 'forest', label: 'Forest', phoneNumber: '0000000', age: '20' },\\\\n  { value: 'slate', label: 'Slate', phoneNumber: '11111111', age: '30' },\\\\n  { value: 'silver', label: 'Silver', phoneNumber: '22222222', age: '40' }\\\\n]\\\\nconst selectedOptions = [\\\\n  { value: 'ocean', label: 'Ocean', phoneNumber: '1234', age: '10' },\\\\n  { value: 'blue', label: 'Blue', phoneNumber: '455556', age: '12' },\\\\n  { value: 'purple', label: 'Purple', phoneNumber: '67778', age: '13' },\\\\n  { value: 'red', label: 'Red', phoneNumber: '89990', age: '14' },\\\\n  { value: 'forest', label: 'Forest', phoneNumber: '0000000', age: '20' },\\\\n  { value: 'slate', label: 'Slate', phoneNumber: '11111111', age: '30' }\\\\n]\\\\n\\\\nexport const withButton = () => (\\\\n  <ThemeWrapper>\\\\n    <Position type='relative'>\\\\n      <MultiSelect\\\\n        id={text('id', 'Colors')}\\\\n        width={text('width', '300px')}\\\\n        options={object('Multi Select Options', options)}\\\\n        onChange={action('Multi Select changed')}\\\\n        style={object('styles', {\\\\n          position: 'absolute',\\\\n          top: '0px',\\\\n          left: '145px'\\\\n        })}\\\\n        isLoading={boolean('isLoading', false)}\\\\n        isNoOption={boolean('isNoOption', false)}\\\\n        menuOpen={boolean('menuOpen', false)}\\\\n        selected={object('Selected', selectedOptions)}\\\\n        allowSelectAll={boolean('allowSelectAll', false)}\\\\n        maximumSelected={number('maximum Selected', 4)}\\\\n        searchableKeys={array('Searchable Keys', [\\\\n          'value',\\\\n          'label',\\\\n          'phoneNumber',\\\\n          'age'\\\\n        ])}\\\\n      >\\\\n        {({ optionSelected, isMenuOpen, openMenu }: tMultiSelectChildren) => (\\\\n          <>\\\\n            {openMenu}\\\\n            <Button\\\\n              id='id'\\\\n              variant='button'\\\\n              onClick={() => {\\\\n                console.log(optionSelected)\\\\n                openMenu(!isMenuOpen)\\\\n                action('MultiSelect opened/closed')(isMenuOpen)\\\\n              }}\\\\n            >\\\\n              <React.Fragment>\\\\n                <span>Open MultiSelect</span>\\\\n                <FontIcon variant='angle-right' size='sm' />\\\\n              </React.Fragment>\\\\n            </Button>\\\\n          </>\\\\n        )}\\\\n      </MultiSelect>\\\\n    </Position>\\\\n  </ThemeWrapper>\\\\n)\\\\n\\\",\\\"locationsMap\\\":{}},\\n    props: {\\n      propTablesExclude: [Button, ThemeWrapper, Position, FontIcon]\\n    }\\n  },}\\n\\nconst options = [\\n  { value: 'ocean', label: 'Ocean', phoneNumber: '1234', age: '10' },\\n  { value: 'blue', label: 'Blue', phoneNumber: '455556', age: '12' },\\n  { value: 'purple', label: 'Purple', phoneNumber: '67778', age: '13' },\\n  { value: 'red', label: 'Red', phoneNumber: '89990', age: '14' },\\n  { value: 'orange', label: 'Orange', phoneNumber: '001323', age: '15' },\\n  { value: 'yellow', label: 'Yellow', phoneNumber: '99243452', age: '16' },\\n  { value: 'green', label: 'Green', phoneNumber: '120009', age: '18' },\\n  { value: 'forest', label: 'Forest', phoneNumber: '0000000', age: '20' },\\n  { value: 'slate', label: 'Slate', phoneNumber: '11111111', age: '30' },\\n  { value: 'silver', label: 'Silver', phoneNumber: '22222222', age: '40' }\\n]\\nconst selectedOptions = [\\n  { value: 'ocean', label: 'Ocean', phoneNumber: '1234', age: '10' },\\n  { value: 'blue', label: 'Blue', phoneNumber: '455556', age: '12' },\\n  { value: 'purple', label: 'Purple', phoneNumber: '67778', age: '13' },\\n  { value: 'red', label: 'Red', phoneNumber: '89990', age: '14' },\\n  { value: 'forest', label: 'Forest', phoneNumber: '0000000', age: '20' },\\n  { value: 'slate', label: 'Slate', phoneNumber: '11111111', age: '30' }\\n]\\n\\nexport const withButton = addSourceDecorator(addSourceDecorator(() => (\\n  <ThemeWrapper>\\n    <Position type='relative'>\\n      <MultiSelect\\n        id={text('id', 'Colors')}\\n        width={text('width', '300px')}\\n        options={object('Multi Select Options', options)}\\n        onChange={action('Multi Select changed')}\\n        style={object('styles', {\\n          position: 'absolute',\\n          top: '0px',\\n          left: '145px'\\n        })}\\n        isLoading={boolean('isLoading', false)}\\n        isNoOption={boolean('isNoOption', false)}\\n        menuOpen={boolean('menuOpen', false)}\\n        selected={object('Selected', selectedOptions)}\\n        allowSelectAll={boolean('allowSelectAll', false)}\\n        maximumSelected={number('maximum Selected', 4)}\\n        searchableKeys={array('Searchable Keys', [\\n          'value',\\n          'label',\\n          'phoneNumber',\\n          'age'\\n        ])}\\n      >\\n        {({ optionSelected, isMenuOpen, openMenu }: tMultiSelectChildren) => (\\n          <>\\n            {openMenu}\\n            <Button\\n              id='id'\\n              variant='button'\\n              onClick={() => {\\n                console.log(optionSelected)\\n                openMenu(!isMenuOpen)\\n                action('MultiSelect opened/closed')(isMenuOpen)\\n              }}\\n            >\\n              <React.Fragment>\\n                <span>Open MultiSelect</span>\\n                <FontIcon variant='angle-right' size='sm' />\\n              </React.Fragment>\\n            </Button>\\n          </>\\n        )}\\n      </MultiSelect>\\n    </Position>\\n  </ThemeWrapper>\\n), {__STORY__, __ADDS_MAP__,__MAIN_FILE_LOCATION__,__MODULE_DEPENDENCIES__,__LOCAL_DEPENDENCIES__,__SOURCE_PREFIX__,__IDS_TO_FRAMEWORKS__}), {__STORY__, __ADDS_MAP__,__MAIN_FILE_LOCATION__,__MODULE_DEPENDENCIES__,__LOCAL_DEPENDENCIES__,__SOURCE_PREFIX__,__IDS_TO_FRAMEWORKS__});\",\"locationsMap\":{}},\"storySource\":{\"source\":\"\\n\\n// @ts-nocheck\\n// @ts-ignore\\nvar withSourceLoader = require('@storybook/source-loader/preview').withSource;\\n// @ts-ignore\\nvar addSourceDecorator = require(\\\"@storybook/source-loader/preview\\\").addSource;\\n// @ts-ignore\\nvar __SOURCE_PREFIX__ = \\\"/Users/farhanansari/Desktop/CODE/PrxProject/untitled folder/reactStoryBook/src/components/molecules/MultiSelect/stories\\\";\\n// @ts-ignore\\nvar __STORY__ = \\\"import React from 'react'\\\\nimport MultiSelect from '../index'\\\\nimport { path } from '../..'\\\\nimport ThemeWrapper from '../../../../utilities/components/ThemeWrapper'\\\\n\\\\nimport {\\\\n  text,\\\\n  object,\\\\n  withKnobs,\\\\n  boolean,\\\\n  number,\\\\n  array\\\\n} from '@storybook/addon-knobs'\\\\nimport { action } from '@storybook/addon-actions'\\\\nimport Button from '../../../atoms/Button'\\\\nimport Position from '../../Position'\\\\nimport FontIcon from '../../../atoms/FontIcon'\\\\nimport { tMultiSelectChildren } from '../interfaces'\\\\n\\\\nexport default {\\\\n  title: `${path}/MultiSelect`,\\\\n  component: MultiSelect,\\\\n  decorators: [withKnobs],\\\\n  parameters: {\\\\n    props: {\\\\n      propTablesExclude: [Button, ThemeWrapper, Position, FontIcon]\\\\n    }\\\\n  }\\\\n}\\\\n\\\\nconst options = [\\\\n  { value: 'ocean', label: 'Ocean', phoneNumber: '1234', age: '10' },\\\\n  { value: 'blue', label: 'Blue', phoneNumber: '455556', age: '12' },\\\\n  { value: 'purple', label: 'Purple', phoneNumber: '67778', age: '13' },\\\\n  { value: 'red', label: 'Red', phoneNumber: '89990', age: '14' },\\\\n  { value: 'orange', label: 'Orange', phoneNumber: '001323', age: '15' },\\\\n  { value: 'yellow', label: 'Yellow', phoneNumber: '99243452', age: '16' },\\\\n  { value: 'green', label: 'Green', phoneNumber: '120009', age: '18' },\\\\n  { value: 'forest', label: 'Forest', phoneNumber: '0000000', age: '20' },\\\\n  { value: 'slate', label: 'Slate', phoneNumber: '11111111', age: '30' },\\\\n  { value: 'silver', label: 'Silver', phoneNumber: '22222222', age: '40' }\\\\n]\\\\nconst selectedOptions = [\\\\n  { value: 'ocean', label: 'Ocean', phoneNumber: '1234', age: '10' },\\\\n  { value: 'blue', label: 'Blue', phoneNumber: '455556', age: '12' },\\\\n  { value: 'purple', label: 'Purple', phoneNumber: '67778', age: '13' },\\\\n  { value: 'red', label: 'Red', phoneNumber: '89990', age: '14' },\\\\n  { value: 'forest', label: 'Forest', phoneNumber: '0000000', age: '20' },\\\\n  { value: 'slate', label: 'Slate', phoneNumber: '11111111', age: '30' }\\\\n]\\\\n\\\\nexport const withButton = () => (\\\\n  <ThemeWrapper>\\\\n    <Position type='relative'>\\\\n      <MultiSelect\\\\n        id={text('id', 'Colors')}\\\\n        width={text('width', '300px')}\\\\n        options={object('Multi Select Options', options)}\\\\n        onChange={action('Multi Select changed')}\\\\n        style={object('styles', {\\\\n          position: 'absolute',\\\\n          top: '0px',\\\\n          left: '145px'\\\\n        })}\\\\n        isLoading={boolean('isLoading', false)}\\\\n        isNoOption={boolean('isNoOption', false)}\\\\n        menuOpen={boolean('menuOpen', false)}\\\\n        selected={object('Selected', selectedOptions)}\\\\n        allowSelectAll={boolean('allowSelectAll', false)}\\\\n        maximumSelected={number('maximum Selected', 4)}\\\\n        searchableKeys={array('Searchable Keys', [\\\\n          'value',\\\\n          'label',\\\\n          'phoneNumber',\\\\n          'age'\\\\n        ])}\\\\n      >\\\\n        {({ optionSelected, isMenuOpen, openMenu }: tMultiSelectChildren) => (\\\\n          <>\\\\n            {openMenu}\\\\n            <Button\\\\n              id='id'\\\\n              variant='button'\\\\n              onClick={() => {\\\\n                console.log(optionSelected)\\\\n                openMenu(!isMenuOpen)\\\\n                action('MultiSelect opened/closed')(isMenuOpen)\\\\n              }}\\\\n            >\\\\n              <React.Fragment>\\\\n                <span>Open MultiSelect</span>\\\\n                <FontIcon variant='angle-right' size='sm' />\\\\n              </React.Fragment>\\\\n            </Button>\\\\n          </>\\\\n        )}\\\\n      </MultiSelect>\\\\n    </Position>\\\\n  </ThemeWrapper>\\\\n)\\\\n\\\";\\n// @ts-ignore\\nvar __ADDS_MAP__ = {};\\n// @ts-ignore\\nvar __MAIN_FILE_LOCATION__ = \\\"/withButton.stories.tsx\\\";\\n// @ts-ignore\\nvar __MODULE_DEPENDENCIES__ = [];\\n// @ts-ignore\\nvar __LOCAL_DEPENDENCIES__ = {};\\n// @ts-ignore\\nvar __IDS_TO_FRAMEWORKS__ = {};\\n        \\nimport React from 'react'\\nimport MultiSelect from '../index'\\nimport { path } from '../..'\\nimport ThemeWrapper from '../../../../utilities/components/ThemeWrapper'\\n\\nimport {\\n  text,\\n  object,\\n  withKnobs,\\n  boolean,\\n  number,\\n  array\\n} from '@storybook/addon-knobs'\\nimport { action } from '@storybook/addon-actions'\\nimport Button from '../../../atoms/Button'\\nimport Position from '../../Position'\\nimport FontIcon from '../../../atoms/FontIcon'\\nimport { tMultiSelectChildren } from '../interfaces'\\n\\nexport default {\\n  title: `${path}/MultiSelect`,\\n  component: MultiSelect,\\n  decorators: [withKnobs],\\n  parameters: {\\\"storySource\\\":{\\\"source\\\":\\\"import React from 'react'\\\\nimport MultiSelect from '../index'\\\\nimport { path } from '../..'\\\\nimport ThemeWrapper from '../../../../utilities/components/ThemeWrapper'\\\\n\\\\nimport {\\\\n  text,\\\\n  object,\\\\n  withKnobs,\\\\n  boolean,\\\\n  number,\\\\n  array\\\\n} from '@storybook/addon-knobs'\\\\nimport { action } from '@storybook/addon-actions'\\\\nimport Button from '../../../atoms/Button'\\\\nimport Position from '../../Position'\\\\nimport FontIcon from '../../../atoms/FontIcon'\\\\nimport { tMultiSelectChildren } from '../interfaces'\\\\n\\\\nexport default {\\\\n  title: `${path}/MultiSelect`,\\\\n  component: MultiSelect,\\\\n  decorators: [withKnobs],\\\\n  parameters: {\\\\n    props: {\\\\n      propTablesExclude: [Button, ThemeWrapper, Position, FontIcon]\\\\n    }\\\\n  }\\\\n}\\\\n\\\\nconst options = [\\\\n  { value: 'ocean', label: 'Ocean', phoneNumber: '1234', age: '10' },\\\\n  { value: 'blue', label: 'Blue', phoneNumber: '455556', age: '12' },\\\\n  { value: 'purple', label: 'Purple', phoneNumber: '67778', age: '13' },\\\\n  { value: 'red', label: 'Red', phoneNumber: '89990', age: '14' },\\\\n  { value: 'orange', label: 'Orange', phoneNumber: '001323', age: '15' },\\\\n  { value: 'yellow', label: 'Yellow', phoneNumber: '99243452', age: '16' },\\\\n  { value: 'green', label: 'Green', phoneNumber: '120009', age: '18' },\\\\n  { value: 'forest', label: 'Forest', phoneNumber: '0000000', age: '20' },\\\\n  { value: 'slate', label: 'Slate', phoneNumber: '11111111', age: '30' },\\\\n  { value: 'silver', label: 'Silver', phoneNumber: '22222222', age: '40' }\\\\n]\\\\nconst selectedOptions = [\\\\n  { value: 'ocean', label: 'Ocean', phoneNumber: '1234', age: '10' },\\\\n  { value: 'blue', label: 'Blue', phoneNumber: '455556', age: '12' },\\\\n  { value: 'purple', label: 'Purple', phoneNumber: '67778', age: '13' },\\\\n  { value: 'red', label: 'Red', phoneNumber: '89990', age: '14' },\\\\n  { value: 'forest', label: 'Forest', phoneNumber: '0000000', age: '20' },\\\\n  { value: 'slate', label: 'Slate', phoneNumber: '11111111', age: '30' }\\\\n]\\\\n\\\\nexport const withButton = () => (\\\\n  <ThemeWrapper>\\\\n    <Position type='relative'>\\\\n      <MultiSelect\\\\n        id={text('id', 'Colors')}\\\\n        width={text('width', '300px')}\\\\n        options={object('Multi Select Options', options)}\\\\n        onChange={action('Multi Select changed')}\\\\n        style={object('styles', {\\\\n          position: 'absolute',\\\\n          top: '0px',\\\\n          left: '145px'\\\\n        })}\\\\n        isLoading={boolean('isLoading', false)}\\\\n        isNoOption={boolean('isNoOption', false)}\\\\n        menuOpen={boolean('menuOpen', false)}\\\\n        selected={object('Selected', selectedOptions)}\\\\n        allowSelectAll={boolean('allowSelectAll', false)}\\\\n        maximumSelected={number('maximum Selected', 4)}\\\\n        searchableKeys={array('Searchable Keys', [\\\\n          'value',\\\\n          'label',\\\\n          'phoneNumber',\\\\n          'age'\\\\n        ])}\\\\n      >\\\\n        {({ optionSelected, isMenuOpen, openMenu }: tMultiSelectChildren) => (\\\\n          <>\\\\n            {openMenu}\\\\n            <Button\\\\n              id='id'\\\\n              variant='button'\\\\n              onClick={() => {\\\\n                console.log(optionSelected)\\\\n                openMenu(!isMenuOpen)\\\\n                action('MultiSelect opened/closed')(isMenuOpen)\\\\n              }}\\\\n            >\\\\n              <React.Fragment>\\\\n                <span>Open MultiSelect</span>\\\\n                <FontIcon variant='angle-right' size='sm' />\\\\n              </React.Fragment>\\\\n            </Button>\\\\n          </>\\\\n        )}\\\\n      </MultiSelect>\\\\n    </Position>\\\\n  </ThemeWrapper>\\\\n)\\\\n\\\",\\\"locationsMap\\\":{}},\\n    props: {\\n      propTablesExclude: [Button, ThemeWrapper, Position, FontIcon]\\n    }\\n  },}\\n\\nconst options = [\\n  { value: 'ocean', label: 'Ocean', phoneNumber: '1234', age: '10' },\\n  { value: 'blue', label: 'Blue', phoneNumber: '455556', age: '12' },\\n  { value: 'purple', label: 'Purple', phoneNumber: '67778', age: '13' },\\n  { value: 'red', label: 'Red', phoneNumber: '89990', age: '14' },\\n  { value: 'orange', label: 'Orange', phoneNumber: '001323', age: '15' },\\n  { value: 'yellow', label: 'Yellow', phoneNumber: '99243452', age: '16' },\\n  { value: 'green', label: 'Green', phoneNumber: '120009', age: '18' },\\n  { value: 'forest', label: 'Forest', phoneNumber: '0000000', age: '20' },\\n  { value: 'slate', label: 'Slate', phoneNumber: '11111111', age: '30' },\\n  { value: 'silver', label: 'Silver', phoneNumber: '22222222', age: '40' }\\n]\\nconst selectedOptions = [\\n  { value: 'ocean', label: 'Ocean', phoneNumber: '1234', age: '10' },\\n  { value: 'blue', label: 'Blue', phoneNumber: '455556', age: '12' },\\n  { value: 'purple', label: 'Purple', phoneNumber: '67778', age: '13' },\\n  { value: 'red', label: 'Red', phoneNumber: '89990', age: '14' },\\n  { value: 'forest', label: 'Forest', phoneNumber: '0000000', age: '20' },\\n  { value: 'slate', label: 'Slate', phoneNumber: '11111111', age: '30' }\\n]\\n\\nexport const withButton = addSourceDecorator(() => (\\n  <ThemeWrapper>\\n    <Position type='relative'>\\n      <MultiSelect\\n        id={text('id', 'Colors')}\\n        width={text('width', '300px')}\\n        options={object('Multi Select Options', options)}\\n        onChange={action('Multi Select changed')}\\n        style={object('styles', {\\n          position: 'absolute',\\n          top: '0px',\\n          left: '145px'\\n        })}\\n        isLoading={boolean('isLoading', false)}\\n        isNoOption={boolean('isNoOption', false)}\\n        menuOpen={boolean('menuOpen', false)}\\n        selected={object('Selected', selectedOptions)}\\n        allowSelectAll={boolean('allowSelectAll', false)}\\n        maximumSelected={number('maximum Selected', 4)}\\n        searchableKeys={array('Searchable Keys', [\\n          'value',\\n          'label',\\n          'phoneNumber',\\n          'age'\\n        ])}\\n      >\\n        {({ optionSelected, isMenuOpen, openMenu }: tMultiSelectChildren) => (\\n          <>\\n            {openMenu}\\n            <Button\\n              id='id'\\n              variant='button'\\n              onClick={() => {\\n                console.log(optionSelected)\\n                openMenu(!isMenuOpen)\\n                action('MultiSelect opened/closed')(isMenuOpen)\\n              }}\\n            >\\n              <React.Fragment>\\n                <span>Open MultiSelect</span>\\n                <FontIcon variant='angle-right' size='sm' />\\n              </React.Fragment>\\n            </Button>\\n          </>\\n        )}\\n      </MultiSelect>\\n    </Position>\\n  </ThemeWrapper>\\n), {__STORY__, __ADDS_MAP__,__MAIN_FILE_LOCATION__,__MODULE_DEPENDENCIES__,__LOCAL_DEPENDENCIES__,__SOURCE_PREFIX__,__IDS_TO_FRAMEWORKS__});\",\"locationsMap\":{}},\"storySource\":{\"source\":\"import React from 'react'\\nimport MultiSelect from '../index'\\nimport { path } from '../..'\\nimport ThemeWrapper from '../../../../utilities/components/ThemeWrapper'\\n\\nimport {\\n  text,\\n  object,\\n  withKnobs,\\n  boolean,\\n  number,\\n  array\\n} from '@storybook/addon-knobs'\\nimport { action } from '@storybook/addon-actions'\\nimport Button from '../../../atoms/Button'\\nimport Position from '../../Position'\\nimport FontIcon from '../../../atoms/FontIcon'\\nimport { tMultiSelectChildren } from '../interfaces'\\n\\nexport default {\\n  title: `${path}/MultiSelect`,\\n  component: MultiSelect,\\n  decorators: [withKnobs],\\n  parameters: {\\n    props: {\\n      propTablesExclude: [Button, ThemeWrapper, Position, FontIcon]\\n    }\\n  }\\n}\\n\\nconst options = [\\n  { value: 'ocean', label: 'Ocean', phoneNumber: '1234', age: '10' },\\n  { value: 'blue', label: 'Blue', phoneNumber: '455556', age: '12' },\\n  { value: 'purple', label: 'Purple', phoneNumber: '67778', age: '13' },\\n  { value: 'red', label: 'Red', phoneNumber: '89990', age: '14' },\\n  { value: 'orange', label: 'Orange', phoneNumber: '001323', age: '15' },\\n  { value: 'yellow', label: 'Yellow', phoneNumber: '99243452', age: '16' },\\n  { value: 'green', label: 'Green', phoneNumber: '120009', age: '18' },\\n  { value: 'forest', label: 'Forest', phoneNumber: '0000000', age: '20' },\\n  { value: 'slate', label: 'Slate', phoneNumber: '11111111', age: '30' },\\n  { value: 'silver', label: 'Silver', phoneNumber: '22222222', age: '40' }\\n]\\nconst selectedOptions = [\\n  { value: 'ocean', label: 'Ocean', phoneNumber: '1234', age: '10' },\\n  { value: 'blue', label: 'Blue', phoneNumber: '455556', age: '12' },\\n  { value: 'purple', label: 'Purple', phoneNumber: '67778', age: '13' },\\n  { value: 'red', label: 'Red', phoneNumber: '89990', age: '14' },\\n  { value: 'forest', label: 'Forest', phoneNumber: '0000000', age: '20' },\\n  { value: 'slate', label: 'Slate', phoneNumber: '11111111', age: '30' }\\n]\\n\\nexport const withButton = () => (\\n  <ThemeWrapper>\\n    <Position type='relative'>\\n      <MultiSelect\\n        id={text('id', 'Colors')}\\n        width={text('width', '300px')}\\n        options={object('Multi Select Options', options)}\\n        onChange={action('Multi Select changed')}\\n        style={object('styles', {\\n          position: 'absolute',\\n          top: '0px',\\n          left: '145px'\\n        })}\\n        isLoading={boolean('isLoading', false)}\\n        isNoOption={boolean('isNoOption', false)}\\n        menuOpen={boolean('menuOpen', false)}\\n        selected={object('Selected', selectedOptions)}\\n        allowSelectAll={boolean('allowSelectAll', false)}\\n        maximumSelected={number('maximum Selected', 4)}\\n        searchableKeys={array('Searchable Keys', [\\n          'value',\\n          'label',\\n          'phoneNumber',\\n          'age'\\n        ])}\\n      >\\n        {({ optionSelected, isMenuOpen, openMenu }: tMultiSelectChildren) => (\\n          <>\\n            {openMenu}\\n            <Button\\n              id='id'\\n              variant='button'\\n              onClick={() => {\\n                console.log(optionSelected)\\n                openMenu(!isMenuOpen)\\n                action('MultiSelect opened/closed')(isMenuOpen)\\n              }}\\n            >\\n              <React.Fragment>\\n                <span>Open MultiSelect</span>\\n                <FontIcon variant='angle-right' size='sm' />\\n              </React.Fragment>\\n            </Button>\\n          </>\\n        )}\\n      </MultiSelect>\\n    </Position>\\n  </ThemeWrapper>\\n)\\n\",\"locationsMap\":{}},\n    props: {\n      propTablesExclude: [Button, ThemeWrapper, Position, FontIcon]\n    }\n  },}\n\nconst options = [\n  { value: 'ocean', label: 'Ocean', phoneNumber: '1234', age: '10' },\n  { value: 'blue', label: 'Blue', phoneNumber: '455556', age: '12' },\n  { value: 'purple', label: 'Purple', phoneNumber: '67778', age: '13' },\n  { value: 'red', label: 'Red', phoneNumber: '89990', age: '14' },\n  { value: 'orange', label: 'Orange', phoneNumber: '001323', age: '15' },\n  { value: 'yellow', label: 'Yellow', phoneNumber: '99243452', age: '16' },\n  { value: 'green', label: 'Green', phoneNumber: '120009', age: '18' },\n  { value: 'forest', label: 'Forest', phoneNumber: '0000000', age: '20' },\n  { value: 'slate', label: 'Slate', phoneNumber: '11111111', age: '30' },\n  { value: 'silver', label: 'Silver', phoneNumber: '22222222', age: '40' }\n]\nconst selectedOptions = [\n  { value: 'ocean', label: 'Ocean', phoneNumber: '1234', age: '10' },\n  { value: 'blue', label: 'Blue', phoneNumber: '455556', age: '12' },\n  { value: 'purple', label: 'Purple', phoneNumber: '67778', age: '13' },\n  { value: 'red', label: 'Red', phoneNumber: '89990', age: '14' },\n  { value: 'forest', label: 'Forest', phoneNumber: '0000000', age: '20' },\n  { value: 'slate', label: 'Slate', phoneNumber: '11111111', age: '30' }\n]\n\nexport const withButton = addSourceDecorator(addSourceDecorator(addSourceDecorator(() => (\n  <ThemeWrapper>\n    <Position type='relative'>\n      <MultiSelect\n        id={text('id', 'Colors')}\n        width={text('width', '300px')}\n        options={object('Multi Select Options', options)}\n        onChange={action('Multi Select changed')}\n        style={object('styles', {\n          position: 'absolute',\n          top: '0px',\n          left: '145px'\n        })}\n        isLoading={boolean('isLoading', false)}\n        isNoOption={boolean('isNoOption', false)}\n        menuOpen={boolean('menuOpen', false)}\n        selected={object('Selected', selectedOptions)}\n        allowSelectAll={boolean('allowSelectAll', false)}\n        maximumSelected={number('maximum Selected', 4)}\n        searchableKeys={array('Searchable Keys', [\n          'value',\n          'label',\n          'phoneNumber',\n          'age'\n        ])}\n      >\n        {({ optionSelected, isMenuOpen, openMenu }: tMultiSelectChildren) => (\n          <>\n            {openMenu}\n            <Button\n              id='id'\n              variant='button'\n              onClick={() => {\n                console.log(optionSelected)\n                openMenu(!isMenuOpen)\n                action('MultiSelect opened/closed')(isMenuOpen)\n              }}\n            >\n              <React.Fragment>\n                <span>Open MultiSelect</span>\n                <FontIcon variant='angle-right' size='sm' />\n              </React.Fragment>\n            </Button>\n          </>\n        )}\n      </MultiSelect>\n    </Position>\n  </ThemeWrapper>\n), {__STORY__, __ADDS_MAP__,__MAIN_FILE_LOCATION__,__MODULE_DEPENDENCIES__,__LOCAL_DEPENDENCIES__,__SOURCE_PREFIX__,__IDS_TO_FRAMEWORKS__}), {__STORY__, __ADDS_MAP__,__MAIN_FILE_LOCATION__,__MODULE_DEPENDENCIES__,__LOCAL_DEPENDENCIES__,__SOURCE_PREFIX__,__IDS_TO_FRAMEWORKS__}), {__STORY__, __ADDS_MAP__,__MAIN_FILE_LOCATION__,__MODULE_DEPENDENCIES__,__LOCAL_DEPENDENCIES__,__SOURCE_PREFIX__,__IDS_TO_FRAMEWORKS__});"],"sourceRoot":""},"metadata":{},"sourceType":"module"}