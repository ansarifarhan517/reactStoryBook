{"ast":null,"code":"var Draggable = function Draggable(elementId, headerId) {\n  var element = document.getElementById(elementId);\n  var pos1 = 0;\n  var pos2 = 0;\n  var pos3 = 0;\n  var pos4 = 0;\n\n  var dragMouseDown = function dragMouseDown(e) {\n    e = e || window.event;\n    e.preventDefault(); // get the mouse cursor position at startup:\n\n    pos3 = e.clientX;\n    pos4 = e.clientY;\n    document.onmouseup = closeDragElement; // call a function whenever the cursor moves:\n\n    document.onmousemove = elementDrag;\n  };\n\n  var elementDrag = function elementDrag(e) {\n    e = e || window.event;\n    e.preventDefault(); // calculate the new cursor position:\n\n    pos1 = pos3 - e.clientX;\n    pos2 = pos4 - e.clientY;\n    pos3 = e.clientX;\n    pos4 = e.clientY; // set the element's new position:\n\n    if (element !== null) {\n      element.style.top = element.offsetTop - pos2 + 'px';\n      element.style.left = element.offsetLeft - pos1 + 'px';\n    }\n  };\n\n  var closeDragElement = function closeDragElement() {\n    /* stop moving when mouse button is released: */\n    document.onmouseup = null;\n    document.onmousemove = null;\n  };\n\n  if (document.getElementById(headerId)) {\n    /* if present, the header is where you move the DIV from: */\n    var obj = document.getElementById(headerId);\n\n    if (obj !== null) {\n      obj.onmousedown = dragMouseDown;\n    }\n    /* otherwise, move the DIV from anywhere inside the DIV: */\n\n  } else {\n    if (element !== null) {\n      element.onmousedown = dragMouseDown;\n    }\n  }\n};\n\nexport default Draggable;","map":{"version":3,"sources":["/Users/farhanansari/Code/ui-library/src/components/organisms/AdvancedFilter/components/Draggable/index.tsx"],"names":["Draggable","elementId","headerId","element","document","getElementById","pos1","pos2","pos3","pos4","dragMouseDown","e","window","event","preventDefault","clientX","clientY","onmouseup","closeDragElement","onmousemove","elementDrag","style","top","offsetTop","left","offsetLeft","obj","onmousedown"],"mappings":"AAAA,IAAMA,SAAS,GAAG,SAAZA,SAAY,CAACC,SAAD,EAAoBC,QAApB,EAAyC;AACzD,MAAMC,OAAO,GAAGC,QAAQ,CAACC,cAAT,CAAwBJ,SAAxB,CAAhB;AACA,MAAIK,IAAI,GAAG,CAAX;AACA,MAAIC,IAAI,GAAG,CAAX;AACA,MAAIC,IAAI,GAAG,CAAX;AACA,MAAIC,IAAI,GAAG,CAAX;;AAEA,MAAMC,aAAa,GAAG,SAAhBA,aAAgB,CAACC,CAAD,EAAmB;AACvCA,IAAAA,CAAC,GAAGA,CAAC,IAAIC,MAAM,CAACC,KAAhB;AACAF,IAAAA,CAAC,CAACG,cAAF,GAFuC,CAGvC;;AACAN,IAAAA,IAAI,GAAGG,CAAC,CAACI,OAAT;AACAN,IAAAA,IAAI,GAAGE,CAAC,CAACK,OAAT;AACAZ,IAAAA,QAAQ,CAACa,SAAT,GAAqBC,gBAArB,CANuC,CAOvC;;AACAd,IAAAA,QAAQ,CAACe,WAAT,GAAuBC,WAAvB;AACD,GATD;;AAWA,MAAMA,WAAW,GAAG,SAAdA,WAAc,CAACT,CAAD,EAAmB;AACrCA,IAAAA,CAAC,GAAGA,CAAC,IAAIC,MAAM,CAACC,KAAhB;AACAF,IAAAA,CAAC,CAACG,cAAF,GAFqC,CAGrC;;AACAR,IAAAA,IAAI,GAAGE,IAAI,GAAGG,CAAC,CAACI,OAAhB;AACAR,IAAAA,IAAI,GAAGE,IAAI,GAAGE,CAAC,CAACK,OAAhB;AACAR,IAAAA,IAAI,GAAGG,CAAC,CAACI,OAAT;AACAN,IAAAA,IAAI,GAAGE,CAAC,CAACK,OAAT,CAPqC,CAQrC;;AACA,QAAIb,OAAO,KAAK,IAAhB,EAAsB;AACpBA,MAAAA,OAAO,CAACkB,KAAR,CAAcC,GAAd,GAAoBnB,OAAO,CAACoB,SAAR,GAAoBhB,IAApB,GAA2B,IAA/C;AACAJ,MAAAA,OAAO,CAACkB,KAAR,CAAcG,IAAd,GAAqBrB,OAAO,CAACsB,UAAR,GAAqBnB,IAArB,GAA4B,IAAjD;AACD;AACF,GAbD;;AAeA,MAAMY,gBAAgB,GAAG,SAAnBA,gBAAmB,GAAM;AAC7B;AACAd,IAAAA,QAAQ,CAACa,SAAT,GAAqB,IAArB;AACAb,IAAAA,QAAQ,CAACe,WAAT,GAAuB,IAAvB;AACD,GAJD;;AAMA,MAAIf,QAAQ,CAACC,cAAT,CAAwBH,QAAxB,CAAJ,EAAuC;AACrC;AACA,QAAMwB,GAAG,GAAGtB,QAAQ,CAACC,cAAT,CAAwBH,QAAxB,CAAZ;;AACA,QAAIwB,GAAG,KAAK,IAAZ,EAAkB;AAChBA,MAAAA,GAAG,CAACC,WAAJ,GAAkBjB,aAAlB;AACD;AACD;;AACD,GAPD,MAOO;AACL,QAAIP,OAAO,KAAK,IAAhB,EAAsB;AACpBA,MAAAA,OAAO,CAACwB,WAAR,GAAsBjB,aAAtB;AACD;AACF;AACF,CAnDD;;AAqDA,eAAeV,SAAf","sourcesContent":["const Draggable = (elementId: string, headerId: string) => {\n  const element = document.getElementById(elementId)\n  let pos1 = 0\n  let pos2 = 0\n  let pos3 = 0\n  let pos4 = 0\n\n  const dragMouseDown = (e: MouseEvent) => {\n    e = e || window.event\n    e.preventDefault()\n    // get the mouse cursor position at startup:\n    pos3 = e.clientX\n    pos4 = e.clientY\n    document.onmouseup = closeDragElement\n    // call a function whenever the cursor moves:\n    document.onmousemove = elementDrag\n  }\n\n  const elementDrag = (e: MouseEvent) => {\n    e = e || window.event\n    e.preventDefault()\n    // calculate the new cursor position:\n    pos1 = pos3 - e.clientX\n    pos2 = pos4 - e.clientY\n    pos3 = e.clientX\n    pos4 = e.clientY\n    // set the element's new position:\n    if (element !== null) {\n      element.style.top = element.offsetTop - pos2 + 'px'\n      element.style.left = element.offsetLeft - pos1 + 'px'\n    }\n  }\n\n  const closeDragElement = () => {\n    /* stop moving when mouse button is released: */\n    document.onmouseup = null\n    document.onmousemove = null\n  }\n\n  if (document.getElementById(headerId)) {\n    /* if present, the header is where you move the DIV from: */\n    const obj = document.getElementById(headerId)\n    if (obj !== null) {\n      obj.onmousedown = dragMouseDown\n    }\n    /* otherwise, move the DIV from anywhere inside the DIV: */\n  } else {\n    if (element !== null) {\n      element.onmousedown = dragMouseDown\n    }\n  }\n}\n\nexport default Draggable\n"]},"metadata":{},"sourceType":"module"}