{"ast":null,"code":"import _slicedToArray from \"/Users/farhanansari/Desktop/CODE/PrxProject/untitled folder/reactStoryBook/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/slicedToArray\";\n\nvar _this = this,\n    _jsxFileName = \"/Users/farhanansari/Desktop/CODE/PrxProject/untitled folder/reactStoryBook/src/components/molecules/Accordian/index.tsx\";\n\nimport React from 'react';\nimport { AccordianContainer } from './styles';\nimport Box from '../../atoms/Box';\nimport FontIcon from '../../atoms/FontIcon';\nimport Toggle from '../../atoms/Toggle';\nimport Tooltip from '../Tooltip';\n\nvar defaultCallback = function defaultCallback() {};\n\nvar Accordion = function Accordion(_ref) {\n  var id = _ref.id,\n      _ref$expanded = _ref.expanded,\n      expanded = _ref$expanded === void 0 ? false : _ref$expanded,\n      _ref$onToggle = _ref.onToggle,\n      onToggle = _ref$onToggle === void 0 ? defaultCallback : _ref$onToggle,\n      _ref$hideChevron = _ref.hideChevron,\n      hideChevron = _ref$hideChevron === void 0 ? false : _ref$hideChevron,\n      _ref$children = _ref.children,\n      header = _ref$children.header,\n      content = _ref$children.content,\n      _ref$showToggleSwitch = _ref.showToggleSwitch,\n      showToggleSwitch = _ref$showToggleSwitch === void 0 ? false : _ref$showToggleSwitch,\n      onToggleSwitch = _ref.onToggleSwitch,\n      _ref$isToggleChecked = _ref.isToggleChecked,\n      isToggleChecked = _ref$isToggleChecked === void 0 ? false : _ref$isToggleChecked,\n      switchTooltipMessage = _ref.switchTooltipMessage,\n      _ref$switchTooltipPro = _ref.switchTooltipProps,\n      switchTooltipProps = _ref$switchTooltipPro === void 0 ? {} : _ref$switchTooltipPro,\n      _ref$toggleSwitchStyl = _ref.toggleSwitchStyle,\n      toggleSwitchStyle = _ref$toggleSwitchStyl === void 0 ? {} : _ref$toggleSwitchStyl,\n      _ref$toggleSwitchDisa = _ref.toggleSwitchDisable,\n      toggleSwitchDisable = _ref$toggleSwitchDisa === void 0 ? false : _ref$toggleSwitchDisa;\n  var contentRef = React.useRef(null);\n\n  var _React$useState = React.useState(0),\n      _React$useState2 = _slicedToArray(_React$useState, 2),\n      maxHeight = _React$useState2[0],\n      setMaxHeight = _React$useState2[1];\n\n  var _React$useState3 = React.useState(0),\n      _React$useState4 = _slicedToArray(_React$useState3, 2),\n      contentHeight = _React$useState4[0],\n      setContentHeight = _React$useState4[1];\n\n  React.useEffect(function () {\n    if (expanded) {\n      setMaxHeight(contentHeight || 0);\n      setMaxHeight('inherit');\n    } else {\n      setMaxHeight(contentHeight || 0);\n      setMaxHeight(0);\n    }\n  }, [expanded]);\n  React.useEffect(function () {\n    var _contentRef$current;\n\n    setContentHeight(((_contentRef$current = contentRef.current) === null || _contentRef$current === void 0 ? void 0 : _contentRef$current.scrollHeight) || 0);\n  }, [content]);\n  React.useEffect(function () {\n    if (expanded) {\n      setMaxHeight(contentHeight || 0);\n      setMaxHeight('inherit');\n    }\n  }, [contentHeight]);\n\n  var handleClick = function handleClick() {\n    onToggle(id, !expanded);\n  };\n\n  return /*#__PURE__*/React.createElement(AccordianContainer, {\n    id: \"accordion-\".concat(id),\n    className: \"accordian__container\",\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 53,\n      columnNumber: 5\n    }\n  }, /*#__PURE__*/React.createElement(Box, {\n    display: \"flex\",\n    bgColor: expanded ? 'primary.main' : 'grey.200',\n    color: expanded ? 'white' : 'inherit',\n    className: 'accordion__header__container ' + (expanded ? ' accordion__header__container_expanded' : ''),\n    style: hideChevron ? {\n      cursor: 'unset'\n    } : {},\n    onClick: !showToggleSwitch ? handleClick : undefined,\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 54,\n      columnNumber: 7\n    }\n  }, /*#__PURE__*/React.createElement(\"div\", {\n    className: \"accordion__header\",\n    onClick: showToggleSwitch ? handleClick : undefined,\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 62,\n      columnNumber: 9\n    }\n  }, header), showToggleSwitch && /*#__PURE__*/React.createElement(Box, {\n    ml: \"10px\",\n    fullHeight: true,\n    style: toggleSwitchStyle,\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 64,\n      columnNumber: 11\n    }\n  }, /*#__PURE__*/React.createElement(Tooltip, Object.assign({\n    message: switchTooltipMessage,\n    hover: true,\n    hide: !switchTooltipMessage\n  }, switchTooltipProps, {\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 65,\n      columnNumber: 13\n    }\n  }), /*#__PURE__*/React.createElement(Toggle, {\n    id: \"toggle-\".concat(id),\n    checked: isToggleChecked,\n    onChange: function onChange(_e) {\n      var _e$target;\n\n      onToggleSwitch && onToggleSwitch(_e === null || _e === void 0 ? void 0 : (_e$target = _e.target) === null || _e$target === void 0 ? void 0 : _e$target.checked);\n    },\n    disabled: toggleSwitchDisable,\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 71,\n      columnNumber: 13\n    }\n  }))), !hideChevron && /*#__PURE__*/React.createElement(Box, {\n    ml: \"10px\",\n    fullHeight: true,\n    className: \"chevron\",\n    style: {\n      transform: expanded ? 'rotate(180deg)' : 'rotate(0deg)'\n    },\n    onClick: showToggleSwitch ? handleClick : undefined,\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 82,\n      columnNumber: 11\n    }\n  }, /*#__PURE__*/React.createElement(FontIcon, {\n    variant: \"icomoon-angle-bottom\",\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 91,\n      columnNumber: 13\n    }\n  }))), /*#__PURE__*/React.createElement(\"div\", {\n    style: {\n      maxHeight: maxHeight,\n      overflow: expanded ? 'visible' : 'auto'\n    },\n    className: \"accordion__content__container\",\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 95,\n      columnNumber: 7\n    }\n  }, /*#__PURE__*/React.createElement(\"div\", {\n    ref: contentRef,\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 102,\n      columnNumber: 9\n    }\n  }, content)));\n};\n\nexport default Accordion;","map":{"version":3,"sources":["/Users/farhanansari/Desktop/CODE/PrxProject/untitled folder/reactStoryBook/src/components/molecules/Accordian/index.tsx"],"names":["React","AccordianContainer","Box","FontIcon","Toggle","Tooltip","defaultCallback","Accordion","id","expanded","onToggle","hideChevron","children","header","content","showToggleSwitch","onToggleSwitch","isToggleChecked","switchTooltipMessage","switchTooltipProps","toggleSwitchStyle","toggleSwitchDisable","contentRef","useRef","useState","maxHeight","setMaxHeight","contentHeight","setContentHeight","useEffect","current","scrollHeight","handleClick","cursor","undefined","_e","target","checked","transform","overflow"],"mappings":"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","sourcesContent":["import React from 'react'\nimport { IAccordianProps } from './interfaces'\nimport { AccordianContainer } from './styles'\nimport Box from '../../atoms/Box'\nimport FontIcon from '../../atoms/FontIcon'\nimport Toggle from '../../atoms/Toggle'\nimport Tooltip from '../Tooltip'\nconst defaultCallback = () => {}\nconst Accordion = ({\n  id,\n  expanded = false,\n  onToggle = defaultCallback,\n  hideChevron = false,\n  children: { header, content },\n  showToggleSwitch = false,\n  onToggleSwitch,\n  isToggleChecked = false,\n  switchTooltipMessage,\n  switchTooltipProps = {},\n  toggleSwitchStyle={},\n  toggleSwitchDisable= false\n}: IAccordianProps) => {\n  const contentRef = React.useRef<HTMLDivElement>(null)\n  const [maxHeight, setMaxHeight] = React.useState<number | string>(0)\n  const [contentHeight, setContentHeight] = React.useState<number>(0)\n\n  React.useEffect(() => {\n    if (expanded) {\n      setMaxHeight(contentHeight || 0)\n      setMaxHeight('inherit')\n    } else {\n      setMaxHeight(contentHeight || 0)\n      setMaxHeight(0)\n    }\n  }, [expanded])\n\n  React.useEffect(() => {\n    setContentHeight(contentRef.current?.scrollHeight || 0)\n  }, [content])\n\n  React.useEffect(() => {\n    if (expanded) {\n      setMaxHeight(contentHeight || 0)\n      setMaxHeight('inherit')\n    }\n  }, [contentHeight])\n\n  const handleClick = () => {\n    onToggle(id, !expanded)\n  }\n\n  return (\n    <AccordianContainer id={`accordion-${id}`} className='accordian__container'>\n      <Box\n        display='flex'\n        bgColor={expanded ? 'primary.main' : 'grey.200'}\n        color={expanded ? 'white' : 'inherit'}\n        className={'accordion__header__container '+ ( expanded? ' accordion__header__container_expanded':'') }\n        style={hideChevron ? { cursor: 'unset' } : {}}\n        onClick={ !showToggleSwitch ?  handleClick : undefined }\n      >\n        <div className='accordion__header' onClick={showToggleSwitch ?  handleClick : undefined }>{header}</div>\n        {showToggleSwitch && (\n          <Box ml='10px' fullHeight  style={toggleSwitchStyle}>\n            <Tooltip\n              message={switchTooltipMessage}\n              hover\n              hide={!switchTooltipMessage}\n              {...switchTooltipProps}\n            >\n            <Toggle \n              id={`toggle-${id}`}\n              checked={isToggleChecked}\n              onChange={(_e) => { onToggleSwitch && onToggleSwitch(_e?.target?.checked)}\n              }\n              disabled={toggleSwitchDisable}\n            />\n            </Tooltip>\n          </Box>\n        )}\n        {!hideChevron && (\n          <Box\n            ml='10px'\n            fullHeight\n            className='chevron'\n            style={{\n              transform: expanded ? 'rotate(180deg)' : 'rotate(0deg)'\n            }}\n            onClick={showToggleSwitch ?  handleClick : undefined }\n          >\n            <FontIcon variant='icomoon-angle-bottom' />\n          </Box>\n        )}\n      </Box>\n      <div\n        style={{\n          maxHeight,\n          overflow: expanded ? 'visible' : 'auto'\n        }}\n        className='accordion__content__container'\n      >\n        <div ref={contentRef}>{content}</div>\n      </div>\n    </AccordianContainer>\n  )\n}\n\nexport default Accordion\n"]},"metadata":{},"sourceType":"module"}