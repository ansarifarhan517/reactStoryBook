{"ast":null,"code":"var _this = this,\n    _jsxFileName = \"/Users/farhanansari/Desktop/CODE/PrxProject/untitled folder/reactStoryBook/src/components/molecules/IconDropdown/Variant/BreadCrumb.tsx\";\n\nimport React from 'react';\nimport Select, { components } from 'react-select';\nimport { DownArrowIndicator } from '../../DropDown/CustomComponent';\nimport { StyledSelectWrapper } from '../StyledIconDropdown';\nimport { BreadCrumbStyled } from '../Styles';\nimport { Option as _Option } from '../subComponents/Options';\n\nvar BreadCrumb = function BreadCrumb(_ref) {\n  var defaultProps = _ref.defaultProps,\n      handleOutsideChange = _ref.handleOutsideChange,\n      onSetAsFavourite = _ref.onSetAsFavourite;\n  var options = defaultProps.options,\n      value = defaultProps.value,\n      primary = defaultProps.primary,\n      intent = defaultProps.intent,\n      iconButtonDetails = defaultProps.iconButtonDetails,\n      variant = defaultProps.variant,\n      _defaultProps$width = defaultProps.width,\n      width = _defaultProps$width === void 0 ? '160px' : _defaultProps$width,\n      theme = defaultProps.theme,\n      menuIsOpen = defaultProps.menuIsOpen,\n      onChange = defaultProps.onChange;\n\n  var handleOnChange = function handleOnChange(input, isSetFavouriteClick) {\n    var option = value;\n\n    if ((input === null || input === void 0 ? void 0 : input.value) === (option === null || option === void 0 ? void 0 : option.value) && handleOutsideChange) {\n      handleOutsideChange(option.value);\n    } else {\n      onChange && onChange(input);\n    }\n\n    if (isSetFavouriteClick) {\n      onSetAsFavourite && onSetAsFavourite(input);\n    }\n  };\n\n  return /*#__PURE__*/React.createElement(StyledSelectWrapper, {\n    width: \"0px\",\n    onClick: function onClick(e) {\n      e.stopPropagation();\n    },\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 45,\n      columnNumber: 5\n    }\n  }, /*#__PURE__*/React.createElement(Select, {\n    components: {\n      IndicatorSeparator: function IndicatorSeparator() {\n        return null;\n      },\n      DropdownIndicator: DownArrowIndicator,\n      LoadingIndicator: function LoadingIndicator() {\n        return null;\n      },\n      Option: function Option(props) {\n        var _props$data;\n\n        return /*#__PURE__*/React.createElement(_Option, Object.assign({}, props, {\n          onSetAsFavourite: function onSetAsFavourite(input) {\n            return handleOnChange(input, true);\n          },\n          isSetFavourite: onSetAsFavourite,\n          isFavourite: props === null || props === void 0 ? void 0 : (_props$data = props.data) === null || _props$data === void 0 ? void 0 : _props$data.isFavourite,\n          onOptionClick: handleOnChange,\n          __self: _this,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 58,\n            columnNumber: 15\n          }\n        }));\n      },\n      Menu: function Menu(props) {\n        return /*#__PURE__*/React.createElement(components.Menu, Object.assign({}, props, {\n          className: \"menuAnimate\",\n          __self: _this,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 70,\n            columnNumber: 13\n          }\n        }));\n      }\n    },\n    styles: BreadCrumbStyled(width, theme),\n    options: options,\n    value: value,\n    width: \"0px\",\n    primary: primary,\n    intent: intent,\n    iconButtonDetails: iconButtonDetails,\n    theme: theme,\n    variant: variant,\n    menuIsOpen: menuIsOpen,\n    placeholder: \"\",\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 51,\n      columnNumber: 7\n    }\n  }));\n};\n\nexport default React.memo(BreadCrumb);","map":{"version":3,"sources":["/Users/farhanansari/Desktop/CODE/PrxProject/untitled folder/reactStoryBook/src/components/molecules/IconDropdown/Variant/BreadCrumb.tsx"],"names":["React","Select","components","DownArrowIndicator","StyledSelectWrapper","BreadCrumbStyled","Option","BreadCrumb","defaultProps","handleOutsideChange","onSetAsFavourite","options","value","primary","intent","iconButtonDetails","variant","width","theme","menuIsOpen","onChange","handleOnChange","input","isSetFavouriteClick","option","e","stopPropagation","IndicatorSeparator","DropdownIndicator","LoadingIndicator","props","data","isFavourite","Menu","memo"],"mappings":"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","sourcesContent":["import React from 'react'\nimport Select, { components } from 'react-select'\nimport { DownArrowIndicator } from '../../DropDown/CustomComponent'\nimport { IIconDropdown, OptionType } from '../../DropDown/interface'\nimport { StyledSelectWrapper } from '../StyledIconDropdown'\nimport { BreadCrumbStyled } from '../Styles'\nimport { Option } from '../subComponents/Options'\n\nconst BreadCrumb = ({\n  defaultProps,\n  handleOutsideChange,\n  onSetAsFavourite\n}: {\n  defaultProps: IIconDropdown\n  handleOutsideChange: (value: string) => void\n  onSetAsFavourite?: (option: OptionType) => void\n}) => {\n  const {\n    options,\n    value,\n    primary,\n    intent,\n    iconButtonDetails,\n    variant,\n    width = '160px',\n    theme,\n    menuIsOpen,\n    onChange\n  } = defaultProps\n\n  const handleOnChange = (input: OptionType, isSetFavouriteClick?: boolean) => {\n    const option = value as OptionType\n    if (input?.value === option?.value && handleOutsideChange) {\n      handleOutsideChange(option.value)\n    } else {\n      onChange && onChange(input)\n    }\n\n    if (isSetFavouriteClick) {\n      onSetAsFavourite && onSetAsFavourite(input)\n    }\n  }\n\n  return (\n    <StyledSelectWrapper\n      width='0px'\n      onClick={(e: any) => {\n        e.stopPropagation()\n      }}\n    >\n      <Select\n        components={{\n          IndicatorSeparator: () => null,\n          DropdownIndicator: DownArrowIndicator,\n          LoadingIndicator: () => null,\n          Option: (props: any) => {\n            return (\n              <Option\n                {...props}\n                onSetAsFavourite={(input: OptionType) =>\n                  handleOnChange(input, true)\n                }\n                isSetFavourite={onSetAsFavourite}\n                isFavourite={props?.data?.isFavourite}\n                onOptionClick={handleOnChange}\n              />\n            )\n          },\n          Menu: (props) => (\n            <components.Menu {...props} className='menuAnimate' />\n          )\n        }}\n        styles={BreadCrumbStyled(width, theme)}\n        options={options}\n        value={value}\n        width='0px'\n        primary={primary}\n        intent={intent}\n        iconButtonDetails={iconButtonDetails}\n        theme={theme}\n        variant={variant}\n        menuIsOpen={menuIsOpen}\n        placeholder=''\n      />\n    </StyledSelectWrapper>\n  )\n}\n\nexport default React.memo(BreadCrumb)\n"]},"metadata":{},"sourceType":"module"}