{"ast":null,"code":"import _toConsumableArray from \"/Users/farhanansari/Desktop/CODE/PrxProject/untitled folder/reactStoryBook/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/toConsumableArray\";\nimport _slicedToArray from \"/Users/farhanansari/Desktop/CODE/PrxProject/untitled folder/reactStoryBook/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/slicedToArray\";\n\nvar _this = this,\n    _jsxFileName = \"/Users/farhanansari/Desktop/CODE/PrxProject/untitled folder/reactStoryBook/src/components/molecules/DateTimeSlotPicker/index.tsx\";\n\nimport React, { useEffect, useState } from 'react';\nimport DatePickerPlugin from 'react-datepicker';\nimport IconDropdown from '../IconDropdown';\nimport Box from '../../atoms/Box';\nimport IconButton from '../../atoms/IconButton';\nimport { CustomHeaderStyled } from '../DatePicker/Styles/DatePicker.styles';\nimport { StyledDatePickWrapper, StyledSlotBlockWrapper, StyledDateTimeSlotPicker, StyledSlotLabel, StyledPreferenceDropdownWrapper, StyledFooterButtonWrapper, StyledTime, StyledPreferenceWrapper, StyledSlotCard, StyledStatusLabel, SlotPickerStyled } from './styled';\nimport { defaultStatus, months as monthsArray, year as YearsArray, highlightWithRanges } from './defaults';\nimport { highlightDateConditionally, prepareSlotPickerData } from './utils';\n\nvar DateTimeSlotPicker = function DateTimeSlotPicker(_ref) {\n  var _timeWindowPrefrenceD, _timeWindowPrefrenceD2, _selectedDateSlots$sl;\n\n  var _ref$isOpen = _ref.isOpen,\n      isOpen = _ref$isOpen === void 0 ? false : _ref$isOpen,\n      children = _ref.children,\n      date = _ref.date,\n      timeWindowPrefrenceDropdown = _ref.timeWindowPrefrenceDropdown,\n      DateTimeSlots = _ref.DateTimeSlots,\n      _ref$status = _ref.status,\n      status = _ref$status === void 0 ? defaultStatus : _ref$status,\n      _ref$months = _ref.months,\n      months = _ref$months === void 0 ? monthsArray : _ref$months,\n      _ref$years = _ref.years,\n      years = _ref$years === void 0 ? YearsArray : _ref$years,\n      _ref$title = _ref.title,\n      title = _ref$title === void 0 ? 'Available Time Windows:' : _ref$title,\n      _ref$preferenceDropdo = _ref.preferenceDropdownLabel,\n      preferenceDropdownLabel = _ref$preferenceDropdo === void 0 ? 'Prefrence By:' : _ref$preferenceDropdo,\n      style = _ref.style,\n      onChange = _ref.onChange,\n      _ref$ApplyLabel = _ref.ApplyLabel,\n      ApplyLabel = _ref$ApplyLabel === void 0 ? 'Apply' : _ref$ApplyLabel,\n      _ref$CancelLabel = _ref.CancelLabel,\n      CancelLabel = _ref$CancelLabel === void 0 ? 'Cancel' : _ref$CancelLabel;\n\n  var _useState = useState(DateTimeSlots),\n      _useState2 = _slicedToArray(_useState, 2),\n      slotArray = _useState2[0],\n      setSlotArray = _useState2[1];\n\n  var _useState3 = useState(isOpen),\n      _useState4 = _slicedToArray(_useState3, 2),\n      open = _useState4[0],\n      setOpen = _useState4[1];\n\n  var _useState5 = useState(date),\n      _useState6 = _slicedToArray(_useState5, 2),\n      selectedDate = _useState6[0],\n      setSelectedDate = _useState6[1];\n\n  var _useState7 = useState(undefined),\n      _useState8 = _slicedToArray(_useState7, 2),\n      selectedDateSlots = _useState8[0],\n      setSelectedDateSlots = _useState8[1];\n\n  var _useState9 = useState(timeWindowPrefrenceDropdown[0].label),\n      _useState10 = _slicedToArray(_useState9, 2),\n      preference = _useState10[0],\n      setPreference = _useState10[1];\n\n  var _useState11 = useState((_timeWindowPrefrenceD = timeWindowPrefrenceDropdown[0]) === null || _timeWindowPrefrenceD === void 0 ? void 0 : _timeWindowPrefrenceD.availableSlotObjectKey),\n      _useState12 = _slicedToArray(_useState11, 2),\n      availablePreference = _useState12[0],\n      setAvailablePreference = _useState12[1];\n\n  var _useState13 = useState((_timeWindowPrefrenceD2 = timeWindowPrefrenceDropdown[0]) === null || _timeWindowPrefrenceD2 === void 0 ? void 0 : _timeWindowPrefrenceD2.availableSlotObjectKey),\n      _useState14 = _slicedToArray(_useState13, 2),\n      totalPreference = _useState14[0],\n      setTotalPreference = _useState14[1];\n\n  var _useState15 = useState(false),\n      _useState16 = _slicedToArray(_useState15, 2),\n      showHomeDate = _useState16[0],\n      setShowHomeDate = _useState16[1];\n\n  var _useState17 = useState(),\n      _useState18 = _slicedToArray(_useState17, 2),\n      highlightDates = _useState18[0],\n      setHighlightDates = _useState18[1]; // slotPicker time that is always selected\n\n\n  var _useState19 = useState(),\n      _useState20 = _slicedToArray(_useState19, 2),\n      slotPicker = _useState20[0],\n      setSlotPicker = _useState20[1];\n\n  var _useState21 = useState(),\n      _useState22 = _slicedToArray(_useState21, 2),\n      slotPickerValue = _useState22[0],\n      setSlotPickerValue = _useState22[1];\n\n  useEffect(function () {\n    setOpen(isOpen);\n  }, [isOpen]);\n  useEffect(function () {\n    setSelectedDate(date);\n  }, [date]);\n  useEffect(function () {\n    var slotData = DateTimeSlots && prepareSlotPickerData(DateTimeSlots);\n    DateTimeSlots && setSlotArray(slotData);\n    var dates = DateTimeSlots && highlightDateConditionally(slotData, defaultStatus);\n    dates && setHighlightDates(_toConsumableArray(dates));\n  }, [DateTimeSlots]);\n\n  var handleSelect = function handleSelect() {\n    slotPicker && setSlotPickerValue({\n      startTimeWindow: new Date(slotPicker === null || slotPicker === void 0 ? void 0 : slotPicker.startTimeWindow),\n      endTimeWindow: new Date(slotPicker === null || slotPicker === void 0 ? void 0 : slotPicker.endTimeWindow)\n    });\n    setOpen(false);\n    slotPicker && onChange({\n      startTimeWindow: new Date(slotPicker === null || slotPicker === void 0 ? void 0 : slotPicker.startTimeWindow),\n      endTimeWindow: new Date(slotPicker === null || slotPicker === void 0 ? void 0 : slotPicker.endTimeWindow)\n    });\n  }; // handle clicking of Dates\n\n\n  var handleDateClicked = function handleDateClicked(date) {\n    setSelectedDate(date);\n    var temp = date;\n    temp.setHours(5);\n    temp.setMinutes(30);\n    temp.setSeconds(0);\n    var selectedDate = temp.getTime();\n    var SlotObject = slotArray === null || slotArray === void 0 ? void 0 : slotArray.find(function (m) {\n      var d1 = new Date(m === null || m === void 0 ? void 0 : m.date);\n      d1.setSeconds(0);\n      d1.setMilliseconds(0);\n      console.log(d1.getTime(), selectedDate, d1.getTime() === selectedDate);\n      var d2 = d1.getTime();\n      return d2 === selectedDate;\n    });\n    SlotObject ? setSelectedDateSlots(SlotObject) : setSelectedDateSlots(SlotObject);\n    console.log(SlotObject && SlotObject.slots[0], 'first slot');\n    SlotObject && setSlotPicker({\n      startTimeWindow: SlotObject.slots[0].startTimeWindow,\n      endTimeWindow: SlotObject.slots[0].endTimeWindow\n    });\n  }; // handle Preference Dropdown Change\n\n\n  var handlePreferenceChange = function handlePreferenceChange(value) {\n    var slotObject = typeof value === 'string' ? timeWindowPrefrenceDropdown === null || timeWindowPrefrenceDropdown === void 0 ? void 0 : timeWindowPrefrenceDropdown.find(function (m) {\n      return m.value === value;\n    }) : value;\n    setTotalPreference(slotObject === null || slotObject === void 0 ? void 0 : slotObject.totalSlotObjectKey);\n    setAvailablePreference(slotObject === null || slotObject === void 0 ? void 0 : slotObject.availableSlotObjectKey);\n    setPreference(value);\n  }; // custom render Day component\n\n\n  var renderDayContents = function renderDayContents(day, date) {\n    date.setHours(5);\n    date.setMinutes(30);\n    date.getTime();\n    var dayObject = highlightDates && (highlightDates === null || highlightDates === void 0 ? void 0 : highlightDates.find(function (m) {\n      return (m === null || m === void 0 ? void 0 : m.date) === date.getTime();\n    }));\n    return /*#__PURE__*/React.createElement(\"span\", {\n      className: dayObject ? dayObject.className : 'none',\n      __self: _this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 156,\n        columnNumber: 7\n      }\n    }, day);\n  };\n\n  var handleSlotCick = function handleSlotCick(startTime, endTime) {\n    setSlotPicker({\n      startTimeWindow: startTime,\n      endTimeWindow: endTime\n    });\n  };\n\n  return /*#__PURE__*/React.createElement(\"div\", {\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 168,\n      columnNumber: 5\n    }\n  }, children({\n    value: slotPickerValue,\n    open: open,\n    setOpen: setOpen\n  }), open && /*#__PURE__*/React.createElement(StyledDatePickWrapper, {\n    style: style,\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 171,\n      columnNumber: 9\n    }\n  }, /*#__PURE__*/React.createElement(StyledDateTimeSlotPicker, {\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 172,\n      columnNumber: 11\n    }\n  }, /*#__PURE__*/React.createElement(DatePickerPlugin, {\n    minDate: new Date(),\n    maxDate: new Date(new Date().getFullYear(), new Date().getMonth() + 4, new Date().getDate()),\n    showDisabledMonthNavigation: true,\n    renderCustomHeader: function renderCustomHeader( // custom Header\n    _ref2) {\n      var _months$date$getMonth;\n\n      var date = _ref2.date,\n          changeYear = _ref2.changeYear,\n          changeMonth = _ref2.changeMonth,\n          decreaseMonth = _ref2.decreaseMonth,\n          increaseMonth = _ref2.increaseMonth,\n          prevMonthButtonDisabled = _ref2.prevMonthButtonDisabled,\n          nextMonthButtonDisabled = _ref2.nextMonthButtonDisabled;\n      return /*#__PURE__*/React.createElement(CustomHeaderStyled, {\n        __self: _this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 195,\n          columnNumber: 17\n        }\n      }, /*#__PURE__*/React.createElement(IconButton, {\n        onClick: decreaseMonth,\n        onlyIcon: true,\n        iconVariant: \"angle-left\",\n        iconSize: \"xs\",\n        color: \"black\",\n        disabled: prevMonthButtonDisabled,\n        __self: _this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 196,\n          columnNumber: 19\n        }\n      }), /*#__PURE__*/React.createElement(IconButton, {\n        onClick: function onClick() {\n          changeMonth(new Date().getMonth());\n          changeYear(new Date().getFullYear());\n          setShowHomeDate(true);\n        },\n        onlyIcon: true,\n        iconVariant: \"picker-home\",\n        iconSize: \"sm\",\n        color: \"grey.A800\",\n        style: {\n          marginTop: '-2px'\n        },\n        __self: _this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 204,\n          columnNumber: 19\n        }\n      }), /*#__PURE__*/React.createElement(\"div\", {\n        style: {\n          marginTop: '1px',\n          display: 'flex'\n        },\n        __self: _this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 216,\n          columnNumber: 19\n        }\n      }, /*#__PURE__*/React.createElement(Box, {\n        mr: \"15px\",\n        __self: _this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 217,\n          columnNumber: 21\n        }\n      }, /*#__PURE__*/React.createElement(IconDropdown, {\n        variant: \"date-picker\",\n        optionList: months,\n        onChange: function onChange(value) {\n          return value && changeMonth(months.map(function (_ref3) {\n            var label = _ref3.label;\n            return label;\n          }).indexOf(value));\n        },\n        value: (_months$date$getMonth = months[date === null || date === void 0 ? void 0 : date.getMonth()]) === null || _months$date$getMonth === void 0 ? void 0 : _months$date$getMonth.value,\n        width: \"80px\",\n        showDownArrow: true,\n        __self: _this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 218,\n          columnNumber: 23\n        }\n      })), /*#__PURE__*/React.createElement(IconDropdown, {\n        variant: \"date-picker\",\n        optionList: years,\n        onChange: function onChange(value) {\n          return value && changeYear(value);\n        },\n        value: date === null || date === void 0 ? void 0 : date.getFullYear().toString(),\n        width: \"46px\",\n        showDownArrow: true,\n        __self: _this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 234,\n          columnNumber: 21\n        }\n      })), /*#__PURE__*/React.createElement(IconButton, {\n        onClick: increaseMonth,\n        onlyIcon: true,\n        iconVariant: \"angle-right\",\n        iconSize: \"xs\",\n        color: \"black\",\n        disabled: nextMonthButtonDisabled,\n        __self: _this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 245,\n          columnNumber: 19\n        }\n      }));\n    },\n    renderDayContents: renderDayContents,\n    selected: selectedDate,\n    onChange: handleDateClicked,\n    highlightDates: showHomeDate ? highlightWithRanges : undefined,\n    inline: true,\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 173,\n      columnNumber: 13\n    }\n  })), /*#__PURE__*/React.createElement(StyledSlotBlockWrapper, {\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 262,\n      columnNumber: 11\n    }\n  }, /*#__PURE__*/React.createElement(Box, {\n    p: \"15px\",\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 263,\n      columnNumber: 13\n    }\n  }, /*#__PURE__*/React.createElement(StyledSlotLabel, {\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 264,\n      columnNumber: 15\n    }\n  }, title), /*#__PURE__*/React.createElement(StyledPreferenceDropdownWrapper, {\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 265,\n      columnNumber: 15\n    }\n  }, /*#__PURE__*/React.createElement(\"span\", {\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 266,\n      columnNumber: 17\n    }\n  }, preferenceDropdownLabel), /*#__PURE__*/React.createElement(IconDropdown, {\n    variant: \"date-picker\",\n    optionList: timeWindowPrefrenceDropdown,\n    onChange: handlePreferenceChange,\n    value: timeWindowPrefrenceDropdown[0].value,\n    width: \"80px\",\n    showDownArrow: true,\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 267,\n      columnNumber: 17\n    }\n  }))), /*#__PURE__*/React.createElement(\"div\", {\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 278,\n      columnNumber: 13\n    }\n  }, /*#__PURE__*/React.createElement(SlotPickerStyled, {\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 279,\n      columnNumber: 15\n    }\n  }, selectedDateSlots ? selectedDateSlots === null || selectedDateSlots === void 0 ? void 0 : (_selectedDateSlots$sl = selectedDateSlots.slots) === null || _selectedDateSlots$sl === void 0 ? void 0 : _selectedDateSlots$sl.map(function (m, index) {\n    var _status$available, _status$available2, _status$available3, _status$notAvailable;\n\n    var startTime = new Date(m === null || m === void 0 ? void 0 : m.startTimeWindow);\n    var endTime = new Date(m === null || m === void 0 ? void 0 : m.endTimeWindow);\n    return /*#__PURE__*/React.createElement(StyledSlotCard, {\n      selected: (slotPicker === null || slotPicker === void 0 ? void 0 : slotPicker.startTimeWindow) === (m === null || m === void 0 ? void 0 : m.startTimeWindow) && (slotPicker === null || slotPicker === void 0 ? void 0 : slotPicker.endTimeWindow) === (m === null || m === void 0 ? void 0 : m.endTimeWindow),\n      key: index,\n      onClick: function onClick() {\n        return handleSlotCick(m === null || m === void 0 ? void 0 : m.startTimeWindow, m === null || m === void 0 ? void 0 : m.endTimeWindow);\n      },\n      __self: _this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 286,\n        columnNumber: 23\n      }\n    }, /*#__PURE__*/React.createElement(\"div\", {\n      __self: _this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 296,\n        columnNumber: 25\n      }\n    }, /*#__PURE__*/React.createElement(StyledTime, {\n      __self: _this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 297,\n        columnNumber: 27\n      }\n    }, console.log(startTime, endTime), (startTime.getHours() >= 10 ? startTime.getHours() : \"0\".concat(startTime.getHours())) + ':' + (startTime.getMinutes() >= 10 ? startTime.getMinutes() : \"0\".concat(startTime.getMinutes())) + ' - ' + (endTime.getHours() >= 10 ? endTime.getHours() : \"0\".concat(endTime.getHours())) + ':' + (endTime.getMinutes() >= 10 ? endTime.getMinutes() : \"0\".concat(endTime.getMinutes()))), /*#__PURE__*/React.createElement(StyledPreferenceWrapper, {\n      __self: _this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 315,\n        columnNumber: 27\n      }\n    }, m[availablePreference] && m[totalPreference] ? \"\".concat(preference, \": \").concat(m[availablePreference], \" / \").concat(m[totalPreference], \" (\").concat(parseInt(m[availablePreference]) / parseInt(m[totalPreference]) * 100, \"%)\") : 'NA')), /*#__PURE__*/React.createElement(StyledStatusLabel, {\n      color: (m === null || m === void 0 ? void 0 : m.status) === (status === null || status === void 0 ? void 0 : (_status$available = status.available) === null || _status$available === void 0 ? void 0 : _status$available.value) ? 'green' : 'red',\n      selected: (slotPicker === null || slotPicker === void 0 ? void 0 : slotPicker.startTimeWindow) === (m === null || m === void 0 ? void 0 : m.startTimeWindow) && (slotPicker === null || slotPicker === void 0 ? void 0 : slotPicker.endTimeWindow) === (m === null || m === void 0 ? void 0 : m.endTimeWindow),\n      __self: _this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 327,\n        columnNumber: 25\n      }\n    }, (m === null || m === void 0 ? void 0 : m.status) === (status === null || status === void 0 ? void 0 : (_status$available2 = status.available) === null || _status$available2 === void 0 ? void 0 : _status$available2.value) ? (_status$available3 = status.available) === null || _status$available3 === void 0 ? void 0 : _status$available3.label : (_status$notAvailable = status.notAvailable) === null || _status$notAvailable === void 0 ? void 0 : _status$notAvailable.label));\n  }) : /*#__PURE__*/React.createElement(\"div\", {\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 347,\n      columnNumber: 19\n    }\n  }, '   ')), /*#__PURE__*/React.createElement(StyledFooterButtonWrapper, {\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 351,\n      columnNumber: 15\n    }\n  }, /*#__PURE__*/React.createElement(IconButton, {\n    onClick: handleSelect,\n    iconVariant: \"icomoon-tick-circled\",\n    children: ApplyLabel,\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 352,\n      columnNumber: 17\n    }\n  }), /*#__PURE__*/React.createElement(IconButton, {\n    onClick: function onClick() {\n      return setOpen(false);\n    },\n    iconVariant: \"icomoon-close\",\n    children: CancelLabel,\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 357,\n      columnNumber: 17\n    }\n  }))))));\n};\n\nexport default DateTimeSlotPicker;","map":{"version":3,"sources":["/Users/farhanansari/Desktop/CODE/PrxProject/untitled folder/reactStoryBook/src/components/molecules/DateTimeSlotPicker/index.tsx"],"names":["React","useEffect","useState","DatePickerPlugin","IconDropdown","Box","IconButton","CustomHeaderStyled","StyledDatePickWrapper","StyledSlotBlockWrapper","StyledDateTimeSlotPicker","StyledSlotLabel","StyledPreferenceDropdownWrapper","StyledFooterButtonWrapper","StyledTime","StyledPreferenceWrapper","StyledSlotCard","StyledStatusLabel","SlotPickerStyled","defaultStatus","months","monthsArray","year","YearsArray","highlightWithRanges","highlightDateConditionally","prepareSlotPickerData","DateTimeSlotPicker","isOpen","children","date","timeWindowPrefrenceDropdown","DateTimeSlots","status","years","title","preferenceDropdownLabel","style","onChange","ApplyLabel","CancelLabel","slotArray","setSlotArray","open","setOpen","selectedDate","setSelectedDate","undefined","selectedDateSlots","setSelectedDateSlots","label","preference","setPreference","availableSlotObjectKey","availablePreference","setAvailablePreference","totalPreference","setTotalPreference","showHomeDate","setShowHomeDate","highlightDates","setHighlightDates","slotPicker","setSlotPicker","slotPickerValue","setSlotPickerValue","slotData","dates","handleSelect","startTimeWindow","Date","endTimeWindow","handleDateClicked","temp","setHours","setMinutes","setSeconds","getTime","SlotObject","find","m","d1","setMilliseconds","console","log","d2","slots","handlePreferenceChange","value","slotObject","totalSlotObjectKey","renderDayContents","day","dayObject","className","handleSlotCick","startTime","endTime","getFullYear","getMonth","getDate","changeYear","changeMonth","decreaseMonth","increaseMonth","prevMonthButtonDisabled","nextMonthButtonDisabled","marginTop","display","map","indexOf","toString","index","getHours","getMinutes","parseInt","available","notAvailable"],"mappings":"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","sourcesContent":["import React, { useEffect, useState } from 'react'\nimport {\n  IDateTimeSlotPicker,\n  IDateTimeSlots,\n  ISlotPickerDateObject,\n  ISlotPickerValue\n} from './interfaces'\nimport DatePickerPlugin from 'react-datepicker'\nimport IconDropdown from '../IconDropdown'\nimport Box from '../../atoms/Box'\nimport IconButton from '../../atoms/IconButton'\nimport { CustomHeaderStyled } from '../DatePicker/Styles/DatePicker.styles'\nimport {\n  StyledDatePickWrapper,\n  StyledSlotBlockWrapper,\n  StyledDateTimeSlotPicker,\n  StyledSlotLabel,\n  StyledPreferenceDropdownWrapper,\n  StyledFooterButtonWrapper,\n  StyledTime,\n  StyledPreferenceWrapper,\n  StyledSlotCard,\n  StyledStatusLabel,\n  SlotPickerStyled\n} from './styled'\nimport {\n  defaultStatus,\n  months as monthsArray,\n  year as YearsArray,\n  highlightWithRanges\n} from './defaults'\nimport { highlightDateConditionally, prepareSlotPickerData } from './utils'\n\nconst DateTimeSlotPicker = ({\n  isOpen = false,\n  children,\n  date,\n  timeWindowPrefrenceDropdown,\n  DateTimeSlots,\n  status = defaultStatus,\n  months = monthsArray,\n  years = YearsArray,\n  title = 'Available Time Windows:',\n  preferenceDropdownLabel = 'Prefrence By:',\n  style,\n  onChange,\n  ApplyLabel = 'Apply',\n  CancelLabel = 'Cancel'\n}: IDateTimeSlotPicker) => {\n  const [slotArray, setSlotArray] = useState(DateTimeSlots)\n  const [open, setOpen] = useState(isOpen)\n  const [selectedDate, setSelectedDate] = useState(date)\n  const [selectedDateSlots, setSelectedDateSlots] = useState<\n    undefined | IDateTimeSlots\n  >(undefined)\n  const [preference, setPreference] = useState(\n    timeWindowPrefrenceDropdown[0].label\n  )\n  const [availablePreference, setAvailablePreference] = useState(\n    timeWindowPrefrenceDropdown[0]?.availableSlotObjectKey\n  )\n  const [totalPreference, setTotalPreference] = useState(\n    timeWindowPrefrenceDropdown[0]?.availableSlotObjectKey\n  )\n  const [showHomeDate, setShowHomeDate] = useState(false)\n  const [highlightDates, setHighlightDates] = useState<any[] | undefined>()\n  // slotPicker time that is always selected\n  const [slotPicker, setSlotPicker] = useState<\n    ISlotPickerDateObject | undefined\n  >()\n\n  const [slotPickerValue, setSlotPickerValue] = useState<\n    ISlotPickerValue | undefined\n  >()\n\n  useEffect(() => {\n    setOpen(isOpen)\n  }, [isOpen])\n\n  useEffect(() => {\n    setSelectedDate(date)\n  }, [date])\n\n  useEffect(() => {\n    const slotData = DateTimeSlots && prepareSlotPickerData(DateTimeSlots)\n    DateTimeSlots && setSlotArray(slotData)\n    const dates =\n      DateTimeSlots && highlightDateConditionally(slotData, defaultStatus)\n    dates && setHighlightDates([...dates])\n  }, [DateTimeSlots])\n\n  const handleSelect = () => {\n    slotPicker &&\n      setSlotPickerValue({\n        startTimeWindow: new Date(slotPicker?.startTimeWindow),\n        endTimeWindow: new Date(slotPicker?.endTimeWindow)\n      })\n    setOpen(false)\n    slotPicker &&\n      onChange({\n        startTimeWindow: new Date(slotPicker?.startTimeWindow),\n        endTimeWindow: new Date(slotPicker?.endTimeWindow)\n      })\n  }\n\n  // handle clicking of Dates\n  const handleDateClicked = (date: Date) => {\n    setSelectedDate(date)\n    const temp = date\n    temp.setHours(5)\n    temp.setMinutes(30)\n    temp.setSeconds(0)\n    const selectedDate = temp.getTime()\n    const SlotObject = slotArray?.find((m: any) => {\n      const d1 = new Date(m?.date)\n      d1.setSeconds(0)\n      d1.setMilliseconds(0)\n      console.log(d1.getTime(), selectedDate, d1.getTime() === selectedDate)\n      const d2 = d1.getTime()\n      return d2 === selectedDate\n    })\n\n    SlotObject\n      ? setSelectedDateSlots(SlotObject)\n      : setSelectedDateSlots(SlotObject)\n\n    console.log(SlotObject && SlotObject.slots[0], 'first slot')\n    SlotObject &&\n      setSlotPicker({\n        startTimeWindow: SlotObject.slots[0].startTimeWindow as any,\n        endTimeWindow: SlotObject.slots[0].endTimeWindow as any\n      })\n  }\n\n  // handle Preference Dropdown Change\n  const handlePreferenceChange = (value: any) => {\n    const slotObject =\n      typeof value === 'string'\n        ? timeWindowPrefrenceDropdown?.find((m) => m.value === value)\n        : value\n    setTotalPreference(slotObject?.totalSlotObjectKey)\n    setAvailablePreference(slotObject?.availableSlotObjectKey)\n    setPreference(value)\n  }\n\n  // custom render Day component\n  const renderDayContents = (day: any, date: any) => {\n    date.setHours(5)\n    date.setMinutes(30)\n    date.getTime()\n    const dayObject =\n      highlightDates &&\n      highlightDates?.find((m: any) => m?.date === date.getTime())\n\n    return (\n      <span className={dayObject ? dayObject.className : 'none'}>{day}</span>\n    )\n  }\n\n  const handleSlotCick = (startTime: any, endTime: any) => {\n    setSlotPicker({\n      startTimeWindow: startTime,\n      endTimeWindow: endTime\n    })\n  }\n\n  return (\n    <div>\n      {children({ value: slotPickerValue, open, setOpen })}\n      {open && (\n        <StyledDatePickWrapper style={style}>\n          <StyledDateTimeSlotPicker>\n            <DatePickerPlugin\n              minDate={new Date()}\n              maxDate={\n                new Date(\n                  new Date().getFullYear(),\n                  new Date().getMonth() + 4,\n                  new Date().getDate()\n                )\n              }\n              showDisabledMonthNavigation\n              renderCustomHeader={(\n                // custom Header\n                {\n                  date,\n                  changeYear,\n                  changeMonth,\n                  decreaseMonth,\n                  increaseMonth,\n                  prevMonthButtonDisabled,\n                  nextMonthButtonDisabled\n                }\n              ) => (\n                <CustomHeaderStyled>\n                  <IconButton\n                    onClick={decreaseMonth}\n                    onlyIcon\n                    iconVariant='angle-left'\n                    iconSize='xs'\n                    color='black'\n                    disabled={prevMonthButtonDisabled}\n                  />\n                  <IconButton\n                    onClick={() => {\n                      changeMonth(new Date().getMonth())\n                      changeYear(new Date().getFullYear())\n                      setShowHomeDate(true)\n                    }}\n                    onlyIcon\n                    iconVariant='picker-home'\n                    iconSize='sm'\n                    color='grey.A800'\n                    style={{ marginTop: '-2px' }}\n                  />\n                  <div style={{ marginTop: '1px', display: 'flex' }}>\n                    <Box mr='15px'>\n                      <IconDropdown\n                        variant='date-picker'\n                        optionList={months}\n                        onChange={(value: string | undefined) => {\n                          return (\n                            value &&\n                            changeMonth(\n                              months.map(({ label }) => label).indexOf(value)\n                            )\n                          )\n                        }}\n                        value={months[date?.getMonth()]?.value}\n                        width='80px'\n                        showDownArrow\n                      />\n                    </Box>\n                    <IconDropdown\n                      variant='date-picker'\n                      optionList={years}\n                      onChange={(value: string | undefined) =>\n                        value && changeYear((value as unknown) as number)\n                      }\n                      value={date?.getFullYear().toString()}\n                      width='46px'\n                      showDownArrow\n                    />\n                  </div>\n                  <IconButton\n                    onClick={increaseMonth}\n                    onlyIcon\n                    iconVariant='angle-right'\n                    iconSize='xs'\n                    color='black'\n                    disabled={nextMonthButtonDisabled}\n                  />\n                </CustomHeaderStyled>\n              )}\n              renderDayContents={renderDayContents}\n              selected={selectedDate}\n              onChange={handleDateClicked}\n              highlightDates={showHomeDate ? highlightWithRanges : undefined}\n              inline\n            />\n          </StyledDateTimeSlotPicker>\n          <StyledSlotBlockWrapper>\n            <Box p='15px'>\n              <StyledSlotLabel>{title}</StyledSlotLabel>\n              <StyledPreferenceDropdownWrapper>\n                <span>{preferenceDropdownLabel}</span>\n                <IconDropdown\n                  variant='date-picker'\n                  optionList={timeWindowPrefrenceDropdown}\n                  onChange={handlePreferenceChange}\n                  value={timeWindowPrefrenceDropdown[0].value}\n                  width='80px'\n                  showDownArrow\n                />\n              </StyledPreferenceDropdownWrapper>\n            </Box>\n\n            <div>\n              <SlotPickerStyled>\n                {selectedDateSlots ? (\n                  selectedDateSlots?.slots?.map((m: any, index: number) => {\n                    const startTime = new Date(m?.startTimeWindow)\n                    const endTime = new Date(m?.endTimeWindow)\n\n                    return (\n                      <StyledSlotCard\n                        selected={\n                          slotPicker?.startTimeWindow === m?.startTimeWindow &&\n                          slotPicker?.endTimeWindow === m?.endTimeWindow\n                        }\n                        key={index}\n                        onClick={() =>\n                          handleSlotCick(m?.startTimeWindow, m?.endTimeWindow)\n                        }\n                      >\n                        <div>\n                          <StyledTime>\n                            {console.log(startTime, endTime)}\n                            {(startTime.getHours() >= 10\n                              ? startTime.getHours()\n                              : `0${startTime.getHours()}`) +\n                              ':' +\n                              (startTime.getMinutes() >= 10\n                                ? startTime.getMinutes()\n                                : `0${startTime.getMinutes()}`) +\n                              ' - ' +\n                              (endTime.getHours() >= 10\n                                ? endTime.getHours()\n                                : `0${endTime.getHours()}`) +\n                              ':' +\n                              (endTime.getMinutes() >= 10\n                                ? endTime.getMinutes()\n                                : `0${endTime.getMinutes()}`)}\n                          </StyledTime>\n                          <StyledPreferenceWrapper>\n                            {m[availablePreference] && m[totalPreference]\n                              ? `${preference}: ${m[availablePreference]} / ${\n                                  m[totalPreference]\n                                } (${\n                                  (parseInt(m[availablePreference]) /\n                                    parseInt(m[totalPreference])) *\n                                  100\n                                }%)`\n                              : 'NA'}\n                          </StyledPreferenceWrapper>\n                        </div>\n                        <StyledStatusLabel\n                          color={\n                            m?.status === status?.available?.value\n                              ? 'green'\n                              : 'red'\n                          }\n                          selected={\n                            slotPicker?.startTimeWindow ===\n                              m?.startTimeWindow &&\n                            slotPicker?.endTimeWindow === m?.endTimeWindow\n                          }\n                        >\n                          {m?.status === status?.available?.value\n                            ? status.available?.label\n                            : status.notAvailable?.label}\n                        </StyledStatusLabel>\n                      </StyledSlotCard>\n                    )\n                  })\n                ) : (\n                  <div>{'   '}</div>\n                )}\n              </SlotPickerStyled>\n\n              <StyledFooterButtonWrapper>\n                <IconButton\n                  onClick={handleSelect}\n                  iconVariant='icomoon-tick-circled'\n                  children={ApplyLabel}\n                />\n                <IconButton\n                  onClick={() => setOpen(false)}\n                  iconVariant='icomoon-close'\n                  children={CancelLabel}\n                />\n              </StyledFooterButtonWrapper>\n            </div>\n          </StyledSlotBlockWrapper>\n        </StyledDatePickWrapper>\n      )}\n    </div>\n  )\n}\n\nexport default DateTimeSlotPicker\n"]},"metadata":{},"sourceType":"module"}