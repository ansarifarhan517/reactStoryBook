{"ast":null,"code":"export var highlightDateConditionally = function highlightDateConditionally(data, defaultStatus) {\n  return data === null || data === void 0 ? void 0 : data.map(function (m) {\n    var _m$slots;\n\n    return (m === null || m === void 0 ? void 0 : (_m$slots = m.slots) === null || _m$slots === void 0 ? void 0 : _m$slots.some(function (s) {\n      return s.status === (defaultStatus === null || defaultStatus === void 0 ? void 0 : defaultStatus.available.value);\n    })) ? {\n      date: m === null || m === void 0 ? void 0 : m.date,\n      className: 'greenDay'\n    } : {\n      date: m === null || m === void 0 ? void 0 : m.date,\n      className: 'redDay'\n    };\n  });\n};\nexport var prepareSlotPickerData = function prepareSlotPickerData(data) {\n  return data === null || data === void 0 ? void 0 : data.map(function (d) {\n    var d1 = new Date(d === null || d === void 0 ? void 0 : d.date);\n    d1.setSeconds(0);\n    d1.setMilliseconds(0);\n    var d2 = d1.getTime();\n    return {\n      date: d2,\n      slots: d.slots\n    };\n  });\n};","map":{"version":3,"sources":["/Users/farhanansari/Code/ui-library/src/components/molecules/DateTimeSlotPicker/utils.tsx"],"names":["highlightDateConditionally","data","defaultStatus","map","m","slots","some","s","status","available","value","date","className","prepareSlotPickerData","d","d1","Date","setSeconds","setMilliseconds","d2","getTime"],"mappings":"AAAA,OAAO,IAAMA,0BAA0B,GAAG,SAA7BA,0BAA6B,CAACC,IAAD,EAAYC,aAAZ,EAAmC;AAC3E,SAAOD,IAAP,aAAOA,IAAP,uBAAOA,IAAI,CAAEE,GAAN,CAAU,UAACC,CAAD,EAAY;AAAA;;AAC3B,WAAO,CAAAA,CAAC,SAAD,IAAAA,CAAC,WAAD,wBAAAA,CAAC,CAAEC,KAAH,sDAAUC,IAAV,CACL,UAACC,CAAD;AAAA,aAAYA,CAAC,CAACC,MAAF,MAAaN,aAAb,aAAaA,aAAb,uBAAaA,aAAa,CAAEO,SAAf,CAAyBC,KAAtC,CAAZ;AAAA,KADK,KAGH;AACEC,MAAAA,IAAI,EAAEP,CAAF,aAAEA,CAAF,uBAAEA,CAAC,CAAEO,IADX;AAEEC,MAAAA,SAAS,EAAE;AAFb,KAHG,GAOH;AACED,MAAAA,IAAI,EAAEP,CAAF,aAAEA,CAAF,uBAAEA,CAAC,CAAEO,IADX;AAEEC,MAAAA,SAAS,EAAE;AAFb,KAPJ;AAWD,GAZM,CAAP;AAaD,CAdM;AAgBP,OAAO,IAAMC,qBAAqB,GAAG,SAAxBA,qBAAwB,CAACZ,IAAD,EAAiB;AACpD,SAAOA,IAAP,aAAOA,IAAP,uBAAOA,IAAI,CAAEE,GAAN,CAAU,UAACW,CAAD,EAAY;AAC3B,QAAMC,EAAE,GAAG,IAAIC,IAAJ,CAASF,CAAT,aAASA,CAAT,uBAASA,CAAC,CAAEH,IAAZ,CAAX;AACAI,IAAAA,EAAE,CAACE,UAAH,CAAc,CAAd;AACAF,IAAAA,EAAE,CAACG,eAAH,CAAmB,CAAnB;AACA,QAAMC,EAAE,GAAGJ,EAAE,CAACK,OAAH,EAAX;AACA,WAAO;AACLT,MAAAA,IAAI,EAAEQ,EADD;AAELd,MAAAA,KAAK,EAAES,CAAC,CAACT;AAFJ,KAAP;AAID,GATM,CAAP;AAUD,CAXM","sourcesContent":["export const highlightDateConditionally = (data: any, defaultStatus: any) => {\n  return data?.map((m: any) => {\n    return m?.slots?.some(\n      (s: any) => s.status === defaultStatus?.available.value\n    )\n      ? {\n          date: m?.date,\n          className: 'greenDay'\n        }\n      : {\n          date: m?.date,\n          className: 'redDay'\n        }\n  })\n}\n\nexport const prepareSlotPickerData = (data: any[]) => {\n  return data?.map((d: any) => {\n    const d1 = new Date(d?.date)\n    d1.setSeconds(0)\n    d1.setMilliseconds(0)\n    const d2 = d1.getTime()\n    return {\n      date: d2,\n      slots: d.slots\n    }\n  })\n}\n"]},"metadata":{},"sourceType":"module"}