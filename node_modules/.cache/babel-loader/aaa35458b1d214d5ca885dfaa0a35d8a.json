{"ast":null,"code":"import _defineProperty from \"/Users/farhanansari/Code/ui-library/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/defineProperty\";\n\nvar _parameters;\n\n/* eslint-disable */\n// @ts-nocheck\n// @ts-ignore\nvar withSourceLoader = require('@storybook/source-loader/preview').withSource; // @ts-ignore\n\n\nvar addSourceDecorator = require(\"@storybook/source-loader/preview\").addSource; // @ts-ignore\n\n\nvar __SOURCE_PREFIX__ = \"/Users/farhanansari/Code/ui-library/src/components/molecules/Tooltip\"; // @ts-ignore\n\nvar __STORY__ = \"\\n\\n// @ts-nocheck\\n// @ts-ignore\\nvar withSourceLoader = require('@storybook/source-loader/preview').withSource;\\n// @ts-ignore\\nvar addSourceDecorator = require(\\\"@storybook/source-loader/preview\\\").addSource;\\n// @ts-ignore\\nvar __SOURCE_PREFIX__ = \\\"/Users/farhanansari/Code/ui-library/src/components/molecules/Tooltip\\\";\\n// @ts-ignore\\nvar __STORY__ = \\\"\\\\n\\\\n// @ts-nocheck\\\\n// @ts-ignore\\\\nvar withSourceLoader = require('@storybook/source-loader/preview').withSource;\\\\n// @ts-ignore\\\\nvar addSourceDecorator = require(\\\\\\\"@storybook/source-loader/preview\\\\\\\").addSource;\\\\n// @ts-ignore\\\\nvar __SOURCE_PREFIX__ = \\\\\\\"/Users/farhanansari/Code/ui-library/src/components/molecules/Tooltip\\\\\\\";\\\\n// @ts-ignore\\\\nvar __STORY__ = \\\\\\\"import React from 'react'\\\\\\\\n\\\\\\\\nimport {\\\\\\\\n  radios,\\\\\\\\n  withKnobs,\\\\\\\\n  boolean,\\\\\\\\n  text,\\\\\\\\n  number\\\\\\\\n} from '@storybook/addon-knobs'\\\\\\\\n\\\\\\\\nimport { path } from '..'\\\\\\\\nimport Tooltip, { tDirection } from '.'\\\\\\\\nimport Button from '../../atoms/Button'\\\\\\\\nimport Box from '../../atoms/Box'\\\\\\\\n\\\\\\\\nimport ThemeWrapper from '../../../utilities/components/ThemeWrapper'\\\\\\\\nimport { tPlacement } from '../../../utilities/types'\\\\\\\\n\\\\\\\\nexport default {\\\\\\\\n  title: `${path}/Tooltip`,\\\\\\\\n  decorators: [withKnobs],\\\\\\\\n  component: Tooltip,\\\\\\\\n  parameters: {\\\\\\\\n    props: {\\\\\\\\n      propTablesExclude: [Box, Button, ThemeWrapper]\\\\\\\\n    }\\\\\\\\n  }\\\\\\\\n}\\\\\\\\n\\\\\\\\nconst radioOptions = {\\\\\\\\n  tooltipDirection: {\\\\\\\\n    top: 'top',\\\\\\\\n    bottom: 'bottom',\\\\\\\\n    right: 'right',\\\\\\\\n    left: 'left'\\\\\\\\n  },\\\\\\\\n  arrowPlacement: { start: 'start', center: 'center', end: 'end' },\\\\\\\\n  messagePlacement: { start: 'start', center: 'center', end: 'end' }\\\\\\\\n}\\\\\\\\n\\\\\\\\nexport const TooltipPlayground = () => (\\\\\\\\n  <ThemeWrapper>\\\\\\\\n    <Box p='3em' bgColor='grey.50' display='flex' justifyContent='center'>\\\\\\\\n      <Tooltip\\\\\\\\n        message={text(\\\\\\\\n          'message',\\\\\\\\n          'Customize your view by adding/removing columns. For the best view, a display of 8 columns is recommended.'\\\\\\\\n        )}\\\\\\\\n        tooltipDirection={\\\\\\\\n          radios(\\\\\\\\n            'tooltipDirection',\\\\\\\\n            radioOptions.tooltipDirection,\\\\\\\\n            'top'\\\\\\\\n          ) as tDirection\\\\\\\\n        }\\\\\\\\n        arrowPlacement={\\\\\\\\n          radios(\\\\\\\\n            'arrowPlacement',\\\\\\\\n            radioOptions.arrowPlacement,\\\\\\\\n            'center'\\\\\\\\n          ) as tPlacement\\\\\\\\n        }\\\\\\\\n        messagePlacement={\\\\\\\\n          radios(\\\\\\\\n            'messagePlacement',\\\\\\\\n            radioOptions.messagePlacement,\\\\\\\\n            'center'\\\\\\\\n          ) as tPlacement\\\\\\\\n        }\\\\\\\\n        hover={boolean('hover', false)}\\\\\\\\n        isWordWrap={boolean('Word Wrap', false)}\\\\\\\\n        maxWidth={number('maxWidth', 400)}\\\\\\\\n        color={{\\\\\\\\n          border: text('color.border', 'primary.dark'),\\\\\\\\n          arrow: text('color.arrow', 'primary.main'),\\\\\\\\n          background: text('color.background', 'primary.main'),\\\\\\\\n          text: text('color.text', 'primary.contrastText')\\\\\\\\n        }}\\\\\\\\n      >\\\\\\\\n        <Button>Hover Me!</Button>\\\\\\\\n      </Tooltip>\\\\\\\\n    </Box>\\\\\\\\n  </ThemeWrapper>\\\\\\\\n)\\\\\\\\n\\\\\\\";\\\\n// @ts-ignore\\\\nvar __ADDS_MAP__ = {};\\\\n// @ts-ignore\\\\nvar __MAIN_FILE_LOCATION__ = \\\\\\\"/Tooltip.stories.tsx\\\\\\\";\\\\n// @ts-ignore\\\\nvar __MODULE_DEPENDENCIES__ = [];\\\\n// @ts-ignore\\\\nvar __LOCAL_DEPENDENCIES__ = {};\\\\n// @ts-ignore\\\\nvar __IDS_TO_FRAMEWORKS__ = {};\\\\n        \\\\nimport React from 'react'\\\\n\\\\nimport {\\\\n  radios,\\\\n  withKnobs,\\\\n  boolean,\\\\n  text,\\\\n  number\\\\n} from '@storybook/addon-knobs'\\\\n\\\\nimport { path } from '..'\\\\nimport Tooltip, { tDirection } from '.'\\\\nimport Button from '../../atoms/Button'\\\\nimport Box from '../../atoms/Box'\\\\n\\\\nimport ThemeWrapper from '../../../utilities/components/ThemeWrapper'\\\\nimport { tPlacement } from '../../../utilities/types'\\\\n\\\\nexport default {\\\\n  title: `${path}/Tooltip`,\\\\n  decorators: [withKnobs],\\\\n  component: Tooltip,\\\\n  parameters: {\\\\\\\"storySource\\\\\\\":{\\\\\\\"source\\\\\\\":\\\\\\\"import React from 'react'\\\\\\\\n\\\\\\\\nimport {\\\\\\\\n  radios,\\\\\\\\n  withKnobs,\\\\\\\\n  boolean,\\\\\\\\n  text,\\\\\\\\n  number\\\\\\\\n} from '@storybook/addon-knobs'\\\\\\\\n\\\\\\\\nimport { path } from '..'\\\\\\\\nimport Tooltip, { tDirection } from '.'\\\\\\\\nimport Button from '../../atoms/Button'\\\\\\\\nimport Box from '../../atoms/Box'\\\\\\\\n\\\\\\\\nimport ThemeWrapper from '../../../utilities/components/ThemeWrapper'\\\\\\\\nimport { tPlacement } from '../../../utilities/types'\\\\\\\\n\\\\\\\\nexport default {\\\\\\\\n  title: `${path}/Tooltip`,\\\\\\\\n  decorators: [withKnobs],\\\\\\\\n  component: Tooltip,\\\\\\\\n  parameters: {\\\\\\\\n    props: {\\\\\\\\n      propTablesExclude: [Box, Button, ThemeWrapper]\\\\\\\\n    }\\\\\\\\n  }\\\\\\\\n}\\\\\\\\n\\\\\\\\nconst radioOptions = {\\\\\\\\n  tooltipDirection: {\\\\\\\\n    top: 'top',\\\\\\\\n    bottom: 'bottom',\\\\\\\\n    right: 'right',\\\\\\\\n    left: 'left'\\\\\\\\n  },\\\\\\\\n  arrowPlacement: { start: 'start', center: 'center', end: 'end' },\\\\\\\\n  messagePlacement: { start: 'start', center: 'center', end: 'end' }\\\\\\\\n}\\\\\\\\n\\\\\\\\nexport const TooltipPlayground = () => (\\\\\\\\n  <ThemeWrapper>\\\\\\\\n    <Box p='3em' bgColor='grey.50' display='flex' justifyContent='center'>\\\\\\\\n      <Tooltip\\\\\\\\n        message={text(\\\\\\\\n          'message',\\\\\\\\n          'Customize your view by adding/removing columns. For the best view, a display of 8 columns is recommended.'\\\\\\\\n        )}\\\\\\\\n        tooltipDirection={\\\\\\\\n          radios(\\\\\\\\n            'tooltipDirection',\\\\\\\\n            radioOptions.tooltipDirection,\\\\\\\\n            'top'\\\\\\\\n          ) as tDirection\\\\\\\\n        }\\\\\\\\n        arrowPlacement={\\\\\\\\n          radios(\\\\\\\\n            'arrowPlacement',\\\\\\\\n            radioOptions.arrowPlacement,\\\\\\\\n            'center'\\\\\\\\n          ) as tPlacement\\\\\\\\n        }\\\\\\\\n        messagePlacement={\\\\\\\\n          radios(\\\\\\\\n            'messagePlacement',\\\\\\\\n            radioOptions.messagePlacement,\\\\\\\\n            'center'\\\\\\\\n          ) as tPlacement\\\\\\\\n        }\\\\\\\\n        hover={boolean('hover', false)}\\\\\\\\n        isWordWrap={boolean('Word Wrap', false)}\\\\\\\\n        maxWidth={number('maxWidth', 400)}\\\\\\\\n        color={{\\\\\\\\n          border: text('color.border', 'primary.dark'),\\\\\\\\n          arrow: text('color.arrow', 'primary.main'),\\\\\\\\n          background: text('color.background', 'primary.main'),\\\\\\\\n          text: text('color.text', 'primary.contrastText')\\\\\\\\n        }}\\\\\\\\n      >\\\\\\\\n        <Button>Hover Me!</Button>\\\\\\\\n      </Tooltip>\\\\\\\\n    </Box>\\\\\\\\n  </ThemeWrapper>\\\\\\\\n)\\\\\\\\n\\\\\\\",\\\\\\\"locationsMap\\\\\\\":{}},\\\\n    props: {\\\\n      propTablesExclude: [Box, Button, ThemeWrapper]\\\\n    }\\\\n  },}\\\\n\\\\nconst radioOptions = {\\\\n  tooltipDirection: {\\\\n    top: 'top',\\\\n    bottom: 'bottom',\\\\n    right: 'right',\\\\n    left: 'left'\\\\n  },\\\\n  arrowPlacement: { start: 'start', center: 'center', end: 'end' },\\\\n  messagePlacement: { start: 'start', center: 'center', end: 'end' }\\\\n}\\\\n\\\\nexport const TooltipPlayground = addSourceDecorator(() => (\\\\n  <ThemeWrapper>\\\\n    <Box p='3em' bgColor='grey.50' display='flex' justifyContent='center'>\\\\n      <Tooltip\\\\n        message={text(\\\\n          'message',\\\\n          'Customize your view by adding/removing columns. For the best view, a display of 8 columns is recommended.'\\\\n        )}\\\\n        tooltipDirection={\\\\n          radios(\\\\n            'tooltipDirection',\\\\n            radioOptions.tooltipDirection,\\\\n            'top'\\\\n          ) as tDirection\\\\n        }\\\\n        arrowPlacement={\\\\n          radios(\\\\n            'arrowPlacement',\\\\n            radioOptions.arrowPlacement,\\\\n            'center'\\\\n          ) as tPlacement\\\\n        }\\\\n        messagePlacement={\\\\n          radios(\\\\n            'messagePlacement',\\\\n            radioOptions.messagePlacement,\\\\n            'center'\\\\n          ) as tPlacement\\\\n        }\\\\n        hover={boolean('hover', false)}\\\\n        isWordWrap={boolean('Word Wrap', false)}\\\\n        maxWidth={number('maxWidth', 400)}\\\\n        color={{\\\\n          border: text('color.border', 'primary.dark'),\\\\n          arrow: text('color.arrow', 'primary.main'),\\\\n          background: text('color.background', 'primary.main'),\\\\n          text: text('color.text', 'primary.contrastText')\\\\n        }}\\\\n      >\\\\n        <Button>Hover Me!</Button>\\\\n      </Tooltip>\\\\n    </Box>\\\\n  </ThemeWrapper>\\\\n), {__STORY__, __ADDS_MAP__,__MAIN_FILE_LOCATION__,__MODULE_DEPENDENCIES__,__LOCAL_DEPENDENCIES__,__SOURCE_PREFIX__,__IDS_TO_FRAMEWORKS__});\\\";\\n// @ts-ignore\\nvar __ADDS_MAP__ = {};\\n// @ts-ignore\\nvar __MAIN_FILE_LOCATION__ = \\\"/Tooltip.stories.tsx\\\";\\n// @ts-ignore\\nvar __MODULE_DEPENDENCIES__ = [];\\n// @ts-ignore\\nvar __LOCAL_DEPENDENCIES__ = {};\\n// @ts-ignore\\nvar __IDS_TO_FRAMEWORKS__ = {};\\n        \\n\\n\\n// @ts-nocheck\\n// @ts-ignore\\nvar withSourceLoader = require('@storybook/source-loader/preview').withSource;\\n// @ts-ignore\\nvar addSourceDecorator = require(\\\"@storybook/source-loader/preview\\\").addSource;\\n// @ts-ignore\\nvar __SOURCE_PREFIX__ = \\\"/Users/farhanansari/Code/ui-library/src/components/molecules/Tooltip\\\";\\n// @ts-ignore\\nvar __STORY__ = \\\"import React from 'react'\\\\n\\\\nimport {\\\\n  radios,\\\\n  withKnobs,\\\\n  boolean,\\\\n  text,\\\\n  number\\\\n} from '@storybook/addon-knobs'\\\\n\\\\nimport { path } from '..'\\\\nimport Tooltip, { tDirection } from '.'\\\\nimport Button from '../../atoms/Button'\\\\nimport Box from '../../atoms/Box'\\\\n\\\\nimport ThemeWrapper from '../../../utilities/components/ThemeWrapper'\\\\nimport { tPlacement } from '../../../utilities/types'\\\\n\\\\nexport default {\\\\n  title: `${path}/Tooltip`,\\\\n  decorators: [withKnobs],\\\\n  component: Tooltip,\\\\n  parameters: {\\\\n    props: {\\\\n      propTablesExclude: [Box, Button, ThemeWrapper]\\\\n    }\\\\n  }\\\\n}\\\\n\\\\nconst radioOptions = {\\\\n  tooltipDirection: {\\\\n    top: 'top',\\\\n    bottom: 'bottom',\\\\n    right: 'right',\\\\n    left: 'left'\\\\n  },\\\\n  arrowPlacement: { start: 'start', center: 'center', end: 'end' },\\\\n  messagePlacement: { start: 'start', center: 'center', end: 'end' }\\\\n}\\\\n\\\\nexport const TooltipPlayground = () => (\\\\n  <ThemeWrapper>\\\\n    <Box p='3em' bgColor='grey.50' display='flex' justifyContent='center'>\\\\n      <Tooltip\\\\n        message={text(\\\\n          'message',\\\\n          'Customize your view by adding/removing columns. For the best view, a display of 8 columns is recommended.'\\\\n        )}\\\\n        tooltipDirection={\\\\n          radios(\\\\n            'tooltipDirection',\\\\n            radioOptions.tooltipDirection,\\\\n            'top'\\\\n          ) as tDirection\\\\n        }\\\\n        arrowPlacement={\\\\n          radios(\\\\n            'arrowPlacement',\\\\n            radioOptions.arrowPlacement,\\\\n            'center'\\\\n          ) as tPlacement\\\\n        }\\\\n        messagePlacement={\\\\n          radios(\\\\n            'messagePlacement',\\\\n            radioOptions.messagePlacement,\\\\n            'center'\\\\n          ) as tPlacement\\\\n        }\\\\n        hover={boolean('hover', false)}\\\\n        isWordWrap={boolean('Word Wrap', false)}\\\\n        maxWidth={number('maxWidth', 400)}\\\\n        color={{\\\\n          border: text('color.border', 'primary.dark'),\\\\n          arrow: text('color.arrow', 'primary.main'),\\\\n          background: text('color.background', 'primary.main'),\\\\n          text: text('color.text', 'primary.contrastText')\\\\n        }}\\\\n      >\\\\n        <Button>Hover Me!</Button>\\\\n      </Tooltip>\\\\n    </Box>\\\\n  </ThemeWrapper>\\\\n)\\\\n\\\";\\n// @ts-ignore\\nvar __ADDS_MAP__ = {};\\n// @ts-ignore\\nvar __MAIN_FILE_LOCATION__ = \\\"/Tooltip.stories.tsx\\\";\\n// @ts-ignore\\nvar __MODULE_DEPENDENCIES__ = [];\\n// @ts-ignore\\nvar __LOCAL_DEPENDENCIES__ = {};\\n// @ts-ignore\\nvar __IDS_TO_FRAMEWORKS__ = {};\\n        \\nimport React from 'react'\\n\\nimport {\\n  radios,\\n  withKnobs,\\n  boolean,\\n  text,\\n  number\\n} from '@storybook/addon-knobs'\\n\\nimport { path } from '..'\\nimport Tooltip, { tDirection } from '.'\\nimport Button from '../../atoms/Button'\\nimport Box from '../../atoms/Box'\\n\\nimport ThemeWrapper from '../../../utilities/components/ThemeWrapper'\\nimport { tPlacement } from '../../../utilities/types'\\n\\nexport default {\\n  title: `${path}/Tooltip`,\\n  decorators: [withKnobs],\\n  component: Tooltip,\\n  parameters: {\\\"storySource\\\":{\\\"source\\\":\\\"\\\\n\\\\n// @ts-nocheck\\\\n// @ts-ignore\\\\nvar withSourceLoader = require('@storybook/source-loader/preview').withSource;\\\\n// @ts-ignore\\\\nvar addSourceDecorator = require(\\\\\\\"@storybook/source-loader/preview\\\\\\\").addSource;\\\\n// @ts-ignore\\\\nvar __SOURCE_PREFIX__ = \\\\\\\"/Users/farhanansari/Code/ui-library/src/components/molecules/Tooltip\\\\\\\";\\\\n// @ts-ignore\\\\nvar __STORY__ = \\\\\\\"import React from 'react'\\\\\\\\n\\\\\\\\nimport {\\\\\\\\n  radios,\\\\\\\\n  withKnobs,\\\\\\\\n  boolean,\\\\\\\\n  text,\\\\\\\\n  number\\\\\\\\n} from '@storybook/addon-knobs'\\\\\\\\n\\\\\\\\nimport { path } from '..'\\\\\\\\nimport Tooltip, { tDirection } from '.'\\\\\\\\nimport Button from '../../atoms/Button'\\\\\\\\nimport Box from '../../atoms/Box'\\\\\\\\n\\\\\\\\nimport ThemeWrapper from '../../../utilities/components/ThemeWrapper'\\\\\\\\nimport { tPlacement } from '../../../utilities/types'\\\\\\\\n\\\\\\\\nexport default {\\\\\\\\n  title: `${path}/Tooltip`,\\\\\\\\n  decorators: [withKnobs],\\\\\\\\n  component: Tooltip,\\\\\\\\n  parameters: {\\\\\\\\n    props: {\\\\\\\\n      propTablesExclude: [Box, Button, ThemeWrapper]\\\\\\\\n    }\\\\\\\\n  }\\\\\\\\n}\\\\\\\\n\\\\\\\\nconst radioOptions = {\\\\\\\\n  tooltipDirection: {\\\\\\\\n    top: 'top',\\\\\\\\n    bottom: 'bottom',\\\\\\\\n    right: 'right',\\\\\\\\n    left: 'left'\\\\\\\\n  },\\\\\\\\n  arrowPlacement: { start: 'start', center: 'center', end: 'end' },\\\\\\\\n  messagePlacement: { start: 'start', center: 'center', end: 'end' }\\\\\\\\n}\\\\\\\\n\\\\\\\\nexport const TooltipPlayground = () => (\\\\\\\\n  <ThemeWrapper>\\\\\\\\n    <Box p='3em' bgColor='grey.50' display='flex' justifyContent='center'>\\\\\\\\n      <Tooltip\\\\\\\\n        message={text(\\\\\\\\n          'message',\\\\\\\\n          'Customize your view by adding/removing columns. For the best view, a display of 8 columns is recommended.'\\\\\\\\n        )}\\\\\\\\n        tooltipDirection={\\\\\\\\n          radios(\\\\\\\\n            'tooltipDirection',\\\\\\\\n            radioOptions.tooltipDirection,\\\\\\\\n            'top'\\\\\\\\n          ) as tDirection\\\\\\\\n        }\\\\\\\\n        arrowPlacement={\\\\\\\\n          radios(\\\\\\\\n            'arrowPlacement',\\\\\\\\n            radioOptions.arrowPlacement,\\\\\\\\n            'center'\\\\\\\\n          ) as tPlacement\\\\\\\\n        }\\\\\\\\n        messagePlacement={\\\\\\\\n          radios(\\\\\\\\n            'messagePlacement',\\\\\\\\n            radioOptions.messagePlacement,\\\\\\\\n            'center'\\\\\\\\n          ) as tPlacement\\\\\\\\n        }\\\\\\\\n        hover={boolean('hover', false)}\\\\\\\\n        isWordWrap={boolean('Word Wrap', false)}\\\\\\\\n        maxWidth={number('maxWidth', 400)}\\\\\\\\n        color={{\\\\\\\\n          border: text('color.border', 'primary.dark'),\\\\\\\\n          arrow: text('color.arrow', 'primary.main'),\\\\\\\\n          background: text('color.background', 'primary.main'),\\\\\\\\n          text: text('color.text', 'primary.contrastText')\\\\\\\\n        }}\\\\\\\\n      >\\\\\\\\n        <Button>Hover Me!</Button>\\\\\\\\n      </Tooltip>\\\\\\\\n    </Box>\\\\\\\\n  </ThemeWrapper>\\\\\\\\n)\\\\\\\\n\\\\\\\";\\\\n// @ts-ignore\\\\nvar __ADDS_MAP__ = {};\\\\n// @ts-ignore\\\\nvar __MAIN_FILE_LOCATION__ = \\\\\\\"/Tooltip.stories.tsx\\\\\\\";\\\\n// @ts-ignore\\\\nvar __MODULE_DEPENDENCIES__ = [];\\\\n// @ts-ignore\\\\nvar __LOCAL_DEPENDENCIES__ = {};\\\\n// @ts-ignore\\\\nvar __IDS_TO_FRAMEWORKS__ = {};\\\\n        \\\\nimport React from 'react'\\\\n\\\\nimport {\\\\n  radios,\\\\n  withKnobs,\\\\n  boolean,\\\\n  text,\\\\n  number\\\\n} from '@storybook/addon-knobs'\\\\n\\\\nimport { path } from '..'\\\\nimport Tooltip, { tDirection } from '.'\\\\nimport Button from '../../atoms/Button'\\\\nimport Box from '../../atoms/Box'\\\\n\\\\nimport ThemeWrapper from '../../../utilities/components/ThemeWrapper'\\\\nimport { tPlacement } from '../../../utilities/types'\\\\n\\\\nexport default {\\\\n  title: `${path}/Tooltip`,\\\\n  decorators: [withKnobs],\\\\n  component: Tooltip,\\\\n  parameters: {\\\\\\\"storySource\\\\\\\":{\\\\\\\"source\\\\\\\":\\\\\\\"import React from 'react'\\\\\\\\n\\\\\\\\nimport {\\\\\\\\n  radios,\\\\\\\\n  withKnobs,\\\\\\\\n  boolean,\\\\\\\\n  text,\\\\\\\\n  number\\\\\\\\n} from '@storybook/addon-knobs'\\\\\\\\n\\\\\\\\nimport { path } from '..'\\\\\\\\nimport Tooltip, { tDirection } from '.'\\\\\\\\nimport Button from '../../atoms/Button'\\\\\\\\nimport Box from '../../atoms/Box'\\\\\\\\n\\\\\\\\nimport ThemeWrapper from '../../../utilities/components/ThemeWrapper'\\\\\\\\nimport { tPlacement } from '../../../utilities/types'\\\\\\\\n\\\\\\\\nexport default {\\\\\\\\n  title: `${path}/Tooltip`,\\\\\\\\n  decorators: [withKnobs],\\\\\\\\n  component: Tooltip,\\\\\\\\n  parameters: {\\\\\\\\n    props: {\\\\\\\\n      propTablesExclude: [Box, Button, ThemeWrapper]\\\\\\\\n    }\\\\\\\\n  }\\\\\\\\n}\\\\\\\\n\\\\\\\\nconst radioOptions = {\\\\\\\\n  tooltipDirection: {\\\\\\\\n    top: 'top',\\\\\\\\n    bottom: 'bottom',\\\\\\\\n    right: 'right',\\\\\\\\n    left: 'left'\\\\\\\\n  },\\\\\\\\n  arrowPlacement: { start: 'start', center: 'center', end: 'end' },\\\\\\\\n  messagePlacement: { start: 'start', center: 'center', end: 'end' }\\\\\\\\n}\\\\\\\\n\\\\\\\\nexport const TooltipPlayground = () => (\\\\\\\\n  <ThemeWrapper>\\\\\\\\n    <Box p='3em' bgColor='grey.50' display='flex' justifyContent='center'>\\\\\\\\n      <Tooltip\\\\\\\\n        message={text(\\\\\\\\n          'message',\\\\\\\\n          'Customize your view by adding/removing columns. For the best view, a display of 8 columns is recommended.'\\\\\\\\n        )}\\\\\\\\n        tooltipDirection={\\\\\\\\n          radios(\\\\\\\\n            'tooltipDirection',\\\\\\\\n            radioOptions.tooltipDirection,\\\\\\\\n            'top'\\\\\\\\n          ) as tDirection\\\\\\\\n        }\\\\\\\\n        arrowPlacement={\\\\\\\\n          radios(\\\\\\\\n            'arrowPlacement',\\\\\\\\n            radioOptions.arrowPlacement,\\\\\\\\n            'center'\\\\\\\\n          ) as tPlacement\\\\\\\\n        }\\\\\\\\n        messagePlacement={\\\\\\\\n          radios(\\\\\\\\n            'messagePlacement',\\\\\\\\n            radioOptions.messagePlacement,\\\\\\\\n            'center'\\\\\\\\n          ) as tPlacement\\\\\\\\n        }\\\\\\\\n        hover={boolean('hover', false)}\\\\\\\\n        isWordWrap={boolean('Word Wrap', false)}\\\\\\\\n        maxWidth={number('maxWidth', 400)}\\\\\\\\n        color={{\\\\\\\\n          border: text('color.border', 'primary.dark'),\\\\\\\\n          arrow: text('color.arrow', 'primary.main'),\\\\\\\\n          background: text('color.background', 'primary.main'),\\\\\\\\n          text: text('color.text', 'primary.contrastText')\\\\\\\\n        }}\\\\\\\\n      >\\\\\\\\n        <Button>Hover Me!</Button>\\\\\\\\n      </Tooltip>\\\\\\\\n    </Box>\\\\\\\\n  </ThemeWrapper>\\\\\\\\n)\\\\\\\\n\\\\\\\",\\\\\\\"locationsMap\\\\\\\":{}},\\\\n    props: {\\\\n      propTablesExclude: [Box, Button, ThemeWrapper]\\\\n    }\\\\n  },}\\\\n\\\\nconst radioOptions = {\\\\n  tooltipDirection: {\\\\n    top: 'top',\\\\n    bottom: 'bottom',\\\\n    right: 'right',\\\\n    left: 'left'\\\\n  },\\\\n  arrowPlacement: { start: 'start', center: 'center', end: 'end' },\\\\n  messagePlacement: { start: 'start', center: 'center', end: 'end' }\\\\n}\\\\n\\\\nexport const TooltipPlayground = addSourceDecorator(() => (\\\\n  <ThemeWrapper>\\\\n    <Box p='3em' bgColor='grey.50' display='flex' justifyContent='center'>\\\\n      <Tooltip\\\\n        message={text(\\\\n          'message',\\\\n          'Customize your view by adding/removing columns. For the best view, a display of 8 columns is recommended.'\\\\n        )}\\\\n        tooltipDirection={\\\\n          radios(\\\\n            'tooltipDirection',\\\\n            radioOptions.tooltipDirection,\\\\n            'top'\\\\n          ) as tDirection\\\\n        }\\\\n        arrowPlacement={\\\\n          radios(\\\\n            'arrowPlacement',\\\\n            radioOptions.arrowPlacement,\\\\n            'center'\\\\n          ) as tPlacement\\\\n        }\\\\n        messagePlacement={\\\\n          radios(\\\\n            'messagePlacement',\\\\n            radioOptions.messagePlacement,\\\\n            'center'\\\\n          ) as tPlacement\\\\n        }\\\\n        hover={boolean('hover', false)}\\\\n        isWordWrap={boolean('Word Wrap', false)}\\\\n        maxWidth={number('maxWidth', 400)}\\\\n        color={{\\\\n          border: text('color.border', 'primary.dark'),\\\\n          arrow: text('color.arrow', 'primary.main'),\\\\n          background: text('color.background', 'primary.main'),\\\\n          text: text('color.text', 'primary.contrastText')\\\\n        }}\\\\n      >\\\\n        <Button>Hover Me!</Button>\\\\n      </Tooltip>\\\\n    </Box>\\\\n  </ThemeWrapper>\\\\n), {__STORY__, __ADDS_MAP__,__MAIN_FILE_LOCATION__,__MODULE_DEPENDENCIES__,__LOCAL_DEPENDENCIES__,__SOURCE_PREFIX__,__IDS_TO_FRAMEWORKS__});\\\",\\\"locationsMap\\\":{}},\\\"storySource\\\":{\\\"source\\\":\\\"import React from 'react'\\\\n\\\\nimport {\\\\n  radios,\\\\n  withKnobs,\\\\n  boolean,\\\\n  text,\\\\n  number\\\\n} from '@storybook/addon-knobs'\\\\n\\\\nimport { path } from '..'\\\\nimport Tooltip, { tDirection } from '.'\\\\nimport Button from '../../atoms/Button'\\\\nimport Box from '../../atoms/Box'\\\\n\\\\nimport ThemeWrapper from '../../../utilities/components/ThemeWrapper'\\\\nimport { tPlacement } from '../../../utilities/types'\\\\n\\\\nexport default {\\\\n  title: `${path}/Tooltip`,\\\\n  decorators: [withKnobs],\\\\n  component: Tooltip,\\\\n  parameters: {\\\\n    props: {\\\\n      propTablesExclude: [Box, Button, ThemeWrapper]\\\\n    }\\\\n  }\\\\n}\\\\n\\\\nconst radioOptions = {\\\\n  tooltipDirection: {\\\\n    top: 'top',\\\\n    bottom: 'bottom',\\\\n    right: 'right',\\\\n    left: 'left'\\\\n  },\\\\n  arrowPlacement: { start: 'start', center: 'center', end: 'end' },\\\\n  messagePlacement: { start: 'start', center: 'center', end: 'end' }\\\\n}\\\\n\\\\nexport const TooltipPlayground = () => (\\\\n  <ThemeWrapper>\\\\n    <Box p='3em' bgColor='grey.50' display='flex' justifyContent='center'>\\\\n      <Tooltip\\\\n        message={text(\\\\n          'message',\\\\n          'Customize your view by adding/removing columns. For the best view, a display of 8 columns is recommended.'\\\\n        )}\\\\n        tooltipDirection={\\\\n          radios(\\\\n            'tooltipDirection',\\\\n            radioOptions.tooltipDirection,\\\\n            'top'\\\\n          ) as tDirection\\\\n        }\\\\n        arrowPlacement={\\\\n          radios(\\\\n            'arrowPlacement',\\\\n            radioOptions.arrowPlacement,\\\\n            'center'\\\\n          ) as tPlacement\\\\n        }\\\\n        messagePlacement={\\\\n          radios(\\\\n            'messagePlacement',\\\\n            radioOptions.messagePlacement,\\\\n            'center'\\\\n          ) as tPlacement\\\\n        }\\\\n        hover={boolean('hover', false)}\\\\n        isWordWrap={boolean('Word Wrap', false)}\\\\n        maxWidth={number('maxWidth', 400)}\\\\n        color={{\\\\n          border: text('color.border', 'primary.dark'),\\\\n          arrow: text('color.arrow', 'primary.main'),\\\\n          background: text('color.background', 'primary.main'),\\\\n          text: text('color.text', 'primary.contrastText')\\\\n        }}\\\\n      >\\\\n        <Button>Hover Me!</Button>\\\\n      </Tooltip>\\\\n    </Box>\\\\n  </ThemeWrapper>\\\\n)\\\\n\\\",\\\"locationsMap\\\":{}},\\n    props: {\\n      propTablesExclude: [Box, Button, ThemeWrapper]\\n    }\\n  },}\\n\\nconst radioOptions = {\\n  tooltipDirection: {\\n    top: 'top',\\n    bottom: 'bottom',\\n    right: 'right',\\n    left: 'left'\\n  },\\n  arrowPlacement: { start: 'start', center: 'center', end: 'end' },\\n  messagePlacement: { start: 'start', center: 'center', end: 'end' }\\n}\\n\\nexport const TooltipPlayground = addSourceDecorator(addSourceDecorator(() => (\\n  <ThemeWrapper>\\n    <Box p='3em' bgColor='grey.50' display='flex' justifyContent='center'>\\n      <Tooltip\\n        message={text(\\n          'message',\\n          'Customize your view by adding/removing columns. For the best view, a display of 8 columns is recommended.'\\n        )}\\n        tooltipDirection={\\n          radios(\\n            'tooltipDirection',\\n            radioOptions.tooltipDirection,\\n            'top'\\n          ) as tDirection\\n        }\\n        arrowPlacement={\\n          radios(\\n            'arrowPlacement',\\n            radioOptions.arrowPlacement,\\n            'center'\\n          ) as tPlacement\\n        }\\n        messagePlacement={\\n          radios(\\n            'messagePlacement',\\n            radioOptions.messagePlacement,\\n            'center'\\n          ) as tPlacement\\n        }\\n        hover={boolean('hover', false)}\\n        isWordWrap={boolean('Word Wrap', false)}\\n        maxWidth={number('maxWidth', 400)}\\n        color={{\\n          border: text('color.border', 'primary.dark'),\\n          arrow: text('color.arrow', 'primary.main'),\\n          background: text('color.background', 'primary.main'),\\n          text: text('color.text', 'primary.contrastText')\\n        }}\\n      >\\n        <Button>Hover Me!</Button>\\n      </Tooltip>\\n    </Box>\\n  </ThemeWrapper>\\n), {__STORY__, __ADDS_MAP__,__MAIN_FILE_LOCATION__,__MODULE_DEPENDENCIES__,__LOCAL_DEPENDENCIES__,__SOURCE_PREFIX__,__IDS_TO_FRAMEWORKS__}), {__STORY__, __ADDS_MAP__,__MAIN_FILE_LOCATION__,__MODULE_DEPENDENCIES__,__LOCAL_DEPENDENCIES__,__SOURCE_PREFIX__,__IDS_TO_FRAMEWORKS__});\"; // @ts-ignore\n\nvar __ADDS_MAP__ = {}; // @ts-ignore\n\nvar __MAIN_FILE_LOCATION__ = \"/Tooltip.stories.tsx\"; // @ts-ignore\n\nvar __MODULE_DEPENDENCIES__ = []; // @ts-ignore\n\nvar __LOCAL_DEPENDENCIES__ = {}; // @ts-ignore\n\nvar __IDS_TO_FRAMEWORKS__ = {};\n/* eslint-disable */\n// @ts-nocheck\n// @ts-ignore\n\nvar withSourceLoader = require('@storybook/source-loader/preview').withSource; // @ts-ignore\n\n\nvar addSourceDecorator = require(\"@storybook/source-loader/preview\").addSource; // @ts-ignore\n\n\nvar __SOURCE_PREFIX__ = \"/Users/farhanansari/Code/ui-library/src/components/molecules/Tooltip\"; // @ts-ignore\n\nvar __STORY__ = \"\\n\\n// @ts-nocheck\\n// @ts-ignore\\nvar withSourceLoader = require('@storybook/source-loader/preview').withSource;\\n// @ts-ignore\\nvar addSourceDecorator = require(\\\"@storybook/source-loader/preview\\\").addSource;\\n// @ts-ignore\\nvar __SOURCE_PREFIX__ = \\\"/Users/farhanansari/Code/ui-library/src/components/molecules/Tooltip\\\";\\n// @ts-ignore\\nvar __STORY__ = \\\"import React from 'react'\\\\n\\\\nimport {\\\\n  radios,\\\\n  withKnobs,\\\\n  boolean,\\\\n  text,\\\\n  number\\\\n} from '@storybook/addon-knobs'\\\\n\\\\nimport { path } from '..'\\\\nimport Tooltip, { tDirection } from '.'\\\\nimport Button from '../../atoms/Button'\\\\nimport Box from '../../atoms/Box'\\\\n\\\\nimport ThemeWrapper from '../../../utilities/components/ThemeWrapper'\\\\nimport { tPlacement } from '../../../utilities/types'\\\\n\\\\nexport default {\\\\n  title: `${path}/Tooltip`,\\\\n  decorators: [withKnobs],\\\\n  component: Tooltip,\\\\n  parameters: {\\\\n    props: {\\\\n      propTablesExclude: [Box, Button, ThemeWrapper]\\\\n    }\\\\n  }\\\\n}\\\\n\\\\nconst radioOptions = {\\\\n  tooltipDirection: {\\\\n    top: 'top',\\\\n    bottom: 'bottom',\\\\n    right: 'right',\\\\n    left: 'left'\\\\n  },\\\\n  arrowPlacement: { start: 'start', center: 'center', end: 'end' },\\\\n  messagePlacement: { start: 'start', center: 'center', end: 'end' }\\\\n}\\\\n\\\\nexport const TooltipPlayground = () => (\\\\n  <ThemeWrapper>\\\\n    <Box p='3em' bgColor='grey.50' display='flex' justifyContent='center'>\\\\n      <Tooltip\\\\n        message={text(\\\\n          'message',\\\\n          'Customize your view by adding/removing columns. For the best view, a display of 8 columns is recommended.'\\\\n        )}\\\\n        tooltipDirection={\\\\n          radios(\\\\n            'tooltipDirection',\\\\n            radioOptions.tooltipDirection,\\\\n            'top'\\\\n          ) as tDirection\\\\n        }\\\\n        arrowPlacement={\\\\n          radios(\\\\n            'arrowPlacement',\\\\n            radioOptions.arrowPlacement,\\\\n            'center'\\\\n          ) as tPlacement\\\\n        }\\\\n        messagePlacement={\\\\n          radios(\\\\n            'messagePlacement',\\\\n            radioOptions.messagePlacement,\\\\n            'center'\\\\n          ) as tPlacement\\\\n        }\\\\n        hover={boolean('hover', false)}\\\\n        isWordWrap={boolean('Word Wrap', false)}\\\\n        maxWidth={number('maxWidth', 400)}\\\\n        color={{\\\\n          border: text('color.border', 'primary.dark'),\\\\n          arrow: text('color.arrow', 'primary.main'),\\\\n          background: text('color.background', 'primary.main'),\\\\n          text: text('color.text', 'primary.contrastText')\\\\n        }}\\\\n      >\\\\n        <Button>Hover Me!</Button>\\\\n      </Tooltip>\\\\n    </Box>\\\\n  </ThemeWrapper>\\\\n)\\\\n\\\";\\n// @ts-ignore\\nvar __ADDS_MAP__ = {};\\n// @ts-ignore\\nvar __MAIN_FILE_LOCATION__ = \\\"/Tooltip.stories.tsx\\\";\\n// @ts-ignore\\nvar __MODULE_DEPENDENCIES__ = [];\\n// @ts-ignore\\nvar __LOCAL_DEPENDENCIES__ = {};\\n// @ts-ignore\\nvar __IDS_TO_FRAMEWORKS__ = {};\\n        \\nimport React from 'react'\\n\\nimport {\\n  radios,\\n  withKnobs,\\n  boolean,\\n  text,\\n  number\\n} from '@storybook/addon-knobs'\\n\\nimport { path } from '..'\\nimport Tooltip, { tDirection } from '.'\\nimport Button from '../../atoms/Button'\\nimport Box from '../../atoms/Box'\\n\\nimport ThemeWrapper from '../../../utilities/components/ThemeWrapper'\\nimport { tPlacement } from '../../../utilities/types'\\n\\nexport default {\\n  title: `${path}/Tooltip`,\\n  decorators: [withKnobs],\\n  component: Tooltip,\\n  parameters: {\\\"storySource\\\":{\\\"source\\\":\\\"import React from 'react'\\\\n\\\\nimport {\\\\n  radios,\\\\n  withKnobs,\\\\n  boolean,\\\\n  text,\\\\n  number\\\\n} from '@storybook/addon-knobs'\\\\n\\\\nimport { path } from '..'\\\\nimport Tooltip, { tDirection } from '.'\\\\nimport Button from '../../atoms/Button'\\\\nimport Box from '../../atoms/Box'\\\\n\\\\nimport ThemeWrapper from '../../../utilities/components/ThemeWrapper'\\\\nimport { tPlacement } from '../../../utilities/types'\\\\n\\\\nexport default {\\\\n  title: `${path}/Tooltip`,\\\\n  decorators: [withKnobs],\\\\n  component: Tooltip,\\\\n  parameters: {\\\\n    props: {\\\\n      propTablesExclude: [Box, Button, ThemeWrapper]\\\\n    }\\\\n  }\\\\n}\\\\n\\\\nconst radioOptions = {\\\\n  tooltipDirection: {\\\\n    top: 'top',\\\\n    bottom: 'bottom',\\\\n    right: 'right',\\\\n    left: 'left'\\\\n  },\\\\n  arrowPlacement: { start: 'start', center: 'center', end: 'end' },\\\\n  messagePlacement: { start: 'start', center: 'center', end: 'end' }\\\\n}\\\\n\\\\nexport const TooltipPlayground = () => (\\\\n  <ThemeWrapper>\\\\n    <Box p='3em' bgColor='grey.50' display='flex' justifyContent='center'>\\\\n      <Tooltip\\\\n        message={text(\\\\n          'message',\\\\n          'Customize your view by adding/removing columns. For the best view, a display of 8 columns is recommended.'\\\\n        )}\\\\n        tooltipDirection={\\\\n          radios(\\\\n            'tooltipDirection',\\\\n            radioOptions.tooltipDirection,\\\\n            'top'\\\\n          ) as tDirection\\\\n        }\\\\n        arrowPlacement={\\\\n          radios(\\\\n            'arrowPlacement',\\\\n            radioOptions.arrowPlacement,\\\\n            'center'\\\\n          ) as tPlacement\\\\n        }\\\\n        messagePlacement={\\\\n          radios(\\\\n            'messagePlacement',\\\\n            radioOptions.messagePlacement,\\\\n            'center'\\\\n          ) as tPlacement\\\\n        }\\\\n        hover={boolean('hover', false)}\\\\n        isWordWrap={boolean('Word Wrap', false)}\\\\n        maxWidth={number('maxWidth', 400)}\\\\n        color={{\\\\n          border: text('color.border', 'primary.dark'),\\\\n          arrow: text('color.arrow', 'primary.main'),\\\\n          background: text('color.background', 'primary.main'),\\\\n          text: text('color.text', 'primary.contrastText')\\\\n        }}\\\\n      >\\\\n        <Button>Hover Me!</Button>\\\\n      </Tooltip>\\\\n    </Box>\\\\n  </ThemeWrapper>\\\\n)\\\\n\\\",\\\"locationsMap\\\":{}},\\n    props: {\\n      propTablesExclude: [Box, Button, ThemeWrapper]\\n    }\\n  },}\\n\\nconst radioOptions = {\\n  tooltipDirection: {\\n    top: 'top',\\n    bottom: 'bottom',\\n    right: 'right',\\n    left: 'left'\\n  },\\n  arrowPlacement: { start: 'start', center: 'center', end: 'end' },\\n  messagePlacement: { start: 'start', center: 'center', end: 'end' }\\n}\\n\\nexport const TooltipPlayground = addSourceDecorator(() => (\\n  <ThemeWrapper>\\n    <Box p='3em' bgColor='grey.50' display='flex' justifyContent='center'>\\n      <Tooltip\\n        message={text(\\n          'message',\\n          'Customize your view by adding/removing columns. For the best view, a display of 8 columns is recommended.'\\n        )}\\n        tooltipDirection={\\n          radios(\\n            'tooltipDirection',\\n            radioOptions.tooltipDirection,\\n            'top'\\n          ) as tDirection\\n        }\\n        arrowPlacement={\\n          radios(\\n            'arrowPlacement',\\n            radioOptions.arrowPlacement,\\n            'center'\\n          ) as tPlacement\\n        }\\n        messagePlacement={\\n          radios(\\n            'messagePlacement',\\n            radioOptions.messagePlacement,\\n            'center'\\n          ) as tPlacement\\n        }\\n        hover={boolean('hover', false)}\\n        isWordWrap={boolean('Word Wrap', false)}\\n        maxWidth={number('maxWidth', 400)}\\n        color={{\\n          border: text('color.border', 'primary.dark'),\\n          arrow: text('color.arrow', 'primary.main'),\\n          background: text('color.background', 'primary.main'),\\n          text: text('color.text', 'primary.contrastText')\\n        }}\\n      >\\n        <Button>Hover Me!</Button>\\n      </Tooltip>\\n    </Box>\\n  </ThemeWrapper>\\n), {__STORY__, __ADDS_MAP__,__MAIN_FILE_LOCATION__,__MODULE_DEPENDENCIES__,__LOCAL_DEPENDENCIES__,__SOURCE_PREFIX__,__IDS_TO_FRAMEWORKS__});\"; // @ts-ignore\n\nvar __ADDS_MAP__ = {}; // @ts-ignore\n\nvar __MAIN_FILE_LOCATION__ = \"/Tooltip.stories.tsx\"; // @ts-ignore\n\nvar __MODULE_DEPENDENCIES__ = []; // @ts-ignore\n\nvar __LOCAL_DEPENDENCIES__ = {}; // @ts-ignore\n\nvar __IDS_TO_FRAMEWORKS__ = {};\n/* eslint-disable */\n// @ts-nocheck\n// @ts-ignore\n\nvar withSourceLoader = require('@storybook/source-loader/preview').withSource; // @ts-ignore\n\n\nvar addSourceDecorator = require(\"@storybook/source-loader/preview\").addSource; // @ts-ignore\n\n\nvar __SOURCE_PREFIX__ = \"/Users/farhanansari/Code/ui-library/src/components/molecules/Tooltip\"; // @ts-ignore\n\nvar __STORY__ = \"import React from 'react'\\n\\nimport {\\n  radios,\\n  withKnobs,\\n  boolean,\\n  text,\\n  number\\n} from '@storybook/addon-knobs'\\n\\nimport { path } from '..'\\nimport Tooltip, { tDirection } from '.'\\nimport Button from '../../atoms/Button'\\nimport Box from '../../atoms/Box'\\n\\nimport ThemeWrapper from '../../../utilities/components/ThemeWrapper'\\nimport { tPlacement } from '../../../utilities/types'\\n\\nexport default {\\n  title: `${path}/Tooltip`,\\n  decorators: [withKnobs],\\n  component: Tooltip,\\n  parameters: {\\n    props: {\\n      propTablesExclude: [Box, Button, ThemeWrapper]\\n    }\\n  }\\n}\\n\\nconst radioOptions = {\\n  tooltipDirection: {\\n    top: 'top',\\n    bottom: 'bottom',\\n    right: 'right',\\n    left: 'left'\\n  },\\n  arrowPlacement: { start: 'start', center: 'center', end: 'end' },\\n  messagePlacement: { start: 'start', center: 'center', end: 'end' }\\n}\\n\\nexport const TooltipPlayground = () => (\\n  <ThemeWrapper>\\n    <Box p='3em' bgColor='grey.50' display='flex' justifyContent='center'>\\n      <Tooltip\\n        message={text(\\n          'message',\\n          'Customize your view by adding/removing columns. For the best view, a display of 8 columns is recommended.'\\n        )}\\n        tooltipDirection={\\n          radios(\\n            'tooltipDirection',\\n            radioOptions.tooltipDirection,\\n            'top'\\n          ) as tDirection\\n        }\\n        arrowPlacement={\\n          radios(\\n            'arrowPlacement',\\n            radioOptions.arrowPlacement,\\n            'center'\\n          ) as tPlacement\\n        }\\n        messagePlacement={\\n          radios(\\n            'messagePlacement',\\n            radioOptions.messagePlacement,\\n            'center'\\n          ) as tPlacement\\n        }\\n        hover={boolean('hover', false)}\\n        isWordWrap={boolean('Word Wrap', false)}\\n        maxWidth={number('maxWidth', 400)}\\n        color={{\\n          border: text('color.border', 'primary.dark'),\\n          arrow: text('color.arrow', 'primary.main'),\\n          background: text('color.background', 'primary.main'),\\n          text: text('color.text', 'primary.contrastText')\\n        }}\\n      >\\n        <Button>Hover Me!</Button>\\n      </Tooltip>\\n    </Box>\\n  </ThemeWrapper>\\n)\\n\"; // @ts-ignore\n\nvar __ADDS_MAP__ = {}; // @ts-ignore\n\nvar __MAIN_FILE_LOCATION__ = \"/Tooltip.stories.tsx\"; // @ts-ignore\n\nvar __MODULE_DEPENDENCIES__ = []; // @ts-ignore\n\nvar __LOCAL_DEPENDENCIES__ = {}; // @ts-ignore\n\nvar __IDS_TO_FRAMEWORKS__ = {};\nimport React from 'react';\nimport { radios, withKnobs, boolean as _boolean, text, number } from '@storybook/addon-knobs';\nimport { path } from '..';\nimport Tooltip from '.';\nimport Button from '../../atoms/Button';\nimport Box from '../../atoms/Box';\nimport ThemeWrapper from '../../../utilities/components/ThemeWrapper';\nexport default {\n  title: path + \"/Tooltip\",\n  decorators: [withKnobs],\n  component: Tooltip,\n  parameters: (_parameters = {\n    \"storySource\": {\n      \"source\": \"\\n\\n// @ts-nocheck\\n// @ts-ignore\\nvar withSourceLoader = require('@storybook/source-loader/preview').withSource;\\n// @ts-ignore\\nvar addSourceDecorator = require(\\\"@storybook/source-loader/preview\\\").addSource;\\n// @ts-ignore\\nvar __SOURCE_PREFIX__ = \\\"/Users/farhanansari/Code/ui-library/src/components/molecules/Tooltip\\\";\\n// @ts-ignore\\nvar __STORY__ = \\\"\\\\n\\\\n// @ts-nocheck\\\\n// @ts-ignore\\\\nvar withSourceLoader = require('@storybook/source-loader/preview').withSource;\\\\n// @ts-ignore\\\\nvar addSourceDecorator = require(\\\\\\\"@storybook/source-loader/preview\\\\\\\").addSource;\\\\n// @ts-ignore\\\\nvar __SOURCE_PREFIX__ = \\\\\\\"/Users/farhanansari/Code/ui-library/src/components/molecules/Tooltip\\\\\\\";\\\\n// @ts-ignore\\\\nvar __STORY__ = \\\\\\\"import React from 'react'\\\\\\\\n\\\\\\\\nimport {\\\\\\\\n  radios,\\\\\\\\n  withKnobs,\\\\\\\\n  boolean,\\\\\\\\n  text,\\\\\\\\n  number\\\\\\\\n} from '@storybook/addon-knobs'\\\\\\\\n\\\\\\\\nimport { path } from '..'\\\\\\\\nimport Tooltip, { tDirection } from '.'\\\\\\\\nimport Button from '../../atoms/Button'\\\\\\\\nimport Box from '../../atoms/Box'\\\\\\\\n\\\\\\\\nimport ThemeWrapper from '../../../utilities/components/ThemeWrapper'\\\\\\\\nimport { tPlacement } from '../../../utilities/types'\\\\\\\\n\\\\\\\\nexport default {\\\\\\\\n  title: `${path}/Tooltip`,\\\\\\\\n  decorators: [withKnobs],\\\\\\\\n  component: Tooltip,\\\\\\\\n  parameters: {\\\\\\\\n    props: {\\\\\\\\n      propTablesExclude: [Box, Button, ThemeWrapper]\\\\\\\\n    }\\\\\\\\n  }\\\\\\\\n}\\\\\\\\n\\\\\\\\nconst radioOptions = {\\\\\\\\n  tooltipDirection: {\\\\\\\\n    top: 'top',\\\\\\\\n    bottom: 'bottom',\\\\\\\\n    right: 'right',\\\\\\\\n    left: 'left'\\\\\\\\n  },\\\\\\\\n  arrowPlacement: { start: 'start', center: 'center', end: 'end' },\\\\\\\\n  messagePlacement: { start: 'start', center: 'center', end: 'end' }\\\\\\\\n}\\\\\\\\n\\\\\\\\nexport const TooltipPlayground = () => (\\\\\\\\n  <ThemeWrapper>\\\\\\\\n    <Box p='3em' bgColor='grey.50' display='flex' justifyContent='center'>\\\\\\\\n      <Tooltip\\\\\\\\n        message={text(\\\\\\\\n          'message',\\\\\\\\n          'Customize your view by adding/removing columns. For the best view, a display of 8 columns is recommended.'\\\\\\\\n        )}\\\\\\\\n        tooltipDirection={\\\\\\\\n          radios(\\\\\\\\n            'tooltipDirection',\\\\\\\\n            radioOptions.tooltipDirection,\\\\\\\\n            'top'\\\\\\\\n          ) as tDirection\\\\\\\\n        }\\\\\\\\n        arrowPlacement={\\\\\\\\n          radios(\\\\\\\\n            'arrowPlacement',\\\\\\\\n            radioOptions.arrowPlacement,\\\\\\\\n            'center'\\\\\\\\n          ) as tPlacement\\\\\\\\n        }\\\\\\\\n        messagePlacement={\\\\\\\\n          radios(\\\\\\\\n            'messagePlacement',\\\\\\\\n            radioOptions.messagePlacement,\\\\\\\\n            'center'\\\\\\\\n          ) as tPlacement\\\\\\\\n        }\\\\\\\\n        hover={boolean('hover', false)}\\\\\\\\n        isWordWrap={boolean('Word Wrap', false)}\\\\\\\\n        maxWidth={number('maxWidth', 400)}\\\\\\\\n        color={{\\\\\\\\n          border: text('color.border', 'primary.dark'),\\\\\\\\n          arrow: text('color.arrow', 'primary.main'),\\\\\\\\n          background: text('color.background', 'primary.main'),\\\\\\\\n          text: text('color.text', 'primary.contrastText')\\\\\\\\n        }}\\\\\\\\n      >\\\\\\\\n        <Button>Hover Me!</Button>\\\\\\\\n      </Tooltip>\\\\\\\\n    </Box>\\\\\\\\n  </ThemeWrapper>\\\\\\\\n)\\\\\\\\n\\\\\\\";\\\\n// @ts-ignore\\\\nvar __ADDS_MAP__ = {};\\\\n// @ts-ignore\\\\nvar __MAIN_FILE_LOCATION__ = \\\\\\\"/Tooltip.stories.tsx\\\\\\\";\\\\n// @ts-ignore\\\\nvar __MODULE_DEPENDENCIES__ = [];\\\\n// @ts-ignore\\\\nvar __LOCAL_DEPENDENCIES__ = {};\\\\n// @ts-ignore\\\\nvar __IDS_TO_FRAMEWORKS__ = {};\\\\n        \\\\nimport React from 'react'\\\\n\\\\nimport {\\\\n  radios,\\\\n  withKnobs,\\\\n  boolean,\\\\n  text,\\\\n  number\\\\n} from '@storybook/addon-knobs'\\\\n\\\\nimport { path } from '..'\\\\nimport Tooltip, { tDirection } from '.'\\\\nimport Button from '../../atoms/Button'\\\\nimport Box from '../../atoms/Box'\\\\n\\\\nimport ThemeWrapper from '../../../utilities/components/ThemeWrapper'\\\\nimport { tPlacement } from '../../../utilities/types'\\\\n\\\\nexport default {\\\\n  title: `${path}/Tooltip`,\\\\n  decorators: [withKnobs],\\\\n  component: Tooltip,\\\\n  parameters: {\\\\\\\"storySource\\\\\\\":{\\\\\\\"source\\\\\\\":\\\\\\\"import React from 'react'\\\\\\\\n\\\\\\\\nimport {\\\\\\\\n  radios,\\\\\\\\n  withKnobs,\\\\\\\\n  boolean,\\\\\\\\n  text,\\\\\\\\n  number\\\\\\\\n} from '@storybook/addon-knobs'\\\\\\\\n\\\\\\\\nimport { path } from '..'\\\\\\\\nimport Tooltip, { tDirection } from '.'\\\\\\\\nimport Button from '../../atoms/Button'\\\\\\\\nimport Box from '../../atoms/Box'\\\\\\\\n\\\\\\\\nimport ThemeWrapper from '../../../utilities/components/ThemeWrapper'\\\\\\\\nimport { tPlacement } from '../../../utilities/types'\\\\\\\\n\\\\\\\\nexport default {\\\\\\\\n  title: `${path}/Tooltip`,\\\\\\\\n  decorators: [withKnobs],\\\\\\\\n  component: Tooltip,\\\\\\\\n  parameters: {\\\\\\\\n    props: {\\\\\\\\n      propTablesExclude: [Box, Button, ThemeWrapper]\\\\\\\\n    }\\\\\\\\n  }\\\\\\\\n}\\\\\\\\n\\\\\\\\nconst radioOptions = {\\\\\\\\n  tooltipDirection: {\\\\\\\\n    top: 'top',\\\\\\\\n    bottom: 'bottom',\\\\\\\\n    right: 'right',\\\\\\\\n    left: 'left'\\\\\\\\n  },\\\\\\\\n  arrowPlacement: { start: 'start', center: 'center', end: 'end' },\\\\\\\\n  messagePlacement: { start: 'start', center: 'center', end: 'end' }\\\\\\\\n}\\\\\\\\n\\\\\\\\nexport const TooltipPlayground = () => (\\\\\\\\n  <ThemeWrapper>\\\\\\\\n    <Box p='3em' bgColor='grey.50' display='flex' justifyContent='center'>\\\\\\\\n      <Tooltip\\\\\\\\n        message={text(\\\\\\\\n          'message',\\\\\\\\n          'Customize your view by adding/removing columns. For the best view, a display of 8 columns is recommended.'\\\\\\\\n        )}\\\\\\\\n        tooltipDirection={\\\\\\\\n          radios(\\\\\\\\n            'tooltipDirection',\\\\\\\\n            radioOptions.tooltipDirection,\\\\\\\\n            'top'\\\\\\\\n          ) as tDirection\\\\\\\\n        }\\\\\\\\n        arrowPlacement={\\\\\\\\n          radios(\\\\\\\\n            'arrowPlacement',\\\\\\\\n            radioOptions.arrowPlacement,\\\\\\\\n            'center'\\\\\\\\n          ) as tPlacement\\\\\\\\n        }\\\\\\\\n        messagePlacement={\\\\\\\\n          radios(\\\\\\\\n            'messagePlacement',\\\\\\\\n            radioOptions.messagePlacement,\\\\\\\\n            'center'\\\\\\\\n          ) as tPlacement\\\\\\\\n        }\\\\\\\\n        hover={boolean('hover', false)}\\\\\\\\n        isWordWrap={boolean('Word Wrap', false)}\\\\\\\\n        maxWidth={number('maxWidth', 400)}\\\\\\\\n        color={{\\\\\\\\n          border: text('color.border', 'primary.dark'),\\\\\\\\n          arrow: text('color.arrow', 'primary.main'),\\\\\\\\n          background: text('color.background', 'primary.main'),\\\\\\\\n          text: text('color.text', 'primary.contrastText')\\\\\\\\n        }}\\\\\\\\n      >\\\\\\\\n        <Button>Hover Me!</Button>\\\\\\\\n      </Tooltip>\\\\\\\\n    </Box>\\\\\\\\n  </ThemeWrapper>\\\\\\\\n)\\\\\\\\n\\\\\\\",\\\\\\\"locationsMap\\\\\\\":{}},\\\\n    props: {\\\\n      propTablesExclude: [Box, Button, ThemeWrapper]\\\\n    }\\\\n  },}\\\\n\\\\nconst radioOptions = {\\\\n  tooltipDirection: {\\\\n    top: 'top',\\\\n    bottom: 'bottom',\\\\n    right: 'right',\\\\n    left: 'left'\\\\n  },\\\\n  arrowPlacement: { start: 'start', center: 'center', end: 'end' },\\\\n  messagePlacement: { start: 'start', center: 'center', end: 'end' }\\\\n}\\\\n\\\\nexport const TooltipPlayground = addSourceDecorator(() => (\\\\n  <ThemeWrapper>\\\\n    <Box p='3em' bgColor='grey.50' display='flex' justifyContent='center'>\\\\n      <Tooltip\\\\n        message={text(\\\\n          'message',\\\\n          'Customize your view by adding/removing columns. For the best view, a display of 8 columns is recommended.'\\\\n        )}\\\\n        tooltipDirection={\\\\n          radios(\\\\n            'tooltipDirection',\\\\n            radioOptions.tooltipDirection,\\\\n            'top'\\\\n          ) as tDirection\\\\n        }\\\\n        arrowPlacement={\\\\n          radios(\\\\n            'arrowPlacement',\\\\n            radioOptions.arrowPlacement,\\\\n            'center'\\\\n          ) as tPlacement\\\\n        }\\\\n        messagePlacement={\\\\n          radios(\\\\n            'messagePlacement',\\\\n            radioOptions.messagePlacement,\\\\n            'center'\\\\n          ) as tPlacement\\\\n        }\\\\n        hover={boolean('hover', false)}\\\\n        isWordWrap={boolean('Word Wrap', false)}\\\\n        maxWidth={number('maxWidth', 400)}\\\\n        color={{\\\\n          border: text('color.border', 'primary.dark'),\\\\n          arrow: text('color.arrow', 'primary.main'),\\\\n          background: text('color.background', 'primary.main'),\\\\n          text: text('color.text', 'primary.contrastText')\\\\n        }}\\\\n      >\\\\n        <Button>Hover Me!</Button>\\\\n      </Tooltip>\\\\n    </Box>\\\\n  </ThemeWrapper>\\\\n), {__STORY__, __ADDS_MAP__,__MAIN_FILE_LOCATION__,__MODULE_DEPENDENCIES__,__LOCAL_DEPENDENCIES__,__SOURCE_PREFIX__,__IDS_TO_FRAMEWORKS__});\\\";\\n// @ts-ignore\\nvar __ADDS_MAP__ = {};\\n// @ts-ignore\\nvar __MAIN_FILE_LOCATION__ = \\\"/Tooltip.stories.tsx\\\";\\n// @ts-ignore\\nvar __MODULE_DEPENDENCIES__ = [];\\n// @ts-ignore\\nvar __LOCAL_DEPENDENCIES__ = {};\\n// @ts-ignore\\nvar __IDS_TO_FRAMEWORKS__ = {};\\n        \\n\\n\\n// @ts-nocheck\\n// @ts-ignore\\nvar withSourceLoader = require('@storybook/source-loader/preview').withSource;\\n// @ts-ignore\\nvar addSourceDecorator = require(\\\"@storybook/source-loader/preview\\\").addSource;\\n// @ts-ignore\\nvar __SOURCE_PREFIX__ = \\\"/Users/farhanansari/Code/ui-library/src/components/molecules/Tooltip\\\";\\n// @ts-ignore\\nvar __STORY__ = \\\"import React from 'react'\\\\n\\\\nimport {\\\\n  radios,\\\\n  withKnobs,\\\\n  boolean,\\\\n  text,\\\\n  number\\\\n} from '@storybook/addon-knobs'\\\\n\\\\nimport { path } from '..'\\\\nimport Tooltip, { tDirection } from '.'\\\\nimport Button from '../../atoms/Button'\\\\nimport Box from '../../atoms/Box'\\\\n\\\\nimport ThemeWrapper from '../../../utilities/components/ThemeWrapper'\\\\nimport { tPlacement } from '../../../utilities/types'\\\\n\\\\nexport default {\\\\n  title: `${path}/Tooltip`,\\\\n  decorators: [withKnobs],\\\\n  component: Tooltip,\\\\n  parameters: {\\\\n    props: {\\\\n      propTablesExclude: [Box, Button, ThemeWrapper]\\\\n    }\\\\n  }\\\\n}\\\\n\\\\nconst radioOptions = {\\\\n  tooltipDirection: {\\\\n    top: 'top',\\\\n    bottom: 'bottom',\\\\n    right: 'right',\\\\n    left: 'left'\\\\n  },\\\\n  arrowPlacement: { start: 'start', center: 'center', end: 'end' },\\\\n  messagePlacement: { start: 'start', center: 'center', end: 'end' }\\\\n}\\\\n\\\\nexport const TooltipPlayground = () => (\\\\n  <ThemeWrapper>\\\\n    <Box p='3em' bgColor='grey.50' display='flex' justifyContent='center'>\\\\n      <Tooltip\\\\n        message={text(\\\\n          'message',\\\\n          'Customize your view by adding/removing columns. For the best view, a display of 8 columns is recommended.'\\\\n        )}\\\\n        tooltipDirection={\\\\n          radios(\\\\n            'tooltipDirection',\\\\n            radioOptions.tooltipDirection,\\\\n            'top'\\\\n          ) as tDirection\\\\n        }\\\\n        arrowPlacement={\\\\n          radios(\\\\n            'arrowPlacement',\\\\n            radioOptions.arrowPlacement,\\\\n            'center'\\\\n          ) as tPlacement\\\\n        }\\\\n        messagePlacement={\\\\n          radios(\\\\n            'messagePlacement',\\\\n            radioOptions.messagePlacement,\\\\n            'center'\\\\n          ) as tPlacement\\\\n        }\\\\n        hover={boolean('hover', false)}\\\\n        isWordWrap={boolean('Word Wrap', false)}\\\\n        maxWidth={number('maxWidth', 400)}\\\\n        color={{\\\\n          border: text('color.border', 'primary.dark'),\\\\n          arrow: text('color.arrow', 'primary.main'),\\\\n          background: text('color.background', 'primary.main'),\\\\n          text: text('color.text', 'primary.contrastText')\\\\n        }}\\\\n      >\\\\n        <Button>Hover Me!</Button>\\\\n      </Tooltip>\\\\n    </Box>\\\\n  </ThemeWrapper>\\\\n)\\\\n\\\";\\n// @ts-ignore\\nvar __ADDS_MAP__ = {};\\n// @ts-ignore\\nvar __MAIN_FILE_LOCATION__ = \\\"/Tooltip.stories.tsx\\\";\\n// @ts-ignore\\nvar __MODULE_DEPENDENCIES__ = [];\\n// @ts-ignore\\nvar __LOCAL_DEPENDENCIES__ = {};\\n// @ts-ignore\\nvar __IDS_TO_FRAMEWORKS__ = {};\\n        \\nimport React from 'react'\\n\\nimport {\\n  radios,\\n  withKnobs,\\n  boolean,\\n  text,\\n  number\\n} from '@storybook/addon-knobs'\\n\\nimport { path } from '..'\\nimport Tooltip, { tDirection } from '.'\\nimport Button from '../../atoms/Button'\\nimport Box from '../../atoms/Box'\\n\\nimport ThemeWrapper from '../../../utilities/components/ThemeWrapper'\\nimport { tPlacement } from '../../../utilities/types'\\n\\nexport default {\\n  title: `${path}/Tooltip`,\\n  decorators: [withKnobs],\\n  component: Tooltip,\\n  parameters: {\\\"storySource\\\":{\\\"source\\\":\\\"\\\\n\\\\n// @ts-nocheck\\\\n// @ts-ignore\\\\nvar withSourceLoader = require('@storybook/source-loader/preview').withSource;\\\\n// @ts-ignore\\\\nvar addSourceDecorator = require(\\\\\\\"@storybook/source-loader/preview\\\\\\\").addSource;\\\\n// @ts-ignore\\\\nvar __SOURCE_PREFIX__ = \\\\\\\"/Users/farhanansari/Code/ui-library/src/components/molecules/Tooltip\\\\\\\";\\\\n// @ts-ignore\\\\nvar __STORY__ = \\\\\\\"import React from 'react'\\\\\\\\n\\\\\\\\nimport {\\\\\\\\n  radios,\\\\\\\\n  withKnobs,\\\\\\\\n  boolean,\\\\\\\\n  text,\\\\\\\\n  number\\\\\\\\n} from '@storybook/addon-knobs'\\\\\\\\n\\\\\\\\nimport { path } from '..'\\\\\\\\nimport Tooltip, { tDirection } from '.'\\\\\\\\nimport Button from '../../atoms/Button'\\\\\\\\nimport Box from '../../atoms/Box'\\\\\\\\n\\\\\\\\nimport ThemeWrapper from '../../../utilities/components/ThemeWrapper'\\\\\\\\nimport { tPlacement } from '../../../utilities/types'\\\\\\\\n\\\\\\\\nexport default {\\\\\\\\n  title: `${path}/Tooltip`,\\\\\\\\n  decorators: [withKnobs],\\\\\\\\n  component: Tooltip,\\\\\\\\n  parameters: {\\\\\\\\n    props: {\\\\\\\\n      propTablesExclude: [Box, Button, ThemeWrapper]\\\\\\\\n    }\\\\\\\\n  }\\\\\\\\n}\\\\\\\\n\\\\\\\\nconst radioOptions = {\\\\\\\\n  tooltipDirection: {\\\\\\\\n    top: 'top',\\\\\\\\n    bottom: 'bottom',\\\\\\\\n    right: 'right',\\\\\\\\n    left: 'left'\\\\\\\\n  },\\\\\\\\n  arrowPlacement: { start: 'start', center: 'center', end: 'end' },\\\\\\\\n  messagePlacement: { start: 'start', center: 'center', end: 'end' }\\\\\\\\n}\\\\\\\\n\\\\\\\\nexport const TooltipPlayground = () => (\\\\\\\\n  <ThemeWrapper>\\\\\\\\n    <Box p='3em' bgColor='grey.50' display='flex' justifyContent='center'>\\\\\\\\n      <Tooltip\\\\\\\\n        message={text(\\\\\\\\n          'message',\\\\\\\\n          'Customize your view by adding/removing columns. For the best view, a display of 8 columns is recommended.'\\\\\\\\n        )}\\\\\\\\n        tooltipDirection={\\\\\\\\n          radios(\\\\\\\\n            'tooltipDirection',\\\\\\\\n            radioOptions.tooltipDirection,\\\\\\\\n            'top'\\\\\\\\n          ) as tDirection\\\\\\\\n        }\\\\\\\\n        arrowPlacement={\\\\\\\\n          radios(\\\\\\\\n            'arrowPlacement',\\\\\\\\n            radioOptions.arrowPlacement,\\\\\\\\n            'center'\\\\\\\\n          ) as tPlacement\\\\\\\\n        }\\\\\\\\n        messagePlacement={\\\\\\\\n          radios(\\\\\\\\n            'messagePlacement',\\\\\\\\n            radioOptions.messagePlacement,\\\\\\\\n            'center'\\\\\\\\n          ) as tPlacement\\\\\\\\n        }\\\\\\\\n        hover={boolean('hover', false)}\\\\\\\\n        isWordWrap={boolean('Word Wrap', false)}\\\\\\\\n        maxWidth={number('maxWidth', 400)}\\\\\\\\n        color={{\\\\\\\\n          border: text('color.border', 'primary.dark'),\\\\\\\\n          arrow: text('color.arrow', 'primary.main'),\\\\\\\\n          background: text('color.background', 'primary.main'),\\\\\\\\n          text: text('color.text', 'primary.contrastText')\\\\\\\\n        }}\\\\\\\\n      >\\\\\\\\n        <Button>Hover Me!</Button>\\\\\\\\n      </Tooltip>\\\\\\\\n    </Box>\\\\\\\\n  </ThemeWrapper>\\\\\\\\n)\\\\\\\\n\\\\\\\";\\\\n// @ts-ignore\\\\nvar __ADDS_MAP__ = {};\\\\n// @ts-ignore\\\\nvar __MAIN_FILE_LOCATION__ = \\\\\\\"/Tooltip.stories.tsx\\\\\\\";\\\\n// @ts-ignore\\\\nvar __MODULE_DEPENDENCIES__ = [];\\\\n// @ts-ignore\\\\nvar __LOCAL_DEPENDENCIES__ = {};\\\\n// @ts-ignore\\\\nvar __IDS_TO_FRAMEWORKS__ = {};\\\\n        \\\\nimport React from 'react'\\\\n\\\\nimport {\\\\n  radios,\\\\n  withKnobs,\\\\n  boolean,\\\\n  text,\\\\n  number\\\\n} from '@storybook/addon-knobs'\\\\n\\\\nimport { path } from '..'\\\\nimport Tooltip, { tDirection } from '.'\\\\nimport Button from '../../atoms/Button'\\\\nimport Box from '../../atoms/Box'\\\\n\\\\nimport ThemeWrapper from '../../../utilities/components/ThemeWrapper'\\\\nimport { tPlacement } from '../../../utilities/types'\\\\n\\\\nexport default {\\\\n  title: `${path}/Tooltip`,\\\\n  decorators: [withKnobs],\\\\n  component: Tooltip,\\\\n  parameters: {\\\\\\\"storySource\\\\\\\":{\\\\\\\"source\\\\\\\":\\\\\\\"import React from 'react'\\\\\\\\n\\\\\\\\nimport {\\\\\\\\n  radios,\\\\\\\\n  withKnobs,\\\\\\\\n  boolean,\\\\\\\\n  text,\\\\\\\\n  number\\\\\\\\n} from '@storybook/addon-knobs'\\\\\\\\n\\\\\\\\nimport { path } from '..'\\\\\\\\nimport Tooltip, { tDirection } from '.'\\\\\\\\nimport Button from '../../atoms/Button'\\\\\\\\nimport Box from '../../atoms/Box'\\\\\\\\n\\\\\\\\nimport ThemeWrapper from '../../../utilities/components/ThemeWrapper'\\\\\\\\nimport { tPlacement } from '../../../utilities/types'\\\\\\\\n\\\\\\\\nexport default {\\\\\\\\n  title: `${path}/Tooltip`,\\\\\\\\n  decorators: [withKnobs],\\\\\\\\n  component: Tooltip,\\\\\\\\n  parameters: {\\\\\\\\n    props: {\\\\\\\\n      propTablesExclude: [Box, Button, ThemeWrapper]\\\\\\\\n    }\\\\\\\\n  }\\\\\\\\n}\\\\\\\\n\\\\\\\\nconst radioOptions = {\\\\\\\\n  tooltipDirection: {\\\\\\\\n    top: 'top',\\\\\\\\n    bottom: 'bottom',\\\\\\\\n    right: 'right',\\\\\\\\n    left: 'left'\\\\\\\\n  },\\\\\\\\n  arrowPlacement: { start: 'start', center: 'center', end: 'end' },\\\\\\\\n  messagePlacement: { start: 'start', center: 'center', end: 'end' }\\\\\\\\n}\\\\\\\\n\\\\\\\\nexport const TooltipPlayground = () => (\\\\\\\\n  <ThemeWrapper>\\\\\\\\n    <Box p='3em' bgColor='grey.50' display='flex' justifyContent='center'>\\\\\\\\n      <Tooltip\\\\\\\\n        message={text(\\\\\\\\n          'message',\\\\\\\\n          'Customize your view by adding/removing columns. For the best view, a display of 8 columns is recommended.'\\\\\\\\n        )}\\\\\\\\n        tooltipDirection={\\\\\\\\n          radios(\\\\\\\\n            'tooltipDirection',\\\\\\\\n            radioOptions.tooltipDirection,\\\\\\\\n            'top'\\\\\\\\n          ) as tDirection\\\\\\\\n        }\\\\\\\\n        arrowPlacement={\\\\\\\\n          radios(\\\\\\\\n            'arrowPlacement',\\\\\\\\n            radioOptions.arrowPlacement,\\\\\\\\n            'center'\\\\\\\\n          ) as tPlacement\\\\\\\\n        }\\\\\\\\n        messagePlacement={\\\\\\\\n          radios(\\\\\\\\n            'messagePlacement',\\\\\\\\n            radioOptions.messagePlacement,\\\\\\\\n            'center'\\\\\\\\n          ) as tPlacement\\\\\\\\n        }\\\\\\\\n        hover={boolean('hover', false)}\\\\\\\\n        isWordWrap={boolean('Word Wrap', false)}\\\\\\\\n        maxWidth={number('maxWidth', 400)}\\\\\\\\n        color={{\\\\\\\\n          border: text('color.border', 'primary.dark'),\\\\\\\\n          arrow: text('color.arrow', 'primary.main'),\\\\\\\\n          background: text('color.background', 'primary.main'),\\\\\\\\n          text: text('color.text', 'primary.contrastText')\\\\\\\\n        }}\\\\\\\\n      >\\\\\\\\n        <Button>Hover Me!</Button>\\\\\\\\n      </Tooltip>\\\\\\\\n    </Box>\\\\\\\\n  </ThemeWrapper>\\\\\\\\n)\\\\\\\\n\\\\\\\",\\\\\\\"locationsMap\\\\\\\":{}},\\\\n    props: {\\\\n      propTablesExclude: [Box, Button, ThemeWrapper]\\\\n    }\\\\n  },}\\\\n\\\\nconst radioOptions = {\\\\n  tooltipDirection: {\\\\n    top: 'top',\\\\n    bottom: 'bottom',\\\\n    right: 'right',\\\\n    left: 'left'\\\\n  },\\\\n  arrowPlacement: { start: 'start', center: 'center', end: 'end' },\\\\n  messagePlacement: { start: 'start', center: 'center', end: 'end' }\\\\n}\\\\n\\\\nexport const TooltipPlayground = addSourceDecorator(() => (\\\\n  <ThemeWrapper>\\\\n    <Box p='3em' bgColor='grey.50' display='flex' justifyContent='center'>\\\\n      <Tooltip\\\\n        message={text(\\\\n          'message',\\\\n          'Customize your view by adding/removing columns. For the best view, a display of 8 columns is recommended.'\\\\n        )}\\\\n        tooltipDirection={\\\\n          radios(\\\\n            'tooltipDirection',\\\\n            radioOptions.tooltipDirection,\\\\n            'top'\\\\n          ) as tDirection\\\\n        }\\\\n        arrowPlacement={\\\\n          radios(\\\\n            'arrowPlacement',\\\\n            radioOptions.arrowPlacement,\\\\n            'center'\\\\n          ) as tPlacement\\\\n        }\\\\n        messagePlacement={\\\\n          radios(\\\\n            'messagePlacement',\\\\n            radioOptions.messagePlacement,\\\\n            'center'\\\\n          ) as tPlacement\\\\n        }\\\\n        hover={boolean('hover', false)}\\\\n        isWordWrap={boolean('Word Wrap', false)}\\\\n        maxWidth={number('maxWidth', 400)}\\\\n        color={{\\\\n          border: text('color.border', 'primary.dark'),\\\\n          arrow: text('color.arrow', 'primary.main'),\\\\n          background: text('color.background', 'primary.main'),\\\\n          text: text('color.text', 'primary.contrastText')\\\\n        }}\\\\n      >\\\\n        <Button>Hover Me!</Button>\\\\n      </Tooltip>\\\\n    </Box>\\\\n  </ThemeWrapper>\\\\n), {__STORY__, __ADDS_MAP__,__MAIN_FILE_LOCATION__,__MODULE_DEPENDENCIES__,__LOCAL_DEPENDENCIES__,__SOURCE_PREFIX__,__IDS_TO_FRAMEWORKS__});\\\",\\\"locationsMap\\\":{}},\\\"storySource\\\":{\\\"source\\\":\\\"import React from 'react'\\\\n\\\\nimport {\\\\n  radios,\\\\n  withKnobs,\\\\n  boolean,\\\\n  text,\\\\n  number\\\\n} from '@storybook/addon-knobs'\\\\n\\\\nimport { path } from '..'\\\\nimport Tooltip, { tDirection } from '.'\\\\nimport Button from '../../atoms/Button'\\\\nimport Box from '../../atoms/Box'\\\\n\\\\nimport ThemeWrapper from '../../../utilities/components/ThemeWrapper'\\\\nimport { tPlacement } from '../../../utilities/types'\\\\n\\\\nexport default {\\\\n  title: `${path}/Tooltip`,\\\\n  decorators: [withKnobs],\\\\n  component: Tooltip,\\\\n  parameters: {\\\\n    props: {\\\\n      propTablesExclude: [Box, Button, ThemeWrapper]\\\\n    }\\\\n  }\\\\n}\\\\n\\\\nconst radioOptions = {\\\\n  tooltipDirection: {\\\\n    top: 'top',\\\\n    bottom: 'bottom',\\\\n    right: 'right',\\\\n    left: 'left'\\\\n  },\\\\n  arrowPlacement: { start: 'start', center: 'center', end: 'end' },\\\\n  messagePlacement: { start: 'start', center: 'center', end: 'end' }\\\\n}\\\\n\\\\nexport const TooltipPlayground = () => (\\\\n  <ThemeWrapper>\\\\n    <Box p='3em' bgColor='grey.50' display='flex' justifyContent='center'>\\\\n      <Tooltip\\\\n        message={text(\\\\n          'message',\\\\n          'Customize your view by adding/removing columns. For the best view, a display of 8 columns is recommended.'\\\\n        )}\\\\n        tooltipDirection={\\\\n          radios(\\\\n            'tooltipDirection',\\\\n            radioOptions.tooltipDirection,\\\\n            'top'\\\\n          ) as tDirection\\\\n        }\\\\n        arrowPlacement={\\\\n          radios(\\\\n            'arrowPlacement',\\\\n            radioOptions.arrowPlacement,\\\\n            'center'\\\\n          ) as tPlacement\\\\n        }\\\\n        messagePlacement={\\\\n          radios(\\\\n            'messagePlacement',\\\\n            radioOptions.messagePlacement,\\\\n            'center'\\\\n          ) as tPlacement\\\\n        }\\\\n        hover={boolean('hover', false)}\\\\n        isWordWrap={boolean('Word Wrap', false)}\\\\n        maxWidth={number('maxWidth', 400)}\\\\n        color={{\\\\n          border: text('color.border', 'primary.dark'),\\\\n          arrow: text('color.arrow', 'primary.main'),\\\\n          background: text('color.background', 'primary.main'),\\\\n          text: text('color.text', 'primary.contrastText')\\\\n        }}\\\\n      >\\\\n        <Button>Hover Me!</Button>\\\\n      </Tooltip>\\\\n    </Box>\\\\n  </ThemeWrapper>\\\\n)\\\\n\\\",\\\"locationsMap\\\":{}},\\n    props: {\\n      propTablesExclude: [Box, Button, ThemeWrapper]\\n    }\\n  },}\\n\\nconst radioOptions = {\\n  tooltipDirection: {\\n    top: 'top',\\n    bottom: 'bottom',\\n    right: 'right',\\n    left: 'left'\\n  },\\n  arrowPlacement: { start: 'start', center: 'center', end: 'end' },\\n  messagePlacement: { start: 'start', center: 'center', end: 'end' }\\n}\\n\\nexport const TooltipPlayground = addSourceDecorator(addSourceDecorator(() => (\\n  <ThemeWrapper>\\n    <Box p='3em' bgColor='grey.50' display='flex' justifyContent='center'>\\n      <Tooltip\\n        message={text(\\n          'message',\\n          'Customize your view by adding/removing columns. For the best view, a display of 8 columns is recommended.'\\n        )}\\n        tooltipDirection={\\n          radios(\\n            'tooltipDirection',\\n            radioOptions.tooltipDirection,\\n            'top'\\n          ) as tDirection\\n        }\\n        arrowPlacement={\\n          radios(\\n            'arrowPlacement',\\n            radioOptions.arrowPlacement,\\n            'center'\\n          ) as tPlacement\\n        }\\n        messagePlacement={\\n          radios(\\n            'messagePlacement',\\n            radioOptions.messagePlacement,\\n            'center'\\n          ) as tPlacement\\n        }\\n        hover={boolean('hover', false)}\\n        isWordWrap={boolean('Word Wrap', false)}\\n        maxWidth={number('maxWidth', 400)}\\n        color={{\\n          border: text('color.border', 'primary.dark'),\\n          arrow: text('color.arrow', 'primary.main'),\\n          background: text('color.background', 'primary.main'),\\n          text: text('color.text', 'primary.contrastText')\\n        }}\\n      >\\n        <Button>Hover Me!</Button>\\n      </Tooltip>\\n    </Box>\\n  </ThemeWrapper>\\n), {__STORY__, __ADDS_MAP__,__MAIN_FILE_LOCATION__,__MODULE_DEPENDENCIES__,__LOCAL_DEPENDENCIES__,__SOURCE_PREFIX__,__IDS_TO_FRAMEWORKS__}), {__STORY__, __ADDS_MAP__,__MAIN_FILE_LOCATION__,__MODULE_DEPENDENCIES__,__LOCAL_DEPENDENCIES__,__SOURCE_PREFIX__,__IDS_TO_FRAMEWORKS__});\",\n      \"locationsMap\": {}\n    }\n  }, _defineProperty(_parameters, \"storySource\", {\n    \"source\": \"\\n\\n// @ts-nocheck\\n// @ts-ignore\\nvar withSourceLoader = require('@storybook/source-loader/preview').withSource;\\n// @ts-ignore\\nvar addSourceDecorator = require(\\\"@storybook/source-loader/preview\\\").addSource;\\n// @ts-ignore\\nvar __SOURCE_PREFIX__ = \\\"/Users/farhanansari/Code/ui-library/src/components/molecules/Tooltip\\\";\\n// @ts-ignore\\nvar __STORY__ = \\\"import React from 'react'\\\\n\\\\nimport {\\\\n  radios,\\\\n  withKnobs,\\\\n  boolean,\\\\n  text,\\\\n  number\\\\n} from '@storybook/addon-knobs'\\\\n\\\\nimport { path } from '..'\\\\nimport Tooltip, { tDirection } from '.'\\\\nimport Button from '../../atoms/Button'\\\\nimport Box from '../../atoms/Box'\\\\n\\\\nimport ThemeWrapper from '../../../utilities/components/ThemeWrapper'\\\\nimport { tPlacement } from '../../../utilities/types'\\\\n\\\\nexport default {\\\\n  title: `${path}/Tooltip`,\\\\n  decorators: [withKnobs],\\\\n  component: Tooltip,\\\\n  parameters: {\\\\n    props: {\\\\n      propTablesExclude: [Box, Button, ThemeWrapper]\\\\n    }\\\\n  }\\\\n}\\\\n\\\\nconst radioOptions = {\\\\n  tooltipDirection: {\\\\n    top: 'top',\\\\n    bottom: 'bottom',\\\\n    right: 'right',\\\\n    left: 'left'\\\\n  },\\\\n  arrowPlacement: { start: 'start', center: 'center', end: 'end' },\\\\n  messagePlacement: { start: 'start', center: 'center', end: 'end' }\\\\n}\\\\n\\\\nexport const TooltipPlayground = () => (\\\\n  <ThemeWrapper>\\\\n    <Box p='3em' bgColor='grey.50' display='flex' justifyContent='center'>\\\\n      <Tooltip\\\\n        message={text(\\\\n          'message',\\\\n          'Customize your view by adding/removing columns. For the best view, a display of 8 columns is recommended.'\\\\n        )}\\\\n        tooltipDirection={\\\\n          radios(\\\\n            'tooltipDirection',\\\\n            radioOptions.tooltipDirection,\\\\n            'top'\\\\n          ) as tDirection\\\\n        }\\\\n        arrowPlacement={\\\\n          radios(\\\\n            'arrowPlacement',\\\\n            radioOptions.arrowPlacement,\\\\n            'center'\\\\n          ) as tPlacement\\\\n        }\\\\n        messagePlacement={\\\\n          radios(\\\\n            'messagePlacement',\\\\n            radioOptions.messagePlacement,\\\\n            'center'\\\\n          ) as tPlacement\\\\n        }\\\\n        hover={boolean('hover', false)}\\\\n        isWordWrap={boolean('Word Wrap', false)}\\\\n        maxWidth={number('maxWidth', 400)}\\\\n        color={{\\\\n          border: text('color.border', 'primary.dark'),\\\\n          arrow: text('color.arrow', 'primary.main'),\\\\n          background: text('color.background', 'primary.main'),\\\\n          text: text('color.text', 'primary.contrastText')\\\\n        }}\\\\n      >\\\\n        <Button>Hover Me!</Button>\\\\n      </Tooltip>\\\\n    </Box>\\\\n  </ThemeWrapper>\\\\n)\\\\n\\\";\\n// @ts-ignore\\nvar __ADDS_MAP__ = {};\\n// @ts-ignore\\nvar __MAIN_FILE_LOCATION__ = \\\"/Tooltip.stories.tsx\\\";\\n// @ts-ignore\\nvar __MODULE_DEPENDENCIES__ = [];\\n// @ts-ignore\\nvar __LOCAL_DEPENDENCIES__ = {};\\n// @ts-ignore\\nvar __IDS_TO_FRAMEWORKS__ = {};\\n        \\nimport React from 'react'\\n\\nimport {\\n  radios,\\n  withKnobs,\\n  boolean,\\n  text,\\n  number\\n} from '@storybook/addon-knobs'\\n\\nimport { path } from '..'\\nimport Tooltip, { tDirection } from '.'\\nimport Button from '../../atoms/Button'\\nimport Box from '../../atoms/Box'\\n\\nimport ThemeWrapper from '../../../utilities/components/ThemeWrapper'\\nimport { tPlacement } from '../../../utilities/types'\\n\\nexport default {\\n  title: `${path}/Tooltip`,\\n  decorators: [withKnobs],\\n  component: Tooltip,\\n  parameters: {\\\"storySource\\\":{\\\"source\\\":\\\"import React from 'react'\\\\n\\\\nimport {\\\\n  radios,\\\\n  withKnobs,\\\\n  boolean,\\\\n  text,\\\\n  number\\\\n} from '@storybook/addon-knobs'\\\\n\\\\nimport { path } from '..'\\\\nimport Tooltip, { tDirection } from '.'\\\\nimport Button from '../../atoms/Button'\\\\nimport Box from '../../atoms/Box'\\\\n\\\\nimport ThemeWrapper from '../../../utilities/components/ThemeWrapper'\\\\nimport { tPlacement } from '../../../utilities/types'\\\\n\\\\nexport default {\\\\n  title: `${path}/Tooltip`,\\\\n  decorators: [withKnobs],\\\\n  component: Tooltip,\\\\n  parameters: {\\\\n    props: {\\\\n      propTablesExclude: [Box, Button, ThemeWrapper]\\\\n    }\\\\n  }\\\\n}\\\\n\\\\nconst radioOptions = {\\\\n  tooltipDirection: {\\\\n    top: 'top',\\\\n    bottom: 'bottom',\\\\n    right: 'right',\\\\n    left: 'left'\\\\n  },\\\\n  arrowPlacement: { start: 'start', center: 'center', end: 'end' },\\\\n  messagePlacement: { start: 'start', center: 'center', end: 'end' }\\\\n}\\\\n\\\\nexport const TooltipPlayground = () => (\\\\n  <ThemeWrapper>\\\\n    <Box p='3em' bgColor='grey.50' display='flex' justifyContent='center'>\\\\n      <Tooltip\\\\n        message={text(\\\\n          'message',\\\\n          'Customize your view by adding/removing columns. For the best view, a display of 8 columns is recommended.'\\\\n        )}\\\\n        tooltipDirection={\\\\n          radios(\\\\n            'tooltipDirection',\\\\n            radioOptions.tooltipDirection,\\\\n            'top'\\\\n          ) as tDirection\\\\n        }\\\\n        arrowPlacement={\\\\n          radios(\\\\n            'arrowPlacement',\\\\n            radioOptions.arrowPlacement,\\\\n            'center'\\\\n          ) as tPlacement\\\\n        }\\\\n        messagePlacement={\\\\n          radios(\\\\n            'messagePlacement',\\\\n            radioOptions.messagePlacement,\\\\n            'center'\\\\n          ) as tPlacement\\\\n        }\\\\n        hover={boolean('hover', false)}\\\\n        isWordWrap={boolean('Word Wrap', false)}\\\\n        maxWidth={number('maxWidth', 400)}\\\\n        color={{\\\\n          border: text('color.border', 'primary.dark'),\\\\n          arrow: text('color.arrow', 'primary.main'),\\\\n          background: text('color.background', 'primary.main'),\\\\n          text: text('color.text', 'primary.contrastText')\\\\n        }}\\\\n      >\\\\n        <Button>Hover Me!</Button>\\\\n      </Tooltip>\\\\n    </Box>\\\\n  </ThemeWrapper>\\\\n)\\\\n\\\",\\\"locationsMap\\\":{}},\\n    props: {\\n      propTablesExclude: [Box, Button, ThemeWrapper]\\n    }\\n  },}\\n\\nconst radioOptions = {\\n  tooltipDirection: {\\n    top: 'top',\\n    bottom: 'bottom',\\n    right: 'right',\\n    left: 'left'\\n  },\\n  arrowPlacement: { start: 'start', center: 'center', end: 'end' },\\n  messagePlacement: { start: 'start', center: 'center', end: 'end' }\\n}\\n\\nexport const TooltipPlayground = addSourceDecorator(() => (\\n  <ThemeWrapper>\\n    <Box p='3em' bgColor='grey.50' display='flex' justifyContent='center'>\\n      <Tooltip\\n        message={text(\\n          'message',\\n          'Customize your view by adding/removing columns. For the best view, a display of 8 columns is recommended.'\\n        )}\\n        tooltipDirection={\\n          radios(\\n            'tooltipDirection',\\n            radioOptions.tooltipDirection,\\n            'top'\\n          ) as tDirection\\n        }\\n        arrowPlacement={\\n          radios(\\n            'arrowPlacement',\\n            radioOptions.arrowPlacement,\\n            'center'\\n          ) as tPlacement\\n        }\\n        messagePlacement={\\n          radios(\\n            'messagePlacement',\\n            radioOptions.messagePlacement,\\n            'center'\\n          ) as tPlacement\\n        }\\n        hover={boolean('hover', false)}\\n        isWordWrap={boolean('Word Wrap', false)}\\n        maxWidth={number('maxWidth', 400)}\\n        color={{\\n          border: text('color.border', 'primary.dark'),\\n          arrow: text('color.arrow', 'primary.main'),\\n          background: text('color.background', 'primary.main'),\\n          text: text('color.text', 'primary.contrastText')\\n        }}\\n      >\\n        <Button>Hover Me!</Button>\\n      </Tooltip>\\n    </Box>\\n  </ThemeWrapper>\\n), {__STORY__, __ADDS_MAP__,__MAIN_FILE_LOCATION__,__MODULE_DEPENDENCIES__,__LOCAL_DEPENDENCIES__,__SOURCE_PREFIX__,__IDS_TO_FRAMEWORKS__});\",\n    \"locationsMap\": {}\n  }), _defineProperty(_parameters, \"storySource\", {\n    \"source\": \"import React from 'react'\\n\\nimport {\\n  radios,\\n  withKnobs,\\n  boolean,\\n  text,\\n  number\\n} from '@storybook/addon-knobs'\\n\\nimport { path } from '..'\\nimport Tooltip, { tDirection } from '.'\\nimport Button from '../../atoms/Button'\\nimport Box from '../../atoms/Box'\\n\\nimport ThemeWrapper from '../../../utilities/components/ThemeWrapper'\\nimport { tPlacement } from '../../../utilities/types'\\n\\nexport default {\\n  title: `${path}/Tooltip`,\\n  decorators: [withKnobs],\\n  component: Tooltip,\\n  parameters: {\\n    props: {\\n      propTablesExclude: [Box, Button, ThemeWrapper]\\n    }\\n  }\\n}\\n\\nconst radioOptions = {\\n  tooltipDirection: {\\n    top: 'top',\\n    bottom: 'bottom',\\n    right: 'right',\\n    left: 'left'\\n  },\\n  arrowPlacement: { start: 'start', center: 'center', end: 'end' },\\n  messagePlacement: { start: 'start', center: 'center', end: 'end' }\\n}\\n\\nexport const TooltipPlayground = () => (\\n  <ThemeWrapper>\\n    <Box p='3em' bgColor='grey.50' display='flex' justifyContent='center'>\\n      <Tooltip\\n        message={text(\\n          'message',\\n          'Customize your view by adding/removing columns. For the best view, a display of 8 columns is recommended.'\\n        )}\\n        tooltipDirection={\\n          radios(\\n            'tooltipDirection',\\n            radioOptions.tooltipDirection,\\n            'top'\\n          ) as tDirection\\n        }\\n        arrowPlacement={\\n          radios(\\n            'arrowPlacement',\\n            radioOptions.arrowPlacement,\\n            'center'\\n          ) as tPlacement\\n        }\\n        messagePlacement={\\n          radios(\\n            'messagePlacement',\\n            radioOptions.messagePlacement,\\n            'center'\\n          ) as tPlacement\\n        }\\n        hover={boolean('hover', false)}\\n        isWordWrap={boolean('Word Wrap', false)}\\n        maxWidth={number('maxWidth', 400)}\\n        color={{\\n          border: text('color.border', 'primary.dark'),\\n          arrow: text('color.arrow', 'primary.main'),\\n          background: text('color.background', 'primary.main'),\\n          text: text('color.text', 'primary.contrastText')\\n        }}\\n      >\\n        <Button>Hover Me!</Button>\\n      </Tooltip>\\n    </Box>\\n  </ThemeWrapper>\\n)\\n\",\n    \"locationsMap\": {}\n  }), _defineProperty(_parameters, \"props\", {\n    propTablesExclude: [Box, Button, ThemeWrapper]\n  }), _parameters)\n};\nvar radioOptions = {\n  tooltipDirection: {\n    top: 'top',\n    bottom: 'bottom',\n    right: 'right',\n    left: 'left'\n  },\n  arrowPlacement: {\n    start: 'start',\n    center: 'center',\n    end: 'end'\n  },\n  messagePlacement: {\n    start: 'start',\n    center: 'center',\n    end: 'end'\n  }\n};\nexport var TooltipPlayground = addSourceDecorator(addSourceDecorator(addSourceDecorator(function () {\n  return React.createElement(ThemeWrapper, null, React.createElement(Box, {\n    p: '3em',\n    bgColor: 'grey.50',\n    display: 'flex',\n    justifyContent: 'center'\n  }, React.createElement(Tooltip, {\n    message: text('message', 'Customize your view by adding/removing columns. For the best view, a display of 8 columns is recommended.'),\n    tooltipDirection: radios('tooltipDirection', radioOptions.tooltipDirection, 'top'),\n    arrowPlacement: radios('arrowPlacement', radioOptions.arrowPlacement, 'center'),\n    messagePlacement: radios('messagePlacement', radioOptions.messagePlacement, 'center'),\n    hover: _boolean('hover', false),\n    isWordWrap: _boolean('Word Wrap', false),\n    maxWidth: number('maxWidth', 400),\n    color: {\n      border: text('color.border', 'primary.dark'),\n      arrow: text('color.arrow', 'primary.main'),\n      background: text('color.background', 'primary.main'),\n      text: text('color.text', 'primary.contrastText')\n    }\n  }, React.createElement(Button, null, \"Hover Me!\"))));\n}, {\n  __STORY__: __STORY__,\n  __ADDS_MAP__: __ADDS_MAP__,\n  __MAIN_FILE_LOCATION__: __MAIN_FILE_LOCATION__,\n  __MODULE_DEPENDENCIES__: __MODULE_DEPENDENCIES__,\n  __LOCAL_DEPENDENCIES__: __LOCAL_DEPENDENCIES__,\n  __SOURCE_PREFIX__: __SOURCE_PREFIX__,\n  __IDS_TO_FRAMEWORKS__: __IDS_TO_FRAMEWORKS__\n}), {\n  __STORY__: __STORY__,\n  __ADDS_MAP__: __ADDS_MAP__,\n  __MAIN_FILE_LOCATION__: __MAIN_FILE_LOCATION__,\n  __MODULE_DEPENDENCIES__: __MODULE_DEPENDENCIES__,\n  __LOCAL_DEPENDENCIES__: __LOCAL_DEPENDENCIES__,\n  __SOURCE_PREFIX__: __SOURCE_PREFIX__,\n  __IDS_TO_FRAMEWORKS__: __IDS_TO_FRAMEWORKS__\n}), {\n  __STORY__: __STORY__,\n  __ADDS_MAP__: __ADDS_MAP__,\n  __MAIN_FILE_LOCATION__: __MAIN_FILE_LOCATION__,\n  __MODULE_DEPENDENCIES__: __MODULE_DEPENDENCIES__,\n  __LOCAL_DEPENDENCIES__: __LOCAL_DEPENDENCIES__,\n  __SOURCE_PREFIX__: __SOURCE_PREFIX__,\n  __IDS_TO_FRAMEWORKS__: __IDS_TO_FRAMEWORKS__\n});","map":{"version":3,"sources":["/Users/farhanansari/Code/ui-library/node_modules/react-docgen-typescript-loader/dist/index.js!/Users/farhanansari/Code/ui-library/node_modules/eslint-loader/dist/cjs.js??ref--6-0!/Users/farhanansari/Code/ui-library/node_modules/@storybook/source-loader/dist/server/index.js??ref--11!/Users/farhanansari/Code/ui-library/node_modules/@storybook/source-loader/dist/server/index.js!/Users/farhanansari/Code/ui-library/node_modules/@storybook/source-loader/dist/server/index.js!/Users/farhanansari/Code/ui-library/src/components/molecules/Tooltip/Tooltip.stories.tsx"],"names":[],"mappings":";;;;AACA;AACA;AACA;AACA,IAAI,gBAAgB,GAAG,OAAO,CAAC,kCAAD,CAAP,CAA4C,UAAnE,C,CACA;;;AACA,IAAI,kBAAkB,GAAG,OAAO,CAAC,kCAAD,CAAP,CAA4C,SAArE,C,CACA;;;AACA,IAAI,iBAAiB,GAAG,sEAAxB,C,CACA;;AACA,IAAI,SAAS,GAAG,m/wBAAhB,C,CACA;;AACA,IAAI,YAAY,GAAG,EAAnB,C,CACA;;AACA,IAAI,sBAAsB,GAAG,sBAA7B,C,CACA;;AACA,IAAI,uBAAuB,GAAG,EAA9B,C,CACA;;AACA,IAAI,sBAAsB,GAAG,EAA7B,C,CACA;;AACA,IAAI,qBAAqB,GAAG,EAA5B;AAGA;AACA;AACA;;AACA,IAAI,gBAAgB,GAAG,OAAO,CAAC,kCAAD,CAAP,CAA4C,UAAnE,C,CACA;;;AACA,IAAI,kBAAkB,GAAG,OAAO,CAAC,kCAAD,CAAP,CAA4C,SAArE,C,CACA;;;AACA,IAAI,iBAAiB,GAAG,sEAAxB,C,CACA;;AACA,IAAI,SAAS,GAAG,olPAAhB,C,CACA;;AACA,IAAI,YAAY,GAAG,EAAnB,C,CACA;;AACA,IAAI,sBAAsB,GAAG,sBAA7B,C,CACA;;AACA,IAAI,uBAAuB,GAAG,EAA9B,C,CACA;;AACA,IAAI,sBAAsB,GAAG,EAA7B,C,CACA;;AACA,IAAI,qBAAqB,GAAG,EAA5B;AAGA;AACA;AACA;;AACA,IAAI,gBAAgB,GAAG,OAAO,CAAC,kCAAD,CAAP,CAA4C,UAAnE,C,CACA;;;AACA,IAAI,kBAAkB,GAAG,OAAO,CAAC,kCAAD,CAAP,CAA4C,SAArE,C,CACA;;;AACA,IAAI,iBAAiB,GAAG,sEAAxB,C,CACA;;AACA,IAAI,SAAS,GAAG,6sEAAhB,C,CACA;;AACA,IAAI,YAAY,GAAG,EAAnB,C,CACA;;AACA,IAAI,sBAAsB,GAAG,sBAA7B,C,CACA;;AACA,IAAI,uBAAuB,GAAG,EAA9B,C,CACA;;AACA,IAAI,sBAAsB,GAAG,EAA7B,C,CACA;;AACA,IAAI,qBAAqB,GAAG,EAA5B;AAEA,OAAO,KAAP,MAAkB,OAAlB;AAEA,SACE,MADF,EAEE,SAFF,EAGE,OAAO,IAAP,QAHF,EAIE,IAJF,EAKE,MALF,QAMO,wBANP;AAQA,SAAS,IAAT,QAAqB,IAArB;AACA,OAAO,OAAP,MAAoC,GAApC;AACA,OAAO,MAAP,MAAmB,oBAAnB;AACA,OAAO,GAAP,MAAgB,iBAAhB;AAEA,OAAO,YAAP,MAAyB,4CAAzB;AAGA,eAAe;AACb,EAAA,KAAK,EAAK,IAAI,GAAA,UADD;AAEb,EAAA,UAAU,EAAE,CAAC,SAAD,CAFC;AAGb,EAAA,SAAS,EAAE,OAHE;AAIb,EAAA,UAAU;AAAG,mBAAc;AAAC,gBAAS,m/wBAAV;AAA8/wB,sBAAe;AAA7gxB;AAAjB,iDAAgjxB;AAAC,cAAS,olPAAV;AAA+lP,oBAAe;AAA9mP,GAAhjxB,+CAAgrgC;AAAC,cAAS,6sEAAV;AAAwtE,oBAAe;AAAvuE,GAAhrgC,yCACD;AACL,IAAA,iBAAiB,EAAE,CAAC,GAAD,EAAM,MAAN,EAAc,YAAd;AADd,GADC;AAJG,CAAf;AAUA,IAAM,YAAY,GAAG;AACnB,EAAA,gBAAgB,EAAE;AAChB,IAAA,GAAG,EAAE,KADW;AAEhB,IAAA,MAAM,EAAE,QAFQ;AAGhB,IAAA,KAAK,EAAE,OAHS;AAIhB,IAAA,IAAI,EAAE;AAJU,GADC;AAOnB,EAAA,cAAc,EAAE;AAAE,IAAA,KAAK,EAAE,OAAT;AAAkB,IAAA,MAAM,EAAE,QAA1B;AAAoC,IAAA,GAAG,EAAE;AAAzC,GAPG;AAQnB,EAAA,gBAAgB,EAAE;AAAE,IAAA,KAAK,EAAE,OAAT;AAAkB,IAAA,MAAM,EAAE,QAA1B;AAAoC,IAAA,GAAG,EAAE;AAAzC;AARC,CAArB;AAWA,OAAO,IAAM,iBAAiB,GAAG,kBAAkB,CAAC,kBAAkB,CAAC,kBAAkB,CAAC,YAAA;AAAM,SAC9F,KAAA,CAAA,aAAA,CAAC,YAAD,EAAa,IAAb,EACE,KAAA,CAAA,aAAA,CAAC,GAAD,EAAI;AAAC,IAAA,CAAC,EAAC,KAAH;AAAS,IAAA,OAAO,EAAC,SAAjB;AAA2B,IAAA,OAAO,EAAC,MAAnC;AAA0C,IAAA,cAAc,EAAC;AAAzD,GAAJ,EACE,KAAA,CAAA,aAAA,CAAC,OAAD,EAAQ;AACN,IAAA,OAAO,EAAE,IAAI,CACX,SADW,EAEX,2GAFW,CADP;AAKN,IAAA,gBAAgB,EACd,MAAM,CACJ,kBADI,EAEJ,YAAY,CAAC,gBAFT,EAGJ,KAHI,CANF;AAYN,IAAA,cAAc,EACZ,MAAM,CACJ,gBADI,EAEJ,YAAY,CAAC,cAFT,EAGJ,QAHI,CAbF;AAmBN,IAAA,gBAAgB,EACd,MAAM,CACJ,kBADI,EAEJ,YAAY,CAAC,gBAFT,EAGJ,QAHI,CApBF;AA0BN,IAAA,KAAK,EAAE,QAAO,CAAC,OAAD,EAAU,KAAV,CA1BR;AA2BN,IAAA,UAAU,EAAE,QAAO,CAAC,WAAD,EAAc,KAAd,CA3Bb;AA4BN,IAAA,QAAQ,EAAE,MAAM,CAAC,UAAD,EAAa,GAAb,CA5BV;AA6BN,IAAA,KAAK,EAAE;AACL,MAAA,MAAM,EAAE,IAAI,CAAC,cAAD,EAAiB,cAAjB,CADP;AAEL,MAAA,KAAK,EAAE,IAAI,CAAC,aAAD,EAAgB,cAAhB,CAFN;AAGL,MAAA,UAAU,EAAE,IAAI,CAAC,kBAAD,EAAqB,cAArB,CAHX;AAIL,MAAA,IAAI,EAAE,IAAI,CAAC,YAAD,EAAe,sBAAf;AAJL;AA7BD,GAAR,EAoCE,KAAA,CAAA,aAAA,CAAC,MAAD,EAAO,IAAP,EAvCwF,WAuCxF,CApCF,CADF,CADF,CAD8F;AA2C/F,CA3CwF,EA2CtF;AAAC,EAAA,SAAS,EAAA,SAAV;AAAY,EAAA,YAAY,EAAA,YAAxB;AAAyB,EAAA,sBAAsB,EAAA,sBAA/C;AAAgD,EAAA,uBAAuB,EAAA,uBAAvE;AAAwE,EAAA,sBAAsB,EAAA,sBAA9F;AAA+F,EAAA,iBAAiB,EAAA,iBAAhH;AAAiH,EAAA,qBAAqB,EAAA;AAAtI,CA3CsF,CAAnB,EA2CuE;AAAC,EAAA,SAAS,EAAA,SAAV;AAAY,EAAA,YAAY,EAAA,YAAxB;AAAyB,EAAA,sBAAsB,EAAA,sBAA/C;AAAgD,EAAA,uBAAuB,EAAA,uBAAvE;AAAwE,EAAA,sBAAsB,EAAA,sBAA9F;AAA+F,EAAA,iBAAiB,EAAA,iBAAhH;AAAiH,EAAA,qBAAqB,EAAA;AAAtI,CA3CvE,CAAnB,EA2CoO;AAAC,EAAA,SAAS,EAAA,SAAV;AAAY,EAAA,YAAY,EAAA,YAAxB;AAAyB,EAAA,sBAAsB,EAAA,sBAA/C;AAAgD,EAAA,uBAAuB,EAAA,uBAAvE;AAAwE,EAAA,sBAAsB,EAAA,sBAA9F;AAA+F,EAAA,iBAAiB,EAAA,iBAAhH;AAAiH,EAAA,qBAAqB,EAAA;AAAtI,CA3CpO,CAA5C","sourcesContent":["\n/* eslint-disable */\n// @ts-nocheck\n// @ts-ignore\nvar withSourceLoader = require('@storybook/source-loader/preview').withSource;\n// @ts-ignore\nvar addSourceDecorator = require(\"@storybook/source-loader/preview\").addSource;\n// @ts-ignore\nvar __SOURCE_PREFIX__ = \"/Users/farhanansari/Code/ui-library/src/components/molecules/Tooltip\";\n// @ts-ignore\nvar __STORY__ = \"\\n\\n// @ts-nocheck\\n// @ts-ignore\\nvar withSourceLoader = require('@storybook/source-loader/preview').withSource;\\n// @ts-ignore\\nvar addSourceDecorator = require(\\\"@storybook/source-loader/preview\\\").addSource;\\n// @ts-ignore\\nvar __SOURCE_PREFIX__ = \\\"/Users/farhanansari/Code/ui-library/src/components/molecules/Tooltip\\\";\\n// @ts-ignore\\nvar __STORY__ = \\\"\\\\n\\\\n// @ts-nocheck\\\\n// @ts-ignore\\\\nvar withSourceLoader = require('@storybook/source-loader/preview').withSource;\\\\n// @ts-ignore\\\\nvar addSourceDecorator = require(\\\\\\\"@storybook/source-loader/preview\\\\\\\").addSource;\\\\n// @ts-ignore\\\\nvar __SOURCE_PREFIX__ = \\\\\\\"/Users/farhanansari/Code/ui-library/src/components/molecules/Tooltip\\\\\\\";\\\\n// @ts-ignore\\\\nvar __STORY__ = \\\\\\\"import React from 'react'\\\\\\\\n\\\\\\\\nimport {\\\\\\\\n  radios,\\\\\\\\n  withKnobs,\\\\\\\\n  boolean,\\\\\\\\n  text,\\\\\\\\n  number\\\\\\\\n} from '@storybook/addon-knobs'\\\\\\\\n\\\\\\\\nimport { path } from '..'\\\\\\\\nimport Tooltip, { tDirection } from '.'\\\\\\\\nimport Button from '../../atoms/Button'\\\\\\\\nimport Box from '../../atoms/Box'\\\\\\\\n\\\\\\\\nimport ThemeWrapper from '../../../utilities/components/ThemeWrapper'\\\\\\\\nimport { tPlacement } from '../../../utilities/types'\\\\\\\\n\\\\\\\\nexport default {\\\\\\\\n  title: `${path}/Tooltip`,\\\\\\\\n  decorators: [withKnobs],\\\\\\\\n  component: Tooltip,\\\\\\\\n  parameters: {\\\\\\\\n    props: {\\\\\\\\n      propTablesExclude: [Box, Button, ThemeWrapper]\\\\\\\\n    }\\\\\\\\n  }\\\\\\\\n}\\\\\\\\n\\\\\\\\nconst radioOptions = {\\\\\\\\n  tooltipDirection: {\\\\\\\\n    top: 'top',\\\\\\\\n    bottom: 'bottom',\\\\\\\\n    right: 'right',\\\\\\\\n    left: 'left'\\\\\\\\n  },\\\\\\\\n  arrowPlacement: { start: 'start', center: 'center', end: 'end' },\\\\\\\\n  messagePlacement: { start: 'start', center: 'center', end: 'end' }\\\\\\\\n}\\\\\\\\n\\\\\\\\nexport const TooltipPlayground = () => (\\\\\\\\n  <ThemeWrapper>\\\\\\\\n    <Box p='3em' bgColor='grey.50' display='flex' justifyContent='center'>\\\\\\\\n      <Tooltip\\\\\\\\n        message={text(\\\\\\\\n          'message',\\\\\\\\n          'Customize your view by adding/removing columns. For the best view, a display of 8 columns is recommended.'\\\\\\\\n        )}\\\\\\\\n        tooltipDirection={\\\\\\\\n          radios(\\\\\\\\n            'tooltipDirection',\\\\\\\\n            radioOptions.tooltipDirection,\\\\\\\\n            'top'\\\\\\\\n          ) as tDirection\\\\\\\\n        }\\\\\\\\n        arrowPlacement={\\\\\\\\n          radios(\\\\\\\\n            'arrowPlacement',\\\\\\\\n            radioOptions.arrowPlacement,\\\\\\\\n            'center'\\\\\\\\n          ) as tPlacement\\\\\\\\n        }\\\\\\\\n        messagePlacement={\\\\\\\\n          radios(\\\\\\\\n            'messagePlacement',\\\\\\\\n            radioOptions.messagePlacement,\\\\\\\\n            'center'\\\\\\\\n          ) as tPlacement\\\\\\\\n        }\\\\\\\\n        hover={boolean('hover', false)}\\\\\\\\n        isWordWrap={boolean('Word Wrap', false)}\\\\\\\\n        maxWidth={number('maxWidth', 400)}\\\\\\\\n        color={{\\\\\\\\n          border: text('color.border', 'primary.dark'),\\\\\\\\n          arrow: text('color.arrow', 'primary.main'),\\\\\\\\n          background: text('color.background', 'primary.main'),\\\\\\\\n          text: text('color.text', 'primary.contrastText')\\\\\\\\n        }}\\\\\\\\n      >\\\\\\\\n        <Button>Hover Me!</Button>\\\\\\\\n      </Tooltip>\\\\\\\\n    </Box>\\\\\\\\n  </ThemeWrapper>\\\\\\\\n)\\\\\\\\n\\\\\\\";\\\\n// @ts-ignore\\\\nvar __ADDS_MAP__ = {};\\\\n// @ts-ignore\\\\nvar __MAIN_FILE_LOCATION__ = \\\\\\\"/Tooltip.stories.tsx\\\\\\\";\\\\n// @ts-ignore\\\\nvar __MODULE_DEPENDENCIES__ = [];\\\\n// @ts-ignore\\\\nvar __LOCAL_DEPENDENCIES__ = {};\\\\n// @ts-ignore\\\\nvar __IDS_TO_FRAMEWORKS__ = {};\\\\n        \\\\nimport React from 'react'\\\\n\\\\nimport {\\\\n  radios,\\\\n  withKnobs,\\\\n  boolean,\\\\n  text,\\\\n  number\\\\n} from '@storybook/addon-knobs'\\\\n\\\\nimport { path } from '..'\\\\nimport Tooltip, { tDirection } from '.'\\\\nimport Button from '../../atoms/Button'\\\\nimport Box from '../../atoms/Box'\\\\n\\\\nimport ThemeWrapper from '../../../utilities/components/ThemeWrapper'\\\\nimport { tPlacement } from '../../../utilities/types'\\\\n\\\\nexport default {\\\\n  title: `${path}/Tooltip`,\\\\n  decorators: [withKnobs],\\\\n  component: Tooltip,\\\\n  parameters: {\\\\\\\"storySource\\\\\\\":{\\\\\\\"source\\\\\\\":\\\\\\\"import React from 'react'\\\\\\\\n\\\\\\\\nimport {\\\\\\\\n  radios,\\\\\\\\n  withKnobs,\\\\\\\\n  boolean,\\\\\\\\n  text,\\\\\\\\n  number\\\\\\\\n} from '@storybook/addon-knobs'\\\\\\\\n\\\\\\\\nimport { path } from '..'\\\\\\\\nimport Tooltip, { tDirection } from '.'\\\\\\\\nimport Button from '../../atoms/Button'\\\\\\\\nimport Box from '../../atoms/Box'\\\\\\\\n\\\\\\\\nimport ThemeWrapper from '../../../utilities/components/ThemeWrapper'\\\\\\\\nimport { tPlacement } from '../../../utilities/types'\\\\\\\\n\\\\\\\\nexport default {\\\\\\\\n  title: `${path}/Tooltip`,\\\\\\\\n  decorators: [withKnobs],\\\\\\\\n  component: Tooltip,\\\\\\\\n  parameters: {\\\\\\\\n    props: {\\\\\\\\n      propTablesExclude: [Box, Button, ThemeWrapper]\\\\\\\\n    }\\\\\\\\n  }\\\\\\\\n}\\\\\\\\n\\\\\\\\nconst radioOptions = {\\\\\\\\n  tooltipDirection: {\\\\\\\\n    top: 'top',\\\\\\\\n    bottom: 'bottom',\\\\\\\\n    right: 'right',\\\\\\\\n    left: 'left'\\\\\\\\n  },\\\\\\\\n  arrowPlacement: { start: 'start', center: 'center', end: 'end' },\\\\\\\\n  messagePlacement: { start: 'start', center: 'center', end: 'end' }\\\\\\\\n}\\\\\\\\n\\\\\\\\nexport const TooltipPlayground = () => (\\\\\\\\n  <ThemeWrapper>\\\\\\\\n    <Box p='3em' bgColor='grey.50' display='flex' justifyContent='center'>\\\\\\\\n      <Tooltip\\\\\\\\n        message={text(\\\\\\\\n          'message',\\\\\\\\n          'Customize your view by adding/removing columns. For the best view, a display of 8 columns is recommended.'\\\\\\\\n        )}\\\\\\\\n        tooltipDirection={\\\\\\\\n          radios(\\\\\\\\n            'tooltipDirection',\\\\\\\\n            radioOptions.tooltipDirection,\\\\\\\\n            'top'\\\\\\\\n          ) as tDirection\\\\\\\\n        }\\\\\\\\n        arrowPlacement={\\\\\\\\n          radios(\\\\\\\\n            'arrowPlacement',\\\\\\\\n            radioOptions.arrowPlacement,\\\\\\\\n            'center'\\\\\\\\n          ) as tPlacement\\\\\\\\n        }\\\\\\\\n        messagePlacement={\\\\\\\\n          radios(\\\\\\\\n            'messagePlacement',\\\\\\\\n            radioOptions.messagePlacement,\\\\\\\\n            'center'\\\\\\\\n          ) as tPlacement\\\\\\\\n        }\\\\\\\\n        hover={boolean('hover', false)}\\\\\\\\n        isWordWrap={boolean('Word Wrap', false)}\\\\\\\\n        maxWidth={number('maxWidth', 400)}\\\\\\\\n        color={{\\\\\\\\n          border: text('color.border', 'primary.dark'),\\\\\\\\n          arrow: text('color.arrow', 'primary.main'),\\\\\\\\n          background: text('color.background', 'primary.main'),\\\\\\\\n          text: text('color.text', 'primary.contrastText')\\\\\\\\n        }}\\\\\\\\n      >\\\\\\\\n        <Button>Hover Me!</Button>\\\\\\\\n      </Tooltip>\\\\\\\\n    </Box>\\\\\\\\n  </ThemeWrapper>\\\\\\\\n)\\\\\\\\n\\\\\\\",\\\\\\\"locationsMap\\\\\\\":{}},\\\\n    props: {\\\\n      propTablesExclude: [Box, Button, ThemeWrapper]\\\\n    }\\\\n  },}\\\\n\\\\nconst radioOptions = {\\\\n  tooltipDirection: {\\\\n    top: 'top',\\\\n    bottom: 'bottom',\\\\n    right: 'right',\\\\n    left: 'left'\\\\n  },\\\\n  arrowPlacement: { start: 'start', center: 'center', end: 'end' },\\\\n  messagePlacement: { start: 'start', center: 'center', end: 'end' }\\\\n}\\\\n\\\\nexport const TooltipPlayground = addSourceDecorator(() => (\\\\n  <ThemeWrapper>\\\\n    <Box p='3em' bgColor='grey.50' display='flex' justifyContent='center'>\\\\n      <Tooltip\\\\n        message={text(\\\\n          'message',\\\\n          'Customize your view by adding/removing columns. For the best view, a display of 8 columns is recommended.'\\\\n        )}\\\\n        tooltipDirection={\\\\n          radios(\\\\n            'tooltipDirection',\\\\n            radioOptions.tooltipDirection,\\\\n            'top'\\\\n          ) as tDirection\\\\n        }\\\\n        arrowPlacement={\\\\n          radios(\\\\n            'arrowPlacement',\\\\n            radioOptions.arrowPlacement,\\\\n            'center'\\\\n          ) as tPlacement\\\\n        }\\\\n        messagePlacement={\\\\n          radios(\\\\n            'messagePlacement',\\\\n            radioOptions.messagePlacement,\\\\n            'center'\\\\n          ) as tPlacement\\\\n        }\\\\n        hover={boolean('hover', false)}\\\\n        isWordWrap={boolean('Word Wrap', false)}\\\\n        maxWidth={number('maxWidth', 400)}\\\\n        color={{\\\\n          border: text('color.border', 'primary.dark'),\\\\n          arrow: text('color.arrow', 'primary.main'),\\\\n          background: text('color.background', 'primary.main'),\\\\n          text: text('color.text', 'primary.contrastText')\\\\n        }}\\\\n      >\\\\n        <Button>Hover Me!</Button>\\\\n      </Tooltip>\\\\n    </Box>\\\\n  </ThemeWrapper>\\\\n), {__STORY__, __ADDS_MAP__,__MAIN_FILE_LOCATION__,__MODULE_DEPENDENCIES__,__LOCAL_DEPENDENCIES__,__SOURCE_PREFIX__,__IDS_TO_FRAMEWORKS__});\\\";\\n// @ts-ignore\\nvar __ADDS_MAP__ = {};\\n// @ts-ignore\\nvar __MAIN_FILE_LOCATION__ = \\\"/Tooltip.stories.tsx\\\";\\n// @ts-ignore\\nvar __MODULE_DEPENDENCIES__ = [];\\n// @ts-ignore\\nvar __LOCAL_DEPENDENCIES__ = {};\\n// @ts-ignore\\nvar __IDS_TO_FRAMEWORKS__ = {};\\n        \\n\\n\\n// @ts-nocheck\\n// @ts-ignore\\nvar withSourceLoader = require('@storybook/source-loader/preview').withSource;\\n// @ts-ignore\\nvar addSourceDecorator = require(\\\"@storybook/source-loader/preview\\\").addSource;\\n// @ts-ignore\\nvar __SOURCE_PREFIX__ = \\\"/Users/farhanansari/Code/ui-library/src/components/molecules/Tooltip\\\";\\n// @ts-ignore\\nvar __STORY__ = \\\"import React from 'react'\\\\n\\\\nimport {\\\\n  radios,\\\\n  withKnobs,\\\\n  boolean,\\\\n  text,\\\\n  number\\\\n} from '@storybook/addon-knobs'\\\\n\\\\nimport { path } from '..'\\\\nimport Tooltip, { tDirection } from '.'\\\\nimport Button from '../../atoms/Button'\\\\nimport Box from '../../atoms/Box'\\\\n\\\\nimport ThemeWrapper from '../../../utilities/components/ThemeWrapper'\\\\nimport { tPlacement } from '../../../utilities/types'\\\\n\\\\nexport default {\\\\n  title: `${path}/Tooltip`,\\\\n  decorators: [withKnobs],\\\\n  component: Tooltip,\\\\n  parameters: {\\\\n    props: {\\\\n      propTablesExclude: [Box, Button, ThemeWrapper]\\\\n    }\\\\n  }\\\\n}\\\\n\\\\nconst radioOptions = {\\\\n  tooltipDirection: {\\\\n    top: 'top',\\\\n    bottom: 'bottom',\\\\n    right: 'right',\\\\n    left: 'left'\\\\n  },\\\\n  arrowPlacement: { start: 'start', center: 'center', end: 'end' },\\\\n  messagePlacement: { start: 'start', center: 'center', end: 'end' }\\\\n}\\\\n\\\\nexport const TooltipPlayground = () => (\\\\n  <ThemeWrapper>\\\\n    <Box p='3em' bgColor='grey.50' display='flex' justifyContent='center'>\\\\n      <Tooltip\\\\n        message={text(\\\\n          'message',\\\\n          'Customize your view by adding/removing columns. For the best view, a display of 8 columns is recommended.'\\\\n        )}\\\\n        tooltipDirection={\\\\n          radios(\\\\n            'tooltipDirection',\\\\n            radioOptions.tooltipDirection,\\\\n            'top'\\\\n          ) as tDirection\\\\n        }\\\\n        arrowPlacement={\\\\n          radios(\\\\n            'arrowPlacement',\\\\n            radioOptions.arrowPlacement,\\\\n            'center'\\\\n          ) as tPlacement\\\\n        }\\\\n        messagePlacement={\\\\n          radios(\\\\n            'messagePlacement',\\\\n            radioOptions.messagePlacement,\\\\n            'center'\\\\n          ) as tPlacement\\\\n        }\\\\n        hover={boolean('hover', false)}\\\\n        isWordWrap={boolean('Word Wrap', false)}\\\\n        maxWidth={number('maxWidth', 400)}\\\\n        color={{\\\\n          border: text('color.border', 'primary.dark'),\\\\n          arrow: text('color.arrow', 'primary.main'),\\\\n          background: text('color.background', 'primary.main'),\\\\n          text: text('color.text', 'primary.contrastText')\\\\n        }}\\\\n      >\\\\n        <Button>Hover Me!</Button>\\\\n      </Tooltip>\\\\n    </Box>\\\\n  </ThemeWrapper>\\\\n)\\\\n\\\";\\n// @ts-ignore\\nvar __ADDS_MAP__ = {};\\n// @ts-ignore\\nvar __MAIN_FILE_LOCATION__ = \\\"/Tooltip.stories.tsx\\\";\\n// @ts-ignore\\nvar __MODULE_DEPENDENCIES__ = [];\\n// @ts-ignore\\nvar __LOCAL_DEPENDENCIES__ = {};\\n// @ts-ignore\\nvar __IDS_TO_FRAMEWORKS__ = {};\\n        \\nimport React from 'react'\\n\\nimport {\\n  radios,\\n  withKnobs,\\n  boolean,\\n  text,\\n  number\\n} from '@storybook/addon-knobs'\\n\\nimport { path } from '..'\\nimport Tooltip, { tDirection } from '.'\\nimport Button from '../../atoms/Button'\\nimport Box from '../../atoms/Box'\\n\\nimport ThemeWrapper from '../../../utilities/components/ThemeWrapper'\\nimport { tPlacement } from '../../../utilities/types'\\n\\nexport default {\\n  title: `${path}/Tooltip`,\\n  decorators: [withKnobs],\\n  component: Tooltip,\\n  parameters: {\\\"storySource\\\":{\\\"source\\\":\\\"\\\\n\\\\n// @ts-nocheck\\\\n// @ts-ignore\\\\nvar withSourceLoader = require('@storybook/source-loader/preview').withSource;\\\\n// @ts-ignore\\\\nvar addSourceDecorator = require(\\\\\\\"@storybook/source-loader/preview\\\\\\\").addSource;\\\\n// @ts-ignore\\\\nvar __SOURCE_PREFIX__ = \\\\\\\"/Users/farhanansari/Code/ui-library/src/components/molecules/Tooltip\\\\\\\";\\\\n// @ts-ignore\\\\nvar __STORY__ = \\\\\\\"import React from 'react'\\\\\\\\n\\\\\\\\nimport {\\\\\\\\n  radios,\\\\\\\\n  withKnobs,\\\\\\\\n  boolean,\\\\\\\\n  text,\\\\\\\\n  number\\\\\\\\n} from '@storybook/addon-knobs'\\\\\\\\n\\\\\\\\nimport { path } from '..'\\\\\\\\nimport Tooltip, { tDirection } from '.'\\\\\\\\nimport Button from '../../atoms/Button'\\\\\\\\nimport Box from '../../atoms/Box'\\\\\\\\n\\\\\\\\nimport ThemeWrapper from '../../../utilities/components/ThemeWrapper'\\\\\\\\nimport { tPlacement } from '../../../utilities/types'\\\\\\\\n\\\\\\\\nexport default {\\\\\\\\n  title: `${path}/Tooltip`,\\\\\\\\n  decorators: [withKnobs],\\\\\\\\n  component: Tooltip,\\\\\\\\n  parameters: {\\\\\\\\n    props: {\\\\\\\\n      propTablesExclude: [Box, Button, ThemeWrapper]\\\\\\\\n    }\\\\\\\\n  }\\\\\\\\n}\\\\\\\\n\\\\\\\\nconst radioOptions = {\\\\\\\\n  tooltipDirection: {\\\\\\\\n    top: 'top',\\\\\\\\n    bottom: 'bottom',\\\\\\\\n    right: 'right',\\\\\\\\n    left: 'left'\\\\\\\\n  },\\\\\\\\n  arrowPlacement: { start: 'start', center: 'center', end: 'end' },\\\\\\\\n  messagePlacement: { start: 'start', center: 'center', end: 'end' }\\\\\\\\n}\\\\\\\\n\\\\\\\\nexport const TooltipPlayground = () => (\\\\\\\\n  <ThemeWrapper>\\\\\\\\n    <Box p='3em' bgColor='grey.50' display='flex' justifyContent='center'>\\\\\\\\n      <Tooltip\\\\\\\\n        message={text(\\\\\\\\n          'message',\\\\\\\\n          'Customize your view by adding/removing columns. For the best view, a display of 8 columns is recommended.'\\\\\\\\n        )}\\\\\\\\n        tooltipDirection={\\\\\\\\n          radios(\\\\\\\\n            'tooltipDirection',\\\\\\\\n            radioOptions.tooltipDirection,\\\\\\\\n            'top'\\\\\\\\n          ) as tDirection\\\\\\\\n        }\\\\\\\\n        arrowPlacement={\\\\\\\\n          radios(\\\\\\\\n            'arrowPlacement',\\\\\\\\n            radioOptions.arrowPlacement,\\\\\\\\n            'center'\\\\\\\\n          ) as tPlacement\\\\\\\\n        }\\\\\\\\n        messagePlacement={\\\\\\\\n          radios(\\\\\\\\n            'messagePlacement',\\\\\\\\n            radioOptions.messagePlacement,\\\\\\\\n            'center'\\\\\\\\n          ) as tPlacement\\\\\\\\n        }\\\\\\\\n        hover={boolean('hover', false)}\\\\\\\\n        isWordWrap={boolean('Word Wrap', false)}\\\\\\\\n        maxWidth={number('maxWidth', 400)}\\\\\\\\n        color={{\\\\\\\\n          border: text('color.border', 'primary.dark'),\\\\\\\\n          arrow: text('color.arrow', 'primary.main'),\\\\\\\\n          background: text('color.background', 'primary.main'),\\\\\\\\n          text: text('color.text', 'primary.contrastText')\\\\\\\\n        }}\\\\\\\\n      >\\\\\\\\n        <Button>Hover Me!</Button>\\\\\\\\n      </Tooltip>\\\\\\\\n    </Box>\\\\\\\\n  </ThemeWrapper>\\\\\\\\n)\\\\\\\\n\\\\\\\";\\\\n// @ts-ignore\\\\nvar __ADDS_MAP__ = {};\\\\n// @ts-ignore\\\\nvar __MAIN_FILE_LOCATION__ = \\\\\\\"/Tooltip.stories.tsx\\\\\\\";\\\\n// @ts-ignore\\\\nvar __MODULE_DEPENDENCIES__ = [];\\\\n// @ts-ignore\\\\nvar __LOCAL_DEPENDENCIES__ = {};\\\\n// @ts-ignore\\\\nvar __IDS_TO_FRAMEWORKS__ = {};\\\\n        \\\\nimport React from 'react'\\\\n\\\\nimport {\\\\n  radios,\\\\n  withKnobs,\\\\n  boolean,\\\\n  text,\\\\n  number\\\\n} from '@storybook/addon-knobs'\\\\n\\\\nimport { path } from '..'\\\\nimport Tooltip, { tDirection } from '.'\\\\nimport Button from '../../atoms/Button'\\\\nimport Box from '../../atoms/Box'\\\\n\\\\nimport ThemeWrapper from '../../../utilities/components/ThemeWrapper'\\\\nimport { tPlacement } from '../../../utilities/types'\\\\n\\\\nexport default {\\\\n  title: `${path}/Tooltip`,\\\\n  decorators: [withKnobs],\\\\n  component: Tooltip,\\\\n  parameters: {\\\\\\\"storySource\\\\\\\":{\\\\\\\"source\\\\\\\":\\\\\\\"import React from 'react'\\\\\\\\n\\\\\\\\nimport {\\\\\\\\n  radios,\\\\\\\\n  withKnobs,\\\\\\\\n  boolean,\\\\\\\\n  text,\\\\\\\\n  number\\\\\\\\n} from '@storybook/addon-knobs'\\\\\\\\n\\\\\\\\nimport { path } from '..'\\\\\\\\nimport Tooltip, { tDirection } from '.'\\\\\\\\nimport Button from '../../atoms/Button'\\\\\\\\nimport Box from '../../atoms/Box'\\\\\\\\n\\\\\\\\nimport ThemeWrapper from '../../../utilities/components/ThemeWrapper'\\\\\\\\nimport { tPlacement } from '../../../utilities/types'\\\\\\\\n\\\\\\\\nexport default {\\\\\\\\n  title: `${path}/Tooltip`,\\\\\\\\n  decorators: [withKnobs],\\\\\\\\n  component: Tooltip,\\\\\\\\n  parameters: {\\\\\\\\n    props: {\\\\\\\\n      propTablesExclude: [Box, Button, ThemeWrapper]\\\\\\\\n    }\\\\\\\\n  }\\\\\\\\n}\\\\\\\\n\\\\\\\\nconst radioOptions = {\\\\\\\\n  tooltipDirection: {\\\\\\\\n    top: 'top',\\\\\\\\n    bottom: 'bottom',\\\\\\\\n    right: 'right',\\\\\\\\n    left: 'left'\\\\\\\\n  },\\\\\\\\n  arrowPlacement: { start: 'start', center: 'center', end: 'end' },\\\\\\\\n  messagePlacement: { start: 'start', center: 'center', end: 'end' }\\\\\\\\n}\\\\\\\\n\\\\\\\\nexport const TooltipPlayground = () => (\\\\\\\\n  <ThemeWrapper>\\\\\\\\n    <Box p='3em' bgColor='grey.50' display='flex' justifyContent='center'>\\\\\\\\n      <Tooltip\\\\\\\\n        message={text(\\\\\\\\n          'message',\\\\\\\\n          'Customize your view by adding/removing columns. For the best view, a display of 8 columns is recommended.'\\\\\\\\n        )}\\\\\\\\n        tooltipDirection={\\\\\\\\n          radios(\\\\\\\\n            'tooltipDirection',\\\\\\\\n            radioOptions.tooltipDirection,\\\\\\\\n            'top'\\\\\\\\n          ) as tDirection\\\\\\\\n        }\\\\\\\\n        arrowPlacement={\\\\\\\\n          radios(\\\\\\\\n            'arrowPlacement',\\\\\\\\n            radioOptions.arrowPlacement,\\\\\\\\n            'center'\\\\\\\\n          ) as tPlacement\\\\\\\\n        }\\\\\\\\n        messagePlacement={\\\\\\\\n          radios(\\\\\\\\n            'messagePlacement',\\\\\\\\n            radioOptions.messagePlacement,\\\\\\\\n            'center'\\\\\\\\n          ) as tPlacement\\\\\\\\n        }\\\\\\\\n        hover={boolean('hover', false)}\\\\\\\\n        isWordWrap={boolean('Word Wrap', false)}\\\\\\\\n        maxWidth={number('maxWidth', 400)}\\\\\\\\n        color={{\\\\\\\\n          border: text('color.border', 'primary.dark'),\\\\\\\\n          arrow: text('color.arrow', 'primary.main'),\\\\\\\\n          background: text('color.background', 'primary.main'),\\\\\\\\n          text: text('color.text', 'primary.contrastText')\\\\\\\\n        }}\\\\\\\\n      >\\\\\\\\n        <Button>Hover Me!</Button>\\\\\\\\n      </Tooltip>\\\\\\\\n    </Box>\\\\\\\\n  </ThemeWrapper>\\\\\\\\n)\\\\\\\\n\\\\\\\",\\\\\\\"locationsMap\\\\\\\":{}},\\\\n    props: {\\\\n      propTablesExclude: [Box, Button, ThemeWrapper]\\\\n    }\\\\n  },}\\\\n\\\\nconst radioOptions = {\\\\n  tooltipDirection: {\\\\n    top: 'top',\\\\n    bottom: 'bottom',\\\\n    right: 'right',\\\\n    left: 'left'\\\\n  },\\\\n  arrowPlacement: { start: 'start', center: 'center', end: 'end' },\\\\n  messagePlacement: { start: 'start', center: 'center', end: 'end' }\\\\n}\\\\n\\\\nexport const TooltipPlayground = addSourceDecorator(() => (\\\\n  <ThemeWrapper>\\\\n    <Box p='3em' bgColor='grey.50' display='flex' justifyContent='center'>\\\\n      <Tooltip\\\\n        message={text(\\\\n          'message',\\\\n          'Customize your view by adding/removing columns. For the best view, a display of 8 columns is recommended.'\\\\n        )}\\\\n        tooltipDirection={\\\\n          radios(\\\\n            'tooltipDirection',\\\\n            radioOptions.tooltipDirection,\\\\n            'top'\\\\n          ) as tDirection\\\\n        }\\\\n        arrowPlacement={\\\\n          radios(\\\\n            'arrowPlacement',\\\\n            radioOptions.arrowPlacement,\\\\n            'center'\\\\n          ) as tPlacement\\\\n        }\\\\n        messagePlacement={\\\\n          radios(\\\\n            'messagePlacement',\\\\n            radioOptions.messagePlacement,\\\\n            'center'\\\\n          ) as tPlacement\\\\n        }\\\\n        hover={boolean('hover', false)}\\\\n        isWordWrap={boolean('Word Wrap', false)}\\\\n        maxWidth={number('maxWidth', 400)}\\\\n        color={{\\\\n          border: text('color.border', 'primary.dark'),\\\\n          arrow: text('color.arrow', 'primary.main'),\\\\n          background: text('color.background', 'primary.main'),\\\\n          text: text('color.text', 'primary.contrastText')\\\\n        }}\\\\n      >\\\\n        <Button>Hover Me!</Button>\\\\n      </Tooltip>\\\\n    </Box>\\\\n  </ThemeWrapper>\\\\n), {__STORY__, __ADDS_MAP__,__MAIN_FILE_LOCATION__,__MODULE_DEPENDENCIES__,__LOCAL_DEPENDENCIES__,__SOURCE_PREFIX__,__IDS_TO_FRAMEWORKS__});\\\",\\\"locationsMap\\\":{}},\\\"storySource\\\":{\\\"source\\\":\\\"import React from 'react'\\\\n\\\\nimport {\\\\n  radios,\\\\n  withKnobs,\\\\n  boolean,\\\\n  text,\\\\n  number\\\\n} from '@storybook/addon-knobs'\\\\n\\\\nimport { path } from '..'\\\\nimport Tooltip, { tDirection } from '.'\\\\nimport Button from '../../atoms/Button'\\\\nimport Box from '../../atoms/Box'\\\\n\\\\nimport ThemeWrapper from '../../../utilities/components/ThemeWrapper'\\\\nimport { tPlacement } from '../../../utilities/types'\\\\n\\\\nexport default {\\\\n  title: `${path}/Tooltip`,\\\\n  decorators: [withKnobs],\\\\n  component: Tooltip,\\\\n  parameters: {\\\\n    props: {\\\\n      propTablesExclude: [Box, Button, ThemeWrapper]\\\\n    }\\\\n  }\\\\n}\\\\n\\\\nconst radioOptions = {\\\\n  tooltipDirection: {\\\\n    top: 'top',\\\\n    bottom: 'bottom',\\\\n    right: 'right',\\\\n    left: 'left'\\\\n  },\\\\n  arrowPlacement: { start: 'start', center: 'center', end: 'end' },\\\\n  messagePlacement: { start: 'start', center: 'center', end: 'end' }\\\\n}\\\\n\\\\nexport const TooltipPlayground = () => (\\\\n  <ThemeWrapper>\\\\n    <Box p='3em' bgColor='grey.50' display='flex' justifyContent='center'>\\\\n      <Tooltip\\\\n        message={text(\\\\n          'message',\\\\n          'Customize your view by adding/removing columns. For the best view, a display of 8 columns is recommended.'\\\\n        )}\\\\n        tooltipDirection={\\\\n          radios(\\\\n            'tooltipDirection',\\\\n            radioOptions.tooltipDirection,\\\\n            'top'\\\\n          ) as tDirection\\\\n        }\\\\n        arrowPlacement={\\\\n          radios(\\\\n            'arrowPlacement',\\\\n            radioOptions.arrowPlacement,\\\\n            'center'\\\\n          ) as tPlacement\\\\n        }\\\\n        messagePlacement={\\\\n          radios(\\\\n            'messagePlacement',\\\\n            radioOptions.messagePlacement,\\\\n            'center'\\\\n          ) as tPlacement\\\\n        }\\\\n        hover={boolean('hover', false)}\\\\n        isWordWrap={boolean('Word Wrap', false)}\\\\n        maxWidth={number('maxWidth', 400)}\\\\n        color={{\\\\n          border: text('color.border', 'primary.dark'),\\\\n          arrow: text('color.arrow', 'primary.main'),\\\\n          background: text('color.background', 'primary.main'),\\\\n          text: text('color.text', 'primary.contrastText')\\\\n        }}\\\\n      >\\\\n        <Button>Hover Me!</Button>\\\\n      </Tooltip>\\\\n    </Box>\\\\n  </ThemeWrapper>\\\\n)\\\\n\\\",\\\"locationsMap\\\":{}},\\n    props: {\\n      propTablesExclude: [Box, Button, ThemeWrapper]\\n    }\\n  },}\\n\\nconst radioOptions = {\\n  tooltipDirection: {\\n    top: 'top',\\n    bottom: 'bottom',\\n    right: 'right',\\n    left: 'left'\\n  },\\n  arrowPlacement: { start: 'start', center: 'center', end: 'end' },\\n  messagePlacement: { start: 'start', center: 'center', end: 'end' }\\n}\\n\\nexport const TooltipPlayground = addSourceDecorator(addSourceDecorator(() => (\\n  <ThemeWrapper>\\n    <Box p='3em' bgColor='grey.50' display='flex' justifyContent='center'>\\n      <Tooltip\\n        message={text(\\n          'message',\\n          'Customize your view by adding/removing columns. For the best view, a display of 8 columns is recommended.'\\n        )}\\n        tooltipDirection={\\n          radios(\\n            'tooltipDirection',\\n            radioOptions.tooltipDirection,\\n            'top'\\n          ) as tDirection\\n        }\\n        arrowPlacement={\\n          radios(\\n            'arrowPlacement',\\n            radioOptions.arrowPlacement,\\n            'center'\\n          ) as tPlacement\\n        }\\n        messagePlacement={\\n          radios(\\n            'messagePlacement',\\n            radioOptions.messagePlacement,\\n            'center'\\n          ) as tPlacement\\n        }\\n        hover={boolean('hover', false)}\\n        isWordWrap={boolean('Word Wrap', false)}\\n        maxWidth={number('maxWidth', 400)}\\n        color={{\\n          border: text('color.border', 'primary.dark'),\\n          arrow: text('color.arrow', 'primary.main'),\\n          background: text('color.background', 'primary.main'),\\n          text: text('color.text', 'primary.contrastText')\\n        }}\\n      >\\n        <Button>Hover Me!</Button>\\n      </Tooltip>\\n    </Box>\\n  </ThemeWrapper>\\n), {__STORY__, __ADDS_MAP__,__MAIN_FILE_LOCATION__,__MODULE_DEPENDENCIES__,__LOCAL_DEPENDENCIES__,__SOURCE_PREFIX__,__IDS_TO_FRAMEWORKS__}), {__STORY__, __ADDS_MAP__,__MAIN_FILE_LOCATION__,__MODULE_DEPENDENCIES__,__LOCAL_DEPENDENCIES__,__SOURCE_PREFIX__,__IDS_TO_FRAMEWORKS__});\";\n// @ts-ignore\nvar __ADDS_MAP__ = {};\n// @ts-ignore\nvar __MAIN_FILE_LOCATION__ = \"/Tooltip.stories.tsx\";\n// @ts-ignore\nvar __MODULE_DEPENDENCIES__ = [];\n// @ts-ignore\nvar __LOCAL_DEPENDENCIES__ = {};\n// @ts-ignore\nvar __IDS_TO_FRAMEWORKS__ = {};\n        \n\n/* eslint-disable */\n// @ts-nocheck\n// @ts-ignore\nvar withSourceLoader = require('@storybook/source-loader/preview').withSource;\n// @ts-ignore\nvar addSourceDecorator = require(\"@storybook/source-loader/preview\").addSource;\n// @ts-ignore\nvar __SOURCE_PREFIX__ = \"/Users/farhanansari/Code/ui-library/src/components/molecules/Tooltip\";\n// @ts-ignore\nvar __STORY__ = \"\\n\\n// @ts-nocheck\\n// @ts-ignore\\nvar withSourceLoader = require('@storybook/source-loader/preview').withSource;\\n// @ts-ignore\\nvar addSourceDecorator = require(\\\"@storybook/source-loader/preview\\\").addSource;\\n// @ts-ignore\\nvar __SOURCE_PREFIX__ = \\\"/Users/farhanansari/Code/ui-library/src/components/molecules/Tooltip\\\";\\n// @ts-ignore\\nvar __STORY__ = \\\"import React from 'react'\\\\n\\\\nimport {\\\\n  radios,\\\\n  withKnobs,\\\\n  boolean,\\\\n  text,\\\\n  number\\\\n} from '@storybook/addon-knobs'\\\\n\\\\nimport { path } from '..'\\\\nimport Tooltip, { tDirection } from '.'\\\\nimport Button from '../../atoms/Button'\\\\nimport Box from '../../atoms/Box'\\\\n\\\\nimport ThemeWrapper from '../../../utilities/components/ThemeWrapper'\\\\nimport { tPlacement } from '../../../utilities/types'\\\\n\\\\nexport default {\\\\n  title: `${path}/Tooltip`,\\\\n  decorators: [withKnobs],\\\\n  component: Tooltip,\\\\n  parameters: {\\\\n    props: {\\\\n      propTablesExclude: [Box, Button, ThemeWrapper]\\\\n    }\\\\n  }\\\\n}\\\\n\\\\nconst radioOptions = {\\\\n  tooltipDirection: {\\\\n    top: 'top',\\\\n    bottom: 'bottom',\\\\n    right: 'right',\\\\n    left: 'left'\\\\n  },\\\\n  arrowPlacement: { start: 'start', center: 'center', end: 'end' },\\\\n  messagePlacement: { start: 'start', center: 'center', end: 'end' }\\\\n}\\\\n\\\\nexport const TooltipPlayground = () => (\\\\n  <ThemeWrapper>\\\\n    <Box p='3em' bgColor='grey.50' display='flex' justifyContent='center'>\\\\n      <Tooltip\\\\n        message={text(\\\\n          'message',\\\\n          'Customize your view by adding/removing columns. For the best view, a display of 8 columns is recommended.'\\\\n        )}\\\\n        tooltipDirection={\\\\n          radios(\\\\n            'tooltipDirection',\\\\n            radioOptions.tooltipDirection,\\\\n            'top'\\\\n          ) as tDirection\\\\n        }\\\\n        arrowPlacement={\\\\n          radios(\\\\n            'arrowPlacement',\\\\n            radioOptions.arrowPlacement,\\\\n            'center'\\\\n          ) as tPlacement\\\\n        }\\\\n        messagePlacement={\\\\n          radios(\\\\n            'messagePlacement',\\\\n            radioOptions.messagePlacement,\\\\n            'center'\\\\n          ) as tPlacement\\\\n        }\\\\n        hover={boolean('hover', false)}\\\\n        isWordWrap={boolean('Word Wrap', false)}\\\\n        maxWidth={number('maxWidth', 400)}\\\\n        color={{\\\\n          border: text('color.border', 'primary.dark'),\\\\n          arrow: text('color.arrow', 'primary.main'),\\\\n          background: text('color.background', 'primary.main'),\\\\n          text: text('color.text', 'primary.contrastText')\\\\n        }}\\\\n      >\\\\n        <Button>Hover Me!</Button>\\\\n      </Tooltip>\\\\n    </Box>\\\\n  </ThemeWrapper>\\\\n)\\\\n\\\";\\n// @ts-ignore\\nvar __ADDS_MAP__ = {};\\n// @ts-ignore\\nvar __MAIN_FILE_LOCATION__ = \\\"/Tooltip.stories.tsx\\\";\\n// @ts-ignore\\nvar __MODULE_DEPENDENCIES__ = [];\\n// @ts-ignore\\nvar __LOCAL_DEPENDENCIES__ = {};\\n// @ts-ignore\\nvar __IDS_TO_FRAMEWORKS__ = {};\\n        \\nimport React from 'react'\\n\\nimport {\\n  radios,\\n  withKnobs,\\n  boolean,\\n  text,\\n  number\\n} from '@storybook/addon-knobs'\\n\\nimport { path } from '..'\\nimport Tooltip, { tDirection } from '.'\\nimport Button from '../../atoms/Button'\\nimport Box from '../../atoms/Box'\\n\\nimport ThemeWrapper from '../../../utilities/components/ThemeWrapper'\\nimport { tPlacement } from '../../../utilities/types'\\n\\nexport default {\\n  title: `${path}/Tooltip`,\\n  decorators: [withKnobs],\\n  component: Tooltip,\\n  parameters: {\\\"storySource\\\":{\\\"source\\\":\\\"import React from 'react'\\\\n\\\\nimport {\\\\n  radios,\\\\n  withKnobs,\\\\n  boolean,\\\\n  text,\\\\n  number\\\\n} from '@storybook/addon-knobs'\\\\n\\\\nimport { path } from '..'\\\\nimport Tooltip, { tDirection } from '.'\\\\nimport Button from '../../atoms/Button'\\\\nimport Box from '../../atoms/Box'\\\\n\\\\nimport ThemeWrapper from '../../../utilities/components/ThemeWrapper'\\\\nimport { tPlacement } from '../../../utilities/types'\\\\n\\\\nexport default {\\\\n  title: `${path}/Tooltip`,\\\\n  decorators: [withKnobs],\\\\n  component: Tooltip,\\\\n  parameters: {\\\\n    props: {\\\\n      propTablesExclude: [Box, Button, ThemeWrapper]\\\\n    }\\\\n  }\\\\n}\\\\n\\\\nconst radioOptions = {\\\\n  tooltipDirection: {\\\\n    top: 'top',\\\\n    bottom: 'bottom',\\\\n    right: 'right',\\\\n    left: 'left'\\\\n  },\\\\n  arrowPlacement: { start: 'start', center: 'center', end: 'end' },\\\\n  messagePlacement: { start: 'start', center: 'center', end: 'end' }\\\\n}\\\\n\\\\nexport const TooltipPlayground = () => (\\\\n  <ThemeWrapper>\\\\n    <Box p='3em' bgColor='grey.50' display='flex' justifyContent='center'>\\\\n      <Tooltip\\\\n        message={text(\\\\n          'message',\\\\n          'Customize your view by adding/removing columns. For the best view, a display of 8 columns is recommended.'\\\\n        )}\\\\n        tooltipDirection={\\\\n          radios(\\\\n            'tooltipDirection',\\\\n            radioOptions.tooltipDirection,\\\\n            'top'\\\\n          ) as tDirection\\\\n        }\\\\n        arrowPlacement={\\\\n          radios(\\\\n            'arrowPlacement',\\\\n            radioOptions.arrowPlacement,\\\\n            'center'\\\\n          ) as tPlacement\\\\n        }\\\\n        messagePlacement={\\\\n          radios(\\\\n            'messagePlacement',\\\\n            radioOptions.messagePlacement,\\\\n            'center'\\\\n          ) as tPlacement\\\\n        }\\\\n        hover={boolean('hover', false)}\\\\n        isWordWrap={boolean('Word Wrap', false)}\\\\n        maxWidth={number('maxWidth', 400)}\\\\n        color={{\\\\n          border: text('color.border', 'primary.dark'),\\\\n          arrow: text('color.arrow', 'primary.main'),\\\\n          background: text('color.background', 'primary.main'),\\\\n          text: text('color.text', 'primary.contrastText')\\\\n        }}\\\\n      >\\\\n        <Button>Hover Me!</Button>\\\\n      </Tooltip>\\\\n    </Box>\\\\n  </ThemeWrapper>\\\\n)\\\\n\\\",\\\"locationsMap\\\":{}},\\n    props: {\\n      propTablesExclude: [Box, Button, ThemeWrapper]\\n    }\\n  },}\\n\\nconst radioOptions = {\\n  tooltipDirection: {\\n    top: 'top',\\n    bottom: 'bottom',\\n    right: 'right',\\n    left: 'left'\\n  },\\n  arrowPlacement: { start: 'start', center: 'center', end: 'end' },\\n  messagePlacement: { start: 'start', center: 'center', end: 'end' }\\n}\\n\\nexport const TooltipPlayground = addSourceDecorator(() => (\\n  <ThemeWrapper>\\n    <Box p='3em' bgColor='grey.50' display='flex' justifyContent='center'>\\n      <Tooltip\\n        message={text(\\n          'message',\\n          'Customize your view by adding/removing columns. For the best view, a display of 8 columns is recommended.'\\n        )}\\n        tooltipDirection={\\n          radios(\\n            'tooltipDirection',\\n            radioOptions.tooltipDirection,\\n            'top'\\n          ) as tDirection\\n        }\\n        arrowPlacement={\\n          radios(\\n            'arrowPlacement',\\n            radioOptions.arrowPlacement,\\n            'center'\\n          ) as tPlacement\\n        }\\n        messagePlacement={\\n          radios(\\n            'messagePlacement',\\n            radioOptions.messagePlacement,\\n            'center'\\n          ) as tPlacement\\n        }\\n        hover={boolean('hover', false)}\\n        isWordWrap={boolean('Word Wrap', false)}\\n        maxWidth={number('maxWidth', 400)}\\n        color={{\\n          border: text('color.border', 'primary.dark'),\\n          arrow: text('color.arrow', 'primary.main'),\\n          background: text('color.background', 'primary.main'),\\n          text: text('color.text', 'primary.contrastText')\\n        }}\\n      >\\n        <Button>Hover Me!</Button>\\n      </Tooltip>\\n    </Box>\\n  </ThemeWrapper>\\n), {__STORY__, __ADDS_MAP__,__MAIN_FILE_LOCATION__,__MODULE_DEPENDENCIES__,__LOCAL_DEPENDENCIES__,__SOURCE_PREFIX__,__IDS_TO_FRAMEWORKS__});\";\n// @ts-ignore\nvar __ADDS_MAP__ = {};\n// @ts-ignore\nvar __MAIN_FILE_LOCATION__ = \"/Tooltip.stories.tsx\";\n// @ts-ignore\nvar __MODULE_DEPENDENCIES__ = [];\n// @ts-ignore\nvar __LOCAL_DEPENDENCIES__ = {};\n// @ts-ignore\nvar __IDS_TO_FRAMEWORKS__ = {};\n        \n\n/* eslint-disable */\n// @ts-nocheck\n// @ts-ignore\nvar withSourceLoader = require('@storybook/source-loader/preview').withSource;\n// @ts-ignore\nvar addSourceDecorator = require(\"@storybook/source-loader/preview\").addSource;\n// @ts-ignore\nvar __SOURCE_PREFIX__ = \"/Users/farhanansari/Code/ui-library/src/components/molecules/Tooltip\";\n// @ts-ignore\nvar __STORY__ = \"import React from 'react'\\n\\nimport {\\n  radios,\\n  withKnobs,\\n  boolean,\\n  text,\\n  number\\n} from '@storybook/addon-knobs'\\n\\nimport { path } from '..'\\nimport Tooltip, { tDirection } from '.'\\nimport Button from '../../atoms/Button'\\nimport Box from '../../atoms/Box'\\n\\nimport ThemeWrapper from '../../../utilities/components/ThemeWrapper'\\nimport { tPlacement } from '../../../utilities/types'\\n\\nexport default {\\n  title: `${path}/Tooltip`,\\n  decorators: [withKnobs],\\n  component: Tooltip,\\n  parameters: {\\n    props: {\\n      propTablesExclude: [Box, Button, ThemeWrapper]\\n    }\\n  }\\n}\\n\\nconst radioOptions = {\\n  tooltipDirection: {\\n    top: 'top',\\n    bottom: 'bottom',\\n    right: 'right',\\n    left: 'left'\\n  },\\n  arrowPlacement: { start: 'start', center: 'center', end: 'end' },\\n  messagePlacement: { start: 'start', center: 'center', end: 'end' }\\n}\\n\\nexport const TooltipPlayground = () => (\\n  <ThemeWrapper>\\n    <Box p='3em' bgColor='grey.50' display='flex' justifyContent='center'>\\n      <Tooltip\\n        message={text(\\n          'message',\\n          'Customize your view by adding/removing columns. For the best view, a display of 8 columns is recommended.'\\n        )}\\n        tooltipDirection={\\n          radios(\\n            'tooltipDirection',\\n            radioOptions.tooltipDirection,\\n            'top'\\n          ) as tDirection\\n        }\\n        arrowPlacement={\\n          radios(\\n            'arrowPlacement',\\n            radioOptions.arrowPlacement,\\n            'center'\\n          ) as tPlacement\\n        }\\n        messagePlacement={\\n          radios(\\n            'messagePlacement',\\n            radioOptions.messagePlacement,\\n            'center'\\n          ) as tPlacement\\n        }\\n        hover={boolean('hover', false)}\\n        isWordWrap={boolean('Word Wrap', false)}\\n        maxWidth={number('maxWidth', 400)}\\n        color={{\\n          border: text('color.border', 'primary.dark'),\\n          arrow: text('color.arrow', 'primary.main'),\\n          background: text('color.background', 'primary.main'),\\n          text: text('color.text', 'primary.contrastText')\\n        }}\\n      >\\n        <Button>Hover Me!</Button>\\n      </Tooltip>\\n    </Box>\\n  </ThemeWrapper>\\n)\\n\";\n// @ts-ignore\nvar __ADDS_MAP__ = {};\n// @ts-ignore\nvar __MAIN_FILE_LOCATION__ = \"/Tooltip.stories.tsx\";\n// @ts-ignore\nvar __MODULE_DEPENDENCIES__ = [];\n// @ts-ignore\nvar __LOCAL_DEPENDENCIES__ = {};\n// @ts-ignore\nvar __IDS_TO_FRAMEWORKS__ = {};\n        \nimport React from 'react'\n\nimport {\n  radios,\n  withKnobs,\n  boolean,\n  text,\n  number\n} from '@storybook/addon-knobs'\n\nimport { path } from '..'\nimport Tooltip, { tDirection } from '.'\nimport Button from '../../atoms/Button'\nimport Box from '../../atoms/Box'\n\nimport ThemeWrapper from '../../../utilities/components/ThemeWrapper'\nimport { tPlacement } from '../../../utilities/types'\n\nexport default {\n  title: `${path}/Tooltip`,\n  decorators: [withKnobs],\n  component: Tooltip,\n  parameters: {\"storySource\":{\"source\":\"\\n\\n// @ts-nocheck\\n// @ts-ignore\\nvar withSourceLoader = require('@storybook/source-loader/preview').withSource;\\n// @ts-ignore\\nvar addSourceDecorator = require(\\\"@storybook/source-loader/preview\\\").addSource;\\n// @ts-ignore\\nvar __SOURCE_PREFIX__ = \\\"/Users/farhanansari/Code/ui-library/src/components/molecules/Tooltip\\\";\\n// @ts-ignore\\nvar __STORY__ = \\\"\\\\n\\\\n// @ts-nocheck\\\\n// @ts-ignore\\\\nvar withSourceLoader = require('@storybook/source-loader/preview').withSource;\\\\n// @ts-ignore\\\\nvar addSourceDecorator = require(\\\\\\\"@storybook/source-loader/preview\\\\\\\").addSource;\\\\n// @ts-ignore\\\\nvar __SOURCE_PREFIX__ = \\\\\\\"/Users/farhanansari/Code/ui-library/src/components/molecules/Tooltip\\\\\\\";\\\\n// @ts-ignore\\\\nvar __STORY__ = \\\\\\\"import React from 'react'\\\\\\\\n\\\\\\\\nimport {\\\\\\\\n  radios,\\\\\\\\n  withKnobs,\\\\\\\\n  boolean,\\\\\\\\n  text,\\\\\\\\n  number\\\\\\\\n} from '@storybook/addon-knobs'\\\\\\\\n\\\\\\\\nimport { path } from '..'\\\\\\\\nimport Tooltip, { tDirection } from '.'\\\\\\\\nimport Button from '../../atoms/Button'\\\\\\\\nimport Box from '../../atoms/Box'\\\\\\\\n\\\\\\\\nimport ThemeWrapper from '../../../utilities/components/ThemeWrapper'\\\\\\\\nimport { tPlacement } from '../../../utilities/types'\\\\\\\\n\\\\\\\\nexport default {\\\\\\\\n  title: `${path}/Tooltip`,\\\\\\\\n  decorators: [withKnobs],\\\\\\\\n  component: Tooltip,\\\\\\\\n  parameters: {\\\\\\\\n    props: {\\\\\\\\n      propTablesExclude: [Box, Button, ThemeWrapper]\\\\\\\\n    }\\\\\\\\n  }\\\\\\\\n}\\\\\\\\n\\\\\\\\nconst radioOptions = {\\\\\\\\n  tooltipDirection: {\\\\\\\\n    top: 'top',\\\\\\\\n    bottom: 'bottom',\\\\\\\\n    right: 'right',\\\\\\\\n    left: 'left'\\\\\\\\n  },\\\\\\\\n  arrowPlacement: { start: 'start', center: 'center', end: 'end' },\\\\\\\\n  messagePlacement: { start: 'start', center: 'center', end: 'end' }\\\\\\\\n}\\\\\\\\n\\\\\\\\nexport const TooltipPlayground = () => (\\\\\\\\n  <ThemeWrapper>\\\\\\\\n    <Box p='3em' bgColor='grey.50' display='flex' justifyContent='center'>\\\\\\\\n      <Tooltip\\\\\\\\n        message={text(\\\\\\\\n          'message',\\\\\\\\n          'Customize your view by adding/removing columns. For the best view, a display of 8 columns is recommended.'\\\\\\\\n        )}\\\\\\\\n        tooltipDirection={\\\\\\\\n          radios(\\\\\\\\n            'tooltipDirection',\\\\\\\\n            radioOptions.tooltipDirection,\\\\\\\\n            'top'\\\\\\\\n          ) as tDirection\\\\\\\\n        }\\\\\\\\n        arrowPlacement={\\\\\\\\n          radios(\\\\\\\\n            'arrowPlacement',\\\\\\\\n            radioOptions.arrowPlacement,\\\\\\\\n            'center'\\\\\\\\n          ) as tPlacement\\\\\\\\n        }\\\\\\\\n        messagePlacement={\\\\\\\\n          radios(\\\\\\\\n            'messagePlacement',\\\\\\\\n            radioOptions.messagePlacement,\\\\\\\\n            'center'\\\\\\\\n          ) as tPlacement\\\\\\\\n        }\\\\\\\\n        hover={boolean('hover', false)}\\\\\\\\n        isWordWrap={boolean('Word Wrap', false)}\\\\\\\\n        maxWidth={number('maxWidth', 400)}\\\\\\\\n        color={{\\\\\\\\n          border: text('color.border', 'primary.dark'),\\\\\\\\n          arrow: text('color.arrow', 'primary.main'),\\\\\\\\n          background: text('color.background', 'primary.main'),\\\\\\\\n          text: text('color.text', 'primary.contrastText')\\\\\\\\n        }}\\\\\\\\n      >\\\\\\\\n        <Button>Hover Me!</Button>\\\\\\\\n      </Tooltip>\\\\\\\\n    </Box>\\\\\\\\n  </ThemeWrapper>\\\\\\\\n)\\\\\\\\n\\\\\\\";\\\\n// @ts-ignore\\\\nvar __ADDS_MAP__ = {};\\\\n// @ts-ignore\\\\nvar __MAIN_FILE_LOCATION__ = \\\\\\\"/Tooltip.stories.tsx\\\\\\\";\\\\n// @ts-ignore\\\\nvar __MODULE_DEPENDENCIES__ = [];\\\\n// @ts-ignore\\\\nvar __LOCAL_DEPENDENCIES__ = {};\\\\n// @ts-ignore\\\\nvar __IDS_TO_FRAMEWORKS__ = {};\\\\n        \\\\nimport React from 'react'\\\\n\\\\nimport {\\\\n  radios,\\\\n  withKnobs,\\\\n  boolean,\\\\n  text,\\\\n  number\\\\n} from '@storybook/addon-knobs'\\\\n\\\\nimport { path } from '..'\\\\nimport Tooltip, { tDirection } from '.'\\\\nimport Button from '../../atoms/Button'\\\\nimport Box from '../../atoms/Box'\\\\n\\\\nimport ThemeWrapper from '../../../utilities/components/ThemeWrapper'\\\\nimport { tPlacement } from '../../../utilities/types'\\\\n\\\\nexport default {\\\\n  title: `${path}/Tooltip`,\\\\n  decorators: [withKnobs],\\\\n  component: Tooltip,\\\\n  parameters: {\\\\\\\"storySource\\\\\\\":{\\\\\\\"source\\\\\\\":\\\\\\\"import React from 'react'\\\\\\\\n\\\\\\\\nimport {\\\\\\\\n  radios,\\\\\\\\n  withKnobs,\\\\\\\\n  boolean,\\\\\\\\n  text,\\\\\\\\n  number\\\\\\\\n} from '@storybook/addon-knobs'\\\\\\\\n\\\\\\\\nimport { path } from '..'\\\\\\\\nimport Tooltip, { tDirection } from '.'\\\\\\\\nimport Button from '../../atoms/Button'\\\\\\\\nimport Box from '../../atoms/Box'\\\\\\\\n\\\\\\\\nimport ThemeWrapper from '../../../utilities/components/ThemeWrapper'\\\\\\\\nimport { tPlacement } from '../../../utilities/types'\\\\\\\\n\\\\\\\\nexport default {\\\\\\\\n  title: `${path}/Tooltip`,\\\\\\\\n  decorators: [withKnobs],\\\\\\\\n  component: Tooltip,\\\\\\\\n  parameters: {\\\\\\\\n    props: {\\\\\\\\n      propTablesExclude: [Box, Button, ThemeWrapper]\\\\\\\\n    }\\\\\\\\n  }\\\\\\\\n}\\\\\\\\n\\\\\\\\nconst radioOptions = {\\\\\\\\n  tooltipDirection: {\\\\\\\\n    top: 'top',\\\\\\\\n    bottom: 'bottom',\\\\\\\\n    right: 'right',\\\\\\\\n    left: 'left'\\\\\\\\n  },\\\\\\\\n  arrowPlacement: { start: 'start', center: 'center', end: 'end' },\\\\\\\\n  messagePlacement: { start: 'start', center: 'center', end: 'end' }\\\\\\\\n}\\\\\\\\n\\\\\\\\nexport const TooltipPlayground = () => (\\\\\\\\n  <ThemeWrapper>\\\\\\\\n    <Box p='3em' bgColor='grey.50' display='flex' justifyContent='center'>\\\\\\\\n      <Tooltip\\\\\\\\n        message={text(\\\\\\\\n          'message',\\\\\\\\n          'Customize your view by adding/removing columns. For the best view, a display of 8 columns is recommended.'\\\\\\\\n        )}\\\\\\\\n        tooltipDirection={\\\\\\\\n          radios(\\\\\\\\n            'tooltipDirection',\\\\\\\\n            radioOptions.tooltipDirection,\\\\\\\\n            'top'\\\\\\\\n          ) as tDirection\\\\\\\\n        }\\\\\\\\n        arrowPlacement={\\\\\\\\n          radios(\\\\\\\\n            'arrowPlacement',\\\\\\\\n            radioOptions.arrowPlacement,\\\\\\\\n            'center'\\\\\\\\n          ) as tPlacement\\\\\\\\n        }\\\\\\\\n        messagePlacement={\\\\\\\\n          radios(\\\\\\\\n            'messagePlacement',\\\\\\\\n            radioOptions.messagePlacement,\\\\\\\\n            'center'\\\\\\\\n          ) as tPlacement\\\\\\\\n        }\\\\\\\\n        hover={boolean('hover', false)}\\\\\\\\n        isWordWrap={boolean('Word Wrap', false)}\\\\\\\\n        maxWidth={number('maxWidth', 400)}\\\\\\\\n        color={{\\\\\\\\n          border: text('color.border', 'primary.dark'),\\\\\\\\n          arrow: text('color.arrow', 'primary.main'),\\\\\\\\n          background: text('color.background', 'primary.main'),\\\\\\\\n          text: text('color.text', 'primary.contrastText')\\\\\\\\n        }}\\\\\\\\n      >\\\\\\\\n        <Button>Hover Me!</Button>\\\\\\\\n      </Tooltip>\\\\\\\\n    </Box>\\\\\\\\n  </ThemeWrapper>\\\\\\\\n)\\\\\\\\n\\\\\\\",\\\\\\\"locationsMap\\\\\\\":{}},\\\\n    props: {\\\\n      propTablesExclude: [Box, Button, ThemeWrapper]\\\\n    }\\\\n  },}\\\\n\\\\nconst radioOptions = {\\\\n  tooltipDirection: {\\\\n    top: 'top',\\\\n    bottom: 'bottom',\\\\n    right: 'right',\\\\n    left: 'left'\\\\n  },\\\\n  arrowPlacement: { start: 'start', center: 'center', end: 'end' },\\\\n  messagePlacement: { start: 'start', center: 'center', end: 'end' }\\\\n}\\\\n\\\\nexport const TooltipPlayground = addSourceDecorator(() => (\\\\n  <ThemeWrapper>\\\\n    <Box p='3em' bgColor='grey.50' display='flex' justifyContent='center'>\\\\n      <Tooltip\\\\n        message={text(\\\\n          'message',\\\\n          'Customize your view by adding/removing columns. For the best view, a display of 8 columns is recommended.'\\\\n        )}\\\\n        tooltipDirection={\\\\n          radios(\\\\n            'tooltipDirection',\\\\n            radioOptions.tooltipDirection,\\\\n            'top'\\\\n          ) as tDirection\\\\n        }\\\\n        arrowPlacement={\\\\n          radios(\\\\n            'arrowPlacement',\\\\n            radioOptions.arrowPlacement,\\\\n            'center'\\\\n          ) as tPlacement\\\\n        }\\\\n        messagePlacement={\\\\n          radios(\\\\n            'messagePlacement',\\\\n            radioOptions.messagePlacement,\\\\n            'center'\\\\n          ) as tPlacement\\\\n        }\\\\n        hover={boolean('hover', false)}\\\\n        isWordWrap={boolean('Word Wrap', false)}\\\\n        maxWidth={number('maxWidth', 400)}\\\\n        color={{\\\\n          border: text('color.border', 'primary.dark'),\\\\n          arrow: text('color.arrow', 'primary.main'),\\\\n          background: text('color.background', 'primary.main'),\\\\n          text: text('color.text', 'primary.contrastText')\\\\n        }}\\\\n      >\\\\n        <Button>Hover Me!</Button>\\\\n      </Tooltip>\\\\n    </Box>\\\\n  </ThemeWrapper>\\\\n), {__STORY__, __ADDS_MAP__,__MAIN_FILE_LOCATION__,__MODULE_DEPENDENCIES__,__LOCAL_DEPENDENCIES__,__SOURCE_PREFIX__,__IDS_TO_FRAMEWORKS__});\\\";\\n// @ts-ignore\\nvar __ADDS_MAP__ = {};\\n// @ts-ignore\\nvar __MAIN_FILE_LOCATION__ = \\\"/Tooltip.stories.tsx\\\";\\n// @ts-ignore\\nvar __MODULE_DEPENDENCIES__ = [];\\n// @ts-ignore\\nvar __LOCAL_DEPENDENCIES__ = {};\\n// @ts-ignore\\nvar __IDS_TO_FRAMEWORKS__ = {};\\n        \\n\\n\\n// @ts-nocheck\\n// @ts-ignore\\nvar withSourceLoader = require('@storybook/source-loader/preview').withSource;\\n// @ts-ignore\\nvar addSourceDecorator = require(\\\"@storybook/source-loader/preview\\\").addSource;\\n// @ts-ignore\\nvar __SOURCE_PREFIX__ = \\\"/Users/farhanansari/Code/ui-library/src/components/molecules/Tooltip\\\";\\n// @ts-ignore\\nvar __STORY__ = \\\"import React from 'react'\\\\n\\\\nimport {\\\\n  radios,\\\\n  withKnobs,\\\\n  boolean,\\\\n  text,\\\\n  number\\\\n} from '@storybook/addon-knobs'\\\\n\\\\nimport { path } from '..'\\\\nimport Tooltip, { tDirection } from '.'\\\\nimport Button from '../../atoms/Button'\\\\nimport Box from '../../atoms/Box'\\\\n\\\\nimport ThemeWrapper from '../../../utilities/components/ThemeWrapper'\\\\nimport { tPlacement } from '../../../utilities/types'\\\\n\\\\nexport default {\\\\n  title: `${path}/Tooltip`,\\\\n  decorators: [withKnobs],\\\\n  component: Tooltip,\\\\n  parameters: {\\\\n    props: {\\\\n      propTablesExclude: [Box, Button, ThemeWrapper]\\\\n    }\\\\n  }\\\\n}\\\\n\\\\nconst radioOptions = {\\\\n  tooltipDirection: {\\\\n    top: 'top',\\\\n    bottom: 'bottom',\\\\n    right: 'right',\\\\n    left: 'left'\\\\n  },\\\\n  arrowPlacement: { start: 'start', center: 'center', end: 'end' },\\\\n  messagePlacement: { start: 'start', center: 'center', end: 'end' }\\\\n}\\\\n\\\\nexport const TooltipPlayground = () => (\\\\n  <ThemeWrapper>\\\\n    <Box p='3em' bgColor='grey.50' display='flex' justifyContent='center'>\\\\n      <Tooltip\\\\n        message={text(\\\\n          'message',\\\\n          'Customize your view by adding/removing columns. For the best view, a display of 8 columns is recommended.'\\\\n        )}\\\\n        tooltipDirection={\\\\n          radios(\\\\n            'tooltipDirection',\\\\n            radioOptions.tooltipDirection,\\\\n            'top'\\\\n          ) as tDirection\\\\n        }\\\\n        arrowPlacement={\\\\n          radios(\\\\n            'arrowPlacement',\\\\n            radioOptions.arrowPlacement,\\\\n            'center'\\\\n          ) as tPlacement\\\\n        }\\\\n        messagePlacement={\\\\n          radios(\\\\n            'messagePlacement',\\\\n            radioOptions.messagePlacement,\\\\n            'center'\\\\n          ) as tPlacement\\\\n        }\\\\n        hover={boolean('hover', false)}\\\\n        isWordWrap={boolean('Word Wrap', false)}\\\\n        maxWidth={number('maxWidth', 400)}\\\\n        color={{\\\\n          border: text('color.border', 'primary.dark'),\\\\n          arrow: text('color.arrow', 'primary.main'),\\\\n          background: text('color.background', 'primary.main'),\\\\n          text: text('color.text', 'primary.contrastText')\\\\n        }}\\\\n      >\\\\n        <Button>Hover Me!</Button>\\\\n      </Tooltip>\\\\n    </Box>\\\\n  </ThemeWrapper>\\\\n)\\\\n\\\";\\n// @ts-ignore\\nvar __ADDS_MAP__ = {};\\n// @ts-ignore\\nvar __MAIN_FILE_LOCATION__ = \\\"/Tooltip.stories.tsx\\\";\\n// @ts-ignore\\nvar __MODULE_DEPENDENCIES__ = [];\\n// @ts-ignore\\nvar __LOCAL_DEPENDENCIES__ = {};\\n// @ts-ignore\\nvar __IDS_TO_FRAMEWORKS__ = {};\\n        \\nimport React from 'react'\\n\\nimport {\\n  radios,\\n  withKnobs,\\n  boolean,\\n  text,\\n  number\\n} from '@storybook/addon-knobs'\\n\\nimport { path } from '..'\\nimport Tooltip, { tDirection } from '.'\\nimport Button from '../../atoms/Button'\\nimport Box from '../../atoms/Box'\\n\\nimport ThemeWrapper from '../../../utilities/components/ThemeWrapper'\\nimport { tPlacement } from '../../../utilities/types'\\n\\nexport default {\\n  title: `${path}/Tooltip`,\\n  decorators: [withKnobs],\\n  component: Tooltip,\\n  parameters: {\\\"storySource\\\":{\\\"source\\\":\\\"\\\\n\\\\n// @ts-nocheck\\\\n// @ts-ignore\\\\nvar withSourceLoader = require('@storybook/source-loader/preview').withSource;\\\\n// @ts-ignore\\\\nvar addSourceDecorator = require(\\\\\\\"@storybook/source-loader/preview\\\\\\\").addSource;\\\\n// @ts-ignore\\\\nvar __SOURCE_PREFIX__ = \\\\\\\"/Users/farhanansari/Code/ui-library/src/components/molecules/Tooltip\\\\\\\";\\\\n// @ts-ignore\\\\nvar __STORY__ = \\\\\\\"import React from 'react'\\\\\\\\n\\\\\\\\nimport {\\\\\\\\n  radios,\\\\\\\\n  withKnobs,\\\\\\\\n  boolean,\\\\\\\\n  text,\\\\\\\\n  number\\\\\\\\n} from '@storybook/addon-knobs'\\\\\\\\n\\\\\\\\nimport { path } from '..'\\\\\\\\nimport Tooltip, { tDirection } from '.'\\\\\\\\nimport Button from '../../atoms/Button'\\\\\\\\nimport Box from '../../atoms/Box'\\\\\\\\n\\\\\\\\nimport ThemeWrapper from '../../../utilities/components/ThemeWrapper'\\\\\\\\nimport { tPlacement } from '../../../utilities/types'\\\\\\\\n\\\\\\\\nexport default {\\\\\\\\n  title: `${path}/Tooltip`,\\\\\\\\n  decorators: [withKnobs],\\\\\\\\n  component: Tooltip,\\\\\\\\n  parameters: {\\\\\\\\n    props: {\\\\\\\\n      propTablesExclude: [Box, Button, ThemeWrapper]\\\\\\\\n    }\\\\\\\\n  }\\\\\\\\n}\\\\\\\\n\\\\\\\\nconst radioOptions = {\\\\\\\\n  tooltipDirection: {\\\\\\\\n    top: 'top',\\\\\\\\n    bottom: 'bottom',\\\\\\\\n    right: 'right',\\\\\\\\n    left: 'left'\\\\\\\\n  },\\\\\\\\n  arrowPlacement: { start: 'start', center: 'center', end: 'end' },\\\\\\\\n  messagePlacement: { start: 'start', center: 'center', end: 'end' }\\\\\\\\n}\\\\\\\\n\\\\\\\\nexport const TooltipPlayground = () => (\\\\\\\\n  <ThemeWrapper>\\\\\\\\n    <Box p='3em' bgColor='grey.50' display='flex' justifyContent='center'>\\\\\\\\n      <Tooltip\\\\\\\\n        message={text(\\\\\\\\n          'message',\\\\\\\\n          'Customize your view by adding/removing columns. For the best view, a display of 8 columns is recommended.'\\\\\\\\n        )}\\\\\\\\n        tooltipDirection={\\\\\\\\n          radios(\\\\\\\\n            'tooltipDirection',\\\\\\\\n            radioOptions.tooltipDirection,\\\\\\\\n            'top'\\\\\\\\n          ) as tDirection\\\\\\\\n        }\\\\\\\\n        arrowPlacement={\\\\\\\\n          radios(\\\\\\\\n            'arrowPlacement',\\\\\\\\n            radioOptions.arrowPlacement,\\\\\\\\n            'center'\\\\\\\\n          ) as tPlacement\\\\\\\\n        }\\\\\\\\n        messagePlacement={\\\\\\\\n          radios(\\\\\\\\n            'messagePlacement',\\\\\\\\n            radioOptions.messagePlacement,\\\\\\\\n            'center'\\\\\\\\n          ) as tPlacement\\\\\\\\n        }\\\\\\\\n        hover={boolean('hover', false)}\\\\\\\\n        isWordWrap={boolean('Word Wrap', false)}\\\\\\\\n        maxWidth={number('maxWidth', 400)}\\\\\\\\n        color={{\\\\\\\\n          border: text('color.border', 'primary.dark'),\\\\\\\\n          arrow: text('color.arrow', 'primary.main'),\\\\\\\\n          background: text('color.background', 'primary.main'),\\\\\\\\n          text: text('color.text', 'primary.contrastText')\\\\\\\\n        }}\\\\\\\\n      >\\\\\\\\n        <Button>Hover Me!</Button>\\\\\\\\n      </Tooltip>\\\\\\\\n    </Box>\\\\\\\\n  </ThemeWrapper>\\\\\\\\n)\\\\\\\\n\\\\\\\";\\\\n// @ts-ignore\\\\nvar __ADDS_MAP__ = {};\\\\n// @ts-ignore\\\\nvar __MAIN_FILE_LOCATION__ = \\\\\\\"/Tooltip.stories.tsx\\\\\\\";\\\\n// @ts-ignore\\\\nvar __MODULE_DEPENDENCIES__ = [];\\\\n// @ts-ignore\\\\nvar __LOCAL_DEPENDENCIES__ = {};\\\\n// @ts-ignore\\\\nvar __IDS_TO_FRAMEWORKS__ = {};\\\\n        \\\\nimport React from 'react'\\\\n\\\\nimport {\\\\n  radios,\\\\n  withKnobs,\\\\n  boolean,\\\\n  text,\\\\n  number\\\\n} from '@storybook/addon-knobs'\\\\n\\\\nimport { path } from '..'\\\\nimport Tooltip, { tDirection } from '.'\\\\nimport Button from '../../atoms/Button'\\\\nimport Box from '../../atoms/Box'\\\\n\\\\nimport ThemeWrapper from '../../../utilities/components/ThemeWrapper'\\\\nimport { tPlacement } from '../../../utilities/types'\\\\n\\\\nexport default {\\\\n  title: `${path}/Tooltip`,\\\\n  decorators: [withKnobs],\\\\n  component: Tooltip,\\\\n  parameters: {\\\\\\\"storySource\\\\\\\":{\\\\\\\"source\\\\\\\":\\\\\\\"import React from 'react'\\\\\\\\n\\\\\\\\nimport {\\\\\\\\n  radios,\\\\\\\\n  withKnobs,\\\\\\\\n  boolean,\\\\\\\\n  text,\\\\\\\\n  number\\\\\\\\n} from '@storybook/addon-knobs'\\\\\\\\n\\\\\\\\nimport { path } from '..'\\\\\\\\nimport Tooltip, { tDirection } from '.'\\\\\\\\nimport Button from '../../atoms/Button'\\\\\\\\nimport Box from '../../atoms/Box'\\\\\\\\n\\\\\\\\nimport ThemeWrapper from '../../../utilities/components/ThemeWrapper'\\\\\\\\nimport { tPlacement } from '../../../utilities/types'\\\\\\\\n\\\\\\\\nexport default {\\\\\\\\n  title: `${path}/Tooltip`,\\\\\\\\n  decorators: [withKnobs],\\\\\\\\n  component: Tooltip,\\\\\\\\n  parameters: {\\\\\\\\n    props: {\\\\\\\\n      propTablesExclude: [Box, Button, ThemeWrapper]\\\\\\\\n    }\\\\\\\\n  }\\\\\\\\n}\\\\\\\\n\\\\\\\\nconst radioOptions = {\\\\\\\\n  tooltipDirection: {\\\\\\\\n    top: 'top',\\\\\\\\n    bottom: 'bottom',\\\\\\\\n    right: 'right',\\\\\\\\n    left: 'left'\\\\\\\\n  },\\\\\\\\n  arrowPlacement: { start: 'start', center: 'center', end: 'end' },\\\\\\\\n  messagePlacement: { start: 'start', center: 'center', end: 'end' }\\\\\\\\n}\\\\\\\\n\\\\\\\\nexport const TooltipPlayground = () => (\\\\\\\\n  <ThemeWrapper>\\\\\\\\n    <Box p='3em' bgColor='grey.50' display='flex' justifyContent='center'>\\\\\\\\n      <Tooltip\\\\\\\\n        message={text(\\\\\\\\n          'message',\\\\\\\\n          'Customize your view by adding/removing columns. For the best view, a display of 8 columns is recommended.'\\\\\\\\n        )}\\\\\\\\n        tooltipDirection={\\\\\\\\n          radios(\\\\\\\\n            'tooltipDirection',\\\\\\\\n            radioOptions.tooltipDirection,\\\\\\\\n            'top'\\\\\\\\n          ) as tDirection\\\\\\\\n        }\\\\\\\\n        arrowPlacement={\\\\\\\\n          radios(\\\\\\\\n            'arrowPlacement',\\\\\\\\n            radioOptions.arrowPlacement,\\\\\\\\n            'center'\\\\\\\\n          ) as tPlacement\\\\\\\\n        }\\\\\\\\n        messagePlacement={\\\\\\\\n          radios(\\\\\\\\n            'messagePlacement',\\\\\\\\n            radioOptions.messagePlacement,\\\\\\\\n            'center'\\\\\\\\n          ) as tPlacement\\\\\\\\n        }\\\\\\\\n        hover={boolean('hover', false)}\\\\\\\\n        isWordWrap={boolean('Word Wrap', false)}\\\\\\\\n        maxWidth={number('maxWidth', 400)}\\\\\\\\n        color={{\\\\\\\\n          border: text('color.border', 'primary.dark'),\\\\\\\\n          arrow: text('color.arrow', 'primary.main'),\\\\\\\\n          background: text('color.background', 'primary.main'),\\\\\\\\n          text: text('color.text', 'primary.contrastText')\\\\\\\\n        }}\\\\\\\\n      >\\\\\\\\n        <Button>Hover Me!</Button>\\\\\\\\n      </Tooltip>\\\\\\\\n    </Box>\\\\\\\\n  </ThemeWrapper>\\\\\\\\n)\\\\\\\\n\\\\\\\",\\\\\\\"locationsMap\\\\\\\":{}},\\\\n    props: {\\\\n      propTablesExclude: [Box, Button, ThemeWrapper]\\\\n    }\\\\n  },}\\\\n\\\\nconst radioOptions = {\\\\n  tooltipDirection: {\\\\n    top: 'top',\\\\n    bottom: 'bottom',\\\\n    right: 'right',\\\\n    left: 'left'\\\\n  },\\\\n  arrowPlacement: { start: 'start', center: 'center', end: 'end' },\\\\n  messagePlacement: { start: 'start', center: 'center', end: 'end' }\\\\n}\\\\n\\\\nexport const TooltipPlayground = addSourceDecorator(() => (\\\\n  <ThemeWrapper>\\\\n    <Box p='3em' bgColor='grey.50' display='flex' justifyContent='center'>\\\\n      <Tooltip\\\\n        message={text(\\\\n          'message',\\\\n          'Customize your view by adding/removing columns. For the best view, a display of 8 columns is recommended.'\\\\n        )}\\\\n        tooltipDirection={\\\\n          radios(\\\\n            'tooltipDirection',\\\\n            radioOptions.tooltipDirection,\\\\n            'top'\\\\n          ) as tDirection\\\\n        }\\\\n        arrowPlacement={\\\\n          radios(\\\\n            'arrowPlacement',\\\\n            radioOptions.arrowPlacement,\\\\n            'center'\\\\n          ) as tPlacement\\\\n        }\\\\n        messagePlacement={\\\\n          radios(\\\\n            'messagePlacement',\\\\n            radioOptions.messagePlacement,\\\\n            'center'\\\\n          ) as tPlacement\\\\n        }\\\\n        hover={boolean('hover', false)}\\\\n        isWordWrap={boolean('Word Wrap', false)}\\\\n        maxWidth={number('maxWidth', 400)}\\\\n        color={{\\\\n          border: text('color.border', 'primary.dark'),\\\\n          arrow: text('color.arrow', 'primary.main'),\\\\n          background: text('color.background', 'primary.main'),\\\\n          text: text('color.text', 'primary.contrastText')\\\\n        }}\\\\n      >\\\\n        <Button>Hover Me!</Button>\\\\n      </Tooltip>\\\\n    </Box>\\\\n  </ThemeWrapper>\\\\n), {__STORY__, __ADDS_MAP__,__MAIN_FILE_LOCATION__,__MODULE_DEPENDENCIES__,__LOCAL_DEPENDENCIES__,__SOURCE_PREFIX__,__IDS_TO_FRAMEWORKS__});\\\",\\\"locationsMap\\\":{}},\\\"storySource\\\":{\\\"source\\\":\\\"import React from 'react'\\\\n\\\\nimport {\\\\n  radios,\\\\n  withKnobs,\\\\n  boolean,\\\\n  text,\\\\n  number\\\\n} from '@storybook/addon-knobs'\\\\n\\\\nimport { path } from '..'\\\\nimport Tooltip, { tDirection } from '.'\\\\nimport Button from '../../atoms/Button'\\\\nimport Box from '../../atoms/Box'\\\\n\\\\nimport ThemeWrapper from '../../../utilities/components/ThemeWrapper'\\\\nimport { tPlacement } from '../../../utilities/types'\\\\n\\\\nexport default {\\\\n  title: `${path}/Tooltip`,\\\\n  decorators: [withKnobs],\\\\n  component: Tooltip,\\\\n  parameters: {\\\\n    props: {\\\\n      propTablesExclude: [Box, Button, ThemeWrapper]\\\\n    }\\\\n  }\\\\n}\\\\n\\\\nconst radioOptions = {\\\\n  tooltipDirection: {\\\\n    top: 'top',\\\\n    bottom: 'bottom',\\\\n    right: 'right',\\\\n    left: 'left'\\\\n  },\\\\n  arrowPlacement: { start: 'start', center: 'center', end: 'end' },\\\\n  messagePlacement: { start: 'start', center: 'center', end: 'end' }\\\\n}\\\\n\\\\nexport const TooltipPlayground = () => (\\\\n  <ThemeWrapper>\\\\n    <Box p='3em' bgColor='grey.50' display='flex' justifyContent='center'>\\\\n      <Tooltip\\\\n        message={text(\\\\n          'message',\\\\n          'Customize your view by adding/removing columns. For the best view, a display of 8 columns is recommended.'\\\\n        )}\\\\n        tooltipDirection={\\\\n          radios(\\\\n            'tooltipDirection',\\\\n            radioOptions.tooltipDirection,\\\\n            'top'\\\\n          ) as tDirection\\\\n        }\\\\n        arrowPlacement={\\\\n          radios(\\\\n            'arrowPlacement',\\\\n            radioOptions.arrowPlacement,\\\\n            'center'\\\\n          ) as tPlacement\\\\n        }\\\\n        messagePlacement={\\\\n          radios(\\\\n            'messagePlacement',\\\\n            radioOptions.messagePlacement,\\\\n            'center'\\\\n          ) as tPlacement\\\\n        }\\\\n        hover={boolean('hover', false)}\\\\n        isWordWrap={boolean('Word Wrap', false)}\\\\n        maxWidth={number('maxWidth', 400)}\\\\n        color={{\\\\n          border: text('color.border', 'primary.dark'),\\\\n          arrow: text('color.arrow', 'primary.main'),\\\\n          background: text('color.background', 'primary.main'),\\\\n          text: text('color.text', 'primary.contrastText')\\\\n        }}\\\\n      >\\\\n        <Button>Hover Me!</Button>\\\\n      </Tooltip>\\\\n    </Box>\\\\n  </ThemeWrapper>\\\\n)\\\\n\\\",\\\"locationsMap\\\":{}},\\n    props: {\\n      propTablesExclude: [Box, Button, ThemeWrapper]\\n    }\\n  },}\\n\\nconst radioOptions = {\\n  tooltipDirection: {\\n    top: 'top',\\n    bottom: 'bottom',\\n    right: 'right',\\n    left: 'left'\\n  },\\n  arrowPlacement: { start: 'start', center: 'center', end: 'end' },\\n  messagePlacement: { start: 'start', center: 'center', end: 'end' }\\n}\\n\\nexport const TooltipPlayground = addSourceDecorator(addSourceDecorator(() => (\\n  <ThemeWrapper>\\n    <Box p='3em' bgColor='grey.50' display='flex' justifyContent='center'>\\n      <Tooltip\\n        message={text(\\n          'message',\\n          'Customize your view by adding/removing columns. For the best view, a display of 8 columns is recommended.'\\n        )}\\n        tooltipDirection={\\n          radios(\\n            'tooltipDirection',\\n            radioOptions.tooltipDirection,\\n            'top'\\n          ) as tDirection\\n        }\\n        arrowPlacement={\\n          radios(\\n            'arrowPlacement',\\n            radioOptions.arrowPlacement,\\n            'center'\\n          ) as tPlacement\\n        }\\n        messagePlacement={\\n          radios(\\n            'messagePlacement',\\n            radioOptions.messagePlacement,\\n            'center'\\n          ) as tPlacement\\n        }\\n        hover={boolean('hover', false)}\\n        isWordWrap={boolean('Word Wrap', false)}\\n        maxWidth={number('maxWidth', 400)}\\n        color={{\\n          border: text('color.border', 'primary.dark'),\\n          arrow: text('color.arrow', 'primary.main'),\\n          background: text('color.background', 'primary.main'),\\n          text: text('color.text', 'primary.contrastText')\\n        }}\\n      >\\n        <Button>Hover Me!</Button>\\n      </Tooltip>\\n    </Box>\\n  </ThemeWrapper>\\n), {__STORY__, __ADDS_MAP__,__MAIN_FILE_LOCATION__,__MODULE_DEPENDENCIES__,__LOCAL_DEPENDENCIES__,__SOURCE_PREFIX__,__IDS_TO_FRAMEWORKS__}), {__STORY__, __ADDS_MAP__,__MAIN_FILE_LOCATION__,__MODULE_DEPENDENCIES__,__LOCAL_DEPENDENCIES__,__SOURCE_PREFIX__,__IDS_TO_FRAMEWORKS__});\",\"locationsMap\":{}},\"storySource\":{\"source\":\"\\n\\n// @ts-nocheck\\n// @ts-ignore\\nvar withSourceLoader = require('@storybook/source-loader/preview').withSource;\\n// @ts-ignore\\nvar addSourceDecorator = require(\\\"@storybook/source-loader/preview\\\").addSource;\\n// @ts-ignore\\nvar __SOURCE_PREFIX__ = \\\"/Users/farhanansari/Code/ui-library/src/components/molecules/Tooltip\\\";\\n// @ts-ignore\\nvar __STORY__ = \\\"import React from 'react'\\\\n\\\\nimport {\\\\n  radios,\\\\n  withKnobs,\\\\n  boolean,\\\\n  text,\\\\n  number\\\\n} from '@storybook/addon-knobs'\\\\n\\\\nimport { path } from '..'\\\\nimport Tooltip, { tDirection } from '.'\\\\nimport Button from '../../atoms/Button'\\\\nimport Box from '../../atoms/Box'\\\\n\\\\nimport ThemeWrapper from '../../../utilities/components/ThemeWrapper'\\\\nimport { tPlacement } from '../../../utilities/types'\\\\n\\\\nexport default {\\\\n  title: `${path}/Tooltip`,\\\\n  decorators: [withKnobs],\\\\n  component: Tooltip,\\\\n  parameters: {\\\\n    props: {\\\\n      propTablesExclude: [Box, Button, ThemeWrapper]\\\\n    }\\\\n  }\\\\n}\\\\n\\\\nconst radioOptions = {\\\\n  tooltipDirection: {\\\\n    top: 'top',\\\\n    bottom: 'bottom',\\\\n    right: 'right',\\\\n    left: 'left'\\\\n  },\\\\n  arrowPlacement: { start: 'start', center: 'center', end: 'end' },\\\\n  messagePlacement: { start: 'start', center: 'center', end: 'end' }\\\\n}\\\\n\\\\nexport const TooltipPlayground = () => (\\\\n  <ThemeWrapper>\\\\n    <Box p='3em' bgColor='grey.50' display='flex' justifyContent='center'>\\\\n      <Tooltip\\\\n        message={text(\\\\n          'message',\\\\n          'Customize your view by adding/removing columns. For the best view, a display of 8 columns is recommended.'\\\\n        )}\\\\n        tooltipDirection={\\\\n          radios(\\\\n            'tooltipDirection',\\\\n            radioOptions.tooltipDirection,\\\\n            'top'\\\\n          ) as tDirection\\\\n        }\\\\n        arrowPlacement={\\\\n          radios(\\\\n            'arrowPlacement',\\\\n            radioOptions.arrowPlacement,\\\\n            'center'\\\\n          ) as tPlacement\\\\n        }\\\\n        messagePlacement={\\\\n          radios(\\\\n            'messagePlacement',\\\\n            radioOptions.messagePlacement,\\\\n            'center'\\\\n          ) as tPlacement\\\\n        }\\\\n        hover={boolean('hover', false)}\\\\n        isWordWrap={boolean('Word Wrap', false)}\\\\n        maxWidth={number('maxWidth', 400)}\\\\n        color={{\\\\n          border: text('color.border', 'primary.dark'),\\\\n          arrow: text('color.arrow', 'primary.main'),\\\\n          background: text('color.background', 'primary.main'),\\\\n          text: text('color.text', 'primary.contrastText')\\\\n        }}\\\\n      >\\\\n        <Button>Hover Me!</Button>\\\\n      </Tooltip>\\\\n    </Box>\\\\n  </ThemeWrapper>\\\\n)\\\\n\\\";\\n// @ts-ignore\\nvar __ADDS_MAP__ = {};\\n// @ts-ignore\\nvar __MAIN_FILE_LOCATION__ = \\\"/Tooltip.stories.tsx\\\";\\n// @ts-ignore\\nvar __MODULE_DEPENDENCIES__ = [];\\n// @ts-ignore\\nvar __LOCAL_DEPENDENCIES__ = {};\\n// @ts-ignore\\nvar __IDS_TO_FRAMEWORKS__ = {};\\n        \\nimport React from 'react'\\n\\nimport {\\n  radios,\\n  withKnobs,\\n  boolean,\\n  text,\\n  number\\n} from '@storybook/addon-knobs'\\n\\nimport { path } from '..'\\nimport Tooltip, { tDirection } from '.'\\nimport Button from '../../atoms/Button'\\nimport Box from '../../atoms/Box'\\n\\nimport ThemeWrapper from '../../../utilities/components/ThemeWrapper'\\nimport { tPlacement } from '../../../utilities/types'\\n\\nexport default {\\n  title: `${path}/Tooltip`,\\n  decorators: [withKnobs],\\n  component: Tooltip,\\n  parameters: {\\\"storySource\\\":{\\\"source\\\":\\\"import React from 'react'\\\\n\\\\nimport {\\\\n  radios,\\\\n  withKnobs,\\\\n  boolean,\\\\n  text,\\\\n  number\\\\n} from '@storybook/addon-knobs'\\\\n\\\\nimport { path } from '..'\\\\nimport Tooltip, { tDirection } from '.'\\\\nimport Button from '../../atoms/Button'\\\\nimport Box from '../../atoms/Box'\\\\n\\\\nimport ThemeWrapper from '../../../utilities/components/ThemeWrapper'\\\\nimport { tPlacement } from '../../../utilities/types'\\\\n\\\\nexport default {\\\\n  title: `${path}/Tooltip`,\\\\n  decorators: [withKnobs],\\\\n  component: Tooltip,\\\\n  parameters: {\\\\n    props: {\\\\n      propTablesExclude: [Box, Button, ThemeWrapper]\\\\n    }\\\\n  }\\\\n}\\\\n\\\\nconst radioOptions = {\\\\n  tooltipDirection: {\\\\n    top: 'top',\\\\n    bottom: 'bottom',\\\\n    right: 'right',\\\\n    left: 'left'\\\\n  },\\\\n  arrowPlacement: { start: 'start', center: 'center', end: 'end' },\\\\n  messagePlacement: { start: 'start', center: 'center', end: 'end' }\\\\n}\\\\n\\\\nexport const TooltipPlayground = () => (\\\\n  <ThemeWrapper>\\\\n    <Box p='3em' bgColor='grey.50' display='flex' justifyContent='center'>\\\\n      <Tooltip\\\\n        message={text(\\\\n          'message',\\\\n          'Customize your view by adding/removing columns. For the best view, a display of 8 columns is recommended.'\\\\n        )}\\\\n        tooltipDirection={\\\\n          radios(\\\\n            'tooltipDirection',\\\\n            radioOptions.tooltipDirection,\\\\n            'top'\\\\n          ) as tDirection\\\\n        }\\\\n        arrowPlacement={\\\\n          radios(\\\\n            'arrowPlacement',\\\\n            radioOptions.arrowPlacement,\\\\n            'center'\\\\n          ) as tPlacement\\\\n        }\\\\n        messagePlacement={\\\\n          radios(\\\\n            'messagePlacement',\\\\n            radioOptions.messagePlacement,\\\\n            'center'\\\\n          ) as tPlacement\\\\n        }\\\\n        hover={boolean('hover', false)}\\\\n        isWordWrap={boolean('Word Wrap', false)}\\\\n        maxWidth={number('maxWidth', 400)}\\\\n        color={{\\\\n          border: text('color.border', 'primary.dark'),\\\\n          arrow: text('color.arrow', 'primary.main'),\\\\n          background: text('color.background', 'primary.main'),\\\\n          text: text('color.text', 'primary.contrastText')\\\\n        }}\\\\n      >\\\\n        <Button>Hover Me!</Button>\\\\n      </Tooltip>\\\\n    </Box>\\\\n  </ThemeWrapper>\\\\n)\\\\n\\\",\\\"locationsMap\\\":{}},\\n    props: {\\n      propTablesExclude: [Box, Button, ThemeWrapper]\\n    }\\n  },}\\n\\nconst radioOptions = {\\n  tooltipDirection: {\\n    top: 'top',\\n    bottom: 'bottom',\\n    right: 'right',\\n    left: 'left'\\n  },\\n  arrowPlacement: { start: 'start', center: 'center', end: 'end' },\\n  messagePlacement: { start: 'start', center: 'center', end: 'end' }\\n}\\n\\nexport const TooltipPlayground = addSourceDecorator(() => (\\n  <ThemeWrapper>\\n    <Box p='3em' bgColor='grey.50' display='flex' justifyContent='center'>\\n      <Tooltip\\n        message={text(\\n          'message',\\n          'Customize your view by adding/removing columns. For the best view, a display of 8 columns is recommended.'\\n        )}\\n        tooltipDirection={\\n          radios(\\n            'tooltipDirection',\\n            radioOptions.tooltipDirection,\\n            'top'\\n          ) as tDirection\\n        }\\n        arrowPlacement={\\n          radios(\\n            'arrowPlacement',\\n            radioOptions.arrowPlacement,\\n            'center'\\n          ) as tPlacement\\n        }\\n        messagePlacement={\\n          radios(\\n            'messagePlacement',\\n            radioOptions.messagePlacement,\\n            'center'\\n          ) as tPlacement\\n        }\\n        hover={boolean('hover', false)}\\n        isWordWrap={boolean('Word Wrap', false)}\\n        maxWidth={number('maxWidth', 400)}\\n        color={{\\n          border: text('color.border', 'primary.dark'),\\n          arrow: text('color.arrow', 'primary.main'),\\n          background: text('color.background', 'primary.main'),\\n          text: text('color.text', 'primary.contrastText')\\n        }}\\n      >\\n        <Button>Hover Me!</Button>\\n      </Tooltip>\\n    </Box>\\n  </ThemeWrapper>\\n), {__STORY__, __ADDS_MAP__,__MAIN_FILE_LOCATION__,__MODULE_DEPENDENCIES__,__LOCAL_DEPENDENCIES__,__SOURCE_PREFIX__,__IDS_TO_FRAMEWORKS__});\",\"locationsMap\":{}},\"storySource\":{\"source\":\"import React from 'react'\\n\\nimport {\\n  radios,\\n  withKnobs,\\n  boolean,\\n  text,\\n  number\\n} from '@storybook/addon-knobs'\\n\\nimport { path } from '..'\\nimport Tooltip, { tDirection } from '.'\\nimport Button from '../../atoms/Button'\\nimport Box from '../../atoms/Box'\\n\\nimport ThemeWrapper from '../../../utilities/components/ThemeWrapper'\\nimport { tPlacement } from '../../../utilities/types'\\n\\nexport default {\\n  title: `${path}/Tooltip`,\\n  decorators: [withKnobs],\\n  component: Tooltip,\\n  parameters: {\\n    props: {\\n      propTablesExclude: [Box, Button, ThemeWrapper]\\n    }\\n  }\\n}\\n\\nconst radioOptions = {\\n  tooltipDirection: {\\n    top: 'top',\\n    bottom: 'bottom',\\n    right: 'right',\\n    left: 'left'\\n  },\\n  arrowPlacement: { start: 'start', center: 'center', end: 'end' },\\n  messagePlacement: { start: 'start', center: 'center', end: 'end' }\\n}\\n\\nexport const TooltipPlayground = () => (\\n  <ThemeWrapper>\\n    <Box p='3em' bgColor='grey.50' display='flex' justifyContent='center'>\\n      <Tooltip\\n        message={text(\\n          'message',\\n          'Customize your view by adding/removing columns. For the best view, a display of 8 columns is recommended.'\\n        )}\\n        tooltipDirection={\\n          radios(\\n            'tooltipDirection',\\n            radioOptions.tooltipDirection,\\n            'top'\\n          ) as tDirection\\n        }\\n        arrowPlacement={\\n          radios(\\n            'arrowPlacement',\\n            radioOptions.arrowPlacement,\\n            'center'\\n          ) as tPlacement\\n        }\\n        messagePlacement={\\n          radios(\\n            'messagePlacement',\\n            radioOptions.messagePlacement,\\n            'center'\\n          ) as tPlacement\\n        }\\n        hover={boolean('hover', false)}\\n        isWordWrap={boolean('Word Wrap', false)}\\n        maxWidth={number('maxWidth', 400)}\\n        color={{\\n          border: text('color.border', 'primary.dark'),\\n          arrow: text('color.arrow', 'primary.main'),\\n          background: text('color.background', 'primary.main'),\\n          text: text('color.text', 'primary.contrastText')\\n        }}\\n      >\\n        <Button>Hover Me!</Button>\\n      </Tooltip>\\n    </Box>\\n  </ThemeWrapper>\\n)\\n\",\"locationsMap\":{}},\n    props: {\n      propTablesExclude: [Box, Button, ThemeWrapper]\n    }\n  },}\n\nconst radioOptions = {\n  tooltipDirection: {\n    top: 'top',\n    bottom: 'bottom',\n    right: 'right',\n    left: 'left'\n  },\n  arrowPlacement: { start: 'start', center: 'center', end: 'end' },\n  messagePlacement: { start: 'start', center: 'center', end: 'end' }\n}\n\nexport const TooltipPlayground = addSourceDecorator(addSourceDecorator(addSourceDecorator(() => (\n  <ThemeWrapper>\n    <Box p='3em' bgColor='grey.50' display='flex' justifyContent='center'>\n      <Tooltip\n        message={text(\n          'message',\n          'Customize your view by adding/removing columns. For the best view, a display of 8 columns is recommended.'\n        )}\n        tooltipDirection={\n          radios(\n            'tooltipDirection',\n            radioOptions.tooltipDirection,\n            'top'\n          ) as tDirection\n        }\n        arrowPlacement={\n          radios(\n            'arrowPlacement',\n            radioOptions.arrowPlacement,\n            'center'\n          ) as tPlacement\n        }\n        messagePlacement={\n          radios(\n            'messagePlacement',\n            radioOptions.messagePlacement,\n            'center'\n          ) as tPlacement\n        }\n        hover={boolean('hover', false)}\n        isWordWrap={boolean('Word Wrap', false)}\n        maxWidth={number('maxWidth', 400)}\n        color={{\n          border: text('color.border', 'primary.dark'),\n          arrow: text('color.arrow', 'primary.main'),\n          background: text('color.background', 'primary.main'),\n          text: text('color.text', 'primary.contrastText')\n        }}\n      >\n        <Button>Hover Me!</Button>\n      </Tooltip>\n    </Box>\n  </ThemeWrapper>\n), {__STORY__, __ADDS_MAP__,__MAIN_FILE_LOCATION__,__MODULE_DEPENDENCIES__,__LOCAL_DEPENDENCIES__,__SOURCE_PREFIX__,__IDS_TO_FRAMEWORKS__}), {__STORY__, __ADDS_MAP__,__MAIN_FILE_LOCATION__,__MODULE_DEPENDENCIES__,__LOCAL_DEPENDENCIES__,__SOURCE_PREFIX__,__IDS_TO_FRAMEWORKS__}), {__STORY__, __ADDS_MAP__,__MAIN_FILE_LOCATION__,__MODULE_DEPENDENCIES__,__LOCAL_DEPENDENCIES__,__SOURCE_PREFIX__,__IDS_TO_FRAMEWORKS__});"],"sourceRoot":""},"metadata":{},"sourceType":"module"}