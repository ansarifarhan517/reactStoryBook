{"ast":null,"code":"import _slicedToArray from \"/Users/farhanansari/Code/ui-library/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/slicedToArray\";\nimport _objectWithoutProperties from \"/Users/farhanansari/Code/ui-library/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/objectWithoutProperties\";\n\nvar _this = this,\n    _jsxFileName = \"/Users/farhanansari/Code/ui-library/src/components/atoms/TextFilter/index.tsx\";\n\nimport React, { useState } from 'react';\nimport { StyledTextFilter, StyledInput, SyledSearch, StyledCross } from './StyledTextFilter';\nimport FontIcon from '../FontIcon';\n\nvar TextFilter = function TextFilter(_ref) {\n  var _ref$onEnter = _ref.onEnter,\n      onEnter = _ref$onEnter === void 0 ? function () {} : _ref$onEnter,\n      _ref$width = _ref.width,\n      width = _ref$width === void 0 ? '100%' : _ref$width,\n      _ref$onClear = _ref.onClear,\n      onClear = _ref$onClear === void 0 ? function () {} : _ref$onClear,\n      _ref$value = _ref.value,\n      propValue = _ref$value === void 0 ? '' : _ref$value,\n      _ref$readOnly = _ref.readOnly,\n      readOnly = _ref$readOnly === void 0 ? false : _ref$readOnly,\n      rest = _objectWithoutProperties(_ref, [\"onEnter\", \"width\", \"onClear\", \"value\", \"readOnly\"]);\n\n  var _useState = useState(propValue),\n      _useState2 = _slicedToArray(_useState, 2),\n      value = _useState2[0],\n      setValue = _useState2[1];\n\n  React.useEffect(function () {\n    setValue(propValue);\n  }, [propValue]);\n\n  var handleSearch = function handleSearch(e) {\n    if (e.charCode === 13) {\n      onEnter(value);\n    }\n  };\n\n  return /*#__PURE__*/React.createElement(StyledTextFilter, {\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 40,\n      columnNumber: 5\n    }\n  }, /*#__PURE__*/React.createElement(SyledSearch, {\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 41,\n      columnNumber: 7\n    }\n  }, /*#__PURE__*/React.createElement(FontIcon, {\n    variant: \"icomoon-search\",\n    size: 10,\n    color: \"text.hint\",\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 42,\n      columnNumber: 9\n    }\n  })), /*#__PURE__*/React.createElement(StyledInput, Object.assign({\n    readOnly: readOnly,\n    onChange: function onChange(e) {\n      return setValue(e.currentTarget.value);\n    },\n    width: width,\n    type: \"text\",\n    inputMode: \"search\",\n    value: value,\n    onKeyPress: function onKeyPress(e) {\n      return handleSearch(e);\n    }\n  }, rest, {\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 44,\n      columnNumber: 7\n    }\n  })), value && /*#__PURE__*/React.createElement(StyledCross, {\n    onClick: function onClick() {\n      setValue('');\n      onEnter('');\n      onClear();\n    },\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 57,\n      columnNumber: 9\n    }\n  }, /*#__PURE__*/React.createElement(FontIcon, {\n    variant: \"close\",\n    size: 9,\n    color: \"text.secondary\",\n    hoverColor: \"black\",\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 64,\n      columnNumber: 11\n    }\n  })));\n};\n\nTextFilter.__docgenInfo = {\n  \"description\": \"\",\n  \"methods\": [],\n  \"displayName\": \"TextFilter\",\n  \"props\": {\n    \"onEnter\": {\n      \"defaultValue\": {\n        \"value\": \"() => {}\",\n        \"computed\": false\n      },\n      \"required\": false,\n      \"tsType\": {\n        \"name\": \"signature\",\n        \"type\": \"function\",\n        \"raw\": \"(value: string) => void\",\n        \"signature\": {\n          \"arguments\": [{\n            \"name\": \"value\",\n            \"type\": {\n              \"name\": \"string\"\n            }\n          }],\n          \"return\": {\n            \"name\": \"void\"\n          }\n        }\n      },\n      \"description\": \"\"\n    },\n    \"width\": {\n      \"defaultValue\": {\n        \"value\": \"'100%'\",\n        \"computed\": false\n      },\n      \"required\": false,\n      \"tsType\": {\n        \"name\": \"string\"\n      },\n      \"description\": \"\"\n    },\n    \"onClear\": {\n      \"defaultValue\": {\n        \"value\": \"() => {}\",\n        \"computed\": false\n      },\n      \"required\": false,\n      \"tsType\": {\n        \"name\": \"signature\",\n        \"type\": \"function\",\n        \"raw\": \"() => void\",\n        \"signature\": {\n          \"arguments\": [],\n          \"return\": {\n            \"name\": \"void\"\n          }\n        }\n      },\n      \"description\": \"\"\n    },\n    \"value\": {\n      \"defaultValue\": {\n        \"value\": \"''\",\n        \"computed\": false\n      },\n      \"required\": false,\n      \"tsType\": {\n        \"name\": \"string\"\n      },\n      \"description\": \"\"\n    },\n    \"readOnly\": {\n      \"defaultValue\": {\n        \"value\": \"false\",\n        \"computed\": false\n      },\n      \"required\": false,\n      \"tsType\": {\n        \"name\": \"boolean\"\n      },\n      \"description\": \"\"\n    },\n    \"type\": {\n      \"required\": false,\n      \"tsType\": {\n        \"name\": \"string\"\n      },\n      \"description\": \"\"\n    },\n    \"onClick\": {\n      \"required\": false,\n      \"tsType\": {\n        \"name\": \"signature\",\n        \"type\": \"function\",\n        \"raw\": \"() => void\",\n        \"signature\": {\n          \"arguments\": [],\n          \"return\": {\n            \"name\": \"void\"\n          }\n        }\n      },\n      \"description\": \"\"\n    }\n  }\n};\nexport default TextFilter;\n\nif (typeof STORYBOOK_REACT_CLASSES !== \"undefined\") {\n  STORYBOOK_REACT_CLASSES[\"src/components/atoms/TextFilter/index.tsx\"] = {\n    name: \"TextFilter\",\n    docgenInfo: TextFilter.__docgenInfo,\n    path: \"src/components/atoms/TextFilter/index.tsx\"\n  };\n}","map":{"version":3,"sources":["/Users/farhanansari/Code/ui-library/src/components/atoms/TextFilter/index.tsx"],"names":["React","useState","StyledTextFilter","StyledInput","SyledSearch","StyledCross","FontIcon","TextFilter","onEnter","width","onClear","value","propValue","readOnly","rest","setValue","useEffect","handleSearch","e","charCode","currentTarget"],"mappings":";;;;;;AAAA,OAAOA,KAAP,IAAgBC,QAAhB,QAAgC,OAAhC;AACA,SACEC,gBADF,EAEEC,WAFF,EAGEC,WAHF,EAIEC,WAJF,QAKO,oBALP;AAMA,OAAOC,QAAP,MAAqB,aAArB;;AAYA,IAAMC,UAAU,GAAG,SAAbA,UAAa,OAOA;AAAA,0BANjBC,OAMiB;AAAA,MANjBA,OAMiB,6BANP,YAAM,CAAE,CAMD;AAAA,wBALjBC,KAKiB;AAAA,MALjBA,KAKiB,2BALT,MAKS;AAAA,0BAJjBC,OAIiB;AAAA,MAJjBA,OAIiB,6BAJP,YAAM,CAAE,CAID;AAAA,wBAHjBC,KAGiB;AAAA,MAHVC,SAGU,2BAHE,EAGF;AAAA,2BAFjBC,QAEiB;AAAA,MAFjBA,QAEiB,8BAFN,KAEM;AAAA,MADdC,IACc;;AAAA,kBACSb,QAAQ,CAASW,SAAT,CADjB;AAAA;AAAA,MACVD,KADU;AAAA,MACHI,QADG;;AAGjBf,EAAAA,KAAK,CAACgB,SAAN,CAAgB,YAAM;AACpBD,IAAAA,QAAQ,CAACH,SAAD,CAAR;AACD,GAFD,EAEG,CAACA,SAAD,CAFH;;AAIA,MAAMK,YAAY,GAAG,SAAfA,YAAe,CAACC,CAAD,EAAkD;AACrE,QAAIA,CAAC,CAACC,QAAF,KAAe,EAAnB,EAAuB;AACrBX,MAAAA,OAAO,CAACG,KAAD,CAAP;AACD;AACF,GAJD;;AAKA,sBACE,oBAAC,gBAAD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,kBACE,oBAAC,WAAD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,kBACE,oBAAC,QAAD;AAAU,IAAA,OAAO,EAAC,gBAAlB;AAAmC,IAAA,IAAI,EAAE,EAAzC;AAA6C,IAAA,KAAK,EAAC,WAAnD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,IADF,CADF,eAIE,oBAAC,WAAD;AACE,IAAA,QAAQ,EAAEE,QADZ;AAEE,IAAA,QAAQ,EAAE,kBAACK,CAAD;AAAA,aACRH,QAAQ,CAACG,CAAC,CAACE,aAAF,CAAgBT,KAAjB,CADA;AAAA,KAFZ;AAKE,IAAA,KAAK,EAAEF,KALT;AAME,IAAA,IAAI,EAAC,MANP;AAOE,IAAA,SAAS,EAAC,QAPZ;AAQE,IAAA,KAAK,EAAEE,KART;AASE,IAAA,UAAU,EAAE,oBAACO,CAAD;AAAA,aAA4CD,YAAY,CAACC,CAAD,CAAxD;AAAA;AATd,KAUMJ,IAVN;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KAJF,EAgBGH,KAAK,iBACJ,oBAAC,WAAD;AACE,IAAA,OAAO,EAAE,mBAAM;AACbI,MAAAA,QAAQ,CAAC,EAAD,CAAR;AACAP,MAAAA,OAAO,CAAC,EAAD,CAAP;AACAE,MAAAA,OAAO;AACR,KALH;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,kBAOE,oBAAC,QAAD;AACE,IAAA,OAAO,EAAC,OADV;AAEE,IAAA,IAAI,EAAE,CAFR;AAGE,IAAA,KAAK,EAAC,gBAHR;AAIE,IAAA,UAAU,EAAC,OAJb;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,IAPF,CAjBJ,CADF;AAmCD,CAtDD;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;AAwDA,eAAeH,UAAf","sourcesContent":["import React, { useState } from 'react'\nimport {\n  StyledTextFilter,\n  StyledInput,\n  SyledSearch,\n  StyledCross\n} from './StyledTextFilter'\nimport FontIcon from '../FontIcon'\n\nexport interface ITextFilter extends React.HTMLAttributes<HTMLInputElement> {\n  onEnter?: (value: string) => void\n  width?: string\n  onClear?: () => void\n  type?: string\n  onClick?: () => void\n  value?: string\n  readOnly?: boolean\n}\n\nconst TextFilter = ({\n  onEnter = () => {},\n  width = '100%',\n  onClear = () => {},\n  value: propValue = '',\n  readOnly = false,\n  ...rest\n}: ITextFilter) => {\n  const [value, setValue] = useState<string>(propValue)\n\n  React.useEffect(() => {\n    setValue(propValue)\n  }, [propValue])\n\n  const handleSearch = (e: React.KeyboardEvent<HTMLDivElement>): void => {\n    if (e.charCode === 13) {\n      onEnter(value)\n    }\n  }\n  return (\n    <StyledTextFilter>\n      <SyledSearch>\n        <FontIcon variant='icomoon-search' size={10} color='text.hint' />\n      </SyledSearch>\n      <StyledInput\n        readOnly={readOnly}\n        onChange={(e: React.FormEvent<HTMLInputElement>) =>\n          setValue(e.currentTarget.value)\n        }\n        width={width}\n        type='text'\n        inputMode='search'\n        value={value}\n        onKeyPress={(e: React.KeyboardEvent<HTMLDivElement>) => handleSearch(e)}\n        {...rest}\n      />\n      {value && (\n        <StyledCross\n          onClick={() => {\n            setValue('')\n            onEnter('')\n            onClear()\n          }}\n        >\n          <FontIcon\n            variant='close'\n            size={9}\n            color='text.secondary'\n            hoverColor='black'\n          />\n        </StyledCross>\n      )}\n    </StyledTextFilter>\n  )\n}\n\nexport default TextFilter\n"]},"metadata":{},"sourceType":"module"}