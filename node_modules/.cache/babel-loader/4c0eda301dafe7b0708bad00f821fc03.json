{"ast":null,"code":"import _slicedToArray from \"/Users/farhanansari/Desktop/CODE/PrxProject/untitled folder/reactStoryBook/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/slicedToArray\";\nimport _taggedTemplateLiteral from \"/Users/farhanansari/Desktop/CODE/PrxProject/untitled folder/reactStoryBook/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/taggedTemplateLiteral\";\n\nvar _this = this,\n    _jsxFileName = \"/Users/farhanansari/Desktop/CODE/PrxProject/untitled folder/reactStoryBook/src/components/molecules/Tooltip/index.tsx\";\n\nfunction _templateObject3() {\n  var data = _taggedTemplateLiteral([\"\\n  position: relative;\\n  z-index: \", \";\\n\"]);\n\n  _templateObject3 = function _templateObject3() {\n    return data;\n  };\n\n  return data;\n}\n\nfunction _templateObject2() {\n  var data = _taggedTemplateLiteral([\"\\n  /*\\n    content: '';\\n    position: absolute;\\n    top: 50%;\\n    right: 100%;\\n    margin-top: -\", \"px;\\n    border-width: \", \"px;\\n    border-style: solid;\\n    \", \"\\n  */\\n\\n  content: '';\\n  position: absolute;\\n  width: 10px;\\n  height: 10px;\\n  z-index: 1;\\n  \", \"\\n  transform: rotate(45deg);\\n\"]);\n\n  _templateObject2 = function _templateObject2() {\n    return data;\n  };\n\n  return data;\n}\n\nfunction _templateObject() {\n  var data = _taggedTemplateLiteral([\"\\n  z-index: 2;\\n  word-wrap: break-word;\\n  max-width: \", \";\\n  width: max-content;\\n  padding: 10px;\\n  font-size: 12px;\\n  box-shadow: 0px 5px 25px -10px #000;\\n\"]);\n\n  _templateObject = function _templateObject() {\n    return data;\n  };\n\n  return data;\n}\n\nimport React, { useState, useEffect } from 'react';\nimport styled from 'styled-components';\nimport Typography from '../../atoms/Typography';\nimport Position from '../Position';\nimport { colorFinder } from '../../../utilities/mixins';\nvar arrowSize = 5;\nvar MessageContainer = styled(Position)(_templateObject(), function (_ref) {\n  var maxWidth = _ref.maxWidth;\n  return maxWidth ? \"\".concat(maxWidth, \"px\") : '300px';\n});\nvar Arrow = styled.div(_templateObject2(), arrowSize, arrowSize, function (_ref2) {\n  var variant = _ref2.variant,\n      color = _ref2.color,\n      theme = _ref2.theme;\n  var borderColor = colorFinder(color, theme);\n  var borderColorCSS = '';\n\n  switch (variant) {\n    case 'top':\n      borderColorCSS = \"\".concat(borderColor, \" transparent transparent transparent\");\n      break;\n\n    case 'bottom':\n      borderColorCSS = \"transparent transparent \".concat(borderColor, \" transparent\");\n      break;\n\n    case 'right':\n      borderColorCSS = \"transparent \".concat(borderColor, \" transparent transparent\");\n      break;\n\n    case 'left':\n      borderColorCSS = \"transparent transparent transparent \".concat(borderColor);\n      break;\n  }\n\n  return \"border-color: \".concat(borderColorCSS, \";\");\n}, function (_ref3) {\n  var variant = _ref3.variant,\n      color = _ref3.color,\n      theme = _ref3.theme;\n  var colorHex = colorFinder(color, theme);\n  var css = '';\n\n  switch (variant) {\n    case 'top':\n      css = \"\\n        bottom: 3px;\\n        right: 100%;\\n        background-color: \".concat(colorHex, \";\\n        \");\n      break;\n\n    case 'bottom':\n      css = \"\\n        top: 3px;\\n        right: 100%;\\n        background-color: \".concat(colorHex, \";\\n        \");\n      break;\n\n    case 'right':\n      css = \"\\n        top: -5px;\\n        right: -7px;\\n        background-color: \".concat(colorHex, \";\\n        \");\n      break;\n\n    case 'left':\n      css = \"\\n        top: -5px;\\n        right: 7px;\\n        background-color: \".concat(colorHex, \";\\n        \");\n      break;\n  }\n\n  return css;\n});\nvar TooltipContainer = styled.div(_templateObject3(), function (_ref4) {\n  var _theme$zIndex;\n\n  var theme = _ref4.theme;\n  return theme === null || theme === void 0 ? void 0 : (_theme$zIndex = theme.zIndex) === null || _theme$zIndex === void 0 ? void 0 : _theme$zIndex.tooltip;\n});\nvar arrowPositionMap = {\n  top: {\n    start: {\n      top: '0px',\n      left: \"\".concat(arrowSize, \"px\")\n    },\n    center: {\n      top: '0px',\n      left: \"calc(50% + \".concat(arrowSize, \"px)\")\n    },\n    end: {\n      top: '0px',\n      right: \"-\".concat(arrowSize, \"px\")\n    }\n  },\n  bottom: {\n    start: {\n      bottom: '0px',\n      left: \"\".concat(arrowSize, \"px\")\n    },\n    center: {\n      bottom: '0px',\n      left: \"calc(50% + \".concat(arrowSize, \"px)\")\n    },\n    end: {\n      bottom: '0px',\n      right: \"-\".concat(arrowSize, \"px\")\n    }\n  },\n  left: {\n    start: {\n      top: '0%',\n      left: \"\".concat(arrowSize, \"px\")\n    },\n    center: {\n      top: '50%',\n      left: \"\".concat(arrowSize, \"px\")\n    },\n    end: {\n      top: '100%',\n      left: \"\".concat(arrowSize, \"px\")\n    }\n  },\n  right: {\n    start: {\n      top: '0%',\n      right: \"-\".concat(arrowSize, \"px\")\n    },\n    center: {\n      top: '50%',\n      right: \"-\".concat(arrowSize, \"px\")\n    },\n    end: {\n      top: '100%',\n      right: \"-\".concat(arrowSize, \"px\")\n    }\n  }\n};\n\nvar messagePositionMap = function messagePositionMap(left, tooltipDir, messagePlace) {\n  var positionObject = {\n    top: {\n      start: {\n        bottom: 'calc(100% + ' + arrowSize + 'px' + ')',\n        left: \"calc(50% - \".concat(arrowSize * 2 + left, \"px)\")\n      },\n      center: {\n        bottom: 'calc(100% + ' + arrowSize + 'px' + ')',\n        left: \"calc(50% + \".concat(left / 2 + (left / 2 ? 20 : 0), \"px)\"),\n        style: {\n          transform: 'translateX(-50%)'\n        }\n      },\n      end: {\n        bottom: 'calc(100% + ' + arrowSize + 'px' + ')',\n        right: \"calc(50% - \".concat(arrowSize * 2 + left, \"px)\")\n      }\n    },\n    bottom: {\n      start: {\n        top: 'calc(100% + ' + arrowSize + 'px' + ')',\n        left: \"calc(50% - \".concat(arrowSize * 2 + left, \"px)\")\n      },\n      center: {\n        top: 'calc(100% + ' + arrowSize + 'px' + ')',\n        left: \"calc(50% + \".concat(left / 2 + (left / 2 ? 20 : 0), \"px)\"),\n        style: {\n          transform: 'translateX(-50%)'\n        }\n      },\n      end: {\n        top: 'calc(100% + ' + arrowSize + 'px' + ')',\n        right: \"calc(50% - \".concat(arrowSize * 2 + left, \"px)\")\n      }\n    },\n    left: {\n      start: {\n        top: '-13px',\n        right: \"calc(100% + \".concat(5 + left, \"px)\")\n      },\n      center: {\n        top: '-13px',\n        // style: { transform: 'translate(-100%, -50%)' },\n        right: \"calc(100% + \".concat(5 + left, \"px)\")\n      },\n      end: {\n        top: '-13px',\n        // style: { transform: 'translateX(-100%)' },\n        right: \"calc(100% + \".concat(5 + left, \"px)\")\n      }\n    },\n    right: {\n      start: {\n        top: '-13px',\n        // style: { transform: 'translateX(-100%)' },\n        left: \"calc(100% + \".concat(5 + left, \"px)\")\n      },\n      center: {\n        top: '-13px',\n        // style: { transform: 'translate(-100%, -50%)' },\n        left: \"calc(100% + \".concat(5 + left, \"px)\")\n      },\n      end: {\n        top: '-13px',\n        // style: { transform: 'translateX(-100%)' },\n        left: \"calc(100% + \".concat(5 + left, \"px)\")\n      }\n    }\n  };\n  return positionObject[tooltipDir][messagePlace];\n};\n\nvar Tooltip = function Tooltip(_ref5) {\n  var _ref5$hide = _ref5.hide,\n      hide = _ref5$hide === void 0 ? false : _ref5$hide,\n      _ref5$message = _ref5.message,\n      message = _ref5$message === void 0 ? '' : _ref5$message,\n      children = _ref5.children,\n      _ref5$tooltipDirectio = _ref5.tooltipDirection,\n      tooltipDirection = _ref5$tooltipDirectio === void 0 ? 'bottom' : _ref5$tooltipDirectio,\n      _ref5$arrowPlacement = _ref5.arrowPlacement,\n      arrowPlacement = _ref5$arrowPlacement === void 0 ? 'center' : _ref5$arrowPlacement,\n      _ref5$messagePlacemen = _ref5.messagePlacement,\n      messagePlacement = _ref5$messagePlacemen === void 0 ? 'center' : _ref5$messagePlacemen,\n      _ref5$align = _ref5.align,\n      align = _ref5$align === void 0 ? 'center' : _ref5$align,\n      _ref5$color = _ref5.color,\n      color = _ref5$color === void 0 ? {\n    background: 'primary.main',\n    border: 'primary.dark',\n    text: 'primary.contrastText',\n    arrow: 'primary.main'\n  } : _ref5$color,\n      maxWidth = _ref5.maxWidth,\n      _ref5$hover = _ref5.hover,\n      hover = _ref5$hover === void 0 ? false : _ref5$hover,\n      boundLeft = _ref5.boundLeft,\n      _ref5$isWordWrap = _ref5.isWordWrap,\n      isWordWrap = _ref5$isWordWrap === void 0 ? false : _ref5$isWordWrap;\n\n  var _useState = useState(!hover),\n      _useState2 = _slicedToArray(_useState, 2),\n      showTooltip = _useState2[0],\n      setShowTooltip = _useState2[1];\n\n  var tooltipContainerRef = React.useRef(null);\n  var tooltipContainerRef1 = React.useRef(null);\n\n  var calculatBounds = function calculatBounds(tooltipDir, messagePlace) {\n    var _tooltipContainerRef$, _tooltipContainerRef;\n\n    var leftBound = 0;\n    var refPosition = tooltipContainerRef === null || tooltipContainerRef === void 0 ? void 0 : (_tooltipContainerRef$ = tooltipContainerRef.current) === null || _tooltipContainerRef$ === void 0 ? void 0 : _tooltipContainerRef$.getBoundingClientRect();\n    var ref1Position = tooltipContainerRef1 === null || tooltipContainerRef1 === void 0 ? void 0 : (_tooltipContainerRef = tooltipContainerRef1.current) === null || _tooltipContainerRef === void 0 ? void 0 : _tooltipContainerRef.getBoundingClientRect();\n\n    if (refPosition && (refPosition === null || refPosition === void 0 ? void 0 : refPosition.left) < 300 && ref1Position && (ref1Position === null || ref1Position === void 0 ? void 0 : ref1Position.left) < 0) {\n      leftBound = Math.abs(ref1Position === null || ref1Position === void 0 ? void 0 : ref1Position.left) + 15;\n    } else if (boundLeft && ref1Position && (ref1Position === null || ref1Position === void 0 ? void 0 : ref1Position.left) < boundLeft) {\n      leftBound = boundLeft - Math.abs(ref1Position === null || ref1Position === void 0 ? void 0 : ref1Position.left) + 15;\n    }\n\n    return messagePositionMap(leftBound, tooltipDir, messagePlace);\n  };\n\n  var tooltipContainer = showTooltip && !hide && /*#__PURE__*/React.createElement(TooltipContainer, {\n    \"data-testid\": \"tooltipContainer\",\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 303,\n      columnNumber: 5\n    }\n  }, /*#__PURE__*/React.createElement(MessageContainer, Object.assign({\n    type: \"absolute\"\n  }, calculatBounds(tooltipDirection, messagePlacement), {\n    px: \"10px\",\n    py: \"5px\",\n    border: 1,\n    borderRadius: 3,\n    borderColor: color.border,\n    bgColor: color.background,\n    maxWidth: maxWidth,\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 304,\n      columnNumber: 7\n    }\n  }), /*#__PURE__*/React.createElement(Typography, {\n    variant: isWordWrap ? 'tooltipWithWordWrap' : 'tooltip',\n    color: color.text,\n    align: align,\n    \"data-testid\": \"tooltipTitle\",\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 315,\n      columnNumber: 9\n    }\n  }, message)), /*#__PURE__*/React.createElement(Position, Object.assign({\n    type: \"absolute\"\n  }, arrowPositionMap[tooltipDirection][arrowPlacement], {\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 324,\n      columnNumber: 7\n    }\n  }), /*#__PURE__*/React.createElement(Arrow, {\n    variant: tooltipDirection,\n    color: color.arrow,\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 328,\n      columnNumber: 9\n    }\n  })));\n  useEffect(function () {\n    setShowTooltip(!hover);\n  }, [hover]);\n  return /*#__PURE__*/React.createElement(React.Fragment, null, /*#__PURE__*/React.createElement(Position, {\n    type: \"relative\",\n    display: tooltipDirection === 'left' || tooltipDirection === 'right' ? 'flex' : 'inline-block',\n    style: {\n      maxWidth: '100%'\n    },\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 339,\n      columnNumber: 7\n    }\n  }, (tooltipDirection === 'top' || tooltipDirection === 'left') && tooltipContainer, /*#__PURE__*/React.createElement(\"div\", {\n    \"data-testid\": \"children\",\n    onMouseOver: function onMouseOver() {\n      return hover && setShowTooltip(true);\n    },\n    onMouseOut: function onMouseOut() {\n      return hover && setShowTooltip(false);\n    },\n    ref: tooltipContainerRef,\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 350,\n      columnNumber: 9\n    }\n  }, children), (tooltipDirection === 'bottom' || tooltipDirection === 'right') && tooltipContainer), /*#__PURE__*/React.createElement(\"div\", {\n    style: {\n      position: 'absolute',\n      visibility: 'hidden',\n      height: 'auto',\n      width: 'auto',\n      whiteSpace: 'normal',\n      right: 0,\n      padding: 10\n    },\n    id: \"textMeasureWrap\",\n    ref: tooltipContainerRef1,\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 361,\n      columnNumber: 7\n    }\n  }, /*#__PURE__*/React.createElement(Typography, {\n    variant: \"tooltip\",\n    color: color.text,\n    align: \"center\",\n    \"data-testid\": \"tooltipTitle\",\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 374,\n      columnNumber: 9\n    }\n  }, message)));\n};\n\nexport default Tooltip;","map":{"version":3,"sources":["/Users/farhanansari/Desktop/CODE/PrxProject/untitled folder/reactStoryBook/src/components/molecules/Tooltip/index.tsx"],"names":["React","useState","useEffect","styled","Typography","Position","colorFinder","arrowSize","MessageContainer","maxWidth","Arrow","div","variant","color","theme","borderColor","borderColorCSS","colorHex","css","TooltipContainer","zIndex","tooltip","arrowPositionMap","top","start","left","center","end","right","bottom","messagePositionMap","tooltipDir","messagePlace","positionObject","style","transform","Tooltip","hide","message","children","tooltipDirection","arrowPlacement","messagePlacement","align","background","border","text","arrow","hover","boundLeft","isWordWrap","showTooltip","setShowTooltip","tooltipContainerRef","useRef","tooltipContainerRef1","calculatBounds","leftBound","refPosition","current","getBoundingClientRect","ref1Position","Math","abs","tooltipContainer","position","visibility","height","width","whiteSpace","padding"],"mappings":"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","sourcesContent":["import React, { useState, useEffect } from 'react'\nimport styled from 'styled-components'\nimport Typography from '../../atoms/Typography'\nimport Position, { PositionProps } from '../Position'\nimport { colorFinder } from '../../../utilities/mixins'\nimport { IColorProps } from '../../../utilities/types'\n\nexport type tDirection = 'top' | 'bottom' | 'right' | 'left'\nexport interface ITooltipProps {\n  hide?: boolean\n  message?: string | JSX.Element | React.ReactNode\n  children: any\n  arrowPlacement?: 'start' | 'center' | 'end'\n  messagePlacement?: 'start' | 'center' | 'end'\n  tooltipDirection?: 'top' | 'bottom' | 'right' | 'left'\n  align?: 'right' | 'left' | 'center' | undefined\n  hover?: boolean\n  maxWidth?: number\n  color?: {\n    arrow: string\n    text: string\n    background: string\n    border: string\n  }\n  boundLeft?: number\n  isWordWrap?: boolean\n}\n\ninterface ArrowProps extends IColorProps {\n  variant: 'top' | 'bottom' | 'right' | 'left'\n}\n\nconst arrowSize = 5\n\nexport interface IMessageContainer extends PositionProps {\n  maxWidth?: number\n}\n\nconst MessageContainer = styled(Position)<IMessageContainer>`\n  z-index: 2;\n  word-wrap: break-word;\n  max-width: ${({ maxWidth }) => (maxWidth ? `${maxWidth}px` : '300px')};\n  width: max-content;\n  padding: 10px;\n  font-size: 12px;\n  box-shadow: 0px 5px 25px -10px #000;\n`\nconst Arrow = styled.div<ArrowProps>`\n  /*\n    content: '';\n    position: absolute;\n    top: 50%;\n    right: 100%;\n    margin-top: -${arrowSize}px;\n    border-width: ${arrowSize}px;\n    border-style: solid;\n    ${({ variant, color, theme }) => {\n    const borderColor = colorFinder(color, theme)\n    let borderColorCSS = ''\n    switch (variant) {\n      case 'top':\n        borderColorCSS = `${borderColor} transparent transparent transparent`\n        break\n      case 'bottom':\n        borderColorCSS = `transparent transparent ${borderColor} transparent`\n        break\n      case 'right':\n        borderColorCSS = `transparent ${borderColor} transparent transparent`\n        break\n      case 'left':\n        borderColorCSS = `transparent transparent transparent ${borderColor}`\n        break\n    }\n\n    return `border-color: ${borderColorCSS};`\n  }}\n  */\n\n  content: '';\n  position: absolute;\n  width: 10px;\n  height: 10px;\n  z-index: 1;\n  ${({ variant, color, theme }) => {\n    const colorHex = colorFinder(color, theme)\n    let css = ''\n    switch (variant) {\n      case 'top':\n        css = `\n        bottom: 3px;\n        right: 100%;\n        background-color: ${colorHex};\n        `\n        break\n      case 'bottom':\n        css = `\n        top: 3px;\n        right: 100%;\n        background-color: ${colorHex};\n        `\n        break\n      case 'right':\n        css = `\n        top: -5px;\n        right: -7px;\n        background-color: ${colorHex};\n        `\n        break\n      case 'left':\n        css = `\n        top: -5px;\n        right: 7px;\n        background-color: ${colorHex};\n        `\n        break\n    }\n\n    return css\n  }}\n  transform: rotate(45deg);\n`\n\nconst TooltipContainer = styled.div`\n  position: relative;\n  z-index: ${({ theme }) => theme?.zIndex?.tooltip};\n`\n\nconst arrowPositionMap = {\n  top: {\n    start: {\n      top: '0px',\n      left: `${arrowSize}px`\n    },\n    center: {\n      top: '0px',\n      left: `calc(50% + ${arrowSize}px)`\n    },\n    end: {\n      top: '0px',\n      right: `-${arrowSize}px`\n    }\n  },\n  bottom: {\n    start: {\n      bottom: '0px',\n      left: `${arrowSize}px`\n    },\n    center: {\n      bottom: '0px',\n      left: `calc(50% + ${arrowSize}px)`\n    },\n    end: {\n      bottom: '0px',\n      right: `-${arrowSize}px`\n    }\n  },\n  left: {\n    start: {\n      top: '0%',\n      left: `${arrowSize}px`\n    },\n    center: {\n      top: '50%',\n      left: `${arrowSize}px`\n    },\n    end: {\n      top: '100%',\n      left: `${arrowSize}px`\n    }\n  },\n  right: {\n    start: {\n      top: '0%',\n      right: `-${arrowSize}px`\n    },\n    center: {\n      top: '50%',\n      right: `-${arrowSize}px`\n    },\n    end: {\n      top: '100%',\n      right: `-${arrowSize}px`\n    }\n  }\n}\n\nconst messagePositionMap = (\n  left: number,\n  tooltipDir: string,\n  messagePlace: string\n) => {\n  const positionObject = {\n    top: {\n      start: {\n        bottom: 'calc(100% + ' + arrowSize + 'px' + ')',\n        left: `calc(50% - ${arrowSize * 2 + left}px)`\n      },\n      center: {\n        bottom: 'calc(100% + ' + arrowSize + 'px' + ')',\n        left: `calc(50% + ${left / 2 + (left / 2 ? 20 : 0)}px)`,\n        style: { transform: 'translateX(-50%)' }\n      },\n      end: {\n        bottom: 'calc(100% + ' + arrowSize + 'px' + ')',\n        right: `calc(50% - ${arrowSize * 2 + left}px)`\n      }\n    },\n    bottom: {\n      start: {\n        top: 'calc(100% + ' + arrowSize + 'px' + ')',\n        left: `calc(50% - ${arrowSize * 2 + left}px)`\n      },\n      center: {\n        top: 'calc(100% + ' + arrowSize + 'px' + ')',\n        left: `calc(50% + ${left / 2 + (left / 2 ? 20 : 0)}px)`,\n        style: { transform: 'translateX(-50%)' }\n      },\n      end: {\n        top: 'calc(100% + ' + arrowSize + 'px' + ')',\n        right: `calc(50% - ${arrowSize * 2 + left}px)`\n      }\n    },\n    left: {\n      start: {\n        top: '-13px',\n        right: `calc(100% + ${5 + left}px)`\n      },\n      center: {\n        top: '-13px',\n        // style: { transform: 'translate(-100%, -50%)' },\n        right: `calc(100% + ${5 + left}px)`\n      },\n      end: {\n        top: '-13px',\n        // style: { transform: 'translateX(-100%)' },\n        right: `calc(100% + ${5 + left}px)`\n      }\n    },\n    right: {\n      start: {\n        top: '-13px',\n        // style: { transform: 'translateX(-100%)' },\n        left: `calc(100% + ${5 + left}px)`\n      },\n      center: {\n        top: '-13px',\n        // style: { transform: 'translate(-100%, -50%)' },\n        left: `calc(100% + ${5 + left}px)`\n      },\n      end: {\n        top: '-13px',\n        // style: { transform: 'translateX(-100%)' },\n        left: `calc(100% + ${5 + left}px)`\n      }\n    }\n  }\n  return positionObject[tooltipDir][messagePlace]\n}\n\nconst Tooltip = ({\n  hide = false,\n  message = '',\n  children,\n  tooltipDirection = 'bottom',\n  arrowPlacement = 'center',\n  messagePlacement = 'center',\n  align = 'center',\n  color = {\n    background: 'primary.main',\n    border: 'primary.dark',\n    text: 'primary.contrastText',\n    arrow: 'primary.main'\n  },\n  maxWidth,\n  hover = false,\n  boundLeft,\n  isWordWrap = false\n}: ITooltipProps) => {\n  const [showTooltip, setShowTooltip] = useState(!hover)\n\n  const tooltipContainerRef = React.useRef<HTMLDivElement>(null)\n  const tooltipContainerRef1 = React.useRef<HTMLDivElement>(null)\n\n  const calculatBounds = (tooltipDir: string, messagePlace: string) => {\n    let leftBound = 0\n    const refPosition = tooltipContainerRef?.current?.getBoundingClientRect()\n    const ref1Position = tooltipContainerRef1?.current?.getBoundingClientRect()\n    if (\n      refPosition &&\n      refPosition?.left < 300 &&\n      ref1Position &&\n      ref1Position?.left < 0\n    ) {\n      leftBound = Math.abs(ref1Position?.left) + 15\n    } else if (boundLeft && ref1Position && ref1Position?.left < boundLeft) {\n      leftBound = boundLeft - Math.abs(ref1Position?.left) + 15\n    }\n\n    return messagePositionMap(leftBound, tooltipDir, messagePlace)\n  }\n\n  const tooltipContainer = showTooltip && !hide && (\n    <TooltipContainer data-testid='tooltipContainer'>\n      <MessageContainer\n        type='absolute'\n        {...calculatBounds(tooltipDirection, messagePlacement)}\n        px='10px'\n        py='5px'\n        border={1}\n        borderRadius={3}\n        borderColor={color.border}\n        bgColor={color.background}\n        maxWidth={maxWidth}\n      >\n        <Typography\n          variant={isWordWrap ? 'tooltipWithWordWrap' : 'tooltip'}\n          color={color.text}\n          align={align}\n          data-testid='tooltipTitle'\n        >\n          {message}\n        </Typography>\n      </MessageContainer>\n      <Position\n        type='absolute'\n        {...arrowPositionMap[tooltipDirection][arrowPlacement]}\n      >\n        <Arrow variant={tooltipDirection} color={color.arrow} />\n      </Position>\n    </TooltipContainer>\n  )\n\n  useEffect(() => {\n    setShowTooltip(!hover)\n  }, [hover])\n\n  return (\n    <>\n      <Position\n        type='relative'\n        display={\n          tooltipDirection === 'left' || tooltipDirection === 'right'\n            ? 'flex'\n            : 'inline-block'\n        }\n        style={{ maxWidth: '100%' }}\n      >\n        {(tooltipDirection === 'top' || tooltipDirection === 'left') &&\n          tooltipContainer}\n        <div\n          data-testid='children'\n          onMouseOver={() => hover && setShowTooltip(true)}\n          onMouseOut={() => hover && setShowTooltip(false)}\n          ref={tooltipContainerRef}\n        >\n          {children}\n        </div>\n        {(tooltipDirection === 'bottom' || tooltipDirection === 'right') &&\n          tooltipContainer}\n      </Position>\n      <div\n        style={{\n          position: 'absolute',\n          visibility: 'hidden',\n          height: 'auto',\n          width: 'auto',\n          whiteSpace: 'normal',\n          right: 0,\n          padding: 10\n        }}\n        id='textMeasureWrap'\n        ref={tooltipContainerRef1}\n      >\n        <Typography\n          variant='tooltip'\n          color={color.text}\n          align='center'\n          data-testid='tooltipTitle'\n        >\n          {message}\n        </Typography>\n      </div>\n    </>\n  )\n}\n\nexport default Tooltip\n"]},"metadata":{},"sourceType":"module"}