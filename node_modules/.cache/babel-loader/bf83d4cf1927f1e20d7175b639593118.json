{"ast":null,"code":"import _slicedToArray from \"/Users/farhanansari/Desktop/CODE/PrxProject/untitled folder/reactStoryBook/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/slicedToArray\";\n\nvar _this = this,\n    _jsxFileName = \"/Users/farhanansari/Desktop/CODE/PrxProject/untitled folder/reactStoryBook/src/components/organisms/ChartCardList/PieChartCardList/index.tsx\";\n\nimport React, { useState, useEffect } from 'react';\nimport PieChartCard from '../../../molecules/ChartCards/PieChartCard';\nimport Grid from '../../../atoms/Grid';\n\nvar PieChartCardList = function PieChartCardList(_ref) {\n  var orderDetails = _ref.orderDetails,\n      _ref$height = _ref.height,\n      height = _ref$height === void 0 ? 150 : _ref$height,\n      _ref$isClickable = _ref.isClickable,\n      isClickable = _ref$isClickable === void 0 ? true : _ref$isClickable,\n      onClick = _ref.onClick,\n      onLegendClick = _ref.onLegendClick,\n      onPieClick = _ref.onPieClick;\n\n  var _useState = useState(orderDetails),\n      _useState2 = _slicedToArray(_useState, 2),\n      _odrerDetails = _useState2[0],\n      setOrderDetails = _useState2[1];\n\n  var _useState3 = useState(undefined),\n      _useState4 = _slicedToArray(_useState3, 2),\n      selectedCard = _useState4[0],\n      setSelectedCard = _useState4[1];\n\n  useEffect(function () {\n    setOrderDetails(orderDetails);\n  }, [orderDetails]);\n  /* eslint-disable */\n\n  var handleCardClick = React.useCallback(function (option) {\n    if ((selectedCard === null || selectedCard === void 0 ? void 0 : selectedCard.title) !== option.title) {\n      var details = Array.from(Object.create(_odrerDetails));\n      details.forEach(function (orderOption) {\n        if (orderOption.title === option.title) {\n          orderOption.selected = true;\n          setSelectedCard(orderOption); // selected card information can be sent out with below click event\n\n          onClick && onClick(orderOption);\n        } else {\n          orderOption.selected = false;\n        }\n      });\n      setOrderDetails(details);\n    }\n  }, [selectedCard === null || selectedCard === void 0 ? void 0 : selectedCard.title]);\n  return /*#__PURE__*/React.createElement(Grid, {\n    lg: 4,\n    md: 2,\n    xl: 4,\n    xs: 12,\n    container: true,\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 55,\n      columnNumber: 5\n    }\n  }, _odrerDetails.map(function (option) {\n    return /*#__PURE__*/React.createElement(PieChartCard, {\n      key: \"\".concat(option === null || option === void 0 ? void 0 : option.title, \"-\").concat(option === null || option === void 0 ? void 0 : option.total),\n      orderDetails: option,\n      height: height,\n      isSelected: option.selected,\n      onClick: function onClick() {\n        return isClickable ? handleCardClick(option) : null;\n      },\n      onLegendClick: onLegendClick ? onLegendClick : null,\n      onPieClick: onPieClick ? onPieClick : null,\n      __self: _this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 58,\n        columnNumber: 11\n      }\n    });\n  }));\n};\n\nexport default PieChartCardList;","map":{"version":3,"sources":["/Users/farhanansari/Desktop/CODE/PrxProject/untitled folder/reactStoryBook/src/components/organisms/ChartCardList/PieChartCardList/index.tsx"],"names":["React","useState","useEffect","PieChartCard","Grid","PieChartCardList","orderDetails","height","isClickable","onClick","onLegendClick","onPieClick","_odrerDetails","setOrderDetails","undefined","selectedCard","setSelectedCard","handleCardClick","useCallback","option","title","details","Array","from","Object","create","forEach","orderOption","selected","map","total"],"mappings":"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","sourcesContent":["import React, { useState, useEffect } from 'react'\nimport PieChartCard, {\n  IOrderDetails\n} from '../../../molecules/ChartCards/PieChartCard'\nimport Grid from '../../../atoms/Grid'\nimport { IDetails } from '../../../atoms/Charts/interface'\n\nexport interface IPieChartCard {\n  orderDetails: Array<IOrderDetails>\n  height: number\n  isClickable?: boolean\n  onClick?: (selectedCardDetails: IOrderDetails) => void\n  onLegendClick?: (legend: IDetails) => void\n  onPieClick?: (legend: any) => void\n}\n\nconst PieChartCardList = ({\n  orderDetails,\n  height = 150,\n  isClickable = true,\n  onClick,\n  onLegendClick,\n  onPieClick\n}: IPieChartCard) => {\n  const [_odrerDetails, setOrderDetails] = useState(orderDetails)\n  const [selectedCard, setSelectedCard] = useState<IOrderDetails | undefined>(\n    undefined\n  )\n  useEffect(() => {\n    setOrderDetails(orderDetails)\n  }, [orderDetails])\n  /* eslint-disable */\n  const handleCardClick = React.useCallback(\n    (option: IOrderDetails) => {\n      if (selectedCard?.title !== option.title) {\n        const details: any = Array.from(Object.create(_odrerDetails))\n        details.forEach((orderOption: IOrderDetails) => {\n          if (orderOption.title === option.title) {\n            orderOption.selected = true\n            setSelectedCard(orderOption)\n            // selected card information can be sent out with below click event\n            onClick && onClick(orderOption)\n          } else {\n            orderOption.selected = false\n          }\n        })\n        setOrderDetails(details)\n        \n      }\n    },\n    [selectedCard?.title]\n  )\n\n  return (\n    <Grid lg={4} md={2} xl={4} xs={12} container>\n      {_odrerDetails.map((option: IOrderDetails) => {\n        return (\n          <PieChartCard\n            key={`${option?.title}-${option?.total}`}\n            orderDetails={option}\n            height={height}\n            isSelected={option.selected}\n            onClick={() => (isClickable ? handleCardClick(option) : null)}\n            onLegendClick={onLegendClick ? onLegendClick : null}\n            onPieClick= {onPieClick?onPieClick:null}\n          />\n        )\n      })}\n    </Grid>\n  )\n}\n\nexport default PieChartCardList\n"]},"metadata":{},"sourceType":"module"}