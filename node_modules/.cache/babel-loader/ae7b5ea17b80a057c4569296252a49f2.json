{"ast":null,"code":"import _toConsumableArray from \"/Users/farhanansari/Desktop/CODE/PrxProject/untitled folder/reactStoryBook/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/toConsumableArray\";\n// Create a random ID\nexport var generateUEID = function generateUEID() {\n  var first = Math.random() * 46656 | 0;\n  var second = Math.random() * 46656 | 0;\n  return ('000' + (first === null || first === void 0 ? void 0 : first.toString(36))).slice(-3) + ('000' + (second === null || second === void 0 ? void 0 : second.toString(36))).slice(-3);\n};\nexport var getObject = function getObject(value, array, comparingString) {\n  if (array && value) {\n    var index = array === null || array === void 0 ? void 0 : array.findIndex(function (x) {\n      return x[comparingString] === value;\n    });\n    return index !== -1 ? array[index] : false;\n  }\n\n  return ' ';\n};\nexport var createNewArray = function createNewArray(arr, keysValueToBeAdded, excludingValue) {\n  var a = arr.map(function (f) {\n    return f[keysValueToBeAdded] !== excludingValue ? f[keysValueToBeAdded] : '';\n  });\n  return a;\n};\nexport var arrayEquals = function arrayEquals(a, b) {\n  return Array.isArray(a) && Array.isArray(b) && a.length === b.length && a.every(function (val, index) {\n    return val === b[index];\n  });\n};\nexport var removeObjectFromArray = function removeObjectFromArray(comparingValue, array, comparingKey) {\n  var temp = _toConsumableArray(array);\n\n  var index = temp.findIndex(function (x) {\n    return x[comparingKey] === comparingValue;\n  });\n  temp.splice(index, 1);\n  return temp;\n};\nexport var isElementPresent = function isElementPresent(value, arr) {\n  return arr.indexOf(value) !== -1;\n};\nexport var createSavedFiterDropdown = function createSavedFiterDropdown(chipsArray) {\n  var tempArray = chipsArray.map(function (c) {\n    return {\n      id: c.id,\n      label: c.label,\n      condition: c.condition,\n      value: c.id\n    };\n  });\n  return tempArray;\n};\nexport var getString = function getString(value) {\n  if (Array.isArray(value)) {\n    var temp = '';\n    temp += value.map(function (m) {\n      return m.value;\n    });\n    return temp;\n  } else if (typeof value === 'object') {\n    return value.value;\n  } else {\n    return value === null || value === void 0 ? void 0 : value.toString();\n  }\n};\nexport var PrepareFilterData = function PrepareFilterData(filterConditions, HSetColumnData, type, chips) {\n  var fConditions = [];\n  filterConditions === null || filterConditions === void 0 ? void 0 : filterConditions.forEach(function (f) {\n    var _f$operationalOptions, _f$operationalOptions2, _f$operationalOptions3, _f$operationalOptions4, _f$operationalOptions5, _f$thirdElement, _f$thirdElement6;\n\n    var operationObject = ((_f$operationalOptions = f.operationalOptions) === null || _f$operationalOptions === void 0 ? void 0 : _f$operationalOptions.options) !== null && typeof (f === null || f === void 0 ? void 0 : (_f$operationalOptions2 = f.operationalOptions) === null || _f$operationalOptions2 === void 0 ? void 0 : _f$operationalOptions2.value) !== 'object' ? getObject(f === null || f === void 0 ? void 0 : (_f$operationalOptions3 = f.operationalOptions) === null || _f$operationalOptions3 === void 0 ? void 0 : _f$operationalOptions3.value, f === null || f === void 0 ? void 0 : (_f$operationalOptions4 = f.operationalOptions) === null || _f$operationalOptions4 === void 0 ? void 0 : _f$operationalOptions4.options, 'labelKey') : f === null || f === void 0 ? void 0 : (_f$operationalOptions5 = f.operationalOptions) === null || _f$operationalOptions5 === void 0 ? void 0 : _f$operationalOptions5.value; // convert date, multiselect and dropdown object to appropriate format\n\n    var FilterData;\n    var filterDataLabel;\n\n    if (typeof (f === null || f === void 0 ? void 0 : (_f$thirdElement = f.thirdElement) === null || _f$thirdElement === void 0 ? void 0 : _f$thirdElement.value) === 'string') {\n      var _f$thirdElement2, _f$thirdElement3;\n\n      FilterData = f === null || f === void 0 ? void 0 : (_f$thirdElement2 = f.thirdElement) === null || _f$thirdElement2 === void 0 ? void 0 : _f$thirdElement2.value;\n      filterDataLabel = f === null || f === void 0 ? void 0 : (_f$thirdElement3 = f.thirdElement) === null || _f$thirdElement3 === void 0 ? void 0 : _f$thirdElement3.label;\n    } else if (f.fieldType === 'date' || f.fieldType === 'calendar') {\n      var _f$thirdElement4, _f$thirdElement4$valu, _f$thirdElement5, _f$thirdElement5$valu;\n\n      FilterData = (f === null || f === void 0 ? void 0 : (_f$thirdElement4 = f.thirdElement) === null || _f$thirdElement4 === void 0 ? void 0 : (_f$thirdElement4$valu = _f$thirdElement4.value[0]) === null || _f$thirdElement4$valu === void 0 ? void 0 : _f$thirdElement4$valu.getTime()) + ',' + (f === null || f === void 0 ? void 0 : (_f$thirdElement5 = f.thirdElement) === null || _f$thirdElement5 === void 0 ? void 0 : (_f$thirdElement5$valu = _f$thirdElement5.value[1]) === null || _f$thirdElement5$valu === void 0 ? void 0 : _f$thirdElement5$valu.getTime());\n    } else if (Array.isArray(f === null || f === void 0 ? void 0 : (_f$thirdElement6 = f.thirdElement) === null || _f$thirdElement6 === void 0 ? void 0 : _f$thirdElement6.value)) {\n      var _f$thirdElement7, _f$thirdElement7$valu;\n\n      f === null || f === void 0 ? void 0 : (_f$thirdElement7 = f.thirdElement) === null || _f$thirdElement7 === void 0 ? void 0 : (_f$thirdElement7$valu = _f$thirdElement7.value) === null || _f$thirdElement7$valu === void 0 ? void 0 : _f$thirdElement7$valu.map(function (m) {\n        FilterData = FilterData ? FilterData + ',' + m.value : m.value;\n        filterDataLabel = filterDataLabel ? filterDataLabel + ',' + m.label : m.label;\n      });\n    } else if (f.fieldType === 'select' || f.fieldType === 'dropdown') {\n      var _f$thirdElement8, _f$thirdElement9, _f$thirdElement9$valu, _f$thirdElement10, _f$thirdElement11, _f$thirdElement12, _f$thirdElement13;\n\n      FilterData = typeof (f === null || f === void 0 ? void 0 : (_f$thirdElement8 = f.thirdElement) === null || _f$thirdElement8 === void 0 ? void 0 : _f$thirdElement8.value) === 'object' ? f === null || f === void 0 ? void 0 : (_f$thirdElement9 = f.thirdElement) === null || _f$thirdElement9 === void 0 ? void 0 : (_f$thirdElement9$valu = _f$thirdElement9.value) === null || _f$thirdElement9$valu === void 0 ? void 0 : _f$thirdElement9$valu.value : f === null || f === void 0 ? void 0 : (_f$thirdElement10 = f.thirdElement) === null || _f$thirdElement10 === void 0 ? void 0 : _f$thirdElement10.value;\n      filterDataLabel = typeof (f === null || f === void 0 ? void 0 : (_f$thirdElement11 = f.thirdElement) === null || _f$thirdElement11 === void 0 ? void 0 : _f$thirdElement11.label) === 'object' ? f === null || f === void 0 ? void 0 : (_f$thirdElement12 = f.thirdElement) === null || _f$thirdElement12 === void 0 ? void 0 : _f$thirdElement12.label.label : f === null || f === void 0 ? void 0 : (_f$thirdElement13 = f.thirdElement) === null || _f$thirdElement13 === void 0 ? void 0 : _f$thirdElement13.label;\n    } else {\n      var _f$thirdElement14, _f$thirdElement15;\n\n      FilterData = f === null || f === void 0 ? void 0 : (_f$thirdElement14 = f.thirdElement) === null || _f$thirdElement14 === void 0 ? void 0 : _f$thirdElement14.value;\n      filterDataLabel = f === null || f === void 0 ? void 0 : (_f$thirdElement15 = f.thirdElement) === null || _f$thirdElement15 === void 0 ? void 0 : _f$thirdElement15.label;\n    }\n\n    if ((f === null || f === void 0 ? void 0 : f.dropdownOptions) !== 'savedFilters') {\n      var _HSetColumnData$f$dro;\n\n      fConditions.push({\n        fieldId: f === null || f === void 0 ? void 0 : f.dropdownOptions,\n        operationSymbol: operationObject === null || operationObject === void 0 ? void 0 : operationObject.operationSymbol,\n        operationLabelKey: operationObject === null || operationObject === void 0 ? void 0 : operationObject.labelKey,\n        fieldLabelKey: (operationObject === null || operationObject === void 0 ? void 0 : operationObject.labelKey) === 'savedFilterIs' ? 'savedFilterIs' : (_HSetColumnData$f$dro = HSetColumnData[f === null || f === void 0 ? void 0 : f.dropdownOptions]) === null || _HSetColumnData$f$dro === void 0 ? void 0 : _HSetColumnData$f$dro.label,\n        labelValue: operationObject === null || operationObject === void 0 ? void 0 : operationObject.label,\n        filterData: FilterData,\n        filterDataLabel: filterDataLabel\n      });\n    } else {\n      // debugger\n      var filters = chips === null || chips === void 0 ? void 0 : chips.find(function (chip) {\n        var _FilterData;\n\n        return (chip === null || chip === void 0 ? void 0 : chip.id) === ((_FilterData = FilterData) === null || _FilterData === void 0 ? void 0 : _FilterData.id);\n      });\n\n      if (filters) {\n        var _filters$filters;\n\n        filters === null || filters === void 0 ? void 0 : (_filters$filters = filters.filters) === null || _filters$filters === void 0 ? void 0 : _filters$filters.forEach(function (f) {\n          fConditions.push(f);\n        });\n      }\n    }\n  });\n\n  if (type === 'apply') {\n    return fConditions;\n  }\n\n  return fConditions;\n};\n/*********************************************************/\n// handle Validations\n\n/*********************************************************/\n\nexport var validateFiltersData = function validateFiltersData(chipsArray, filterData, filterConditions) {\n  var _filterData$filterNam, _filterData$filterNam2;\n\n  // check whether all conditions are nonempty\n  var flag = filterConditions === null || filterConditions === void 0 ? void 0 : filterConditions.every(function (m) {\n    return m.dropdownOptions !== '' && (m === null || m === void 0 ? void 0 : m.operationalOptions.value) !== '' && (m === null || m === void 0 ? void 0 : m.thirdElement.type) !== '' && (m === null || m === void 0 ? void 0 : m.thirdElement.type) === 'none' ? true : (m === null || m === void 0 ? void 0 : m.thirdElement.value) !== '';\n  });\n  var message = !flag ? 'Incomplete Information' : ''; // check whether filterName is not empty\n\n  flag = flag && (filterData === null || filterData === void 0 ? void 0 : (_filterData$filterNam = filterData.filterName) === null || _filterData$filterNam === void 0 ? void 0 : _filterData$filterNam.length) !== 0;\n  message = (filterData === null || filterData === void 0 ? void 0 : (_filterData$filterNam2 = filterData.filterName) === null || _filterData$filterNam2 === void 0 ? void 0 : _filterData$filterNam2.length) === 0 ? 'Incomplete Information' : message; // check whether filterName does not repeat for new filters\n\n  if (flag && filterData.id === '') {\n    flag = flag && (chipsArray === null || chipsArray === void 0 ? void 0 : chipsArray.every(function (m) {\n      return m.label !== filterData.filterName;\n    }));\n    message = \"Filter with the name '\".concat(filterData.filterName, \"' already exists\");\n  }\n\n  if (filterConditions && (filterConditions === null || filterConditions === void 0 ? void 0 : filterConditions.length) < 1) {\n    return {\n      flag: false,\n      message: 'Incomplete Information'\n    };\n  }\n\n  return {\n    flag: flag,\n    message: message\n  };\n};\nexport var validateFilterData = function validateFilterData(chipsArray, filterData) {\n  var _filterData$filterNam3, _filterData$filterNam4;\n\n  var flag = (filterData === null || filterData === void 0 ? void 0 : (_filterData$filterNam3 = filterData.filterName) === null || _filterData$filterNam3 === void 0 ? void 0 : _filterData$filterNam3.length) !== 0;\n  var message = !flag ? 'Incomplete Information' : ''; // check whether filterName is not empty\n\n  message = (filterData === null || filterData === void 0 ? void 0 : (_filterData$filterNam4 = filterData.filterName) === null || _filterData$filterNam4 === void 0 ? void 0 : _filterData$filterNam4.length) === 0 ? 'Incomplete Information' : message; // check whether filterName does not repeat for new filters\n\n  if (flag && filterData.id === '') {\n    flag = flag && (chipsArray === null || chipsArray === void 0 ? void 0 : chipsArray.every(function (m) {\n      return m.filterName !== filterData.filterName;\n    }));\n    message = !flag ? \"Filter with the name '\".concat(filterData.filterName, \"' already exists\") : '';\n  }\n\n  return {\n    flag: flag,\n    message: message\n  };\n};\n/*********************************************************/\n// handle Filter conditions validation\n\n/*********************************************************/\n\nexport var validateFilterConditions = function validateFilterConditions(filterConditions) {\n  // check whether all conditions are nonempty\n  var flag = filterConditions === null || filterConditions === void 0 ? void 0 : filterConditions.every(function (m) {\n    return m.dropdownOptions !== '' && (m === null || m === void 0 ? void 0 : m.operationalOptions.value) !== '' && (m === null || m === void 0 ? void 0 : m.thirdElement.type) !== '' && (m === null || m === void 0 ? void 0 : m.thirdElement.type) === 'none' ? true : (m === null || m === void 0 ? void 0 : m.thirdElement.value) !== '';\n  });\n  var message = !flag ? 'Incomplete Information' : ''; // // check whether filterName is not empty\n  // flag = flag && filterData?.filterName?.length !== 0\n  // message =\n  //   filterData?.filterName?.length === 0 ? 'Incomplete Information' : message\n  // // check whether filterName does not repeat for new filters\n  // if (flag && filterData.id === '') {\n  //   flag =\n  //     flag && chipsArray?.every((m: any) => m.label !== filterData.filterName)\n  //   message = `Filter with the name '${filterData.filterName}' already exists`\n  // }\n\n  if (filterConditions && (filterConditions === null || filterConditions === void 0 ? void 0 : filterConditions.length) < 1) {\n    return {\n      flag: false,\n      message: 'Incomplete Information'\n    };\n  }\n\n  return {\n    flag: flag,\n    message: message\n  };\n};\n/*********************************************************/\n// handle SORT Data validation\n\n/*********************************************************/\n\nexport var validateHalfSortCriteria = function validateHalfSortCriteria(SortCriteriaData) {\n  var sortflag = SortCriteriaData.fieldId || SortCriteriaData.fieldLabelKey || SortCriteriaData.operationSymbol || SortCriteriaData.operationLabelKey;\n  return !!sortflag;\n};\nexport var validateFullSortCriteria = function validateFullSortCriteria(SortCriteriaData) {\n  var sortflag = SortCriteriaData.fieldId && SortCriteriaData.fieldLabelKey && SortCriteriaData.operationSymbol && SortCriteriaData.operationLabelKey;\n  return !!sortflag;\n};\nexport var validateSort = function validateSort(sort) {\n  var _sort$sortOrder, _sort$sortOrder2;\n\n  var sortFlag = sort && sort.columnName && (sort === null || sort === void 0 ? void 0 : (_sort$sortOrder = sort.sortOrder) === null || _sort$sortOrder === void 0 ? void 0 : _sort$sortOrder.label) && (sort === null || sort === void 0 ? void 0 : (_sort$sortOrder2 = sort.sortOrder) === null || _sort$sortOrder2 === void 0 ? void 0 : _sort$sortOrder2.value);\n  return !!sortFlag;\n};\nexport var passValidationTest = function passValidationTest(filterData, filterConditions, chipsArray, HSetColumnStructure) {\n  var _filterData$sortable, _filterData$sortable2, _filterData$sortable3, _HSetColumnStructure$, _filterData$sortable4, _filterData$sortable5;\n\n  var filters = PrepareFilterData(filterConditions, HSetColumnStructure);\n  var columnName = typeof (filterData === null || filterData === void 0 ? void 0 : (_filterData$sortable = filterData.sortable) === null || _filterData$sortable === void 0 ? void 0 : _filterData$sortable.columnName) === 'object' ? filterData === null || filterData === void 0 ? void 0 : (_filterData$sortable2 = filterData.sortable) === null || _filterData$sortable2 === void 0 ? void 0 : _filterData$sortable2.columnName.id : filterData === null || filterData === void 0 ? void 0 : (_filterData$sortable3 = filterData.sortable) === null || _filterData$sortable3 === void 0 ? void 0 : _filterData$sortable3.columnName;\n  var temp = {\n    id: filterData.id,\n    filterName: filterData.filterName || ' ',\n    filters: filters,\n    isFavourite: filterData.isFavourite,\n    favouriteSections: filterData.favouriteSections,\n    operationLogic: filterData === null || filterData === void 0 ? void 0 : filterData.filterMasterCondition,\n    sortCriteria: [{\n      fieldId: columnName,\n      fieldLabelKey: (_HSetColumnStructure$ = HSetColumnStructure[columnName]) === null || _HSetColumnStructure$ === void 0 ? void 0 : _HSetColumnStructure$.label,\n      operationLabelKey: filterData === null || filterData === void 0 ? void 0 : (_filterData$sortable4 = filterData.sortable) === null || _filterData$sortable4 === void 0 ? void 0 : _filterData$sortable4.sortOrder.value,\n      operationSymbol: filterData === null || filterData === void 0 ? void 0 : (_filterData$sortable5 = filterData.sortable) === null || _filterData$sortable5 === void 0 ? void 0 : _filterData$sortable5.sortOrder.value\n    }]\n  };\n  var sortFlag = validateFullSortCriteria(temp === null || temp === void 0 ? void 0 : temp.sortCriteria[0]);\n\n  if (validateHalfSortCriteria(temp === null || temp === void 0 ? void 0 : temp.sortCriteria[0]) && !sortFlag) {\n    return {\n      flag: false,\n      message: 'Incomplete Information'\n    };\n  } else {\n    !sortFlag && (temp === null || temp === void 0 ? true : delete temp.sortCriteria);\n\n    var _validateFilterData = validateFilterData(chipsArray, filterData),\n        flag = _validateFilterData.flag,\n        message = _validateFilterData.message;\n\n    var _validateFilterCondit = validateFilterConditions(filterConditions),\n        Cflag = _validateFilterCondit.flag,\n        Cmessage = _validateFilterCondit.message;\n\n    return {\n      flag: flag,\n      conditionFlag: Cflag,\n      message: message,\n      Conditionmessage: Cmessage\n    };\n  }\n};","map":{"version":3,"sources":["/Users/farhanansari/Desktop/CODE/PrxProject/untitled folder/reactStoryBook/src/components/organisms/AdvancedFilter/components/Utils/index.tsx"],"names":["generateUEID","first","Math","random","second","toString","slice","getObject","value","array","comparingString","index","findIndex","x","createNewArray","arr","keysValueToBeAdded","excludingValue","a","map","f","arrayEquals","b","Array","isArray","length","every","val","removeObjectFromArray","comparingValue","comparingKey","temp","splice","isElementPresent","indexOf","createSavedFiterDropdown","chipsArray","tempArray","c","id","label","condition","getString","m","PrepareFilterData","filterConditions","HSetColumnData","type","chips","fConditions","forEach","operationObject","operationalOptions","options","FilterData","filterDataLabel","thirdElement","fieldType","getTime","dropdownOptions","push","fieldId","operationSymbol","operationLabelKey","labelKey","fieldLabelKey","labelValue","filterData","filters","find","chip","validateFiltersData","flag","message","filterName","validateFilterData","validateFilterConditions","validateHalfSortCriteria","SortCriteriaData","sortflag","validateFullSortCriteria","validateSort","sort","sortFlag","columnName","sortOrder","passValidationTest","HSetColumnStructure","sortable","isFavourite","favouriteSections","operationLogic","filterMasterCondition","sortCriteria","Cflag","Cmessage","conditionFlag","Conditionmessage"],"mappings":";AAAA;AACA,OAAO,IAAMA,YAAY,GAAG,SAAfA,YAAe,GAAM;AAChC,MAAMC,KAAa,GAAIC,IAAI,CAACC,MAAL,KAAgB,KAAjB,GAA0B,CAAhD;AACA,MAAMC,MAAc,GAAIF,IAAI,CAACC,MAAL,KAAgB,KAAjB,GAA0B,CAAjD;AACA,SACE,CAAC,SAAQF,KAAR,aAAQA,KAAR,uBAAQA,KAAK,CAAEI,QAAP,CAAgB,EAAhB,CAAR,CAAD,EAA8BC,KAA9B,CAAoC,CAAC,CAArC,IACA,CAAC,SAAQF,MAAR,aAAQA,MAAR,uBAAQA,MAAM,CAAEC,QAAR,CAAiB,EAAjB,CAAR,CAAD,EAA+BC,KAA/B,CAAqC,CAAC,CAAtC,CAFF;AAID,CAPM;AASP,OAAO,IAAMC,SAAS,GAAG,SAAZA,SAAY,CACvBC,KADuB,EAEvBC,KAFuB,EAGvBC,eAHuB,EAIpB;AACH,MAAID,KAAK,IAAID,KAAb,EAAoB;AAClB,QAAMG,KAAK,GAAGF,KAAH,aAAGA,KAAH,uBAAGA,KAAK,CAAEG,SAAP,CAAiB,UAACC,CAAD;AAAA,aAAYA,CAAC,CAACH,eAAD,CAAD,KAAuBF,KAAnC;AAAA,KAAjB,CAAd;AACA,WAAOG,KAAK,KAAK,CAAC,CAAX,GAAeF,KAAK,CAACE,KAAD,CAApB,GAA8B,KAArC;AACD;;AACD,SAAO,GAAP;AACD,CAVM;AAYP,OAAO,IAAMG,cAAc,GAAG,SAAjBA,cAAiB,CAC5BC,GAD4B,EAE5BC,kBAF4B,EAG5BC,cAH4B,EAIzB;AACH,MAAMC,CAAC,GAAGH,GAAG,CAACI,GAAJ,CAAQ,UAACC,CAAD,EAAO;AACvB,WAAOA,CAAC,CAACJ,kBAAD,CAAD,KAA0BC,cAA1B,GAA2CG,CAAC,CAACJ,kBAAD,CAA5C,GAAmE,EAA1E;AACD,GAFS,CAAV;AAGA,SAAOE,CAAP;AACD,CATM;AAWP,OAAO,IAAMG,WAAW,GAAG,SAAdA,WAAc,CAACH,CAAD,EAASI,CAAT,EAAoB;AAC7C,SACEC,KAAK,CAACC,OAAN,CAAcN,CAAd,KACAK,KAAK,CAACC,OAAN,CAAcF,CAAd,CADA,IAEAJ,CAAC,CAACO,MAAF,KAAaH,CAAC,CAACG,MAFf,IAGAP,CAAC,CAACQ,KAAF,CAAQ,UAACC,GAAD,EAAMhB,KAAN;AAAA,WAAgBgB,GAAG,KAAKL,CAAC,CAACX,KAAD,CAAzB;AAAA,GAAR,CAJF;AAMD,CAPM;AASP,OAAO,IAAMiB,qBAAqB,GAAG,SAAxBA,qBAAwB,CACnCC,cADmC,EAEnCpB,KAFmC,EAGnCqB,YAHmC,EAIhC;AACH,MAAMC,IAAI,sBAAOtB,KAAP,CAAV;;AACA,MAAME,KAAK,GAAGoB,IAAI,CAACnB,SAAL,CAAe,UAACC,CAAD;AAAA,WAAYA,CAAC,CAACiB,YAAD,CAAD,KAAoBD,cAAhC;AAAA,GAAf,CAAd;AACAE,EAAAA,IAAI,CAACC,MAAL,CAAYrB,KAAZ,EAAmB,CAAnB;AACA,SAAOoB,IAAP;AACD,CATM;AAWP,OAAO,IAAME,gBAAgB,GAAG,SAAnBA,gBAAmB,CAACzB,KAAD,EAAgBO,GAAhB,EAAkC;AAChE,SAAOA,GAAG,CAACmB,OAAJ,CAAY1B,KAAZ,MAAuB,CAAC,CAA/B;AACD,CAFM;AAIP,OAAO,IAAM2B,wBAAwB,GAAG,SAA3BA,wBAA2B,CAACC,UAAD,EAAuB;AAC7D,MAAMC,SAAgB,GAAGD,UAAU,CAACjB,GAAX,CAAe,UAACmB,CAAD,EAAO;AAC7C,WAAO;AACLC,MAAAA,EAAE,EAAED,CAAC,CAACC,EADD;AAELC,MAAAA,KAAK,EAAEF,CAAC,CAACE,KAFJ;AAGLC,MAAAA,SAAS,EAAEH,CAAC,CAACG,SAHR;AAILjC,MAAAA,KAAK,EAAE8B,CAAC,CAACC;AAJJ,KAAP;AAMD,GAPwB,CAAzB;AAQA,SAAOF,SAAP;AACD,CAVM;AAYP,OAAO,IAAMK,SAAS,GAAG,SAAZA,SAAY,CAAClC,KAAD,EAAgB;AACvC,MAAIe,KAAK,CAACC,OAAN,CAAchB,KAAd,CAAJ,EAA0B;AACxB,QAAIuB,IAAI,GAAG,EAAX;AACAA,IAAAA,IAAI,IAAIvB,KAAK,CAACW,GAAN,CAAU,UAACwB,CAAD;AAAA,aAAOA,CAAC,CAACnC,KAAT;AAAA,KAAV,CAAR;AACA,WAAOuB,IAAP;AACD,GAJD,MAIO,IAAI,OAAOvB,KAAP,KAAiB,QAArB,EAA+B;AACpC,WAAOA,KAAK,CAACA,KAAb;AACD,GAFM,MAEA;AACL,WAAOA,KAAP,aAAOA,KAAP,uBAAOA,KAAK,CAAEH,QAAP,EAAP;AACD;AACF,CAVM;AAYP,OAAO,IAAMuC,iBAAiB,GAAG,SAApBA,iBAAoB,CAC/BC,gBAD+B,EAE/BC,cAF+B,EAG/BC,IAH+B,EAI/BC,KAJ+B,EAK5B;AACH,MAAMC,WAAkB,GAAG,EAA3B;AAEAJ,EAAAA,gBAAgB,SAAhB,IAAAA,gBAAgB,WAAhB,YAAAA,gBAAgB,CAAEK,OAAlB,CAA0B,UAAC9B,CAAD,EAAY;AAAA;;AACpC,QAAM+B,eAAe,GACnB,0BAAA/B,CAAC,CAACgC,kBAAF,gFAAsBC,OAAtB,MAAkC,IAAlC,IACA,QAAOjC,CAAP,aAAOA,CAAP,iDAAOA,CAAC,CAAEgC,kBAAV,2DAAO,uBAAuB5C,KAA9B,MAAwC,QADxC,GAEID,SAAS,CACPa,CADO,aACPA,CADO,iDACPA,CAAC,CAAEgC,kBADI,2DACP,uBAAuB5C,KADhB,EAEPY,CAFO,aAEPA,CAFO,iDAEPA,CAAC,CAAEgC,kBAFI,2DAEP,uBAAuBC,OAFhB,EAGP,UAHO,CAFb,GAOIjC,CAPJ,aAOIA,CAPJ,iDAOIA,CAAC,CAAEgC,kBAPP,2DAOI,uBAAuB5C,KAR7B,CADoC,CAWpC;;AACA,QAAI8C,UAAJ;AACA,QAAIC,eAAJ;;AACA,QAAI,QAAOnC,CAAP,aAAOA,CAAP,0CAAOA,CAAC,CAAEoC,YAAV,oDAAO,gBAAiBhD,KAAxB,MAAkC,QAAtC,EAAgD;AAAA;;AAC9C8C,MAAAA,UAAU,GAAGlC,CAAH,aAAGA,CAAH,2CAAGA,CAAC,CAAEoC,YAAN,qDAAG,iBAAiBhD,KAA9B;AACA+C,MAAAA,eAAe,GAAGnC,CAAH,aAAGA,CAAH,2CAAGA,CAAC,CAAEoC,YAAN,qDAAG,iBAAiBhB,KAAnC;AACD,KAHD,MAGO,IAAIpB,CAAC,CAACqC,SAAF,KAAgB,MAAhB,IAA0BrC,CAAC,CAACqC,SAAF,KAAgB,UAA9C,EAA0D;AAAA;;AAC/DH,MAAAA,UAAU,GACR,CAAAlC,CAAC,SAAD,IAAAA,CAAC,WAAD,gCAAAA,CAAC,CAAEoC,YAAH,+FAAiBhD,KAAjB,CAAuB,CAAvB,iFAA2BkD,OAA3B,MACA,GADA,IAEAtC,CAFA,aAEAA,CAFA,2CAEAA,CAAC,CAAEoC,YAFH,8EAEA,iBAAiBhD,KAAjB,CAAuB,CAAvB,CAFA,0DAEA,sBAA2BkD,OAA3B,EAFA,CADF;AAID,KALM,MAKA,IAAInC,KAAK,CAACC,OAAN,CAAcJ,CAAd,aAAcA,CAAd,2CAAcA,CAAC,CAAEoC,YAAjB,qDAAc,iBAAiBhD,KAA/B,CAAJ,EAA2C;AAAA;;AAChDY,MAAAA,CAAC,SAAD,IAAAA,CAAC,WAAD,gCAAAA,CAAC,CAAEoC,YAAH,+FAAiBhD,KAAjB,gFAAwBW,GAAxB,CACE,UAACwB,CAAD,EAAW;AACTW,QAAAA,UAAU,GAAGA,UAAU,GAAGA,UAAU,GAAG,GAAb,GAAmBX,CAAC,CAACnC,KAAxB,GAAgCmC,CAAC,CAACnC,KAAzD;AACA+C,QAAAA,eAAe,GAAGA,eAAe,GAAGA,eAAe,GAAG,GAAlB,GAAwBZ,CAAC,CAACH,KAA7B,GAAqCG,CAAC,CAACH,KAAxE;AACD,OAJH;AAMD,KAPM,MAOA,IAAIpB,CAAC,CAACqC,SAAF,KAAgB,QAAhB,IAA4BrC,CAAC,CAACqC,SAAF,KAAgB,UAAhD,EAA4D;AAAA;;AACjEH,MAAAA,UAAU,GACR,QAAOlC,CAAP,aAAOA,CAAP,2CAAOA,CAAC,CAAEoC,YAAV,qDAAO,iBAAiBhD,KAAxB,MAAkC,QAAlC,GACIY,CADJ,aACIA,CADJ,2CACIA,CAAC,CAAEoC,YADP,8EACI,iBAAiBhD,KADrB,0DACI,sBAAwBA,KAD5B,GAEIY,CAFJ,aAEIA,CAFJ,4CAEIA,CAAC,CAAEoC,YAFP,sDAEI,kBAAiBhD,KAHvB;AAIE+C,MAAAA,eAAe,GAAG,QAAOnC,CAAP,aAAOA,CAAP,4CAAOA,CAAC,CAAEoC,YAAV,sDAAO,kBAAiBhB,KAAxB,MAAkC,QAAlC,GACdpB,CADc,aACdA,CADc,4CACdA,CAAC,CAAEoC,YADW,sDACd,kBAAiBhB,KAAjB,CAAuBA,KADT,GACiBpB,CADjB,aACiBA,CADjB,4CACiBA,CAAC,CAAEoC,YADpB,sDACiB,kBAAiBhB,KADpD;AAEH,KAPM,MAOA;AAAA;;AACLc,MAAAA,UAAU,GAAGlC,CAAH,aAAGA,CAAH,4CAAGA,CAAC,CAAEoC,YAAN,sDAAG,kBAAiBhD,KAA9B;AACA+C,MAAAA,eAAe,GAAGnC,CAAH,aAAGA,CAAH,4CAAGA,CAAC,CAAEoC,YAAN,sDAAG,kBAAiBhB,KAAnC;AACD;;AAED,QAAI,CAAApB,CAAC,SAAD,IAAAA,CAAC,WAAD,YAAAA,CAAC,CAAEuC,eAAH,MAAuB,cAA3B,EAA2C;AAAA;;AACzCV,MAAAA,WAAW,CAACW,IAAZ,CAAiB;AACfC,QAAAA,OAAO,EAAEzC,CAAF,aAAEA,CAAF,uBAAEA,CAAC,CAAEuC,eADG;AAEfG,QAAAA,eAAe,EAAEX,eAAF,aAAEA,eAAF,uBAAEA,eAAe,CAAEW,eAFnB;AAGfC,QAAAA,iBAAiB,EAAEZ,eAAF,aAAEA,eAAF,uBAAEA,eAAe,CAAEa,QAHrB;AAIfC,QAAAA,aAAa,EACX,CAAAd,eAAe,SAAf,IAAAA,eAAe,WAAf,YAAAA,eAAe,CAAEa,QAAjB,MAA8B,eAA9B,GACI,eADJ,4BAEIlB,cAAc,CAAC1B,CAAD,aAACA,CAAD,uBAACA,CAAC,CAAEuC,eAAJ,CAFlB,0DAEI,sBAAoCnB,KAP3B;AAQf0B,QAAAA,UAAU,EAAEf,eAAF,aAAEA,eAAF,uBAAEA,eAAe,CAAEX,KARd;AASf2B,QAAAA,UAAU,EAAEb,UATG;AAUfC,QAAAA,eAAe,EAAEA;AAVF,OAAjB;AAYD,KAbD,MAaO;AACL;AACA,UAAMa,OAAO,GAAGpB,KAAH,aAAGA,KAAH,uBAAGA,KAAK,CAAEqB,IAAP,CAAY,UAACC,IAAD;AAAA;;AAAA,eAAe,CAAAA,IAAI,SAAJ,IAAAA,IAAI,WAAJ,YAAAA,IAAI,CAAE/B,EAAN,sBAAae,UAAb,gDAAa,YAAYf,EAAzB,CAAf;AAAA,OAAZ,CAAhB;;AAEA,UAAI6B,OAAJ,EAAa;AAAA;;AACXA,QAAAA,OAAO,SAAP,IAAAA,OAAO,WAAP,gCAAAA,OAAO,CAAEA,OAAT,sEAAkBlB,OAAlB,CAA0B,UAAC9B,CAAD,EAAY;AACpC6B,UAAAA,WAAW,CAACW,IAAZ,CAAiBxC,CAAjB;AACD,SAFD;AAGD;AACF;AACF,GAhED;;AAkEA,MAAI2B,IAAI,KAAK,OAAb,EAAsB;AACpB,WAAOE,WAAP;AACD;;AACD,SAAOA,WAAP;AACD,CA9EM;AAgFP;AACA;;AACA;;AACA,OAAO,IAAMsB,mBAAmB,GAAG,SAAtBA,mBAAsB,CACjCnC,UADiC,EAEjC+B,UAFiC,EAGjCtB,gBAHiC,EAI9B;AAAA;;AACH;AACA,MAAI2B,IAAa,GAAG3B,gBAAH,aAAGA,gBAAH,uBAAGA,gBAAgB,CAAEnB,KAAlB,CAAwB,UAACiB,CAAD,EAAY;AACtD,WAAOA,CAAC,CAACgB,eAAF,KAAsB,EAAtB,IACL,CAAAhB,CAAC,SAAD,IAAAA,CAAC,WAAD,YAAAA,CAAC,CAAES,kBAAH,CAAsB5C,KAAtB,MAAgC,EAD3B,IAEL,CAAAmC,CAAC,SAAD,IAAAA,CAAC,WAAD,YAAAA,CAAC,CAAEa,YAAH,CAAgBT,IAAhB,MAAyB,EAFpB,IAGL,CAAAJ,CAAC,SAAD,IAAAA,CAAC,WAAD,YAAAA,CAAC,CAAEa,YAAH,CAAgBT,IAAhB,MAAyB,MAHpB,GAIH,IAJG,GAKH,CAAAJ,CAAC,SAAD,IAAAA,CAAC,WAAD,YAAAA,CAAC,CAAEa,YAAH,CAAgBhD,KAAhB,MAA0B,EAL9B;AAMD,GAPmB,CAApB;AASA,MAAIiE,OAAe,GAAG,CAACD,IAAD,GAAQ,wBAAR,GAAmC,EAAzD,CAXG,CAYH;;AACAA,EAAAA,IAAI,GAAGA,IAAI,IAAI,CAAAL,UAAU,SAAV,IAAAA,UAAU,WAAV,qCAAAA,UAAU,CAAEO,UAAZ,gFAAwBjD,MAAxB,MAAmC,CAAlD;AACAgD,EAAAA,OAAO,GACL,CAAAN,UAAU,SAAV,IAAAA,UAAU,WAAV,sCAAAA,UAAU,CAAEO,UAAZ,kFAAwBjD,MAAxB,MAAmC,CAAnC,GAAuC,wBAAvC,GAAkEgD,OADpE,CAdG,CAgBH;;AACA,MAAID,IAAI,IAAIL,UAAU,CAAC5B,EAAX,KAAkB,EAA9B,EAAkC;AAChCiC,IAAAA,IAAI,GACFA,IAAI,KAAIpC,UAAJ,aAAIA,UAAJ,uBAAIA,UAAU,CAAEV,KAAZ,CAAkB,UAACiB,CAAD;AAAA,aAAYA,CAAC,CAACH,KAAF,KAAY2B,UAAU,CAACO,UAAnC;AAAA,KAAlB,CAAJ,CADN;AAEAD,IAAAA,OAAO,mCAA4BN,UAAU,CAACO,UAAvC,qBAAP;AACD;;AACD,MAAI7B,gBAAgB,IAAI,CAAAA,gBAAgB,SAAhB,IAAAA,gBAAgB,WAAhB,YAAAA,gBAAgB,CAAEpB,MAAlB,IAA2B,CAAnD,EAAsD;AACpD,WAAO;AACL+C,MAAAA,IAAI,EAAE,KADD;AAELC,MAAAA,OAAO,EAAE;AAFJ,KAAP;AAID;;AACD,SAAO;AAAED,IAAAA,IAAI,EAAEA,IAAR;AAAcC,IAAAA,OAAO,EAAEA;AAAvB,GAAP;AACD,CAjCM;AAmCP,OAAO,IAAME,kBAAkB,GAAG,SAArBA,kBAAqB,CAACvC,UAAD,EAAkB+B,UAAlB,EAAsC;AAAA;;AACtE,MAAIK,IAAI,GAAG,CAAAL,UAAU,SAAV,IAAAA,UAAU,WAAV,sCAAAA,UAAU,CAAEO,UAAZ,kFAAwBjD,MAAxB,MAAmC,CAA9C;AACA,MAAIgD,OAAe,GAAG,CAACD,IAAD,GAAQ,wBAAR,GAAmC,EAAzD,CAFsE,CAGtE;;AACAC,EAAAA,OAAO,GACL,CAAAN,UAAU,SAAV,IAAAA,UAAU,WAAV,sCAAAA,UAAU,CAAEO,UAAZ,kFAAwBjD,MAAxB,MAAmC,CAAnC,GAAuC,wBAAvC,GAAkEgD,OADpE,CAJsE,CAMtE;;AACA,MAAID,IAAI,IAAIL,UAAU,CAAC5B,EAAX,KAAkB,EAA9B,EAAkC;AAChCiC,IAAAA,IAAI,GACFA,IAAI,KACJpC,UADI,aACJA,UADI,uBACJA,UAAU,CAAEV,KAAZ,CAAkB,UAACiB,CAAD;AAAA,aAAYA,CAAC,CAAC+B,UAAF,KAAiBP,UAAU,CAACO,UAAxC;AAAA,KAAlB,CADI,CADN;AAGAD,IAAAA,OAAO,GAAG,CAACD,IAAD,mCACmBL,UAAU,CAACO,UAD9B,wBAEN,EAFJ;AAGD;;AACD,SAAO;AAAEF,IAAAA,IAAI,EAAEA,IAAR;AAAcC,IAAAA,OAAO,EAAEA;AAAvB,GAAP;AACD,CAhBM;AAkBP;AACA;;AACA;;AAEA,OAAO,IAAMG,wBAAwB,GAAG,SAA3BA,wBAA2B,CAAC/B,gBAAD,EAA2B;AACjE;AACA,MAAM2B,IAAa,GAAG3B,gBAAH,aAAGA,gBAAH,uBAAGA,gBAAgB,CAAEnB,KAAlB,CAAwB,UAACiB,CAAD,EAAY;AACxD,WAAOA,CAAC,CAACgB,eAAF,KAAsB,EAAtB,IACL,CAAAhB,CAAC,SAAD,IAAAA,CAAC,WAAD,YAAAA,CAAC,CAAES,kBAAH,CAAsB5C,KAAtB,MAAgC,EAD3B,IAEL,CAAAmC,CAAC,SAAD,IAAAA,CAAC,WAAD,YAAAA,CAAC,CAAEa,YAAH,CAAgBT,IAAhB,MAAyB,EAFpB,IAGL,CAAAJ,CAAC,SAAD,IAAAA,CAAC,WAAD,YAAAA,CAAC,CAAEa,YAAH,CAAgBT,IAAhB,MAAyB,MAHpB,GAIH,IAJG,GAKH,CAAAJ,CAAC,SAAD,IAAAA,CAAC,WAAD,YAAAA,CAAC,CAAEa,YAAH,CAAgBhD,KAAhB,MAA0B,EAL9B;AAMD,GAPqB,CAAtB;AASA,MAAMiE,OAAe,GAAG,CAACD,IAAD,GAAQ,wBAAR,GAAmC,EAA3D,CAXiE,CAYjE;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AACA,MAAI3B,gBAAgB,IAAI,CAAAA,gBAAgB,SAAhB,IAAAA,gBAAgB,WAAhB,YAAAA,gBAAgB,CAAEpB,MAAlB,IAA2B,CAAnD,EAAsD;AACpD,WAAO;AACL+C,MAAAA,IAAI,EAAE,KADD;AAELC,MAAAA,OAAO,EAAE;AAFJ,KAAP;AAID;;AACD,SAAO;AAAED,IAAAA,IAAI,EAAEA,IAAR;AAAcC,IAAAA,OAAO,EAAEA;AAAvB,GAAP;AACD,CA7BM;AA+BP;AACA;;AACA;;AAEA,OAAO,IAAMI,wBAAwB,GAAG,SAA3BA,wBAA2B,CAACC,gBAAD,EAA2B;AACjE,MAAMC,QAAQ,GACZD,gBAAgB,CAACjB,OAAjB,IACAiB,gBAAgB,CAACb,aADjB,IAEAa,gBAAgB,CAAChB,eAFjB,IAGAgB,gBAAgB,CAACf,iBAJnB;AAKA,SAAO,CAAC,CAACgB,QAAT;AACD,CAPM;AASP,OAAO,IAAMC,wBAAwB,GAAG,SAA3BA,wBAA2B,CAACF,gBAAD,EAA2B;AACjE,MAAMC,QAAQ,GACZD,gBAAgB,CAACjB,OAAjB,IACAiB,gBAAgB,CAACb,aADjB,IAEAa,gBAAgB,CAAChB,eAFjB,IAGAgB,gBAAgB,CAACf,iBAJnB;AAKA,SAAO,CAAC,CAACgB,QAAT;AACD,CAPM;AASP,OAAO,IAAME,YAAY,GAAG,SAAfA,YAAe,CAACC,IAAD,EAAe;AAAA;;AACzC,MAAMC,QAAQ,GACZD,IAAI,IAAIA,IAAI,CAACE,UAAb,KAA2BF,IAA3B,aAA2BA,IAA3B,0CAA2BA,IAAI,CAAEG,SAAjC,oDAA2B,gBAAiB7C,KAA5C,MAAqD0C,IAArD,aAAqDA,IAArD,2CAAqDA,IAAI,CAAEG,SAA3D,qDAAqD,iBAAiB7E,KAAtE,CADF;AAEA,SAAO,CAAC,CAAC2E,QAAT;AACD,CAJM;AAMP,OAAO,IAAMG,kBAAkB,GAAG,SAArBA,kBAAqB,CAChCnB,UADgC,EAEhCtB,gBAFgC,EAGhCT,UAHgC,EAIhCmD,mBAJgC,EAK7B;AAAA;;AACH,MAAMnB,OAAO,GAAGxB,iBAAiB,CAACC,gBAAD,EAAmB0C,mBAAnB,CAAjC;AACA,MAAMH,UAAU,GACd,QAAOjB,UAAP,aAAOA,UAAP,+CAAOA,UAAU,CAAEqB,QAAnB,yDAAO,qBAAsBJ,UAA7B,MAA4C,QAA5C,GACIjB,UADJ,aACIA,UADJ,gDACIA,UAAU,CAAEqB,QADhB,0DACI,sBAAsBJ,UAAtB,CAAiC7C,EADrC,GAEI4B,UAFJ,aAEIA,UAFJ,gDAEIA,UAAU,CAAEqB,QAFhB,0DAEI,sBAAsBJ,UAH5B;AAIA,MAAMrD,IAAS,GAAG;AAChBQ,IAAAA,EAAE,EAAE4B,UAAU,CAAC5B,EADC;AAEhBmC,IAAAA,UAAU,EAAEP,UAAU,CAACO,UAAX,IAAyB,GAFrB;AAGhBN,IAAAA,OAAO,EAAEA,OAHO;AAIhBqB,IAAAA,WAAW,EAAEtB,UAAU,CAACsB,WAJR;AAKhBC,IAAAA,iBAAiB,EAAEvB,UAAU,CAACuB,iBALd;AAMhBC,IAAAA,cAAc,EAAExB,UAAF,aAAEA,UAAF,uBAAEA,UAAU,CAAEyB,qBANZ;AAOhBC,IAAAA,YAAY,EAAE,CACZ;AACEhC,MAAAA,OAAO,EAAEuB,UADX;AAEEnB,MAAAA,aAAa,2BAAEsB,mBAAmB,CAACH,UAAD,CAArB,0DAAE,sBAAiC5C,KAFlD;AAGEuB,MAAAA,iBAAiB,EAAEI,UAAF,aAAEA,UAAF,gDAAEA,UAAU,CAAEqB,QAAd,0DAAE,sBAAsBH,SAAtB,CAAgC7E,KAHrD;AAIEsD,MAAAA,eAAe,EAAEK,UAAF,aAAEA,UAAF,gDAAEA,UAAU,CAAEqB,QAAd,0DAAE,sBAAsBH,SAAtB,CAAgC7E;AAJnD,KADY;AAPE,GAAlB;AAiBA,MAAM2E,QAAQ,GAAGH,wBAAwB,CAACjD,IAAD,aAACA,IAAD,uBAACA,IAAI,CAAE8D,YAAN,CAAmB,CAAnB,CAAD,CAAzC;;AAEA,MAAIhB,wBAAwB,CAAC9C,IAAD,aAACA,IAAD,uBAACA,IAAI,CAAE8D,YAAN,CAAmB,CAAnB,CAAD,CAAxB,IAAmD,CAACV,QAAxD,EAAkE;AAChE,WAAO;AAAEX,MAAAA,IAAI,EAAE,KAAR;AAAeC,MAAAA,OAAO,EAAE;AAAxB,KAAP;AACD,GAFD,MAEO;AACL,KAACU,QAAD,KAAoBpD,IAApB,aAAoBA,IAApB,qBAAa,OAAOA,IAAI,CAAE8D,YAA1B;;AADK,8BAEqBlB,kBAAkB,CAACvC,UAAD,EAAa+B,UAAb,CAFvC;AAAA,QAEGK,IAFH,uBAEGA,IAFH;AAAA,QAESC,OAFT,uBAESA,OAFT;;AAAA,gCAGsCG,wBAAwB,CACjE/B,gBADiE,CAH9D;AAAA,QAGSiD,KAHT,yBAGGtB,IAHH;AAAA,QAGyBuB,QAHzB,yBAGgBtB,OAHhB;;AAML,WAAO;AACLD,MAAAA,IAAI,EAAEA,IADD;AAELwB,MAAAA,aAAa,EAAEF,KAFV;AAGLrB,MAAAA,OAAO,EAAEA,OAHJ;AAILwB,MAAAA,gBAAgB,EAAEF;AAJb,KAAP;AAMD;AACF,CA7CM","sourcesContent":["// Create a random ID\nexport const generateUEID = () => {\n  const first: number = (Math.random() * 46656) | 0\n  const second: number = (Math.random() * 46656) | 0\n  return (\n    ('000' + first?.toString(36)).slice(-3) +\n    ('000' + second?.toString(36)).slice(-3)\n  )\n}\n\nexport const getObject = (\n  value: string,\n  array: any[],\n  comparingString: string\n) => {\n  if (array && value) {\n    const index = array?.findIndex((x: any) => x[comparingString] === value)\n    return index !== -1 ? array[index] : false\n  }\n  return ' '\n}\n\nexport const createNewArray = (\n  arr: any[],\n  keysValueToBeAdded: string,\n  excludingValue?: string\n) => {\n  const a = arr.map((f) => {\n    return f[keysValueToBeAdded] !== excludingValue ? f[keysValueToBeAdded] : ''\n  })\n  return a\n}\n\nexport const arrayEquals = (a: any, b: any) => {\n  return (\n    Array.isArray(a) &&\n    Array.isArray(b) &&\n    a.length === b.length &&\n    a.every((val, index) => val === b[index])\n  )\n}\n\nexport const removeObjectFromArray = (\n  comparingValue: string,\n  array: any[],\n  comparingKey: string\n) => {\n  const temp = [...array]\n  const index = temp.findIndex((x: any) => x[comparingKey] === comparingValue)\n  temp.splice(index, 1)\n  return temp\n}\n\nexport const isElementPresent = (value: string, arr: string[]) => {\n  return arr.indexOf(value) !== -1\n}\n\nexport const createSavedFiterDropdown = (chipsArray: any[]) => {\n  const tempArray: any[] = chipsArray.map((c) => {\n    return {\n      id: c.id,\n      label: c.label,\n      condition: c.condition,\n      value: c.id\n    }\n  })\n  return tempArray\n}\n\nexport const getString = (value: any) => {\n  if (Array.isArray(value)) {\n    let temp = ''\n    temp += value.map((m) => m.value)\n    return temp\n  } else if (typeof value === 'object') {\n    return value.value\n  } else {\n    return value?.toString()\n  }\n}\n\nexport const PrepareFilterData = (\n  filterConditions: any,\n  HSetColumnData: any,\n  type?: string,\n  chips?: any[]\n) => {\n  const fConditions: any[] = []\n  \n  filterConditions?.forEach((f: any) => {\n    const operationObject =\n      f.operationalOptions?.options !== null &&\n      typeof f?.operationalOptions?.value !== 'object'\n        ? getObject(\n            f?.operationalOptions?.value,\n            f?.operationalOptions?.options,\n            'labelKey'\n          )\n        : f?.operationalOptions?.value\n\n    // convert date, multiselect and dropdown object to appropriate format\n    let FilterData: any\n    let filterDataLabel: any\n    if (typeof f?.thirdElement?.value === 'string') {\n      FilterData = f?.thirdElement?.value\n      filterDataLabel = f?.thirdElement?.label\n    } else if (f.fieldType === 'date' || f.fieldType === 'calendar') {\n      FilterData =\n        f?.thirdElement?.value[0]?.getTime() +\n        ',' +\n        f?.thirdElement?.value[1]?.getTime()\n    } else if (Array.isArray(f?.thirdElement?.value)) {\n      f?.thirdElement?.value?.map(\n        (m: any) =>{\n          FilterData = FilterData ? FilterData + ',' + m.value : m.value\n          filterDataLabel = filterDataLabel ? filterDataLabel + ',' + m.label : m.label\n        }\n      )\n    } else if (f.fieldType === 'select' || f.fieldType === 'dropdown') {\n      FilterData =\n        typeof f?.thirdElement?.value === 'object'\n          ? f?.thirdElement?.value?.value\n          : f?.thirdElement?.value\n        filterDataLabel = typeof f?.thirdElement?.label === 'object'\n          ? f?.thirdElement?.label.label : f?.thirdElement?.label\n    } else {\n      FilterData = f?.thirdElement?.value\n      filterDataLabel = f?.thirdElement?.label\n    }\n\n    if (f?.dropdownOptions !== 'savedFilters') {\n      fConditions.push({\n        fieldId: f?.dropdownOptions,\n        operationSymbol: operationObject?.operationSymbol,\n        operationLabelKey: operationObject?.labelKey,\n        fieldLabelKey:\n          operationObject?.labelKey === 'savedFilterIs'\n            ? 'savedFilterIs'\n            : HSetColumnData[f?.dropdownOptions]?.label,\n        labelValue: operationObject?.label,\n        filterData: FilterData,\n        filterDataLabel: filterDataLabel\n      })\n    } else {\n      // debugger\n      const filters = chips?.find((chip: any) => chip?.id === FilterData?.id)\n\n      if (filters) {\n        filters?.filters?.forEach((f: any) => {\n          fConditions.push(f)\n        })\n      }\n    }\n  })\n\n  if (type === 'apply') {\n    return fConditions\n  }\n  return fConditions\n}\n\n/*********************************************************/\n// handle Validations\n/*********************************************************/\nexport const validateFiltersData = (\n  chipsArray: any,\n  filterData: any,\n  filterConditions: any\n) => {\n  // check whether all conditions are nonempty\n  let flag: boolean = filterConditions?.every((m: any) => {\n    return m.dropdownOptions !== '' &&\n      m?.operationalOptions.value !== '' &&\n      m?.thirdElement.type !== '' &&\n      m?.thirdElement.type === 'none'\n      ? true\n      : m?.thirdElement.value !== ''\n  })\n\n  let message: string = !flag ? 'Incomplete Information' : ''\n  // check whether filterName is not empty\n  flag = flag && filterData?.filterName?.length !== 0\n  message =\n    filterData?.filterName?.length === 0 ? 'Incomplete Information' : message\n  // check whether filterName does not repeat for new filters\n  if (flag && filterData.id === '') {\n    flag =\n      flag && chipsArray?.every((m: any) => m.label !== filterData.filterName)\n    message = `Filter with the name '${filterData.filterName}' already exists`\n  }\n  if (filterConditions && filterConditions?.length < 1) {\n    return {\n      flag: false,\n      message: 'Incomplete Information'\n    }\n  }\n  return { flag: flag, message: message }\n}\n\nexport const validateFilterData = (chipsArray: any, filterData: any) => {\n  let flag = filterData?.filterName?.length !== 0\n  let message: string = !flag ? 'Incomplete Information' : ''\n  // check whether filterName is not empty\n  message =\n    filterData?.filterName?.length === 0 ? 'Incomplete Information' : message\n  // check whether filterName does not repeat for new filters\n  if (flag && filterData.id === '') {\n    flag =\n      flag &&\n      chipsArray?.every((m: any) => m.filterName !== filterData.filterName)\n    message = !flag\n      ? `Filter with the name '${filterData.filterName}' already exists`\n      : ''\n  }\n  return { flag: flag, message: message }\n}\n\n/*********************************************************/\n// handle Filter conditions validation\n/*********************************************************/\n\nexport const validateFilterConditions = (filterConditions: any) => {\n  // check whether all conditions are nonempty\n  const flag: boolean = filterConditions?.every((m: any) => {\n    return m.dropdownOptions !== '' &&\n      m?.operationalOptions.value !== '' &&\n      m?.thirdElement.type !== '' &&\n      m?.thirdElement.type === 'none'\n      ? true\n      : m?.thirdElement.value !== ''\n  })\n\n  const message: string = !flag ? 'Incomplete Information' : ''\n  // // check whether filterName is not empty\n  // flag = flag && filterData?.filterName?.length !== 0\n  // message =\n  //   filterData?.filterName?.length === 0 ? 'Incomplete Information' : message\n  // // check whether filterName does not repeat for new filters\n  // if (flag && filterData.id === '') {\n  //   flag =\n  //     flag && chipsArray?.every((m: any) => m.label !== filterData.filterName)\n  //   message = `Filter with the name '${filterData.filterName}' already exists`\n  // }\n  if (filterConditions && filterConditions?.length < 1) {\n    return {\n      flag: false,\n      message: 'Incomplete Information'\n    }\n  }\n  return { flag: flag, message: message }\n}\n\n/*********************************************************/\n// handle SORT Data validation\n/*********************************************************/\n\nexport const validateHalfSortCriteria = (SortCriteriaData: any) => {\n  const sortflag =\n    SortCriteriaData.fieldId ||\n    SortCriteriaData.fieldLabelKey ||\n    SortCriteriaData.operationSymbol ||\n    SortCriteriaData.operationLabelKey\n  return !!sortflag\n}\n\nexport const validateFullSortCriteria = (SortCriteriaData: any) => {\n  const sortflag =\n    SortCriteriaData.fieldId &&\n    SortCriteriaData.fieldLabelKey &&\n    SortCriteriaData.operationSymbol &&\n    SortCriteriaData.operationLabelKey\n  return !!sortflag\n}\n\nexport const validateSort = (sort: any) => {\n  const sortFlag =\n    sort && sort.columnName && sort?.sortOrder?.label && sort?.sortOrder?.value\n  return !!sortFlag\n}\n\nexport const passValidationTest = (\n  filterData: any,\n  filterConditions: any,\n  chipsArray: any,\n  HSetColumnStructure: any\n) => {\n  const filters = PrepareFilterData(filterConditions, HSetColumnStructure)\n  const columnName =\n    typeof filterData?.sortable?.columnName === 'object'\n      ? filterData?.sortable?.columnName.id\n      : filterData?.sortable?.columnName\n  const temp: any = {\n    id: filterData.id,\n    filterName: filterData.filterName || ' ',\n    filters: filters,\n    isFavourite: filterData.isFavourite,\n    favouriteSections: filterData.favouriteSections,\n    operationLogic: filterData?.filterMasterCondition,\n    sortCriteria: [\n      {\n        fieldId: columnName,\n        fieldLabelKey: HSetColumnStructure[columnName]?.label,\n        operationLabelKey: filterData?.sortable?.sortOrder.value,\n        operationSymbol: filterData?.sortable?.sortOrder.value\n      }\n    ]\n  }\n\n  const sortFlag = validateFullSortCriteria(temp?.sortCriteria[0])\n\n  if (validateHalfSortCriteria(temp?.sortCriteria[0]) && !sortFlag) {\n    return { flag: false, message: 'Incomplete Information' }\n  } else {\n    !sortFlag && delete temp?.sortCriteria\n    const { flag, message } = validateFilterData(chipsArray, filterData)\n    const { flag: Cflag, message: Cmessage } = validateFilterConditions(\n      filterConditions\n    )\n    return {\n      flag: flag,\n      conditionFlag: Cflag,\n      message: message,\n      Conditionmessage: Cmessage\n    }\n  }\n}\n"]},"metadata":{},"sourceType":"module"}