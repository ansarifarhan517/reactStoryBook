{"ast":null,"code":"import _defineProperty from \"/Users/farhanansari/Code/ui-library/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/defineProperty\";\n\nvar _parameters;\n\n/* eslint-disable */\n// @ts-nocheck\n// @ts-ignore\nvar withSourceLoader = require('@storybook/source-loader/preview').withSource; // @ts-ignore\n\n\nvar addSourceDecorator = require(\"@storybook/source-loader/preview\").addSource; // @ts-ignore\n\n\nvar __SOURCE_PREFIX__ = \"/Users/farhanansari/Code/ui-library/src/components/molecules/MultiSelect/stories\"; // @ts-ignore\n\nvar __STORY__ = \"\\n\\n// @ts-nocheck\\n// @ts-ignore\\nvar withSourceLoader = require('@storybook/source-loader/preview').withSource;\\n// @ts-ignore\\nvar addSourceDecorator = require(\\\"@storybook/source-loader/preview\\\").addSource;\\n// @ts-ignore\\nvar __SOURCE_PREFIX__ = \\\"/Users/farhanansari/Code/ui-library/src/components/molecules/MultiSelect/stories\\\";\\n// @ts-ignore\\nvar __STORY__ = \\\"\\\\n\\\\n// @ts-nocheck\\\\n// @ts-ignore\\\\nvar withSourceLoader = require('@storybook/source-loader/preview').withSource;\\\\n// @ts-ignore\\\\nvar addSourceDecorator = require(\\\\\\\"@storybook/source-loader/preview\\\\\\\").addSource;\\\\n// @ts-ignore\\\\nvar __SOURCE_PREFIX__ = \\\\\\\"/Users/farhanansari/Code/ui-library/src/components/molecules/MultiSelect/stories\\\\\\\";\\\\n// @ts-ignore\\\\nvar __STORY__ = \\\\\\\"import React from 'react'\\\\\\\\nimport MultiSelect from '../index'\\\\\\\\nimport Box from '../../../atoms/Box'\\\\\\\\nimport { path } from '../..'\\\\\\\\nimport ThemeWrapper from '../../../../utilities/components/ThemeWrapper'\\\\\\\\n\\\\\\\\nimport {\\\\\\\\n  boolean,\\\\\\\\n  text,\\\\\\\\n  object,\\\\\\\\n  withKnobs,\\\\\\\\n  number,\\\\\\\\n  array\\\\\\\\n} from '@storybook/addon-knobs'\\\\\\\\nimport { action } from '@storybook/addon-actions'\\\\\\\\nimport TextInput from '../../TextInput'\\\\\\\\nimport { tMultiSelectChildren } from '../interfaces'\\\\\\\\n\\\\\\\\nexport default {\\\\\\\\n  title: `${path}/MultiSelect`,\\\\\\\\n  component: MultiSelect,\\\\\\\\n  decorators: [withKnobs],\\\\\\\\n  parameters: {\\\\\\\\n    props: {\\\\\\\\n      propTablesExclude: [Box, ThemeWrapper, TextInput]\\\\\\\\n    }\\\\\\\\n  }\\\\\\\\n}\\\\\\\\n\\\\\\\\nconst options = [\\\\\\\\n  { value: 'ocean', label: 'Ocean', phoneNumber: '1234', age: '10' },\\\\\\\\n  { value: 'blue', label: 'Blue', phoneNumber: '455556', age: '12' },\\\\\\\\n  { value: 'purple', label: 'Purple', phoneNumber: '67778', age: '13' },\\\\\\\\n  { value: 'red', label: 'Red', phoneNumber: '89990', age: '14' },\\\\\\\\n  { value: 'orange', label: 'Orange', phoneNumber: '001323', age: '15' },\\\\\\\\n  { value: 'yellow', label: 'Yellow', phoneNumber: '99243452', age: '16' },\\\\\\\\n  { value: 'green', label: 'Green', phoneNumber: '120009', age: '18' },\\\\\\\\n  { value: 'forest', label: 'Forest', phoneNumber: '0000000', age: '20' },\\\\\\\\n  { value: 'slate', label: 'Slate', phoneNumber: '11111111', age: '30' },\\\\\\\\n  { value: 'silver', label: 'Silver', phoneNumber: '22222222', age: '40' },\\\\\\\\n  { value: 'green1', label: 'Green1', phoneNumber: '120009', age: '18' },\\\\\\\\n  { value: 'forest1', label: 'Forest1', phoneNumber: '0000000', age: '20' },\\\\\\\\n  { value: 'slate1', label: 'Slate1', phoneNumber: '11111111', age: '30' },\\\\\\\\n  { value: 'silver1', label: 'Silver1', phoneNumber: '22222222', age: '40' }\\\\\\\\n]\\\\\\\\nconst selectedOptions = [\\\\\\\\n  { value: 'ocean', label: 'Ocean', phoneNumber: '1234', age: '10' },\\\\\\\\n  { value: 'blue', label: 'Blue', phoneNumber: '455556', age: '12' },\\\\\\\\n  { value: 'purple', label: 'Purple', phoneNumber: '67778', age: '13' },\\\\\\\\n  { value: 'red', label: 'Red', phoneNumber: '89990', age: '14' },\\\\\\\\n  { value: 'forest', label: 'Forest', phoneNumber: '0000000', age: '20' }\\\\\\\\n  // { value: 'slate', label: 'Slate', phoneNumber: '11111111', age: '30' }\\\\\\\\n]\\\\\\\\n\\\\\\\\nexport const withTextField = () => (\\\\\\\\n  <ThemeWrapper>\\\\\\\\n    <Box p='1em'>\\\\\\\\n      <MultiSelect\\\\\\\\n        id={text('id', 'Colors')}\\\\\\\\n        width={text('width', '300px')}\\\\\\\\n        options={object('Multi Select Options', options)}\\\\\\\\n        onChange={action('Multi Select changed')}\\\\\\\\n        style={object('styles', {\\\\\\\\n          position: 'absolute',\\\\\\\\n          top: 'auto',\\\\\\\\n          left: 'auto',\\\\\\\\n          marginTop: '-18px'\\\\\\\\n        })}\\\\\\\\n        isLoading={boolean('isLoading', false)}\\\\\\\\n        isNoOption={boolean('isNoOption', false)}\\\\\\\\n        menuOpen={boolean('menuOpen', false)}\\\\\\\\n        selected={object('selected', selectedOptions)}\\\\\\\\n        allowSelectAll={boolean('allowSelectAll', false)}\\\\\\\\n        maximumSelected={number('maximum Selected', 5)}\\\\\\\\n        defaultSelected={object('default Selected', selectedOptions)}\\\\\\\\n        searchableKeys={array('Searchable Keys', ['label', 'phoneNumber'])}\\\\\\\\n        resultLimit={number('resultLimit', 10)}\\\\\\\\n        onInputChange={action('on Input changed')}\\\\\\\\n      >\\\\\\\\n        {({ optionSelected, isMenuOpen, openMenu }: tMultiSelectChildren) => (\\\\\\\\n          <TextInput\\\\\\\\n            id='id'\\\\\\\\n            label='Color'\\\\\\\\n            labelColor='black'\\\\\\\\n            placeholder='Select ... '\\\\\\\\n            error={boolean('Text Input error', false)}\\\\\\\\n            errorMessage={text('error Message', 'Its an error Message')}\\\\\\\\n            disabled={boolean('disabled', false)}\\\\\\\\n            onClick={() => {\\\\\\\\n              openMenu(!isMenuOpen)\\\\\\\\n              action('MultiSelect open/closed')(isMenuOpen)\\\\\\\\n            }}\\\\\\\\n            value={\\\\\\\\n              optionSelected && optionSelected?.length > 0\\\\\\\\n                ? optionSelected?.length + ' Selected'\\\\\\\\n                : ''\\\\\\\\n            }\\\\\\\\n            read-only\\\\\\\\n          />\\\\\\\\n        )}\\\\\\\\n      </MultiSelect>\\\\\\\\n    </Box>\\\\\\\\n  </ThemeWrapper>\\\\\\\\n)\\\\\\\\n\\\\\\\";\\\\n// @ts-ignore\\\\nvar __ADDS_MAP__ = {};\\\\n// @ts-ignore\\\\nvar __MAIN_FILE_LOCATION__ = \\\\\\\"/withTextField.stories.tsx\\\\\\\";\\\\n// @ts-ignore\\\\nvar __MODULE_DEPENDENCIES__ = [];\\\\n// @ts-ignore\\\\nvar __LOCAL_DEPENDENCIES__ = {};\\\\n// @ts-ignore\\\\nvar __IDS_TO_FRAMEWORKS__ = {};\\\\n        \\\\nimport React from 'react'\\\\nimport MultiSelect from '../index'\\\\nimport Box from '../../../atoms/Box'\\\\nimport { path } from '../..'\\\\nimport ThemeWrapper from '../../../../utilities/components/ThemeWrapper'\\\\n\\\\nimport {\\\\n  boolean,\\\\n  text,\\\\n  object,\\\\n  withKnobs,\\\\n  number,\\\\n  array\\\\n} from '@storybook/addon-knobs'\\\\nimport { action } from '@storybook/addon-actions'\\\\nimport TextInput from '../../TextInput'\\\\nimport { tMultiSelectChildren } from '../interfaces'\\\\n\\\\nexport default {\\\\n  title: `${path}/MultiSelect`,\\\\n  component: MultiSelect,\\\\n  decorators: [withKnobs],\\\\n  parameters: {\\\\\\\"storySource\\\\\\\":{\\\\\\\"source\\\\\\\":\\\\\\\"import React from 'react'\\\\\\\\nimport MultiSelect from '../index'\\\\\\\\nimport Box from '../../../atoms/Box'\\\\\\\\nimport { path } from '../..'\\\\\\\\nimport ThemeWrapper from '../../../../utilities/components/ThemeWrapper'\\\\\\\\n\\\\\\\\nimport {\\\\\\\\n  boolean,\\\\\\\\n  text,\\\\\\\\n  object,\\\\\\\\n  withKnobs,\\\\\\\\n  number,\\\\\\\\n  array\\\\\\\\n} from '@storybook/addon-knobs'\\\\\\\\nimport { action } from '@storybook/addon-actions'\\\\\\\\nimport TextInput from '../../TextInput'\\\\\\\\nimport { tMultiSelectChildren } from '../interfaces'\\\\\\\\n\\\\\\\\nexport default {\\\\\\\\n  title: `${path}/MultiSelect`,\\\\\\\\n  component: MultiSelect,\\\\\\\\n  decorators: [withKnobs],\\\\\\\\n  parameters: {\\\\\\\\n    props: {\\\\\\\\n      propTablesExclude: [Box, ThemeWrapper, TextInput]\\\\\\\\n    }\\\\\\\\n  }\\\\\\\\n}\\\\\\\\n\\\\\\\\nconst options = [\\\\\\\\n  { value: 'ocean', label: 'Ocean', phoneNumber: '1234', age: '10' },\\\\\\\\n  { value: 'blue', label: 'Blue', phoneNumber: '455556', age: '12' },\\\\\\\\n  { value: 'purple', label: 'Purple', phoneNumber: '67778', age: '13' },\\\\\\\\n  { value: 'red', label: 'Red', phoneNumber: '89990', age: '14' },\\\\\\\\n  { value: 'orange', label: 'Orange', phoneNumber: '001323', age: '15' },\\\\\\\\n  { value: 'yellow', label: 'Yellow', phoneNumber: '99243452', age: '16' },\\\\\\\\n  { value: 'green', label: 'Green', phoneNumber: '120009', age: '18' },\\\\\\\\n  { value: 'forest', label: 'Forest', phoneNumber: '0000000', age: '20' },\\\\\\\\n  { value: 'slate', label: 'Slate', phoneNumber: '11111111', age: '30' },\\\\\\\\n  { value: 'silver', label: 'Silver', phoneNumber: '22222222', age: '40' },\\\\\\\\n  { value: 'green1', label: 'Green1', phoneNumber: '120009', age: '18' },\\\\\\\\n  { value: 'forest1', label: 'Forest1', phoneNumber: '0000000', age: '20' },\\\\\\\\n  { value: 'slate1', label: 'Slate1', phoneNumber: '11111111', age: '30' },\\\\\\\\n  { value: 'silver1', label: 'Silver1', phoneNumber: '22222222', age: '40' }\\\\\\\\n]\\\\\\\\nconst selectedOptions = [\\\\\\\\n  { value: 'ocean', label: 'Ocean', phoneNumber: '1234', age: '10' },\\\\\\\\n  { value: 'blue', label: 'Blue', phoneNumber: '455556', age: '12' },\\\\\\\\n  { value: 'purple', label: 'Purple', phoneNumber: '67778', age: '13' },\\\\\\\\n  { value: 'red', label: 'Red', phoneNumber: '89990', age: '14' },\\\\\\\\n  { value: 'forest', label: 'Forest', phoneNumber: '0000000', age: '20' }\\\\\\\\n  // { value: 'slate', label: 'Slate', phoneNumber: '11111111', age: '30' }\\\\\\\\n]\\\\\\\\n\\\\\\\\nexport const withTextField = () => (\\\\\\\\n  <ThemeWrapper>\\\\\\\\n    <Box p='1em'>\\\\\\\\n      <MultiSelect\\\\\\\\n        id={text('id', 'Colors')}\\\\\\\\n        width={text('width', '300px')}\\\\\\\\n        options={object('Multi Select Options', options)}\\\\\\\\n        onChange={action('Multi Select changed')}\\\\\\\\n        style={object('styles', {\\\\\\\\n          position: 'absolute',\\\\\\\\n          top: 'auto',\\\\\\\\n          left: 'auto',\\\\\\\\n          marginTop: '-18px'\\\\\\\\n        })}\\\\\\\\n        isLoading={boolean('isLoading', false)}\\\\\\\\n        isNoOption={boolean('isNoOption', false)}\\\\\\\\n        menuOpen={boolean('menuOpen', false)}\\\\\\\\n        selected={object('selected', selectedOptions)}\\\\\\\\n        allowSelectAll={boolean('allowSelectAll', false)}\\\\\\\\n        maximumSelected={number('maximum Selected', 5)}\\\\\\\\n        defaultSelected={object('default Selected', selectedOptions)}\\\\\\\\n        searchableKeys={array('Searchable Keys', ['label', 'phoneNumber'])}\\\\\\\\n        resultLimit={number('resultLimit', 10)}\\\\\\\\n        onInputChange={action('on Input changed')}\\\\\\\\n      >\\\\\\\\n        {({ optionSelected, isMenuOpen, openMenu }: tMultiSelectChildren) => (\\\\\\\\n          <TextInput\\\\\\\\n            id='id'\\\\\\\\n            label='Color'\\\\\\\\n            labelColor='black'\\\\\\\\n            placeholder='Select ... '\\\\\\\\n            error={boolean('Text Input error', false)}\\\\\\\\n            errorMessage={text('error Message', 'Its an error Message')}\\\\\\\\n            disabled={boolean('disabled', false)}\\\\\\\\n            onClick={() => {\\\\\\\\n              openMenu(!isMenuOpen)\\\\\\\\n              action('MultiSelect open/closed')(isMenuOpen)\\\\\\\\n            }}\\\\\\\\n            value={\\\\\\\\n              optionSelected && optionSelected?.length > 0\\\\\\\\n                ? optionSelected?.length + ' Selected'\\\\\\\\n                : ''\\\\\\\\n            }\\\\\\\\n            read-only\\\\\\\\n          />\\\\\\\\n        )}\\\\\\\\n      </MultiSelect>\\\\\\\\n    </Box>\\\\\\\\n  </ThemeWrapper>\\\\\\\\n)\\\\\\\\n\\\\\\\",\\\\\\\"locationsMap\\\\\\\":{}},\\\\n    props: {\\\\n      propTablesExclude: [Box, ThemeWrapper, TextInput]\\\\n    }\\\\n  },}\\\\n\\\\nconst options = [\\\\n  { value: 'ocean', label: 'Ocean', phoneNumber: '1234', age: '10' },\\\\n  { value: 'blue', label: 'Blue', phoneNumber: '455556', age: '12' },\\\\n  { value: 'purple', label: 'Purple', phoneNumber: '67778', age: '13' },\\\\n  { value: 'red', label: 'Red', phoneNumber: '89990', age: '14' },\\\\n  { value: 'orange', label: 'Orange', phoneNumber: '001323', age: '15' },\\\\n  { value: 'yellow', label: 'Yellow', phoneNumber: '99243452', age: '16' },\\\\n  { value: 'green', label: 'Green', phoneNumber: '120009', age: '18' },\\\\n  { value: 'forest', label: 'Forest', phoneNumber: '0000000', age: '20' },\\\\n  { value: 'slate', label: 'Slate', phoneNumber: '11111111', age: '30' },\\\\n  { value: 'silver', label: 'Silver', phoneNumber: '22222222', age: '40' },\\\\n  { value: 'green1', label: 'Green1', phoneNumber: '120009', age: '18' },\\\\n  { value: 'forest1', label: 'Forest1', phoneNumber: '0000000', age: '20' },\\\\n  { value: 'slate1', label: 'Slate1', phoneNumber: '11111111', age: '30' },\\\\n  { value: 'silver1', label: 'Silver1', phoneNumber: '22222222', age: '40' }\\\\n]\\\\nconst selectedOptions = [\\\\n  { value: 'ocean', label: 'Ocean', phoneNumber: '1234', age: '10' },\\\\n  { value: 'blue', label: 'Blue', phoneNumber: '455556', age: '12' },\\\\n  { value: 'purple', label: 'Purple', phoneNumber: '67778', age: '13' },\\\\n  { value: 'red', label: 'Red', phoneNumber: '89990', age: '14' },\\\\n  { value: 'forest', label: 'Forest', phoneNumber: '0000000', age: '20' }\\\\n  // { value: 'slate', label: 'Slate', phoneNumber: '11111111', age: '30' }\\\\n]\\\\n\\\\nexport const withTextField = addSourceDecorator(() => (\\\\n  <ThemeWrapper>\\\\n    <Box p='1em'>\\\\n      <MultiSelect\\\\n        id={text('id', 'Colors')}\\\\n        width={text('width', '300px')}\\\\n        options={object('Multi Select Options', options)}\\\\n        onChange={action('Multi Select changed')}\\\\n        style={object('styles', {\\\\n          position: 'absolute',\\\\n          top: 'auto',\\\\n          left: 'auto',\\\\n          marginTop: '-18px'\\\\n        })}\\\\n        isLoading={boolean('isLoading', false)}\\\\n        isNoOption={boolean('isNoOption', false)}\\\\n        menuOpen={boolean('menuOpen', false)}\\\\n        selected={object('selected', selectedOptions)}\\\\n        allowSelectAll={boolean('allowSelectAll', false)}\\\\n        maximumSelected={number('maximum Selected', 5)}\\\\n        defaultSelected={object('default Selected', selectedOptions)}\\\\n        searchableKeys={array('Searchable Keys', ['label', 'phoneNumber'])}\\\\n        resultLimit={number('resultLimit', 10)}\\\\n        onInputChange={action('on Input changed')}\\\\n      >\\\\n        {({ optionSelected, isMenuOpen, openMenu }: tMultiSelectChildren) => (\\\\n          <TextInput\\\\n            id='id'\\\\n            label='Color'\\\\n            labelColor='black'\\\\n            placeholder='Select ... '\\\\n            error={boolean('Text Input error', false)}\\\\n            errorMessage={text('error Message', 'Its an error Message')}\\\\n            disabled={boolean('disabled', false)}\\\\n            onClick={() => {\\\\n              openMenu(!isMenuOpen)\\\\n              action('MultiSelect open/closed')(isMenuOpen)\\\\n            }}\\\\n            value={\\\\n              optionSelected && optionSelected?.length > 0\\\\n                ? optionSelected?.length + ' Selected'\\\\n                : ''\\\\n            }\\\\n            read-only\\\\n          />\\\\n        )}\\\\n      </MultiSelect>\\\\n    </Box>\\\\n  </ThemeWrapper>\\\\n), {__STORY__, __ADDS_MAP__,__MAIN_FILE_LOCATION__,__MODULE_DEPENDENCIES__,__LOCAL_DEPENDENCIES__,__SOURCE_PREFIX__,__IDS_TO_FRAMEWORKS__});\\\";\\n// @ts-ignore\\nvar __ADDS_MAP__ = {};\\n// @ts-ignore\\nvar __MAIN_FILE_LOCATION__ = \\\"/withTextField.stories.tsx\\\";\\n// @ts-ignore\\nvar __MODULE_DEPENDENCIES__ = [];\\n// @ts-ignore\\nvar __LOCAL_DEPENDENCIES__ = {};\\n// @ts-ignore\\nvar __IDS_TO_FRAMEWORKS__ = {};\\n        \\n\\n\\n// @ts-nocheck\\n// @ts-ignore\\nvar withSourceLoader = require('@storybook/source-loader/preview').withSource;\\n// @ts-ignore\\nvar addSourceDecorator = require(\\\"@storybook/source-loader/preview\\\").addSource;\\n// @ts-ignore\\nvar __SOURCE_PREFIX__ = \\\"/Users/farhanansari/Code/ui-library/src/components/molecules/MultiSelect/stories\\\";\\n// @ts-ignore\\nvar __STORY__ = \\\"import React from 'react'\\\\nimport MultiSelect from '../index'\\\\nimport Box from '../../../atoms/Box'\\\\nimport { path } from '../..'\\\\nimport ThemeWrapper from '../../../../utilities/components/ThemeWrapper'\\\\n\\\\nimport {\\\\n  boolean,\\\\n  text,\\\\n  object,\\\\n  withKnobs,\\\\n  number,\\\\n  array\\\\n} from '@storybook/addon-knobs'\\\\nimport { action } from '@storybook/addon-actions'\\\\nimport TextInput from '../../TextInput'\\\\nimport { tMultiSelectChildren } from '../interfaces'\\\\n\\\\nexport default {\\\\n  title: `${path}/MultiSelect`,\\\\n  component: MultiSelect,\\\\n  decorators: [withKnobs],\\\\n  parameters: {\\\\n    props: {\\\\n      propTablesExclude: [Box, ThemeWrapper, TextInput]\\\\n    }\\\\n  }\\\\n}\\\\n\\\\nconst options = [\\\\n  { value: 'ocean', label: 'Ocean', phoneNumber: '1234', age: '10' },\\\\n  { value: 'blue', label: 'Blue', phoneNumber: '455556', age: '12' },\\\\n  { value: 'purple', label: 'Purple', phoneNumber: '67778', age: '13' },\\\\n  { value: 'red', label: 'Red', phoneNumber: '89990', age: '14' },\\\\n  { value: 'orange', label: 'Orange', phoneNumber: '001323', age: '15' },\\\\n  { value: 'yellow', label: 'Yellow', phoneNumber: '99243452', age: '16' },\\\\n  { value: 'green', label: 'Green', phoneNumber: '120009', age: '18' },\\\\n  { value: 'forest', label: 'Forest', phoneNumber: '0000000', age: '20' },\\\\n  { value: 'slate', label: 'Slate', phoneNumber: '11111111', age: '30' },\\\\n  { value: 'silver', label: 'Silver', phoneNumber: '22222222', age: '40' },\\\\n  { value: 'green1', label: 'Green1', phoneNumber: '120009', age: '18' },\\\\n  { value: 'forest1', label: 'Forest1', phoneNumber: '0000000', age: '20' },\\\\n  { value: 'slate1', label: 'Slate1', phoneNumber: '11111111', age: '30' },\\\\n  { value: 'silver1', label: 'Silver1', phoneNumber: '22222222', age: '40' }\\\\n]\\\\nconst selectedOptions = [\\\\n  { value: 'ocean', label: 'Ocean', phoneNumber: '1234', age: '10' },\\\\n  { value: 'blue', label: 'Blue', phoneNumber: '455556', age: '12' },\\\\n  { value: 'purple', label: 'Purple', phoneNumber: '67778', age: '13' },\\\\n  { value: 'red', label: 'Red', phoneNumber: '89990', age: '14' },\\\\n  { value: 'forest', label: 'Forest', phoneNumber: '0000000', age: '20' }\\\\n  // { value: 'slate', label: 'Slate', phoneNumber: '11111111', age: '30' }\\\\n]\\\\n\\\\nexport const withTextField = () => (\\\\n  <ThemeWrapper>\\\\n    <Box p='1em'>\\\\n      <MultiSelect\\\\n        id={text('id', 'Colors')}\\\\n        width={text('width', '300px')}\\\\n        options={object('Multi Select Options', options)}\\\\n        onChange={action('Multi Select changed')}\\\\n        style={object('styles', {\\\\n          position: 'absolute',\\\\n          top: 'auto',\\\\n          left: 'auto',\\\\n          marginTop: '-18px'\\\\n        })}\\\\n        isLoading={boolean('isLoading', false)}\\\\n        isNoOption={boolean('isNoOption', false)}\\\\n        menuOpen={boolean('menuOpen', false)}\\\\n        selected={object('selected', selectedOptions)}\\\\n        allowSelectAll={boolean('allowSelectAll', false)}\\\\n        maximumSelected={number('maximum Selected', 5)}\\\\n        defaultSelected={object('default Selected', selectedOptions)}\\\\n        searchableKeys={array('Searchable Keys', ['label', 'phoneNumber'])}\\\\n        resultLimit={number('resultLimit', 10)}\\\\n        onInputChange={action('on Input changed')}\\\\n      >\\\\n        {({ optionSelected, isMenuOpen, openMenu }: tMultiSelectChildren) => (\\\\n          <TextInput\\\\n            id='id'\\\\n            label='Color'\\\\n            labelColor='black'\\\\n            placeholder='Select ... '\\\\n            error={boolean('Text Input error', false)}\\\\n            errorMessage={text('error Message', 'Its an error Message')}\\\\n            disabled={boolean('disabled', false)}\\\\n            onClick={() => {\\\\n              openMenu(!isMenuOpen)\\\\n              action('MultiSelect open/closed')(isMenuOpen)\\\\n            }}\\\\n            value={\\\\n              optionSelected && optionSelected?.length > 0\\\\n                ? optionSelected?.length + ' Selected'\\\\n                : ''\\\\n            }\\\\n            read-only\\\\n          />\\\\n        )}\\\\n      </MultiSelect>\\\\n    </Box>\\\\n  </ThemeWrapper>\\\\n)\\\\n\\\";\\n// @ts-ignore\\nvar __ADDS_MAP__ = {};\\n// @ts-ignore\\nvar __MAIN_FILE_LOCATION__ = \\\"/withTextField.stories.tsx\\\";\\n// @ts-ignore\\nvar __MODULE_DEPENDENCIES__ = [];\\n// @ts-ignore\\nvar __LOCAL_DEPENDENCIES__ = {};\\n// @ts-ignore\\nvar __IDS_TO_FRAMEWORKS__ = {};\\n        \\nimport React from 'react'\\nimport MultiSelect from '../index'\\nimport Box from '../../../atoms/Box'\\nimport { path } from '../..'\\nimport ThemeWrapper from '../../../../utilities/components/ThemeWrapper'\\n\\nimport {\\n  boolean,\\n  text,\\n  object,\\n  withKnobs,\\n  number,\\n  array\\n} from '@storybook/addon-knobs'\\nimport { action } from '@storybook/addon-actions'\\nimport TextInput from '../../TextInput'\\nimport { tMultiSelectChildren } from '../interfaces'\\n\\nexport default {\\n  title: `${path}/MultiSelect`,\\n  component: MultiSelect,\\n  decorators: [withKnobs],\\n  parameters: {\\\"storySource\\\":{\\\"source\\\":\\\"\\\\n\\\\n// @ts-nocheck\\\\n// @ts-ignore\\\\nvar withSourceLoader = require('@storybook/source-loader/preview').withSource;\\\\n// @ts-ignore\\\\nvar addSourceDecorator = require(\\\\\\\"@storybook/source-loader/preview\\\\\\\").addSource;\\\\n// @ts-ignore\\\\nvar __SOURCE_PREFIX__ = \\\\\\\"/Users/farhanansari/Code/ui-library/src/components/molecules/MultiSelect/stories\\\\\\\";\\\\n// @ts-ignore\\\\nvar __STORY__ = \\\\\\\"import React from 'react'\\\\\\\\nimport MultiSelect from '../index'\\\\\\\\nimport Box from '../../../atoms/Box'\\\\\\\\nimport { path } from '../..'\\\\\\\\nimport ThemeWrapper from '../../../../utilities/components/ThemeWrapper'\\\\\\\\n\\\\\\\\nimport {\\\\\\\\n  boolean,\\\\\\\\n  text,\\\\\\\\n  object,\\\\\\\\n  withKnobs,\\\\\\\\n  number,\\\\\\\\n  array\\\\\\\\n} from '@storybook/addon-knobs'\\\\\\\\nimport { action } from '@storybook/addon-actions'\\\\\\\\nimport TextInput from '../../TextInput'\\\\\\\\nimport { tMultiSelectChildren } from '../interfaces'\\\\\\\\n\\\\\\\\nexport default {\\\\\\\\n  title: `${path}/MultiSelect`,\\\\\\\\n  component: MultiSelect,\\\\\\\\n  decorators: [withKnobs],\\\\\\\\n  parameters: {\\\\\\\\n    props: {\\\\\\\\n      propTablesExclude: [Box, ThemeWrapper, TextInput]\\\\\\\\n    }\\\\\\\\n  }\\\\\\\\n}\\\\\\\\n\\\\\\\\nconst options = [\\\\\\\\n  { value: 'ocean', label: 'Ocean', phoneNumber: '1234', age: '10' },\\\\\\\\n  { value: 'blue', label: 'Blue', phoneNumber: '455556', age: '12' },\\\\\\\\n  { value: 'purple', label: 'Purple', phoneNumber: '67778', age: '13' },\\\\\\\\n  { value: 'red', label: 'Red', phoneNumber: '89990', age: '14' },\\\\\\\\n  { value: 'orange', label: 'Orange', phoneNumber: '001323', age: '15' },\\\\\\\\n  { value: 'yellow', label: 'Yellow', phoneNumber: '99243452', age: '16' },\\\\\\\\n  { value: 'green', label: 'Green', phoneNumber: '120009', age: '18' },\\\\\\\\n  { value: 'forest', label: 'Forest', phoneNumber: '0000000', age: '20' },\\\\\\\\n  { value: 'slate', label: 'Slate', phoneNumber: '11111111', age: '30' },\\\\\\\\n  { value: 'silver', label: 'Silver', phoneNumber: '22222222', age: '40' },\\\\\\\\n  { value: 'green1', label: 'Green1', phoneNumber: '120009', age: '18' },\\\\\\\\n  { value: 'forest1', label: 'Forest1', phoneNumber: '0000000', age: '20' },\\\\\\\\n  { value: 'slate1', label: 'Slate1', phoneNumber: '11111111', age: '30' },\\\\\\\\n  { value: 'silver1', label: 'Silver1', phoneNumber: '22222222', age: '40' }\\\\\\\\n]\\\\\\\\nconst selectedOptions = [\\\\\\\\n  { value: 'ocean', label: 'Ocean', phoneNumber: '1234', age: '10' },\\\\\\\\n  { value: 'blue', label: 'Blue', phoneNumber: '455556', age: '12' },\\\\\\\\n  { value: 'purple', label: 'Purple', phoneNumber: '67778', age: '13' },\\\\\\\\n  { value: 'red', label: 'Red', phoneNumber: '89990', age: '14' },\\\\\\\\n  { value: 'forest', label: 'Forest', phoneNumber: '0000000', age: '20' }\\\\\\\\n  // { value: 'slate', label: 'Slate', phoneNumber: '11111111', age: '30' }\\\\\\\\n]\\\\\\\\n\\\\\\\\nexport const withTextField = () => (\\\\\\\\n  <ThemeWrapper>\\\\\\\\n    <Box p='1em'>\\\\\\\\n      <MultiSelect\\\\\\\\n        id={text('id', 'Colors')}\\\\\\\\n        width={text('width', '300px')}\\\\\\\\n        options={object('Multi Select Options', options)}\\\\\\\\n        onChange={action('Multi Select changed')}\\\\\\\\n        style={object('styles', {\\\\\\\\n          position: 'absolute',\\\\\\\\n          top: 'auto',\\\\\\\\n          left: 'auto',\\\\\\\\n          marginTop: '-18px'\\\\\\\\n        })}\\\\\\\\n        isLoading={boolean('isLoading', false)}\\\\\\\\n        isNoOption={boolean('isNoOption', false)}\\\\\\\\n        menuOpen={boolean('menuOpen', false)}\\\\\\\\n        selected={object('selected', selectedOptions)}\\\\\\\\n        allowSelectAll={boolean('allowSelectAll', false)}\\\\\\\\n        maximumSelected={number('maximum Selected', 5)}\\\\\\\\n        defaultSelected={object('default Selected', selectedOptions)}\\\\\\\\n        searchableKeys={array('Searchable Keys', ['label', 'phoneNumber'])}\\\\\\\\n        resultLimit={number('resultLimit', 10)}\\\\\\\\n        onInputChange={action('on Input changed')}\\\\\\\\n      >\\\\\\\\n        {({ optionSelected, isMenuOpen, openMenu }: tMultiSelectChildren) => (\\\\\\\\n          <TextInput\\\\\\\\n            id='id'\\\\\\\\n            label='Color'\\\\\\\\n            labelColor='black'\\\\\\\\n            placeholder='Select ... '\\\\\\\\n            error={boolean('Text Input error', false)}\\\\\\\\n            errorMessage={text('error Message', 'Its an error Message')}\\\\\\\\n            disabled={boolean('disabled', false)}\\\\\\\\n            onClick={() => {\\\\\\\\n              openMenu(!isMenuOpen)\\\\\\\\n              action('MultiSelect open/closed')(isMenuOpen)\\\\\\\\n            }}\\\\\\\\n            value={\\\\\\\\n              optionSelected && optionSelected?.length > 0\\\\\\\\n                ? optionSelected?.length + ' Selected'\\\\\\\\n                : ''\\\\\\\\n            }\\\\\\\\n            read-only\\\\\\\\n          />\\\\\\\\n        )}\\\\\\\\n      </MultiSelect>\\\\\\\\n    </Box>\\\\\\\\n  </ThemeWrapper>\\\\\\\\n)\\\\\\\\n\\\\\\\";\\\\n// @ts-ignore\\\\nvar __ADDS_MAP__ = {};\\\\n// @ts-ignore\\\\nvar __MAIN_FILE_LOCATION__ = \\\\\\\"/withTextField.stories.tsx\\\\\\\";\\\\n// @ts-ignore\\\\nvar __MODULE_DEPENDENCIES__ = [];\\\\n// @ts-ignore\\\\nvar __LOCAL_DEPENDENCIES__ = {};\\\\n// @ts-ignore\\\\nvar __IDS_TO_FRAMEWORKS__ = {};\\\\n        \\\\nimport React from 'react'\\\\nimport MultiSelect from '../index'\\\\nimport Box from '../../../atoms/Box'\\\\nimport { path } from '../..'\\\\nimport ThemeWrapper from '../../../../utilities/components/ThemeWrapper'\\\\n\\\\nimport {\\\\n  boolean,\\\\n  text,\\\\n  object,\\\\n  withKnobs,\\\\n  number,\\\\n  array\\\\n} from '@storybook/addon-knobs'\\\\nimport { action } from '@storybook/addon-actions'\\\\nimport TextInput from '../../TextInput'\\\\nimport { tMultiSelectChildren } from '../interfaces'\\\\n\\\\nexport default {\\\\n  title: `${path}/MultiSelect`,\\\\n  component: MultiSelect,\\\\n  decorators: [withKnobs],\\\\n  parameters: {\\\\\\\"storySource\\\\\\\":{\\\\\\\"source\\\\\\\":\\\\\\\"import React from 'react'\\\\\\\\nimport MultiSelect from '../index'\\\\\\\\nimport Box from '../../../atoms/Box'\\\\\\\\nimport { path } from '../..'\\\\\\\\nimport ThemeWrapper from '../../../../utilities/components/ThemeWrapper'\\\\\\\\n\\\\\\\\nimport {\\\\\\\\n  boolean,\\\\\\\\n  text,\\\\\\\\n  object,\\\\\\\\n  withKnobs,\\\\\\\\n  number,\\\\\\\\n  array\\\\\\\\n} from '@storybook/addon-knobs'\\\\\\\\nimport { action } from '@storybook/addon-actions'\\\\\\\\nimport TextInput from '../../TextInput'\\\\\\\\nimport { tMultiSelectChildren } from '../interfaces'\\\\\\\\n\\\\\\\\nexport default {\\\\\\\\n  title: `${path}/MultiSelect`,\\\\\\\\n  component: MultiSelect,\\\\\\\\n  decorators: [withKnobs],\\\\\\\\n  parameters: {\\\\\\\\n    props: {\\\\\\\\n      propTablesExclude: [Box, ThemeWrapper, TextInput]\\\\\\\\n    }\\\\\\\\n  }\\\\\\\\n}\\\\\\\\n\\\\\\\\nconst options = [\\\\\\\\n  { value: 'ocean', label: 'Ocean', phoneNumber: '1234', age: '10' },\\\\\\\\n  { value: 'blue', label: 'Blue', phoneNumber: '455556', age: '12' },\\\\\\\\n  { value: 'purple', label: 'Purple', phoneNumber: '67778', age: '13' },\\\\\\\\n  { value: 'red', label: 'Red', phoneNumber: '89990', age: '14' },\\\\\\\\n  { value: 'orange', label: 'Orange', phoneNumber: '001323', age: '15' },\\\\\\\\n  { value: 'yellow', label: 'Yellow', phoneNumber: '99243452', age: '16' },\\\\\\\\n  { value: 'green', label: 'Green', phoneNumber: '120009', age: '18' },\\\\\\\\n  { value: 'forest', label: 'Forest', phoneNumber: '0000000', age: '20' },\\\\\\\\n  { value: 'slate', label: 'Slate', phoneNumber: '11111111', age: '30' },\\\\\\\\n  { value: 'silver', label: 'Silver', phoneNumber: '22222222', age: '40' },\\\\\\\\n  { value: 'green1', label: 'Green1', phoneNumber: '120009', age: '18' },\\\\\\\\n  { value: 'forest1', label: 'Forest1', phoneNumber: '0000000', age: '20' },\\\\\\\\n  { value: 'slate1', label: 'Slate1', phoneNumber: '11111111', age: '30' },\\\\\\\\n  { value: 'silver1', label: 'Silver1', phoneNumber: '22222222', age: '40' }\\\\\\\\n]\\\\\\\\nconst selectedOptions = [\\\\\\\\n  { value: 'ocean', label: 'Ocean', phoneNumber: '1234', age: '10' },\\\\\\\\n  { value: 'blue', label: 'Blue', phoneNumber: '455556', age: '12' },\\\\\\\\n  { value: 'purple', label: 'Purple', phoneNumber: '67778', age: '13' },\\\\\\\\n  { value: 'red', label: 'Red', phoneNumber: '89990', age: '14' },\\\\\\\\n  { value: 'forest', label: 'Forest', phoneNumber: '0000000', age: '20' }\\\\\\\\n  // { value: 'slate', label: 'Slate', phoneNumber: '11111111', age: '30' }\\\\\\\\n]\\\\\\\\n\\\\\\\\nexport const withTextField = () => (\\\\\\\\n  <ThemeWrapper>\\\\\\\\n    <Box p='1em'>\\\\\\\\n      <MultiSelect\\\\\\\\n        id={text('id', 'Colors')}\\\\\\\\n        width={text('width', '300px')}\\\\\\\\n        options={object('Multi Select Options', options)}\\\\\\\\n        onChange={action('Multi Select changed')}\\\\\\\\n        style={object('styles', {\\\\\\\\n          position: 'absolute',\\\\\\\\n          top: 'auto',\\\\\\\\n          left: 'auto',\\\\\\\\n          marginTop: '-18px'\\\\\\\\n        })}\\\\\\\\n        isLoading={boolean('isLoading', false)}\\\\\\\\n        isNoOption={boolean('isNoOption', false)}\\\\\\\\n        menuOpen={boolean('menuOpen', false)}\\\\\\\\n        selected={object('selected', selectedOptions)}\\\\\\\\n        allowSelectAll={boolean('allowSelectAll', false)}\\\\\\\\n        maximumSelected={number('maximum Selected', 5)}\\\\\\\\n        defaultSelected={object('default Selected', selectedOptions)}\\\\\\\\n        searchableKeys={array('Searchable Keys', ['label', 'phoneNumber'])}\\\\\\\\n        resultLimit={number('resultLimit', 10)}\\\\\\\\n        onInputChange={action('on Input changed')}\\\\\\\\n      >\\\\\\\\n        {({ optionSelected, isMenuOpen, openMenu }: tMultiSelectChildren) => (\\\\\\\\n          <TextInput\\\\\\\\n            id='id'\\\\\\\\n            label='Color'\\\\\\\\n            labelColor='black'\\\\\\\\n            placeholder='Select ... '\\\\\\\\n            error={boolean('Text Input error', false)}\\\\\\\\n            errorMessage={text('error Message', 'Its an error Message')}\\\\\\\\n            disabled={boolean('disabled', false)}\\\\\\\\n            onClick={() => {\\\\\\\\n              openMenu(!isMenuOpen)\\\\\\\\n              action('MultiSelect open/closed')(isMenuOpen)\\\\\\\\n            }}\\\\\\\\n            value={\\\\\\\\n              optionSelected && optionSelected?.length > 0\\\\\\\\n                ? optionSelected?.length + ' Selected'\\\\\\\\n                : ''\\\\\\\\n            }\\\\\\\\n            read-only\\\\\\\\n          />\\\\\\\\n        )}\\\\\\\\n      </MultiSelect>\\\\\\\\n    </Box>\\\\\\\\n  </ThemeWrapper>\\\\\\\\n)\\\\\\\\n\\\\\\\",\\\\\\\"locationsMap\\\\\\\":{}},\\\\n    props: {\\\\n      propTablesExclude: [Box, ThemeWrapper, TextInput]\\\\n    }\\\\n  },}\\\\n\\\\nconst options = [\\\\n  { value: 'ocean', label: 'Ocean', phoneNumber: '1234', age: '10' },\\\\n  { value: 'blue', label: 'Blue', phoneNumber: '455556', age: '12' },\\\\n  { value: 'purple', label: 'Purple', phoneNumber: '67778', age: '13' },\\\\n  { value: 'red', label: 'Red', phoneNumber: '89990', age: '14' },\\\\n  { value: 'orange', label: 'Orange', phoneNumber: '001323', age: '15' },\\\\n  { value: 'yellow', label: 'Yellow', phoneNumber: '99243452', age: '16' },\\\\n  { value: 'green', label: 'Green', phoneNumber: '120009', age: '18' },\\\\n  { value: 'forest', label: 'Forest', phoneNumber: '0000000', age: '20' },\\\\n  { value: 'slate', label: 'Slate', phoneNumber: '11111111', age: '30' },\\\\n  { value: 'silver', label: 'Silver', phoneNumber: '22222222', age: '40' },\\\\n  { value: 'green1', label: 'Green1', phoneNumber: '120009', age: '18' },\\\\n  { value: 'forest1', label: 'Forest1', phoneNumber: '0000000', age: '20' },\\\\n  { value: 'slate1', label: 'Slate1', phoneNumber: '11111111', age: '30' },\\\\n  { value: 'silver1', label: 'Silver1', phoneNumber: '22222222', age: '40' }\\\\n]\\\\nconst selectedOptions = [\\\\n  { value: 'ocean', label: 'Ocean', phoneNumber: '1234', age: '10' },\\\\n  { value: 'blue', label: 'Blue', phoneNumber: '455556', age: '12' },\\\\n  { value: 'purple', label: 'Purple', phoneNumber: '67778', age: '13' },\\\\n  { value: 'red', label: 'Red', phoneNumber: '89990', age: '14' },\\\\n  { value: 'forest', label: 'Forest', phoneNumber: '0000000', age: '20' }\\\\n  // { value: 'slate', label: 'Slate', phoneNumber: '11111111', age: '30' }\\\\n]\\\\n\\\\nexport const withTextField = addSourceDecorator(() => (\\\\n  <ThemeWrapper>\\\\n    <Box p='1em'>\\\\n      <MultiSelect\\\\n        id={text('id', 'Colors')}\\\\n        width={text('width', '300px')}\\\\n        options={object('Multi Select Options', options)}\\\\n        onChange={action('Multi Select changed')}\\\\n        style={object('styles', {\\\\n          position: 'absolute',\\\\n          top: 'auto',\\\\n          left: 'auto',\\\\n          marginTop: '-18px'\\\\n        })}\\\\n        isLoading={boolean('isLoading', false)}\\\\n        isNoOption={boolean('isNoOption', false)}\\\\n        menuOpen={boolean('menuOpen', false)}\\\\n        selected={object('selected', selectedOptions)}\\\\n        allowSelectAll={boolean('allowSelectAll', false)}\\\\n        maximumSelected={number('maximum Selected', 5)}\\\\n        defaultSelected={object('default Selected', selectedOptions)}\\\\n        searchableKeys={array('Searchable Keys', ['label', 'phoneNumber'])}\\\\n        resultLimit={number('resultLimit', 10)}\\\\n        onInputChange={action('on Input changed')}\\\\n      >\\\\n        {({ optionSelected, isMenuOpen, openMenu }: tMultiSelectChildren) => (\\\\n          <TextInput\\\\n            id='id'\\\\n            label='Color'\\\\n            labelColor='black'\\\\n            placeholder='Select ... '\\\\n            error={boolean('Text Input error', false)}\\\\n            errorMessage={text('error Message', 'Its an error Message')}\\\\n            disabled={boolean('disabled', false)}\\\\n            onClick={() => {\\\\n              openMenu(!isMenuOpen)\\\\n              action('MultiSelect open/closed')(isMenuOpen)\\\\n            }}\\\\n            value={\\\\n              optionSelected && optionSelected?.length > 0\\\\n                ? optionSelected?.length + ' Selected'\\\\n                : ''\\\\n            }\\\\n            read-only\\\\n          />\\\\n        )}\\\\n      </MultiSelect>\\\\n    </Box>\\\\n  </ThemeWrapper>\\\\n), {__STORY__, __ADDS_MAP__,__MAIN_FILE_LOCATION__,__MODULE_DEPENDENCIES__,__LOCAL_DEPENDENCIES__,__SOURCE_PREFIX__,__IDS_TO_FRAMEWORKS__});\\\",\\\"locationsMap\\\":{}},\\\"storySource\\\":{\\\"source\\\":\\\"import React from 'react'\\\\nimport MultiSelect from '../index'\\\\nimport Box from '../../../atoms/Box'\\\\nimport { path } from '../..'\\\\nimport ThemeWrapper from '../../../../utilities/components/ThemeWrapper'\\\\n\\\\nimport {\\\\n  boolean,\\\\n  text,\\\\n  object,\\\\n  withKnobs,\\\\n  number,\\\\n  array\\\\n} from '@storybook/addon-knobs'\\\\nimport { action } from '@storybook/addon-actions'\\\\nimport TextInput from '../../TextInput'\\\\nimport { tMultiSelectChildren } from '../interfaces'\\\\n\\\\nexport default {\\\\n  title: `${path}/MultiSelect`,\\\\n  component: MultiSelect,\\\\n  decorators: [withKnobs],\\\\n  parameters: {\\\\n    props: {\\\\n      propTablesExclude: [Box, ThemeWrapper, TextInput]\\\\n    }\\\\n  }\\\\n}\\\\n\\\\nconst options = [\\\\n  { value: 'ocean', label: 'Ocean', phoneNumber: '1234', age: '10' },\\\\n  { value: 'blue', label: 'Blue', phoneNumber: '455556', age: '12' },\\\\n  { value: 'purple', label: 'Purple', phoneNumber: '67778', age: '13' },\\\\n  { value: 'red', label: 'Red', phoneNumber: '89990', age: '14' },\\\\n  { value: 'orange', label: 'Orange', phoneNumber: '001323', age: '15' },\\\\n  { value: 'yellow', label: 'Yellow', phoneNumber: '99243452', age: '16' },\\\\n  { value: 'green', label: 'Green', phoneNumber: '120009', age: '18' },\\\\n  { value: 'forest', label: 'Forest', phoneNumber: '0000000', age: '20' },\\\\n  { value: 'slate', label: 'Slate', phoneNumber: '11111111', age: '30' },\\\\n  { value: 'silver', label: 'Silver', phoneNumber: '22222222', age: '40' },\\\\n  { value: 'green1', label: 'Green1', phoneNumber: '120009', age: '18' },\\\\n  { value: 'forest1', label: 'Forest1', phoneNumber: '0000000', age: '20' },\\\\n  { value: 'slate1', label: 'Slate1', phoneNumber: '11111111', age: '30' },\\\\n  { value: 'silver1', label: 'Silver1', phoneNumber: '22222222', age: '40' }\\\\n]\\\\nconst selectedOptions = [\\\\n  { value: 'ocean', label: 'Ocean', phoneNumber: '1234', age: '10' },\\\\n  { value: 'blue', label: 'Blue', phoneNumber: '455556', age: '12' },\\\\n  { value: 'purple', label: 'Purple', phoneNumber: '67778', age: '13' },\\\\n  { value: 'red', label: 'Red', phoneNumber: '89990', age: '14' },\\\\n  { value: 'forest', label: 'Forest', phoneNumber: '0000000', age: '20' }\\\\n  // { value: 'slate', label: 'Slate', phoneNumber: '11111111', age: '30' }\\\\n]\\\\n\\\\nexport const withTextField = () => (\\\\n  <ThemeWrapper>\\\\n    <Box p='1em'>\\\\n      <MultiSelect\\\\n        id={text('id', 'Colors')}\\\\n        width={text('width', '300px')}\\\\n        options={object('Multi Select Options', options)}\\\\n        onChange={action('Multi Select changed')}\\\\n        style={object('styles', {\\\\n          position: 'absolute',\\\\n          top: 'auto',\\\\n          left: 'auto',\\\\n          marginTop: '-18px'\\\\n        })}\\\\n        isLoading={boolean('isLoading', false)}\\\\n        isNoOption={boolean('isNoOption', false)}\\\\n        menuOpen={boolean('menuOpen', false)}\\\\n        selected={object('selected', selectedOptions)}\\\\n        allowSelectAll={boolean('allowSelectAll', false)}\\\\n        maximumSelected={number('maximum Selected', 5)}\\\\n        defaultSelected={object('default Selected', selectedOptions)}\\\\n        searchableKeys={array('Searchable Keys', ['label', 'phoneNumber'])}\\\\n        resultLimit={number('resultLimit', 10)}\\\\n        onInputChange={action('on Input changed')}\\\\n      >\\\\n        {({ optionSelected, isMenuOpen, openMenu }: tMultiSelectChildren) => (\\\\n          <TextInput\\\\n            id='id'\\\\n            label='Color'\\\\n            labelColor='black'\\\\n            placeholder='Select ... '\\\\n            error={boolean('Text Input error', false)}\\\\n            errorMessage={text('error Message', 'Its an error Message')}\\\\n            disabled={boolean('disabled', false)}\\\\n            onClick={() => {\\\\n              openMenu(!isMenuOpen)\\\\n              action('MultiSelect open/closed')(isMenuOpen)\\\\n            }}\\\\n            value={\\\\n              optionSelected && optionSelected?.length > 0\\\\n                ? optionSelected?.length + ' Selected'\\\\n                : ''\\\\n            }\\\\n            read-only\\\\n          />\\\\n        )}\\\\n      </MultiSelect>\\\\n    </Box>\\\\n  </ThemeWrapper>\\\\n)\\\\n\\\",\\\"locationsMap\\\":{}},\\n    props: {\\n      propTablesExclude: [Box, ThemeWrapper, TextInput]\\n    }\\n  },}\\n\\nconst options = [\\n  { value: 'ocean', label: 'Ocean', phoneNumber: '1234', age: '10' },\\n  { value: 'blue', label: 'Blue', phoneNumber: '455556', age: '12' },\\n  { value: 'purple', label: 'Purple', phoneNumber: '67778', age: '13' },\\n  { value: 'red', label: 'Red', phoneNumber: '89990', age: '14' },\\n  { value: 'orange', label: 'Orange', phoneNumber: '001323', age: '15' },\\n  { value: 'yellow', label: 'Yellow', phoneNumber: '99243452', age: '16' },\\n  { value: 'green', label: 'Green', phoneNumber: '120009', age: '18' },\\n  { value: 'forest', label: 'Forest', phoneNumber: '0000000', age: '20' },\\n  { value: 'slate', label: 'Slate', phoneNumber: '11111111', age: '30' },\\n  { value: 'silver', label: 'Silver', phoneNumber: '22222222', age: '40' },\\n  { value: 'green1', label: 'Green1', phoneNumber: '120009', age: '18' },\\n  { value: 'forest1', label: 'Forest1', phoneNumber: '0000000', age: '20' },\\n  { value: 'slate1', label: 'Slate1', phoneNumber: '11111111', age: '30' },\\n  { value: 'silver1', label: 'Silver1', phoneNumber: '22222222', age: '40' }\\n]\\nconst selectedOptions = [\\n  { value: 'ocean', label: 'Ocean', phoneNumber: '1234', age: '10' },\\n  { value: 'blue', label: 'Blue', phoneNumber: '455556', age: '12' },\\n  { value: 'purple', label: 'Purple', phoneNumber: '67778', age: '13' },\\n  { value: 'red', label: 'Red', phoneNumber: '89990', age: '14' },\\n  { value: 'forest', label: 'Forest', phoneNumber: '0000000', age: '20' }\\n  // { value: 'slate', label: 'Slate', phoneNumber: '11111111', age: '30' }\\n]\\n\\nexport const withTextField = addSourceDecorator(addSourceDecorator(() => (\\n  <ThemeWrapper>\\n    <Box p='1em'>\\n      <MultiSelect\\n        id={text('id', 'Colors')}\\n        width={text('width', '300px')}\\n        options={object('Multi Select Options', options)}\\n        onChange={action('Multi Select changed')}\\n        style={object('styles', {\\n          position: 'absolute',\\n          top: 'auto',\\n          left: 'auto',\\n          marginTop: '-18px'\\n        })}\\n        isLoading={boolean('isLoading', false)}\\n        isNoOption={boolean('isNoOption', false)}\\n        menuOpen={boolean('menuOpen', false)}\\n        selected={object('selected', selectedOptions)}\\n        allowSelectAll={boolean('allowSelectAll', false)}\\n        maximumSelected={number('maximum Selected', 5)}\\n        defaultSelected={object('default Selected', selectedOptions)}\\n        searchableKeys={array('Searchable Keys', ['label', 'phoneNumber'])}\\n        resultLimit={number('resultLimit', 10)}\\n        onInputChange={action('on Input changed')}\\n      >\\n        {({ optionSelected, isMenuOpen, openMenu }: tMultiSelectChildren) => (\\n          <TextInput\\n            id='id'\\n            label='Color'\\n            labelColor='black'\\n            placeholder='Select ... '\\n            error={boolean('Text Input error', false)}\\n            errorMessage={text('error Message', 'Its an error Message')}\\n            disabled={boolean('disabled', false)}\\n            onClick={() => {\\n              openMenu(!isMenuOpen)\\n              action('MultiSelect open/closed')(isMenuOpen)\\n            }}\\n            value={\\n              optionSelected && optionSelected?.length > 0\\n                ? optionSelected?.length + ' Selected'\\n                : ''\\n            }\\n            read-only\\n          />\\n        )}\\n      </MultiSelect>\\n    </Box>\\n  </ThemeWrapper>\\n), {__STORY__, __ADDS_MAP__,__MAIN_FILE_LOCATION__,__MODULE_DEPENDENCIES__,__LOCAL_DEPENDENCIES__,__SOURCE_PREFIX__,__IDS_TO_FRAMEWORKS__}), {__STORY__, __ADDS_MAP__,__MAIN_FILE_LOCATION__,__MODULE_DEPENDENCIES__,__LOCAL_DEPENDENCIES__,__SOURCE_PREFIX__,__IDS_TO_FRAMEWORKS__});\"; // @ts-ignore\n\nvar __ADDS_MAP__ = {}; // @ts-ignore\n\nvar __MAIN_FILE_LOCATION__ = \"/withTextField.stories.tsx\"; // @ts-ignore\n\nvar __MODULE_DEPENDENCIES__ = []; // @ts-ignore\n\nvar __LOCAL_DEPENDENCIES__ = {}; // @ts-ignore\n\nvar __IDS_TO_FRAMEWORKS__ = {};\n/* eslint-disable */\n// @ts-nocheck\n// @ts-ignore\n\nvar withSourceLoader = require('@storybook/source-loader/preview').withSource; // @ts-ignore\n\n\nvar addSourceDecorator = require(\"@storybook/source-loader/preview\").addSource; // @ts-ignore\n\n\nvar __SOURCE_PREFIX__ = \"/Users/farhanansari/Code/ui-library/src/components/molecules/MultiSelect/stories\"; // @ts-ignore\n\nvar __STORY__ = \"\\n\\n// @ts-nocheck\\n// @ts-ignore\\nvar withSourceLoader = require('@storybook/source-loader/preview').withSource;\\n// @ts-ignore\\nvar addSourceDecorator = require(\\\"@storybook/source-loader/preview\\\").addSource;\\n// @ts-ignore\\nvar __SOURCE_PREFIX__ = \\\"/Users/farhanansari/Code/ui-library/src/components/molecules/MultiSelect/stories\\\";\\n// @ts-ignore\\nvar __STORY__ = \\\"import React from 'react'\\\\nimport MultiSelect from '../index'\\\\nimport Box from '../../../atoms/Box'\\\\nimport { path } from '../..'\\\\nimport ThemeWrapper from '../../../../utilities/components/ThemeWrapper'\\\\n\\\\nimport {\\\\n  boolean,\\\\n  text,\\\\n  object,\\\\n  withKnobs,\\\\n  number,\\\\n  array\\\\n} from '@storybook/addon-knobs'\\\\nimport { action } from '@storybook/addon-actions'\\\\nimport TextInput from '../../TextInput'\\\\nimport { tMultiSelectChildren } from '../interfaces'\\\\n\\\\nexport default {\\\\n  title: `${path}/MultiSelect`,\\\\n  component: MultiSelect,\\\\n  decorators: [withKnobs],\\\\n  parameters: {\\\\n    props: {\\\\n      propTablesExclude: [Box, ThemeWrapper, TextInput]\\\\n    }\\\\n  }\\\\n}\\\\n\\\\nconst options = [\\\\n  { value: 'ocean', label: 'Ocean', phoneNumber: '1234', age: '10' },\\\\n  { value: 'blue', label: 'Blue', phoneNumber: '455556', age: '12' },\\\\n  { value: 'purple', label: 'Purple', phoneNumber: '67778', age: '13' },\\\\n  { value: 'red', label: 'Red', phoneNumber: '89990', age: '14' },\\\\n  { value: 'orange', label: 'Orange', phoneNumber: '001323', age: '15' },\\\\n  { value: 'yellow', label: 'Yellow', phoneNumber: '99243452', age: '16' },\\\\n  { value: 'green', label: 'Green', phoneNumber: '120009', age: '18' },\\\\n  { value: 'forest', label: 'Forest', phoneNumber: '0000000', age: '20' },\\\\n  { value: 'slate', label: 'Slate', phoneNumber: '11111111', age: '30' },\\\\n  { value: 'silver', label: 'Silver', phoneNumber: '22222222', age: '40' },\\\\n  { value: 'green1', label: 'Green1', phoneNumber: '120009', age: '18' },\\\\n  { value: 'forest1', label: 'Forest1', phoneNumber: '0000000', age: '20' },\\\\n  { value: 'slate1', label: 'Slate1', phoneNumber: '11111111', age: '30' },\\\\n  { value: 'silver1', label: 'Silver1', phoneNumber: '22222222', age: '40' }\\\\n]\\\\nconst selectedOptions = [\\\\n  { value: 'ocean', label: 'Ocean', phoneNumber: '1234', age: '10' },\\\\n  { value: 'blue', label: 'Blue', phoneNumber: '455556', age: '12' },\\\\n  { value: 'purple', label: 'Purple', phoneNumber: '67778', age: '13' },\\\\n  { value: 'red', label: 'Red', phoneNumber: '89990', age: '14' },\\\\n  { value: 'forest', label: 'Forest', phoneNumber: '0000000', age: '20' }\\\\n  // { value: 'slate', label: 'Slate', phoneNumber: '11111111', age: '30' }\\\\n]\\\\n\\\\nexport const withTextField = () => (\\\\n  <ThemeWrapper>\\\\n    <Box p='1em'>\\\\n      <MultiSelect\\\\n        id={text('id', 'Colors')}\\\\n        width={text('width', '300px')}\\\\n        options={object('Multi Select Options', options)}\\\\n        onChange={action('Multi Select changed')}\\\\n        style={object('styles', {\\\\n          position: 'absolute',\\\\n          top: 'auto',\\\\n          left: 'auto',\\\\n          marginTop: '-18px'\\\\n        })}\\\\n        isLoading={boolean('isLoading', false)}\\\\n        isNoOption={boolean('isNoOption', false)}\\\\n        menuOpen={boolean('menuOpen', false)}\\\\n        selected={object('selected', selectedOptions)}\\\\n        allowSelectAll={boolean('allowSelectAll', false)}\\\\n        maximumSelected={number('maximum Selected', 5)}\\\\n        defaultSelected={object('default Selected', selectedOptions)}\\\\n        searchableKeys={array('Searchable Keys', ['label', 'phoneNumber'])}\\\\n        resultLimit={number('resultLimit', 10)}\\\\n        onInputChange={action('on Input changed')}\\\\n      >\\\\n        {({ optionSelected, isMenuOpen, openMenu }: tMultiSelectChildren) => (\\\\n          <TextInput\\\\n            id='id'\\\\n            label='Color'\\\\n            labelColor='black'\\\\n            placeholder='Select ... '\\\\n            error={boolean('Text Input error', false)}\\\\n            errorMessage={text('error Message', 'Its an error Message')}\\\\n            disabled={boolean('disabled', false)}\\\\n            onClick={() => {\\\\n              openMenu(!isMenuOpen)\\\\n              action('MultiSelect open/closed')(isMenuOpen)\\\\n            }}\\\\n            value={\\\\n              optionSelected && optionSelected?.length > 0\\\\n                ? optionSelected?.length + ' Selected'\\\\n                : ''\\\\n            }\\\\n            read-only\\\\n          />\\\\n        )}\\\\n      </MultiSelect>\\\\n    </Box>\\\\n  </ThemeWrapper>\\\\n)\\\\n\\\";\\n// @ts-ignore\\nvar __ADDS_MAP__ = {};\\n// @ts-ignore\\nvar __MAIN_FILE_LOCATION__ = \\\"/withTextField.stories.tsx\\\";\\n// @ts-ignore\\nvar __MODULE_DEPENDENCIES__ = [];\\n// @ts-ignore\\nvar __LOCAL_DEPENDENCIES__ = {};\\n// @ts-ignore\\nvar __IDS_TO_FRAMEWORKS__ = {};\\n        \\nimport React from 'react'\\nimport MultiSelect from '../index'\\nimport Box from '../../../atoms/Box'\\nimport { path } from '../..'\\nimport ThemeWrapper from '../../../../utilities/components/ThemeWrapper'\\n\\nimport {\\n  boolean,\\n  text,\\n  object,\\n  withKnobs,\\n  number,\\n  array\\n} from '@storybook/addon-knobs'\\nimport { action } from '@storybook/addon-actions'\\nimport TextInput from '../../TextInput'\\nimport { tMultiSelectChildren } from '../interfaces'\\n\\nexport default {\\n  title: `${path}/MultiSelect`,\\n  component: MultiSelect,\\n  decorators: [withKnobs],\\n  parameters: {\\\"storySource\\\":{\\\"source\\\":\\\"import React from 'react'\\\\nimport MultiSelect from '../index'\\\\nimport Box from '../../../atoms/Box'\\\\nimport { path } from '../..'\\\\nimport ThemeWrapper from '../../../../utilities/components/ThemeWrapper'\\\\n\\\\nimport {\\\\n  boolean,\\\\n  text,\\\\n  object,\\\\n  withKnobs,\\\\n  number,\\\\n  array\\\\n} from '@storybook/addon-knobs'\\\\nimport { action } from '@storybook/addon-actions'\\\\nimport TextInput from '../../TextInput'\\\\nimport { tMultiSelectChildren } from '../interfaces'\\\\n\\\\nexport default {\\\\n  title: `${path}/MultiSelect`,\\\\n  component: MultiSelect,\\\\n  decorators: [withKnobs],\\\\n  parameters: {\\\\n    props: {\\\\n      propTablesExclude: [Box, ThemeWrapper, TextInput]\\\\n    }\\\\n  }\\\\n}\\\\n\\\\nconst options = [\\\\n  { value: 'ocean', label: 'Ocean', phoneNumber: '1234', age: '10' },\\\\n  { value: 'blue', label: 'Blue', phoneNumber: '455556', age: '12' },\\\\n  { value: 'purple', label: 'Purple', phoneNumber: '67778', age: '13' },\\\\n  { value: 'red', label: 'Red', phoneNumber: '89990', age: '14' },\\\\n  { value: 'orange', label: 'Orange', phoneNumber: '001323', age: '15' },\\\\n  { value: 'yellow', label: 'Yellow', phoneNumber: '99243452', age: '16' },\\\\n  { value: 'green', label: 'Green', phoneNumber: '120009', age: '18' },\\\\n  { value: 'forest', label: 'Forest', phoneNumber: '0000000', age: '20' },\\\\n  { value: 'slate', label: 'Slate', phoneNumber: '11111111', age: '30' },\\\\n  { value: 'silver', label: 'Silver', phoneNumber: '22222222', age: '40' },\\\\n  { value: 'green1', label: 'Green1', phoneNumber: '120009', age: '18' },\\\\n  { value: 'forest1', label: 'Forest1', phoneNumber: '0000000', age: '20' },\\\\n  { value: 'slate1', label: 'Slate1', phoneNumber: '11111111', age: '30' },\\\\n  { value: 'silver1', label: 'Silver1', phoneNumber: '22222222', age: '40' }\\\\n]\\\\nconst selectedOptions = [\\\\n  { value: 'ocean', label: 'Ocean', phoneNumber: '1234', age: '10' },\\\\n  { value: 'blue', label: 'Blue', phoneNumber: '455556', age: '12' },\\\\n  { value: 'purple', label: 'Purple', phoneNumber: '67778', age: '13' },\\\\n  { value: 'red', label: 'Red', phoneNumber: '89990', age: '14' },\\\\n  { value: 'forest', label: 'Forest', phoneNumber: '0000000', age: '20' }\\\\n  // { value: 'slate', label: 'Slate', phoneNumber: '11111111', age: '30' }\\\\n]\\\\n\\\\nexport const withTextField = () => (\\\\n  <ThemeWrapper>\\\\n    <Box p='1em'>\\\\n      <MultiSelect\\\\n        id={text('id', 'Colors')}\\\\n        width={text('width', '300px')}\\\\n        options={object('Multi Select Options', options)}\\\\n        onChange={action('Multi Select changed')}\\\\n        style={object('styles', {\\\\n          position: 'absolute',\\\\n          top: 'auto',\\\\n          left: 'auto',\\\\n          marginTop: '-18px'\\\\n        })}\\\\n        isLoading={boolean('isLoading', false)}\\\\n        isNoOption={boolean('isNoOption', false)}\\\\n        menuOpen={boolean('menuOpen', false)}\\\\n        selected={object('selected', selectedOptions)}\\\\n        allowSelectAll={boolean('allowSelectAll', false)}\\\\n        maximumSelected={number('maximum Selected', 5)}\\\\n        defaultSelected={object('default Selected', selectedOptions)}\\\\n        searchableKeys={array('Searchable Keys', ['label', 'phoneNumber'])}\\\\n        resultLimit={number('resultLimit', 10)}\\\\n        onInputChange={action('on Input changed')}\\\\n      >\\\\n        {({ optionSelected, isMenuOpen, openMenu }: tMultiSelectChildren) => (\\\\n          <TextInput\\\\n            id='id'\\\\n            label='Color'\\\\n            labelColor='black'\\\\n            placeholder='Select ... '\\\\n            error={boolean('Text Input error', false)}\\\\n            errorMessage={text('error Message', 'Its an error Message')}\\\\n            disabled={boolean('disabled', false)}\\\\n            onClick={() => {\\\\n              openMenu(!isMenuOpen)\\\\n              action('MultiSelect open/closed')(isMenuOpen)\\\\n            }}\\\\n            value={\\\\n              optionSelected && optionSelected?.length > 0\\\\n                ? optionSelected?.length + ' Selected'\\\\n                : ''\\\\n            }\\\\n            read-only\\\\n          />\\\\n        )}\\\\n      </MultiSelect>\\\\n    </Box>\\\\n  </ThemeWrapper>\\\\n)\\\\n\\\",\\\"locationsMap\\\":{}},\\n    props: {\\n      propTablesExclude: [Box, ThemeWrapper, TextInput]\\n    }\\n  },}\\n\\nconst options = [\\n  { value: 'ocean', label: 'Ocean', phoneNumber: '1234', age: '10' },\\n  { value: 'blue', label: 'Blue', phoneNumber: '455556', age: '12' },\\n  { value: 'purple', label: 'Purple', phoneNumber: '67778', age: '13' },\\n  { value: 'red', label: 'Red', phoneNumber: '89990', age: '14' },\\n  { value: 'orange', label: 'Orange', phoneNumber: '001323', age: '15' },\\n  { value: 'yellow', label: 'Yellow', phoneNumber: '99243452', age: '16' },\\n  { value: 'green', label: 'Green', phoneNumber: '120009', age: '18' },\\n  { value: 'forest', label: 'Forest', phoneNumber: '0000000', age: '20' },\\n  { value: 'slate', label: 'Slate', phoneNumber: '11111111', age: '30' },\\n  { value: 'silver', label: 'Silver', phoneNumber: '22222222', age: '40' },\\n  { value: 'green1', label: 'Green1', phoneNumber: '120009', age: '18' },\\n  { value: 'forest1', label: 'Forest1', phoneNumber: '0000000', age: '20' },\\n  { value: 'slate1', label: 'Slate1', phoneNumber: '11111111', age: '30' },\\n  { value: 'silver1', label: 'Silver1', phoneNumber: '22222222', age: '40' }\\n]\\nconst selectedOptions = [\\n  { value: 'ocean', label: 'Ocean', phoneNumber: '1234', age: '10' },\\n  { value: 'blue', label: 'Blue', phoneNumber: '455556', age: '12' },\\n  { value: 'purple', label: 'Purple', phoneNumber: '67778', age: '13' },\\n  { value: 'red', label: 'Red', phoneNumber: '89990', age: '14' },\\n  { value: 'forest', label: 'Forest', phoneNumber: '0000000', age: '20' }\\n  // { value: 'slate', label: 'Slate', phoneNumber: '11111111', age: '30' }\\n]\\n\\nexport const withTextField = addSourceDecorator(() => (\\n  <ThemeWrapper>\\n    <Box p='1em'>\\n      <MultiSelect\\n        id={text('id', 'Colors')}\\n        width={text('width', '300px')}\\n        options={object('Multi Select Options', options)}\\n        onChange={action('Multi Select changed')}\\n        style={object('styles', {\\n          position: 'absolute',\\n          top: 'auto',\\n          left: 'auto',\\n          marginTop: '-18px'\\n        })}\\n        isLoading={boolean('isLoading', false)}\\n        isNoOption={boolean('isNoOption', false)}\\n        menuOpen={boolean('menuOpen', false)}\\n        selected={object('selected', selectedOptions)}\\n        allowSelectAll={boolean('allowSelectAll', false)}\\n        maximumSelected={number('maximum Selected', 5)}\\n        defaultSelected={object('default Selected', selectedOptions)}\\n        searchableKeys={array('Searchable Keys', ['label', 'phoneNumber'])}\\n        resultLimit={number('resultLimit', 10)}\\n        onInputChange={action('on Input changed')}\\n      >\\n        {({ optionSelected, isMenuOpen, openMenu }: tMultiSelectChildren) => (\\n          <TextInput\\n            id='id'\\n            label='Color'\\n            labelColor='black'\\n            placeholder='Select ... '\\n            error={boolean('Text Input error', false)}\\n            errorMessage={text('error Message', 'Its an error Message')}\\n            disabled={boolean('disabled', false)}\\n            onClick={() => {\\n              openMenu(!isMenuOpen)\\n              action('MultiSelect open/closed')(isMenuOpen)\\n            }}\\n            value={\\n              optionSelected && optionSelected?.length > 0\\n                ? optionSelected?.length + ' Selected'\\n                : ''\\n            }\\n            read-only\\n          />\\n        )}\\n      </MultiSelect>\\n    </Box>\\n  </ThemeWrapper>\\n), {__STORY__, __ADDS_MAP__,__MAIN_FILE_LOCATION__,__MODULE_DEPENDENCIES__,__LOCAL_DEPENDENCIES__,__SOURCE_PREFIX__,__IDS_TO_FRAMEWORKS__});\"; // @ts-ignore\n\nvar __ADDS_MAP__ = {}; // @ts-ignore\n\nvar __MAIN_FILE_LOCATION__ = \"/withTextField.stories.tsx\"; // @ts-ignore\n\nvar __MODULE_DEPENDENCIES__ = []; // @ts-ignore\n\nvar __LOCAL_DEPENDENCIES__ = {}; // @ts-ignore\n\nvar __IDS_TO_FRAMEWORKS__ = {};\n/* eslint-disable */\n// @ts-nocheck\n// @ts-ignore\n\nvar withSourceLoader = require('@storybook/source-loader/preview').withSource; // @ts-ignore\n\n\nvar addSourceDecorator = require(\"@storybook/source-loader/preview\").addSource; // @ts-ignore\n\n\nvar __SOURCE_PREFIX__ = \"/Users/farhanansari/Code/ui-library/src/components/molecules/MultiSelect/stories\"; // @ts-ignore\n\nvar __STORY__ = \"import React from 'react'\\nimport MultiSelect from '../index'\\nimport Box from '../../../atoms/Box'\\nimport { path } from '../..'\\nimport ThemeWrapper from '../../../../utilities/components/ThemeWrapper'\\n\\nimport {\\n  boolean,\\n  text,\\n  object,\\n  withKnobs,\\n  number,\\n  array\\n} from '@storybook/addon-knobs'\\nimport { action } from '@storybook/addon-actions'\\nimport TextInput from '../../TextInput'\\nimport { tMultiSelectChildren } from '../interfaces'\\n\\nexport default {\\n  title: `${path}/MultiSelect`,\\n  component: MultiSelect,\\n  decorators: [withKnobs],\\n  parameters: {\\n    props: {\\n      propTablesExclude: [Box, ThemeWrapper, TextInput]\\n    }\\n  }\\n}\\n\\nconst options = [\\n  { value: 'ocean', label: 'Ocean', phoneNumber: '1234', age: '10' },\\n  { value: 'blue', label: 'Blue', phoneNumber: '455556', age: '12' },\\n  { value: 'purple', label: 'Purple', phoneNumber: '67778', age: '13' },\\n  { value: 'red', label: 'Red', phoneNumber: '89990', age: '14' },\\n  { value: 'orange', label: 'Orange', phoneNumber: '001323', age: '15' },\\n  { value: 'yellow', label: 'Yellow', phoneNumber: '99243452', age: '16' },\\n  { value: 'green', label: 'Green', phoneNumber: '120009', age: '18' },\\n  { value: 'forest', label: 'Forest', phoneNumber: '0000000', age: '20' },\\n  { value: 'slate', label: 'Slate', phoneNumber: '11111111', age: '30' },\\n  { value: 'silver', label: 'Silver', phoneNumber: '22222222', age: '40' },\\n  { value: 'green1', label: 'Green1', phoneNumber: '120009', age: '18' },\\n  { value: 'forest1', label: 'Forest1', phoneNumber: '0000000', age: '20' },\\n  { value: 'slate1', label: 'Slate1', phoneNumber: '11111111', age: '30' },\\n  { value: 'silver1', label: 'Silver1', phoneNumber: '22222222', age: '40' }\\n]\\nconst selectedOptions = [\\n  { value: 'ocean', label: 'Ocean', phoneNumber: '1234', age: '10' },\\n  { value: 'blue', label: 'Blue', phoneNumber: '455556', age: '12' },\\n  { value: 'purple', label: 'Purple', phoneNumber: '67778', age: '13' },\\n  { value: 'red', label: 'Red', phoneNumber: '89990', age: '14' },\\n  { value: 'forest', label: 'Forest', phoneNumber: '0000000', age: '20' }\\n  // { value: 'slate', label: 'Slate', phoneNumber: '11111111', age: '30' }\\n]\\n\\nexport const withTextField = () => (\\n  <ThemeWrapper>\\n    <Box p='1em'>\\n      <MultiSelect\\n        id={text('id', 'Colors')}\\n        width={text('width', '300px')}\\n        options={object('Multi Select Options', options)}\\n        onChange={action('Multi Select changed')}\\n        style={object('styles', {\\n          position: 'absolute',\\n          top: 'auto',\\n          left: 'auto',\\n          marginTop: '-18px'\\n        })}\\n        isLoading={boolean('isLoading', false)}\\n        isNoOption={boolean('isNoOption', false)}\\n        menuOpen={boolean('menuOpen', false)}\\n        selected={object('selected', selectedOptions)}\\n        allowSelectAll={boolean('allowSelectAll', false)}\\n        maximumSelected={number('maximum Selected', 5)}\\n        defaultSelected={object('default Selected', selectedOptions)}\\n        searchableKeys={array('Searchable Keys', ['label', 'phoneNumber'])}\\n        resultLimit={number('resultLimit', 10)}\\n        onInputChange={action('on Input changed')}\\n      >\\n        {({ optionSelected, isMenuOpen, openMenu }: tMultiSelectChildren) => (\\n          <TextInput\\n            id='id'\\n            label='Color'\\n            labelColor='black'\\n            placeholder='Select ... '\\n            error={boolean('Text Input error', false)}\\n            errorMessage={text('error Message', 'Its an error Message')}\\n            disabled={boolean('disabled', false)}\\n            onClick={() => {\\n              openMenu(!isMenuOpen)\\n              action('MultiSelect open/closed')(isMenuOpen)\\n            }}\\n            value={\\n              optionSelected && optionSelected?.length > 0\\n                ? optionSelected?.length + ' Selected'\\n                : ''\\n            }\\n            read-only\\n          />\\n        )}\\n      </MultiSelect>\\n    </Box>\\n  </ThemeWrapper>\\n)\\n\"; // @ts-ignore\n\nvar __ADDS_MAP__ = {}; // @ts-ignore\n\nvar __MAIN_FILE_LOCATION__ = \"/withTextField.stories.tsx\"; // @ts-ignore\n\nvar __MODULE_DEPENDENCIES__ = []; // @ts-ignore\n\nvar __LOCAL_DEPENDENCIES__ = {}; // @ts-ignore\n\nvar __IDS_TO_FRAMEWORKS__ = {};\nimport React from 'react';\nimport MultiSelect from '../index';\nimport Box from '../../../atoms/Box';\nimport { path } from '../..';\nimport ThemeWrapper from '../../../../utilities/components/ThemeWrapper';\nimport { boolean as _boolean, text, object, withKnobs, number, array } from '@storybook/addon-knobs';\nimport { action } from '@storybook/addon-actions';\nimport TextInput from '../../TextInput';\nexport default {\n  title: path + \"/MultiSelect\",\n  component: MultiSelect,\n  decorators: [withKnobs],\n  parameters: (_parameters = {\n    \"storySource\": {\n      \"source\": \"\\n\\n// @ts-nocheck\\n// @ts-ignore\\nvar withSourceLoader = require('@storybook/source-loader/preview').withSource;\\n// @ts-ignore\\nvar addSourceDecorator = require(\\\"@storybook/source-loader/preview\\\").addSource;\\n// @ts-ignore\\nvar __SOURCE_PREFIX__ = \\\"/Users/farhanansari/Code/ui-library/src/components/molecules/MultiSelect/stories\\\";\\n// @ts-ignore\\nvar __STORY__ = \\\"\\\\n\\\\n// @ts-nocheck\\\\n// @ts-ignore\\\\nvar withSourceLoader = require('@storybook/source-loader/preview').withSource;\\\\n// @ts-ignore\\\\nvar addSourceDecorator = require(\\\\\\\"@storybook/source-loader/preview\\\\\\\").addSource;\\\\n// @ts-ignore\\\\nvar __SOURCE_PREFIX__ = \\\\\\\"/Users/farhanansari/Code/ui-library/src/components/molecules/MultiSelect/stories\\\\\\\";\\\\n// @ts-ignore\\\\nvar __STORY__ = \\\\\\\"import React from 'react'\\\\\\\\nimport MultiSelect from '../index'\\\\\\\\nimport Box from '../../../atoms/Box'\\\\\\\\nimport { path } from '../..'\\\\\\\\nimport ThemeWrapper from '../../../../utilities/components/ThemeWrapper'\\\\\\\\n\\\\\\\\nimport {\\\\\\\\n  boolean,\\\\\\\\n  text,\\\\\\\\n  object,\\\\\\\\n  withKnobs,\\\\\\\\n  number,\\\\\\\\n  array\\\\\\\\n} from '@storybook/addon-knobs'\\\\\\\\nimport { action } from '@storybook/addon-actions'\\\\\\\\nimport TextInput from '../../TextInput'\\\\\\\\nimport { tMultiSelectChildren } from '../interfaces'\\\\\\\\n\\\\\\\\nexport default {\\\\\\\\n  title: `${path}/MultiSelect`,\\\\\\\\n  component: MultiSelect,\\\\\\\\n  decorators: [withKnobs],\\\\\\\\n  parameters: {\\\\\\\\n    props: {\\\\\\\\n      propTablesExclude: [Box, ThemeWrapper, TextInput]\\\\\\\\n    }\\\\\\\\n  }\\\\\\\\n}\\\\\\\\n\\\\\\\\nconst options = [\\\\\\\\n  { value: 'ocean', label: 'Ocean', phoneNumber: '1234', age: '10' },\\\\\\\\n  { value: 'blue', label: 'Blue', phoneNumber: '455556', age: '12' },\\\\\\\\n  { value: 'purple', label: 'Purple', phoneNumber: '67778', age: '13' },\\\\\\\\n  { value: 'red', label: 'Red', phoneNumber: '89990', age: '14' },\\\\\\\\n  { value: 'orange', label: 'Orange', phoneNumber: '001323', age: '15' },\\\\\\\\n  { value: 'yellow', label: 'Yellow', phoneNumber: '99243452', age: '16' },\\\\\\\\n  { value: 'green', label: 'Green', phoneNumber: '120009', age: '18' },\\\\\\\\n  { value: 'forest', label: 'Forest', phoneNumber: '0000000', age: '20' },\\\\\\\\n  { value: 'slate', label: 'Slate', phoneNumber: '11111111', age: '30' },\\\\\\\\n  { value: 'silver', label: 'Silver', phoneNumber: '22222222', age: '40' },\\\\\\\\n  { value: 'green1', label: 'Green1', phoneNumber: '120009', age: '18' },\\\\\\\\n  { value: 'forest1', label: 'Forest1', phoneNumber: '0000000', age: '20' },\\\\\\\\n  { value: 'slate1', label: 'Slate1', phoneNumber: '11111111', age: '30' },\\\\\\\\n  { value: 'silver1', label: 'Silver1', phoneNumber: '22222222', age: '40' }\\\\\\\\n]\\\\\\\\nconst selectedOptions = [\\\\\\\\n  { value: 'ocean', label: 'Ocean', phoneNumber: '1234', age: '10' },\\\\\\\\n  { value: 'blue', label: 'Blue', phoneNumber: '455556', age: '12' },\\\\\\\\n  { value: 'purple', label: 'Purple', phoneNumber: '67778', age: '13' },\\\\\\\\n  { value: 'red', label: 'Red', phoneNumber: '89990', age: '14' },\\\\\\\\n  { value: 'forest', label: 'Forest', phoneNumber: '0000000', age: '20' }\\\\\\\\n  // { value: 'slate', label: 'Slate', phoneNumber: '11111111', age: '30' }\\\\\\\\n]\\\\\\\\n\\\\\\\\nexport const withTextField = () => (\\\\\\\\n  <ThemeWrapper>\\\\\\\\n    <Box p='1em'>\\\\\\\\n      <MultiSelect\\\\\\\\n        id={text('id', 'Colors')}\\\\\\\\n        width={text('width', '300px')}\\\\\\\\n        options={object('Multi Select Options', options)}\\\\\\\\n        onChange={action('Multi Select changed')}\\\\\\\\n        style={object('styles', {\\\\\\\\n          position: 'absolute',\\\\\\\\n          top: 'auto',\\\\\\\\n          left: 'auto',\\\\\\\\n          marginTop: '-18px'\\\\\\\\n        })}\\\\\\\\n        isLoading={boolean('isLoading', false)}\\\\\\\\n        isNoOption={boolean('isNoOption', false)}\\\\\\\\n        menuOpen={boolean('menuOpen', false)}\\\\\\\\n        selected={object('selected', selectedOptions)}\\\\\\\\n        allowSelectAll={boolean('allowSelectAll', false)}\\\\\\\\n        maximumSelected={number('maximum Selected', 5)}\\\\\\\\n        defaultSelected={object('default Selected', selectedOptions)}\\\\\\\\n        searchableKeys={array('Searchable Keys', ['label', 'phoneNumber'])}\\\\\\\\n        resultLimit={number('resultLimit', 10)}\\\\\\\\n        onInputChange={action('on Input changed')}\\\\\\\\n      >\\\\\\\\n        {({ optionSelected, isMenuOpen, openMenu }: tMultiSelectChildren) => (\\\\\\\\n          <TextInput\\\\\\\\n            id='id'\\\\\\\\n            label='Color'\\\\\\\\n            labelColor='black'\\\\\\\\n            placeholder='Select ... '\\\\\\\\n            error={boolean('Text Input error', false)}\\\\\\\\n            errorMessage={text('error Message', 'Its an error Message')}\\\\\\\\n            disabled={boolean('disabled', false)}\\\\\\\\n            onClick={() => {\\\\\\\\n              openMenu(!isMenuOpen)\\\\\\\\n              action('MultiSelect open/closed')(isMenuOpen)\\\\\\\\n            }}\\\\\\\\n            value={\\\\\\\\n              optionSelected && optionSelected?.length > 0\\\\\\\\n                ? optionSelected?.length + ' Selected'\\\\\\\\n                : ''\\\\\\\\n            }\\\\\\\\n            read-only\\\\\\\\n          />\\\\\\\\n        )}\\\\\\\\n      </MultiSelect>\\\\\\\\n    </Box>\\\\\\\\n  </ThemeWrapper>\\\\\\\\n)\\\\\\\\n\\\\\\\";\\\\n// @ts-ignore\\\\nvar __ADDS_MAP__ = {};\\\\n// @ts-ignore\\\\nvar __MAIN_FILE_LOCATION__ = \\\\\\\"/withTextField.stories.tsx\\\\\\\";\\\\n// @ts-ignore\\\\nvar __MODULE_DEPENDENCIES__ = [];\\\\n// @ts-ignore\\\\nvar __LOCAL_DEPENDENCIES__ = {};\\\\n// @ts-ignore\\\\nvar __IDS_TO_FRAMEWORKS__ = {};\\\\n        \\\\nimport React from 'react'\\\\nimport MultiSelect from '../index'\\\\nimport Box from '../../../atoms/Box'\\\\nimport { path } from '../..'\\\\nimport ThemeWrapper from '../../../../utilities/components/ThemeWrapper'\\\\n\\\\nimport {\\\\n  boolean,\\\\n  text,\\\\n  object,\\\\n  withKnobs,\\\\n  number,\\\\n  array\\\\n} from '@storybook/addon-knobs'\\\\nimport { action } from '@storybook/addon-actions'\\\\nimport TextInput from '../../TextInput'\\\\nimport { tMultiSelectChildren } from '../interfaces'\\\\n\\\\nexport default {\\\\n  title: `${path}/MultiSelect`,\\\\n  component: MultiSelect,\\\\n  decorators: [withKnobs],\\\\n  parameters: {\\\\\\\"storySource\\\\\\\":{\\\\\\\"source\\\\\\\":\\\\\\\"import React from 'react'\\\\\\\\nimport MultiSelect from '../index'\\\\\\\\nimport Box from '../../../atoms/Box'\\\\\\\\nimport { path } from '../..'\\\\\\\\nimport ThemeWrapper from '../../../../utilities/components/ThemeWrapper'\\\\\\\\n\\\\\\\\nimport {\\\\\\\\n  boolean,\\\\\\\\n  text,\\\\\\\\n  object,\\\\\\\\n  withKnobs,\\\\\\\\n  number,\\\\\\\\n  array\\\\\\\\n} from '@storybook/addon-knobs'\\\\\\\\nimport { action } from '@storybook/addon-actions'\\\\\\\\nimport TextInput from '../../TextInput'\\\\\\\\nimport { tMultiSelectChildren } from '../interfaces'\\\\\\\\n\\\\\\\\nexport default {\\\\\\\\n  title: `${path}/MultiSelect`,\\\\\\\\n  component: MultiSelect,\\\\\\\\n  decorators: [withKnobs],\\\\\\\\n  parameters: {\\\\\\\\n    props: {\\\\\\\\n      propTablesExclude: [Box, ThemeWrapper, TextInput]\\\\\\\\n    }\\\\\\\\n  }\\\\\\\\n}\\\\\\\\n\\\\\\\\nconst options = [\\\\\\\\n  { value: 'ocean', label: 'Ocean', phoneNumber: '1234', age: '10' },\\\\\\\\n  { value: 'blue', label: 'Blue', phoneNumber: '455556', age: '12' },\\\\\\\\n  { value: 'purple', label: 'Purple', phoneNumber: '67778', age: '13' },\\\\\\\\n  { value: 'red', label: 'Red', phoneNumber: '89990', age: '14' },\\\\\\\\n  { value: 'orange', label: 'Orange', phoneNumber: '001323', age: '15' },\\\\\\\\n  { value: 'yellow', label: 'Yellow', phoneNumber: '99243452', age: '16' },\\\\\\\\n  { value: 'green', label: 'Green', phoneNumber: '120009', age: '18' },\\\\\\\\n  { value: 'forest', label: 'Forest', phoneNumber: '0000000', age: '20' },\\\\\\\\n  { value: 'slate', label: 'Slate', phoneNumber: '11111111', age: '30' },\\\\\\\\n  { value: 'silver', label: 'Silver', phoneNumber: '22222222', age: '40' },\\\\\\\\n  { value: 'green1', label: 'Green1', phoneNumber: '120009', age: '18' },\\\\\\\\n  { value: 'forest1', label: 'Forest1', phoneNumber: '0000000', age: '20' },\\\\\\\\n  { value: 'slate1', label: 'Slate1', phoneNumber: '11111111', age: '30' },\\\\\\\\n  { value: 'silver1', label: 'Silver1', phoneNumber: '22222222', age: '40' }\\\\\\\\n]\\\\\\\\nconst selectedOptions = [\\\\\\\\n  { value: 'ocean', label: 'Ocean', phoneNumber: '1234', age: '10' },\\\\\\\\n  { value: 'blue', label: 'Blue', phoneNumber: '455556', age: '12' },\\\\\\\\n  { value: 'purple', label: 'Purple', phoneNumber: '67778', age: '13' },\\\\\\\\n  { value: 'red', label: 'Red', phoneNumber: '89990', age: '14' },\\\\\\\\n  { value: 'forest', label: 'Forest', phoneNumber: '0000000', age: '20' }\\\\\\\\n  // { value: 'slate', label: 'Slate', phoneNumber: '11111111', age: '30' }\\\\\\\\n]\\\\\\\\n\\\\\\\\nexport const withTextField = () => (\\\\\\\\n  <ThemeWrapper>\\\\\\\\n    <Box p='1em'>\\\\\\\\n      <MultiSelect\\\\\\\\n        id={text('id', 'Colors')}\\\\\\\\n        width={text('width', '300px')}\\\\\\\\n        options={object('Multi Select Options', options)}\\\\\\\\n        onChange={action('Multi Select changed')}\\\\\\\\n        style={object('styles', {\\\\\\\\n          position: 'absolute',\\\\\\\\n          top: 'auto',\\\\\\\\n          left: 'auto',\\\\\\\\n          marginTop: '-18px'\\\\\\\\n        })}\\\\\\\\n        isLoading={boolean('isLoading', false)}\\\\\\\\n        isNoOption={boolean('isNoOption', false)}\\\\\\\\n        menuOpen={boolean('menuOpen', false)}\\\\\\\\n        selected={object('selected', selectedOptions)}\\\\\\\\n        allowSelectAll={boolean('allowSelectAll', false)}\\\\\\\\n        maximumSelected={number('maximum Selected', 5)}\\\\\\\\n        defaultSelected={object('default Selected', selectedOptions)}\\\\\\\\n        searchableKeys={array('Searchable Keys', ['label', 'phoneNumber'])}\\\\\\\\n        resultLimit={number('resultLimit', 10)}\\\\\\\\n        onInputChange={action('on Input changed')}\\\\\\\\n      >\\\\\\\\n        {({ optionSelected, isMenuOpen, openMenu }: tMultiSelectChildren) => (\\\\\\\\n          <TextInput\\\\\\\\n            id='id'\\\\\\\\n            label='Color'\\\\\\\\n            labelColor='black'\\\\\\\\n            placeholder='Select ... '\\\\\\\\n            error={boolean('Text Input error', false)}\\\\\\\\n            errorMessage={text('error Message', 'Its an error Message')}\\\\\\\\n            disabled={boolean('disabled', false)}\\\\\\\\n            onClick={() => {\\\\\\\\n              openMenu(!isMenuOpen)\\\\\\\\n              action('MultiSelect open/closed')(isMenuOpen)\\\\\\\\n            }}\\\\\\\\n            value={\\\\\\\\n              optionSelected && optionSelected?.length > 0\\\\\\\\n                ? optionSelected?.length + ' Selected'\\\\\\\\n                : ''\\\\\\\\n            }\\\\\\\\n            read-only\\\\\\\\n          />\\\\\\\\n        )}\\\\\\\\n      </MultiSelect>\\\\\\\\n    </Box>\\\\\\\\n  </ThemeWrapper>\\\\\\\\n)\\\\\\\\n\\\\\\\",\\\\\\\"locationsMap\\\\\\\":{}},\\\\n    props: {\\\\n      propTablesExclude: [Box, ThemeWrapper, TextInput]\\\\n    }\\\\n  },}\\\\n\\\\nconst options = [\\\\n  { value: 'ocean', label: 'Ocean', phoneNumber: '1234', age: '10' },\\\\n  { value: 'blue', label: 'Blue', phoneNumber: '455556', age: '12' },\\\\n  { value: 'purple', label: 'Purple', phoneNumber: '67778', age: '13' },\\\\n  { value: 'red', label: 'Red', phoneNumber: '89990', age: '14' },\\\\n  { value: 'orange', label: 'Orange', phoneNumber: '001323', age: '15' },\\\\n  { value: 'yellow', label: 'Yellow', phoneNumber: '99243452', age: '16' },\\\\n  { value: 'green', label: 'Green', phoneNumber: '120009', age: '18' },\\\\n  { value: 'forest', label: 'Forest', phoneNumber: '0000000', age: '20' },\\\\n  { value: 'slate', label: 'Slate', phoneNumber: '11111111', age: '30' },\\\\n  { value: 'silver', label: 'Silver', phoneNumber: '22222222', age: '40' },\\\\n  { value: 'green1', label: 'Green1', phoneNumber: '120009', age: '18' },\\\\n  { value: 'forest1', label: 'Forest1', phoneNumber: '0000000', age: '20' },\\\\n  { value: 'slate1', label: 'Slate1', phoneNumber: '11111111', age: '30' },\\\\n  { value: 'silver1', label: 'Silver1', phoneNumber: '22222222', age: '40' }\\\\n]\\\\nconst selectedOptions = [\\\\n  { value: 'ocean', label: 'Ocean', phoneNumber: '1234', age: '10' },\\\\n  { value: 'blue', label: 'Blue', phoneNumber: '455556', age: '12' },\\\\n  { value: 'purple', label: 'Purple', phoneNumber: '67778', age: '13' },\\\\n  { value: 'red', label: 'Red', phoneNumber: '89990', age: '14' },\\\\n  { value: 'forest', label: 'Forest', phoneNumber: '0000000', age: '20' }\\\\n  // { value: 'slate', label: 'Slate', phoneNumber: '11111111', age: '30' }\\\\n]\\\\n\\\\nexport const withTextField = addSourceDecorator(() => (\\\\n  <ThemeWrapper>\\\\n    <Box p='1em'>\\\\n      <MultiSelect\\\\n        id={text('id', 'Colors')}\\\\n        width={text('width', '300px')}\\\\n        options={object('Multi Select Options', options)}\\\\n        onChange={action('Multi Select changed')}\\\\n        style={object('styles', {\\\\n          position: 'absolute',\\\\n          top: 'auto',\\\\n          left: 'auto',\\\\n          marginTop: '-18px'\\\\n        })}\\\\n        isLoading={boolean('isLoading', false)}\\\\n        isNoOption={boolean('isNoOption', false)}\\\\n        menuOpen={boolean('menuOpen', false)}\\\\n        selected={object('selected', selectedOptions)}\\\\n        allowSelectAll={boolean('allowSelectAll', false)}\\\\n        maximumSelected={number('maximum Selected', 5)}\\\\n        defaultSelected={object('default Selected', selectedOptions)}\\\\n        searchableKeys={array('Searchable Keys', ['label', 'phoneNumber'])}\\\\n        resultLimit={number('resultLimit', 10)}\\\\n        onInputChange={action('on Input changed')}\\\\n      >\\\\n        {({ optionSelected, isMenuOpen, openMenu }: tMultiSelectChildren) => (\\\\n          <TextInput\\\\n            id='id'\\\\n            label='Color'\\\\n            labelColor='black'\\\\n            placeholder='Select ... '\\\\n            error={boolean('Text Input error', false)}\\\\n            errorMessage={text('error Message', 'Its an error Message')}\\\\n            disabled={boolean('disabled', false)}\\\\n            onClick={() => {\\\\n              openMenu(!isMenuOpen)\\\\n              action('MultiSelect open/closed')(isMenuOpen)\\\\n            }}\\\\n            value={\\\\n              optionSelected && optionSelected?.length > 0\\\\n                ? optionSelected?.length + ' Selected'\\\\n                : ''\\\\n            }\\\\n            read-only\\\\n          />\\\\n        )}\\\\n      </MultiSelect>\\\\n    </Box>\\\\n  </ThemeWrapper>\\\\n), {__STORY__, __ADDS_MAP__,__MAIN_FILE_LOCATION__,__MODULE_DEPENDENCIES__,__LOCAL_DEPENDENCIES__,__SOURCE_PREFIX__,__IDS_TO_FRAMEWORKS__});\\\";\\n// @ts-ignore\\nvar __ADDS_MAP__ = {};\\n// @ts-ignore\\nvar __MAIN_FILE_LOCATION__ = \\\"/withTextField.stories.tsx\\\";\\n// @ts-ignore\\nvar __MODULE_DEPENDENCIES__ = [];\\n// @ts-ignore\\nvar __LOCAL_DEPENDENCIES__ = {};\\n// @ts-ignore\\nvar __IDS_TO_FRAMEWORKS__ = {};\\n        \\n\\n\\n// @ts-nocheck\\n// @ts-ignore\\nvar withSourceLoader = require('@storybook/source-loader/preview').withSource;\\n// @ts-ignore\\nvar addSourceDecorator = require(\\\"@storybook/source-loader/preview\\\").addSource;\\n// @ts-ignore\\nvar __SOURCE_PREFIX__ = \\\"/Users/farhanansari/Code/ui-library/src/components/molecules/MultiSelect/stories\\\";\\n// @ts-ignore\\nvar __STORY__ = \\\"import React from 'react'\\\\nimport MultiSelect from '../index'\\\\nimport Box from '../../../atoms/Box'\\\\nimport { path } from '../..'\\\\nimport ThemeWrapper from '../../../../utilities/components/ThemeWrapper'\\\\n\\\\nimport {\\\\n  boolean,\\\\n  text,\\\\n  object,\\\\n  withKnobs,\\\\n  number,\\\\n  array\\\\n} from '@storybook/addon-knobs'\\\\nimport { action } from '@storybook/addon-actions'\\\\nimport TextInput from '../../TextInput'\\\\nimport { tMultiSelectChildren } from '../interfaces'\\\\n\\\\nexport default {\\\\n  title: `${path}/MultiSelect`,\\\\n  component: MultiSelect,\\\\n  decorators: [withKnobs],\\\\n  parameters: {\\\\n    props: {\\\\n      propTablesExclude: [Box, ThemeWrapper, TextInput]\\\\n    }\\\\n  }\\\\n}\\\\n\\\\nconst options = [\\\\n  { value: 'ocean', label: 'Ocean', phoneNumber: '1234', age: '10' },\\\\n  { value: 'blue', label: 'Blue', phoneNumber: '455556', age: '12' },\\\\n  { value: 'purple', label: 'Purple', phoneNumber: '67778', age: '13' },\\\\n  { value: 'red', label: 'Red', phoneNumber: '89990', age: '14' },\\\\n  { value: 'orange', label: 'Orange', phoneNumber: '001323', age: '15' },\\\\n  { value: 'yellow', label: 'Yellow', phoneNumber: '99243452', age: '16' },\\\\n  { value: 'green', label: 'Green', phoneNumber: '120009', age: '18' },\\\\n  { value: 'forest', label: 'Forest', phoneNumber: '0000000', age: '20' },\\\\n  { value: 'slate', label: 'Slate', phoneNumber: '11111111', age: '30' },\\\\n  { value: 'silver', label: 'Silver', phoneNumber: '22222222', age: '40' },\\\\n  { value: 'green1', label: 'Green1', phoneNumber: '120009', age: '18' },\\\\n  { value: 'forest1', label: 'Forest1', phoneNumber: '0000000', age: '20' },\\\\n  { value: 'slate1', label: 'Slate1', phoneNumber: '11111111', age: '30' },\\\\n  { value: 'silver1', label: 'Silver1', phoneNumber: '22222222', age: '40' }\\\\n]\\\\nconst selectedOptions = [\\\\n  { value: 'ocean', label: 'Ocean', phoneNumber: '1234', age: '10' },\\\\n  { value: 'blue', label: 'Blue', phoneNumber: '455556', age: '12' },\\\\n  { value: 'purple', label: 'Purple', phoneNumber: '67778', age: '13' },\\\\n  { value: 'red', label: 'Red', phoneNumber: '89990', age: '14' },\\\\n  { value: 'forest', label: 'Forest', phoneNumber: '0000000', age: '20' }\\\\n  // { value: 'slate', label: 'Slate', phoneNumber: '11111111', age: '30' }\\\\n]\\\\n\\\\nexport const withTextField = () => (\\\\n  <ThemeWrapper>\\\\n    <Box p='1em'>\\\\n      <MultiSelect\\\\n        id={text('id', 'Colors')}\\\\n        width={text('width', '300px')}\\\\n        options={object('Multi Select Options', options)}\\\\n        onChange={action('Multi Select changed')}\\\\n        style={object('styles', {\\\\n          position: 'absolute',\\\\n          top: 'auto',\\\\n          left: 'auto',\\\\n          marginTop: '-18px'\\\\n        })}\\\\n        isLoading={boolean('isLoading', false)}\\\\n        isNoOption={boolean('isNoOption', false)}\\\\n        menuOpen={boolean('menuOpen', false)}\\\\n        selected={object('selected', selectedOptions)}\\\\n        allowSelectAll={boolean('allowSelectAll', false)}\\\\n        maximumSelected={number('maximum Selected', 5)}\\\\n        defaultSelected={object('default Selected', selectedOptions)}\\\\n        searchableKeys={array('Searchable Keys', ['label', 'phoneNumber'])}\\\\n        resultLimit={number('resultLimit', 10)}\\\\n        onInputChange={action('on Input changed')}\\\\n      >\\\\n        {({ optionSelected, isMenuOpen, openMenu }: tMultiSelectChildren) => (\\\\n          <TextInput\\\\n            id='id'\\\\n            label='Color'\\\\n            labelColor='black'\\\\n            placeholder='Select ... '\\\\n            error={boolean('Text Input error', false)}\\\\n            errorMessage={text('error Message', 'Its an error Message')}\\\\n            disabled={boolean('disabled', false)}\\\\n            onClick={() => {\\\\n              openMenu(!isMenuOpen)\\\\n              action('MultiSelect open/closed')(isMenuOpen)\\\\n            }}\\\\n            value={\\\\n              optionSelected && optionSelected?.length > 0\\\\n                ? optionSelected?.length + ' Selected'\\\\n                : ''\\\\n            }\\\\n            read-only\\\\n          />\\\\n        )}\\\\n      </MultiSelect>\\\\n    </Box>\\\\n  </ThemeWrapper>\\\\n)\\\\n\\\";\\n// @ts-ignore\\nvar __ADDS_MAP__ = {};\\n// @ts-ignore\\nvar __MAIN_FILE_LOCATION__ = \\\"/withTextField.stories.tsx\\\";\\n// @ts-ignore\\nvar __MODULE_DEPENDENCIES__ = [];\\n// @ts-ignore\\nvar __LOCAL_DEPENDENCIES__ = {};\\n// @ts-ignore\\nvar __IDS_TO_FRAMEWORKS__ = {};\\n        \\nimport React from 'react'\\nimport MultiSelect from '../index'\\nimport Box from '../../../atoms/Box'\\nimport { path } from '../..'\\nimport ThemeWrapper from '../../../../utilities/components/ThemeWrapper'\\n\\nimport {\\n  boolean,\\n  text,\\n  object,\\n  withKnobs,\\n  number,\\n  array\\n} from '@storybook/addon-knobs'\\nimport { action } from '@storybook/addon-actions'\\nimport TextInput from '../../TextInput'\\nimport { tMultiSelectChildren } from '../interfaces'\\n\\nexport default {\\n  title: `${path}/MultiSelect`,\\n  component: MultiSelect,\\n  decorators: [withKnobs],\\n  parameters: {\\\"storySource\\\":{\\\"source\\\":\\\"\\\\n\\\\n// @ts-nocheck\\\\n// @ts-ignore\\\\nvar withSourceLoader = require('@storybook/source-loader/preview').withSource;\\\\n// @ts-ignore\\\\nvar addSourceDecorator = require(\\\\\\\"@storybook/source-loader/preview\\\\\\\").addSource;\\\\n// @ts-ignore\\\\nvar __SOURCE_PREFIX__ = \\\\\\\"/Users/farhanansari/Code/ui-library/src/components/molecules/MultiSelect/stories\\\\\\\";\\\\n// @ts-ignore\\\\nvar __STORY__ = \\\\\\\"import React from 'react'\\\\\\\\nimport MultiSelect from '../index'\\\\\\\\nimport Box from '../../../atoms/Box'\\\\\\\\nimport { path } from '../..'\\\\\\\\nimport ThemeWrapper from '../../../../utilities/components/ThemeWrapper'\\\\\\\\n\\\\\\\\nimport {\\\\\\\\n  boolean,\\\\\\\\n  text,\\\\\\\\n  object,\\\\\\\\n  withKnobs,\\\\\\\\n  number,\\\\\\\\n  array\\\\\\\\n} from '@storybook/addon-knobs'\\\\\\\\nimport { action } from '@storybook/addon-actions'\\\\\\\\nimport TextInput from '../../TextInput'\\\\\\\\nimport { tMultiSelectChildren } from '../interfaces'\\\\\\\\n\\\\\\\\nexport default {\\\\\\\\n  title: `${path}/MultiSelect`,\\\\\\\\n  component: MultiSelect,\\\\\\\\n  decorators: [withKnobs],\\\\\\\\n  parameters: {\\\\\\\\n    props: {\\\\\\\\n      propTablesExclude: [Box, ThemeWrapper, TextInput]\\\\\\\\n    }\\\\\\\\n  }\\\\\\\\n}\\\\\\\\n\\\\\\\\nconst options = [\\\\\\\\n  { value: 'ocean', label: 'Ocean', phoneNumber: '1234', age: '10' },\\\\\\\\n  { value: 'blue', label: 'Blue', phoneNumber: '455556', age: '12' },\\\\\\\\n  { value: 'purple', label: 'Purple', phoneNumber: '67778', age: '13' },\\\\\\\\n  { value: 'red', label: 'Red', phoneNumber: '89990', age: '14' },\\\\\\\\n  { value: 'orange', label: 'Orange', phoneNumber: '001323', age: '15' },\\\\\\\\n  { value: 'yellow', label: 'Yellow', phoneNumber: '99243452', age: '16' },\\\\\\\\n  { value: 'green', label: 'Green', phoneNumber: '120009', age: '18' },\\\\\\\\n  { value: 'forest', label: 'Forest', phoneNumber: '0000000', age: '20' },\\\\\\\\n  { value: 'slate', label: 'Slate', phoneNumber: '11111111', age: '30' },\\\\\\\\n  { value: 'silver', label: 'Silver', phoneNumber: '22222222', age: '40' },\\\\\\\\n  { value: 'green1', label: 'Green1', phoneNumber: '120009', age: '18' },\\\\\\\\n  { value: 'forest1', label: 'Forest1', phoneNumber: '0000000', age: '20' },\\\\\\\\n  { value: 'slate1', label: 'Slate1', phoneNumber: '11111111', age: '30' },\\\\\\\\n  { value: 'silver1', label: 'Silver1', phoneNumber: '22222222', age: '40' }\\\\\\\\n]\\\\\\\\nconst selectedOptions = [\\\\\\\\n  { value: 'ocean', label: 'Ocean', phoneNumber: '1234', age: '10' },\\\\\\\\n  { value: 'blue', label: 'Blue', phoneNumber: '455556', age: '12' },\\\\\\\\n  { value: 'purple', label: 'Purple', phoneNumber: '67778', age: '13' },\\\\\\\\n  { value: 'red', label: 'Red', phoneNumber: '89990', age: '14' },\\\\\\\\n  { value: 'forest', label: 'Forest', phoneNumber: '0000000', age: '20' }\\\\\\\\n  // { value: 'slate', label: 'Slate', phoneNumber: '11111111', age: '30' }\\\\\\\\n]\\\\\\\\n\\\\\\\\nexport const withTextField = () => (\\\\\\\\n  <ThemeWrapper>\\\\\\\\n    <Box p='1em'>\\\\\\\\n      <MultiSelect\\\\\\\\n        id={text('id', 'Colors')}\\\\\\\\n        width={text('width', '300px')}\\\\\\\\n        options={object('Multi Select Options', options)}\\\\\\\\n        onChange={action('Multi Select changed')}\\\\\\\\n        style={object('styles', {\\\\\\\\n          position: 'absolute',\\\\\\\\n          top: 'auto',\\\\\\\\n          left: 'auto',\\\\\\\\n          marginTop: '-18px'\\\\\\\\n        })}\\\\\\\\n        isLoading={boolean('isLoading', false)}\\\\\\\\n        isNoOption={boolean('isNoOption', false)}\\\\\\\\n        menuOpen={boolean('menuOpen', false)}\\\\\\\\n        selected={object('selected', selectedOptions)}\\\\\\\\n        allowSelectAll={boolean('allowSelectAll', false)}\\\\\\\\n        maximumSelected={number('maximum Selected', 5)}\\\\\\\\n        defaultSelected={object('default Selected', selectedOptions)}\\\\\\\\n        searchableKeys={array('Searchable Keys', ['label', 'phoneNumber'])}\\\\\\\\n        resultLimit={number('resultLimit', 10)}\\\\\\\\n        onInputChange={action('on Input changed')}\\\\\\\\n      >\\\\\\\\n        {({ optionSelected, isMenuOpen, openMenu }: tMultiSelectChildren) => (\\\\\\\\n          <TextInput\\\\\\\\n            id='id'\\\\\\\\n            label='Color'\\\\\\\\n            labelColor='black'\\\\\\\\n            placeholder='Select ... '\\\\\\\\n            error={boolean('Text Input error', false)}\\\\\\\\n            errorMessage={text('error Message', 'Its an error Message')}\\\\\\\\n            disabled={boolean('disabled', false)}\\\\\\\\n            onClick={() => {\\\\\\\\n              openMenu(!isMenuOpen)\\\\\\\\n              action('MultiSelect open/closed')(isMenuOpen)\\\\\\\\n            }}\\\\\\\\n            value={\\\\\\\\n              optionSelected && optionSelected?.length > 0\\\\\\\\n                ? optionSelected?.length + ' Selected'\\\\\\\\n                : ''\\\\\\\\n            }\\\\\\\\n            read-only\\\\\\\\n          />\\\\\\\\n        )}\\\\\\\\n      </MultiSelect>\\\\\\\\n    </Box>\\\\\\\\n  </ThemeWrapper>\\\\\\\\n)\\\\\\\\n\\\\\\\";\\\\n// @ts-ignore\\\\nvar __ADDS_MAP__ = {};\\\\n// @ts-ignore\\\\nvar __MAIN_FILE_LOCATION__ = \\\\\\\"/withTextField.stories.tsx\\\\\\\";\\\\n// @ts-ignore\\\\nvar __MODULE_DEPENDENCIES__ = [];\\\\n// @ts-ignore\\\\nvar __LOCAL_DEPENDENCIES__ = {};\\\\n// @ts-ignore\\\\nvar __IDS_TO_FRAMEWORKS__ = {};\\\\n        \\\\nimport React from 'react'\\\\nimport MultiSelect from '../index'\\\\nimport Box from '../../../atoms/Box'\\\\nimport { path } from '../..'\\\\nimport ThemeWrapper from '../../../../utilities/components/ThemeWrapper'\\\\n\\\\nimport {\\\\n  boolean,\\\\n  text,\\\\n  object,\\\\n  withKnobs,\\\\n  number,\\\\n  array\\\\n} from '@storybook/addon-knobs'\\\\nimport { action } from '@storybook/addon-actions'\\\\nimport TextInput from '../../TextInput'\\\\nimport { tMultiSelectChildren } from '../interfaces'\\\\n\\\\nexport default {\\\\n  title: `${path}/MultiSelect`,\\\\n  component: MultiSelect,\\\\n  decorators: [withKnobs],\\\\n  parameters: {\\\\\\\"storySource\\\\\\\":{\\\\\\\"source\\\\\\\":\\\\\\\"import React from 'react'\\\\\\\\nimport MultiSelect from '../index'\\\\\\\\nimport Box from '../../../atoms/Box'\\\\\\\\nimport { path } from '../..'\\\\\\\\nimport ThemeWrapper from '../../../../utilities/components/ThemeWrapper'\\\\\\\\n\\\\\\\\nimport {\\\\\\\\n  boolean,\\\\\\\\n  text,\\\\\\\\n  object,\\\\\\\\n  withKnobs,\\\\\\\\n  number,\\\\\\\\n  array\\\\\\\\n} from '@storybook/addon-knobs'\\\\\\\\nimport { action } from '@storybook/addon-actions'\\\\\\\\nimport TextInput from '../../TextInput'\\\\\\\\nimport { tMultiSelectChildren } from '../interfaces'\\\\\\\\n\\\\\\\\nexport default {\\\\\\\\n  title: `${path}/MultiSelect`,\\\\\\\\n  component: MultiSelect,\\\\\\\\n  decorators: [withKnobs],\\\\\\\\n  parameters: {\\\\\\\\n    props: {\\\\\\\\n      propTablesExclude: [Box, ThemeWrapper, TextInput]\\\\\\\\n    }\\\\\\\\n  }\\\\\\\\n}\\\\\\\\n\\\\\\\\nconst options = [\\\\\\\\n  { value: 'ocean', label: 'Ocean', phoneNumber: '1234', age: '10' },\\\\\\\\n  { value: 'blue', label: 'Blue', phoneNumber: '455556', age: '12' },\\\\\\\\n  { value: 'purple', label: 'Purple', phoneNumber: '67778', age: '13' },\\\\\\\\n  { value: 'red', label: 'Red', phoneNumber: '89990', age: '14' },\\\\\\\\n  { value: 'orange', label: 'Orange', phoneNumber: '001323', age: '15' },\\\\\\\\n  { value: 'yellow', label: 'Yellow', phoneNumber: '99243452', age: '16' },\\\\\\\\n  { value: 'green', label: 'Green', phoneNumber: '120009', age: '18' },\\\\\\\\n  { value: 'forest', label: 'Forest', phoneNumber: '0000000', age: '20' },\\\\\\\\n  { value: 'slate', label: 'Slate', phoneNumber: '11111111', age: '30' },\\\\\\\\n  { value: 'silver', label: 'Silver', phoneNumber: '22222222', age: '40' },\\\\\\\\n  { value: 'green1', label: 'Green1', phoneNumber: '120009', age: '18' },\\\\\\\\n  { value: 'forest1', label: 'Forest1', phoneNumber: '0000000', age: '20' },\\\\\\\\n  { value: 'slate1', label: 'Slate1', phoneNumber: '11111111', age: '30' },\\\\\\\\n  { value: 'silver1', label: 'Silver1', phoneNumber: '22222222', age: '40' }\\\\\\\\n]\\\\\\\\nconst selectedOptions = [\\\\\\\\n  { value: 'ocean', label: 'Ocean', phoneNumber: '1234', age: '10' },\\\\\\\\n  { value: 'blue', label: 'Blue', phoneNumber: '455556', age: '12' },\\\\\\\\n  { value: 'purple', label: 'Purple', phoneNumber: '67778', age: '13' },\\\\\\\\n  { value: 'red', label: 'Red', phoneNumber: '89990', age: '14' },\\\\\\\\n  { value: 'forest', label: 'Forest', phoneNumber: '0000000', age: '20' }\\\\\\\\n  // { value: 'slate', label: 'Slate', phoneNumber: '11111111', age: '30' }\\\\\\\\n]\\\\\\\\n\\\\\\\\nexport const withTextField = () => (\\\\\\\\n  <ThemeWrapper>\\\\\\\\n    <Box p='1em'>\\\\\\\\n      <MultiSelect\\\\\\\\n        id={text('id', 'Colors')}\\\\\\\\n        width={text('width', '300px')}\\\\\\\\n        options={object('Multi Select Options', options)}\\\\\\\\n        onChange={action('Multi Select changed')}\\\\\\\\n        style={object('styles', {\\\\\\\\n          position: 'absolute',\\\\\\\\n          top: 'auto',\\\\\\\\n          left: 'auto',\\\\\\\\n          marginTop: '-18px'\\\\\\\\n        })}\\\\\\\\n        isLoading={boolean('isLoading', false)}\\\\\\\\n        isNoOption={boolean('isNoOption', false)}\\\\\\\\n        menuOpen={boolean('menuOpen', false)}\\\\\\\\n        selected={object('selected', selectedOptions)}\\\\\\\\n        allowSelectAll={boolean('allowSelectAll', false)}\\\\\\\\n        maximumSelected={number('maximum Selected', 5)}\\\\\\\\n        defaultSelected={object('default Selected', selectedOptions)}\\\\\\\\n        searchableKeys={array('Searchable Keys', ['label', 'phoneNumber'])}\\\\\\\\n        resultLimit={number('resultLimit', 10)}\\\\\\\\n        onInputChange={action('on Input changed')}\\\\\\\\n      >\\\\\\\\n        {({ optionSelected, isMenuOpen, openMenu }: tMultiSelectChildren) => (\\\\\\\\n          <TextInput\\\\\\\\n            id='id'\\\\\\\\n            label='Color'\\\\\\\\n            labelColor='black'\\\\\\\\n            placeholder='Select ... '\\\\\\\\n            error={boolean('Text Input error', false)}\\\\\\\\n            errorMessage={text('error Message', 'Its an error Message')}\\\\\\\\n            disabled={boolean('disabled', false)}\\\\\\\\n            onClick={() => {\\\\\\\\n              openMenu(!isMenuOpen)\\\\\\\\n              action('MultiSelect open/closed')(isMenuOpen)\\\\\\\\n            }}\\\\\\\\n            value={\\\\\\\\n              optionSelected && optionSelected?.length > 0\\\\\\\\n                ? optionSelected?.length + ' Selected'\\\\\\\\n                : ''\\\\\\\\n            }\\\\\\\\n            read-only\\\\\\\\n          />\\\\\\\\n        )}\\\\\\\\n      </MultiSelect>\\\\\\\\n    </Box>\\\\\\\\n  </ThemeWrapper>\\\\\\\\n)\\\\\\\\n\\\\\\\",\\\\\\\"locationsMap\\\\\\\":{}},\\\\n    props: {\\\\n      propTablesExclude: [Box, ThemeWrapper, TextInput]\\\\n    }\\\\n  },}\\\\n\\\\nconst options = [\\\\n  { value: 'ocean', label: 'Ocean', phoneNumber: '1234', age: '10' },\\\\n  { value: 'blue', label: 'Blue', phoneNumber: '455556', age: '12' },\\\\n  { value: 'purple', label: 'Purple', phoneNumber: '67778', age: '13' },\\\\n  { value: 'red', label: 'Red', phoneNumber: '89990', age: '14' },\\\\n  { value: 'orange', label: 'Orange', phoneNumber: '001323', age: '15' },\\\\n  { value: 'yellow', label: 'Yellow', phoneNumber: '99243452', age: '16' },\\\\n  { value: 'green', label: 'Green', phoneNumber: '120009', age: '18' },\\\\n  { value: 'forest', label: 'Forest', phoneNumber: '0000000', age: '20' },\\\\n  { value: 'slate', label: 'Slate', phoneNumber: '11111111', age: '30' },\\\\n  { value: 'silver', label: 'Silver', phoneNumber: '22222222', age: '40' },\\\\n  { value: 'green1', label: 'Green1', phoneNumber: '120009', age: '18' },\\\\n  { value: 'forest1', label: 'Forest1', phoneNumber: '0000000', age: '20' },\\\\n  { value: 'slate1', label: 'Slate1', phoneNumber: '11111111', age: '30' },\\\\n  { value: 'silver1', label: 'Silver1', phoneNumber: '22222222', age: '40' }\\\\n]\\\\nconst selectedOptions = [\\\\n  { value: 'ocean', label: 'Ocean', phoneNumber: '1234', age: '10' },\\\\n  { value: 'blue', label: 'Blue', phoneNumber: '455556', age: '12' },\\\\n  { value: 'purple', label: 'Purple', phoneNumber: '67778', age: '13' },\\\\n  { value: 'red', label: 'Red', phoneNumber: '89990', age: '14' },\\\\n  { value: 'forest', label: 'Forest', phoneNumber: '0000000', age: '20' }\\\\n  // { value: 'slate', label: 'Slate', phoneNumber: '11111111', age: '30' }\\\\n]\\\\n\\\\nexport const withTextField = addSourceDecorator(() => (\\\\n  <ThemeWrapper>\\\\n    <Box p='1em'>\\\\n      <MultiSelect\\\\n        id={text('id', 'Colors')}\\\\n        width={text('width', '300px')}\\\\n        options={object('Multi Select Options', options)}\\\\n        onChange={action('Multi Select changed')}\\\\n        style={object('styles', {\\\\n          position: 'absolute',\\\\n          top: 'auto',\\\\n          left: 'auto',\\\\n          marginTop: '-18px'\\\\n        })}\\\\n        isLoading={boolean('isLoading', false)}\\\\n        isNoOption={boolean('isNoOption', false)}\\\\n        menuOpen={boolean('menuOpen', false)}\\\\n        selected={object('selected', selectedOptions)}\\\\n        allowSelectAll={boolean('allowSelectAll', false)}\\\\n        maximumSelected={number('maximum Selected', 5)}\\\\n        defaultSelected={object('default Selected', selectedOptions)}\\\\n        searchableKeys={array('Searchable Keys', ['label', 'phoneNumber'])}\\\\n        resultLimit={number('resultLimit', 10)}\\\\n        onInputChange={action('on Input changed')}\\\\n      >\\\\n        {({ optionSelected, isMenuOpen, openMenu }: tMultiSelectChildren) => (\\\\n          <TextInput\\\\n            id='id'\\\\n            label='Color'\\\\n            labelColor='black'\\\\n            placeholder='Select ... '\\\\n            error={boolean('Text Input error', false)}\\\\n            errorMessage={text('error Message', 'Its an error Message')}\\\\n            disabled={boolean('disabled', false)}\\\\n            onClick={() => {\\\\n              openMenu(!isMenuOpen)\\\\n              action('MultiSelect open/closed')(isMenuOpen)\\\\n            }}\\\\n            value={\\\\n              optionSelected && optionSelected?.length > 0\\\\n                ? optionSelected?.length + ' Selected'\\\\n                : ''\\\\n            }\\\\n            read-only\\\\n          />\\\\n        )}\\\\n      </MultiSelect>\\\\n    </Box>\\\\n  </ThemeWrapper>\\\\n), {__STORY__, __ADDS_MAP__,__MAIN_FILE_LOCATION__,__MODULE_DEPENDENCIES__,__LOCAL_DEPENDENCIES__,__SOURCE_PREFIX__,__IDS_TO_FRAMEWORKS__});\\\",\\\"locationsMap\\\":{}},\\\"storySource\\\":{\\\"source\\\":\\\"import React from 'react'\\\\nimport MultiSelect from '../index'\\\\nimport Box from '../../../atoms/Box'\\\\nimport { path } from '../..'\\\\nimport ThemeWrapper from '../../../../utilities/components/ThemeWrapper'\\\\n\\\\nimport {\\\\n  boolean,\\\\n  text,\\\\n  object,\\\\n  withKnobs,\\\\n  number,\\\\n  array\\\\n} from '@storybook/addon-knobs'\\\\nimport { action } from '@storybook/addon-actions'\\\\nimport TextInput from '../../TextInput'\\\\nimport { tMultiSelectChildren } from '../interfaces'\\\\n\\\\nexport default {\\\\n  title: `${path}/MultiSelect`,\\\\n  component: MultiSelect,\\\\n  decorators: [withKnobs],\\\\n  parameters: {\\\\n    props: {\\\\n      propTablesExclude: [Box, ThemeWrapper, TextInput]\\\\n    }\\\\n  }\\\\n}\\\\n\\\\nconst options = [\\\\n  { value: 'ocean', label: 'Ocean', phoneNumber: '1234', age: '10' },\\\\n  { value: 'blue', label: 'Blue', phoneNumber: '455556', age: '12' },\\\\n  { value: 'purple', label: 'Purple', phoneNumber: '67778', age: '13' },\\\\n  { value: 'red', label: 'Red', phoneNumber: '89990', age: '14' },\\\\n  { value: 'orange', label: 'Orange', phoneNumber: '001323', age: '15' },\\\\n  { value: 'yellow', label: 'Yellow', phoneNumber: '99243452', age: '16' },\\\\n  { value: 'green', label: 'Green', phoneNumber: '120009', age: '18' },\\\\n  { value: 'forest', label: 'Forest', phoneNumber: '0000000', age: '20' },\\\\n  { value: 'slate', label: 'Slate', phoneNumber: '11111111', age: '30' },\\\\n  { value: 'silver', label: 'Silver', phoneNumber: '22222222', age: '40' },\\\\n  { value: 'green1', label: 'Green1', phoneNumber: '120009', age: '18' },\\\\n  { value: 'forest1', label: 'Forest1', phoneNumber: '0000000', age: '20' },\\\\n  { value: 'slate1', label: 'Slate1', phoneNumber: '11111111', age: '30' },\\\\n  { value: 'silver1', label: 'Silver1', phoneNumber: '22222222', age: '40' }\\\\n]\\\\nconst selectedOptions = [\\\\n  { value: 'ocean', label: 'Ocean', phoneNumber: '1234', age: '10' },\\\\n  { value: 'blue', label: 'Blue', phoneNumber: '455556', age: '12' },\\\\n  { value: 'purple', label: 'Purple', phoneNumber: '67778', age: '13' },\\\\n  { value: 'red', label: 'Red', phoneNumber: '89990', age: '14' },\\\\n  { value: 'forest', label: 'Forest', phoneNumber: '0000000', age: '20' }\\\\n  // { value: 'slate', label: 'Slate', phoneNumber: '11111111', age: '30' }\\\\n]\\\\n\\\\nexport const withTextField = () => (\\\\n  <ThemeWrapper>\\\\n    <Box p='1em'>\\\\n      <MultiSelect\\\\n        id={text('id', 'Colors')}\\\\n        width={text('width', '300px')}\\\\n        options={object('Multi Select Options', options)}\\\\n        onChange={action('Multi Select changed')}\\\\n        style={object('styles', {\\\\n          position: 'absolute',\\\\n          top: 'auto',\\\\n          left: 'auto',\\\\n          marginTop: '-18px'\\\\n        })}\\\\n        isLoading={boolean('isLoading', false)}\\\\n        isNoOption={boolean('isNoOption', false)}\\\\n        menuOpen={boolean('menuOpen', false)}\\\\n        selected={object('selected', selectedOptions)}\\\\n        allowSelectAll={boolean('allowSelectAll', false)}\\\\n        maximumSelected={number('maximum Selected', 5)}\\\\n        defaultSelected={object('default Selected', selectedOptions)}\\\\n        searchableKeys={array('Searchable Keys', ['label', 'phoneNumber'])}\\\\n        resultLimit={number('resultLimit', 10)}\\\\n        onInputChange={action('on Input changed')}\\\\n      >\\\\n        {({ optionSelected, isMenuOpen, openMenu }: tMultiSelectChildren) => (\\\\n          <TextInput\\\\n            id='id'\\\\n            label='Color'\\\\n            labelColor='black'\\\\n            placeholder='Select ... '\\\\n            error={boolean('Text Input error', false)}\\\\n            errorMessage={text('error Message', 'Its an error Message')}\\\\n            disabled={boolean('disabled', false)}\\\\n            onClick={() => {\\\\n              openMenu(!isMenuOpen)\\\\n              action('MultiSelect open/closed')(isMenuOpen)\\\\n            }}\\\\n            value={\\\\n              optionSelected && optionSelected?.length > 0\\\\n                ? optionSelected?.length + ' Selected'\\\\n                : ''\\\\n            }\\\\n            read-only\\\\n          />\\\\n        )}\\\\n      </MultiSelect>\\\\n    </Box>\\\\n  </ThemeWrapper>\\\\n)\\\\n\\\",\\\"locationsMap\\\":{}},\\n    props: {\\n      propTablesExclude: [Box, ThemeWrapper, TextInput]\\n    }\\n  },}\\n\\nconst options = [\\n  { value: 'ocean', label: 'Ocean', phoneNumber: '1234', age: '10' },\\n  { value: 'blue', label: 'Blue', phoneNumber: '455556', age: '12' },\\n  { value: 'purple', label: 'Purple', phoneNumber: '67778', age: '13' },\\n  { value: 'red', label: 'Red', phoneNumber: '89990', age: '14' },\\n  { value: 'orange', label: 'Orange', phoneNumber: '001323', age: '15' },\\n  { value: 'yellow', label: 'Yellow', phoneNumber: '99243452', age: '16' },\\n  { value: 'green', label: 'Green', phoneNumber: '120009', age: '18' },\\n  { value: 'forest', label: 'Forest', phoneNumber: '0000000', age: '20' },\\n  { value: 'slate', label: 'Slate', phoneNumber: '11111111', age: '30' },\\n  { value: 'silver', label: 'Silver', phoneNumber: '22222222', age: '40' },\\n  { value: 'green1', label: 'Green1', phoneNumber: '120009', age: '18' },\\n  { value: 'forest1', label: 'Forest1', phoneNumber: '0000000', age: '20' },\\n  { value: 'slate1', label: 'Slate1', phoneNumber: '11111111', age: '30' },\\n  { value: 'silver1', label: 'Silver1', phoneNumber: '22222222', age: '40' }\\n]\\nconst selectedOptions = [\\n  { value: 'ocean', label: 'Ocean', phoneNumber: '1234', age: '10' },\\n  { value: 'blue', label: 'Blue', phoneNumber: '455556', age: '12' },\\n  { value: 'purple', label: 'Purple', phoneNumber: '67778', age: '13' },\\n  { value: 'red', label: 'Red', phoneNumber: '89990', age: '14' },\\n  { value: 'forest', label: 'Forest', phoneNumber: '0000000', age: '20' }\\n  // { value: 'slate', label: 'Slate', phoneNumber: '11111111', age: '30' }\\n]\\n\\nexport const withTextField = addSourceDecorator(addSourceDecorator(() => (\\n  <ThemeWrapper>\\n    <Box p='1em'>\\n      <MultiSelect\\n        id={text('id', 'Colors')}\\n        width={text('width', '300px')}\\n        options={object('Multi Select Options', options)}\\n        onChange={action('Multi Select changed')}\\n        style={object('styles', {\\n          position: 'absolute',\\n          top: 'auto',\\n          left: 'auto',\\n          marginTop: '-18px'\\n        })}\\n        isLoading={boolean('isLoading', false)}\\n        isNoOption={boolean('isNoOption', false)}\\n        menuOpen={boolean('menuOpen', false)}\\n        selected={object('selected', selectedOptions)}\\n        allowSelectAll={boolean('allowSelectAll', false)}\\n        maximumSelected={number('maximum Selected', 5)}\\n        defaultSelected={object('default Selected', selectedOptions)}\\n        searchableKeys={array('Searchable Keys', ['label', 'phoneNumber'])}\\n        resultLimit={number('resultLimit', 10)}\\n        onInputChange={action('on Input changed')}\\n      >\\n        {({ optionSelected, isMenuOpen, openMenu }: tMultiSelectChildren) => (\\n          <TextInput\\n            id='id'\\n            label='Color'\\n            labelColor='black'\\n            placeholder='Select ... '\\n            error={boolean('Text Input error', false)}\\n            errorMessage={text('error Message', 'Its an error Message')}\\n            disabled={boolean('disabled', false)}\\n            onClick={() => {\\n              openMenu(!isMenuOpen)\\n              action('MultiSelect open/closed')(isMenuOpen)\\n            }}\\n            value={\\n              optionSelected && optionSelected?.length > 0\\n                ? optionSelected?.length + ' Selected'\\n                : ''\\n            }\\n            read-only\\n          />\\n        )}\\n      </MultiSelect>\\n    </Box>\\n  </ThemeWrapper>\\n), {__STORY__, __ADDS_MAP__,__MAIN_FILE_LOCATION__,__MODULE_DEPENDENCIES__,__LOCAL_DEPENDENCIES__,__SOURCE_PREFIX__,__IDS_TO_FRAMEWORKS__}), {__STORY__, __ADDS_MAP__,__MAIN_FILE_LOCATION__,__MODULE_DEPENDENCIES__,__LOCAL_DEPENDENCIES__,__SOURCE_PREFIX__,__IDS_TO_FRAMEWORKS__});\",\n      \"locationsMap\": {}\n    }\n  }, _defineProperty(_parameters, \"storySource\", {\n    \"source\": \"\\n\\n// @ts-nocheck\\n// @ts-ignore\\nvar withSourceLoader = require('@storybook/source-loader/preview').withSource;\\n// @ts-ignore\\nvar addSourceDecorator = require(\\\"@storybook/source-loader/preview\\\").addSource;\\n// @ts-ignore\\nvar __SOURCE_PREFIX__ = \\\"/Users/farhanansari/Code/ui-library/src/components/molecules/MultiSelect/stories\\\";\\n// @ts-ignore\\nvar __STORY__ = \\\"import React from 'react'\\\\nimport MultiSelect from '../index'\\\\nimport Box from '../../../atoms/Box'\\\\nimport { path } from '../..'\\\\nimport ThemeWrapper from '../../../../utilities/components/ThemeWrapper'\\\\n\\\\nimport {\\\\n  boolean,\\\\n  text,\\\\n  object,\\\\n  withKnobs,\\\\n  number,\\\\n  array\\\\n} from '@storybook/addon-knobs'\\\\nimport { action } from '@storybook/addon-actions'\\\\nimport TextInput from '../../TextInput'\\\\nimport { tMultiSelectChildren } from '../interfaces'\\\\n\\\\nexport default {\\\\n  title: `${path}/MultiSelect`,\\\\n  component: MultiSelect,\\\\n  decorators: [withKnobs],\\\\n  parameters: {\\\\n    props: {\\\\n      propTablesExclude: [Box, ThemeWrapper, TextInput]\\\\n    }\\\\n  }\\\\n}\\\\n\\\\nconst options = [\\\\n  { value: 'ocean', label: 'Ocean', phoneNumber: '1234', age: '10' },\\\\n  { value: 'blue', label: 'Blue', phoneNumber: '455556', age: '12' },\\\\n  { value: 'purple', label: 'Purple', phoneNumber: '67778', age: '13' },\\\\n  { value: 'red', label: 'Red', phoneNumber: '89990', age: '14' },\\\\n  { value: 'orange', label: 'Orange', phoneNumber: '001323', age: '15' },\\\\n  { value: 'yellow', label: 'Yellow', phoneNumber: '99243452', age: '16' },\\\\n  { value: 'green', label: 'Green', phoneNumber: '120009', age: '18' },\\\\n  { value: 'forest', label: 'Forest', phoneNumber: '0000000', age: '20' },\\\\n  { value: 'slate', label: 'Slate', phoneNumber: '11111111', age: '30' },\\\\n  { value: 'silver', label: 'Silver', phoneNumber: '22222222', age: '40' },\\\\n  { value: 'green1', label: 'Green1', phoneNumber: '120009', age: '18' },\\\\n  { value: 'forest1', label: 'Forest1', phoneNumber: '0000000', age: '20' },\\\\n  { value: 'slate1', label: 'Slate1', phoneNumber: '11111111', age: '30' },\\\\n  { value: 'silver1', label: 'Silver1', phoneNumber: '22222222', age: '40' }\\\\n]\\\\nconst selectedOptions = [\\\\n  { value: 'ocean', label: 'Ocean', phoneNumber: '1234', age: '10' },\\\\n  { value: 'blue', label: 'Blue', phoneNumber: '455556', age: '12' },\\\\n  { value: 'purple', label: 'Purple', phoneNumber: '67778', age: '13' },\\\\n  { value: 'red', label: 'Red', phoneNumber: '89990', age: '14' },\\\\n  { value: 'forest', label: 'Forest', phoneNumber: '0000000', age: '20' }\\\\n  // { value: 'slate', label: 'Slate', phoneNumber: '11111111', age: '30' }\\\\n]\\\\n\\\\nexport const withTextField = () => (\\\\n  <ThemeWrapper>\\\\n    <Box p='1em'>\\\\n      <MultiSelect\\\\n        id={text('id', 'Colors')}\\\\n        width={text('width', '300px')}\\\\n        options={object('Multi Select Options', options)}\\\\n        onChange={action('Multi Select changed')}\\\\n        style={object('styles', {\\\\n          position: 'absolute',\\\\n          top: 'auto',\\\\n          left: 'auto',\\\\n          marginTop: '-18px'\\\\n        })}\\\\n        isLoading={boolean('isLoading', false)}\\\\n        isNoOption={boolean('isNoOption', false)}\\\\n        menuOpen={boolean('menuOpen', false)}\\\\n        selected={object('selected', selectedOptions)}\\\\n        allowSelectAll={boolean('allowSelectAll', false)}\\\\n        maximumSelected={number('maximum Selected', 5)}\\\\n        defaultSelected={object('default Selected', selectedOptions)}\\\\n        searchableKeys={array('Searchable Keys', ['label', 'phoneNumber'])}\\\\n        resultLimit={number('resultLimit', 10)}\\\\n        onInputChange={action('on Input changed')}\\\\n      >\\\\n        {({ optionSelected, isMenuOpen, openMenu }: tMultiSelectChildren) => (\\\\n          <TextInput\\\\n            id='id'\\\\n            label='Color'\\\\n            labelColor='black'\\\\n            placeholder='Select ... '\\\\n            error={boolean('Text Input error', false)}\\\\n            errorMessage={text('error Message', 'Its an error Message')}\\\\n            disabled={boolean('disabled', false)}\\\\n            onClick={() => {\\\\n              openMenu(!isMenuOpen)\\\\n              action('MultiSelect open/closed')(isMenuOpen)\\\\n            }}\\\\n            value={\\\\n              optionSelected && optionSelected?.length > 0\\\\n                ? optionSelected?.length + ' Selected'\\\\n                : ''\\\\n            }\\\\n            read-only\\\\n          />\\\\n        )}\\\\n      </MultiSelect>\\\\n    </Box>\\\\n  </ThemeWrapper>\\\\n)\\\\n\\\";\\n// @ts-ignore\\nvar __ADDS_MAP__ = {};\\n// @ts-ignore\\nvar __MAIN_FILE_LOCATION__ = \\\"/withTextField.stories.tsx\\\";\\n// @ts-ignore\\nvar __MODULE_DEPENDENCIES__ = [];\\n// @ts-ignore\\nvar __LOCAL_DEPENDENCIES__ = {};\\n// @ts-ignore\\nvar __IDS_TO_FRAMEWORKS__ = {};\\n        \\nimport React from 'react'\\nimport MultiSelect from '../index'\\nimport Box from '../../../atoms/Box'\\nimport { path } from '../..'\\nimport ThemeWrapper from '../../../../utilities/components/ThemeWrapper'\\n\\nimport {\\n  boolean,\\n  text,\\n  object,\\n  withKnobs,\\n  number,\\n  array\\n} from '@storybook/addon-knobs'\\nimport { action } from '@storybook/addon-actions'\\nimport TextInput from '../../TextInput'\\nimport { tMultiSelectChildren } from '../interfaces'\\n\\nexport default {\\n  title: `${path}/MultiSelect`,\\n  component: MultiSelect,\\n  decorators: [withKnobs],\\n  parameters: {\\\"storySource\\\":{\\\"source\\\":\\\"import React from 'react'\\\\nimport MultiSelect from '../index'\\\\nimport Box from '../../../atoms/Box'\\\\nimport { path } from '../..'\\\\nimport ThemeWrapper from '../../../../utilities/components/ThemeWrapper'\\\\n\\\\nimport {\\\\n  boolean,\\\\n  text,\\\\n  object,\\\\n  withKnobs,\\\\n  number,\\\\n  array\\\\n} from '@storybook/addon-knobs'\\\\nimport { action } from '@storybook/addon-actions'\\\\nimport TextInput from '../../TextInput'\\\\nimport { tMultiSelectChildren } from '../interfaces'\\\\n\\\\nexport default {\\\\n  title: `${path}/MultiSelect`,\\\\n  component: MultiSelect,\\\\n  decorators: [withKnobs],\\\\n  parameters: {\\\\n    props: {\\\\n      propTablesExclude: [Box, ThemeWrapper, TextInput]\\\\n    }\\\\n  }\\\\n}\\\\n\\\\nconst options = [\\\\n  { value: 'ocean', label: 'Ocean', phoneNumber: '1234', age: '10' },\\\\n  { value: 'blue', label: 'Blue', phoneNumber: '455556', age: '12' },\\\\n  { value: 'purple', label: 'Purple', phoneNumber: '67778', age: '13' },\\\\n  { value: 'red', label: 'Red', phoneNumber: '89990', age: '14' },\\\\n  { value: 'orange', label: 'Orange', phoneNumber: '001323', age: '15' },\\\\n  { value: 'yellow', label: 'Yellow', phoneNumber: '99243452', age: '16' },\\\\n  { value: 'green', label: 'Green', phoneNumber: '120009', age: '18' },\\\\n  { value: 'forest', label: 'Forest', phoneNumber: '0000000', age: '20' },\\\\n  { value: 'slate', label: 'Slate', phoneNumber: '11111111', age: '30' },\\\\n  { value: 'silver', label: 'Silver', phoneNumber: '22222222', age: '40' },\\\\n  { value: 'green1', label: 'Green1', phoneNumber: '120009', age: '18' },\\\\n  { value: 'forest1', label: 'Forest1', phoneNumber: '0000000', age: '20' },\\\\n  { value: 'slate1', label: 'Slate1', phoneNumber: '11111111', age: '30' },\\\\n  { value: 'silver1', label: 'Silver1', phoneNumber: '22222222', age: '40' }\\\\n]\\\\nconst selectedOptions = [\\\\n  { value: 'ocean', label: 'Ocean', phoneNumber: '1234', age: '10' },\\\\n  { value: 'blue', label: 'Blue', phoneNumber: '455556', age: '12' },\\\\n  { value: 'purple', label: 'Purple', phoneNumber: '67778', age: '13' },\\\\n  { value: 'red', label: 'Red', phoneNumber: '89990', age: '14' },\\\\n  { value: 'forest', label: 'Forest', phoneNumber: '0000000', age: '20' }\\\\n  // { value: 'slate', label: 'Slate', phoneNumber: '11111111', age: '30' }\\\\n]\\\\n\\\\nexport const withTextField = () => (\\\\n  <ThemeWrapper>\\\\n    <Box p='1em'>\\\\n      <MultiSelect\\\\n        id={text('id', 'Colors')}\\\\n        width={text('width', '300px')}\\\\n        options={object('Multi Select Options', options)}\\\\n        onChange={action('Multi Select changed')}\\\\n        style={object('styles', {\\\\n          position: 'absolute',\\\\n          top: 'auto',\\\\n          left: 'auto',\\\\n          marginTop: '-18px'\\\\n        })}\\\\n        isLoading={boolean('isLoading', false)}\\\\n        isNoOption={boolean('isNoOption', false)}\\\\n        menuOpen={boolean('menuOpen', false)}\\\\n        selected={object('selected', selectedOptions)}\\\\n        allowSelectAll={boolean('allowSelectAll', false)}\\\\n        maximumSelected={number('maximum Selected', 5)}\\\\n        defaultSelected={object('default Selected', selectedOptions)}\\\\n        searchableKeys={array('Searchable Keys', ['label', 'phoneNumber'])}\\\\n        resultLimit={number('resultLimit', 10)}\\\\n        onInputChange={action('on Input changed')}\\\\n      >\\\\n        {({ optionSelected, isMenuOpen, openMenu }: tMultiSelectChildren) => (\\\\n          <TextInput\\\\n            id='id'\\\\n            label='Color'\\\\n            labelColor='black'\\\\n            placeholder='Select ... '\\\\n            error={boolean('Text Input error', false)}\\\\n            errorMessage={text('error Message', 'Its an error Message')}\\\\n            disabled={boolean('disabled', false)}\\\\n            onClick={() => {\\\\n              openMenu(!isMenuOpen)\\\\n              action('MultiSelect open/closed')(isMenuOpen)\\\\n            }}\\\\n            value={\\\\n              optionSelected && optionSelected?.length > 0\\\\n                ? optionSelected?.length + ' Selected'\\\\n                : ''\\\\n            }\\\\n            read-only\\\\n          />\\\\n        )}\\\\n      </MultiSelect>\\\\n    </Box>\\\\n  </ThemeWrapper>\\\\n)\\\\n\\\",\\\"locationsMap\\\":{}},\\n    props: {\\n      propTablesExclude: [Box, ThemeWrapper, TextInput]\\n    }\\n  },}\\n\\nconst options = [\\n  { value: 'ocean', label: 'Ocean', phoneNumber: '1234', age: '10' },\\n  { value: 'blue', label: 'Blue', phoneNumber: '455556', age: '12' },\\n  { value: 'purple', label: 'Purple', phoneNumber: '67778', age: '13' },\\n  { value: 'red', label: 'Red', phoneNumber: '89990', age: '14' },\\n  { value: 'orange', label: 'Orange', phoneNumber: '001323', age: '15' },\\n  { value: 'yellow', label: 'Yellow', phoneNumber: '99243452', age: '16' },\\n  { value: 'green', label: 'Green', phoneNumber: '120009', age: '18' },\\n  { value: 'forest', label: 'Forest', phoneNumber: '0000000', age: '20' },\\n  { value: 'slate', label: 'Slate', phoneNumber: '11111111', age: '30' },\\n  { value: 'silver', label: 'Silver', phoneNumber: '22222222', age: '40' },\\n  { value: 'green1', label: 'Green1', phoneNumber: '120009', age: '18' },\\n  { value: 'forest1', label: 'Forest1', phoneNumber: '0000000', age: '20' },\\n  { value: 'slate1', label: 'Slate1', phoneNumber: '11111111', age: '30' },\\n  { value: 'silver1', label: 'Silver1', phoneNumber: '22222222', age: '40' }\\n]\\nconst selectedOptions = [\\n  { value: 'ocean', label: 'Ocean', phoneNumber: '1234', age: '10' },\\n  { value: 'blue', label: 'Blue', phoneNumber: '455556', age: '12' },\\n  { value: 'purple', label: 'Purple', phoneNumber: '67778', age: '13' },\\n  { value: 'red', label: 'Red', phoneNumber: '89990', age: '14' },\\n  { value: 'forest', label: 'Forest', phoneNumber: '0000000', age: '20' }\\n  // { value: 'slate', label: 'Slate', phoneNumber: '11111111', age: '30' }\\n]\\n\\nexport const withTextField = addSourceDecorator(() => (\\n  <ThemeWrapper>\\n    <Box p='1em'>\\n      <MultiSelect\\n        id={text('id', 'Colors')}\\n        width={text('width', '300px')}\\n        options={object('Multi Select Options', options)}\\n        onChange={action('Multi Select changed')}\\n        style={object('styles', {\\n          position: 'absolute',\\n          top: 'auto',\\n          left: 'auto',\\n          marginTop: '-18px'\\n        })}\\n        isLoading={boolean('isLoading', false)}\\n        isNoOption={boolean('isNoOption', false)}\\n        menuOpen={boolean('menuOpen', false)}\\n        selected={object('selected', selectedOptions)}\\n        allowSelectAll={boolean('allowSelectAll', false)}\\n        maximumSelected={number('maximum Selected', 5)}\\n        defaultSelected={object('default Selected', selectedOptions)}\\n        searchableKeys={array('Searchable Keys', ['label', 'phoneNumber'])}\\n        resultLimit={number('resultLimit', 10)}\\n        onInputChange={action('on Input changed')}\\n      >\\n        {({ optionSelected, isMenuOpen, openMenu }: tMultiSelectChildren) => (\\n          <TextInput\\n            id='id'\\n            label='Color'\\n            labelColor='black'\\n            placeholder='Select ... '\\n            error={boolean('Text Input error', false)}\\n            errorMessage={text('error Message', 'Its an error Message')}\\n            disabled={boolean('disabled', false)}\\n            onClick={() => {\\n              openMenu(!isMenuOpen)\\n              action('MultiSelect open/closed')(isMenuOpen)\\n            }}\\n            value={\\n              optionSelected && optionSelected?.length > 0\\n                ? optionSelected?.length + ' Selected'\\n                : ''\\n            }\\n            read-only\\n          />\\n        )}\\n      </MultiSelect>\\n    </Box>\\n  </ThemeWrapper>\\n), {__STORY__, __ADDS_MAP__,__MAIN_FILE_LOCATION__,__MODULE_DEPENDENCIES__,__LOCAL_DEPENDENCIES__,__SOURCE_PREFIX__,__IDS_TO_FRAMEWORKS__});\",\n    \"locationsMap\": {}\n  }), _defineProperty(_parameters, \"storySource\", {\n    \"source\": \"import React from 'react'\\nimport MultiSelect from '../index'\\nimport Box from '../../../atoms/Box'\\nimport { path } from '../..'\\nimport ThemeWrapper from '../../../../utilities/components/ThemeWrapper'\\n\\nimport {\\n  boolean,\\n  text,\\n  object,\\n  withKnobs,\\n  number,\\n  array\\n} from '@storybook/addon-knobs'\\nimport { action } from '@storybook/addon-actions'\\nimport TextInput from '../../TextInput'\\nimport { tMultiSelectChildren } from '../interfaces'\\n\\nexport default {\\n  title: `${path}/MultiSelect`,\\n  component: MultiSelect,\\n  decorators: [withKnobs],\\n  parameters: {\\n    props: {\\n      propTablesExclude: [Box, ThemeWrapper, TextInput]\\n    }\\n  }\\n}\\n\\nconst options = [\\n  { value: 'ocean', label: 'Ocean', phoneNumber: '1234', age: '10' },\\n  { value: 'blue', label: 'Blue', phoneNumber: '455556', age: '12' },\\n  { value: 'purple', label: 'Purple', phoneNumber: '67778', age: '13' },\\n  { value: 'red', label: 'Red', phoneNumber: '89990', age: '14' },\\n  { value: 'orange', label: 'Orange', phoneNumber: '001323', age: '15' },\\n  { value: 'yellow', label: 'Yellow', phoneNumber: '99243452', age: '16' },\\n  { value: 'green', label: 'Green', phoneNumber: '120009', age: '18' },\\n  { value: 'forest', label: 'Forest', phoneNumber: '0000000', age: '20' },\\n  { value: 'slate', label: 'Slate', phoneNumber: '11111111', age: '30' },\\n  { value: 'silver', label: 'Silver', phoneNumber: '22222222', age: '40' },\\n  { value: 'green1', label: 'Green1', phoneNumber: '120009', age: '18' },\\n  { value: 'forest1', label: 'Forest1', phoneNumber: '0000000', age: '20' },\\n  { value: 'slate1', label: 'Slate1', phoneNumber: '11111111', age: '30' },\\n  { value: 'silver1', label: 'Silver1', phoneNumber: '22222222', age: '40' }\\n]\\nconst selectedOptions = [\\n  { value: 'ocean', label: 'Ocean', phoneNumber: '1234', age: '10' },\\n  { value: 'blue', label: 'Blue', phoneNumber: '455556', age: '12' },\\n  { value: 'purple', label: 'Purple', phoneNumber: '67778', age: '13' },\\n  { value: 'red', label: 'Red', phoneNumber: '89990', age: '14' },\\n  { value: 'forest', label: 'Forest', phoneNumber: '0000000', age: '20' }\\n  // { value: 'slate', label: 'Slate', phoneNumber: '11111111', age: '30' }\\n]\\n\\nexport const withTextField = () => (\\n  <ThemeWrapper>\\n    <Box p='1em'>\\n      <MultiSelect\\n        id={text('id', 'Colors')}\\n        width={text('width', '300px')}\\n        options={object('Multi Select Options', options)}\\n        onChange={action('Multi Select changed')}\\n        style={object('styles', {\\n          position: 'absolute',\\n          top: 'auto',\\n          left: 'auto',\\n          marginTop: '-18px'\\n        })}\\n        isLoading={boolean('isLoading', false)}\\n        isNoOption={boolean('isNoOption', false)}\\n        menuOpen={boolean('menuOpen', false)}\\n        selected={object('selected', selectedOptions)}\\n        allowSelectAll={boolean('allowSelectAll', false)}\\n        maximumSelected={number('maximum Selected', 5)}\\n        defaultSelected={object('default Selected', selectedOptions)}\\n        searchableKeys={array('Searchable Keys', ['label', 'phoneNumber'])}\\n        resultLimit={number('resultLimit', 10)}\\n        onInputChange={action('on Input changed')}\\n      >\\n        {({ optionSelected, isMenuOpen, openMenu }: tMultiSelectChildren) => (\\n          <TextInput\\n            id='id'\\n            label='Color'\\n            labelColor='black'\\n            placeholder='Select ... '\\n            error={boolean('Text Input error', false)}\\n            errorMessage={text('error Message', 'Its an error Message')}\\n            disabled={boolean('disabled', false)}\\n            onClick={() => {\\n              openMenu(!isMenuOpen)\\n              action('MultiSelect open/closed')(isMenuOpen)\\n            }}\\n            value={\\n              optionSelected && optionSelected?.length > 0\\n                ? optionSelected?.length + ' Selected'\\n                : ''\\n            }\\n            read-only\\n          />\\n        )}\\n      </MultiSelect>\\n    </Box>\\n  </ThemeWrapper>\\n)\\n\",\n    \"locationsMap\": {}\n  }), _defineProperty(_parameters, \"props\", {\n    propTablesExclude: [Box, ThemeWrapper, TextInput]\n  }), _parameters)\n};\nvar options = [{\n  value: 'ocean',\n  label: 'Ocean',\n  phoneNumber: '1234',\n  age: '10'\n}, {\n  value: 'blue',\n  label: 'Blue',\n  phoneNumber: '455556',\n  age: '12'\n}, {\n  value: 'purple',\n  label: 'Purple',\n  phoneNumber: '67778',\n  age: '13'\n}, {\n  value: 'red',\n  label: 'Red',\n  phoneNumber: '89990',\n  age: '14'\n}, {\n  value: 'orange',\n  label: 'Orange',\n  phoneNumber: '001323',\n  age: '15'\n}, {\n  value: 'yellow',\n  label: 'Yellow',\n  phoneNumber: '99243452',\n  age: '16'\n}, {\n  value: 'green',\n  label: 'Green',\n  phoneNumber: '120009',\n  age: '18'\n}, {\n  value: 'forest',\n  label: 'Forest',\n  phoneNumber: '0000000',\n  age: '20'\n}, {\n  value: 'slate',\n  label: 'Slate',\n  phoneNumber: '11111111',\n  age: '30'\n}, {\n  value: 'silver',\n  label: 'Silver',\n  phoneNumber: '22222222',\n  age: '40'\n}, {\n  value: 'green1',\n  label: 'Green1',\n  phoneNumber: '120009',\n  age: '18'\n}, {\n  value: 'forest1',\n  label: 'Forest1',\n  phoneNumber: '0000000',\n  age: '20'\n}, {\n  value: 'slate1',\n  label: 'Slate1',\n  phoneNumber: '11111111',\n  age: '30'\n}, {\n  value: 'silver1',\n  label: 'Silver1',\n  phoneNumber: '22222222',\n  age: '40'\n}];\nvar selectedOptions = [{\n  value: 'ocean',\n  label: 'Ocean',\n  phoneNumber: '1234',\n  age: '10'\n}, {\n  value: 'blue',\n  label: 'Blue',\n  phoneNumber: '455556',\n  age: '12'\n}, {\n  value: 'purple',\n  label: 'Purple',\n  phoneNumber: '67778',\n  age: '13'\n}, {\n  value: 'red',\n  label: 'Red',\n  phoneNumber: '89990',\n  age: '14'\n}, {\n  value: 'forest',\n  label: 'Forest',\n  phoneNumber: '0000000',\n  age: '20'\n} // { value: 'slate', label: 'Slate', phoneNumber: '11111111', age: '30' }\n];\nexport var withTextField = addSourceDecorator(addSourceDecorator(addSourceDecorator(function () {\n  return React.createElement(ThemeWrapper, null, React.createElement(Box, {\n    p: '1em'\n  }, React.createElement(MultiSelect, {\n    id: text('id', 'Colors'),\n    width: text('width', '300px'),\n    options: object('Multi Select Options', options),\n    onChange: action('Multi Select changed'),\n    style: object('styles', {\n      position: 'absolute',\n      top: 'auto',\n      left: 'auto',\n      marginTop: '-18px'\n    }),\n    isLoading: _boolean('isLoading', false),\n    isNoOption: _boolean('isNoOption', false),\n    menuOpen: _boolean('menuOpen', false),\n    selected: object('selected', selectedOptions),\n    allowSelectAll: _boolean('allowSelectAll', false),\n    maximumSelected: number('maximum Selected', 5),\n    defaultSelected: object('default Selected', selectedOptions),\n    searchableKeys: array('Searchable Keys', ['label', 'phoneNumber']),\n    resultLimit: number('resultLimit', 10),\n    onInputChange: action('on Input changed')\n  }, function (_a) {\n    var optionSelected = _a.optionSelected,\n        isMenuOpen = _a.isMenuOpen,\n        openMenu = _a.openMenu;\n    return React.createElement(TextInput, {\n      id: 'id',\n      label: 'Color',\n      labelColor: 'black',\n      placeholder: 'Select ... ',\n      error: _boolean('Text Input error', false),\n      errorMessage: text('error Message', 'Its an error Message'),\n      disabled: _boolean('disabled', false),\n      onClick: function onClick() {\n        openMenu(!isMenuOpen);\n        action('MultiSelect open/closed')(isMenuOpen);\n      },\n      value: optionSelected && (optionSelected === null || optionSelected === void 0 ? void 0 : optionSelected.length) > 0 ? (optionSelected === null || optionSelected === void 0 ? void 0 : optionSelected.length) + ' Selected' : '',\n      \"read-only\": true\n    });\n  })));\n}, {\n  __STORY__: __STORY__,\n  __ADDS_MAP__: __ADDS_MAP__,\n  __MAIN_FILE_LOCATION__: __MAIN_FILE_LOCATION__,\n  __MODULE_DEPENDENCIES__: __MODULE_DEPENDENCIES__,\n  __LOCAL_DEPENDENCIES__: __LOCAL_DEPENDENCIES__,\n  __SOURCE_PREFIX__: __SOURCE_PREFIX__,\n  __IDS_TO_FRAMEWORKS__: __IDS_TO_FRAMEWORKS__\n}), {\n  __STORY__: __STORY__,\n  __ADDS_MAP__: __ADDS_MAP__,\n  __MAIN_FILE_LOCATION__: __MAIN_FILE_LOCATION__,\n  __MODULE_DEPENDENCIES__: __MODULE_DEPENDENCIES__,\n  __LOCAL_DEPENDENCIES__: __LOCAL_DEPENDENCIES__,\n  __SOURCE_PREFIX__: __SOURCE_PREFIX__,\n  __IDS_TO_FRAMEWORKS__: __IDS_TO_FRAMEWORKS__\n}), {\n  __STORY__: __STORY__,\n  __ADDS_MAP__: __ADDS_MAP__,\n  __MAIN_FILE_LOCATION__: __MAIN_FILE_LOCATION__,\n  __MODULE_DEPENDENCIES__: __MODULE_DEPENDENCIES__,\n  __LOCAL_DEPENDENCIES__: __LOCAL_DEPENDENCIES__,\n  __SOURCE_PREFIX__: __SOURCE_PREFIX__,\n  __IDS_TO_FRAMEWORKS__: __IDS_TO_FRAMEWORKS__\n});","map":{"version":3,"sources":["/Users/farhanansari/Code/ui-library/node_modules/react-docgen-typescript-loader/dist/index.js!/Users/farhanansari/Code/ui-library/node_modules/eslint-loader/dist/cjs.js??ref--6-0!/Users/farhanansari/Code/ui-library/node_modules/@storybook/source-loader/dist/server/index.js??ref--11!/Users/farhanansari/Code/ui-library/node_modules/@storybook/source-loader/dist/server/index.js!/Users/farhanansari/Code/ui-library/node_modules/@storybook/source-loader/dist/server/index.js!/Users/farhanansari/Code/ui-library/src/components/molecules/MultiSelect/stories/withTextField.stories.tsx"],"names":[],"mappings":";;;;AACA;AACA;AACA;AACA,IAAI,gBAAgB,GAAG,OAAO,CAAC,kCAAD,CAAP,CAA4C,UAAnE,C,CACA;;;AACA,IAAI,kBAAkB,GAAG,OAAO,CAAC,kCAAD,CAAP,CAA4C,SAArE,C,CACA;;;AACA,IAAI,iBAAiB,GAAG,kFAAxB,C,CACA;;AACA,IAAI,SAAS,GAAG,4sxCAAhB,C,CACA;;AACA,IAAI,YAAY,GAAG,EAAnB,C,CACA;;AACA,IAAI,sBAAsB,GAAG,4BAA7B,C,CACA;;AACA,IAAI,uBAAuB,GAAG,EAA9B,C,CACA;;AACA,IAAI,sBAAsB,GAAG,EAA7B,C,CACA;;AACA,IAAI,qBAAqB,GAAG,EAA5B;AAGA;AACA;AACA;;AACA,IAAI,gBAAgB,GAAG,OAAO,CAAC,kCAAD,CAAP,CAA4C,UAAnE,C,CACA;;;AACA,IAAI,kBAAkB,GAAG,OAAO,CAAC,kCAAD,CAAP,CAA4C,SAArE,C,CACA;;;AACA,IAAI,iBAAiB,GAAG,kFAAxB,C,CACA;;AACA,IAAI,SAAS,GAAG,y6ZAAhB,C,CACA;;AACA,IAAI,YAAY,GAAG,EAAnB,C,CACA;;AACA,IAAI,sBAAsB,GAAG,4BAA7B,C,CACA;;AACA,IAAI,uBAAuB,GAAG,EAA9B,C,CACA;;AACA,IAAI,sBAAsB,GAAG,EAA7B,C,CACA;;AACA,IAAI,qBAAqB,GAAG,EAA5B;AAGA;AACA;AACA;;AACA,IAAI,gBAAgB,GAAG,OAAO,CAAC,kCAAD,CAAP,CAA4C,UAAnE,C,CACA;;;AACA,IAAI,kBAAkB,GAAG,OAAO,CAAC,kCAAD,CAAP,CAA4C,SAArE,C,CACA;;;AACA,IAAI,iBAAiB,GAAG,kFAAxB,C,CACA;;AACA,IAAI,SAAS,GAAG,s9HAAhB,C,CACA;;AACA,IAAI,YAAY,GAAG,EAAnB,C,CACA;;AACA,IAAI,sBAAsB,GAAG,4BAA7B,C,CACA;;AACA,IAAI,uBAAuB,GAAG,EAA9B,C,CACA;;AACA,IAAI,sBAAsB,GAAG,EAA7B,C,CACA;;AACA,IAAI,qBAAqB,GAAG,EAA5B;AAEA,OAAO,KAAP,MAAkB,OAAlB;AACA,OAAO,WAAP,MAAwB,UAAxB;AACA,OAAO,GAAP,MAAgB,oBAAhB;AACA,SAAS,IAAT,QAAqB,OAArB;AACA,OAAO,YAAP,MAAyB,+CAAzB;AAEA,SACE,OAAO,IAAP,QADF,EAEE,IAFF,EAGE,MAHF,EAIE,SAJF,EAKE,MALF,EAME,KANF,QAOO,wBAPP;AAQA,SAAS,MAAT,QAAuB,0BAAvB;AACA,OAAO,SAAP,MAAsB,iBAAtB;AAGA,eAAe;AACb,EAAA,KAAK,EAAK,IAAI,GAAA,cADD;AAEb,EAAA,SAAS,EAAE,WAFE;AAGb,EAAA,UAAU,EAAE,CAAC,SAAD,CAHC;AAIb,EAAA,UAAU;AAAG,mBAAc;AAAC,gBAAS,4sxCAAV;AAAutxC,sBAAe;AAAtuxC;AAAjB,iDAAywxC;AAAC,cAAS,y6ZAAV;AAAo7Z,oBAAe;AAAn8Z,GAAzwxC,+CAA8trD;AAAC,cAAS,s9HAAV;AAAi+H,oBAAe;AAAh/H,GAA9trD,yCACD;AACL,IAAA,iBAAiB,EAAE,CAAC,GAAD,EAAM,YAAN,EAAoB,SAApB;AADd,GADC;AAJG,CAAf;AAUA,IAAM,OAAO,GAAG,CACd;AAAE,EAAA,KAAK,EAAE,OAAT;AAAkB,EAAA,KAAK,EAAE,OAAzB;AAAkC,EAAA,WAAW,EAAE,MAA/C;AAAuD,EAAA,GAAG,EAAE;AAA5D,CADc,EAEd;AAAE,EAAA,KAAK,EAAE,MAAT;AAAiB,EAAA,KAAK,EAAE,MAAxB;AAAgC,EAAA,WAAW,EAAE,QAA7C;AAAuD,EAAA,GAAG,EAAE;AAA5D,CAFc,EAGd;AAAE,EAAA,KAAK,EAAE,QAAT;AAAmB,EAAA,KAAK,EAAE,QAA1B;AAAoC,EAAA,WAAW,EAAE,OAAjD;AAA0D,EAAA,GAAG,EAAE;AAA/D,CAHc,EAId;AAAE,EAAA,KAAK,EAAE,KAAT;AAAgB,EAAA,KAAK,EAAE,KAAvB;AAA8B,EAAA,WAAW,EAAE,OAA3C;AAAoD,EAAA,GAAG,EAAE;AAAzD,CAJc,EAKd;AAAE,EAAA,KAAK,EAAE,QAAT;AAAmB,EAAA,KAAK,EAAE,QAA1B;AAAoC,EAAA,WAAW,EAAE,QAAjD;AAA2D,EAAA,GAAG,EAAE;AAAhE,CALc,EAMd;AAAE,EAAA,KAAK,EAAE,QAAT;AAAmB,EAAA,KAAK,EAAE,QAA1B;AAAoC,EAAA,WAAW,EAAE,UAAjD;AAA6D,EAAA,GAAG,EAAE;AAAlE,CANc,EAOd;AAAE,EAAA,KAAK,EAAE,OAAT;AAAkB,EAAA,KAAK,EAAE,OAAzB;AAAkC,EAAA,WAAW,EAAE,QAA/C;AAAyD,EAAA,GAAG,EAAE;AAA9D,CAPc,EAQd;AAAE,EAAA,KAAK,EAAE,QAAT;AAAmB,EAAA,KAAK,EAAE,QAA1B;AAAoC,EAAA,WAAW,EAAE,SAAjD;AAA4D,EAAA,GAAG,EAAE;AAAjE,CARc,EASd;AAAE,EAAA,KAAK,EAAE,OAAT;AAAkB,EAAA,KAAK,EAAE,OAAzB;AAAkC,EAAA,WAAW,EAAE,UAA/C;AAA2D,EAAA,GAAG,EAAE;AAAhE,CATc,EAUd;AAAE,EAAA,KAAK,EAAE,QAAT;AAAmB,EAAA,KAAK,EAAE,QAA1B;AAAoC,EAAA,WAAW,EAAE,UAAjD;AAA6D,EAAA,GAAG,EAAE;AAAlE,CAVc,EAWd;AAAE,EAAA,KAAK,EAAE,QAAT;AAAmB,EAAA,KAAK,EAAE,QAA1B;AAAoC,EAAA,WAAW,EAAE,QAAjD;AAA2D,EAAA,GAAG,EAAE;AAAhE,CAXc,EAYd;AAAE,EAAA,KAAK,EAAE,SAAT;AAAoB,EAAA,KAAK,EAAE,SAA3B;AAAsC,EAAA,WAAW,EAAE,SAAnD;AAA8D,EAAA,GAAG,EAAE;AAAnE,CAZc,EAad;AAAE,EAAA,KAAK,EAAE,QAAT;AAAmB,EAAA,KAAK,EAAE,QAA1B;AAAoC,EAAA,WAAW,EAAE,UAAjD;AAA6D,EAAA,GAAG,EAAE;AAAlE,CAbc,EAcd;AAAE,EAAA,KAAK,EAAE,SAAT;AAAoB,EAAA,KAAK,EAAE,SAA3B;AAAsC,EAAA,WAAW,EAAE,UAAnD;AAA+D,EAAA,GAAG,EAAE;AAApE,CAdc,CAAhB;AAgBA,IAAM,eAAe,GAAG,CACtB;AAAE,EAAA,KAAK,EAAE,OAAT;AAAkB,EAAA,KAAK,EAAE,OAAzB;AAAkC,EAAA,WAAW,EAAE,MAA/C;AAAuD,EAAA,GAAG,EAAE;AAA5D,CADsB,EAEtB;AAAE,EAAA,KAAK,EAAE,MAAT;AAAiB,EAAA,KAAK,EAAE,MAAxB;AAAgC,EAAA,WAAW,EAAE,QAA7C;AAAuD,EAAA,GAAG,EAAE;AAA5D,CAFsB,EAGtB;AAAE,EAAA,KAAK,EAAE,QAAT;AAAmB,EAAA,KAAK,EAAE,QAA1B;AAAoC,EAAA,WAAW,EAAE,OAAjD;AAA0D,EAAA,GAAG,EAAE;AAA/D,CAHsB,EAItB;AAAE,EAAA,KAAK,EAAE,KAAT;AAAgB,EAAA,KAAK,EAAE,KAAvB;AAA8B,EAAA,WAAW,EAAE,OAA3C;AAAoD,EAAA,GAAG,EAAE;AAAzD,CAJsB,EAKtB;AAAE,EAAA,KAAK,EAAE,QAAT;AAAmB,EAAA,KAAK,EAAE,QAA1B;AAAoC,EAAA,WAAW,EAAE,SAAjD;AAA4D,EAAA,GAAG,EAAE;AAAjE,CALsB,CAMtB;AANsB,CAAxB;AASA,OAAO,IAAM,aAAa,GAAG,kBAAkB,CAAC,kBAAkB,CAAC,kBAAkB,CAAC,YAAA;AAAM,SAC1F,KAAA,CAAA,aAAA,CAAC,YAAD,EAAa,IAAb,EACE,KAAA,CAAA,aAAA,CAAC,GAAD,EAAI;AAAC,IAAA,CAAC,EAAC;AAAH,GAAJ,EACE,KAAA,CAAA,aAAA,CAAC,WAAD,EAAY;AACV,IAAA,EAAE,EAAE,IAAI,CAAC,IAAD,EAAO,QAAP,CADE;AAEV,IAAA,KAAK,EAAE,IAAI,CAAC,OAAD,EAAU,OAAV,CAFD;AAGV,IAAA,OAAO,EAAE,MAAM,CAAC,sBAAD,EAAyB,OAAzB,CAHL;AAIV,IAAA,QAAQ,EAAE,MAAM,CAAC,sBAAD,CAJN;AAKV,IAAA,KAAK,EAAE,MAAM,CAAC,QAAD,EAAW;AACtB,MAAA,QAAQ,EAAE,UADY;AAEtB,MAAA,GAAG,EAAE,MAFiB;AAGtB,MAAA,IAAI,EAAE,MAHgB;AAItB,MAAA,SAAS,EAAE;AAJW,KAAX,CALH;AAWV,IAAA,SAAS,EAAE,QAAO,CAAC,WAAD,EAAc,KAAd,CAXR;AAYV,IAAA,UAAU,EAAE,QAAO,CAAC,YAAD,EAAe,KAAf,CAZT;AAaV,IAAA,QAAQ,EAAE,QAAO,CAAC,UAAD,EAAa,KAAb,CAbP;AAcV,IAAA,QAAQ,EAAE,MAAM,CAAC,UAAD,EAAa,eAAb,CAdN;AAeV,IAAA,cAAc,EAAE,QAAO,CAAC,gBAAD,EAAmB,KAAnB,CAfb;AAgBV,IAAA,eAAe,EAAE,MAAM,CAAC,kBAAD,EAAqB,CAArB,CAhBb;AAiBV,IAAA,eAAe,EAAE,MAAM,CAAC,kBAAD,EAAqB,eAArB,CAjBb;AAkBV,IAAA,cAAc,EAAE,KAAK,CAAC,iBAAD,EAAoB,CAAC,OAAD,EAAU,aAAV,CAApB,CAlBX;AAmBV,IAAA,WAAW,EAAE,MAAM,CAAC,aAAD,EAAgB,EAAhB,CAnBT;AAoBV,IAAA,aAAa,EAAE,MAAM,CAAC,kBAAD;AApBX,GAAZ,EAsBG,UAAC,EAAD,EAA+D;QAA5D,cAAc,GAAA,EAAA,CAAA,c;QAAE,UAAU,GAAA,EAAA,CAAA,U;QAAE,QAAQ,GAAA,EAAA,CAAA,Q;AAA6B,WACnE,KAAA,CAAA,aAAA,CAAC,SAAD,EAAU;AACR,MAAA,EAAE,EAAC,IADK;AAER,MAAA,KAAK,EAAC,OAFE;AAGR,MAAA,UAAU,EAAC,OAHH;AAIR,MAAA,WAAW,EAAC,aAJJ;AAKR,MAAA,KAAK,EAAE,QAAO,CAAC,kBAAD,EAAqB,KAArB,CALN;AAMR,MAAA,YAAY,EAAE,IAAI,CAAC,eAAD,EAAkB,sBAAlB,CANV;AAOR,MAAA,QAAQ,EAAE,QAAO,CAAC,UAAD,EAAa,KAAb,CAPT;AAQR,MAAA,OAAO,EAAE,mBAAA;AACP,QAAA,QAAQ,CAAC,CAAC,UAAF,CAAR;AACA,QAAA,MAAM,CAAC,yBAAD,CAAN,CAAkC,UAAlC;AACD,OAXO;AAYR,MAAA,KAAK,EACH,cAAc,IAAI,CAAA,cAAc,KAAA,IAAd,IAAA,cAAc,KAAA,KAAA,CAAd,GAAc,KAAA,CAAd,GAAA,cAAc,CAAE,MAAhB,IAAyB,CAA3C,GACI,CAAA,cAAc,KAAA,IAAd,IAAA,cAAc,KAAA,KAAA,CAAd,GAAc,KAAA,CAAd,GAAA,cAAc,CAAE,MAAhB,IAAyB,WAD7B,GAEI,EAfE;AAeA,mBAAA;AAfA,KAAV,CADmE;AAzBe,GAGtF,CADF,CADF,CAD0F;AAiD3F,CAjDoF,EAiDlF;AAAC,EAAA,SAAS,EAAA,SAAV;AAAY,EAAA,YAAY,EAAA,YAAxB;AAAyB,EAAA,sBAAsB,EAAA,sBAA/C;AAAgD,EAAA,uBAAuB,EAAA,uBAAvE;AAAwE,EAAA,sBAAsB,EAAA,sBAA9F;AAA+F,EAAA,iBAAiB,EAAA,iBAAhH;AAAiH,EAAA,qBAAqB,EAAA;AAAtI,CAjDkF,CAAnB,EAiD2E;AAAC,EAAA,SAAS,EAAA,SAAV;AAAY,EAAA,YAAY,EAAA,YAAxB;AAAyB,EAAA,sBAAsB,EAAA,sBAA/C;AAAgD,EAAA,uBAAuB,EAAA,uBAAvE;AAAwE,EAAA,sBAAsB,EAAA,sBAA9F;AAA+F,EAAA,iBAAiB,EAAA,iBAAhH;AAAiH,EAAA,qBAAqB,EAAA;AAAtI,CAjD3E,CAAnB,EAiDwO;AAAC,EAAA,SAAS,EAAA,SAAV;AAAY,EAAA,YAAY,EAAA,YAAxB;AAAyB,EAAA,sBAAsB,EAAA,sBAA/C;AAAgD,EAAA,uBAAuB,EAAA,uBAAvE;AAAwE,EAAA,sBAAsB,EAAA,sBAA9F;AAA+F,EAAA,iBAAiB,EAAA,iBAAhH;AAAiH,EAAA,qBAAqB,EAAA;AAAtI,CAjDxO,CAAxC","sourcesContent":["\n/* eslint-disable */\n// @ts-nocheck\n// @ts-ignore\nvar withSourceLoader = require('@storybook/source-loader/preview').withSource;\n// @ts-ignore\nvar addSourceDecorator = require(\"@storybook/source-loader/preview\").addSource;\n// @ts-ignore\nvar __SOURCE_PREFIX__ = \"/Users/farhanansari/Code/ui-library/src/components/molecules/MultiSelect/stories\";\n// @ts-ignore\nvar __STORY__ = \"\\n\\n// @ts-nocheck\\n// @ts-ignore\\nvar withSourceLoader = require('@storybook/source-loader/preview').withSource;\\n// @ts-ignore\\nvar addSourceDecorator = require(\\\"@storybook/source-loader/preview\\\").addSource;\\n// @ts-ignore\\nvar __SOURCE_PREFIX__ = \\\"/Users/farhanansari/Code/ui-library/src/components/molecules/MultiSelect/stories\\\";\\n// @ts-ignore\\nvar __STORY__ = \\\"\\\\n\\\\n// @ts-nocheck\\\\n// @ts-ignore\\\\nvar withSourceLoader = require('@storybook/source-loader/preview').withSource;\\\\n// @ts-ignore\\\\nvar addSourceDecorator = require(\\\\\\\"@storybook/source-loader/preview\\\\\\\").addSource;\\\\n// @ts-ignore\\\\nvar __SOURCE_PREFIX__ = \\\\\\\"/Users/farhanansari/Code/ui-library/src/components/molecules/MultiSelect/stories\\\\\\\";\\\\n// @ts-ignore\\\\nvar __STORY__ = \\\\\\\"import React from 'react'\\\\\\\\nimport MultiSelect from '../index'\\\\\\\\nimport Box from '../../../atoms/Box'\\\\\\\\nimport { path } from '../..'\\\\\\\\nimport ThemeWrapper from '../../../../utilities/components/ThemeWrapper'\\\\\\\\n\\\\\\\\nimport {\\\\\\\\n  boolean,\\\\\\\\n  text,\\\\\\\\n  object,\\\\\\\\n  withKnobs,\\\\\\\\n  number,\\\\\\\\n  array\\\\\\\\n} from '@storybook/addon-knobs'\\\\\\\\nimport { action } from '@storybook/addon-actions'\\\\\\\\nimport TextInput from '../../TextInput'\\\\\\\\nimport { tMultiSelectChildren } from '../interfaces'\\\\\\\\n\\\\\\\\nexport default {\\\\\\\\n  title: `${path}/MultiSelect`,\\\\\\\\n  component: MultiSelect,\\\\\\\\n  decorators: [withKnobs],\\\\\\\\n  parameters: {\\\\\\\\n    props: {\\\\\\\\n      propTablesExclude: [Box, ThemeWrapper, TextInput]\\\\\\\\n    }\\\\\\\\n  }\\\\\\\\n}\\\\\\\\n\\\\\\\\nconst options = [\\\\\\\\n  { value: 'ocean', label: 'Ocean', phoneNumber: '1234', age: '10' },\\\\\\\\n  { value: 'blue', label: 'Blue', phoneNumber: '455556', age: '12' },\\\\\\\\n  { value: 'purple', label: 'Purple', phoneNumber: '67778', age: '13' },\\\\\\\\n  { value: 'red', label: 'Red', phoneNumber: '89990', age: '14' },\\\\\\\\n  { value: 'orange', label: 'Orange', phoneNumber: '001323', age: '15' },\\\\\\\\n  { value: 'yellow', label: 'Yellow', phoneNumber: '99243452', age: '16' },\\\\\\\\n  { value: 'green', label: 'Green', phoneNumber: '120009', age: '18' },\\\\\\\\n  { value: 'forest', label: 'Forest', phoneNumber: '0000000', age: '20' },\\\\\\\\n  { value: 'slate', label: 'Slate', phoneNumber: '11111111', age: '30' },\\\\\\\\n  { value: 'silver', label: 'Silver', phoneNumber: '22222222', age: '40' },\\\\\\\\n  { value: 'green1', label: 'Green1', phoneNumber: '120009', age: '18' },\\\\\\\\n  { value: 'forest1', label: 'Forest1', phoneNumber: '0000000', age: '20' },\\\\\\\\n  { value: 'slate1', label: 'Slate1', phoneNumber: '11111111', age: '30' },\\\\\\\\n  { value: 'silver1', label: 'Silver1', phoneNumber: '22222222', age: '40' }\\\\\\\\n]\\\\\\\\nconst selectedOptions = [\\\\\\\\n  { value: 'ocean', label: 'Ocean', phoneNumber: '1234', age: '10' },\\\\\\\\n  { value: 'blue', label: 'Blue', phoneNumber: '455556', age: '12' },\\\\\\\\n  { value: 'purple', label: 'Purple', phoneNumber: '67778', age: '13' },\\\\\\\\n  { value: 'red', label: 'Red', phoneNumber: '89990', age: '14' },\\\\\\\\n  { value: 'forest', label: 'Forest', phoneNumber: '0000000', age: '20' }\\\\\\\\n  // { value: 'slate', label: 'Slate', phoneNumber: '11111111', age: '30' }\\\\\\\\n]\\\\\\\\n\\\\\\\\nexport const withTextField = () => (\\\\\\\\n  <ThemeWrapper>\\\\\\\\n    <Box p='1em'>\\\\\\\\n      <MultiSelect\\\\\\\\n        id={text('id', 'Colors')}\\\\\\\\n        width={text('width', '300px')}\\\\\\\\n        options={object('Multi Select Options', options)}\\\\\\\\n        onChange={action('Multi Select changed')}\\\\\\\\n        style={object('styles', {\\\\\\\\n          position: 'absolute',\\\\\\\\n          top: 'auto',\\\\\\\\n          left: 'auto',\\\\\\\\n          marginTop: '-18px'\\\\\\\\n        })}\\\\\\\\n        isLoading={boolean('isLoading', false)}\\\\\\\\n        isNoOption={boolean('isNoOption', false)}\\\\\\\\n        menuOpen={boolean('menuOpen', false)}\\\\\\\\n        selected={object('selected', selectedOptions)}\\\\\\\\n        allowSelectAll={boolean('allowSelectAll', false)}\\\\\\\\n        maximumSelected={number('maximum Selected', 5)}\\\\\\\\n        defaultSelected={object('default Selected', selectedOptions)}\\\\\\\\n        searchableKeys={array('Searchable Keys', ['label', 'phoneNumber'])}\\\\\\\\n        resultLimit={number('resultLimit', 10)}\\\\\\\\n        onInputChange={action('on Input changed')}\\\\\\\\n      >\\\\\\\\n        {({ optionSelected, isMenuOpen, openMenu }: tMultiSelectChildren) => (\\\\\\\\n          <TextInput\\\\\\\\n            id='id'\\\\\\\\n            label='Color'\\\\\\\\n            labelColor='black'\\\\\\\\n            placeholder='Select ... '\\\\\\\\n            error={boolean('Text Input error', false)}\\\\\\\\n            errorMessage={text('error Message', 'Its an error Message')}\\\\\\\\n            disabled={boolean('disabled', false)}\\\\\\\\n            onClick={() => {\\\\\\\\n              openMenu(!isMenuOpen)\\\\\\\\n              action('MultiSelect open/closed')(isMenuOpen)\\\\\\\\n            }}\\\\\\\\n            value={\\\\\\\\n              optionSelected && optionSelected?.length > 0\\\\\\\\n                ? optionSelected?.length + ' Selected'\\\\\\\\n                : ''\\\\\\\\n            }\\\\\\\\n            read-only\\\\\\\\n          />\\\\\\\\n        )}\\\\\\\\n      </MultiSelect>\\\\\\\\n    </Box>\\\\\\\\n  </ThemeWrapper>\\\\\\\\n)\\\\\\\\n\\\\\\\";\\\\n// @ts-ignore\\\\nvar __ADDS_MAP__ = {};\\\\n// @ts-ignore\\\\nvar __MAIN_FILE_LOCATION__ = \\\\\\\"/withTextField.stories.tsx\\\\\\\";\\\\n// @ts-ignore\\\\nvar __MODULE_DEPENDENCIES__ = [];\\\\n// @ts-ignore\\\\nvar __LOCAL_DEPENDENCIES__ = {};\\\\n// @ts-ignore\\\\nvar __IDS_TO_FRAMEWORKS__ = {};\\\\n        \\\\nimport React from 'react'\\\\nimport MultiSelect from '../index'\\\\nimport Box from '../../../atoms/Box'\\\\nimport { path } from '../..'\\\\nimport ThemeWrapper from '../../../../utilities/components/ThemeWrapper'\\\\n\\\\nimport {\\\\n  boolean,\\\\n  text,\\\\n  object,\\\\n  withKnobs,\\\\n  number,\\\\n  array\\\\n} from '@storybook/addon-knobs'\\\\nimport { action } from '@storybook/addon-actions'\\\\nimport TextInput from '../../TextInput'\\\\nimport { tMultiSelectChildren } from '../interfaces'\\\\n\\\\nexport default {\\\\n  title: `${path}/MultiSelect`,\\\\n  component: MultiSelect,\\\\n  decorators: [withKnobs],\\\\n  parameters: {\\\\\\\"storySource\\\\\\\":{\\\\\\\"source\\\\\\\":\\\\\\\"import React from 'react'\\\\\\\\nimport MultiSelect from '../index'\\\\\\\\nimport Box from '../../../atoms/Box'\\\\\\\\nimport { path } from '../..'\\\\\\\\nimport ThemeWrapper from '../../../../utilities/components/ThemeWrapper'\\\\\\\\n\\\\\\\\nimport {\\\\\\\\n  boolean,\\\\\\\\n  text,\\\\\\\\n  object,\\\\\\\\n  withKnobs,\\\\\\\\n  number,\\\\\\\\n  array\\\\\\\\n} from '@storybook/addon-knobs'\\\\\\\\nimport { action } from '@storybook/addon-actions'\\\\\\\\nimport TextInput from '../../TextInput'\\\\\\\\nimport { tMultiSelectChildren } from '../interfaces'\\\\\\\\n\\\\\\\\nexport default {\\\\\\\\n  title: `${path}/MultiSelect`,\\\\\\\\n  component: MultiSelect,\\\\\\\\n  decorators: [withKnobs],\\\\\\\\n  parameters: {\\\\\\\\n    props: {\\\\\\\\n      propTablesExclude: [Box, ThemeWrapper, TextInput]\\\\\\\\n    }\\\\\\\\n  }\\\\\\\\n}\\\\\\\\n\\\\\\\\nconst options = [\\\\\\\\n  { value: 'ocean', label: 'Ocean', phoneNumber: '1234', age: '10' },\\\\\\\\n  { value: 'blue', label: 'Blue', phoneNumber: '455556', age: '12' },\\\\\\\\n  { value: 'purple', label: 'Purple', phoneNumber: '67778', age: '13' },\\\\\\\\n  { value: 'red', label: 'Red', phoneNumber: '89990', age: '14' },\\\\\\\\n  { value: 'orange', label: 'Orange', phoneNumber: '001323', age: '15' },\\\\\\\\n  { value: 'yellow', label: 'Yellow', phoneNumber: '99243452', age: '16' },\\\\\\\\n  { value: 'green', label: 'Green', phoneNumber: '120009', age: '18' },\\\\\\\\n  { value: 'forest', label: 'Forest', phoneNumber: '0000000', age: '20' },\\\\\\\\n  { value: 'slate', label: 'Slate', phoneNumber: '11111111', age: '30' },\\\\\\\\n  { value: 'silver', label: 'Silver', phoneNumber: '22222222', age: '40' },\\\\\\\\n  { value: 'green1', label: 'Green1', phoneNumber: '120009', age: '18' },\\\\\\\\n  { value: 'forest1', label: 'Forest1', phoneNumber: '0000000', age: '20' },\\\\\\\\n  { value: 'slate1', label: 'Slate1', phoneNumber: '11111111', age: '30' },\\\\\\\\n  { value: 'silver1', label: 'Silver1', phoneNumber: '22222222', age: '40' }\\\\\\\\n]\\\\\\\\nconst selectedOptions = [\\\\\\\\n  { value: 'ocean', label: 'Ocean', phoneNumber: '1234', age: '10' },\\\\\\\\n  { value: 'blue', label: 'Blue', phoneNumber: '455556', age: '12' },\\\\\\\\n  { value: 'purple', label: 'Purple', phoneNumber: '67778', age: '13' },\\\\\\\\n  { value: 'red', label: 'Red', phoneNumber: '89990', age: '14' },\\\\\\\\n  { value: 'forest', label: 'Forest', phoneNumber: '0000000', age: '20' }\\\\\\\\n  // { value: 'slate', label: 'Slate', phoneNumber: '11111111', age: '30' }\\\\\\\\n]\\\\\\\\n\\\\\\\\nexport const withTextField = () => (\\\\\\\\n  <ThemeWrapper>\\\\\\\\n    <Box p='1em'>\\\\\\\\n      <MultiSelect\\\\\\\\n        id={text('id', 'Colors')}\\\\\\\\n        width={text('width', '300px')}\\\\\\\\n        options={object('Multi Select Options', options)}\\\\\\\\n        onChange={action('Multi Select changed')}\\\\\\\\n        style={object('styles', {\\\\\\\\n          position: 'absolute',\\\\\\\\n          top: 'auto',\\\\\\\\n          left: 'auto',\\\\\\\\n          marginTop: '-18px'\\\\\\\\n        })}\\\\\\\\n        isLoading={boolean('isLoading', false)}\\\\\\\\n        isNoOption={boolean('isNoOption', false)}\\\\\\\\n        menuOpen={boolean('menuOpen', false)}\\\\\\\\n        selected={object('selected', selectedOptions)}\\\\\\\\n        allowSelectAll={boolean('allowSelectAll', false)}\\\\\\\\n        maximumSelected={number('maximum Selected', 5)}\\\\\\\\n        defaultSelected={object('default Selected', selectedOptions)}\\\\\\\\n        searchableKeys={array('Searchable Keys', ['label', 'phoneNumber'])}\\\\\\\\n        resultLimit={number('resultLimit', 10)}\\\\\\\\n        onInputChange={action('on Input changed')}\\\\\\\\n      >\\\\\\\\n        {({ optionSelected, isMenuOpen, openMenu }: tMultiSelectChildren) => (\\\\\\\\n          <TextInput\\\\\\\\n            id='id'\\\\\\\\n            label='Color'\\\\\\\\n            labelColor='black'\\\\\\\\n            placeholder='Select ... '\\\\\\\\n            error={boolean('Text Input error', false)}\\\\\\\\n            errorMessage={text('error Message', 'Its an error Message')}\\\\\\\\n            disabled={boolean('disabled', false)}\\\\\\\\n            onClick={() => {\\\\\\\\n              openMenu(!isMenuOpen)\\\\\\\\n              action('MultiSelect open/closed')(isMenuOpen)\\\\\\\\n            }}\\\\\\\\n            value={\\\\\\\\n              optionSelected && optionSelected?.length > 0\\\\\\\\n                ? optionSelected?.length + ' Selected'\\\\\\\\n                : ''\\\\\\\\n            }\\\\\\\\n            read-only\\\\\\\\n          />\\\\\\\\n        )}\\\\\\\\n      </MultiSelect>\\\\\\\\n    </Box>\\\\\\\\n  </ThemeWrapper>\\\\\\\\n)\\\\\\\\n\\\\\\\",\\\\\\\"locationsMap\\\\\\\":{}},\\\\n    props: {\\\\n      propTablesExclude: [Box, ThemeWrapper, TextInput]\\\\n    }\\\\n  },}\\\\n\\\\nconst options = [\\\\n  { value: 'ocean', label: 'Ocean', phoneNumber: '1234', age: '10' },\\\\n  { value: 'blue', label: 'Blue', phoneNumber: '455556', age: '12' },\\\\n  { value: 'purple', label: 'Purple', phoneNumber: '67778', age: '13' },\\\\n  { value: 'red', label: 'Red', phoneNumber: '89990', age: '14' },\\\\n  { value: 'orange', label: 'Orange', phoneNumber: '001323', age: '15' },\\\\n  { value: 'yellow', label: 'Yellow', phoneNumber: '99243452', age: '16' },\\\\n  { value: 'green', label: 'Green', phoneNumber: '120009', age: '18' },\\\\n  { value: 'forest', label: 'Forest', phoneNumber: '0000000', age: '20' },\\\\n  { value: 'slate', label: 'Slate', phoneNumber: '11111111', age: '30' },\\\\n  { value: 'silver', label: 'Silver', phoneNumber: '22222222', age: '40' },\\\\n  { value: 'green1', label: 'Green1', phoneNumber: '120009', age: '18' },\\\\n  { value: 'forest1', label: 'Forest1', phoneNumber: '0000000', age: '20' },\\\\n  { value: 'slate1', label: 'Slate1', phoneNumber: '11111111', age: '30' },\\\\n  { value: 'silver1', label: 'Silver1', phoneNumber: '22222222', age: '40' }\\\\n]\\\\nconst selectedOptions = [\\\\n  { value: 'ocean', label: 'Ocean', phoneNumber: '1234', age: '10' },\\\\n  { value: 'blue', label: 'Blue', phoneNumber: '455556', age: '12' },\\\\n  { value: 'purple', label: 'Purple', phoneNumber: '67778', age: '13' },\\\\n  { value: 'red', label: 'Red', phoneNumber: '89990', age: '14' },\\\\n  { value: 'forest', label: 'Forest', phoneNumber: '0000000', age: '20' }\\\\n  // { value: 'slate', label: 'Slate', phoneNumber: '11111111', age: '30' }\\\\n]\\\\n\\\\nexport const withTextField = addSourceDecorator(() => (\\\\n  <ThemeWrapper>\\\\n    <Box p='1em'>\\\\n      <MultiSelect\\\\n        id={text('id', 'Colors')}\\\\n        width={text('width', '300px')}\\\\n        options={object('Multi Select Options', options)}\\\\n        onChange={action('Multi Select changed')}\\\\n        style={object('styles', {\\\\n          position: 'absolute',\\\\n          top: 'auto',\\\\n          left: 'auto',\\\\n          marginTop: '-18px'\\\\n        })}\\\\n        isLoading={boolean('isLoading', false)}\\\\n        isNoOption={boolean('isNoOption', false)}\\\\n        menuOpen={boolean('menuOpen', false)}\\\\n        selected={object('selected', selectedOptions)}\\\\n        allowSelectAll={boolean('allowSelectAll', false)}\\\\n        maximumSelected={number('maximum Selected', 5)}\\\\n        defaultSelected={object('default Selected', selectedOptions)}\\\\n        searchableKeys={array('Searchable Keys', ['label', 'phoneNumber'])}\\\\n        resultLimit={number('resultLimit', 10)}\\\\n        onInputChange={action('on Input changed')}\\\\n      >\\\\n        {({ optionSelected, isMenuOpen, openMenu }: tMultiSelectChildren) => (\\\\n          <TextInput\\\\n            id='id'\\\\n            label='Color'\\\\n            labelColor='black'\\\\n            placeholder='Select ... '\\\\n            error={boolean('Text Input error', false)}\\\\n            errorMessage={text('error Message', 'Its an error Message')}\\\\n            disabled={boolean('disabled', false)}\\\\n            onClick={() => {\\\\n              openMenu(!isMenuOpen)\\\\n              action('MultiSelect open/closed')(isMenuOpen)\\\\n            }}\\\\n            value={\\\\n              optionSelected && optionSelected?.length > 0\\\\n                ? optionSelected?.length + ' Selected'\\\\n                : ''\\\\n            }\\\\n            read-only\\\\n          />\\\\n        )}\\\\n      </MultiSelect>\\\\n    </Box>\\\\n  </ThemeWrapper>\\\\n), {__STORY__, __ADDS_MAP__,__MAIN_FILE_LOCATION__,__MODULE_DEPENDENCIES__,__LOCAL_DEPENDENCIES__,__SOURCE_PREFIX__,__IDS_TO_FRAMEWORKS__});\\\";\\n// @ts-ignore\\nvar __ADDS_MAP__ = {};\\n// @ts-ignore\\nvar __MAIN_FILE_LOCATION__ = \\\"/withTextField.stories.tsx\\\";\\n// @ts-ignore\\nvar __MODULE_DEPENDENCIES__ = [];\\n// @ts-ignore\\nvar __LOCAL_DEPENDENCIES__ = {};\\n// @ts-ignore\\nvar __IDS_TO_FRAMEWORKS__ = {};\\n        \\n\\n\\n// @ts-nocheck\\n// @ts-ignore\\nvar withSourceLoader = require('@storybook/source-loader/preview').withSource;\\n// @ts-ignore\\nvar addSourceDecorator = require(\\\"@storybook/source-loader/preview\\\").addSource;\\n// @ts-ignore\\nvar __SOURCE_PREFIX__ = \\\"/Users/farhanansari/Code/ui-library/src/components/molecules/MultiSelect/stories\\\";\\n// @ts-ignore\\nvar __STORY__ = \\\"import React from 'react'\\\\nimport MultiSelect from '../index'\\\\nimport Box from '../../../atoms/Box'\\\\nimport { path } from '../..'\\\\nimport ThemeWrapper from '../../../../utilities/components/ThemeWrapper'\\\\n\\\\nimport {\\\\n  boolean,\\\\n  text,\\\\n  object,\\\\n  withKnobs,\\\\n  number,\\\\n  array\\\\n} from '@storybook/addon-knobs'\\\\nimport { action } from '@storybook/addon-actions'\\\\nimport TextInput from '../../TextInput'\\\\nimport { tMultiSelectChildren } from '../interfaces'\\\\n\\\\nexport default {\\\\n  title: `${path}/MultiSelect`,\\\\n  component: MultiSelect,\\\\n  decorators: [withKnobs],\\\\n  parameters: {\\\\n    props: {\\\\n      propTablesExclude: [Box, ThemeWrapper, TextInput]\\\\n    }\\\\n  }\\\\n}\\\\n\\\\nconst options = [\\\\n  { value: 'ocean', label: 'Ocean', phoneNumber: '1234', age: '10' },\\\\n  { value: 'blue', label: 'Blue', phoneNumber: '455556', age: '12' },\\\\n  { value: 'purple', label: 'Purple', phoneNumber: '67778', age: '13' },\\\\n  { value: 'red', label: 'Red', phoneNumber: '89990', age: '14' },\\\\n  { value: 'orange', label: 'Orange', phoneNumber: '001323', age: '15' },\\\\n  { value: 'yellow', label: 'Yellow', phoneNumber: '99243452', age: '16' },\\\\n  { value: 'green', label: 'Green', phoneNumber: '120009', age: '18' },\\\\n  { value: 'forest', label: 'Forest', phoneNumber: '0000000', age: '20' },\\\\n  { value: 'slate', label: 'Slate', phoneNumber: '11111111', age: '30' },\\\\n  { value: 'silver', label: 'Silver', phoneNumber: '22222222', age: '40' },\\\\n  { value: 'green1', label: 'Green1', phoneNumber: '120009', age: '18' },\\\\n  { value: 'forest1', label: 'Forest1', phoneNumber: '0000000', age: '20' },\\\\n  { value: 'slate1', label: 'Slate1', phoneNumber: '11111111', age: '30' },\\\\n  { value: 'silver1', label: 'Silver1', phoneNumber: '22222222', age: '40' }\\\\n]\\\\nconst selectedOptions = [\\\\n  { value: 'ocean', label: 'Ocean', phoneNumber: '1234', age: '10' },\\\\n  { value: 'blue', label: 'Blue', phoneNumber: '455556', age: '12' },\\\\n  { value: 'purple', label: 'Purple', phoneNumber: '67778', age: '13' },\\\\n  { value: 'red', label: 'Red', phoneNumber: '89990', age: '14' },\\\\n  { value: 'forest', label: 'Forest', phoneNumber: '0000000', age: '20' }\\\\n  // { value: 'slate', label: 'Slate', phoneNumber: '11111111', age: '30' }\\\\n]\\\\n\\\\nexport const withTextField = () => (\\\\n  <ThemeWrapper>\\\\n    <Box p='1em'>\\\\n      <MultiSelect\\\\n        id={text('id', 'Colors')}\\\\n        width={text('width', '300px')}\\\\n        options={object('Multi Select Options', options)}\\\\n        onChange={action('Multi Select changed')}\\\\n        style={object('styles', {\\\\n          position: 'absolute',\\\\n          top: 'auto',\\\\n          left: 'auto',\\\\n          marginTop: '-18px'\\\\n        })}\\\\n        isLoading={boolean('isLoading', false)}\\\\n        isNoOption={boolean('isNoOption', false)}\\\\n        menuOpen={boolean('menuOpen', false)}\\\\n        selected={object('selected', selectedOptions)}\\\\n        allowSelectAll={boolean('allowSelectAll', false)}\\\\n        maximumSelected={number('maximum Selected', 5)}\\\\n        defaultSelected={object('default Selected', selectedOptions)}\\\\n        searchableKeys={array('Searchable Keys', ['label', 'phoneNumber'])}\\\\n        resultLimit={number('resultLimit', 10)}\\\\n        onInputChange={action('on Input changed')}\\\\n      >\\\\n        {({ optionSelected, isMenuOpen, openMenu }: tMultiSelectChildren) => (\\\\n          <TextInput\\\\n            id='id'\\\\n            label='Color'\\\\n            labelColor='black'\\\\n            placeholder='Select ... '\\\\n            error={boolean('Text Input error', false)}\\\\n            errorMessage={text('error Message', 'Its an error Message')}\\\\n            disabled={boolean('disabled', false)}\\\\n            onClick={() => {\\\\n              openMenu(!isMenuOpen)\\\\n              action('MultiSelect open/closed')(isMenuOpen)\\\\n            }}\\\\n            value={\\\\n              optionSelected && optionSelected?.length > 0\\\\n                ? optionSelected?.length + ' Selected'\\\\n                : ''\\\\n            }\\\\n            read-only\\\\n          />\\\\n        )}\\\\n      </MultiSelect>\\\\n    </Box>\\\\n  </ThemeWrapper>\\\\n)\\\\n\\\";\\n// @ts-ignore\\nvar __ADDS_MAP__ = {};\\n// @ts-ignore\\nvar __MAIN_FILE_LOCATION__ = \\\"/withTextField.stories.tsx\\\";\\n// @ts-ignore\\nvar __MODULE_DEPENDENCIES__ = [];\\n// @ts-ignore\\nvar __LOCAL_DEPENDENCIES__ = {};\\n// @ts-ignore\\nvar __IDS_TO_FRAMEWORKS__ = {};\\n        \\nimport React from 'react'\\nimport MultiSelect from '../index'\\nimport Box from '../../../atoms/Box'\\nimport { path } from '../..'\\nimport ThemeWrapper from '../../../../utilities/components/ThemeWrapper'\\n\\nimport {\\n  boolean,\\n  text,\\n  object,\\n  withKnobs,\\n  number,\\n  array\\n} from '@storybook/addon-knobs'\\nimport { action } from '@storybook/addon-actions'\\nimport TextInput from '../../TextInput'\\nimport { tMultiSelectChildren } from '../interfaces'\\n\\nexport default {\\n  title: `${path}/MultiSelect`,\\n  component: MultiSelect,\\n  decorators: [withKnobs],\\n  parameters: {\\\"storySource\\\":{\\\"source\\\":\\\"\\\\n\\\\n// @ts-nocheck\\\\n// @ts-ignore\\\\nvar withSourceLoader = require('@storybook/source-loader/preview').withSource;\\\\n// @ts-ignore\\\\nvar addSourceDecorator = require(\\\\\\\"@storybook/source-loader/preview\\\\\\\").addSource;\\\\n// @ts-ignore\\\\nvar __SOURCE_PREFIX__ = \\\\\\\"/Users/farhanansari/Code/ui-library/src/components/molecules/MultiSelect/stories\\\\\\\";\\\\n// @ts-ignore\\\\nvar __STORY__ = \\\\\\\"import React from 'react'\\\\\\\\nimport MultiSelect from '../index'\\\\\\\\nimport Box from '../../../atoms/Box'\\\\\\\\nimport { path } from '../..'\\\\\\\\nimport ThemeWrapper from '../../../../utilities/components/ThemeWrapper'\\\\\\\\n\\\\\\\\nimport {\\\\\\\\n  boolean,\\\\\\\\n  text,\\\\\\\\n  object,\\\\\\\\n  withKnobs,\\\\\\\\n  number,\\\\\\\\n  array\\\\\\\\n} from '@storybook/addon-knobs'\\\\\\\\nimport { action } from '@storybook/addon-actions'\\\\\\\\nimport TextInput from '../../TextInput'\\\\\\\\nimport { tMultiSelectChildren } from '../interfaces'\\\\\\\\n\\\\\\\\nexport default {\\\\\\\\n  title: `${path}/MultiSelect`,\\\\\\\\n  component: MultiSelect,\\\\\\\\n  decorators: [withKnobs],\\\\\\\\n  parameters: {\\\\\\\\n    props: {\\\\\\\\n      propTablesExclude: [Box, ThemeWrapper, TextInput]\\\\\\\\n    }\\\\\\\\n  }\\\\\\\\n}\\\\\\\\n\\\\\\\\nconst options = [\\\\\\\\n  { value: 'ocean', label: 'Ocean', phoneNumber: '1234', age: '10' },\\\\\\\\n  { value: 'blue', label: 'Blue', phoneNumber: '455556', age: '12' },\\\\\\\\n  { value: 'purple', label: 'Purple', phoneNumber: '67778', age: '13' },\\\\\\\\n  { value: 'red', label: 'Red', phoneNumber: '89990', age: '14' },\\\\\\\\n  { value: 'orange', label: 'Orange', phoneNumber: '001323', age: '15' },\\\\\\\\n  { value: 'yellow', label: 'Yellow', phoneNumber: '99243452', age: '16' },\\\\\\\\n  { value: 'green', label: 'Green', phoneNumber: '120009', age: '18' },\\\\\\\\n  { value: 'forest', label: 'Forest', phoneNumber: '0000000', age: '20' },\\\\\\\\n  { value: 'slate', label: 'Slate', phoneNumber: '11111111', age: '30' },\\\\\\\\n  { value: 'silver', label: 'Silver', phoneNumber: '22222222', age: '40' },\\\\\\\\n  { value: 'green1', label: 'Green1', phoneNumber: '120009', age: '18' },\\\\\\\\n  { value: 'forest1', label: 'Forest1', phoneNumber: '0000000', age: '20' },\\\\\\\\n  { value: 'slate1', label: 'Slate1', phoneNumber: '11111111', age: '30' },\\\\\\\\n  { value: 'silver1', label: 'Silver1', phoneNumber: '22222222', age: '40' }\\\\\\\\n]\\\\\\\\nconst selectedOptions = [\\\\\\\\n  { value: 'ocean', label: 'Ocean', phoneNumber: '1234', age: '10' },\\\\\\\\n  { value: 'blue', label: 'Blue', phoneNumber: '455556', age: '12' },\\\\\\\\n  { value: 'purple', label: 'Purple', phoneNumber: '67778', age: '13' },\\\\\\\\n  { value: 'red', label: 'Red', phoneNumber: '89990', age: '14' },\\\\\\\\n  { value: 'forest', label: 'Forest', phoneNumber: '0000000', age: '20' }\\\\\\\\n  // { value: 'slate', label: 'Slate', phoneNumber: '11111111', age: '30' }\\\\\\\\n]\\\\\\\\n\\\\\\\\nexport const withTextField = () => (\\\\\\\\n  <ThemeWrapper>\\\\\\\\n    <Box p='1em'>\\\\\\\\n      <MultiSelect\\\\\\\\n        id={text('id', 'Colors')}\\\\\\\\n        width={text('width', '300px')}\\\\\\\\n        options={object('Multi Select Options', options)}\\\\\\\\n        onChange={action('Multi Select changed')}\\\\\\\\n        style={object('styles', {\\\\\\\\n          position: 'absolute',\\\\\\\\n          top: 'auto',\\\\\\\\n          left: 'auto',\\\\\\\\n          marginTop: '-18px'\\\\\\\\n        })}\\\\\\\\n        isLoading={boolean('isLoading', false)}\\\\\\\\n        isNoOption={boolean('isNoOption', false)}\\\\\\\\n        menuOpen={boolean('menuOpen', false)}\\\\\\\\n        selected={object('selected', selectedOptions)}\\\\\\\\n        allowSelectAll={boolean('allowSelectAll', false)}\\\\\\\\n        maximumSelected={number('maximum Selected', 5)}\\\\\\\\n        defaultSelected={object('default Selected', selectedOptions)}\\\\\\\\n        searchableKeys={array('Searchable Keys', ['label', 'phoneNumber'])}\\\\\\\\n        resultLimit={number('resultLimit', 10)}\\\\\\\\n        onInputChange={action('on Input changed')}\\\\\\\\n      >\\\\\\\\n        {({ optionSelected, isMenuOpen, openMenu }: tMultiSelectChildren) => (\\\\\\\\n          <TextInput\\\\\\\\n            id='id'\\\\\\\\n            label='Color'\\\\\\\\n            labelColor='black'\\\\\\\\n            placeholder='Select ... '\\\\\\\\n            error={boolean('Text Input error', false)}\\\\\\\\n            errorMessage={text('error Message', 'Its an error Message')}\\\\\\\\n            disabled={boolean('disabled', false)}\\\\\\\\n            onClick={() => {\\\\\\\\n              openMenu(!isMenuOpen)\\\\\\\\n              action('MultiSelect open/closed')(isMenuOpen)\\\\\\\\n            }}\\\\\\\\n            value={\\\\\\\\n              optionSelected && optionSelected?.length > 0\\\\\\\\n                ? optionSelected?.length + ' Selected'\\\\\\\\n                : ''\\\\\\\\n            }\\\\\\\\n            read-only\\\\\\\\n          />\\\\\\\\n        )}\\\\\\\\n      </MultiSelect>\\\\\\\\n    </Box>\\\\\\\\n  </ThemeWrapper>\\\\\\\\n)\\\\\\\\n\\\\\\\";\\\\n// @ts-ignore\\\\nvar __ADDS_MAP__ = {};\\\\n// @ts-ignore\\\\nvar __MAIN_FILE_LOCATION__ = \\\\\\\"/withTextField.stories.tsx\\\\\\\";\\\\n// @ts-ignore\\\\nvar __MODULE_DEPENDENCIES__ = [];\\\\n// @ts-ignore\\\\nvar __LOCAL_DEPENDENCIES__ = {};\\\\n// @ts-ignore\\\\nvar __IDS_TO_FRAMEWORKS__ = {};\\\\n        \\\\nimport React from 'react'\\\\nimport MultiSelect from '../index'\\\\nimport Box from '../../../atoms/Box'\\\\nimport { path } from '../..'\\\\nimport ThemeWrapper from '../../../../utilities/components/ThemeWrapper'\\\\n\\\\nimport {\\\\n  boolean,\\\\n  text,\\\\n  object,\\\\n  withKnobs,\\\\n  number,\\\\n  array\\\\n} from '@storybook/addon-knobs'\\\\nimport { action } from '@storybook/addon-actions'\\\\nimport TextInput from '../../TextInput'\\\\nimport { tMultiSelectChildren } from '../interfaces'\\\\n\\\\nexport default {\\\\n  title: `${path}/MultiSelect`,\\\\n  component: MultiSelect,\\\\n  decorators: [withKnobs],\\\\n  parameters: {\\\\\\\"storySource\\\\\\\":{\\\\\\\"source\\\\\\\":\\\\\\\"import React from 'react'\\\\\\\\nimport MultiSelect from '../index'\\\\\\\\nimport Box from '../../../atoms/Box'\\\\\\\\nimport { path } from '../..'\\\\\\\\nimport ThemeWrapper from '../../../../utilities/components/ThemeWrapper'\\\\\\\\n\\\\\\\\nimport {\\\\\\\\n  boolean,\\\\\\\\n  text,\\\\\\\\n  object,\\\\\\\\n  withKnobs,\\\\\\\\n  number,\\\\\\\\n  array\\\\\\\\n} from '@storybook/addon-knobs'\\\\\\\\nimport { action } from '@storybook/addon-actions'\\\\\\\\nimport TextInput from '../../TextInput'\\\\\\\\nimport { tMultiSelectChildren } from '../interfaces'\\\\\\\\n\\\\\\\\nexport default {\\\\\\\\n  title: `${path}/MultiSelect`,\\\\\\\\n  component: MultiSelect,\\\\\\\\n  decorators: [withKnobs],\\\\\\\\n  parameters: {\\\\\\\\n    props: {\\\\\\\\n      propTablesExclude: [Box, ThemeWrapper, TextInput]\\\\\\\\n    }\\\\\\\\n  }\\\\\\\\n}\\\\\\\\n\\\\\\\\nconst options = [\\\\\\\\n  { value: 'ocean', label: 'Ocean', phoneNumber: '1234', age: '10' },\\\\\\\\n  { value: 'blue', label: 'Blue', phoneNumber: '455556', age: '12' },\\\\\\\\n  { value: 'purple', label: 'Purple', phoneNumber: '67778', age: '13' },\\\\\\\\n  { value: 'red', label: 'Red', phoneNumber: '89990', age: '14' },\\\\\\\\n  { value: 'orange', label: 'Orange', phoneNumber: '001323', age: '15' },\\\\\\\\n  { value: 'yellow', label: 'Yellow', phoneNumber: '99243452', age: '16' },\\\\\\\\n  { value: 'green', label: 'Green', phoneNumber: '120009', age: '18' },\\\\\\\\n  { value: 'forest', label: 'Forest', phoneNumber: '0000000', age: '20' },\\\\\\\\n  { value: 'slate', label: 'Slate', phoneNumber: '11111111', age: '30' },\\\\\\\\n  { value: 'silver', label: 'Silver', phoneNumber: '22222222', age: '40' },\\\\\\\\n  { value: 'green1', label: 'Green1', phoneNumber: '120009', age: '18' },\\\\\\\\n  { value: 'forest1', label: 'Forest1', phoneNumber: '0000000', age: '20' },\\\\\\\\n  { value: 'slate1', label: 'Slate1', phoneNumber: '11111111', age: '30' },\\\\\\\\n  { value: 'silver1', label: 'Silver1', phoneNumber: '22222222', age: '40' }\\\\\\\\n]\\\\\\\\nconst selectedOptions = [\\\\\\\\n  { value: 'ocean', label: 'Ocean', phoneNumber: '1234', age: '10' },\\\\\\\\n  { value: 'blue', label: 'Blue', phoneNumber: '455556', age: '12' },\\\\\\\\n  { value: 'purple', label: 'Purple', phoneNumber: '67778', age: '13' },\\\\\\\\n  { value: 'red', label: 'Red', phoneNumber: '89990', age: '14' },\\\\\\\\n  { value: 'forest', label: 'Forest', phoneNumber: '0000000', age: '20' }\\\\\\\\n  // { value: 'slate', label: 'Slate', phoneNumber: '11111111', age: '30' }\\\\\\\\n]\\\\\\\\n\\\\\\\\nexport const withTextField = () => (\\\\\\\\n  <ThemeWrapper>\\\\\\\\n    <Box p='1em'>\\\\\\\\n      <MultiSelect\\\\\\\\n        id={text('id', 'Colors')}\\\\\\\\n        width={text('width', '300px')}\\\\\\\\n        options={object('Multi Select Options', options)}\\\\\\\\n        onChange={action('Multi Select changed')}\\\\\\\\n        style={object('styles', {\\\\\\\\n          position: 'absolute',\\\\\\\\n          top: 'auto',\\\\\\\\n          left: 'auto',\\\\\\\\n          marginTop: '-18px'\\\\\\\\n        })}\\\\\\\\n        isLoading={boolean('isLoading', false)}\\\\\\\\n        isNoOption={boolean('isNoOption', false)}\\\\\\\\n        menuOpen={boolean('menuOpen', false)}\\\\\\\\n        selected={object('selected', selectedOptions)}\\\\\\\\n        allowSelectAll={boolean('allowSelectAll', false)}\\\\\\\\n        maximumSelected={number('maximum Selected', 5)}\\\\\\\\n        defaultSelected={object('default Selected', selectedOptions)}\\\\\\\\n        searchableKeys={array('Searchable Keys', ['label', 'phoneNumber'])}\\\\\\\\n        resultLimit={number('resultLimit', 10)}\\\\\\\\n        onInputChange={action('on Input changed')}\\\\\\\\n      >\\\\\\\\n        {({ optionSelected, isMenuOpen, openMenu }: tMultiSelectChildren) => (\\\\\\\\n          <TextInput\\\\\\\\n            id='id'\\\\\\\\n            label='Color'\\\\\\\\n            labelColor='black'\\\\\\\\n            placeholder='Select ... '\\\\\\\\n            error={boolean('Text Input error', false)}\\\\\\\\n            errorMessage={text('error Message', 'Its an error Message')}\\\\\\\\n            disabled={boolean('disabled', false)}\\\\\\\\n            onClick={() => {\\\\\\\\n              openMenu(!isMenuOpen)\\\\\\\\n              action('MultiSelect open/closed')(isMenuOpen)\\\\\\\\n            }}\\\\\\\\n            value={\\\\\\\\n              optionSelected && optionSelected?.length > 0\\\\\\\\n                ? optionSelected?.length + ' Selected'\\\\\\\\n                : ''\\\\\\\\n            }\\\\\\\\n            read-only\\\\\\\\n          />\\\\\\\\n        )}\\\\\\\\n      </MultiSelect>\\\\\\\\n    </Box>\\\\\\\\n  </ThemeWrapper>\\\\\\\\n)\\\\\\\\n\\\\\\\",\\\\\\\"locationsMap\\\\\\\":{}},\\\\n    props: {\\\\n      propTablesExclude: [Box, ThemeWrapper, TextInput]\\\\n    }\\\\n  },}\\\\n\\\\nconst options = [\\\\n  { value: 'ocean', label: 'Ocean', phoneNumber: '1234', age: '10' },\\\\n  { value: 'blue', label: 'Blue', phoneNumber: '455556', age: '12' },\\\\n  { value: 'purple', label: 'Purple', phoneNumber: '67778', age: '13' },\\\\n  { value: 'red', label: 'Red', phoneNumber: '89990', age: '14' },\\\\n  { value: 'orange', label: 'Orange', phoneNumber: '001323', age: '15' },\\\\n  { value: 'yellow', label: 'Yellow', phoneNumber: '99243452', age: '16' },\\\\n  { value: 'green', label: 'Green', phoneNumber: '120009', age: '18' },\\\\n  { value: 'forest', label: 'Forest', phoneNumber: '0000000', age: '20' },\\\\n  { value: 'slate', label: 'Slate', phoneNumber: '11111111', age: '30' },\\\\n  { value: 'silver', label: 'Silver', phoneNumber: '22222222', age: '40' },\\\\n  { value: 'green1', label: 'Green1', phoneNumber: '120009', age: '18' },\\\\n  { value: 'forest1', label: 'Forest1', phoneNumber: '0000000', age: '20' },\\\\n  { value: 'slate1', label: 'Slate1', phoneNumber: '11111111', age: '30' },\\\\n  { value: 'silver1', label: 'Silver1', phoneNumber: '22222222', age: '40' }\\\\n]\\\\nconst selectedOptions = [\\\\n  { value: 'ocean', label: 'Ocean', phoneNumber: '1234', age: '10' },\\\\n  { value: 'blue', label: 'Blue', phoneNumber: '455556', age: '12' },\\\\n  { value: 'purple', label: 'Purple', phoneNumber: '67778', age: '13' },\\\\n  { value: 'red', label: 'Red', phoneNumber: '89990', age: '14' },\\\\n  { value: 'forest', label: 'Forest', phoneNumber: '0000000', age: '20' }\\\\n  // { value: 'slate', label: 'Slate', phoneNumber: '11111111', age: '30' }\\\\n]\\\\n\\\\nexport const withTextField = addSourceDecorator(() => (\\\\n  <ThemeWrapper>\\\\n    <Box p='1em'>\\\\n      <MultiSelect\\\\n        id={text('id', 'Colors')}\\\\n        width={text('width', '300px')}\\\\n        options={object('Multi Select Options', options)}\\\\n        onChange={action('Multi Select changed')}\\\\n        style={object('styles', {\\\\n          position: 'absolute',\\\\n          top: 'auto',\\\\n          left: 'auto',\\\\n          marginTop: '-18px'\\\\n        })}\\\\n        isLoading={boolean('isLoading', false)}\\\\n        isNoOption={boolean('isNoOption', false)}\\\\n        menuOpen={boolean('menuOpen', false)}\\\\n        selected={object('selected', selectedOptions)}\\\\n        allowSelectAll={boolean('allowSelectAll', false)}\\\\n        maximumSelected={number('maximum Selected', 5)}\\\\n        defaultSelected={object('default Selected', selectedOptions)}\\\\n        searchableKeys={array('Searchable Keys', ['label', 'phoneNumber'])}\\\\n        resultLimit={number('resultLimit', 10)}\\\\n        onInputChange={action('on Input changed')}\\\\n      >\\\\n        {({ optionSelected, isMenuOpen, openMenu }: tMultiSelectChildren) => (\\\\n          <TextInput\\\\n            id='id'\\\\n            label='Color'\\\\n            labelColor='black'\\\\n            placeholder='Select ... '\\\\n            error={boolean('Text Input error', false)}\\\\n            errorMessage={text('error Message', 'Its an error Message')}\\\\n            disabled={boolean('disabled', false)}\\\\n            onClick={() => {\\\\n              openMenu(!isMenuOpen)\\\\n              action('MultiSelect open/closed')(isMenuOpen)\\\\n            }}\\\\n            value={\\\\n              optionSelected && optionSelected?.length > 0\\\\n                ? optionSelected?.length + ' Selected'\\\\n                : ''\\\\n            }\\\\n            read-only\\\\n          />\\\\n        )}\\\\n      </MultiSelect>\\\\n    </Box>\\\\n  </ThemeWrapper>\\\\n), {__STORY__, __ADDS_MAP__,__MAIN_FILE_LOCATION__,__MODULE_DEPENDENCIES__,__LOCAL_DEPENDENCIES__,__SOURCE_PREFIX__,__IDS_TO_FRAMEWORKS__});\\\",\\\"locationsMap\\\":{}},\\\"storySource\\\":{\\\"source\\\":\\\"import React from 'react'\\\\nimport MultiSelect from '../index'\\\\nimport Box from '../../../atoms/Box'\\\\nimport { path } from '../..'\\\\nimport ThemeWrapper from '../../../../utilities/components/ThemeWrapper'\\\\n\\\\nimport {\\\\n  boolean,\\\\n  text,\\\\n  object,\\\\n  withKnobs,\\\\n  number,\\\\n  array\\\\n} from '@storybook/addon-knobs'\\\\nimport { action } from '@storybook/addon-actions'\\\\nimport TextInput from '../../TextInput'\\\\nimport { tMultiSelectChildren } from '../interfaces'\\\\n\\\\nexport default {\\\\n  title: `${path}/MultiSelect`,\\\\n  component: MultiSelect,\\\\n  decorators: [withKnobs],\\\\n  parameters: {\\\\n    props: {\\\\n      propTablesExclude: [Box, ThemeWrapper, TextInput]\\\\n    }\\\\n  }\\\\n}\\\\n\\\\nconst options = [\\\\n  { value: 'ocean', label: 'Ocean', phoneNumber: '1234', age: '10' },\\\\n  { value: 'blue', label: 'Blue', phoneNumber: '455556', age: '12' },\\\\n  { value: 'purple', label: 'Purple', phoneNumber: '67778', age: '13' },\\\\n  { value: 'red', label: 'Red', phoneNumber: '89990', age: '14' },\\\\n  { value: 'orange', label: 'Orange', phoneNumber: '001323', age: '15' },\\\\n  { value: 'yellow', label: 'Yellow', phoneNumber: '99243452', age: '16' },\\\\n  { value: 'green', label: 'Green', phoneNumber: '120009', age: '18' },\\\\n  { value: 'forest', label: 'Forest', phoneNumber: '0000000', age: '20' },\\\\n  { value: 'slate', label: 'Slate', phoneNumber: '11111111', age: '30' },\\\\n  { value: 'silver', label: 'Silver', phoneNumber: '22222222', age: '40' },\\\\n  { value: 'green1', label: 'Green1', phoneNumber: '120009', age: '18' },\\\\n  { value: 'forest1', label: 'Forest1', phoneNumber: '0000000', age: '20' },\\\\n  { value: 'slate1', label: 'Slate1', phoneNumber: '11111111', age: '30' },\\\\n  { value: 'silver1', label: 'Silver1', phoneNumber: '22222222', age: '40' }\\\\n]\\\\nconst selectedOptions = [\\\\n  { value: 'ocean', label: 'Ocean', phoneNumber: '1234', age: '10' },\\\\n  { value: 'blue', label: 'Blue', phoneNumber: '455556', age: '12' },\\\\n  { value: 'purple', label: 'Purple', phoneNumber: '67778', age: '13' },\\\\n  { value: 'red', label: 'Red', phoneNumber: '89990', age: '14' },\\\\n  { value: 'forest', label: 'Forest', phoneNumber: '0000000', age: '20' }\\\\n  // { value: 'slate', label: 'Slate', phoneNumber: '11111111', age: '30' }\\\\n]\\\\n\\\\nexport const withTextField = () => (\\\\n  <ThemeWrapper>\\\\n    <Box p='1em'>\\\\n      <MultiSelect\\\\n        id={text('id', 'Colors')}\\\\n        width={text('width', '300px')}\\\\n        options={object('Multi Select Options', options)}\\\\n        onChange={action('Multi Select changed')}\\\\n        style={object('styles', {\\\\n          position: 'absolute',\\\\n          top: 'auto',\\\\n          left: 'auto',\\\\n          marginTop: '-18px'\\\\n        })}\\\\n        isLoading={boolean('isLoading', false)}\\\\n        isNoOption={boolean('isNoOption', false)}\\\\n        menuOpen={boolean('menuOpen', false)}\\\\n        selected={object('selected', selectedOptions)}\\\\n        allowSelectAll={boolean('allowSelectAll', false)}\\\\n        maximumSelected={number('maximum Selected', 5)}\\\\n        defaultSelected={object('default Selected', selectedOptions)}\\\\n        searchableKeys={array('Searchable Keys', ['label', 'phoneNumber'])}\\\\n        resultLimit={number('resultLimit', 10)}\\\\n        onInputChange={action('on Input changed')}\\\\n      >\\\\n        {({ optionSelected, isMenuOpen, openMenu }: tMultiSelectChildren) => (\\\\n          <TextInput\\\\n            id='id'\\\\n            label='Color'\\\\n            labelColor='black'\\\\n            placeholder='Select ... '\\\\n            error={boolean('Text Input error', false)}\\\\n            errorMessage={text('error Message', 'Its an error Message')}\\\\n            disabled={boolean('disabled', false)}\\\\n            onClick={() => {\\\\n              openMenu(!isMenuOpen)\\\\n              action('MultiSelect open/closed')(isMenuOpen)\\\\n            }}\\\\n            value={\\\\n              optionSelected && optionSelected?.length > 0\\\\n                ? optionSelected?.length + ' Selected'\\\\n                : ''\\\\n            }\\\\n            read-only\\\\n          />\\\\n        )}\\\\n      </MultiSelect>\\\\n    </Box>\\\\n  </ThemeWrapper>\\\\n)\\\\n\\\",\\\"locationsMap\\\":{}},\\n    props: {\\n      propTablesExclude: [Box, ThemeWrapper, TextInput]\\n    }\\n  },}\\n\\nconst options = [\\n  { value: 'ocean', label: 'Ocean', phoneNumber: '1234', age: '10' },\\n  { value: 'blue', label: 'Blue', phoneNumber: '455556', age: '12' },\\n  { value: 'purple', label: 'Purple', phoneNumber: '67778', age: '13' },\\n  { value: 'red', label: 'Red', phoneNumber: '89990', age: '14' },\\n  { value: 'orange', label: 'Orange', phoneNumber: '001323', age: '15' },\\n  { value: 'yellow', label: 'Yellow', phoneNumber: '99243452', age: '16' },\\n  { value: 'green', label: 'Green', phoneNumber: '120009', age: '18' },\\n  { value: 'forest', label: 'Forest', phoneNumber: '0000000', age: '20' },\\n  { value: 'slate', label: 'Slate', phoneNumber: '11111111', age: '30' },\\n  { value: 'silver', label: 'Silver', phoneNumber: '22222222', age: '40' },\\n  { value: 'green1', label: 'Green1', phoneNumber: '120009', age: '18' },\\n  { value: 'forest1', label: 'Forest1', phoneNumber: '0000000', age: '20' },\\n  { value: 'slate1', label: 'Slate1', phoneNumber: '11111111', age: '30' },\\n  { value: 'silver1', label: 'Silver1', phoneNumber: '22222222', age: '40' }\\n]\\nconst selectedOptions = [\\n  { value: 'ocean', label: 'Ocean', phoneNumber: '1234', age: '10' },\\n  { value: 'blue', label: 'Blue', phoneNumber: '455556', age: '12' },\\n  { value: 'purple', label: 'Purple', phoneNumber: '67778', age: '13' },\\n  { value: 'red', label: 'Red', phoneNumber: '89990', age: '14' },\\n  { value: 'forest', label: 'Forest', phoneNumber: '0000000', age: '20' }\\n  // { value: 'slate', label: 'Slate', phoneNumber: '11111111', age: '30' }\\n]\\n\\nexport const withTextField = addSourceDecorator(addSourceDecorator(() => (\\n  <ThemeWrapper>\\n    <Box p='1em'>\\n      <MultiSelect\\n        id={text('id', 'Colors')}\\n        width={text('width', '300px')}\\n        options={object('Multi Select Options', options)}\\n        onChange={action('Multi Select changed')}\\n        style={object('styles', {\\n          position: 'absolute',\\n          top: 'auto',\\n          left: 'auto',\\n          marginTop: '-18px'\\n        })}\\n        isLoading={boolean('isLoading', false)}\\n        isNoOption={boolean('isNoOption', false)}\\n        menuOpen={boolean('menuOpen', false)}\\n        selected={object('selected', selectedOptions)}\\n        allowSelectAll={boolean('allowSelectAll', false)}\\n        maximumSelected={number('maximum Selected', 5)}\\n        defaultSelected={object('default Selected', selectedOptions)}\\n        searchableKeys={array('Searchable Keys', ['label', 'phoneNumber'])}\\n        resultLimit={number('resultLimit', 10)}\\n        onInputChange={action('on Input changed')}\\n      >\\n        {({ optionSelected, isMenuOpen, openMenu }: tMultiSelectChildren) => (\\n          <TextInput\\n            id='id'\\n            label='Color'\\n            labelColor='black'\\n            placeholder='Select ... '\\n            error={boolean('Text Input error', false)}\\n            errorMessage={text('error Message', 'Its an error Message')}\\n            disabled={boolean('disabled', false)}\\n            onClick={() => {\\n              openMenu(!isMenuOpen)\\n              action('MultiSelect open/closed')(isMenuOpen)\\n            }}\\n            value={\\n              optionSelected && optionSelected?.length > 0\\n                ? optionSelected?.length + ' Selected'\\n                : ''\\n            }\\n            read-only\\n          />\\n        )}\\n      </MultiSelect>\\n    </Box>\\n  </ThemeWrapper>\\n), {__STORY__, __ADDS_MAP__,__MAIN_FILE_LOCATION__,__MODULE_DEPENDENCIES__,__LOCAL_DEPENDENCIES__,__SOURCE_PREFIX__,__IDS_TO_FRAMEWORKS__}), {__STORY__, __ADDS_MAP__,__MAIN_FILE_LOCATION__,__MODULE_DEPENDENCIES__,__LOCAL_DEPENDENCIES__,__SOURCE_PREFIX__,__IDS_TO_FRAMEWORKS__});\";\n// @ts-ignore\nvar __ADDS_MAP__ = {};\n// @ts-ignore\nvar __MAIN_FILE_LOCATION__ = \"/withTextField.stories.tsx\";\n// @ts-ignore\nvar __MODULE_DEPENDENCIES__ = [];\n// @ts-ignore\nvar __LOCAL_DEPENDENCIES__ = {};\n// @ts-ignore\nvar __IDS_TO_FRAMEWORKS__ = {};\n        \n\n/* eslint-disable */\n// @ts-nocheck\n// @ts-ignore\nvar withSourceLoader = require('@storybook/source-loader/preview').withSource;\n// @ts-ignore\nvar addSourceDecorator = require(\"@storybook/source-loader/preview\").addSource;\n// @ts-ignore\nvar __SOURCE_PREFIX__ = \"/Users/farhanansari/Code/ui-library/src/components/molecules/MultiSelect/stories\";\n// @ts-ignore\nvar __STORY__ = \"\\n\\n// @ts-nocheck\\n// @ts-ignore\\nvar withSourceLoader = require('@storybook/source-loader/preview').withSource;\\n// @ts-ignore\\nvar addSourceDecorator = require(\\\"@storybook/source-loader/preview\\\").addSource;\\n// @ts-ignore\\nvar __SOURCE_PREFIX__ = \\\"/Users/farhanansari/Code/ui-library/src/components/molecules/MultiSelect/stories\\\";\\n// @ts-ignore\\nvar __STORY__ = \\\"import React from 'react'\\\\nimport MultiSelect from '../index'\\\\nimport Box from '../../../atoms/Box'\\\\nimport { path } from '../..'\\\\nimport ThemeWrapper from '../../../../utilities/components/ThemeWrapper'\\\\n\\\\nimport {\\\\n  boolean,\\\\n  text,\\\\n  object,\\\\n  withKnobs,\\\\n  number,\\\\n  array\\\\n} from '@storybook/addon-knobs'\\\\nimport { action } from '@storybook/addon-actions'\\\\nimport TextInput from '../../TextInput'\\\\nimport { tMultiSelectChildren } from '../interfaces'\\\\n\\\\nexport default {\\\\n  title: `${path}/MultiSelect`,\\\\n  component: MultiSelect,\\\\n  decorators: [withKnobs],\\\\n  parameters: {\\\\n    props: {\\\\n      propTablesExclude: [Box, ThemeWrapper, TextInput]\\\\n    }\\\\n  }\\\\n}\\\\n\\\\nconst options = [\\\\n  { value: 'ocean', label: 'Ocean', phoneNumber: '1234', age: '10' },\\\\n  { value: 'blue', label: 'Blue', phoneNumber: '455556', age: '12' },\\\\n  { value: 'purple', label: 'Purple', phoneNumber: '67778', age: '13' },\\\\n  { value: 'red', label: 'Red', phoneNumber: '89990', age: '14' },\\\\n  { value: 'orange', label: 'Orange', phoneNumber: '001323', age: '15' },\\\\n  { value: 'yellow', label: 'Yellow', phoneNumber: '99243452', age: '16' },\\\\n  { value: 'green', label: 'Green', phoneNumber: '120009', age: '18' },\\\\n  { value: 'forest', label: 'Forest', phoneNumber: '0000000', age: '20' },\\\\n  { value: 'slate', label: 'Slate', phoneNumber: '11111111', age: '30' },\\\\n  { value: 'silver', label: 'Silver', phoneNumber: '22222222', age: '40' },\\\\n  { value: 'green1', label: 'Green1', phoneNumber: '120009', age: '18' },\\\\n  { value: 'forest1', label: 'Forest1', phoneNumber: '0000000', age: '20' },\\\\n  { value: 'slate1', label: 'Slate1', phoneNumber: '11111111', age: '30' },\\\\n  { value: 'silver1', label: 'Silver1', phoneNumber: '22222222', age: '40' }\\\\n]\\\\nconst selectedOptions = [\\\\n  { value: 'ocean', label: 'Ocean', phoneNumber: '1234', age: '10' },\\\\n  { value: 'blue', label: 'Blue', phoneNumber: '455556', age: '12' },\\\\n  { value: 'purple', label: 'Purple', phoneNumber: '67778', age: '13' },\\\\n  { value: 'red', label: 'Red', phoneNumber: '89990', age: '14' },\\\\n  { value: 'forest', label: 'Forest', phoneNumber: '0000000', age: '20' }\\\\n  // { value: 'slate', label: 'Slate', phoneNumber: '11111111', age: '30' }\\\\n]\\\\n\\\\nexport const withTextField = () => (\\\\n  <ThemeWrapper>\\\\n    <Box p='1em'>\\\\n      <MultiSelect\\\\n        id={text('id', 'Colors')}\\\\n        width={text('width', '300px')}\\\\n        options={object('Multi Select Options', options)}\\\\n        onChange={action('Multi Select changed')}\\\\n        style={object('styles', {\\\\n          position: 'absolute',\\\\n          top: 'auto',\\\\n          left: 'auto',\\\\n          marginTop: '-18px'\\\\n        })}\\\\n        isLoading={boolean('isLoading', false)}\\\\n        isNoOption={boolean('isNoOption', false)}\\\\n        menuOpen={boolean('menuOpen', false)}\\\\n        selected={object('selected', selectedOptions)}\\\\n        allowSelectAll={boolean('allowSelectAll', false)}\\\\n        maximumSelected={number('maximum Selected', 5)}\\\\n        defaultSelected={object('default Selected', selectedOptions)}\\\\n        searchableKeys={array('Searchable Keys', ['label', 'phoneNumber'])}\\\\n        resultLimit={number('resultLimit', 10)}\\\\n        onInputChange={action('on Input changed')}\\\\n      >\\\\n        {({ optionSelected, isMenuOpen, openMenu }: tMultiSelectChildren) => (\\\\n          <TextInput\\\\n            id='id'\\\\n            label='Color'\\\\n            labelColor='black'\\\\n            placeholder='Select ... '\\\\n            error={boolean('Text Input error', false)}\\\\n            errorMessage={text('error Message', 'Its an error Message')}\\\\n            disabled={boolean('disabled', false)}\\\\n            onClick={() => {\\\\n              openMenu(!isMenuOpen)\\\\n              action('MultiSelect open/closed')(isMenuOpen)\\\\n            }}\\\\n            value={\\\\n              optionSelected && optionSelected?.length > 0\\\\n                ? optionSelected?.length + ' Selected'\\\\n                : ''\\\\n            }\\\\n            read-only\\\\n          />\\\\n        )}\\\\n      </MultiSelect>\\\\n    </Box>\\\\n  </ThemeWrapper>\\\\n)\\\\n\\\";\\n// @ts-ignore\\nvar __ADDS_MAP__ = {};\\n// @ts-ignore\\nvar __MAIN_FILE_LOCATION__ = \\\"/withTextField.stories.tsx\\\";\\n// @ts-ignore\\nvar __MODULE_DEPENDENCIES__ = [];\\n// @ts-ignore\\nvar __LOCAL_DEPENDENCIES__ = {};\\n// @ts-ignore\\nvar __IDS_TO_FRAMEWORKS__ = {};\\n        \\nimport React from 'react'\\nimport MultiSelect from '../index'\\nimport Box from '../../../atoms/Box'\\nimport { path } from '../..'\\nimport ThemeWrapper from '../../../../utilities/components/ThemeWrapper'\\n\\nimport {\\n  boolean,\\n  text,\\n  object,\\n  withKnobs,\\n  number,\\n  array\\n} from '@storybook/addon-knobs'\\nimport { action } from '@storybook/addon-actions'\\nimport TextInput from '../../TextInput'\\nimport { tMultiSelectChildren } from '../interfaces'\\n\\nexport default {\\n  title: `${path}/MultiSelect`,\\n  component: MultiSelect,\\n  decorators: [withKnobs],\\n  parameters: {\\\"storySource\\\":{\\\"source\\\":\\\"import React from 'react'\\\\nimport MultiSelect from '../index'\\\\nimport Box from '../../../atoms/Box'\\\\nimport { path } from '../..'\\\\nimport ThemeWrapper from '../../../../utilities/components/ThemeWrapper'\\\\n\\\\nimport {\\\\n  boolean,\\\\n  text,\\\\n  object,\\\\n  withKnobs,\\\\n  number,\\\\n  array\\\\n} from '@storybook/addon-knobs'\\\\nimport { action } from '@storybook/addon-actions'\\\\nimport TextInput from '../../TextInput'\\\\nimport { tMultiSelectChildren } from '../interfaces'\\\\n\\\\nexport default {\\\\n  title: `${path}/MultiSelect`,\\\\n  component: MultiSelect,\\\\n  decorators: [withKnobs],\\\\n  parameters: {\\\\n    props: {\\\\n      propTablesExclude: [Box, ThemeWrapper, TextInput]\\\\n    }\\\\n  }\\\\n}\\\\n\\\\nconst options = [\\\\n  { value: 'ocean', label: 'Ocean', phoneNumber: '1234', age: '10' },\\\\n  { value: 'blue', label: 'Blue', phoneNumber: '455556', age: '12' },\\\\n  { value: 'purple', label: 'Purple', phoneNumber: '67778', age: '13' },\\\\n  { value: 'red', label: 'Red', phoneNumber: '89990', age: '14' },\\\\n  { value: 'orange', label: 'Orange', phoneNumber: '001323', age: '15' },\\\\n  { value: 'yellow', label: 'Yellow', phoneNumber: '99243452', age: '16' },\\\\n  { value: 'green', label: 'Green', phoneNumber: '120009', age: '18' },\\\\n  { value: 'forest', label: 'Forest', phoneNumber: '0000000', age: '20' },\\\\n  { value: 'slate', label: 'Slate', phoneNumber: '11111111', age: '30' },\\\\n  { value: 'silver', label: 'Silver', phoneNumber: '22222222', age: '40' },\\\\n  { value: 'green1', label: 'Green1', phoneNumber: '120009', age: '18' },\\\\n  { value: 'forest1', label: 'Forest1', phoneNumber: '0000000', age: '20' },\\\\n  { value: 'slate1', label: 'Slate1', phoneNumber: '11111111', age: '30' },\\\\n  { value: 'silver1', label: 'Silver1', phoneNumber: '22222222', age: '40' }\\\\n]\\\\nconst selectedOptions = [\\\\n  { value: 'ocean', label: 'Ocean', phoneNumber: '1234', age: '10' },\\\\n  { value: 'blue', label: 'Blue', phoneNumber: '455556', age: '12' },\\\\n  { value: 'purple', label: 'Purple', phoneNumber: '67778', age: '13' },\\\\n  { value: 'red', label: 'Red', phoneNumber: '89990', age: '14' },\\\\n  { value: 'forest', label: 'Forest', phoneNumber: '0000000', age: '20' }\\\\n  // { value: 'slate', label: 'Slate', phoneNumber: '11111111', age: '30' }\\\\n]\\\\n\\\\nexport const withTextField = () => (\\\\n  <ThemeWrapper>\\\\n    <Box p='1em'>\\\\n      <MultiSelect\\\\n        id={text('id', 'Colors')}\\\\n        width={text('width', '300px')}\\\\n        options={object('Multi Select Options', options)}\\\\n        onChange={action('Multi Select changed')}\\\\n        style={object('styles', {\\\\n          position: 'absolute',\\\\n          top: 'auto',\\\\n          left: 'auto',\\\\n          marginTop: '-18px'\\\\n        })}\\\\n        isLoading={boolean('isLoading', false)}\\\\n        isNoOption={boolean('isNoOption', false)}\\\\n        menuOpen={boolean('menuOpen', false)}\\\\n        selected={object('selected', selectedOptions)}\\\\n        allowSelectAll={boolean('allowSelectAll', false)}\\\\n        maximumSelected={number('maximum Selected', 5)}\\\\n        defaultSelected={object('default Selected', selectedOptions)}\\\\n        searchableKeys={array('Searchable Keys', ['label', 'phoneNumber'])}\\\\n        resultLimit={number('resultLimit', 10)}\\\\n        onInputChange={action('on Input changed')}\\\\n      >\\\\n        {({ optionSelected, isMenuOpen, openMenu }: tMultiSelectChildren) => (\\\\n          <TextInput\\\\n            id='id'\\\\n            label='Color'\\\\n            labelColor='black'\\\\n            placeholder='Select ... '\\\\n            error={boolean('Text Input error', false)}\\\\n            errorMessage={text('error Message', 'Its an error Message')}\\\\n            disabled={boolean('disabled', false)}\\\\n            onClick={() => {\\\\n              openMenu(!isMenuOpen)\\\\n              action('MultiSelect open/closed')(isMenuOpen)\\\\n            }}\\\\n            value={\\\\n              optionSelected && optionSelected?.length > 0\\\\n                ? optionSelected?.length + ' Selected'\\\\n                : ''\\\\n            }\\\\n            read-only\\\\n          />\\\\n        )}\\\\n      </MultiSelect>\\\\n    </Box>\\\\n  </ThemeWrapper>\\\\n)\\\\n\\\",\\\"locationsMap\\\":{}},\\n    props: {\\n      propTablesExclude: [Box, ThemeWrapper, TextInput]\\n    }\\n  },}\\n\\nconst options = [\\n  { value: 'ocean', label: 'Ocean', phoneNumber: '1234', age: '10' },\\n  { value: 'blue', label: 'Blue', phoneNumber: '455556', age: '12' },\\n  { value: 'purple', label: 'Purple', phoneNumber: '67778', age: '13' },\\n  { value: 'red', label: 'Red', phoneNumber: '89990', age: '14' },\\n  { value: 'orange', label: 'Orange', phoneNumber: '001323', age: '15' },\\n  { value: 'yellow', label: 'Yellow', phoneNumber: '99243452', age: '16' },\\n  { value: 'green', label: 'Green', phoneNumber: '120009', age: '18' },\\n  { value: 'forest', label: 'Forest', phoneNumber: '0000000', age: '20' },\\n  { value: 'slate', label: 'Slate', phoneNumber: '11111111', age: '30' },\\n  { value: 'silver', label: 'Silver', phoneNumber: '22222222', age: '40' },\\n  { value: 'green1', label: 'Green1', phoneNumber: '120009', age: '18' },\\n  { value: 'forest1', label: 'Forest1', phoneNumber: '0000000', age: '20' },\\n  { value: 'slate1', label: 'Slate1', phoneNumber: '11111111', age: '30' },\\n  { value: 'silver1', label: 'Silver1', phoneNumber: '22222222', age: '40' }\\n]\\nconst selectedOptions = [\\n  { value: 'ocean', label: 'Ocean', phoneNumber: '1234', age: '10' },\\n  { value: 'blue', label: 'Blue', phoneNumber: '455556', age: '12' },\\n  { value: 'purple', label: 'Purple', phoneNumber: '67778', age: '13' },\\n  { value: 'red', label: 'Red', phoneNumber: '89990', age: '14' },\\n  { value: 'forest', label: 'Forest', phoneNumber: '0000000', age: '20' }\\n  // { value: 'slate', label: 'Slate', phoneNumber: '11111111', age: '30' }\\n]\\n\\nexport const withTextField = addSourceDecorator(() => (\\n  <ThemeWrapper>\\n    <Box p='1em'>\\n      <MultiSelect\\n        id={text('id', 'Colors')}\\n        width={text('width', '300px')}\\n        options={object('Multi Select Options', options)}\\n        onChange={action('Multi Select changed')}\\n        style={object('styles', {\\n          position: 'absolute',\\n          top: 'auto',\\n          left: 'auto',\\n          marginTop: '-18px'\\n        })}\\n        isLoading={boolean('isLoading', false)}\\n        isNoOption={boolean('isNoOption', false)}\\n        menuOpen={boolean('menuOpen', false)}\\n        selected={object('selected', selectedOptions)}\\n        allowSelectAll={boolean('allowSelectAll', false)}\\n        maximumSelected={number('maximum Selected', 5)}\\n        defaultSelected={object('default Selected', selectedOptions)}\\n        searchableKeys={array('Searchable Keys', ['label', 'phoneNumber'])}\\n        resultLimit={number('resultLimit', 10)}\\n        onInputChange={action('on Input changed')}\\n      >\\n        {({ optionSelected, isMenuOpen, openMenu }: tMultiSelectChildren) => (\\n          <TextInput\\n            id='id'\\n            label='Color'\\n            labelColor='black'\\n            placeholder='Select ... '\\n            error={boolean('Text Input error', false)}\\n            errorMessage={text('error Message', 'Its an error Message')}\\n            disabled={boolean('disabled', false)}\\n            onClick={() => {\\n              openMenu(!isMenuOpen)\\n              action('MultiSelect open/closed')(isMenuOpen)\\n            }}\\n            value={\\n              optionSelected && optionSelected?.length > 0\\n                ? optionSelected?.length + ' Selected'\\n                : ''\\n            }\\n            read-only\\n          />\\n        )}\\n      </MultiSelect>\\n    </Box>\\n  </ThemeWrapper>\\n), {__STORY__, __ADDS_MAP__,__MAIN_FILE_LOCATION__,__MODULE_DEPENDENCIES__,__LOCAL_DEPENDENCIES__,__SOURCE_PREFIX__,__IDS_TO_FRAMEWORKS__});\";\n// @ts-ignore\nvar __ADDS_MAP__ = {};\n// @ts-ignore\nvar __MAIN_FILE_LOCATION__ = \"/withTextField.stories.tsx\";\n// @ts-ignore\nvar __MODULE_DEPENDENCIES__ = [];\n// @ts-ignore\nvar __LOCAL_DEPENDENCIES__ = {};\n// @ts-ignore\nvar __IDS_TO_FRAMEWORKS__ = {};\n        \n\n/* eslint-disable */\n// @ts-nocheck\n// @ts-ignore\nvar withSourceLoader = require('@storybook/source-loader/preview').withSource;\n// @ts-ignore\nvar addSourceDecorator = require(\"@storybook/source-loader/preview\").addSource;\n// @ts-ignore\nvar __SOURCE_PREFIX__ = \"/Users/farhanansari/Code/ui-library/src/components/molecules/MultiSelect/stories\";\n// @ts-ignore\nvar __STORY__ = \"import React from 'react'\\nimport MultiSelect from '../index'\\nimport Box from '../../../atoms/Box'\\nimport { path } from '../..'\\nimport ThemeWrapper from '../../../../utilities/components/ThemeWrapper'\\n\\nimport {\\n  boolean,\\n  text,\\n  object,\\n  withKnobs,\\n  number,\\n  array\\n} from '@storybook/addon-knobs'\\nimport { action } from '@storybook/addon-actions'\\nimport TextInput from '../../TextInput'\\nimport { tMultiSelectChildren } from '../interfaces'\\n\\nexport default {\\n  title: `${path}/MultiSelect`,\\n  component: MultiSelect,\\n  decorators: [withKnobs],\\n  parameters: {\\n    props: {\\n      propTablesExclude: [Box, ThemeWrapper, TextInput]\\n    }\\n  }\\n}\\n\\nconst options = [\\n  { value: 'ocean', label: 'Ocean', phoneNumber: '1234', age: '10' },\\n  { value: 'blue', label: 'Blue', phoneNumber: '455556', age: '12' },\\n  { value: 'purple', label: 'Purple', phoneNumber: '67778', age: '13' },\\n  { value: 'red', label: 'Red', phoneNumber: '89990', age: '14' },\\n  { value: 'orange', label: 'Orange', phoneNumber: '001323', age: '15' },\\n  { value: 'yellow', label: 'Yellow', phoneNumber: '99243452', age: '16' },\\n  { value: 'green', label: 'Green', phoneNumber: '120009', age: '18' },\\n  { value: 'forest', label: 'Forest', phoneNumber: '0000000', age: '20' },\\n  { value: 'slate', label: 'Slate', phoneNumber: '11111111', age: '30' },\\n  { value: 'silver', label: 'Silver', phoneNumber: '22222222', age: '40' },\\n  { value: 'green1', label: 'Green1', phoneNumber: '120009', age: '18' },\\n  { value: 'forest1', label: 'Forest1', phoneNumber: '0000000', age: '20' },\\n  { value: 'slate1', label: 'Slate1', phoneNumber: '11111111', age: '30' },\\n  { value: 'silver1', label: 'Silver1', phoneNumber: '22222222', age: '40' }\\n]\\nconst selectedOptions = [\\n  { value: 'ocean', label: 'Ocean', phoneNumber: '1234', age: '10' },\\n  { value: 'blue', label: 'Blue', phoneNumber: '455556', age: '12' },\\n  { value: 'purple', label: 'Purple', phoneNumber: '67778', age: '13' },\\n  { value: 'red', label: 'Red', phoneNumber: '89990', age: '14' },\\n  { value: 'forest', label: 'Forest', phoneNumber: '0000000', age: '20' }\\n  // { value: 'slate', label: 'Slate', phoneNumber: '11111111', age: '30' }\\n]\\n\\nexport const withTextField = () => (\\n  <ThemeWrapper>\\n    <Box p='1em'>\\n      <MultiSelect\\n        id={text('id', 'Colors')}\\n        width={text('width', '300px')}\\n        options={object('Multi Select Options', options)}\\n        onChange={action('Multi Select changed')}\\n        style={object('styles', {\\n          position: 'absolute',\\n          top: 'auto',\\n          left: 'auto',\\n          marginTop: '-18px'\\n        })}\\n        isLoading={boolean('isLoading', false)}\\n        isNoOption={boolean('isNoOption', false)}\\n        menuOpen={boolean('menuOpen', false)}\\n        selected={object('selected', selectedOptions)}\\n        allowSelectAll={boolean('allowSelectAll', false)}\\n        maximumSelected={number('maximum Selected', 5)}\\n        defaultSelected={object('default Selected', selectedOptions)}\\n        searchableKeys={array('Searchable Keys', ['label', 'phoneNumber'])}\\n        resultLimit={number('resultLimit', 10)}\\n        onInputChange={action('on Input changed')}\\n      >\\n        {({ optionSelected, isMenuOpen, openMenu }: tMultiSelectChildren) => (\\n          <TextInput\\n            id='id'\\n            label='Color'\\n            labelColor='black'\\n            placeholder='Select ... '\\n            error={boolean('Text Input error', false)}\\n            errorMessage={text('error Message', 'Its an error Message')}\\n            disabled={boolean('disabled', false)}\\n            onClick={() => {\\n              openMenu(!isMenuOpen)\\n              action('MultiSelect open/closed')(isMenuOpen)\\n            }}\\n            value={\\n              optionSelected && optionSelected?.length > 0\\n                ? optionSelected?.length + ' Selected'\\n                : ''\\n            }\\n            read-only\\n          />\\n        )}\\n      </MultiSelect>\\n    </Box>\\n  </ThemeWrapper>\\n)\\n\";\n// @ts-ignore\nvar __ADDS_MAP__ = {};\n// @ts-ignore\nvar __MAIN_FILE_LOCATION__ = \"/withTextField.stories.tsx\";\n// @ts-ignore\nvar __MODULE_DEPENDENCIES__ = [];\n// @ts-ignore\nvar __LOCAL_DEPENDENCIES__ = {};\n// @ts-ignore\nvar __IDS_TO_FRAMEWORKS__ = {};\n        \nimport React from 'react'\nimport MultiSelect from '../index'\nimport Box from '../../../atoms/Box'\nimport { path } from '../..'\nimport ThemeWrapper from '../../../../utilities/components/ThemeWrapper'\n\nimport {\n  boolean,\n  text,\n  object,\n  withKnobs,\n  number,\n  array\n} from '@storybook/addon-knobs'\nimport { action } from '@storybook/addon-actions'\nimport TextInput from '../../TextInput'\nimport { tMultiSelectChildren } from '../interfaces'\n\nexport default {\n  title: `${path}/MultiSelect`,\n  component: MultiSelect,\n  decorators: [withKnobs],\n  parameters: {\"storySource\":{\"source\":\"\\n\\n// @ts-nocheck\\n// @ts-ignore\\nvar withSourceLoader = require('@storybook/source-loader/preview').withSource;\\n// @ts-ignore\\nvar addSourceDecorator = require(\\\"@storybook/source-loader/preview\\\").addSource;\\n// @ts-ignore\\nvar __SOURCE_PREFIX__ = \\\"/Users/farhanansari/Code/ui-library/src/components/molecules/MultiSelect/stories\\\";\\n// @ts-ignore\\nvar __STORY__ = \\\"\\\\n\\\\n// @ts-nocheck\\\\n// @ts-ignore\\\\nvar withSourceLoader = require('@storybook/source-loader/preview').withSource;\\\\n// @ts-ignore\\\\nvar addSourceDecorator = require(\\\\\\\"@storybook/source-loader/preview\\\\\\\").addSource;\\\\n// @ts-ignore\\\\nvar __SOURCE_PREFIX__ = \\\\\\\"/Users/farhanansari/Code/ui-library/src/components/molecules/MultiSelect/stories\\\\\\\";\\\\n// @ts-ignore\\\\nvar __STORY__ = \\\\\\\"import React from 'react'\\\\\\\\nimport MultiSelect from '../index'\\\\\\\\nimport Box from '../../../atoms/Box'\\\\\\\\nimport { path } from '../..'\\\\\\\\nimport ThemeWrapper from '../../../../utilities/components/ThemeWrapper'\\\\\\\\n\\\\\\\\nimport {\\\\\\\\n  boolean,\\\\\\\\n  text,\\\\\\\\n  object,\\\\\\\\n  withKnobs,\\\\\\\\n  number,\\\\\\\\n  array\\\\\\\\n} from '@storybook/addon-knobs'\\\\\\\\nimport { action } from '@storybook/addon-actions'\\\\\\\\nimport TextInput from '../../TextInput'\\\\\\\\nimport { tMultiSelectChildren } from '../interfaces'\\\\\\\\n\\\\\\\\nexport default {\\\\\\\\n  title: `${path}/MultiSelect`,\\\\\\\\n  component: MultiSelect,\\\\\\\\n  decorators: [withKnobs],\\\\\\\\n  parameters: {\\\\\\\\n    props: {\\\\\\\\n      propTablesExclude: [Box, ThemeWrapper, TextInput]\\\\\\\\n    }\\\\\\\\n  }\\\\\\\\n}\\\\\\\\n\\\\\\\\nconst options = [\\\\\\\\n  { value: 'ocean', label: 'Ocean', phoneNumber: '1234', age: '10' },\\\\\\\\n  { value: 'blue', label: 'Blue', phoneNumber: '455556', age: '12' },\\\\\\\\n  { value: 'purple', label: 'Purple', phoneNumber: '67778', age: '13' },\\\\\\\\n  { value: 'red', label: 'Red', phoneNumber: '89990', age: '14' },\\\\\\\\n  { value: 'orange', label: 'Orange', phoneNumber: '001323', age: '15' },\\\\\\\\n  { value: 'yellow', label: 'Yellow', phoneNumber: '99243452', age: '16' },\\\\\\\\n  { value: 'green', label: 'Green', phoneNumber: '120009', age: '18' },\\\\\\\\n  { value: 'forest', label: 'Forest', phoneNumber: '0000000', age: '20' },\\\\\\\\n  { value: 'slate', label: 'Slate', phoneNumber: '11111111', age: '30' },\\\\\\\\n  { value: 'silver', label: 'Silver', phoneNumber: '22222222', age: '40' },\\\\\\\\n  { value: 'green1', label: 'Green1', phoneNumber: '120009', age: '18' },\\\\\\\\n  { value: 'forest1', label: 'Forest1', phoneNumber: '0000000', age: '20' },\\\\\\\\n  { value: 'slate1', label: 'Slate1', phoneNumber: '11111111', age: '30' },\\\\\\\\n  { value: 'silver1', label: 'Silver1', phoneNumber: '22222222', age: '40' }\\\\\\\\n]\\\\\\\\nconst selectedOptions = [\\\\\\\\n  { value: 'ocean', label: 'Ocean', phoneNumber: '1234', age: '10' },\\\\\\\\n  { value: 'blue', label: 'Blue', phoneNumber: '455556', age: '12' },\\\\\\\\n  { value: 'purple', label: 'Purple', phoneNumber: '67778', age: '13' },\\\\\\\\n  { value: 'red', label: 'Red', phoneNumber: '89990', age: '14' },\\\\\\\\n  { value: 'forest', label: 'Forest', phoneNumber: '0000000', age: '20' }\\\\\\\\n  // { value: 'slate', label: 'Slate', phoneNumber: '11111111', age: '30' }\\\\\\\\n]\\\\\\\\n\\\\\\\\nexport const withTextField = () => (\\\\\\\\n  <ThemeWrapper>\\\\\\\\n    <Box p='1em'>\\\\\\\\n      <MultiSelect\\\\\\\\n        id={text('id', 'Colors')}\\\\\\\\n        width={text('width', '300px')}\\\\\\\\n        options={object('Multi Select Options', options)}\\\\\\\\n        onChange={action('Multi Select changed')}\\\\\\\\n        style={object('styles', {\\\\\\\\n          position: 'absolute',\\\\\\\\n          top: 'auto',\\\\\\\\n          left: 'auto',\\\\\\\\n          marginTop: '-18px'\\\\\\\\n        })}\\\\\\\\n        isLoading={boolean('isLoading', false)}\\\\\\\\n        isNoOption={boolean('isNoOption', false)}\\\\\\\\n        menuOpen={boolean('menuOpen', false)}\\\\\\\\n        selected={object('selected', selectedOptions)}\\\\\\\\n        allowSelectAll={boolean('allowSelectAll', false)}\\\\\\\\n        maximumSelected={number('maximum Selected', 5)}\\\\\\\\n        defaultSelected={object('default Selected', selectedOptions)}\\\\\\\\n        searchableKeys={array('Searchable Keys', ['label', 'phoneNumber'])}\\\\\\\\n        resultLimit={number('resultLimit', 10)}\\\\\\\\n        onInputChange={action('on Input changed')}\\\\\\\\n      >\\\\\\\\n        {({ optionSelected, isMenuOpen, openMenu }: tMultiSelectChildren) => (\\\\\\\\n          <TextInput\\\\\\\\n            id='id'\\\\\\\\n            label='Color'\\\\\\\\n            labelColor='black'\\\\\\\\n            placeholder='Select ... '\\\\\\\\n            error={boolean('Text Input error', false)}\\\\\\\\n            errorMessage={text('error Message', 'Its an error Message')}\\\\\\\\n            disabled={boolean('disabled', false)}\\\\\\\\n            onClick={() => {\\\\\\\\n              openMenu(!isMenuOpen)\\\\\\\\n              action('MultiSelect open/closed')(isMenuOpen)\\\\\\\\n            }}\\\\\\\\n            value={\\\\\\\\n              optionSelected && optionSelected?.length > 0\\\\\\\\n                ? optionSelected?.length + ' Selected'\\\\\\\\n                : ''\\\\\\\\n            }\\\\\\\\n            read-only\\\\\\\\n          />\\\\\\\\n        )}\\\\\\\\n      </MultiSelect>\\\\\\\\n    </Box>\\\\\\\\n  </ThemeWrapper>\\\\\\\\n)\\\\\\\\n\\\\\\\";\\\\n// @ts-ignore\\\\nvar __ADDS_MAP__ = {};\\\\n// @ts-ignore\\\\nvar __MAIN_FILE_LOCATION__ = \\\\\\\"/withTextField.stories.tsx\\\\\\\";\\\\n// @ts-ignore\\\\nvar __MODULE_DEPENDENCIES__ = [];\\\\n// @ts-ignore\\\\nvar __LOCAL_DEPENDENCIES__ = {};\\\\n// @ts-ignore\\\\nvar __IDS_TO_FRAMEWORKS__ = {};\\\\n        \\\\nimport React from 'react'\\\\nimport MultiSelect from '../index'\\\\nimport Box from '../../../atoms/Box'\\\\nimport { path } from '../..'\\\\nimport ThemeWrapper from '../../../../utilities/components/ThemeWrapper'\\\\n\\\\nimport {\\\\n  boolean,\\\\n  text,\\\\n  object,\\\\n  withKnobs,\\\\n  number,\\\\n  array\\\\n} from '@storybook/addon-knobs'\\\\nimport { action } from '@storybook/addon-actions'\\\\nimport TextInput from '../../TextInput'\\\\nimport { tMultiSelectChildren } from '../interfaces'\\\\n\\\\nexport default {\\\\n  title: `${path}/MultiSelect`,\\\\n  component: MultiSelect,\\\\n  decorators: [withKnobs],\\\\n  parameters: {\\\\\\\"storySource\\\\\\\":{\\\\\\\"source\\\\\\\":\\\\\\\"import React from 'react'\\\\\\\\nimport MultiSelect from '../index'\\\\\\\\nimport Box from '../../../atoms/Box'\\\\\\\\nimport { path } from '../..'\\\\\\\\nimport ThemeWrapper from '../../../../utilities/components/ThemeWrapper'\\\\\\\\n\\\\\\\\nimport {\\\\\\\\n  boolean,\\\\\\\\n  text,\\\\\\\\n  object,\\\\\\\\n  withKnobs,\\\\\\\\n  number,\\\\\\\\n  array\\\\\\\\n} from '@storybook/addon-knobs'\\\\\\\\nimport { action } from '@storybook/addon-actions'\\\\\\\\nimport TextInput from '../../TextInput'\\\\\\\\nimport { tMultiSelectChildren } from '../interfaces'\\\\\\\\n\\\\\\\\nexport default {\\\\\\\\n  title: `${path}/MultiSelect`,\\\\\\\\n  component: MultiSelect,\\\\\\\\n  decorators: [withKnobs],\\\\\\\\n  parameters: {\\\\\\\\n    props: {\\\\\\\\n      propTablesExclude: [Box, ThemeWrapper, TextInput]\\\\\\\\n    }\\\\\\\\n  }\\\\\\\\n}\\\\\\\\n\\\\\\\\nconst options = [\\\\\\\\n  { value: 'ocean', label: 'Ocean', phoneNumber: '1234', age: '10' },\\\\\\\\n  { value: 'blue', label: 'Blue', phoneNumber: '455556', age: '12' },\\\\\\\\n  { value: 'purple', label: 'Purple', phoneNumber: '67778', age: '13' },\\\\\\\\n  { value: 'red', label: 'Red', phoneNumber: '89990', age: '14' },\\\\\\\\n  { value: 'orange', label: 'Orange', phoneNumber: '001323', age: '15' },\\\\\\\\n  { value: 'yellow', label: 'Yellow', phoneNumber: '99243452', age: '16' },\\\\\\\\n  { value: 'green', label: 'Green', phoneNumber: '120009', age: '18' },\\\\\\\\n  { value: 'forest', label: 'Forest', phoneNumber: '0000000', age: '20' },\\\\\\\\n  { value: 'slate', label: 'Slate', phoneNumber: '11111111', age: '30' },\\\\\\\\n  { value: 'silver', label: 'Silver', phoneNumber: '22222222', age: '40' },\\\\\\\\n  { value: 'green1', label: 'Green1', phoneNumber: '120009', age: '18' },\\\\\\\\n  { value: 'forest1', label: 'Forest1', phoneNumber: '0000000', age: '20' },\\\\\\\\n  { value: 'slate1', label: 'Slate1', phoneNumber: '11111111', age: '30' },\\\\\\\\n  { value: 'silver1', label: 'Silver1', phoneNumber: '22222222', age: '40' }\\\\\\\\n]\\\\\\\\nconst selectedOptions = [\\\\\\\\n  { value: 'ocean', label: 'Ocean', phoneNumber: '1234', age: '10' },\\\\\\\\n  { value: 'blue', label: 'Blue', phoneNumber: '455556', age: '12' },\\\\\\\\n  { value: 'purple', label: 'Purple', phoneNumber: '67778', age: '13' },\\\\\\\\n  { value: 'red', label: 'Red', phoneNumber: '89990', age: '14' },\\\\\\\\n  { value: 'forest', label: 'Forest', phoneNumber: '0000000', age: '20' }\\\\\\\\n  // { value: 'slate', label: 'Slate', phoneNumber: '11111111', age: '30' }\\\\\\\\n]\\\\\\\\n\\\\\\\\nexport const withTextField = () => (\\\\\\\\n  <ThemeWrapper>\\\\\\\\n    <Box p='1em'>\\\\\\\\n      <MultiSelect\\\\\\\\n        id={text('id', 'Colors')}\\\\\\\\n        width={text('width', '300px')}\\\\\\\\n        options={object('Multi Select Options', options)}\\\\\\\\n        onChange={action('Multi Select changed')}\\\\\\\\n        style={object('styles', {\\\\\\\\n          position: 'absolute',\\\\\\\\n          top: 'auto',\\\\\\\\n          left: 'auto',\\\\\\\\n          marginTop: '-18px'\\\\\\\\n        })}\\\\\\\\n        isLoading={boolean('isLoading', false)}\\\\\\\\n        isNoOption={boolean('isNoOption', false)}\\\\\\\\n        menuOpen={boolean('menuOpen', false)}\\\\\\\\n        selected={object('selected', selectedOptions)}\\\\\\\\n        allowSelectAll={boolean('allowSelectAll', false)}\\\\\\\\n        maximumSelected={number('maximum Selected', 5)}\\\\\\\\n        defaultSelected={object('default Selected', selectedOptions)}\\\\\\\\n        searchableKeys={array('Searchable Keys', ['label', 'phoneNumber'])}\\\\\\\\n        resultLimit={number('resultLimit', 10)}\\\\\\\\n        onInputChange={action('on Input changed')}\\\\\\\\n      >\\\\\\\\n        {({ optionSelected, isMenuOpen, openMenu }: tMultiSelectChildren) => (\\\\\\\\n          <TextInput\\\\\\\\n            id='id'\\\\\\\\n            label='Color'\\\\\\\\n            labelColor='black'\\\\\\\\n            placeholder='Select ... '\\\\\\\\n            error={boolean('Text Input error', false)}\\\\\\\\n            errorMessage={text('error Message', 'Its an error Message')}\\\\\\\\n            disabled={boolean('disabled', false)}\\\\\\\\n            onClick={() => {\\\\\\\\n              openMenu(!isMenuOpen)\\\\\\\\n              action('MultiSelect open/closed')(isMenuOpen)\\\\\\\\n            }}\\\\\\\\n            value={\\\\\\\\n              optionSelected && optionSelected?.length > 0\\\\\\\\n                ? optionSelected?.length + ' Selected'\\\\\\\\n                : ''\\\\\\\\n            }\\\\\\\\n            read-only\\\\\\\\n          />\\\\\\\\n        )}\\\\\\\\n      </MultiSelect>\\\\\\\\n    </Box>\\\\\\\\n  </ThemeWrapper>\\\\\\\\n)\\\\\\\\n\\\\\\\",\\\\\\\"locationsMap\\\\\\\":{}},\\\\n    props: {\\\\n      propTablesExclude: [Box, ThemeWrapper, TextInput]\\\\n    }\\\\n  },}\\\\n\\\\nconst options = [\\\\n  { value: 'ocean', label: 'Ocean', phoneNumber: '1234', age: '10' },\\\\n  { value: 'blue', label: 'Blue', phoneNumber: '455556', age: '12' },\\\\n  { value: 'purple', label: 'Purple', phoneNumber: '67778', age: '13' },\\\\n  { value: 'red', label: 'Red', phoneNumber: '89990', age: '14' },\\\\n  { value: 'orange', label: 'Orange', phoneNumber: '001323', age: '15' },\\\\n  { value: 'yellow', label: 'Yellow', phoneNumber: '99243452', age: '16' },\\\\n  { value: 'green', label: 'Green', phoneNumber: '120009', age: '18' },\\\\n  { value: 'forest', label: 'Forest', phoneNumber: '0000000', age: '20' },\\\\n  { value: 'slate', label: 'Slate', phoneNumber: '11111111', age: '30' },\\\\n  { value: 'silver', label: 'Silver', phoneNumber: '22222222', age: '40' },\\\\n  { value: 'green1', label: 'Green1', phoneNumber: '120009', age: '18' },\\\\n  { value: 'forest1', label: 'Forest1', phoneNumber: '0000000', age: '20' },\\\\n  { value: 'slate1', label: 'Slate1', phoneNumber: '11111111', age: '30' },\\\\n  { value: 'silver1', label: 'Silver1', phoneNumber: '22222222', age: '40' }\\\\n]\\\\nconst selectedOptions = [\\\\n  { value: 'ocean', label: 'Ocean', phoneNumber: '1234', age: '10' },\\\\n  { value: 'blue', label: 'Blue', phoneNumber: '455556', age: '12' },\\\\n  { value: 'purple', label: 'Purple', phoneNumber: '67778', age: '13' },\\\\n  { value: 'red', label: 'Red', phoneNumber: '89990', age: '14' },\\\\n  { value: 'forest', label: 'Forest', phoneNumber: '0000000', age: '20' }\\\\n  // { value: 'slate', label: 'Slate', phoneNumber: '11111111', age: '30' }\\\\n]\\\\n\\\\nexport const withTextField = addSourceDecorator(() => (\\\\n  <ThemeWrapper>\\\\n    <Box p='1em'>\\\\n      <MultiSelect\\\\n        id={text('id', 'Colors')}\\\\n        width={text('width', '300px')}\\\\n        options={object('Multi Select Options', options)}\\\\n        onChange={action('Multi Select changed')}\\\\n        style={object('styles', {\\\\n          position: 'absolute',\\\\n          top: 'auto',\\\\n          left: 'auto',\\\\n          marginTop: '-18px'\\\\n        })}\\\\n        isLoading={boolean('isLoading', false)}\\\\n        isNoOption={boolean('isNoOption', false)}\\\\n        menuOpen={boolean('menuOpen', false)}\\\\n        selected={object('selected', selectedOptions)}\\\\n        allowSelectAll={boolean('allowSelectAll', false)}\\\\n        maximumSelected={number('maximum Selected', 5)}\\\\n        defaultSelected={object('default Selected', selectedOptions)}\\\\n        searchableKeys={array('Searchable Keys', ['label', 'phoneNumber'])}\\\\n        resultLimit={number('resultLimit', 10)}\\\\n        onInputChange={action('on Input changed')}\\\\n      >\\\\n        {({ optionSelected, isMenuOpen, openMenu }: tMultiSelectChildren) => (\\\\n          <TextInput\\\\n            id='id'\\\\n            label='Color'\\\\n            labelColor='black'\\\\n            placeholder='Select ... '\\\\n            error={boolean('Text Input error', false)}\\\\n            errorMessage={text('error Message', 'Its an error Message')}\\\\n            disabled={boolean('disabled', false)}\\\\n            onClick={() => {\\\\n              openMenu(!isMenuOpen)\\\\n              action('MultiSelect open/closed')(isMenuOpen)\\\\n            }}\\\\n            value={\\\\n              optionSelected && optionSelected?.length > 0\\\\n                ? optionSelected?.length + ' Selected'\\\\n                : ''\\\\n            }\\\\n            read-only\\\\n          />\\\\n        )}\\\\n      </MultiSelect>\\\\n    </Box>\\\\n  </ThemeWrapper>\\\\n), {__STORY__, __ADDS_MAP__,__MAIN_FILE_LOCATION__,__MODULE_DEPENDENCIES__,__LOCAL_DEPENDENCIES__,__SOURCE_PREFIX__,__IDS_TO_FRAMEWORKS__});\\\";\\n// @ts-ignore\\nvar __ADDS_MAP__ = {};\\n// @ts-ignore\\nvar __MAIN_FILE_LOCATION__ = \\\"/withTextField.stories.tsx\\\";\\n// @ts-ignore\\nvar __MODULE_DEPENDENCIES__ = [];\\n// @ts-ignore\\nvar __LOCAL_DEPENDENCIES__ = {};\\n// @ts-ignore\\nvar __IDS_TO_FRAMEWORKS__ = {};\\n        \\n\\n\\n// @ts-nocheck\\n// @ts-ignore\\nvar withSourceLoader = require('@storybook/source-loader/preview').withSource;\\n// @ts-ignore\\nvar addSourceDecorator = require(\\\"@storybook/source-loader/preview\\\").addSource;\\n// @ts-ignore\\nvar __SOURCE_PREFIX__ = \\\"/Users/farhanansari/Code/ui-library/src/components/molecules/MultiSelect/stories\\\";\\n// @ts-ignore\\nvar __STORY__ = \\\"import React from 'react'\\\\nimport MultiSelect from '../index'\\\\nimport Box from '../../../atoms/Box'\\\\nimport { path } from '../..'\\\\nimport ThemeWrapper from '../../../../utilities/components/ThemeWrapper'\\\\n\\\\nimport {\\\\n  boolean,\\\\n  text,\\\\n  object,\\\\n  withKnobs,\\\\n  number,\\\\n  array\\\\n} from '@storybook/addon-knobs'\\\\nimport { action } from '@storybook/addon-actions'\\\\nimport TextInput from '../../TextInput'\\\\nimport { tMultiSelectChildren } from '../interfaces'\\\\n\\\\nexport default {\\\\n  title: `${path}/MultiSelect`,\\\\n  component: MultiSelect,\\\\n  decorators: [withKnobs],\\\\n  parameters: {\\\\n    props: {\\\\n      propTablesExclude: [Box, ThemeWrapper, TextInput]\\\\n    }\\\\n  }\\\\n}\\\\n\\\\nconst options = [\\\\n  { value: 'ocean', label: 'Ocean', phoneNumber: '1234', age: '10' },\\\\n  { value: 'blue', label: 'Blue', phoneNumber: '455556', age: '12' },\\\\n  { value: 'purple', label: 'Purple', phoneNumber: '67778', age: '13' },\\\\n  { value: 'red', label: 'Red', phoneNumber: '89990', age: '14' },\\\\n  { value: 'orange', label: 'Orange', phoneNumber: '001323', age: '15' },\\\\n  { value: 'yellow', label: 'Yellow', phoneNumber: '99243452', age: '16' },\\\\n  { value: 'green', label: 'Green', phoneNumber: '120009', age: '18' },\\\\n  { value: 'forest', label: 'Forest', phoneNumber: '0000000', age: '20' },\\\\n  { value: 'slate', label: 'Slate', phoneNumber: '11111111', age: '30' },\\\\n  { value: 'silver', label: 'Silver', phoneNumber: '22222222', age: '40' },\\\\n  { value: 'green1', label: 'Green1', phoneNumber: '120009', age: '18' },\\\\n  { value: 'forest1', label: 'Forest1', phoneNumber: '0000000', age: '20' },\\\\n  { value: 'slate1', label: 'Slate1', phoneNumber: '11111111', age: '30' },\\\\n  { value: 'silver1', label: 'Silver1', phoneNumber: '22222222', age: '40' }\\\\n]\\\\nconst selectedOptions = [\\\\n  { value: 'ocean', label: 'Ocean', phoneNumber: '1234', age: '10' },\\\\n  { value: 'blue', label: 'Blue', phoneNumber: '455556', age: '12' },\\\\n  { value: 'purple', label: 'Purple', phoneNumber: '67778', age: '13' },\\\\n  { value: 'red', label: 'Red', phoneNumber: '89990', age: '14' },\\\\n  { value: 'forest', label: 'Forest', phoneNumber: '0000000', age: '20' }\\\\n  // { value: 'slate', label: 'Slate', phoneNumber: '11111111', age: '30' }\\\\n]\\\\n\\\\nexport const withTextField = () => (\\\\n  <ThemeWrapper>\\\\n    <Box p='1em'>\\\\n      <MultiSelect\\\\n        id={text('id', 'Colors')}\\\\n        width={text('width', '300px')}\\\\n        options={object('Multi Select Options', options)}\\\\n        onChange={action('Multi Select changed')}\\\\n        style={object('styles', {\\\\n          position: 'absolute',\\\\n          top: 'auto',\\\\n          left: 'auto',\\\\n          marginTop: '-18px'\\\\n        })}\\\\n        isLoading={boolean('isLoading', false)}\\\\n        isNoOption={boolean('isNoOption', false)}\\\\n        menuOpen={boolean('menuOpen', false)}\\\\n        selected={object('selected', selectedOptions)}\\\\n        allowSelectAll={boolean('allowSelectAll', false)}\\\\n        maximumSelected={number('maximum Selected', 5)}\\\\n        defaultSelected={object('default Selected', selectedOptions)}\\\\n        searchableKeys={array('Searchable Keys', ['label', 'phoneNumber'])}\\\\n        resultLimit={number('resultLimit', 10)}\\\\n        onInputChange={action('on Input changed')}\\\\n      >\\\\n        {({ optionSelected, isMenuOpen, openMenu }: tMultiSelectChildren) => (\\\\n          <TextInput\\\\n            id='id'\\\\n            label='Color'\\\\n            labelColor='black'\\\\n            placeholder='Select ... '\\\\n            error={boolean('Text Input error', false)}\\\\n            errorMessage={text('error Message', 'Its an error Message')}\\\\n            disabled={boolean('disabled', false)}\\\\n            onClick={() => {\\\\n              openMenu(!isMenuOpen)\\\\n              action('MultiSelect open/closed')(isMenuOpen)\\\\n            }}\\\\n            value={\\\\n              optionSelected && optionSelected?.length > 0\\\\n                ? optionSelected?.length + ' Selected'\\\\n                : ''\\\\n            }\\\\n            read-only\\\\n          />\\\\n        )}\\\\n      </MultiSelect>\\\\n    </Box>\\\\n  </ThemeWrapper>\\\\n)\\\\n\\\";\\n// @ts-ignore\\nvar __ADDS_MAP__ = {};\\n// @ts-ignore\\nvar __MAIN_FILE_LOCATION__ = \\\"/withTextField.stories.tsx\\\";\\n// @ts-ignore\\nvar __MODULE_DEPENDENCIES__ = [];\\n// @ts-ignore\\nvar __LOCAL_DEPENDENCIES__ = {};\\n// @ts-ignore\\nvar __IDS_TO_FRAMEWORKS__ = {};\\n        \\nimport React from 'react'\\nimport MultiSelect from '../index'\\nimport Box from '../../../atoms/Box'\\nimport { path } from '../..'\\nimport ThemeWrapper from '../../../../utilities/components/ThemeWrapper'\\n\\nimport {\\n  boolean,\\n  text,\\n  object,\\n  withKnobs,\\n  number,\\n  array\\n} from '@storybook/addon-knobs'\\nimport { action } from '@storybook/addon-actions'\\nimport TextInput from '../../TextInput'\\nimport { tMultiSelectChildren } from '../interfaces'\\n\\nexport default {\\n  title: `${path}/MultiSelect`,\\n  component: MultiSelect,\\n  decorators: [withKnobs],\\n  parameters: {\\\"storySource\\\":{\\\"source\\\":\\\"\\\\n\\\\n// @ts-nocheck\\\\n// @ts-ignore\\\\nvar withSourceLoader = require('@storybook/source-loader/preview').withSource;\\\\n// @ts-ignore\\\\nvar addSourceDecorator = require(\\\\\\\"@storybook/source-loader/preview\\\\\\\").addSource;\\\\n// @ts-ignore\\\\nvar __SOURCE_PREFIX__ = \\\\\\\"/Users/farhanansari/Code/ui-library/src/components/molecules/MultiSelect/stories\\\\\\\";\\\\n// @ts-ignore\\\\nvar __STORY__ = \\\\\\\"import React from 'react'\\\\\\\\nimport MultiSelect from '../index'\\\\\\\\nimport Box from '../../../atoms/Box'\\\\\\\\nimport { path } from '../..'\\\\\\\\nimport ThemeWrapper from '../../../../utilities/components/ThemeWrapper'\\\\\\\\n\\\\\\\\nimport {\\\\\\\\n  boolean,\\\\\\\\n  text,\\\\\\\\n  object,\\\\\\\\n  withKnobs,\\\\\\\\n  number,\\\\\\\\n  array\\\\\\\\n} from '@storybook/addon-knobs'\\\\\\\\nimport { action } from '@storybook/addon-actions'\\\\\\\\nimport TextInput from '../../TextInput'\\\\\\\\nimport { tMultiSelectChildren } from '../interfaces'\\\\\\\\n\\\\\\\\nexport default {\\\\\\\\n  title: `${path}/MultiSelect`,\\\\\\\\n  component: MultiSelect,\\\\\\\\n  decorators: [withKnobs],\\\\\\\\n  parameters: {\\\\\\\\n    props: {\\\\\\\\n      propTablesExclude: [Box, ThemeWrapper, TextInput]\\\\\\\\n    }\\\\\\\\n  }\\\\\\\\n}\\\\\\\\n\\\\\\\\nconst options = [\\\\\\\\n  { value: 'ocean', label: 'Ocean', phoneNumber: '1234', age: '10' },\\\\\\\\n  { value: 'blue', label: 'Blue', phoneNumber: '455556', age: '12' },\\\\\\\\n  { value: 'purple', label: 'Purple', phoneNumber: '67778', age: '13' },\\\\\\\\n  { value: 'red', label: 'Red', phoneNumber: '89990', age: '14' },\\\\\\\\n  { value: 'orange', label: 'Orange', phoneNumber: '001323', age: '15' },\\\\\\\\n  { value: 'yellow', label: 'Yellow', phoneNumber: '99243452', age: '16' },\\\\\\\\n  { value: 'green', label: 'Green', phoneNumber: '120009', age: '18' },\\\\\\\\n  { value: 'forest', label: 'Forest', phoneNumber: '0000000', age: '20' },\\\\\\\\n  { value: 'slate', label: 'Slate', phoneNumber: '11111111', age: '30' },\\\\\\\\n  { value: 'silver', label: 'Silver', phoneNumber: '22222222', age: '40' },\\\\\\\\n  { value: 'green1', label: 'Green1', phoneNumber: '120009', age: '18' },\\\\\\\\n  { value: 'forest1', label: 'Forest1', phoneNumber: '0000000', age: '20' },\\\\\\\\n  { value: 'slate1', label: 'Slate1', phoneNumber: '11111111', age: '30' },\\\\\\\\n  { value: 'silver1', label: 'Silver1', phoneNumber: '22222222', age: '40' }\\\\\\\\n]\\\\\\\\nconst selectedOptions = [\\\\\\\\n  { value: 'ocean', label: 'Ocean', phoneNumber: '1234', age: '10' },\\\\\\\\n  { value: 'blue', label: 'Blue', phoneNumber: '455556', age: '12' },\\\\\\\\n  { value: 'purple', label: 'Purple', phoneNumber: '67778', age: '13' },\\\\\\\\n  { value: 'red', label: 'Red', phoneNumber: '89990', age: '14' },\\\\\\\\n  { value: 'forest', label: 'Forest', phoneNumber: '0000000', age: '20' }\\\\\\\\n  // { value: 'slate', label: 'Slate', phoneNumber: '11111111', age: '30' }\\\\\\\\n]\\\\\\\\n\\\\\\\\nexport const withTextField = () => (\\\\\\\\n  <ThemeWrapper>\\\\\\\\n    <Box p='1em'>\\\\\\\\n      <MultiSelect\\\\\\\\n        id={text('id', 'Colors')}\\\\\\\\n        width={text('width', '300px')}\\\\\\\\n        options={object('Multi Select Options', options)}\\\\\\\\n        onChange={action('Multi Select changed')}\\\\\\\\n        style={object('styles', {\\\\\\\\n          position: 'absolute',\\\\\\\\n          top: 'auto',\\\\\\\\n          left: 'auto',\\\\\\\\n          marginTop: '-18px'\\\\\\\\n        })}\\\\\\\\n        isLoading={boolean('isLoading', false)}\\\\\\\\n        isNoOption={boolean('isNoOption', false)}\\\\\\\\n        menuOpen={boolean('menuOpen', false)}\\\\\\\\n        selected={object('selected', selectedOptions)}\\\\\\\\n        allowSelectAll={boolean('allowSelectAll', false)}\\\\\\\\n        maximumSelected={number('maximum Selected', 5)}\\\\\\\\n        defaultSelected={object('default Selected', selectedOptions)}\\\\\\\\n        searchableKeys={array('Searchable Keys', ['label', 'phoneNumber'])}\\\\\\\\n        resultLimit={number('resultLimit', 10)}\\\\\\\\n        onInputChange={action('on Input changed')}\\\\\\\\n      >\\\\\\\\n        {({ optionSelected, isMenuOpen, openMenu }: tMultiSelectChildren) => (\\\\\\\\n          <TextInput\\\\\\\\n            id='id'\\\\\\\\n            label='Color'\\\\\\\\n            labelColor='black'\\\\\\\\n            placeholder='Select ... '\\\\\\\\n            error={boolean('Text Input error', false)}\\\\\\\\n            errorMessage={text('error Message', 'Its an error Message')}\\\\\\\\n            disabled={boolean('disabled', false)}\\\\\\\\n            onClick={() => {\\\\\\\\n              openMenu(!isMenuOpen)\\\\\\\\n              action('MultiSelect open/closed')(isMenuOpen)\\\\\\\\n            }}\\\\\\\\n            value={\\\\\\\\n              optionSelected && optionSelected?.length > 0\\\\\\\\n                ? optionSelected?.length + ' Selected'\\\\\\\\n                : ''\\\\\\\\n            }\\\\\\\\n            read-only\\\\\\\\n          />\\\\\\\\n        )}\\\\\\\\n      </MultiSelect>\\\\\\\\n    </Box>\\\\\\\\n  </ThemeWrapper>\\\\\\\\n)\\\\\\\\n\\\\\\\";\\\\n// @ts-ignore\\\\nvar __ADDS_MAP__ = {};\\\\n// @ts-ignore\\\\nvar __MAIN_FILE_LOCATION__ = \\\\\\\"/withTextField.stories.tsx\\\\\\\";\\\\n// @ts-ignore\\\\nvar __MODULE_DEPENDENCIES__ = [];\\\\n// @ts-ignore\\\\nvar __LOCAL_DEPENDENCIES__ = {};\\\\n// @ts-ignore\\\\nvar __IDS_TO_FRAMEWORKS__ = {};\\\\n        \\\\nimport React from 'react'\\\\nimport MultiSelect from '../index'\\\\nimport Box from '../../../atoms/Box'\\\\nimport { path } from '../..'\\\\nimport ThemeWrapper from '../../../../utilities/components/ThemeWrapper'\\\\n\\\\nimport {\\\\n  boolean,\\\\n  text,\\\\n  object,\\\\n  withKnobs,\\\\n  number,\\\\n  array\\\\n} from '@storybook/addon-knobs'\\\\nimport { action } from '@storybook/addon-actions'\\\\nimport TextInput from '../../TextInput'\\\\nimport { tMultiSelectChildren } from '../interfaces'\\\\n\\\\nexport default {\\\\n  title: `${path}/MultiSelect`,\\\\n  component: MultiSelect,\\\\n  decorators: [withKnobs],\\\\n  parameters: {\\\\\\\"storySource\\\\\\\":{\\\\\\\"source\\\\\\\":\\\\\\\"import React from 'react'\\\\\\\\nimport MultiSelect from '../index'\\\\\\\\nimport Box from '../../../atoms/Box'\\\\\\\\nimport { path } from '../..'\\\\\\\\nimport ThemeWrapper from '../../../../utilities/components/ThemeWrapper'\\\\\\\\n\\\\\\\\nimport {\\\\\\\\n  boolean,\\\\\\\\n  text,\\\\\\\\n  object,\\\\\\\\n  withKnobs,\\\\\\\\n  number,\\\\\\\\n  array\\\\\\\\n} from '@storybook/addon-knobs'\\\\\\\\nimport { action } from '@storybook/addon-actions'\\\\\\\\nimport TextInput from '../../TextInput'\\\\\\\\nimport { tMultiSelectChildren } from '../interfaces'\\\\\\\\n\\\\\\\\nexport default {\\\\\\\\n  title: `${path}/MultiSelect`,\\\\\\\\n  component: MultiSelect,\\\\\\\\n  decorators: [withKnobs],\\\\\\\\n  parameters: {\\\\\\\\n    props: {\\\\\\\\n      propTablesExclude: [Box, ThemeWrapper, TextInput]\\\\\\\\n    }\\\\\\\\n  }\\\\\\\\n}\\\\\\\\n\\\\\\\\nconst options = [\\\\\\\\n  { value: 'ocean', label: 'Ocean', phoneNumber: '1234', age: '10' },\\\\\\\\n  { value: 'blue', label: 'Blue', phoneNumber: '455556', age: '12' },\\\\\\\\n  { value: 'purple', label: 'Purple', phoneNumber: '67778', age: '13' },\\\\\\\\n  { value: 'red', label: 'Red', phoneNumber: '89990', age: '14' },\\\\\\\\n  { value: 'orange', label: 'Orange', phoneNumber: '001323', age: '15' },\\\\\\\\n  { value: 'yellow', label: 'Yellow', phoneNumber: '99243452', age: '16' },\\\\\\\\n  { value: 'green', label: 'Green', phoneNumber: '120009', age: '18' },\\\\\\\\n  { value: 'forest', label: 'Forest', phoneNumber: '0000000', age: '20' },\\\\\\\\n  { value: 'slate', label: 'Slate', phoneNumber: '11111111', age: '30' },\\\\\\\\n  { value: 'silver', label: 'Silver', phoneNumber: '22222222', age: '40' },\\\\\\\\n  { value: 'green1', label: 'Green1', phoneNumber: '120009', age: '18' },\\\\\\\\n  { value: 'forest1', label: 'Forest1', phoneNumber: '0000000', age: '20' },\\\\\\\\n  { value: 'slate1', label: 'Slate1', phoneNumber: '11111111', age: '30' },\\\\\\\\n  { value: 'silver1', label: 'Silver1', phoneNumber: '22222222', age: '40' }\\\\\\\\n]\\\\\\\\nconst selectedOptions = [\\\\\\\\n  { value: 'ocean', label: 'Ocean', phoneNumber: '1234', age: '10' },\\\\\\\\n  { value: 'blue', label: 'Blue', phoneNumber: '455556', age: '12' },\\\\\\\\n  { value: 'purple', label: 'Purple', phoneNumber: '67778', age: '13' },\\\\\\\\n  { value: 'red', label: 'Red', phoneNumber: '89990', age: '14' },\\\\\\\\n  { value: 'forest', label: 'Forest', phoneNumber: '0000000', age: '20' }\\\\\\\\n  // { value: 'slate', label: 'Slate', phoneNumber: '11111111', age: '30' }\\\\\\\\n]\\\\\\\\n\\\\\\\\nexport const withTextField = () => (\\\\\\\\n  <ThemeWrapper>\\\\\\\\n    <Box p='1em'>\\\\\\\\n      <MultiSelect\\\\\\\\n        id={text('id', 'Colors')}\\\\\\\\n        width={text('width', '300px')}\\\\\\\\n        options={object('Multi Select Options', options)}\\\\\\\\n        onChange={action('Multi Select changed')}\\\\\\\\n        style={object('styles', {\\\\\\\\n          position: 'absolute',\\\\\\\\n          top: 'auto',\\\\\\\\n          left: 'auto',\\\\\\\\n          marginTop: '-18px'\\\\\\\\n        })}\\\\\\\\n        isLoading={boolean('isLoading', false)}\\\\\\\\n        isNoOption={boolean('isNoOption', false)}\\\\\\\\n        menuOpen={boolean('menuOpen', false)}\\\\\\\\n        selected={object('selected', selectedOptions)}\\\\\\\\n        allowSelectAll={boolean('allowSelectAll', false)}\\\\\\\\n        maximumSelected={number('maximum Selected', 5)}\\\\\\\\n        defaultSelected={object('default Selected', selectedOptions)}\\\\\\\\n        searchableKeys={array('Searchable Keys', ['label', 'phoneNumber'])}\\\\\\\\n        resultLimit={number('resultLimit', 10)}\\\\\\\\n        onInputChange={action('on Input changed')}\\\\\\\\n      >\\\\\\\\n        {({ optionSelected, isMenuOpen, openMenu }: tMultiSelectChildren) => (\\\\\\\\n          <TextInput\\\\\\\\n            id='id'\\\\\\\\n            label='Color'\\\\\\\\n            labelColor='black'\\\\\\\\n            placeholder='Select ... '\\\\\\\\n            error={boolean('Text Input error', false)}\\\\\\\\n            errorMessage={text('error Message', 'Its an error Message')}\\\\\\\\n            disabled={boolean('disabled', false)}\\\\\\\\n            onClick={() => {\\\\\\\\n              openMenu(!isMenuOpen)\\\\\\\\n              action('MultiSelect open/closed')(isMenuOpen)\\\\\\\\n            }}\\\\\\\\n            value={\\\\\\\\n              optionSelected && optionSelected?.length > 0\\\\\\\\n                ? optionSelected?.length + ' Selected'\\\\\\\\n                : ''\\\\\\\\n            }\\\\\\\\n            read-only\\\\\\\\n          />\\\\\\\\n        )}\\\\\\\\n      </MultiSelect>\\\\\\\\n    </Box>\\\\\\\\n  </ThemeWrapper>\\\\\\\\n)\\\\\\\\n\\\\\\\",\\\\\\\"locationsMap\\\\\\\":{}},\\\\n    props: {\\\\n      propTablesExclude: [Box, ThemeWrapper, TextInput]\\\\n    }\\\\n  },}\\\\n\\\\nconst options = [\\\\n  { value: 'ocean', label: 'Ocean', phoneNumber: '1234', age: '10' },\\\\n  { value: 'blue', label: 'Blue', phoneNumber: '455556', age: '12' },\\\\n  { value: 'purple', label: 'Purple', phoneNumber: '67778', age: '13' },\\\\n  { value: 'red', label: 'Red', phoneNumber: '89990', age: '14' },\\\\n  { value: 'orange', label: 'Orange', phoneNumber: '001323', age: '15' },\\\\n  { value: 'yellow', label: 'Yellow', phoneNumber: '99243452', age: '16' },\\\\n  { value: 'green', label: 'Green', phoneNumber: '120009', age: '18' },\\\\n  { value: 'forest', label: 'Forest', phoneNumber: '0000000', age: '20' },\\\\n  { value: 'slate', label: 'Slate', phoneNumber: '11111111', age: '30' },\\\\n  { value: 'silver', label: 'Silver', phoneNumber: '22222222', age: '40' },\\\\n  { value: 'green1', label: 'Green1', phoneNumber: '120009', age: '18' },\\\\n  { value: 'forest1', label: 'Forest1', phoneNumber: '0000000', age: '20' },\\\\n  { value: 'slate1', label: 'Slate1', phoneNumber: '11111111', age: '30' },\\\\n  { value: 'silver1', label: 'Silver1', phoneNumber: '22222222', age: '40' }\\\\n]\\\\nconst selectedOptions = [\\\\n  { value: 'ocean', label: 'Ocean', phoneNumber: '1234', age: '10' },\\\\n  { value: 'blue', label: 'Blue', phoneNumber: '455556', age: '12' },\\\\n  { value: 'purple', label: 'Purple', phoneNumber: '67778', age: '13' },\\\\n  { value: 'red', label: 'Red', phoneNumber: '89990', age: '14' },\\\\n  { value: 'forest', label: 'Forest', phoneNumber: '0000000', age: '20' }\\\\n  // { value: 'slate', label: 'Slate', phoneNumber: '11111111', age: '30' }\\\\n]\\\\n\\\\nexport const withTextField = addSourceDecorator(() => (\\\\n  <ThemeWrapper>\\\\n    <Box p='1em'>\\\\n      <MultiSelect\\\\n        id={text('id', 'Colors')}\\\\n        width={text('width', '300px')}\\\\n        options={object('Multi Select Options', options)}\\\\n        onChange={action('Multi Select changed')}\\\\n        style={object('styles', {\\\\n          position: 'absolute',\\\\n          top: 'auto',\\\\n          left: 'auto',\\\\n          marginTop: '-18px'\\\\n        })}\\\\n        isLoading={boolean('isLoading', false)}\\\\n        isNoOption={boolean('isNoOption', false)}\\\\n        menuOpen={boolean('menuOpen', false)}\\\\n        selected={object('selected', selectedOptions)}\\\\n        allowSelectAll={boolean('allowSelectAll', false)}\\\\n        maximumSelected={number('maximum Selected', 5)}\\\\n        defaultSelected={object('default Selected', selectedOptions)}\\\\n        searchableKeys={array('Searchable Keys', ['label', 'phoneNumber'])}\\\\n        resultLimit={number('resultLimit', 10)}\\\\n        onInputChange={action('on Input changed')}\\\\n      >\\\\n        {({ optionSelected, isMenuOpen, openMenu }: tMultiSelectChildren) => (\\\\n          <TextInput\\\\n            id='id'\\\\n            label='Color'\\\\n            labelColor='black'\\\\n            placeholder='Select ... '\\\\n            error={boolean('Text Input error', false)}\\\\n            errorMessage={text('error Message', 'Its an error Message')}\\\\n            disabled={boolean('disabled', false)}\\\\n            onClick={() => {\\\\n              openMenu(!isMenuOpen)\\\\n              action('MultiSelect open/closed')(isMenuOpen)\\\\n            }}\\\\n            value={\\\\n              optionSelected && optionSelected?.length > 0\\\\n                ? optionSelected?.length + ' Selected'\\\\n                : ''\\\\n            }\\\\n            read-only\\\\n          />\\\\n        )}\\\\n      </MultiSelect>\\\\n    </Box>\\\\n  </ThemeWrapper>\\\\n), {__STORY__, __ADDS_MAP__,__MAIN_FILE_LOCATION__,__MODULE_DEPENDENCIES__,__LOCAL_DEPENDENCIES__,__SOURCE_PREFIX__,__IDS_TO_FRAMEWORKS__});\\\",\\\"locationsMap\\\":{}},\\\"storySource\\\":{\\\"source\\\":\\\"import React from 'react'\\\\nimport MultiSelect from '../index'\\\\nimport Box from '../../../atoms/Box'\\\\nimport { path } from '../..'\\\\nimport ThemeWrapper from '../../../../utilities/components/ThemeWrapper'\\\\n\\\\nimport {\\\\n  boolean,\\\\n  text,\\\\n  object,\\\\n  withKnobs,\\\\n  number,\\\\n  array\\\\n} from '@storybook/addon-knobs'\\\\nimport { action } from '@storybook/addon-actions'\\\\nimport TextInput from '../../TextInput'\\\\nimport { tMultiSelectChildren } from '../interfaces'\\\\n\\\\nexport default {\\\\n  title: `${path}/MultiSelect`,\\\\n  component: MultiSelect,\\\\n  decorators: [withKnobs],\\\\n  parameters: {\\\\n    props: {\\\\n      propTablesExclude: [Box, ThemeWrapper, TextInput]\\\\n    }\\\\n  }\\\\n}\\\\n\\\\nconst options = [\\\\n  { value: 'ocean', label: 'Ocean', phoneNumber: '1234', age: '10' },\\\\n  { value: 'blue', label: 'Blue', phoneNumber: '455556', age: '12' },\\\\n  { value: 'purple', label: 'Purple', phoneNumber: '67778', age: '13' },\\\\n  { value: 'red', label: 'Red', phoneNumber: '89990', age: '14' },\\\\n  { value: 'orange', label: 'Orange', phoneNumber: '001323', age: '15' },\\\\n  { value: 'yellow', label: 'Yellow', phoneNumber: '99243452', age: '16' },\\\\n  { value: 'green', label: 'Green', phoneNumber: '120009', age: '18' },\\\\n  { value: 'forest', label: 'Forest', phoneNumber: '0000000', age: '20' },\\\\n  { value: 'slate', label: 'Slate', phoneNumber: '11111111', age: '30' },\\\\n  { value: 'silver', label: 'Silver', phoneNumber: '22222222', age: '40' },\\\\n  { value: 'green1', label: 'Green1', phoneNumber: '120009', age: '18' },\\\\n  { value: 'forest1', label: 'Forest1', phoneNumber: '0000000', age: '20' },\\\\n  { value: 'slate1', label: 'Slate1', phoneNumber: '11111111', age: '30' },\\\\n  { value: 'silver1', label: 'Silver1', phoneNumber: '22222222', age: '40' }\\\\n]\\\\nconst selectedOptions = [\\\\n  { value: 'ocean', label: 'Ocean', phoneNumber: '1234', age: '10' },\\\\n  { value: 'blue', label: 'Blue', phoneNumber: '455556', age: '12' },\\\\n  { value: 'purple', label: 'Purple', phoneNumber: '67778', age: '13' },\\\\n  { value: 'red', label: 'Red', phoneNumber: '89990', age: '14' },\\\\n  { value: 'forest', label: 'Forest', phoneNumber: '0000000', age: '20' }\\\\n  // { value: 'slate', label: 'Slate', phoneNumber: '11111111', age: '30' }\\\\n]\\\\n\\\\nexport const withTextField = () => (\\\\n  <ThemeWrapper>\\\\n    <Box p='1em'>\\\\n      <MultiSelect\\\\n        id={text('id', 'Colors')}\\\\n        width={text('width', '300px')}\\\\n        options={object('Multi Select Options', options)}\\\\n        onChange={action('Multi Select changed')}\\\\n        style={object('styles', {\\\\n          position: 'absolute',\\\\n          top: 'auto',\\\\n          left: 'auto',\\\\n          marginTop: '-18px'\\\\n        })}\\\\n        isLoading={boolean('isLoading', false)}\\\\n        isNoOption={boolean('isNoOption', false)}\\\\n        menuOpen={boolean('menuOpen', false)}\\\\n        selected={object('selected', selectedOptions)}\\\\n        allowSelectAll={boolean('allowSelectAll', false)}\\\\n        maximumSelected={number('maximum Selected', 5)}\\\\n        defaultSelected={object('default Selected', selectedOptions)}\\\\n        searchableKeys={array('Searchable Keys', ['label', 'phoneNumber'])}\\\\n        resultLimit={number('resultLimit', 10)}\\\\n        onInputChange={action('on Input changed')}\\\\n      >\\\\n        {({ optionSelected, isMenuOpen, openMenu }: tMultiSelectChildren) => (\\\\n          <TextInput\\\\n            id='id'\\\\n            label='Color'\\\\n            labelColor='black'\\\\n            placeholder='Select ... '\\\\n            error={boolean('Text Input error', false)}\\\\n            errorMessage={text('error Message', 'Its an error Message')}\\\\n            disabled={boolean('disabled', false)}\\\\n            onClick={() => {\\\\n              openMenu(!isMenuOpen)\\\\n              action('MultiSelect open/closed')(isMenuOpen)\\\\n            }}\\\\n            value={\\\\n              optionSelected && optionSelected?.length > 0\\\\n                ? optionSelected?.length + ' Selected'\\\\n                : ''\\\\n            }\\\\n            read-only\\\\n          />\\\\n        )}\\\\n      </MultiSelect>\\\\n    </Box>\\\\n  </ThemeWrapper>\\\\n)\\\\n\\\",\\\"locationsMap\\\":{}},\\n    props: {\\n      propTablesExclude: [Box, ThemeWrapper, TextInput]\\n    }\\n  },}\\n\\nconst options = [\\n  { value: 'ocean', label: 'Ocean', phoneNumber: '1234', age: '10' },\\n  { value: 'blue', label: 'Blue', phoneNumber: '455556', age: '12' },\\n  { value: 'purple', label: 'Purple', phoneNumber: '67778', age: '13' },\\n  { value: 'red', label: 'Red', phoneNumber: '89990', age: '14' },\\n  { value: 'orange', label: 'Orange', phoneNumber: '001323', age: '15' },\\n  { value: 'yellow', label: 'Yellow', phoneNumber: '99243452', age: '16' },\\n  { value: 'green', label: 'Green', phoneNumber: '120009', age: '18' },\\n  { value: 'forest', label: 'Forest', phoneNumber: '0000000', age: '20' },\\n  { value: 'slate', label: 'Slate', phoneNumber: '11111111', age: '30' },\\n  { value: 'silver', label: 'Silver', phoneNumber: '22222222', age: '40' },\\n  { value: 'green1', label: 'Green1', phoneNumber: '120009', age: '18' },\\n  { value: 'forest1', label: 'Forest1', phoneNumber: '0000000', age: '20' },\\n  { value: 'slate1', label: 'Slate1', phoneNumber: '11111111', age: '30' },\\n  { value: 'silver1', label: 'Silver1', phoneNumber: '22222222', age: '40' }\\n]\\nconst selectedOptions = [\\n  { value: 'ocean', label: 'Ocean', phoneNumber: '1234', age: '10' },\\n  { value: 'blue', label: 'Blue', phoneNumber: '455556', age: '12' },\\n  { value: 'purple', label: 'Purple', phoneNumber: '67778', age: '13' },\\n  { value: 'red', label: 'Red', phoneNumber: '89990', age: '14' },\\n  { value: 'forest', label: 'Forest', phoneNumber: '0000000', age: '20' }\\n  // { value: 'slate', label: 'Slate', phoneNumber: '11111111', age: '30' }\\n]\\n\\nexport const withTextField = addSourceDecorator(addSourceDecorator(() => (\\n  <ThemeWrapper>\\n    <Box p='1em'>\\n      <MultiSelect\\n        id={text('id', 'Colors')}\\n        width={text('width', '300px')}\\n        options={object('Multi Select Options', options)}\\n        onChange={action('Multi Select changed')}\\n        style={object('styles', {\\n          position: 'absolute',\\n          top: 'auto',\\n          left: 'auto',\\n          marginTop: '-18px'\\n        })}\\n        isLoading={boolean('isLoading', false)}\\n        isNoOption={boolean('isNoOption', false)}\\n        menuOpen={boolean('menuOpen', false)}\\n        selected={object('selected', selectedOptions)}\\n        allowSelectAll={boolean('allowSelectAll', false)}\\n        maximumSelected={number('maximum Selected', 5)}\\n        defaultSelected={object('default Selected', selectedOptions)}\\n        searchableKeys={array('Searchable Keys', ['label', 'phoneNumber'])}\\n        resultLimit={number('resultLimit', 10)}\\n        onInputChange={action('on Input changed')}\\n      >\\n        {({ optionSelected, isMenuOpen, openMenu }: tMultiSelectChildren) => (\\n          <TextInput\\n            id='id'\\n            label='Color'\\n            labelColor='black'\\n            placeholder='Select ... '\\n            error={boolean('Text Input error', false)}\\n            errorMessage={text('error Message', 'Its an error Message')}\\n            disabled={boolean('disabled', false)}\\n            onClick={() => {\\n              openMenu(!isMenuOpen)\\n              action('MultiSelect open/closed')(isMenuOpen)\\n            }}\\n            value={\\n              optionSelected && optionSelected?.length > 0\\n                ? optionSelected?.length + ' Selected'\\n                : ''\\n            }\\n            read-only\\n          />\\n        )}\\n      </MultiSelect>\\n    </Box>\\n  </ThemeWrapper>\\n), {__STORY__, __ADDS_MAP__,__MAIN_FILE_LOCATION__,__MODULE_DEPENDENCIES__,__LOCAL_DEPENDENCIES__,__SOURCE_PREFIX__,__IDS_TO_FRAMEWORKS__}), {__STORY__, __ADDS_MAP__,__MAIN_FILE_LOCATION__,__MODULE_DEPENDENCIES__,__LOCAL_DEPENDENCIES__,__SOURCE_PREFIX__,__IDS_TO_FRAMEWORKS__});\",\"locationsMap\":{}},\"storySource\":{\"source\":\"\\n\\n// @ts-nocheck\\n// @ts-ignore\\nvar withSourceLoader = require('@storybook/source-loader/preview').withSource;\\n// @ts-ignore\\nvar addSourceDecorator = require(\\\"@storybook/source-loader/preview\\\").addSource;\\n// @ts-ignore\\nvar __SOURCE_PREFIX__ = \\\"/Users/farhanansari/Code/ui-library/src/components/molecules/MultiSelect/stories\\\";\\n// @ts-ignore\\nvar __STORY__ = \\\"import React from 'react'\\\\nimport MultiSelect from '../index'\\\\nimport Box from '../../../atoms/Box'\\\\nimport { path } from '../..'\\\\nimport ThemeWrapper from '../../../../utilities/components/ThemeWrapper'\\\\n\\\\nimport {\\\\n  boolean,\\\\n  text,\\\\n  object,\\\\n  withKnobs,\\\\n  number,\\\\n  array\\\\n} from '@storybook/addon-knobs'\\\\nimport { action } from '@storybook/addon-actions'\\\\nimport TextInput from '../../TextInput'\\\\nimport { tMultiSelectChildren } from '../interfaces'\\\\n\\\\nexport default {\\\\n  title: `${path}/MultiSelect`,\\\\n  component: MultiSelect,\\\\n  decorators: [withKnobs],\\\\n  parameters: {\\\\n    props: {\\\\n      propTablesExclude: [Box, ThemeWrapper, TextInput]\\\\n    }\\\\n  }\\\\n}\\\\n\\\\nconst options = [\\\\n  { value: 'ocean', label: 'Ocean', phoneNumber: '1234', age: '10' },\\\\n  { value: 'blue', label: 'Blue', phoneNumber: '455556', age: '12' },\\\\n  { value: 'purple', label: 'Purple', phoneNumber: '67778', age: '13' },\\\\n  { value: 'red', label: 'Red', phoneNumber: '89990', age: '14' },\\\\n  { value: 'orange', label: 'Orange', phoneNumber: '001323', age: '15' },\\\\n  { value: 'yellow', label: 'Yellow', phoneNumber: '99243452', age: '16' },\\\\n  { value: 'green', label: 'Green', phoneNumber: '120009', age: '18' },\\\\n  { value: 'forest', label: 'Forest', phoneNumber: '0000000', age: '20' },\\\\n  { value: 'slate', label: 'Slate', phoneNumber: '11111111', age: '30' },\\\\n  { value: 'silver', label: 'Silver', phoneNumber: '22222222', age: '40' },\\\\n  { value: 'green1', label: 'Green1', phoneNumber: '120009', age: '18' },\\\\n  { value: 'forest1', label: 'Forest1', phoneNumber: '0000000', age: '20' },\\\\n  { value: 'slate1', label: 'Slate1', phoneNumber: '11111111', age: '30' },\\\\n  { value: 'silver1', label: 'Silver1', phoneNumber: '22222222', age: '40' }\\\\n]\\\\nconst selectedOptions = [\\\\n  { value: 'ocean', label: 'Ocean', phoneNumber: '1234', age: '10' },\\\\n  { value: 'blue', label: 'Blue', phoneNumber: '455556', age: '12' },\\\\n  { value: 'purple', label: 'Purple', phoneNumber: '67778', age: '13' },\\\\n  { value: 'red', label: 'Red', phoneNumber: '89990', age: '14' },\\\\n  { value: 'forest', label: 'Forest', phoneNumber: '0000000', age: '20' }\\\\n  // { value: 'slate', label: 'Slate', phoneNumber: '11111111', age: '30' }\\\\n]\\\\n\\\\nexport const withTextField = () => (\\\\n  <ThemeWrapper>\\\\n    <Box p='1em'>\\\\n      <MultiSelect\\\\n        id={text('id', 'Colors')}\\\\n        width={text('width', '300px')}\\\\n        options={object('Multi Select Options', options)}\\\\n        onChange={action('Multi Select changed')}\\\\n        style={object('styles', {\\\\n          position: 'absolute',\\\\n          top: 'auto',\\\\n          left: 'auto',\\\\n          marginTop: '-18px'\\\\n        })}\\\\n        isLoading={boolean('isLoading', false)}\\\\n        isNoOption={boolean('isNoOption', false)}\\\\n        menuOpen={boolean('menuOpen', false)}\\\\n        selected={object('selected', selectedOptions)}\\\\n        allowSelectAll={boolean('allowSelectAll', false)}\\\\n        maximumSelected={number('maximum Selected', 5)}\\\\n        defaultSelected={object('default Selected', selectedOptions)}\\\\n        searchableKeys={array('Searchable Keys', ['label', 'phoneNumber'])}\\\\n        resultLimit={number('resultLimit', 10)}\\\\n        onInputChange={action('on Input changed')}\\\\n      >\\\\n        {({ optionSelected, isMenuOpen, openMenu }: tMultiSelectChildren) => (\\\\n          <TextInput\\\\n            id='id'\\\\n            label='Color'\\\\n            labelColor='black'\\\\n            placeholder='Select ... '\\\\n            error={boolean('Text Input error', false)}\\\\n            errorMessage={text('error Message', 'Its an error Message')}\\\\n            disabled={boolean('disabled', false)}\\\\n            onClick={() => {\\\\n              openMenu(!isMenuOpen)\\\\n              action('MultiSelect open/closed')(isMenuOpen)\\\\n            }}\\\\n            value={\\\\n              optionSelected && optionSelected?.length > 0\\\\n                ? optionSelected?.length + ' Selected'\\\\n                : ''\\\\n            }\\\\n            read-only\\\\n          />\\\\n        )}\\\\n      </MultiSelect>\\\\n    </Box>\\\\n  </ThemeWrapper>\\\\n)\\\\n\\\";\\n// @ts-ignore\\nvar __ADDS_MAP__ = {};\\n// @ts-ignore\\nvar __MAIN_FILE_LOCATION__ = \\\"/withTextField.stories.tsx\\\";\\n// @ts-ignore\\nvar __MODULE_DEPENDENCIES__ = [];\\n// @ts-ignore\\nvar __LOCAL_DEPENDENCIES__ = {};\\n// @ts-ignore\\nvar __IDS_TO_FRAMEWORKS__ = {};\\n        \\nimport React from 'react'\\nimport MultiSelect from '../index'\\nimport Box from '../../../atoms/Box'\\nimport { path } from '../..'\\nimport ThemeWrapper from '../../../../utilities/components/ThemeWrapper'\\n\\nimport {\\n  boolean,\\n  text,\\n  object,\\n  withKnobs,\\n  number,\\n  array\\n} from '@storybook/addon-knobs'\\nimport { action } from '@storybook/addon-actions'\\nimport TextInput from '../../TextInput'\\nimport { tMultiSelectChildren } from '../interfaces'\\n\\nexport default {\\n  title: `${path}/MultiSelect`,\\n  component: MultiSelect,\\n  decorators: [withKnobs],\\n  parameters: {\\\"storySource\\\":{\\\"source\\\":\\\"import React from 'react'\\\\nimport MultiSelect from '../index'\\\\nimport Box from '../../../atoms/Box'\\\\nimport { path } from '../..'\\\\nimport ThemeWrapper from '../../../../utilities/components/ThemeWrapper'\\\\n\\\\nimport {\\\\n  boolean,\\\\n  text,\\\\n  object,\\\\n  withKnobs,\\\\n  number,\\\\n  array\\\\n} from '@storybook/addon-knobs'\\\\nimport { action } from '@storybook/addon-actions'\\\\nimport TextInput from '../../TextInput'\\\\nimport { tMultiSelectChildren } from '../interfaces'\\\\n\\\\nexport default {\\\\n  title: `${path}/MultiSelect`,\\\\n  component: MultiSelect,\\\\n  decorators: [withKnobs],\\\\n  parameters: {\\\\n    props: {\\\\n      propTablesExclude: [Box, ThemeWrapper, TextInput]\\\\n    }\\\\n  }\\\\n}\\\\n\\\\nconst options = [\\\\n  { value: 'ocean', label: 'Ocean', phoneNumber: '1234', age: '10' },\\\\n  { value: 'blue', label: 'Blue', phoneNumber: '455556', age: '12' },\\\\n  { value: 'purple', label: 'Purple', phoneNumber: '67778', age: '13' },\\\\n  { value: 'red', label: 'Red', phoneNumber: '89990', age: '14' },\\\\n  { value: 'orange', label: 'Orange', phoneNumber: '001323', age: '15' },\\\\n  { value: 'yellow', label: 'Yellow', phoneNumber: '99243452', age: '16' },\\\\n  { value: 'green', label: 'Green', phoneNumber: '120009', age: '18' },\\\\n  { value: 'forest', label: 'Forest', phoneNumber: '0000000', age: '20' },\\\\n  { value: 'slate', label: 'Slate', phoneNumber: '11111111', age: '30' },\\\\n  { value: 'silver', label: 'Silver', phoneNumber: '22222222', age: '40' },\\\\n  { value: 'green1', label: 'Green1', phoneNumber: '120009', age: '18' },\\\\n  { value: 'forest1', label: 'Forest1', phoneNumber: '0000000', age: '20' },\\\\n  { value: 'slate1', label: 'Slate1', phoneNumber: '11111111', age: '30' },\\\\n  { value: 'silver1', label: 'Silver1', phoneNumber: '22222222', age: '40' }\\\\n]\\\\nconst selectedOptions = [\\\\n  { value: 'ocean', label: 'Ocean', phoneNumber: '1234', age: '10' },\\\\n  { value: 'blue', label: 'Blue', phoneNumber: '455556', age: '12' },\\\\n  { value: 'purple', label: 'Purple', phoneNumber: '67778', age: '13' },\\\\n  { value: 'red', label: 'Red', phoneNumber: '89990', age: '14' },\\\\n  { value: 'forest', label: 'Forest', phoneNumber: '0000000', age: '20' }\\\\n  // { value: 'slate', label: 'Slate', phoneNumber: '11111111', age: '30' }\\\\n]\\\\n\\\\nexport const withTextField = () => (\\\\n  <ThemeWrapper>\\\\n    <Box p='1em'>\\\\n      <MultiSelect\\\\n        id={text('id', 'Colors')}\\\\n        width={text('width', '300px')}\\\\n        options={object('Multi Select Options', options)}\\\\n        onChange={action('Multi Select changed')}\\\\n        style={object('styles', {\\\\n          position: 'absolute',\\\\n          top: 'auto',\\\\n          left: 'auto',\\\\n          marginTop: '-18px'\\\\n        })}\\\\n        isLoading={boolean('isLoading', false)}\\\\n        isNoOption={boolean('isNoOption', false)}\\\\n        menuOpen={boolean('menuOpen', false)}\\\\n        selected={object('selected', selectedOptions)}\\\\n        allowSelectAll={boolean('allowSelectAll', false)}\\\\n        maximumSelected={number('maximum Selected', 5)}\\\\n        defaultSelected={object('default Selected', selectedOptions)}\\\\n        searchableKeys={array('Searchable Keys', ['label', 'phoneNumber'])}\\\\n        resultLimit={number('resultLimit', 10)}\\\\n        onInputChange={action('on Input changed')}\\\\n      >\\\\n        {({ optionSelected, isMenuOpen, openMenu }: tMultiSelectChildren) => (\\\\n          <TextInput\\\\n            id='id'\\\\n            label='Color'\\\\n            labelColor='black'\\\\n            placeholder='Select ... '\\\\n            error={boolean('Text Input error', false)}\\\\n            errorMessage={text('error Message', 'Its an error Message')}\\\\n            disabled={boolean('disabled', false)}\\\\n            onClick={() => {\\\\n              openMenu(!isMenuOpen)\\\\n              action('MultiSelect open/closed')(isMenuOpen)\\\\n            }}\\\\n            value={\\\\n              optionSelected && optionSelected?.length > 0\\\\n                ? optionSelected?.length + ' Selected'\\\\n                : ''\\\\n            }\\\\n            read-only\\\\n          />\\\\n        )}\\\\n      </MultiSelect>\\\\n    </Box>\\\\n  </ThemeWrapper>\\\\n)\\\\n\\\",\\\"locationsMap\\\":{}},\\n    props: {\\n      propTablesExclude: [Box, ThemeWrapper, TextInput]\\n    }\\n  },}\\n\\nconst options = [\\n  { value: 'ocean', label: 'Ocean', phoneNumber: '1234', age: '10' },\\n  { value: 'blue', label: 'Blue', phoneNumber: '455556', age: '12' },\\n  { value: 'purple', label: 'Purple', phoneNumber: '67778', age: '13' },\\n  { value: 'red', label: 'Red', phoneNumber: '89990', age: '14' },\\n  { value: 'orange', label: 'Orange', phoneNumber: '001323', age: '15' },\\n  { value: 'yellow', label: 'Yellow', phoneNumber: '99243452', age: '16' },\\n  { value: 'green', label: 'Green', phoneNumber: '120009', age: '18' },\\n  { value: 'forest', label: 'Forest', phoneNumber: '0000000', age: '20' },\\n  { value: 'slate', label: 'Slate', phoneNumber: '11111111', age: '30' },\\n  { value: 'silver', label: 'Silver', phoneNumber: '22222222', age: '40' },\\n  { value: 'green1', label: 'Green1', phoneNumber: '120009', age: '18' },\\n  { value: 'forest1', label: 'Forest1', phoneNumber: '0000000', age: '20' },\\n  { value: 'slate1', label: 'Slate1', phoneNumber: '11111111', age: '30' },\\n  { value: 'silver1', label: 'Silver1', phoneNumber: '22222222', age: '40' }\\n]\\nconst selectedOptions = [\\n  { value: 'ocean', label: 'Ocean', phoneNumber: '1234', age: '10' },\\n  { value: 'blue', label: 'Blue', phoneNumber: '455556', age: '12' },\\n  { value: 'purple', label: 'Purple', phoneNumber: '67778', age: '13' },\\n  { value: 'red', label: 'Red', phoneNumber: '89990', age: '14' },\\n  { value: 'forest', label: 'Forest', phoneNumber: '0000000', age: '20' }\\n  // { value: 'slate', label: 'Slate', phoneNumber: '11111111', age: '30' }\\n]\\n\\nexport const withTextField = addSourceDecorator(() => (\\n  <ThemeWrapper>\\n    <Box p='1em'>\\n      <MultiSelect\\n        id={text('id', 'Colors')}\\n        width={text('width', '300px')}\\n        options={object('Multi Select Options', options)}\\n        onChange={action('Multi Select changed')}\\n        style={object('styles', {\\n          position: 'absolute',\\n          top: 'auto',\\n          left: 'auto',\\n          marginTop: '-18px'\\n        })}\\n        isLoading={boolean('isLoading', false)}\\n        isNoOption={boolean('isNoOption', false)}\\n        menuOpen={boolean('menuOpen', false)}\\n        selected={object('selected', selectedOptions)}\\n        allowSelectAll={boolean('allowSelectAll', false)}\\n        maximumSelected={number('maximum Selected', 5)}\\n        defaultSelected={object('default Selected', selectedOptions)}\\n        searchableKeys={array('Searchable Keys', ['label', 'phoneNumber'])}\\n        resultLimit={number('resultLimit', 10)}\\n        onInputChange={action('on Input changed')}\\n      >\\n        {({ optionSelected, isMenuOpen, openMenu }: tMultiSelectChildren) => (\\n          <TextInput\\n            id='id'\\n            label='Color'\\n            labelColor='black'\\n            placeholder='Select ... '\\n            error={boolean('Text Input error', false)}\\n            errorMessage={text('error Message', 'Its an error Message')}\\n            disabled={boolean('disabled', false)}\\n            onClick={() => {\\n              openMenu(!isMenuOpen)\\n              action('MultiSelect open/closed')(isMenuOpen)\\n            }}\\n            value={\\n              optionSelected && optionSelected?.length > 0\\n                ? optionSelected?.length + ' Selected'\\n                : ''\\n            }\\n            read-only\\n          />\\n        )}\\n      </MultiSelect>\\n    </Box>\\n  </ThemeWrapper>\\n), {__STORY__, __ADDS_MAP__,__MAIN_FILE_LOCATION__,__MODULE_DEPENDENCIES__,__LOCAL_DEPENDENCIES__,__SOURCE_PREFIX__,__IDS_TO_FRAMEWORKS__});\",\"locationsMap\":{}},\"storySource\":{\"source\":\"import React from 'react'\\nimport MultiSelect from '../index'\\nimport Box from '../../../atoms/Box'\\nimport { path } from '../..'\\nimport ThemeWrapper from '../../../../utilities/components/ThemeWrapper'\\n\\nimport {\\n  boolean,\\n  text,\\n  object,\\n  withKnobs,\\n  number,\\n  array\\n} from '@storybook/addon-knobs'\\nimport { action } from '@storybook/addon-actions'\\nimport TextInput from '../../TextInput'\\nimport { tMultiSelectChildren } from '../interfaces'\\n\\nexport default {\\n  title: `${path}/MultiSelect`,\\n  component: MultiSelect,\\n  decorators: [withKnobs],\\n  parameters: {\\n    props: {\\n      propTablesExclude: [Box, ThemeWrapper, TextInput]\\n    }\\n  }\\n}\\n\\nconst options = [\\n  { value: 'ocean', label: 'Ocean', phoneNumber: '1234', age: '10' },\\n  { value: 'blue', label: 'Blue', phoneNumber: '455556', age: '12' },\\n  { value: 'purple', label: 'Purple', phoneNumber: '67778', age: '13' },\\n  { value: 'red', label: 'Red', phoneNumber: '89990', age: '14' },\\n  { value: 'orange', label: 'Orange', phoneNumber: '001323', age: '15' },\\n  { value: 'yellow', label: 'Yellow', phoneNumber: '99243452', age: '16' },\\n  { value: 'green', label: 'Green', phoneNumber: '120009', age: '18' },\\n  { value: 'forest', label: 'Forest', phoneNumber: '0000000', age: '20' },\\n  { value: 'slate', label: 'Slate', phoneNumber: '11111111', age: '30' },\\n  { value: 'silver', label: 'Silver', phoneNumber: '22222222', age: '40' },\\n  { value: 'green1', label: 'Green1', phoneNumber: '120009', age: '18' },\\n  { value: 'forest1', label: 'Forest1', phoneNumber: '0000000', age: '20' },\\n  { value: 'slate1', label: 'Slate1', phoneNumber: '11111111', age: '30' },\\n  { value: 'silver1', label: 'Silver1', phoneNumber: '22222222', age: '40' }\\n]\\nconst selectedOptions = [\\n  { value: 'ocean', label: 'Ocean', phoneNumber: '1234', age: '10' },\\n  { value: 'blue', label: 'Blue', phoneNumber: '455556', age: '12' },\\n  { value: 'purple', label: 'Purple', phoneNumber: '67778', age: '13' },\\n  { value: 'red', label: 'Red', phoneNumber: '89990', age: '14' },\\n  { value: 'forest', label: 'Forest', phoneNumber: '0000000', age: '20' }\\n  // { value: 'slate', label: 'Slate', phoneNumber: '11111111', age: '30' }\\n]\\n\\nexport const withTextField = () => (\\n  <ThemeWrapper>\\n    <Box p='1em'>\\n      <MultiSelect\\n        id={text('id', 'Colors')}\\n        width={text('width', '300px')}\\n        options={object('Multi Select Options', options)}\\n        onChange={action('Multi Select changed')}\\n        style={object('styles', {\\n          position: 'absolute',\\n          top: 'auto',\\n          left: 'auto',\\n          marginTop: '-18px'\\n        })}\\n        isLoading={boolean('isLoading', false)}\\n        isNoOption={boolean('isNoOption', false)}\\n        menuOpen={boolean('menuOpen', false)}\\n        selected={object('selected', selectedOptions)}\\n        allowSelectAll={boolean('allowSelectAll', false)}\\n        maximumSelected={number('maximum Selected', 5)}\\n        defaultSelected={object('default Selected', selectedOptions)}\\n        searchableKeys={array('Searchable Keys', ['label', 'phoneNumber'])}\\n        resultLimit={number('resultLimit', 10)}\\n        onInputChange={action('on Input changed')}\\n      >\\n        {({ optionSelected, isMenuOpen, openMenu }: tMultiSelectChildren) => (\\n          <TextInput\\n            id='id'\\n            label='Color'\\n            labelColor='black'\\n            placeholder='Select ... '\\n            error={boolean('Text Input error', false)}\\n            errorMessage={text('error Message', 'Its an error Message')}\\n            disabled={boolean('disabled', false)}\\n            onClick={() => {\\n              openMenu(!isMenuOpen)\\n              action('MultiSelect open/closed')(isMenuOpen)\\n            }}\\n            value={\\n              optionSelected && optionSelected?.length > 0\\n                ? optionSelected?.length + ' Selected'\\n                : ''\\n            }\\n            read-only\\n          />\\n        )}\\n      </MultiSelect>\\n    </Box>\\n  </ThemeWrapper>\\n)\\n\",\"locationsMap\":{}},\n    props: {\n      propTablesExclude: [Box, ThemeWrapper, TextInput]\n    }\n  },}\n\nconst options = [\n  { value: 'ocean', label: 'Ocean', phoneNumber: '1234', age: '10' },\n  { value: 'blue', label: 'Blue', phoneNumber: '455556', age: '12' },\n  { value: 'purple', label: 'Purple', phoneNumber: '67778', age: '13' },\n  { value: 'red', label: 'Red', phoneNumber: '89990', age: '14' },\n  { value: 'orange', label: 'Orange', phoneNumber: '001323', age: '15' },\n  { value: 'yellow', label: 'Yellow', phoneNumber: '99243452', age: '16' },\n  { value: 'green', label: 'Green', phoneNumber: '120009', age: '18' },\n  { value: 'forest', label: 'Forest', phoneNumber: '0000000', age: '20' },\n  { value: 'slate', label: 'Slate', phoneNumber: '11111111', age: '30' },\n  { value: 'silver', label: 'Silver', phoneNumber: '22222222', age: '40' },\n  { value: 'green1', label: 'Green1', phoneNumber: '120009', age: '18' },\n  { value: 'forest1', label: 'Forest1', phoneNumber: '0000000', age: '20' },\n  { value: 'slate1', label: 'Slate1', phoneNumber: '11111111', age: '30' },\n  { value: 'silver1', label: 'Silver1', phoneNumber: '22222222', age: '40' }\n]\nconst selectedOptions = [\n  { value: 'ocean', label: 'Ocean', phoneNumber: '1234', age: '10' },\n  { value: 'blue', label: 'Blue', phoneNumber: '455556', age: '12' },\n  { value: 'purple', label: 'Purple', phoneNumber: '67778', age: '13' },\n  { value: 'red', label: 'Red', phoneNumber: '89990', age: '14' },\n  { value: 'forest', label: 'Forest', phoneNumber: '0000000', age: '20' }\n  // { value: 'slate', label: 'Slate', phoneNumber: '11111111', age: '30' }\n]\n\nexport const withTextField = addSourceDecorator(addSourceDecorator(addSourceDecorator(() => (\n  <ThemeWrapper>\n    <Box p='1em'>\n      <MultiSelect\n        id={text('id', 'Colors')}\n        width={text('width', '300px')}\n        options={object('Multi Select Options', options)}\n        onChange={action('Multi Select changed')}\n        style={object('styles', {\n          position: 'absolute',\n          top: 'auto',\n          left: 'auto',\n          marginTop: '-18px'\n        })}\n        isLoading={boolean('isLoading', false)}\n        isNoOption={boolean('isNoOption', false)}\n        menuOpen={boolean('menuOpen', false)}\n        selected={object('selected', selectedOptions)}\n        allowSelectAll={boolean('allowSelectAll', false)}\n        maximumSelected={number('maximum Selected', 5)}\n        defaultSelected={object('default Selected', selectedOptions)}\n        searchableKeys={array('Searchable Keys', ['label', 'phoneNumber'])}\n        resultLimit={number('resultLimit', 10)}\n        onInputChange={action('on Input changed')}\n      >\n        {({ optionSelected, isMenuOpen, openMenu }: tMultiSelectChildren) => (\n          <TextInput\n            id='id'\n            label='Color'\n            labelColor='black'\n            placeholder='Select ... '\n            error={boolean('Text Input error', false)}\n            errorMessage={text('error Message', 'Its an error Message')}\n            disabled={boolean('disabled', false)}\n            onClick={() => {\n              openMenu(!isMenuOpen)\n              action('MultiSelect open/closed')(isMenuOpen)\n            }}\n            value={\n              optionSelected && optionSelected?.length > 0\n                ? optionSelected?.length + ' Selected'\n                : ''\n            }\n            read-only\n          />\n        )}\n      </MultiSelect>\n    </Box>\n  </ThemeWrapper>\n), {__STORY__, __ADDS_MAP__,__MAIN_FILE_LOCATION__,__MODULE_DEPENDENCIES__,__LOCAL_DEPENDENCIES__,__SOURCE_PREFIX__,__IDS_TO_FRAMEWORKS__}), {__STORY__, __ADDS_MAP__,__MAIN_FILE_LOCATION__,__MODULE_DEPENDENCIES__,__LOCAL_DEPENDENCIES__,__SOURCE_PREFIX__,__IDS_TO_FRAMEWORKS__}), {__STORY__, __ADDS_MAP__,__MAIN_FILE_LOCATION__,__MODULE_DEPENDENCIES__,__LOCAL_DEPENDENCIES__,__SOURCE_PREFIX__,__IDS_TO_FRAMEWORKS__});"],"sourceRoot":""},"metadata":{},"sourceType":"module"}