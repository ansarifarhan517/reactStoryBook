{"ast":null,"code":"import _objectSpread from \"/Users/farhanansari/Code/ui-library/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/objectSpread2\";\nimport _slicedToArray from \"/Users/farhanansari/Code/ui-library/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/slicedToArray\";\n\nvar _this = this,\n    _jsxFileName = \"/Users/farhanansari/Code/ui-library/src/components/molecules/FilePreviewer/index.tsx\";\n\nimport React, { useState, useEffect } from 'react';\nimport { FilePreviewerContainer, FileName, Preview, PaginationContainer, ThumbnailsContainer, Thumbnail } from './FilePreviewer.styles';\nimport IconButton from '../../atoms/IconButton';\nimport FontIcon from '../../atoms/FontIcon';\nimport Box from '../../atoms/Box';\n\nvar getExtension = function getExtension(filename) {\n  return filename.substring(filename.lastIndexOf('.') + 1, filename.length);\n};\n\nvar isImageExtension = function isImageExtension(extension) {\n  var flag = false;\n\n  switch (extension === null || extension === void 0 ? void 0 : extension.toLowerCase()) {\n    case 'png':\n    case 'jpg':\n    case 'jpeg':\n    case 'bmp':\n      flag = true;\n      break;\n  }\n\n  return flag;\n};\n\nvar FilePreviewer = function FilePreviewer(_ref) {\n  var _ref$files = _ref.files,\n      files = _ref$files === void 0 ? [] : _ref$files,\n      _ref$pageIndex = _ref.pageIndex,\n      pageIndex = _ref$pageIndex === void 0 ? 0 : _ref$pageIndex,\n      _ref$onPageChange = _ref.onPageChange,\n      onPageChange = _ref$onPageChange === void 0 ? function () {} : _ref$onPageChange;\n\n  var _useState = useState(pageIndex),\n      _useState2 = _slicedToArray(_useState, 2),\n      currentPage = _useState2[0],\n      setCurrentPage = _useState2[1];\n\n  var _useState3 = useState(files),\n      _useState4 = _slicedToArray(_useState3, 2),\n      _files = _useState4[0],\n      _setFiles = _useState4[1];\n\n  useEffect(function () {\n    _setFiles(files.map(function (f) {\n      return _objectSpread(_objectSpread({}, f), {}, {\n        extension: getExtension(f.filename)\n      });\n    }));\n  }, [files]);\n  useEffect(function () {\n    setCurrentPage(pageIndex);\n  }, [pageIndex]);\n\n  var handlePageChange = function handlePageChange(index) {\n    setCurrentPage(index);\n    onPageChange(index);\n  };\n\n  return /*#__PURE__*/React.createElement(FilePreviewerContainer, {\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 56,\n      columnNumber: 5\n    }\n  }, /*#__PURE__*/React.createElement(FileName, {\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 57,\n      columnNumber: 7\n    }\n  }, _files[currentPage].filename), /*#__PURE__*/React.createElement(Preview, {\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 58,\n      columnNumber: 7\n    }\n  }, isImageExtension(_files[currentPage].extension) ? /*#__PURE__*/React.createElement(\"img\", {\n    src: _files[currentPage].url,\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 60,\n      columnNumber: 11\n    }\n  }) : /*#__PURE__*/React.createElement(\"div\", {\n    style: {\n      textAlign: 'center'\n    },\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 62,\n      columnNumber: 11\n    }\n  }, /*#__PURE__*/React.createElement(FontIcon, {\n    variant: \"file-empty\",\n    size: 60,\n    color: \"grey.500\",\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 63,\n      columnNumber: 13\n    }\n  }), /*#__PURE__*/React.createElement(Box, {\n    mt: \"15px\",\n    color: \"grey.500\",\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 64,\n      columnNumber: 13\n    }\n  }, \"No Preview Available\"))), /*#__PURE__*/React.createElement(PaginationContainer, {\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 70,\n      columnNumber: 7\n    }\n  }, /*#__PURE__*/React.createElement(IconButton, {\n    iconSize: 14,\n    iconVariant: \"angle-left\",\n    onlyIcon: true,\n    color: \"grey.A1000\",\n    onClick: function onClick() {\n      return handlePageChange(currentPage - 1);\n    },\n    disabled: currentPage === 0,\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 71,\n      columnNumber: 9\n    }\n  }), /*#__PURE__*/React.createElement(\"div\", {\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 79,\n      columnNumber: 9\n    }\n  }, \"\".concat(currentPage + 1, \" of \").concat(_files.length)), /*#__PURE__*/React.createElement(IconButton, {\n    iconSize: 14,\n    iconVariant: \"angle-right\",\n    onlyIcon: true,\n    color: \"grey.A1000\",\n    onClick: function onClick() {\n      return handlePageChange(currentPage + 1);\n    },\n    disabled: currentPage === _files.length - 1,\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 80,\n      columnNumber: 9\n    }\n  })), /*#__PURE__*/React.createElement(ThumbnailsContainer, {\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 89,\n      columnNumber: 7\n    }\n  }, _files.map(function (file, i) {\n    return /*#__PURE__*/React.createElement(Thumbnail, {\n      selected: i === currentPage,\n      key: file.id,\n      onClick: function onClick() {\n        return handlePageChange(i);\n      },\n      __self: _this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 91,\n        columnNumber: 11\n      }\n    }, isImageExtension(file.extension) ? /*#__PURE__*/React.createElement(\"img\", {\n      src: file.url,\n      __self: _this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 97,\n        columnNumber: 15\n      }\n    }) : /*#__PURE__*/React.createElement(FontIcon, {\n      variant: \"file-empty\",\n      size: 11,\n      color: \"grey.500\",\n      __self: _this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 99,\n        columnNumber: 15\n      }\n    }));\n  })));\n};\n\nexport default FilePreviewer;","map":{"version":3,"sources":["/Users/farhanansari/Code/ui-library/src/components/molecules/FilePreviewer/index.tsx"],"names":["React","useState","useEffect","FilePreviewerContainer","FileName","Preview","PaginationContainer","ThumbnailsContainer","Thumbnail","IconButton","FontIcon","Box","getExtension","filename","substring","lastIndexOf","length","isImageExtension","extension","flag","toLowerCase","FilePreviewer","files","pageIndex","onPageChange","currentPage","setCurrentPage","_files","_setFiles","map","f","handlePageChange","index","url","textAlign","file","i","id"],"mappings":"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","sourcesContent":["import React, { useState, useEffect } from 'react'\nimport {\n  FilePreviewerContainer,\n  FileName,\n  Preview,\n  PaginationContainer,\n  ThumbnailsContainer,\n  Thumbnail\n} from './FilePreviewer.styles'\nimport IconButton from '../../atoms/IconButton'\nimport {\n  IFilePreviewObject,\n  IFilePreviewerProps\n} from './FilePreviewer.interfaces'\nimport FontIcon from '../../atoms/FontIcon'\nimport Box from '../../atoms/Box'\n\nconst getExtension = (filename: string): string => {\n  return filename.substring(filename.lastIndexOf('.') + 1, filename.length)\n}\n\nconst isImageExtension = (extension?: string): boolean => {\n  let flag = false\n  switch (extension?.toLowerCase()) {\n    case 'png':\n    case 'jpg':\n    case 'jpeg':\n    case 'bmp':\n      flag = true\n      break\n  }\n\n  return flag\n}\nconst FilePreviewer = ({\n  files = [],\n  pageIndex = 0,\n  onPageChange = () => {}\n}: IFilePreviewerProps) => {\n  const [currentPage, setCurrentPage] = useState<number>(pageIndex)\n  const [_files, _setFiles] = useState<IFilePreviewObject[]>(files)\n\n  useEffect(() => {\n    _setFiles(files.map((f) => ({ ...f, extension: getExtension(f.filename) })))\n  }, [files])\n\n  useEffect(() => {\n    setCurrentPage(pageIndex)\n  }, [pageIndex])\n\n  const handlePageChange = (index: number) => {\n    setCurrentPage(index)\n    onPageChange(index)\n  }\n  return (\n    <FilePreviewerContainer>\n      <FileName>{_files[currentPage].filename}</FileName>\n      <Preview>\n        {isImageExtension(_files[currentPage].extension) ? (\n          <img src={_files[currentPage].url} />\n        ) : (\n          <div style={{ textAlign: 'center' }}>\n            <FontIcon variant='file-empty' size={60} color='grey.500' />\n            <Box mt='15px' color='grey.500'>\n              No Preview Available\n            </Box>\n          </div>\n        )}\n      </Preview>\n      <PaginationContainer>\n        <IconButton\n          iconSize={14}\n          iconVariant='angle-left'\n          onlyIcon\n          color='grey.A1000'\n          onClick={() => handlePageChange(currentPage - 1)}\n          disabled={currentPage === 0}\n        />\n        <div>{`${currentPage + 1} of ${_files.length}`}</div>\n        <IconButton\n          iconSize={14}\n          iconVariant='angle-right'\n          onlyIcon\n          color='grey.A1000'\n          onClick={() => handlePageChange(currentPage + 1)}\n          disabled={currentPage === _files.length - 1}\n        />\n      </PaginationContainer>\n      <ThumbnailsContainer>\n        {_files.map((file, i) => (\n          <Thumbnail\n            selected={i === currentPage}\n            key={file.id}\n            onClick={() => handlePageChange(i)}\n          >\n            {isImageExtension(file.extension) ? (\n              <img src={file.url} />\n            ) : (\n              <FontIcon variant='file-empty' size={11} color='grey.500' />\n            )}\n          </Thumbnail>\n        ))}\n      </ThumbnailsContainer>\n    </FilePreviewerContainer>\n  )\n}\n\nexport default FilePreviewer\n"]},"metadata":{},"sourceType":"module"}