{"ast":null,"code":"import PropTypes from 'prop-types';\nexport var marginPropTypes = {\n  m: PropTypes.string,\n  mt: PropTypes.string,\n  mb: PropTypes.string,\n  ml: PropTypes.string,\n  mr: PropTypes.string,\n  mx: PropTypes.string,\n  my: PropTypes.string\n};\nexport var paddingPropTypes = {\n  p: PropTypes.string,\n  pt: PropTypes.string,\n  pb: PropTypes.string,\n  pl: PropTypes.string,\n  pr: PropTypes.string,\n  px: PropTypes.string,\n  py: PropTypes.string\n};\nexport var borderPropTypes = {\n  border: PropTypes.number,\n  borderTop: PropTypes.number,\n  borderBottom: PropTypes.number,\n  borderRight: PropTypes.number,\n  borderLeft: PropTypes.number,\n  borderRadius: PropTypes.oneOfType([PropTypes.string, PropTypes.number]),\n  borderColor: PropTypes.string\n};\nexport var flexPropTypes = {\n  flexDirection: PropTypes.oneOf(['column', 'row', 'column-reverse', 'row-reverse']),\n  justifyContent: PropTypes.oneOf(['flex-start', 'flex-end', 'space-between', 'space-evenly', 'center', 'space-around']),\n  alignItems: PropTypes.oneOf(['center', 'flex-start', 'flex-end', 'stretch']),\n  flexGrow: PropTypes.number,\n  flexShrink: PropTypes.number\n};\nexport var colorPropTypes = {\n  color: PropTypes.string\n};\nexport var bgColorPropTypes = {\n  bgColor: PropTypes.string\n};","map":{"version":3,"sources":["/Users/farhanansari/Desktop/CODE/PrxProject/untitled folder/reactStoryBook/src/utilities/types.ts"],"names":["PropTypes","marginPropTypes","m","string","mt","mb","ml","mr","mx","my","paddingPropTypes","p","pt","pb","pl","pr","px","py","borderPropTypes","border","number","borderTop","borderBottom","borderRight","borderLeft","borderRadius","oneOfType","borderColor","flexPropTypes","flexDirection","oneOf","justifyContent","alignItems","flexGrow","flexShrink","colorPropTypes","color","bgColorPropTypes","bgColor"],"mappings":"AAAA,OAAOA,SAAP,MAAsB,YAAtB;AAuCA,OAAO,IAAMC,eAAe,GAAG;AAC7BC,EAAAA,CAAC,EAAEF,SAAS,CAACG,MADgB;AAE7BC,EAAAA,EAAE,EAAEJ,SAAS,CAACG,MAFe;AAG7BE,EAAAA,EAAE,EAAEL,SAAS,CAACG,MAHe;AAI7BG,EAAAA,EAAE,EAAEN,SAAS,CAACG,MAJe;AAK7BI,EAAAA,EAAE,EAAEP,SAAS,CAACG,MALe;AAM7BK,EAAAA,EAAE,EAAER,SAAS,CAACG,MANe;AAO7BM,EAAAA,EAAE,EAAET,SAAS,CAACG;AAPe,CAAxB;AA0BP,OAAO,IAAMO,gBAAgB,GAAG;AAC9BC,EAAAA,CAAC,EAAEX,SAAS,CAACG,MADiB;AAE9BS,EAAAA,EAAE,EAAEZ,SAAS,CAACG,MAFgB;AAG9BU,EAAAA,EAAE,EAAEb,SAAS,CAACG,MAHgB;AAI9BW,EAAAA,EAAE,EAAEd,SAAS,CAACG,MAJgB;AAK9BY,EAAAA,EAAE,EAAEf,SAAS,CAACG,MALgB;AAM9Ba,EAAAA,EAAE,EAAEhB,SAAS,CAACG,MANgB;AAO9Bc,EAAAA,EAAE,EAAEjB,SAAS,CAACG;AAPgB,CAAzB;AAoBP,OAAO,IAAMe,eAAe,GAAG;AAC7BC,EAAAA,MAAM,EAAEnB,SAAS,CAACoB,MADW;AAE7BC,EAAAA,SAAS,EAAErB,SAAS,CAACoB,MAFQ;AAG7BE,EAAAA,YAAY,EAAEtB,SAAS,CAACoB,MAHK;AAI7BG,EAAAA,WAAW,EAAEvB,SAAS,CAACoB,MAJM;AAK7BI,EAAAA,UAAU,EAAExB,SAAS,CAACoB,MALO;AAM7BK,EAAAA,YAAY,EAAEzB,SAAS,CAAC0B,SAAV,CAAoB,CAAC1B,SAAS,CAACG,MAAX,EAAmBH,SAAS,CAACoB,MAA7B,CAApB,CANe;AAO7BO,EAAAA,WAAW,EAAE3B,SAAS,CAACG;AAPM,CAAxB;AAwBP,OAAO,IAAMyB,aAAa,GAAG;AAC3BC,EAAAA,aAAa,EAAE7B,SAAS,CAAC8B,KAAV,CAAgC,CAC7C,QAD6C,EAE7C,KAF6C,EAG7C,gBAH6C,EAI7C,aAJ6C,CAAhC,CADY;AAO3BC,EAAAA,cAAc,EAAE/B,SAAS,CAAC8B,KAAV,CAAiC,CAC/C,YAD+C,EAE/C,UAF+C,EAG/C,eAH+C,EAI/C,cAJ+C,EAK/C,QAL+C,EAM/C,cAN+C,CAAjC,CAPW;AAe3BE,EAAAA,UAAU,EAAEhC,SAAS,CAAC8B,KAAV,CAA6B,CACvC,QADuC,EAEvC,YAFuC,EAGvC,UAHuC,EAIvC,SAJuC,CAA7B,CAfe;AAqB3BG,EAAAA,QAAQ,EAAEjC,SAAS,CAACoB,MArBO;AAsB3Bc,EAAAA,UAAU,EAAElC,SAAS,CAACoB;AAtBK,CAAtB;AA6BP,OAAO,IAAMe,cAAc,GAAG;AAC5BC,EAAAA,KAAK,EAAEpC,SAAS,CAACG;AADW,CAAvB;AAQP,OAAO,IAAMkC,gBAAgB,GAAG;AAC9BC,EAAAA,OAAO,EAAEtC,SAAS,CAACG;AADW,CAAzB","sourcesContent":["import PropTypes from 'prop-types'\n\nexport type tPlacement = 'start' | 'center' | 'end'\nexport type tBreakpoints = 'xs' | 'sm' | 'md' | 'lg' | 'xl'\nexport type tSizes = 'sm' | 'md' | 'lg'\nexport type tExtraSizes = 'xs' | 'sm' | 'md' | 'lg' | 'xl'\nexport type tDisplay =\n  | 'block'\n  | 'inline-block'\n  | 'none'\n  | 'flex'\n  | 'inline-flex'\n\nexport type tFlexDirection = 'column' | 'row' | 'column-reverse' | 'row-reverse'\nexport type tJustifyContent =\n  | 'flex-start'\n  | 'flex-end'\n  | 'space-between'\n  | 'space-evenly'\n  | 'center'\n  | 'space-around'\nexport type tAlignItems = 'center' | 'flex-start' | 'flex-end' | 'stretch'\nexport interface IMarginProps {\n  /** Margin */\n  m?: string\n  /** Margin Top */\n  mt?: string\n  /** Margin Bottom */\n  mb?: string\n  /** Margin Left */\n  ml?: string\n  /** Margin Right */\n  mr?: string\n  /** Margin Horizontally */\n  mx?: string\n  /** Margin Vertically */\n  my?: string\n}\n\nexport const marginPropTypes = {\n  m: PropTypes.string,\n  mt: PropTypes.string,\n  mb: PropTypes.string,\n  ml: PropTypes.string,\n  mr: PropTypes.string,\n  mx: PropTypes.string,\n  my: PropTypes.string\n}\n\nexport interface PaddingProps {\n  /** Padding */\n  p?: string\n  /** Padding Top */\n  pt?: string\n  /** Padding Bottom */\n  pb?: string\n  /** Padding Left */\n  pl?: string\n  /** Padding Right */\n  pr?: string\n  /** Padding Horizontally */\n  px?: string\n  /** Padding Vertically */\n  py?: string\n}\nexport const paddingPropTypes = {\n  p: PropTypes.string,\n  pt: PropTypes.string,\n  pb: PropTypes.string,\n  pl: PropTypes.string,\n  pr: PropTypes.string,\n  px: PropTypes.string,\n  py: PropTypes.string\n}\n\nexport interface IBorderProps {\n  border?: number\n  borderTop?: number\n  borderBottom?: number\n  borderRight?: number\n  borderLeft?: number\n  borderRadius?: string | number\n  borderColor?: string\n}\n\nexport const borderPropTypes = {\n  border: PropTypes.number,\n  borderTop: PropTypes.number,\n  borderBottom: PropTypes.number,\n  borderRight: PropTypes.number,\n  borderLeft: PropTypes.number,\n  borderRadius: PropTypes.oneOfType([PropTypes.string, PropTypes.number]),\n  borderColor: PropTypes.string\n}\n\nexport interface IFlexProps {\n  flexDirection?: 'column' | 'row' | 'column-reverse' | 'row-reverse'\n  justifyContent?:\n    | 'flex-start'\n    | 'flex-end'\n    | 'space-between'\n    | 'space-evenly'\n    | 'center'\n    | 'space-around'\n  alignItems?: 'center' | 'flex-start' | 'flex-end' | 'stretch'\n  flexGrow?: number\n  flexShrink?: number\n}\n\nexport const flexPropTypes = {\n  flexDirection: PropTypes.oneOf<tFlexDirection>([\n    'column',\n    'row',\n    'column-reverse',\n    'row-reverse'\n  ]),\n  justifyContent: PropTypes.oneOf<tJustifyContent>([\n    'flex-start',\n    'flex-end',\n    'space-between',\n    'space-evenly',\n    'center',\n    'space-around'\n  ]),\n  alignItems: PropTypes.oneOf<tAlignItems>([\n    'center',\n    'flex-start',\n    'flex-end',\n    'stretch'\n  ]),\n  flexGrow: PropTypes.number,\n  flexShrink: PropTypes.number\n}\n\nexport interface IColorProps {\n  color?: string\n}\n\nexport const colorPropTypes = {\n  color: PropTypes.string\n}\n\nexport interface IBgColorProps {\n  bgColor?: string\n}\n\nexport const bgColorPropTypes = {\n  bgColor: PropTypes.string\n}\n\nexport interface ISpacingPropsTypes {\n  horizontalSpacing?: number | string\n  verticalSpacing?: number | string\n}\n"]},"metadata":{},"sourceType":"module"}