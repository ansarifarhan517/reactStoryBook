{"ast":null,"code":"import _defineProperty from \"/Users/farhanansari/Code/ui-library/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/defineProperty\";\nimport _objectSpread from \"/Users/farhanansari/Code/ui-library/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/objectSpread2\";\nimport _slicedToArray from \"/Users/farhanansari/Code/ui-library/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/slicedToArray\";\n\nvar _this = this,\n    _jsxFileName = \"/Users/farhanansari/Code/ui-library/src/components/atoms/Map/layers/LeafletGeocodingLayer.tsx\";\n\n// The marker layer which will display all the markers and marker clusters\nimport React, { useEffect, useState } from 'react';\nimport { Marker, useLeaflet } from 'react-leaflet';\nimport LL from 'leaflet'; // import markerIcons from '../dummyData/MarkerIcon.sampleData'\n\nimport imgUrl from \"../../../../assets/icons/Bigmarker_red.svg\";\nimport { GeocodingFieldsWrapper, GeocodingField } from './../utils/LocationSearch/StyledLocationSearch';\nimport IconButton from '../../IconButton';\nimport Box from '../../Box';\n\n// The layer with actual markers\nvar LeafletGeocodingLayer = function LeafletGeocodingLayer(props) {\n  var _geocoding$position, _geocoding$position2, _props$geocoding2, _props$geocoding3, _props$geocoding4, _props$geocoding5, _geocoding$customFiel4, _geocoding$customFiel5, _props$geocoding6, _props$geocoding6$pos, _props$geocoding7, _props$geocoding7$pos, _props$geocoding8, _props$geocoding9;\n\n  var iconsRef = props.iconsRef,\n      geocoding = props.geocoding,\n      focusSearchPlace = props.focusSearchPlace,\n      setIsMarkerDragged = props.setIsMarkerDragged,\n      setIsMapSearched = props.setIsMapSearched,\n      theMap = props.theMap,\n      _props$zoomLGC = props.zoomLGC,\n      zoomLGC = _props$zoomLGC === void 0 ? 14 : _props$zoomLGC,\n      getLatLong = props.getLatLong;\n\n  var _useState = useState(geocoding === null || geocoding === void 0 ? void 0 : (_geocoding$position = geocoding.position) === null || _geocoding$position === void 0 ? void 0 : _geocoding$position[0]),\n      _useState2 = _slicedToArray(_useState, 2),\n      lat = _useState2[0],\n      setLat = _useState2[1];\n\n  var _useState3 = useState(geocoding === null || geocoding === void 0 ? void 0 : (_geocoding$position2 = geocoding.position) === null || _geocoding$position2 === void 0 ? void 0 : _geocoding$position2[1]),\n      _useState4 = _slicedToArray(_useState3, 2),\n      _long = _useState4[0],\n      setLong = _useState4[1];\n\n  var _useState5 = useState({}),\n      _useState6 = _slicedToArray(_useState5, 2),\n      customFieldValues = _useState6[0],\n      setCustomFieldValues = _useState6[1];\n\n  var _useState7 = useState(false),\n      _useState8 = _slicedToArray(_useState7, 2),\n      isLocationChanged = _useState8[0],\n      setIsLocationChanged = _useState8[1];\n\n  var _useState9 = useState(false),\n      _useState10 = _slicedToArray(_useState9, 2),\n      latError = _useState10[0],\n      setLatError = _useState10[1];\n\n  var _useState11 = useState(false),\n      _useState12 = _slicedToArray(_useState11, 2),\n      longError = _useState12[0],\n      setLongError = _useState12[1];\n\n  var oldLatLong = React.useMemo(function () {\n    var _geocoding$position3, _geocoding$position4;\n\n    return {\n      lat: geocoding === null || geocoding === void 0 ? void 0 : (_geocoding$position3 = geocoding.position) === null || _geocoding$position3 === void 0 ? void 0 : _geocoding$position3[0],\n      \"long\": geocoding === null || geocoding === void 0 ? void 0 : (_geocoding$position4 = geocoding.position) === null || _geocoding$position4 === void 0 ? void 0 : _geocoding$position4[1]\n    };\n  }, []);\n  var oldSearchText = React.useMemo(function () {\n    return geocoding === null || geocoding === void 0 ? void 0 : geocoding.searchText;\n  }, []);\n\n  var _useLeaflet = useLeaflet(),\n      map = _useLeaflet.map;\n\n  var markerIcon = LL.icon({\n    iconUrl: imgUrl\n  });\n\n  if (iconsRef === null || iconsRef === void 0 ? void 0 : iconsRef.locationSearch) {\n    markerIcon = new LL.DivIcon(iconsRef === null || iconsRef === void 0 ? void 0 : iconsRef.locationSearch);\n  }\n\n  useEffect(function () {\n    var _geocoding$position5, _geocoding$position6, _geocoding$position7, _geocoding$position8;\n\n    // if location get changed by search/dragdrop or geocoding set this flag true and show save and reset\n    if (lat !== (geocoding === null || geocoding === void 0 ? void 0 : (_geocoding$position5 = geocoding.position) === null || _geocoding$position5 === void 0 ? void 0 : _geocoding$position5[0]) && _long !== (geocoding === null || geocoding === void 0 ? void 0 : (_geocoding$position6 = geocoding.position) === null || _geocoding$position6 === void 0 ? void 0 : _geocoding$position6[1])) {\n      setIsLocationChanged(true);\n    }\n\n    setLat(geocoding === null || geocoding === void 0 ? void 0 : (_geocoding$position7 = geocoding.position) === null || _geocoding$position7 === void 0 ? void 0 : _geocoding$position7[0]);\n    setLong(geocoding === null || geocoding === void 0 ? void 0 : (_geocoding$position8 = geocoding.position) === null || _geocoding$position8 === void 0 ? void 0 : _geocoding$position8[1]);\n  }, [geocoding.position]);\n  useEffect(function () {\n    if ((geocoding === null || geocoding === void 0 ? void 0 : geocoding.searchText) && (geocoding === null || geocoding === void 0 ? void 0 : geocoding.searchText.length) > 0 || geocoding.position) {\n      if (latError) {\n        setLatError(false);\n      }\n\n      if (longError) {\n        setLongError(false);\n      }\n    }\n  }, [geocoding === null || geocoding === void 0 ? void 0 : geocoding.searchText, geocoding.position]);\n  useEffect(function () {\n    if (geocoding === null || geocoding === void 0 ? void 0 : geocoding.setErrorGeocoding) {\n      geocoding === null || geocoding === void 0 ? void 0 : geocoding.setErrorGeocoding({\n        lat: latError,\n        lng: longError\n      });\n    }\n  }, [latError, longError]);\n  useEffect(function () {\n    var _geocoding$customFiel;\n\n    if ((geocoding === null || geocoding === void 0 ? void 0 : geocoding.customFields) && (geocoding === null || geocoding === void 0 ? void 0 : (_geocoding$customFiel = geocoding.customFields) === null || _geocoding$customFiel === void 0 ? void 0 : _geocoding$customFiel.length) > 0) {\n      var updatedFormValues = geocoding.customFields.reduce(function (result, field) {\n        return _objectSpread(_objectSpread({}, result), {}, _defineProperty({}, field.name, field.value));\n      }, {});\n      setCustomFieldValues(_objectSpread({}, updatedFormValues));\n\n      if (latError) {\n        var _geocoding$position9;\n\n        setLatError(false);\n        setLat(geocoding === null || geocoding === void 0 ? void 0 : (_geocoding$position9 = geocoding.position) === null || _geocoding$position9 === void 0 ? void 0 : _geocoding$position9[0]);\n      }\n\n      if (longError) {\n        var _geocoding$position10;\n\n        setLongError(false);\n        setLong(geocoding === null || geocoding === void 0 ? void 0 : (_geocoding$position10 = geocoding.position) === null || _geocoding$position10 === void 0 ? void 0 : _geocoding$position10[1]);\n      }\n    }\n  }, [geocoding.customFields]);\n  useEffect(function () {\n    // if serach text in search box and focusSearchPlace is true then set map view directly\n    // we are not using flytoBound -reason is map bound giving(includes marker while caluculating bound) resulting not focusing on search place\n    if (map && geocoding.searchText === '' && (geocoding === null || geocoding === void 0 ? void 0 : geocoding.position)) {\n      map.setView(geocoding === null || geocoding === void 0 ? void 0 : geocoding.position, zoomLGC, {\n        duration: 0.5,\n        animate: true\n      });\n    } else if (map && geocoding.searchText && focusSearchPlace) {\n      map.setView(geocoding === null || geocoding === void 0 ? void 0 : geocoding.position, zoomLGC, {\n        duration: 0.5,\n        animate: true\n      });\n    } else {\n      // if nothing in search box , whatever map bound giving(includes marker while caluculating bound) just fly on that.\n      var newMapBounds = map === null || map === void 0 ? void 0 : map.getBounds();\n\n      if (map && newMapBounds && Object.keys(newMapBounds).length && !(geocoding === null || geocoding === void 0 ? void 0 : geocoding.disableDefaultFlyToBounds)) {\n        map.flyToBounds(newMapBounds, {\n          maxZoom: 14,\n          duration: 0.5,\n          padding: LL.point(100, 100)\n        });\n      }\n    }\n  }, [map, focusSearchPlace, geocoding === null || geocoding === void 0 ? void 0 : geocoding.position]);\n  useEffect(function () {\n    var _geocoding$position11, _geocoding$position12;\n\n    if (!geocoding.shouldUpdateShape || latError || longError) {\n      return;\n    }\n\n    if (lat && lat !== (geocoding === null || geocoding === void 0 ? void 0 : (_geocoding$position11 = geocoding.position) === null || _geocoding$position11 === void 0 ? void 0 : _geocoding$position11[0]) || _long && _long !== (geocoding === null || geocoding === void 0 ? void 0 : (_geocoding$position12 = geocoding.position) === null || _geocoding$position12 === void 0 ? void 0 : _geocoding$position12[1])) {\n      setIsMarkerDragged(true);\n      setIsMapSearched(false);\n      props.onLocationSelect([Number(lat), Number(_long)], '', true, null, zoomLGC, customFieldValues === null || customFieldValues === void 0 ? void 0 : customFieldValues.radius);\n    }\n  }, [lat, _long, latError, longError]);\n  useEffect(function () {\n    var _geocoding$customFiel2, _geocoding$customFiel3;\n\n    if (!geocoding.shouldUpdateShape || latError || longError) {\n      return;\n    }\n\n    var radius = geocoding === null || geocoding === void 0 ? void 0 : (_geocoding$customFiel2 = geocoding.customFields) === null || _geocoding$customFiel2 === void 0 ? void 0 : (_geocoding$customFiel3 = _geocoding$customFiel2.find(function (obj) {\n      return obj.name === \"radius\";\n    })) === null || _geocoding$customFiel3 === void 0 ? void 0 : _geocoding$customFiel3.value;\n\n    if ((customFieldValues === null || customFieldValues === void 0 ? void 0 : customFieldValues.radius) && (customFieldValues === null || customFieldValues === void 0 ? void 0 : customFieldValues.radius) !== radius) {\n      props.onLocationSelect([Number(lat), Number(_long)], '', true, null, 0, customFieldValues === null || customFieldValues === void 0 ? void 0 : customFieldValues.radius);\n    } else if (typeof (customFieldValues === null || customFieldValues === void 0 ? void 0 : customFieldValues.radius) !== \"undefined\" && isNaN(customFieldValues === null || customFieldValues === void 0 ? void 0 : customFieldValues.radius)) {\n      props.onLocationSelect([Number(lat), Number(_long)], '', true, null, 0, 0);\n    }\n  }, [customFieldValues === null || customFieldValues === void 0 ? void 0 : customFieldValues.radius, latError, longError]);\n\n  var markerDragend = function markerDragend(event) {\n    var _theMap$current;\n\n    var curZoom = theMap === null || theMap === void 0 ? void 0 : (_theMap$current = theMap.current) === null || _theMap$current === void 0 ? void 0 : _theMap$current.leafletElement.getZoom();\n\n    try {\n      var _props$geocoding, _event$target$getLatL3, _event$target$getLatL4;\n\n      if (props.onLocationSelect !== undefined) {\n        var _event$target$getLatL, _event$target$getLatL2;\n\n        setIsMarkerDragged(true);\n        props.onLocationSelect([Number((_event$target$getLatL = event.target.getLatLng()) === null || _event$target$getLatL === void 0 ? void 0 : _event$target$getLatL.lat), Number((_event$target$getLatL2 = event.target.getLatLng()) === null || _event$target$getLatL2 === void 0 ? void 0 : _event$target$getLatL2.lng)], '', true, null, curZoom, customFieldValues === null || customFieldValues === void 0 ? void 0 : customFieldValues.radius);\n      }\n\n      ((_props$geocoding = props.geocoding) === null || _props$geocoding === void 0 ? void 0 : _props$geocoding.onGeocodingDragEnd) && props.geocoding.onGeocodingDragEnd([Number((_event$target$getLatL3 = event.target.getLatLng()) === null || _event$target$getLatL3 === void 0 ? void 0 : _event$target$getLatL3.lat), Number((_event$target$getLatL4 = event.target.getLatLng()) === null || _event$target$getLatL4 === void 0 ? void 0 : _event$target$getLatL4.lng)]);\n    } catch (e) {\n      console.log(e);\n    }\n  };\n\n  var validLatCharsRegex = /^[-+]?([1-8]?\\d(\\.\\d+)?|90(\\.0+)?)$/;\n  var validLongCharsRegex = /^[-+]?((1[0-7]|[1-9])?\\d(\\.\\d+)?|180(\\.0+)?)$/;\n\n  var isValidLatitude = function isValidLatitude(lat) {\n    return validLatCharsRegex.test(lat);\n  };\n\n  var isValidLongitude = function isValidLongitude(lng) {\n    return validLongCharsRegex.test(lng);\n  };\n\n  var onLatChange = function onLatChange(e) {\n    var newLat = parseFloat(e.target.value);\n\n    if (isValidLatitude(newLat)) {\n      setLatError(false);\n    } else {\n      setLatError(true);\n    }\n\n    setLat(newLat);\n    getLatLong && getLatLong([newLat, _long]);\n  }; // whenevr lat long both there on blur,send lat long to location select in map\n  // there is updateGeocoding will trigger position change,\n  // position change will trigger useEffect in Location search and as it dragging phenomenon(not physically writting something in input)\n  // keeping separate state to capture that.So that in Location search on the basis of this key we can decide to show dragged location which coming through api or user written searchtext\n\n\n  var onBlurGeoFields = function onBlurGeoFields() {\n    if (lat && _long && !geocoding.shouldUpdateShape) {\n      setIsMarkerDragged(true); // to tell user i searched it through map drag marker\n\n      setIsMapSearched(false);\n      setTimeout(function () {\n        props.onLocationSelect([Number(lat), Number(_long)], '', true, null, zoomLGC, customFieldValues === null || customFieldValues === void 0 ? void 0 : customFieldValues.radius);\n      }, 500);\n    }\n  };\n\n  var onLongChange = function onLongChange(e) {\n    var newLong = parseFloat(e.target.value);\n\n    if (isValidLongitude(newLong)) {\n      setLongError(false);\n    } else {\n      setLongError(true);\n    }\n\n    setLong(newLong);\n    getLatLong && getLatLong([lat, newLong]);\n  };\n\n  var onReset = function onReset() {\n    setLat(oldLatLong.lat);\n    setLong(oldLatLong[\"long\"]);\n    props.onLocationSelect([oldLatLong === null || oldLatLong === void 0 ? void 0 : oldLatLong.lat, oldLatLong === null || oldLatLong === void 0 ? void 0 : oldLatLong[\"long\"]], oldSearchText, true);\n  };\n\n  var handleCustomFieldsChange = function handleCustomFieldsChange(e) {\n    var _e$target = e.target,\n        name = _e$target.name,\n        value = _e$target.value;\n    setCustomFieldValues(_objectSpread(_objectSpread({}, customFieldValues), {}, _defineProperty({}, name, parseFloat(value))));\n  };\n\n  var onKeyChange = function onKeyChange(e) {\n    var keysArray = ['+', '-', 'e', 'E'];\n\n    if (keysArray.includes(e.key)) {\n      e.preventDefault();\n    }\n  };\n\n  return /*#__PURE__*/React.createElement(React.Fragment, {\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 234,\n      columnNumber: 5\n    }\n  }, (props === null || props === void 0 ? void 0 : (_props$geocoding2 = props.geocoding) === null || _props$geocoding2 === void 0 ? void 0 : _props$geocoding2.position) &&\n  /*#__PURE__*/\n  // props?.geocoding?.searchText &&\n\n  /* focusSearchPlace && */\n  React.createElement(Marker, {\n    draggable: (_props$geocoding3 = props.geocoding) === null || _props$geocoding3 === void 0 ? void 0 : _props$geocoding3.permission,\n    autoPan: true,\n    ondragend: function ondragend(e) {\n      // even when we drag , we are searching indirectly through map\n      setIsMapSearched(false);\n      markerDragend(e);\n    },\n    position: props === null || props === void 0 ? void 0 : (_props$geocoding4 = props.geocoding) === null || _props$geocoding4 === void 0 ? void 0 : _props$geocoding4.position,\n    icon: markerIcon,\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 238,\n      columnNumber: 9\n    }\n  }), (props === null || props === void 0 ? void 0 : (_props$geocoding5 = props.geocoding) === null || _props$geocoding5 === void 0 ? void 0 : _props$geocoding5.permission) && /*#__PURE__*/React.createElement(GeocodingFieldsWrapper, {\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 252,\n      columnNumber: 9\n    }\n  }, /*#__PURE__*/React.createElement(GeocodingField, {\n    autoComplete: \"off\",\n    id: \"map_latitude\",\n    className: \"geocodingField latitude\",\n    type: \"number\",\n    onChange: function onChange(e) {\n      onLatChange(e);\n    },\n    placeholder: \"Latitude\",\n    onBlur: function onBlur() {\n      return onBlurGeoFields();\n    },\n    value: lat || (lat === 0 ? 0 : ''),\n    error: latError,\n    errorMessage: latError ? 'Invalid latitude' : '',\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 253,\n      columnNumber: 11\n    }\n  }), /*#__PURE__*/React.createElement(GeocodingField, {\n    autoComplete: \"off\",\n    id: \"map_longitude\",\n    className: \"geocodingField longitude\",\n    type: \"number\",\n    onChange: function onChange(e) {\n      onLongChange(e);\n    },\n    onBlur: function onBlur() {\n      return onBlurGeoFields();\n    },\n    placeholder: \"Longitude\",\n    value: _long || (_long === 0 ? 0 : ''),\n    error: longError,\n    errorMessage: longError ? 'Invalid longitude' : '',\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 267,\n      columnNumber: 11\n    }\n  }), (geocoding === null || geocoding === void 0 ? void 0 : (_geocoding$customFiel4 = geocoding.customFields) === null || _geocoding$customFiel4 === void 0 ? void 0 : _geocoding$customFiel4.length) > 0 ? /*#__PURE__*/React.createElement(React.Fragment, null, geocoding === null || geocoding === void 0 ? void 0 : (_geocoding$customFiel5 = geocoding.customFields) === null || _geocoding$customFiel5 === void 0 ? void 0 : _geocoding$customFiel5.map(function (field) {\n    return /*#__PURE__*/React.createElement(GeocodingField, {\n      autoComplete: \"off\",\n      key: field.name,\n      id: \"geocoding-\".concat(field.name),\n      className: \"geocodingField\",\n      type: field.type,\n      name: field.name,\n      onChange: handleCustomFieldsChange,\n      placeholder: field.placeholder,\n      value: customFieldValues[field.name] || '',\n      onKeyPress: onKeyChange,\n      __self: _this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 285,\n        columnNumber: 19\n      }\n    });\n  })) : null, ((_props$geocoding6 = props.geocoding) === null || _props$geocoding6 === void 0 ? void 0 : (_props$geocoding6$pos = _props$geocoding6.position) === null || _props$geocoding6$pos === void 0 ? void 0 : _props$geocoding6$pos[0]) && ((_props$geocoding7 = props.geocoding) === null || _props$geocoding7 === void 0 ? void 0 : (_props$geocoding7$pos = _props$geocoding7.position) === null || _props$geocoding7$pos === void 0 ? void 0 : _props$geocoding7$pos[1]) && ((_props$geocoding8 = props.geocoding) === null || _props$geocoding8 === void 0 ? void 0 : _props$geocoding8.onGeocodingSave) && ((_props$geocoding9 = props.geocoding) === null || _props$geocoding9 === void 0 ? void 0 : _props$geocoding9.isSave) && isLocationChanged ? /*#__PURE__*/React.createElement(Box, {\n    display: \"flex\",\n    flexDirection: \"row\",\n    style: {\n      animation: 'fadeInUp 0.5s linear 0s'\n    },\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 309,\n      columnNumber: 15\n    }\n  }, /*#__PURE__*/React.createElement(IconButton, {\n    iconVariant: \"icomoon-save\",\n    primary: true,\n    style: {\n      height: 35,\n      marginRight: '10px'\n    },\n    onClick: function onClick() {\n      var _props$geocoding10;\n\n      return (_props$geocoding10 = props.geocoding) === null || _props$geocoding10 === void 0 ? void 0 : _props$geocoding10.onGeocodingSave(props.geocoding);\n    },\n    children: \"Save\",\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 314,\n      columnNumber: 17\n    }\n  }), /*#__PURE__*/React.createElement(IconButton, {\n    iconVariant: \"icomoon-back\",\n    style: {\n      height: 35\n    },\n    onClick: function onClick() {\n      return onReset();\n    },\n    children: \"Reset\",\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 324,\n      columnNumber: 17\n    }\n  })) : null));\n};\n\nexport default LeafletGeocodingLayer;","map":{"version":3,"sources":["/Users/farhanansari/Code/ui-library/src/components/atoms/Map/layers/LeafletGeocodingLayer.tsx"],"names":["React","useEffect","useState","Marker","useLeaflet","LL","GeocodingFieldsWrapper","GeocodingField","IconButton","Box","LeafletGeocodingLayer","props","iconsRef","geocoding","focusSearchPlace","setIsMarkerDragged","setIsMapSearched","theMap","zoomLGC","getLatLong","position","lat","setLat","long","setLong","customFieldValues","setCustomFieldValues","isLocationChanged","setIsLocationChanged","latError","setLatError","longError","setLongError","oldLatLong","useMemo","oldSearchText","searchText","map","markerIcon","icon","iconUrl","imgUrl","locationSearch","DivIcon","length","setErrorGeocoding","lng","customFields","updatedFormValues","reduce","result","field","name","value","setView","duration","animate","newMapBounds","getBounds","Object","keys","disableDefaultFlyToBounds","flyToBounds","maxZoom","padding","point","shouldUpdateShape","onLocationSelect","Number","radius","find","obj","isNaN","markerDragend","event","curZoom","current","leafletElement","getZoom","undefined","target","getLatLng","onGeocodingDragEnd","e","console","log","validLatCharsRegex","validLongCharsRegex","isValidLatitude","test","isValidLongitude","onLatChange","newLat","parseFloat","onBlurGeoFields","setTimeout","onLongChange","newLong","onReset","handleCustomFieldsChange","onKeyChange","keysArray","includes","key","preventDefault","permission","type","placeholder","onGeocodingSave","isSave","animation","height","marginRight"],"mappings":";;;;;;;AAAA;AAEA,OAAOA,KAAP,IAAgBC,SAAhB,EAA2BC,QAA3B,QAA2C,OAA3C;AACA,SAASC,MAAT,EAAiBC,UAAjB,QAAmC,eAAnC;AAEA,OAAOC,EAAP,MAAe,SAAf,C,CACA;;;AAEA,SACEC,sBADF,EAEEC,cAFF,QAGO,gDAHP;AAIA,OAAOC,UAAP,MAAuB,kBAAvB;AACA,OAAOC,GAAP,MAAgB,WAAhB;;AAmBA;AACA,IAAMC,qBAAqB,GAAG,SAAxBA,qBAAwB,CAACC,KAAD,EAAmC;AAAA;;AAAA,MAE7DC,QAF6D,GAW3DD,KAX2D,CAE7DC,QAF6D;AAAA,MAG7DC,SAH6D,GAW3DF,KAX2D,CAG7DE,SAH6D;AAAA,MAK7DC,gBAL6D,GAW3DH,KAX2D,CAK7DG,gBAL6D;AAAA,MAM7DC,kBAN6D,GAW3DJ,KAX2D,CAM7DI,kBAN6D;AAAA,MAO7DC,gBAP6D,GAW3DL,KAX2D,CAO7DK,gBAP6D;AAAA,MAQ7DC,MAR6D,GAW3DN,KAX2D,CAQ7DM,MAR6D;AAAA,uBAW3DN,KAX2D,CAS7DO,OAT6D;AAAA,MAS7DA,OAT6D,+BASrD,EATqD;AAAA,MAU7DC,UAV6D,GAW3DR,KAX2D,CAU7DQ,UAV6D;;AAAA,kBAYzCjB,QAAQ,CAASW,SAAT,aAASA,SAAT,8CAASA,SAAS,CAAEO,QAApB,wDAAS,oBAAsB,CAAtB,CAAT,CAZiC;AAAA;AAAA,MAYxDC,GAZwD;AAAA,MAYnDC,MAZmD;;AAAA,mBAavCpB,QAAQ,CAASW,SAAT,aAASA,SAAT,+CAASA,SAAS,CAAEO,QAApB,yDAAS,qBAAsB,CAAtB,CAAT,CAb+B;AAAA;AAAA,MAaxDG,KAbwD;AAAA,MAalDC,OAbkD;;AAAA,mBAcbtB,QAAQ,CAAsB,EAAtB,CAdK;AAAA;AAAA,MAcxDuB,iBAdwD;AAAA,MAcrCC,oBAdqC;;AAAA,mBAebxB,QAAQ,CAAU,KAAV,CAfK;AAAA;AAAA,MAexDyB,iBAfwD;AAAA,MAerCC,oBAfqC;;AAAA,mBAgB/B1B,QAAQ,CAAU,KAAV,CAhBuB;AAAA;AAAA,MAgBxD2B,QAhBwD;AAAA,MAgB9CC,WAhB8C;;AAAA,oBAiB7B5B,QAAQ,CAAU,KAAV,CAjBqB;AAAA;AAAA,MAiBxD6B,SAjBwD;AAAA,MAiB7CC,YAjB6C;;AAkB/D,MAAMC,UAAU,GAAGjC,KAAK,CAACkC,OAAN,CAAc,YAAM;AAAA;;AACrC,WAAO;AAAEb,MAAAA,GAAG,EAAER,SAAF,aAAEA,SAAF,+CAAEA,SAAS,CAAEO,QAAb,yDAAE,qBAAsB,CAAtB,CAAP;AAAiC,cAAMP,SAAN,aAAMA,SAAN,+CAAMA,SAAS,CAAEO,QAAjB,yDAAM,qBAAsB,CAAtB;AAAvC,KAAP;AACD,GAFkB,EAEhB,EAFgB,CAAnB;AAGA,MAAMe,aAAa,GAAGnC,KAAK,CAACkC,OAAN,CAAc;AAAA,WAAMrB,SAAN,aAAMA,SAAN,uBAAMA,SAAS,CAAEuB,UAAjB;AAAA,GAAd,EAA2C,EAA3C,CAAtB;;AArB+D,oBAuB/ChC,UAAU,EAvBqC;AAAA,MAuBvDiC,GAvBuD,eAuBvDA,GAvBuD;;AAwB/D,MAAIC,UAAe,GAAGjC,EAAE,CAACkC,IAAH,CAAQ;AAC5BC,IAAAA,OAAO,EAAEC;AADmB,GAAR,CAAtB;;AAGA,MAAI7B,QAAJ,aAAIA,QAAJ,uBAAIA,QAAQ,CAAE8B,cAAd,EAA8B;AAC5BJ,IAAAA,UAAU,GAAG,IAAIjC,EAAE,CAACsC,OAAP,CAAe/B,QAAf,aAAeA,QAAf,uBAAeA,QAAQ,CAAE8B,cAAzB,CAAb;AACD;;AAEDzC,EAAAA,SAAS,CAAC,YAAM;AAAA;;AACd;AACA,QAAIoB,GAAG,MAAKR,SAAL,aAAKA,SAAL,+CAAKA,SAAS,CAAEO,QAAhB,yDAAK,qBAAsB,CAAtB,CAAL,CAAH,IAAoCG,KAAI,MAAKV,SAAL,aAAKA,SAAL,+CAAKA,SAAS,CAAEO,QAAhB,yDAAK,qBAAsB,CAAtB,CAAL,CAA5C,EAA2E;AACzEQ,MAAAA,oBAAoB,CAAC,IAAD,CAApB;AACD;;AACDN,IAAAA,MAAM,CAACT,SAAD,aAACA,SAAD,+CAACA,SAAS,CAAEO,QAAZ,yDAAC,qBAAsB,CAAtB,CAAD,CAAN;AACAI,IAAAA,OAAO,CAACX,SAAD,aAACA,SAAD,+CAACA,SAAS,CAAEO,QAAZ,yDAAC,qBAAsB,CAAtB,CAAD,CAAP;AACD,GAPQ,EAON,CAACP,SAAS,CAACO,QAAX,CAPM,CAAT;AASAnB,EAAAA,SAAS,CAAC,YAAM;AACd,QAAK,CAAAY,SAAS,SAAT,IAAAA,SAAS,WAAT,YAAAA,SAAS,CAAEuB,UAAX,KAAyB,CAAAvB,SAAS,SAAT,IAAAA,SAAS,WAAT,YAAAA,SAAS,CAAEuB,UAAX,CAAsBQ,MAAtB,IAA+B,CAAzD,IAA+D/B,SAAS,CAACO,QAA7E,EAAuF;AACrF,UAAGS,QAAH,EAAa;AAAEC,QAAAA,WAAW,CAAC,KAAD,CAAX;AAAmB;;AAClC,UAAGC,SAAH,EAAc;AAAEC,QAAAA,YAAY,CAAC,KAAD,CAAZ;AAAoB;AACrC;AACF,GALQ,EAKN,CAACnB,SAAD,aAACA,SAAD,uBAACA,SAAS,CAAEuB,UAAZ,EAAwBvB,SAAS,CAACO,QAAlC,CALM,CAAT;AAOAnB,EAAAA,SAAS,CAAC,YAAM;AACd,QAAGY,SAAH,aAAGA,SAAH,uBAAGA,SAAS,CAAEgC,iBAAd,EAAiC;AAC/BhC,MAAAA,SAAS,SAAT,IAAAA,SAAS,WAAT,YAAAA,SAAS,CAAEgC,iBAAX,CAA6B;AAAExB,QAAAA,GAAG,EAAEQ,QAAP;AAAiBiB,QAAAA,GAAG,EAAEf;AAAtB,OAA7B;AACD;AACF,GAJQ,EAIP,CAACF,QAAD,EAAWE,SAAX,CAJO,CAAT;AAMA9B,EAAAA,SAAS,CAAC,YAAM;AAAA;;AACd,QAAG,CAAAY,SAAS,SAAT,IAAAA,SAAS,WAAT,YAAAA,SAAS,CAAEkC,YAAX,KAA2B,CAAAlC,SAAS,SAAT,IAAAA,SAAS,WAAT,qCAAAA,SAAS,CAAEkC,YAAX,gFAAyBH,MAAzB,IAAkC,CAAhE,EAAmE;AACjE,UAAII,iBAAiB,GAAGnC,SAAS,CAACkC,YAAV,CAAuBE,MAAvB,CACtB,UAACC,MAAD,EAAkCC,KAAlC;AAAA,+CAAgED,MAAhE,2BAAyEC,KAAK,CAACC,IAA/E,EAAsFD,KAAK,CAACE,KAA5F;AAAA,OADsB,EAEtB,EAFsB,CAAxB;AAIA3B,MAAAA,oBAAoB,mBAAKsB,iBAAL,EAApB;;AACA,UAAGnB,QAAH,EAAa;AAAA;;AAAEC,QAAAA,WAAW,CAAC,KAAD,CAAX;AAAoBR,QAAAA,MAAM,CAACT,SAAD,aAACA,SAAD,+CAACA,SAAS,CAAEO,QAAZ,yDAAC,qBAAsB,CAAtB,CAAD,CAAN;AAAmC;;AACtE,UAAGW,SAAH,EAAc;AAAA;;AAAGC,QAAAA,YAAY,CAAC,KAAD,CAAZ;AAAqBR,QAAAA,OAAO,CAACX,SAAD,aAACA,SAAD,gDAACA,SAAS,CAAEO,QAAZ,0DAAC,sBAAsB,CAAtB,CAAD,CAAP;AAAoC;AAC3E;AACF,GAVQ,EAUN,CAACP,SAAS,CAACkC,YAAX,CAVM,CAAT;AAYA9C,EAAAA,SAAS,CAAC,YAAM;AACd;AACA;AACA,QAAIoC,GAAG,IAAIxB,SAAS,CAACuB,UAAV,KAAyB,EAAhC,KAAsCvB,SAAtC,aAAsCA,SAAtC,uBAAsCA,SAAS,CAAEO,QAAjD,CAAJ,EAA+D;AAC7DiB,MAAAA,GAAG,CAACiB,OAAJ,CAAYzC,SAAZ,aAAYA,SAAZ,uBAAYA,SAAS,CAAEO,QAAvB,EAAiCF,OAAjC,EAA0C;AAAEqC,QAAAA,QAAQ,EAAE,GAAZ;AAAiBC,QAAAA,OAAO,EAAE;AAA1B,OAA1C;AACD,KAFD,MAEO,IAAInB,GAAG,IAAIxB,SAAS,CAACuB,UAAjB,IAA+BtB,gBAAnC,EAAqD;AAC1DuB,MAAAA,GAAG,CAACiB,OAAJ,CAAYzC,SAAZ,aAAYA,SAAZ,uBAAYA,SAAS,CAAEO,QAAvB,EAAiCF,OAAjC,EAA0C;AAAEqC,QAAAA,QAAQ,EAAE,GAAZ;AAAiBC,QAAAA,OAAO,EAAE;AAA1B,OAA1C;AACD,KAFM,MAEA;AACH;AACA,UAAMC,YAAY,GAAGpB,GAAH,aAAGA,GAAH,uBAAGA,GAAG,CAAEqB,SAAL,EAArB;;AACA,UAAIrB,GAAG,IAAIoB,YAAP,IAAuBE,MAAM,CAACC,IAAP,CAAYH,YAAZ,EAA0Bb,MAAjD,IAA2D,EAAC/B,SAAD,aAACA,SAAD,uBAACA,SAAS,CAAEgD,yBAAZ,CAA/D,EAAsG;AACpGxB,QAAAA,GAAG,CAACyB,WAAJ,CAAgBL,YAAhB,EAA8B;AAC5BM,UAAAA,OAAO,EAAE,EADmB;AAE5BR,UAAAA,QAAQ,EAAE,GAFkB;AAG5BS,UAAAA,OAAO,EAAE3D,EAAE,CAAC4D,KAAH,CAAS,GAAT,EAAc,GAAd;AAHmB,SAA9B;AAKD;AACH;AACH,GAlBQ,EAkBN,CAAC5B,GAAD,EAAMvB,gBAAN,EAAwBD,SAAxB,aAAwBA,SAAxB,uBAAwBA,SAAS,CAAEO,QAAnC,CAlBM,CAAT;AAoBAnB,EAAAA,SAAS,CAAC,YAAM;AAAA;;AACd,QAAG,CAACY,SAAS,CAACqD,iBAAX,IAAgCrC,QAAhC,IAA4CE,SAA/C,EAA0D;AAAE;AAAS;;AACrE,QAAIV,GAAG,IAAIA,GAAG,MAAKR,SAAL,aAAKA,SAAL,gDAAKA,SAAS,CAAEO,QAAhB,0DAAK,sBAAsB,CAAtB,CAAL,CAAX,IAA8CG,KAAI,IAAIA,KAAI,MAAKV,SAAL,aAAKA,SAAL,gDAAKA,SAAS,CAAEO,QAAhB,0DAAK,sBAAsB,CAAtB,CAAL,CAA7D,EAA6F;AAC3FL,MAAAA,kBAAkB,CAAC,IAAD,CAAlB;AACAC,MAAAA,gBAAgB,CAAC,KAAD,CAAhB;AACAL,MAAAA,KAAK,CAACwD,gBAAN,CAAuB,CAACC,MAAM,CAAC/C,GAAD,CAAP,EAAc+C,MAAM,CAAC7C,KAAD,CAApB,CAAvB,EAAoD,EAApD,EAAwD,IAAxD,EAA8D,IAA9D,EAAoEL,OAApE,EAA6EO,iBAA7E,aAA6EA,iBAA7E,uBAA6EA,iBAAiB,CAAE4C,MAAhG;AACD;AACF,GAPQ,EAOP,CAAChD,GAAD,EAAME,KAAN,EAAYM,QAAZ,EAAsBE,SAAtB,CAPO,CAAT;AASA9B,EAAAA,SAAS,CAAC,YAAM;AAAA;;AACd,QAAG,CAACY,SAAS,CAACqD,iBAAX,IAAgCrC,QAAhC,IAA4CE,SAA/C,EAA0D;AAAE;AAAS;;AACrE,QAAMsC,MAAM,GAAGxD,SAAH,aAAGA,SAAH,iDAAGA,SAAS,CAAEkC,YAAd,qFAAG,uBAAyBuB,IAAzB,CAA8B,UAACC,GAAD;AAAA,aAAsBA,GAAG,CAACnB,IAAJ,KAAa,QAAnC;AAAA,KAA9B,CAAH,2DAAG,uBAA4EC,KAA3F;;AACA,QAAG,CAAA5B,iBAAiB,SAAjB,IAAAA,iBAAiB,WAAjB,YAAAA,iBAAiB,CAAE4C,MAAnB,KAA8B,CAAA5C,iBAAiB,SAAjB,IAAAA,iBAAiB,WAAjB,YAAAA,iBAAiB,CAAE4C,MAAnB,MAA8BA,MAA/D,EAAwE;AACtE1D,MAAAA,KAAK,CAACwD,gBAAN,CAAuB,CAACC,MAAM,CAAC/C,GAAD,CAAP,EAAc+C,MAAM,CAAC7C,KAAD,CAApB,CAAvB,EAAoD,EAApD,EAAwD,IAAxD,EAA8D,IAA9D,EAAoE,CAApE,EAAuEE,iBAAvE,aAAuEA,iBAAvE,uBAAuEA,iBAAiB,CAAE4C,MAA1F;AACD,KAFD,MAEO,IAAG,QAAO5C,iBAAP,aAAOA,iBAAP,uBAAOA,iBAAiB,CAAE4C,MAA1B,MAAqC,WAArC,IAAoDG,KAAK,CAAC/C,iBAAD,aAACA,iBAAD,uBAACA,iBAAiB,CAAE4C,MAApB,CAA5D,EAAyF;AAC9F1D,MAAAA,KAAK,CAACwD,gBAAN,CAAuB,CAACC,MAAM,CAAC/C,GAAD,CAAP,EAAc+C,MAAM,CAAC7C,KAAD,CAApB,CAAvB,EAAoD,EAApD,EAAwD,IAAxD,EAA8D,IAA9D,EAAoE,CAApE,EAAuE,CAAvE;AACD;AACF,GARQ,EAQP,CAACE,iBAAD,aAACA,iBAAD,uBAACA,iBAAiB,CAAE4C,MAApB,EAA4BxC,QAA5B,EAAsCE,SAAtC,CARO,CAAT;;AAUA,MAAM0C,aAAa,GAAG,SAAhBA,aAAgB,CAACC,KAAD,EAAgB;AAAA;;AACpC,QAAMC,OAAO,GAAG1D,MAAH,aAAGA,MAAH,0CAAGA,MAAM,CAAE2D,OAAX,oDAAG,gBAAiBC,cAAjB,CAAgCC,OAAhC,EAAhB;;AACA,QAAI;AAAA;;AACF,UAAInE,KAAK,CAACwD,gBAAN,KAA2BY,SAA/B,EAA0C;AAAA;;AACxChE,QAAAA,kBAAkB,CAAC,IAAD,CAAlB;AACAJ,QAAAA,KAAK,CAACwD,gBAAN,CACE,CACEC,MAAM,0BAACM,KAAK,CAACM,MAAN,CAAaC,SAAb,EAAD,0DAAC,sBAA0B5D,GAA3B,CADR,EAEE+C,MAAM,2BAACM,KAAK,CAACM,MAAN,CAAaC,SAAb,EAAD,2DAAC,uBAA0BnC,GAA3B,CAFR,CADF,EAKE,EALF,EAME,IANF,EAOE,IAPF,EAQE6B,OARF,EASElD,iBATF,aASEA,iBATF,uBASEA,iBAAiB,CAAE4C,MATrB;AAWD;;AAED,2BAAA1D,KAAK,CAACE,SAAN,sEAAiBqE,kBAAjB,KACEvE,KAAK,CAACE,SAAN,CAAgBqE,kBAAhB,CAAmC,CACjCd,MAAM,2BAACM,KAAK,CAACM,MAAN,CAAaC,SAAb,EAAD,2DAAC,uBAA0B5D,GAA3B,CAD2B,EAEjC+C,MAAM,2BAACM,KAAK,CAACM,MAAN,CAAaC,SAAb,EAAD,2DAAC,uBAA0BnC,GAA3B,CAF2B,CAAnC,CADF;AAKD,KArBD,CAqBE,OAAOqC,CAAP,EAAU;AACVC,MAAAA,OAAO,CAACC,GAAR,CAAYF,CAAZ;AACD;AACF,GA1BD;;AA4BA,MAAMG,kBAAkB,GAAG,qCAA3B;AACA,MAAMC,mBAAmB,GAAG,+CAA5B;;AAEA,MAAMC,eAAe,GAAG,SAAlBA,eAAkB,CAACnE,GAAD,EAAc;AACpC,WAAOiE,kBAAkB,CAACG,IAAnB,CAAwBpE,GAAxB,CAAP;AACD,GAFD;;AAIA,MAAMqE,gBAAgB,GAAG,SAAnBA,gBAAmB,CAAC5C,GAAD,EAAc;AACrC,WAAOyC,mBAAmB,CAACE,IAApB,CAAyB3C,GAAzB,CAAP;AACD,GAFD;;AAIA,MAAM6C,WAAW,GAAG,SAAdA,WAAc,CAACR,CAAD,EAAY;AAC9B,QAAMS,MAAM,GAAGC,UAAU,CAACV,CAAC,CAACH,MAAF,CAAS3B,KAAV,CAAzB;;AACA,QAAImC,eAAe,CAACI,MAAD,CAAnB,EAA6B;AAC3B9D,MAAAA,WAAW,CAAC,KAAD,CAAX;AACD,KAFD,MAEO;AACLA,MAAAA,WAAW,CAAC,IAAD,CAAX;AACD;;AACDR,IAAAA,MAAM,CAACsE,MAAD,CAAN;AACAzE,IAAAA,UAAU,IAAIA,UAAU,CAAC,CAACyE,MAAD,EAAQrE,KAAR,CAAD,CAAxB;AACD,GATD,CA/I+D,CAyJ/D;AACA;AACA;AACA;;;AACA,MAAMuE,eAAe,GAAG,SAAlBA,eAAkB,GAAM;AAC5B,QAAIzE,GAAG,IAAIE,KAAP,IAAe,CAACV,SAAS,CAACqD,iBAA9B,EAAiD;AAC/CnD,MAAAA,kBAAkB,CAAC,IAAD,CAAlB,CAD+C,CAE/C;;AACAC,MAAAA,gBAAgB,CAAC,KAAD,CAAhB;AACA+E,MAAAA,UAAU,CAAC,YAAM;AACfpF,QAAAA,KAAK,CAACwD,gBAAN,CAAuB,CAACC,MAAM,CAAC/C,GAAD,CAAP,EAAc+C,MAAM,CAAC7C,KAAD,CAApB,CAAvB,EAAoD,EAApD,EAAwD,IAAxD,EAA8D,IAA9D,EAAoEL,OAApE,EAA6EO,iBAA7E,aAA6EA,iBAA7E,uBAA6EA,iBAAiB,CAAE4C,MAAhG;AACD,OAFS,EAEP,GAFO,CAAV;AAGD;AACF,GATD;;AAUA,MAAM2B,YAAY,GAAG,SAAfA,YAAe,CAACb,CAAD,EAAY;AAC/B,QAAMc,OAAO,GAAGJ,UAAU,CAACV,CAAC,CAACH,MAAF,CAAS3B,KAAV,CAA1B;;AACA,QAAIqC,gBAAgB,CAACO,OAAD,CAApB,EAA+B;AAC7BjE,MAAAA,YAAY,CAAC,KAAD,CAAZ;AACD,KAFD,MAEO;AACLA,MAAAA,YAAY,CAAC,IAAD,CAAZ;AACD;;AACDR,IAAAA,OAAO,CAACyE,OAAD,CAAP;AACA9E,IAAAA,UAAU,IAAIA,UAAU,CAAC,CAACE,GAAD,EAAK4E,OAAL,CAAD,CAAxB;AACD,GATD;;AAUA,MAAMC,OAAO,GAAG,SAAVA,OAAU,GAAM;AACpB5E,IAAAA,MAAM,CAACW,UAAU,CAACZ,GAAZ,CAAN;AACAG,IAAAA,OAAO,CAACS,UAAU,QAAX,CAAP;AACAtB,IAAAA,KAAK,CAACwD,gBAAN,CACE,CAAClC,UAAD,aAACA,UAAD,uBAACA,UAAU,CAAEZ,GAAb,EAAkBY,UAAlB,aAAkBA,UAAlB,uBAAkBA,UAAU,QAA5B,CADF,EAEEE,aAFF,EAGE,IAHF;AAKD,GARD;;AAUA,MAAMgE,wBAAwB,GAAG,SAA3BA,wBAA2B,CAAChB,CAAD,EAAY;AAAA,oBACnBA,CAAC,CAACH,MADiB;AAAA,QACnC5B,IADmC,aACnCA,IADmC;AAAA,QAC7BC,KAD6B,aAC7BA,KAD6B;AAE3C3B,IAAAA,oBAAoB,iCAAKD,iBAAL,2BAAyB2B,IAAzB,EAAgCyC,UAAU,CAACxC,KAAD,CAA1C,GAApB;AACD,GAHD;;AAKA,MAAM+C,WAAW,GAAG,SAAdA,WAAc,CAACjB,CAAD,EAA8C;AAChE,QAAMkB,SAAS,GAAG,CAAC,GAAD,EAAM,GAAN,EAAW,GAAX,EAAgB,GAAhB,CAAlB;;AACA,QAAIA,SAAS,CAACC,QAAV,CAAmBnB,CAAC,CAACoB,GAArB,CAAJ,EAA+B;AAC7BpB,MAAAA,CAAC,CAACqB,cAAF;AACD;AACF,GALD;;AAOA,sBACE,oBAAC,KAAD,CAAO,QAAP;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KACG,CAAA7F,KAAK,SAAL,IAAAA,KAAK,WAAL,iCAAAA,KAAK,CAAEE,SAAP,wEAAkBO,QAAlB;AAAA;AACC;;AACA;AACA,sBAAC,MAAD;AACE,IAAA,SAAS,uBAAET,KAAK,CAACE,SAAR,sDAAE,kBAAiB4F,UAD9B;AAEE,IAAA,OAAO,MAFT;AAGE,IAAA,SAAS,EAAE,mBAACtB,CAAD,EAAY;AACrB;AACAnE,MAAAA,gBAAgB,CAAC,KAAD,CAAhB;AACAyD,MAAAA,aAAa,CAACU,CAAD,CAAb;AACD,KAPH;AAQE,IAAA,QAAQ,EAAExE,KAAF,aAAEA,KAAF,4CAAEA,KAAK,CAAEE,SAAT,sDAAE,kBAAkBO,QAR9B;AASE,IAAA,IAAI,EAAEkB,UATR;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,IAJJ,EAiBG,CAAA3B,KAAK,SAAL,IAAAA,KAAK,WAAL,iCAAAA,KAAK,CAAEE,SAAP,wEAAkB4F,UAAlB,kBACC,oBAAC,sBAAD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,kBACE,oBAAC,cAAD;AACE,IAAA,YAAY,EAAC,KADf;AAEE,IAAA,EAAE,EAAC,cAFL;AAGE,IAAA,SAAS,EAAC,yBAHZ;AAIE,IAAA,IAAI,EAAC,QAJP;AAKE,IAAA,QAAQ,EAAE,kBAACtB,CAAD,EAAO;AACfQ,MAAAA,WAAW,CAACR,CAAD,CAAX;AACD,KAPH;AAQE,IAAA,WAAW,EAAC,UARd;AASE,IAAA,MAAM,EAAE;AAAA,aAAMW,eAAe,EAArB;AAAA,KATV;AAUE,IAAA,KAAK,EAAEzE,GAAG,KAAKA,GAAG,KAAK,CAAR,GAAY,CAAZ,GAAgB,EAArB,CAVZ;AAWE,IAAA,KAAK,EAAEQ,QAXT;AAYE,IAAA,YAAY,EAAEA,QAAQ,GAAG,kBAAH,GAAwB,EAZhD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,IADF,eAeE,oBAAC,cAAD;AACE,IAAA,YAAY,EAAC,KADf;AAEE,IAAA,EAAE,EAAC,eAFL;AAGE,IAAA,SAAS,EAAC,0BAHZ;AAIE,IAAA,IAAI,EAAC,QAJP;AAKE,IAAA,QAAQ,EAAE,kBAACsD,CAAD,EAAO;AACfa,MAAAA,YAAY,CAACb,CAAD,CAAZ;AACD,KAPH;AAQE,IAAA,MAAM,EAAE;AAAA,aAAMW,eAAe,EAArB;AAAA,KARV;AASE,IAAA,WAAW,EAAC,WATd;AAUE,IAAA,KAAK,EAAEvE,KAAI,KAAKA,KAAI,KAAK,CAAT,GAAa,CAAb,GAAiB,EAAtB,CAVb;AAWE,IAAA,KAAK,EAAEQ,SAXT;AAYE,IAAA,YAAY,EAAEA,SAAS,GAAG,mBAAH,GAAyB,EAZlD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,IAfF,EA6BG,CAAAlB,SAAS,SAAT,IAAAA,SAAS,WAAT,sCAAAA,SAAS,CAAEkC,YAAX,kFAAyBH,MAAzB,IAAkC,CAAlC,gBACC,0CACG/B,SADH,aACGA,SADH,iDACGA,SAAS,CAAEkC,YADd,2DACG,uBAAyBV,GAAzB,CAA6B,UAACc,KAAD,EAAyB;AACrD,wBACE,oBAAC,cAAD;AACE,MAAA,YAAY,EAAC,KADf;AAEE,MAAA,GAAG,EAAEA,KAAK,CAACC,IAFb;AAGE,MAAA,EAAE,sBAAeD,KAAK,CAACC,IAArB,CAHJ;AAIE,MAAA,SAAS,EAAC,gBAJZ;AAKE,MAAA,IAAI,EAAED,KAAK,CAACuD,IALd;AAME,MAAA,IAAI,EAAEvD,KAAK,CAACC,IANd;AAOE,MAAA,QAAQ,EAAE+C,wBAPZ;AAQE,MAAA,WAAW,EAAEhD,KAAK,CAACwD,WARrB;AASE,MAAA,KAAK,EAAElF,iBAAiB,CAAC0B,KAAK,CAACC,IAAP,CAAjB,IAAiC,EAT1C;AAUE,MAAA,UAAU,EAAEgD,WAVd;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,MADF;AAcC,GAfF,CADH,CADD,GAoBC,IAjDJ,EAoDG,sBAAAzF,KAAK,CAACE,SAAN,iGAAiBO,QAAjB,gFAA4B,CAA5B,4BACCT,KAAK,CAACE,SADP,+EACC,kBAAiBO,QADlB,0DACC,sBAA4B,CAA5B,CADD,2BAECT,KAAK,CAACE,SAFP,sDAEC,kBAAiB+F,eAFlB,2BAGCjG,KAAK,CAACE,SAHP,sDAGC,kBAAiBgG,MAHlB,KAIClF,iBAJD,gBAKG,oBAAC,GAAD;AACE,IAAA,OAAO,EAAC,MADV;AAEE,IAAA,aAAa,EAAC,KAFhB;AAGE,IAAA,KAAK,EAAE;AAAEmF,MAAAA,SAAS,EAAE;AAAb,KAHT;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,kBAKE,oBAAC,UAAD;AACE,IAAA,WAAW,EAAC,cADd;AAEE,IAAA,OAAO,MAFT;AAGE,IAAA,KAAK,EAAE;AAAEC,MAAAA,MAAM,EAAE,EAAV;AAAcC,MAAAA,WAAW,EAAE;AAA3B,KAHT;AAIE,IAAA,OAAO,EAAE;AAAA;;AAAA,mCACPrG,KAAK,CAACE,SADC,uDACP,mBAAiB+F,eAAjB,CAAiCjG,KAAK,CAACE,SAAvC,CADO;AAAA,KAJX;AAOE,IAAA,QAAQ,EAAC,MAPX;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,IALF,eAeE,oBAAC,UAAD;AACE,IAAA,WAAW,EAAC,cADd;AAEE,IAAA,KAAK,EAAE;AAAEkG,MAAAA,MAAM,EAAE;AAAV,KAFT;AAGE,IAAA,OAAO,EAAE;AAAA,aAAMb,OAAO,EAAb;AAAA,KAHX;AAIE,IAAA,QAAQ,EAAC,OAJX;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,IAfF,CALH,GA2BI,IA/EP,CAlBJ,CADF;AAuGD,CA9SD;;AAgTA,eAAexF,qBAAf","sourcesContent":["// The marker layer which will display all the markers and marker clusters\n\nimport React, { useEffect, useState } from 'react'\nimport { Marker, useLeaflet } from 'react-leaflet'\nimport ILeafletMapProps, { ICustomField } from '../interfaces.d'\nimport LL from 'leaflet'\n// import markerIcons from '../dummyData/MarkerIcon.sampleData'\nimport imgUrl from '../../../../assets/icons/Bigmarker_red.svg'\nimport {\n  GeocodingFieldsWrapper,\n  GeocodingField\n} from './../utils/LocationSearch/StyledLocationSearch'\nimport IconButton from '../../IconButton'\nimport Box from '../../Box'\n\ninterface ILeafletGeocodingLayer extends ILeafletMapProps {\n  focusSearchPlace: boolean\n  onLocationSelect: (\n    position: any,\n    searchText?: any,\n    isMarkerDragged?: boolean,\n    bounds?: any,\n    zoom?: any,\n    radius?: number,\n    getLatLong?: (value : Array<number>) => void\n  ) => void\n  setIsMarkerDragged: (value: boolean) => void\n  setIsMapSearched: (value: boolean) => void\n  theMap: any\n  zoomLGC?: number\n}\n\n// The layer with actual markers\nconst LeafletGeocodingLayer = (props: ILeafletGeocodingLayer) => {\n  const {\n    iconsRef,\n    geocoding,\n    // settingConfig,\n    focusSearchPlace,\n    setIsMarkerDragged,\n    setIsMapSearched,\n    theMap,\n    zoomLGC=14,\n    getLatLong\n  } = props\n  const [lat, setLat] = useState<number>(geocoding?.position?.[0])\n  const [long, setLong] = useState<number>(geocoding?.position?.[1])\n  const [customFieldValues, setCustomFieldValues] = useState<{[key:string]: any}>({}); \n  const [isLocationChanged, setIsLocationChanged] = useState<boolean>(false)\n  const [latError, setLatError] = useState<boolean>(false)\n  const [longError, setLongError] = useState<boolean>(false)\n  const oldLatLong = React.useMemo(() => {\n    return { lat: geocoding?.position?.[0], long: geocoding?.position?.[1] }\n  }, [])\n  const oldSearchText = React.useMemo(() => geocoding?.searchText, [])\n\n  const { map } = useLeaflet()\n  let markerIcon: any = LL.icon({\n    iconUrl: imgUrl\n  })\n  if (iconsRef?.locationSearch) {\n    markerIcon = new LL.DivIcon(iconsRef?.locationSearch)\n  }\n\n  useEffect(() => {\n    // if location get changed by search/dragdrop or geocoding set this flag true and show save and reset\n    if (lat !== geocoding?.position?.[0] && long !== geocoding?.position?.[1]) {\n      setIsLocationChanged(true)\n    }\n    setLat(geocoding?.position?.[0])\n    setLong(geocoding?.position?.[1])\n  }, [geocoding.position])\n\n  useEffect(() => {\n    if ((geocoding?.searchText && geocoding?.searchText.length > 0) || geocoding.position) {\n      if(latError) { setLatError(false)}\n      if(longError) { setLongError(false)}\n    }\n  }, [geocoding?.searchText, geocoding.position])\n\n  useEffect(() => {\n    if(geocoding?.setErrorGeocoding) {\n      geocoding?.setErrorGeocoding({ lat: latError, lng: longError});\n    }\n  },[latError, longError]);\n\n  useEffect(() => {\n    if(geocoding?.customFields && geocoding?.customFields?.length > 0) {\n      let updatedFormValues = geocoding.customFields.reduce(\n        (result: {[key:string]: unknown}, field: ICustomField) => ({ ...result, [field.name]: field.value }),\n        {}\n        );\n      setCustomFieldValues({...updatedFormValues});\n      if(latError) { setLatError(false); setLat(geocoding?.position?.[0]); }\n      if(longError) {  setLongError(false); setLong(geocoding?.position?.[1]); }\n    }\n  }, [geocoding.customFields]);\n\n  useEffect(() => {\n    // if serach text in search box and focusSearchPlace is true then set map view directly\n    // we are not using flytoBound -reason is map bound giving(includes marker while caluculating bound) resulting not focusing on search place\n    if (map && geocoding.searchText === '' && geocoding?.position) {\n      map.setView(geocoding?.position, zoomLGC, { duration: 0.5, animate: true })\n    } else if (map && geocoding.searchText && focusSearchPlace) {\n      map.setView(geocoding?.position, zoomLGC, { duration: 0.5, animate: true  })\n    } else {\n        // if nothing in search box , whatever map bound giving(includes marker while caluculating bound) just fly on that.\n        const newMapBounds = map?.getBounds()\n        if (map && newMapBounds && Object.keys(newMapBounds).length && !geocoding?.disableDefaultFlyToBounds) {\n          map.flyToBounds(newMapBounds, {\n            maxZoom: 14,\n            duration: 0.5,\n            padding: LL.point(100, 100)\n          })\n        }\n     }\n  }, [map, focusSearchPlace, geocoding?.position])\n\n  useEffect(() => {\n    if(!geocoding.shouldUpdateShape || latError || longError) { return; }\n    if((lat && lat !== geocoding?.position?.[0]) || (long && long !== geocoding?.position?.[1])) {\n      setIsMarkerDragged(true);\n      setIsMapSearched(false);\n      props.onLocationSelect([Number(lat), Number(long)], '', true, null, zoomLGC, customFieldValues?.radius)\n    }    \n  },[lat, long, latError, longError]);\n\n  useEffect(() => {\n    if(!geocoding.shouldUpdateShape || latError || longError) { return; }\n    const radius = geocoding?.customFields?.find((obj:ICustomField) => obj.name === \"radius\")?.value;\n    if(customFieldValues?.radius && (customFieldValues?.radius !== radius)) {\n      props.onLocationSelect([Number(lat), Number(long)], '', true, null, 0, customFieldValues?.radius);\n    } else if(typeof customFieldValues?.radius !== \"undefined\" && isNaN(customFieldValues?.radius)) {\n      props.onLocationSelect([Number(lat), Number(long)], '', true, null, 0, 0);\n    }\n  },[customFieldValues?.radius, latError, longError]);\n\n  const markerDragend = (event: any) => {\n    const curZoom = theMap?.current?.leafletElement.getZoom()\n    try {\n      if (props.onLocationSelect !== undefined) {\n        setIsMarkerDragged(true)\n        props.onLocationSelect(\n          [\n            Number(event.target.getLatLng()?.lat),\n            Number(event.target.getLatLng()?.lng)\n          ],\n          '',\n          true,\n          null,\n          curZoom,\n          customFieldValues?.radius\n        )\n      }\n\n      props.geocoding?.onGeocodingDragEnd &&\n        props.geocoding.onGeocodingDragEnd([\n          Number(event.target.getLatLng()?.lat),\n          Number(event.target.getLatLng()?.lng)\n        ])\n    } catch (e) {\n      console.log(e)\n    }\n  }\n\n  const validLatCharsRegex = /^[-+]?([1-8]?\\d(\\.\\d+)?|90(\\.0+)?)$/\n  const validLongCharsRegex = /^[-+]?((1[0-7]|[1-9])?\\d(\\.\\d+)?|180(\\.0+)?)$/\n\n  const isValidLatitude = (lat: any) => {\n    return validLatCharsRegex.test(lat)\n  }\n\n  const isValidLongitude = (lng: any) => {\n    return validLongCharsRegex.test(lng)\n  }\n\n  const onLatChange = (e: any) => {\n    const newLat = parseFloat(e.target.value)\n    if (isValidLatitude(newLat)) {\n      setLatError(false)\n    } else {\n      setLatError(true)\n    }\n    setLat(newLat)\n    getLatLong && getLatLong([newLat,long])\n  }\n  // whenevr lat long both there on blur,send lat long to location select in map\n  // there is updateGeocoding will trigger position change,\n  // position change will trigger useEffect in Location search and as it dragging phenomenon(not physically writting something in input)\n  // keeping separate state to capture that.So that in Location search on the basis of this key we can decide to show dragged location which coming through api or user written searchtext\n  const onBlurGeoFields = () => {\n    if (lat && long && !geocoding.shouldUpdateShape) {\n      setIsMarkerDragged(true)\n      // to tell user i searched it through map drag marker\n      setIsMapSearched(false)\n      setTimeout(() => {\n        props.onLocationSelect([Number(lat), Number(long)], '', true, null, zoomLGC, customFieldValues?.radius)\n      }, 500)\n    }\n  }\n  const onLongChange = (e: any) => {\n    const newLong = parseFloat(e.target.value)\n    if (isValidLongitude(newLong)) {\n      setLongError(false)\n    } else {\n      setLongError(true)\n    }\n    setLong(newLong)\n    getLatLong && getLatLong([lat,newLong])\n  }\n  const onReset = () => {\n    setLat(oldLatLong.lat)\n    setLong(oldLatLong.long)\n    props.onLocationSelect(\n      [oldLatLong?.lat, oldLatLong?.long],\n      oldSearchText,\n      true\n    )\n  }\n\n  const handleCustomFieldsChange = (e: any) => {\n    const { name, value } = e.target;\n    setCustomFieldValues({...customFieldValues, [name]: parseFloat(value)})\n  }\n\n  const onKeyChange = (e: React.KeyboardEvent<HTMLInputElement>) => {\n    const keysArray = ['+', '-', 'e', 'E']\n    if (keysArray.includes(e.key)) {\n      e.preventDefault()\n    }\n  }\n\n  return (\n    <React.Fragment>\n      {props?.geocoding?.position && (\n        // props?.geocoding?.searchText &&\n        /* focusSearchPlace && */\n        <Marker\n          draggable={props.geocoding?.permission}\n          autoPan\n          ondragend={(e: any) => {\n            // even when we drag , we are searching indirectly through map\n            setIsMapSearched(false)\n            markerDragend(e)\n          }}\n          position={props?.geocoding?.position}\n          icon={markerIcon}\n        />\n      )}\n\n      {props?.geocoding?.permission && (\n        <GeocodingFieldsWrapper>\n          <GeocodingField\n            autoComplete='off'\n            id='map_latitude'\n            className='geocodingField latitude'\n            type='number'\n            onChange={(e) => {\n              onLatChange(e)\n            }}\n            placeholder='Latitude'\n            onBlur={() => onBlurGeoFields()}\n            value={lat || (lat === 0 ? 0 : '')}\n            error={latError}\n            errorMessage={latError ? 'Invalid latitude' : ''}\n          />\n          <GeocodingField\n            autoComplete='off'\n            id='map_longitude'\n            className='geocodingField longitude'\n            type='number'\n            onChange={(e) => {\n              onLongChange(e)\n            }}\n            onBlur={() => onBlurGeoFields()}\n            placeholder='Longitude'\n            value={long || (long === 0 ? 0 : '')}\n            error={longError}\n            errorMessage={longError ? 'Invalid longitude' : ''}\n          />\n          {geocoding?.customFields?.length > 0 ? \n            <>\n              {geocoding?.customFields?.map((field: ICustomField) => {\n                return (\n                  <GeocodingField\n                    autoComplete='off'\n                    key={field.name}\n                    id={`geocoding-${field.name}`}\n                    className='geocodingField'\n                    type={field.type}\n                    name={field.name}\n                    onChange={handleCustomFieldsChange}\n                    placeholder={field.placeholder}\n                    value={customFieldValues[field.name] || ''}\n                    onKeyPress={onKeyChange}\n                  />\n                )\n                })\n              }\n            </>\n          : null}\n\n          {/* Save geocoding button */}\n          {props.geocoding?.position?.[0] &&\n            props.geocoding?.position?.[1] &&\n            props.geocoding?.onGeocodingSave &&\n            props.geocoding?.isSave &&\n            isLocationChanged ? (\n              <Box\n                display='flex'\n                flexDirection='row'\n                style={{ animation: 'fadeInUp 0.5s linear 0s' }}\n              >\n                <IconButton\n                  iconVariant='icomoon-save'\n                  primary\n                  style={{ height: 35, marginRight: '10px' }}\n                  onClick={() =>\n                    props.geocoding?.onGeocodingSave(props.geocoding)\n                  }\n                  children='Save'\n                />\n\n                <IconButton\n                  iconVariant='icomoon-back'\n                  style={{ height: 35 }}\n                  onClick={() => onReset()}\n                  children='Reset'\n                />\n              </Box>\n            ): null}\n        </GeocodingFieldsWrapper>\n      )}\n    </React.Fragment>\n  )\n}\n\nexport default LeafletGeocodingLayer\n"]},"metadata":{},"sourceType":"module"}