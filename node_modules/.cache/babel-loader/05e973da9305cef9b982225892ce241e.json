{"ast":null,"code":"import _defineProperty from \"/Users/farhanansari/Code/ui-library/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/defineProperty\";\n\nvar _parameters;\n\n/* eslint-disable */\n// @ts-nocheck\n// @ts-ignore\nvar withSourceLoader = require('@storybook/source-loader/preview').withSource; // @ts-ignore\n\n\nvar addSourceDecorator = require(\"@storybook/source-loader/preview\").addSource; // @ts-ignore\n\n\nvar __SOURCE_PREFIX__ = \"/Users/farhanansari/Code/ui-library/src/components/atoms/FilterDrawer\"; // @ts-ignore\n\nvar __STORY__ = \"\\n\\n// @ts-nocheck\\n// @ts-ignore\\nvar withSourceLoader = require('@storybook/source-loader/preview').withSource;\\n// @ts-ignore\\nvar addSourceDecorator = require(\\\"@storybook/source-loader/preview\\\").addSource;\\n// @ts-ignore\\nvar __SOURCE_PREFIX__ = \\\"/Users/farhanansari/Code/ui-library/src/components/atoms/FilterDrawer\\\";\\n// @ts-ignore\\nvar __STORY__ = \\\"\\\\n\\\\n// @ts-nocheck\\\\n// @ts-ignore\\\\nvar withSourceLoader = require('@storybook/source-loader/preview').withSource;\\\\n// @ts-ignore\\\\nvar addSourceDecorator = require(\\\\\\\"@storybook/source-loader/preview\\\\\\\").addSource;\\\\n// @ts-ignore\\\\nvar __SOURCE_PREFIX__ = \\\\\\\"/Users/farhanansari/Code/ui-library/src/components/atoms/FilterDrawer\\\\\\\";\\\\n// @ts-ignore\\\\nvar __STORY__ = \\\\\\\"import React from 'react'\\\\\\\\nimport FilterDrawer from '.'\\\\\\\\nimport { path } from '..'\\\\\\\\nimport ThemeWrapper from '../../../utilities/components/ThemeWrapper'\\\\\\\\n\\\\\\\\nimport ModalHeader from '../../molecules/ModalHeader'\\\\\\\\nimport Box from '../Box'\\\\\\\\nimport IconButton from '../IconButton'\\\\\\\\nimport { IFilterMultiselectOption } from '../../molecules/FilterMultiselect/interfaces'\\\\\\\\nimport FilterMultiselect from '../../molecules/FilterMultiselect'\\\\\\\\nimport { action } from '@storybook/addon-actions'\\\\\\\\nimport { boolean, text } from '@storybook/addon-knobs'\\\\\\\\nimport { DateRangePicker } from '../../molecules/DatePicker'\\\\\\\\nimport { tDateRangeChildren } from '../../molecules/DatePicker/interfaces'\\\\\\\\nimport TextInput from '../../molecules/TextInput'\\\\\\\\nimport Position from '../../molecules/Position'\\\\\\\\n\\\\\\\\nexport default {\\\\\\\\n  title: `${path}/FilterDrawer`,\\\\\\\\n  component: FilterDrawer\\\\\\\\n}\\\\\\\\n\\\\\\\\nconst options: IFilterMultiselectOption[] = [\\\\\\\\n  { id: '1', label: 'Powai', value: 'powai' },\\\\\\\\n  { id: '2', label: 'Andheri', value: 'andheri' },\\\\\\\\n  { id: '3', label: 'Bhandup', value: 'bhandup' }\\\\\\\\n]\\\\\\\\n\\\\\\\\nconst getFormattedDate = (date: Date) => {\\\\\\\\n  const todayTime = date\\\\\\\\n  const month = todayTime.getMonth() + 1\\\\\\\\n  const day = todayTime.getDate()\\\\\\\\n  const year = todayTime.getFullYear()\\\\\\\\n  const hours = todayTime.getHours()\\\\\\\\n  const minutes = todayTime.getMinutes()\\\\\\\\n  return month + '/' + day + '/' + year + ' ' + hours + ':' + minutes\\\\\\\\n}\\\\\\\\n\\\\\\\\nexport const withBasic = () => {\\\\\\\\n  const [isFilterOpen, setFilterOpen] = React.useState<boolean>(true)\\\\\\\\n\\\\\\\\n  // state that manages DatePickers value\\\\\\\\n\\\\\\\\n  return (\\\\\\\\n    <ThemeWrapper>\\\\\\\\n      <IconButton\\\\\\\\n        iconVariant='icomoon-funel'\\\\\\\\n        onClick={() => setFilterOpen((f) => !f)}\\\\\\\\n      >\\\\\\\\n        Filter\\\\\\\\n      </IconButton>\\\\\\\\n\\\\\\\\n      <FilterDrawer isOpen={isFilterOpen}>\\\\\\\\n        <Box display='flex' flexDirection='column' fullWidth fullHeight>\\\\\\\\n          <ModalHeader\\\\\\\\n            headerTitle='Analytics Filter'\\\\\\\\n            handleClose={() => setFilterOpen(false)}\\\\\\\\n            width='100%'\\\\\\\\n          />\\\\\\\\n\\\\\\\\n          {/* element that holds DateRangePickers value */}\\\\\\\\n          <Position type='relative'>\\\\\\\\n            <DateRangePicker\\\\\\\\n              onFromChange={action('From Clicked')}\\\\\\\\n              onToChange={action('To Clicked')}\\\\\\\\n              onApply={action('Apply Clicked')}\\\\\\\\n              onCancel={action('Cancel Clicked')}\\\\\\\\n              label={text('Label', 'Date Range')}\\\\\\\\n              variant='daterange'\\\\\\\\n              timeFormat={24}\\\\\\\\n              showTime={boolean('Show time', true)}\\\\\\\\n              startDate={new Date()}\\\\\\\\n              fromDateFormatter={getFormattedDate}\\\\\\\\n              toDateFormatter={getFormattedDate}\\\\\\\\n              style={{\\\\\\\\n                background: '#ccc',\\\\\\\\n                right: '0px',\\\\\\\\n                position: 'fixed'\\\\\\\\n              }}\\\\\\\\n            >\\\\\\\\n              {({ value, open, setOpen }: tDateRangeChildren) => (\\\\\\\\n                <Box fullWidth>\\\\\\\\n                  <TextInput\\\\\\\\n                    id='someId'\\\\\\\\n                    name={name}\\\\\\\\n                    className='someClassname'\\\\\\\\n                    label='Holidays'\\\\\\\\n                    variant='basic'\\\\\\\\n                    labelColor='text.inputLabel.default'\\\\\\\\n                    placeholder='Please Click Here'\\\\\\\\n                    fullWidth\\\\\\\\n                    value={value?.toString()}\\\\\\\\n                    onChange={action('On change clicked')}\\\\\\\\n                    onClick={() => setOpen(!open)}\\\\\\\\n                  />\\\\\\\\n                </Box>\\\\\\\\n              )}\\\\\\\\n            </DateRangePicker>\\\\\\\\n          </Position>\\\\\\\\n\\\\\\\\n          <Box\\\\\\\\n            flexGrow={1}\\\\\\\\n            style={{ overflow: 'auto' }}\\\\\\\\n            p='15px'\\\\\\\\n            fullWidth\\\\\\\\n            mt='50px'\\\\\\\\n          >\\\\\\\\n            <FilterMultiselect\\\\\\\\n              id='branch'\\\\\\\\n              label='Hub'\\\\\\\\n              options={options}\\\\\\\\n              onSelectionChange={action('On Change')}\\\\\\\\n            />\\\\\\\\n          </Box>\\\\\\\\n          <Box\\\\\\\\n            display='flex'\\\\\\\\n            justifyContent='flex-end'\\\\\\\\n            p='15px'\\\\\\\\n            horizontalSpacing='10px'\\\\\\\\n            fullWidth\\\\\\\\n          >\\\\\\\\n            <IconButton iconVariant='icomoon-tick-circled' primary>\\\\\\\\n              Apply\\\\\\\\n            </IconButton>\\\\\\\\n            <IconButton iconVariant='icomoon-back'>Reset</IconButton>\\\\\\\\n          </Box>\\\\\\\\n        </Box>\\\\\\\\n      </FilterDrawer>\\\\\\\\n    </ThemeWrapper>\\\\\\\\n  )\\\\\\\\n}\\\\\\\\n\\\\\\\";\\\\n// @ts-ignore\\\\nvar __ADDS_MAP__ = {};\\\\n// @ts-ignore\\\\nvar __MAIN_FILE_LOCATION__ = \\\\\\\"/FilterDrawer.stories.tsx\\\\\\\";\\\\n// @ts-ignore\\\\nvar __MODULE_DEPENDENCIES__ = [];\\\\n// @ts-ignore\\\\nvar __LOCAL_DEPENDENCIES__ = {};\\\\n// @ts-ignore\\\\nvar __IDS_TO_FRAMEWORKS__ = {};\\\\n        \\\\nimport React from 'react'\\\\nimport FilterDrawer from '.'\\\\nimport { path } from '..'\\\\nimport ThemeWrapper from '../../../utilities/components/ThemeWrapper'\\\\n\\\\nimport ModalHeader from '../../molecules/ModalHeader'\\\\nimport Box from '../Box'\\\\nimport IconButton from '../IconButton'\\\\nimport { IFilterMultiselectOption } from '../../molecules/FilterMultiselect/interfaces'\\\\nimport FilterMultiselect from '../../molecules/FilterMultiselect'\\\\nimport { action } from '@storybook/addon-actions'\\\\nimport { boolean, text } from '@storybook/addon-knobs'\\\\nimport { DateRangePicker } from '../../molecules/DatePicker'\\\\nimport { tDateRangeChildren } from '../../molecules/DatePicker/interfaces'\\\\nimport TextInput from '../../molecules/TextInput'\\\\nimport Position from '../../molecules/Position'\\\\n\\\\nexport default {parameters: {\\\\\\\"storySource\\\\\\\":{\\\\\\\"source\\\\\\\":\\\\\\\"import React from 'react'\\\\\\\\nimport FilterDrawer from '.'\\\\\\\\nimport { path } from '..'\\\\\\\\nimport ThemeWrapper from '../../../utilities/components/ThemeWrapper'\\\\\\\\n\\\\\\\\nimport ModalHeader from '../../molecules/ModalHeader'\\\\\\\\nimport Box from '../Box'\\\\\\\\nimport IconButton from '../IconButton'\\\\\\\\nimport { IFilterMultiselectOption } from '../../molecules/FilterMultiselect/interfaces'\\\\\\\\nimport FilterMultiselect from '../../molecules/FilterMultiselect'\\\\\\\\nimport { action } from '@storybook/addon-actions'\\\\\\\\nimport { boolean, text } from '@storybook/addon-knobs'\\\\\\\\nimport { DateRangePicker } from '../../molecules/DatePicker'\\\\\\\\nimport { tDateRangeChildren } from '../../molecules/DatePicker/interfaces'\\\\\\\\nimport TextInput from '../../molecules/TextInput'\\\\\\\\nimport Position from '../../molecules/Position'\\\\\\\\n\\\\\\\\nexport default {\\\\\\\\n  title: `${path}/FilterDrawer`,\\\\\\\\n  component: FilterDrawer\\\\\\\\n}\\\\\\\\n\\\\\\\\nconst options: IFilterMultiselectOption[] = [\\\\\\\\n  { id: '1', label: 'Powai', value: 'powai' },\\\\\\\\n  { id: '2', label: 'Andheri', value: 'andheri' },\\\\\\\\n  { id: '3', label: 'Bhandup', value: 'bhandup' }\\\\\\\\n]\\\\\\\\n\\\\\\\\nconst getFormattedDate = (date: Date) => {\\\\\\\\n  const todayTime = date\\\\\\\\n  const month = todayTime.getMonth() + 1\\\\\\\\n  const day = todayTime.getDate()\\\\\\\\n  const year = todayTime.getFullYear()\\\\\\\\n  const hours = todayTime.getHours()\\\\\\\\n  const minutes = todayTime.getMinutes()\\\\\\\\n  return month + '/' + day + '/' + year + ' ' + hours + ':' + minutes\\\\\\\\n}\\\\\\\\n\\\\\\\\nexport const withBasic = () => {\\\\\\\\n  const [isFilterOpen, setFilterOpen] = React.useState<boolean>(true)\\\\\\\\n\\\\\\\\n  // state that manages DatePickers value\\\\\\\\n\\\\\\\\n  return (\\\\\\\\n    <ThemeWrapper>\\\\\\\\n      <IconButton\\\\\\\\n        iconVariant='icomoon-funel'\\\\\\\\n        onClick={() => setFilterOpen((f) => !f)}\\\\\\\\n      >\\\\\\\\n        Filter\\\\\\\\n      </IconButton>\\\\\\\\n\\\\\\\\n      <FilterDrawer isOpen={isFilterOpen}>\\\\\\\\n        <Box display='flex' flexDirection='column' fullWidth fullHeight>\\\\\\\\n          <ModalHeader\\\\\\\\n            headerTitle='Analytics Filter'\\\\\\\\n            handleClose={() => setFilterOpen(false)}\\\\\\\\n            width='100%'\\\\\\\\n          />\\\\\\\\n\\\\\\\\n          {/* element that holds DateRangePickers value */}\\\\\\\\n          <Position type='relative'>\\\\\\\\n            <DateRangePicker\\\\\\\\n              onFromChange={action('From Clicked')}\\\\\\\\n              onToChange={action('To Clicked')}\\\\\\\\n              onApply={action('Apply Clicked')}\\\\\\\\n              onCancel={action('Cancel Clicked')}\\\\\\\\n              label={text('Label', 'Date Range')}\\\\\\\\n              variant='daterange'\\\\\\\\n              timeFormat={24}\\\\\\\\n              showTime={boolean('Show time', true)}\\\\\\\\n              startDate={new Date()}\\\\\\\\n              fromDateFormatter={getFormattedDate}\\\\\\\\n              toDateFormatter={getFormattedDate}\\\\\\\\n              style={{\\\\\\\\n                background: '#ccc',\\\\\\\\n                right: '0px',\\\\\\\\n                position: 'fixed'\\\\\\\\n              }}\\\\\\\\n            >\\\\\\\\n              {({ value, open, setOpen }: tDateRangeChildren) => (\\\\\\\\n                <Box fullWidth>\\\\\\\\n                  <TextInput\\\\\\\\n                    id='someId'\\\\\\\\n                    name={name}\\\\\\\\n                    className='someClassname'\\\\\\\\n                    label='Holidays'\\\\\\\\n                    variant='basic'\\\\\\\\n                    labelColor='text.inputLabel.default'\\\\\\\\n                    placeholder='Please Click Here'\\\\\\\\n                    fullWidth\\\\\\\\n                    value={value?.toString()}\\\\\\\\n                    onChange={action('On change clicked')}\\\\\\\\n                    onClick={() => setOpen(!open)}\\\\\\\\n                  />\\\\\\\\n                </Box>\\\\\\\\n              )}\\\\\\\\n            </DateRangePicker>\\\\\\\\n          </Position>\\\\\\\\n\\\\\\\\n          <Box\\\\\\\\n            flexGrow={1}\\\\\\\\n            style={{ overflow: 'auto' }}\\\\\\\\n            p='15px'\\\\\\\\n            fullWidth\\\\\\\\n            mt='50px'\\\\\\\\n          >\\\\\\\\n            <FilterMultiselect\\\\\\\\n              id='branch'\\\\\\\\n              label='Hub'\\\\\\\\n              options={options}\\\\\\\\n              onSelectionChange={action('On Change')}\\\\\\\\n            />\\\\\\\\n          </Box>\\\\\\\\n          <Box\\\\\\\\n            display='flex'\\\\\\\\n            justifyContent='flex-end'\\\\\\\\n            p='15px'\\\\\\\\n            horizontalSpacing='10px'\\\\\\\\n            fullWidth\\\\\\\\n          >\\\\\\\\n            <IconButton iconVariant='icomoon-tick-circled' primary>\\\\\\\\n              Apply\\\\\\\\n            </IconButton>\\\\\\\\n            <IconButton iconVariant='icomoon-back'>Reset</IconButton>\\\\\\\\n          </Box>\\\\\\\\n        </Box>\\\\\\\\n      </FilterDrawer>\\\\\\\\n    </ThemeWrapper>\\\\\\\\n  )\\\\\\\\n}\\\\\\\\n\\\\\\\",\\\\\\\"locationsMap\\\\\\\":{}},},\\\\n  title: `${path}/FilterDrawer`,\\\\n  component: FilterDrawer\\\\n}\\\\n\\\\nconst options: IFilterMultiselectOption[] = [\\\\n  { id: '1', label: 'Powai', value: 'powai' },\\\\n  { id: '2', label: 'Andheri', value: 'andheri' },\\\\n  { id: '3', label: 'Bhandup', value: 'bhandup' }\\\\n]\\\\n\\\\nconst getFormattedDate = (date: Date) => {\\\\n  const todayTime = date\\\\n  const month = todayTime.getMonth() + 1\\\\n  const day = todayTime.getDate()\\\\n  const year = todayTime.getFullYear()\\\\n  const hours = todayTime.getHours()\\\\n  const minutes = todayTime.getMinutes()\\\\n  return month + '/' + day + '/' + year + ' ' + hours + ':' + minutes\\\\n}\\\\n\\\\nexport const withBasic = addSourceDecorator(() => {\\\\n  const [isFilterOpen, setFilterOpen] = React.useState<boolean>(true)\\\\n\\\\n  // state that manages DatePickers value\\\\n\\\\n  return (\\\\n    <ThemeWrapper>\\\\n      <IconButton\\\\n        iconVariant='icomoon-funel'\\\\n        onClick={() => setFilterOpen((f) => !f)}\\\\n      >\\\\n        Filter\\\\n      </IconButton>\\\\n\\\\n      <FilterDrawer isOpen={isFilterOpen}>\\\\n        <Box display='flex' flexDirection='column' fullWidth fullHeight>\\\\n          <ModalHeader\\\\n            headerTitle='Analytics Filter'\\\\n            handleClose={() => setFilterOpen(false)}\\\\n            width='100%'\\\\n          />\\\\n\\\\n          {/* element that holds DateRangePickers value */}\\\\n          <Position type='relative'>\\\\n            <DateRangePicker\\\\n              onFromChange={action('From Clicked')}\\\\n              onToChange={action('To Clicked')}\\\\n              onApply={action('Apply Clicked')}\\\\n              onCancel={action('Cancel Clicked')}\\\\n              label={text('Label', 'Date Range')}\\\\n              variant='daterange'\\\\n              timeFormat={24}\\\\n              showTime={boolean('Show time', true)}\\\\n              startDate={new Date()}\\\\n              fromDateFormatter={getFormattedDate}\\\\n              toDateFormatter={getFormattedDate}\\\\n              style={{\\\\n                background: '#ccc',\\\\n                right: '0px',\\\\n                position: 'fixed'\\\\n              }}\\\\n            >\\\\n              {({ value, open, setOpen }: tDateRangeChildren) => (\\\\n                <Box fullWidth>\\\\n                  <TextInput\\\\n                    id='someId'\\\\n                    name={name}\\\\n                    className='someClassname'\\\\n                    label='Holidays'\\\\n                    variant='basic'\\\\n                    labelColor='text.inputLabel.default'\\\\n                    placeholder='Please Click Here'\\\\n                    fullWidth\\\\n                    value={value?.toString()}\\\\n                    onChange={action('On change clicked')}\\\\n                    onClick={() => setOpen(!open)}\\\\n                  />\\\\n                </Box>\\\\n              )}\\\\n            </DateRangePicker>\\\\n          </Position>\\\\n\\\\n          <Box\\\\n            flexGrow={1}\\\\n            style={{ overflow: 'auto' }}\\\\n            p='15px'\\\\n            fullWidth\\\\n            mt='50px'\\\\n          >\\\\n            <FilterMultiselect\\\\n              id='branch'\\\\n              label='Hub'\\\\n              options={options}\\\\n              onSelectionChange={action('On Change')}\\\\n            />\\\\n          </Box>\\\\n          <Box\\\\n            display='flex'\\\\n            justifyContent='flex-end'\\\\n            p='15px'\\\\n            horizontalSpacing='10px'\\\\n            fullWidth\\\\n          >\\\\n            <IconButton iconVariant='icomoon-tick-circled' primary>\\\\n              Apply\\\\n            </IconButton>\\\\n            <IconButton iconVariant='icomoon-back'>Reset</IconButton>\\\\n          </Box>\\\\n        </Box>\\\\n      </FilterDrawer>\\\\n    </ThemeWrapper>\\\\n  )\\\\n}, {__STORY__, __ADDS_MAP__,__MAIN_FILE_LOCATION__,__MODULE_DEPENDENCIES__,__LOCAL_DEPENDENCIES__,__SOURCE_PREFIX__,__IDS_TO_FRAMEWORKS__});\\\";\\n// @ts-ignore\\nvar __ADDS_MAP__ = {};\\n// @ts-ignore\\nvar __MAIN_FILE_LOCATION__ = \\\"/FilterDrawer.stories.tsx\\\";\\n// @ts-ignore\\nvar __MODULE_DEPENDENCIES__ = [];\\n// @ts-ignore\\nvar __LOCAL_DEPENDENCIES__ = {};\\n// @ts-ignore\\nvar __IDS_TO_FRAMEWORKS__ = {};\\n        \\n\\n\\n// @ts-nocheck\\n// @ts-ignore\\nvar withSourceLoader = require('@storybook/source-loader/preview').withSource;\\n// @ts-ignore\\nvar addSourceDecorator = require(\\\"@storybook/source-loader/preview\\\").addSource;\\n// @ts-ignore\\nvar __SOURCE_PREFIX__ = \\\"/Users/farhanansari/Code/ui-library/src/components/atoms/FilterDrawer\\\";\\n// @ts-ignore\\nvar __STORY__ = \\\"import React from 'react'\\\\nimport FilterDrawer from '.'\\\\nimport { path } from '..'\\\\nimport ThemeWrapper from '../../../utilities/components/ThemeWrapper'\\\\n\\\\nimport ModalHeader from '../../molecules/ModalHeader'\\\\nimport Box from '../Box'\\\\nimport IconButton from '../IconButton'\\\\nimport { IFilterMultiselectOption } from '../../molecules/FilterMultiselect/interfaces'\\\\nimport FilterMultiselect from '../../molecules/FilterMultiselect'\\\\nimport { action } from '@storybook/addon-actions'\\\\nimport { boolean, text } from '@storybook/addon-knobs'\\\\nimport { DateRangePicker } from '../../molecules/DatePicker'\\\\nimport { tDateRangeChildren } from '../../molecules/DatePicker/interfaces'\\\\nimport TextInput from '../../molecules/TextInput'\\\\nimport Position from '../../molecules/Position'\\\\n\\\\nexport default {\\\\n  title: `${path}/FilterDrawer`,\\\\n  component: FilterDrawer\\\\n}\\\\n\\\\nconst options: IFilterMultiselectOption[] = [\\\\n  { id: '1', label: 'Powai', value: 'powai' },\\\\n  { id: '2', label: 'Andheri', value: 'andheri' },\\\\n  { id: '3', label: 'Bhandup', value: 'bhandup' }\\\\n]\\\\n\\\\nconst getFormattedDate = (date: Date) => {\\\\n  const todayTime = date\\\\n  const month = todayTime.getMonth() + 1\\\\n  const day = todayTime.getDate()\\\\n  const year = todayTime.getFullYear()\\\\n  const hours = todayTime.getHours()\\\\n  const minutes = todayTime.getMinutes()\\\\n  return month + '/' + day + '/' + year + ' ' + hours + ':' + minutes\\\\n}\\\\n\\\\nexport const withBasic = () => {\\\\n  const [isFilterOpen, setFilterOpen] = React.useState<boolean>(true)\\\\n\\\\n  // state that manages DatePickers value\\\\n\\\\n  return (\\\\n    <ThemeWrapper>\\\\n      <IconButton\\\\n        iconVariant='icomoon-funel'\\\\n        onClick={() => setFilterOpen((f) => !f)}\\\\n      >\\\\n        Filter\\\\n      </IconButton>\\\\n\\\\n      <FilterDrawer isOpen={isFilterOpen}>\\\\n        <Box display='flex' flexDirection='column' fullWidth fullHeight>\\\\n          <ModalHeader\\\\n            headerTitle='Analytics Filter'\\\\n            handleClose={() => setFilterOpen(false)}\\\\n            width='100%'\\\\n          />\\\\n\\\\n          {/* element that holds DateRangePickers value */}\\\\n          <Position type='relative'>\\\\n            <DateRangePicker\\\\n              onFromChange={action('From Clicked')}\\\\n              onToChange={action('To Clicked')}\\\\n              onApply={action('Apply Clicked')}\\\\n              onCancel={action('Cancel Clicked')}\\\\n              label={text('Label', 'Date Range')}\\\\n              variant='daterange'\\\\n              timeFormat={24}\\\\n              showTime={boolean('Show time', true)}\\\\n              startDate={new Date()}\\\\n              fromDateFormatter={getFormattedDate}\\\\n              toDateFormatter={getFormattedDate}\\\\n              style={{\\\\n                background: '#ccc',\\\\n                right: '0px',\\\\n                position: 'fixed'\\\\n              }}\\\\n            >\\\\n              {({ value, open, setOpen }: tDateRangeChildren) => (\\\\n                <Box fullWidth>\\\\n                  <TextInput\\\\n                    id='someId'\\\\n                    name={name}\\\\n                    className='someClassname'\\\\n                    label='Holidays'\\\\n                    variant='basic'\\\\n                    labelColor='text.inputLabel.default'\\\\n                    placeholder='Please Click Here'\\\\n                    fullWidth\\\\n                    value={value?.toString()}\\\\n                    onChange={action('On change clicked')}\\\\n                    onClick={() => setOpen(!open)}\\\\n                  />\\\\n                </Box>\\\\n              )}\\\\n            </DateRangePicker>\\\\n          </Position>\\\\n\\\\n          <Box\\\\n            flexGrow={1}\\\\n            style={{ overflow: 'auto' }}\\\\n            p='15px'\\\\n            fullWidth\\\\n            mt='50px'\\\\n          >\\\\n            <FilterMultiselect\\\\n              id='branch'\\\\n              label='Hub'\\\\n              options={options}\\\\n              onSelectionChange={action('On Change')}\\\\n            />\\\\n          </Box>\\\\n          <Box\\\\n            display='flex'\\\\n            justifyContent='flex-end'\\\\n            p='15px'\\\\n            horizontalSpacing='10px'\\\\n            fullWidth\\\\n          >\\\\n            <IconButton iconVariant='icomoon-tick-circled' primary>\\\\n              Apply\\\\n            </IconButton>\\\\n            <IconButton iconVariant='icomoon-back'>Reset</IconButton>\\\\n          </Box>\\\\n        </Box>\\\\n      </FilterDrawer>\\\\n    </ThemeWrapper>\\\\n  )\\\\n}\\\\n\\\";\\n// @ts-ignore\\nvar __ADDS_MAP__ = {};\\n// @ts-ignore\\nvar __MAIN_FILE_LOCATION__ = \\\"/FilterDrawer.stories.tsx\\\";\\n// @ts-ignore\\nvar __MODULE_DEPENDENCIES__ = [];\\n// @ts-ignore\\nvar __LOCAL_DEPENDENCIES__ = {};\\n// @ts-ignore\\nvar __IDS_TO_FRAMEWORKS__ = {};\\n        \\nimport React from 'react'\\nimport FilterDrawer from '.'\\nimport { path } from '..'\\nimport ThemeWrapper from '../../../utilities/components/ThemeWrapper'\\n\\nimport ModalHeader from '../../molecules/ModalHeader'\\nimport Box from '../Box'\\nimport IconButton from '../IconButton'\\nimport { IFilterMultiselectOption } from '../../molecules/FilterMultiselect/interfaces'\\nimport FilterMultiselect from '../../molecules/FilterMultiselect'\\nimport { action } from '@storybook/addon-actions'\\nimport { boolean, text } from '@storybook/addon-knobs'\\nimport { DateRangePicker } from '../../molecules/DatePicker'\\nimport { tDateRangeChildren } from '../../molecules/DatePicker/interfaces'\\nimport TextInput from '../../molecules/TextInput'\\nimport Position from '../../molecules/Position'\\n\\nexport default {parameters: {\\\"storySource\\\":{\\\"source\\\":\\\"\\\\n\\\\n// @ts-nocheck\\\\n// @ts-ignore\\\\nvar withSourceLoader = require('@storybook/source-loader/preview').withSource;\\\\n// @ts-ignore\\\\nvar addSourceDecorator = require(\\\\\\\"@storybook/source-loader/preview\\\\\\\").addSource;\\\\n// @ts-ignore\\\\nvar __SOURCE_PREFIX__ = \\\\\\\"/Users/farhanansari/Code/ui-library/src/components/atoms/FilterDrawer\\\\\\\";\\\\n// @ts-ignore\\\\nvar __STORY__ = \\\\\\\"import React from 'react'\\\\\\\\nimport FilterDrawer from '.'\\\\\\\\nimport { path } from '..'\\\\\\\\nimport ThemeWrapper from '../../../utilities/components/ThemeWrapper'\\\\\\\\n\\\\\\\\nimport ModalHeader from '../../molecules/ModalHeader'\\\\\\\\nimport Box from '../Box'\\\\\\\\nimport IconButton from '../IconButton'\\\\\\\\nimport { IFilterMultiselectOption } from '../../molecules/FilterMultiselect/interfaces'\\\\\\\\nimport FilterMultiselect from '../../molecules/FilterMultiselect'\\\\\\\\nimport { action } from '@storybook/addon-actions'\\\\\\\\nimport { boolean, text } from '@storybook/addon-knobs'\\\\\\\\nimport { DateRangePicker } from '../../molecules/DatePicker'\\\\\\\\nimport { tDateRangeChildren } from '../../molecules/DatePicker/interfaces'\\\\\\\\nimport TextInput from '../../molecules/TextInput'\\\\\\\\nimport Position from '../../molecules/Position'\\\\\\\\n\\\\\\\\nexport default {\\\\\\\\n  title: `${path}/FilterDrawer`,\\\\\\\\n  component: FilterDrawer\\\\\\\\n}\\\\\\\\n\\\\\\\\nconst options: IFilterMultiselectOption[] = [\\\\\\\\n  { id: '1', label: 'Powai', value: 'powai' },\\\\\\\\n  { id: '2', label: 'Andheri', value: 'andheri' },\\\\\\\\n  { id: '3', label: 'Bhandup', value: 'bhandup' }\\\\\\\\n]\\\\\\\\n\\\\\\\\nconst getFormattedDate = (date: Date) => {\\\\\\\\n  const todayTime = date\\\\\\\\n  const month = todayTime.getMonth() + 1\\\\\\\\n  const day = todayTime.getDate()\\\\\\\\n  const year = todayTime.getFullYear()\\\\\\\\n  const hours = todayTime.getHours()\\\\\\\\n  const minutes = todayTime.getMinutes()\\\\\\\\n  return month + '/' + day + '/' + year + ' ' + hours + ':' + minutes\\\\\\\\n}\\\\\\\\n\\\\\\\\nexport const withBasic = () => {\\\\\\\\n  const [isFilterOpen, setFilterOpen] = React.useState<boolean>(true)\\\\\\\\n\\\\\\\\n  // state that manages DatePickers value\\\\\\\\n\\\\\\\\n  return (\\\\\\\\n    <ThemeWrapper>\\\\\\\\n      <IconButton\\\\\\\\n        iconVariant='icomoon-funel'\\\\\\\\n        onClick={() => setFilterOpen((f) => !f)}\\\\\\\\n      >\\\\\\\\n        Filter\\\\\\\\n      </IconButton>\\\\\\\\n\\\\\\\\n      <FilterDrawer isOpen={isFilterOpen}>\\\\\\\\n        <Box display='flex' flexDirection='column' fullWidth fullHeight>\\\\\\\\n          <ModalHeader\\\\\\\\n            headerTitle='Analytics Filter'\\\\\\\\n            handleClose={() => setFilterOpen(false)}\\\\\\\\n            width='100%'\\\\\\\\n          />\\\\\\\\n\\\\\\\\n          {/* element that holds DateRangePickers value */}\\\\\\\\n          <Position type='relative'>\\\\\\\\n            <DateRangePicker\\\\\\\\n              onFromChange={action('From Clicked')}\\\\\\\\n              onToChange={action('To Clicked')}\\\\\\\\n              onApply={action('Apply Clicked')}\\\\\\\\n              onCancel={action('Cancel Clicked')}\\\\\\\\n              label={text('Label', 'Date Range')}\\\\\\\\n              variant='daterange'\\\\\\\\n              timeFormat={24}\\\\\\\\n              showTime={boolean('Show time', true)}\\\\\\\\n              startDate={new Date()}\\\\\\\\n              fromDateFormatter={getFormattedDate}\\\\\\\\n              toDateFormatter={getFormattedDate}\\\\\\\\n              style={{\\\\\\\\n                background: '#ccc',\\\\\\\\n                right: '0px',\\\\\\\\n                position: 'fixed'\\\\\\\\n              }}\\\\\\\\n            >\\\\\\\\n              {({ value, open, setOpen }: tDateRangeChildren) => (\\\\\\\\n                <Box fullWidth>\\\\\\\\n                  <TextInput\\\\\\\\n                    id='someId'\\\\\\\\n                    name={name}\\\\\\\\n                    className='someClassname'\\\\\\\\n                    label='Holidays'\\\\\\\\n                    variant='basic'\\\\\\\\n                    labelColor='text.inputLabel.default'\\\\\\\\n                    placeholder='Please Click Here'\\\\\\\\n                    fullWidth\\\\\\\\n                    value={value?.toString()}\\\\\\\\n                    onChange={action('On change clicked')}\\\\\\\\n                    onClick={() => setOpen(!open)}\\\\\\\\n                  />\\\\\\\\n                </Box>\\\\\\\\n              )}\\\\\\\\n            </DateRangePicker>\\\\\\\\n          </Position>\\\\\\\\n\\\\\\\\n          <Box\\\\\\\\n            flexGrow={1}\\\\\\\\n            style={{ overflow: 'auto' }}\\\\\\\\n            p='15px'\\\\\\\\n            fullWidth\\\\\\\\n            mt='50px'\\\\\\\\n          >\\\\\\\\n            <FilterMultiselect\\\\\\\\n              id='branch'\\\\\\\\n              label='Hub'\\\\\\\\n              options={options}\\\\\\\\n              onSelectionChange={action('On Change')}\\\\\\\\n            />\\\\\\\\n          </Box>\\\\\\\\n          <Box\\\\\\\\n            display='flex'\\\\\\\\n            justifyContent='flex-end'\\\\\\\\n            p='15px'\\\\\\\\n            horizontalSpacing='10px'\\\\\\\\n            fullWidth\\\\\\\\n          >\\\\\\\\n            <IconButton iconVariant='icomoon-tick-circled' primary>\\\\\\\\n              Apply\\\\\\\\n            </IconButton>\\\\\\\\n            <IconButton iconVariant='icomoon-back'>Reset</IconButton>\\\\\\\\n          </Box>\\\\\\\\n        </Box>\\\\\\\\n      </FilterDrawer>\\\\\\\\n    </ThemeWrapper>\\\\\\\\n  )\\\\\\\\n}\\\\\\\\n\\\\\\\";\\\\n// @ts-ignore\\\\nvar __ADDS_MAP__ = {};\\\\n// @ts-ignore\\\\nvar __MAIN_FILE_LOCATION__ = \\\\\\\"/FilterDrawer.stories.tsx\\\\\\\";\\\\n// @ts-ignore\\\\nvar __MODULE_DEPENDENCIES__ = [];\\\\n// @ts-ignore\\\\nvar __LOCAL_DEPENDENCIES__ = {};\\\\n// @ts-ignore\\\\nvar __IDS_TO_FRAMEWORKS__ = {};\\\\n        \\\\nimport React from 'react'\\\\nimport FilterDrawer from '.'\\\\nimport { path } from '..'\\\\nimport ThemeWrapper from '../../../utilities/components/ThemeWrapper'\\\\n\\\\nimport ModalHeader from '../../molecules/ModalHeader'\\\\nimport Box from '../Box'\\\\nimport IconButton from '../IconButton'\\\\nimport { IFilterMultiselectOption } from '../../molecules/FilterMultiselect/interfaces'\\\\nimport FilterMultiselect from '../../molecules/FilterMultiselect'\\\\nimport { action } from '@storybook/addon-actions'\\\\nimport { boolean, text } from '@storybook/addon-knobs'\\\\nimport { DateRangePicker } from '../../molecules/DatePicker'\\\\nimport { tDateRangeChildren } from '../../molecules/DatePicker/interfaces'\\\\nimport TextInput from '../../molecules/TextInput'\\\\nimport Position from '../../molecules/Position'\\\\n\\\\nexport default {parameters: {\\\\\\\"storySource\\\\\\\":{\\\\\\\"source\\\\\\\":\\\\\\\"import React from 'react'\\\\\\\\nimport FilterDrawer from '.'\\\\\\\\nimport { path } from '..'\\\\\\\\nimport ThemeWrapper from '../../../utilities/components/ThemeWrapper'\\\\\\\\n\\\\\\\\nimport ModalHeader from '../../molecules/ModalHeader'\\\\\\\\nimport Box from '../Box'\\\\\\\\nimport IconButton from '../IconButton'\\\\\\\\nimport { IFilterMultiselectOption } from '../../molecules/FilterMultiselect/interfaces'\\\\\\\\nimport FilterMultiselect from '../../molecules/FilterMultiselect'\\\\\\\\nimport { action } from '@storybook/addon-actions'\\\\\\\\nimport { boolean, text } from '@storybook/addon-knobs'\\\\\\\\nimport { DateRangePicker } from '../../molecules/DatePicker'\\\\\\\\nimport { tDateRangeChildren } from '../../molecules/DatePicker/interfaces'\\\\\\\\nimport TextInput from '../../molecules/TextInput'\\\\\\\\nimport Position from '../../molecules/Position'\\\\\\\\n\\\\\\\\nexport default {\\\\\\\\n  title: `${path}/FilterDrawer`,\\\\\\\\n  component: FilterDrawer\\\\\\\\n}\\\\\\\\n\\\\\\\\nconst options: IFilterMultiselectOption[] = [\\\\\\\\n  { id: '1', label: 'Powai', value: 'powai' },\\\\\\\\n  { id: '2', label: 'Andheri', value: 'andheri' },\\\\\\\\n  { id: '3', label: 'Bhandup', value: 'bhandup' }\\\\\\\\n]\\\\\\\\n\\\\\\\\nconst getFormattedDate = (date: Date) => {\\\\\\\\n  const todayTime = date\\\\\\\\n  const month = todayTime.getMonth() + 1\\\\\\\\n  const day = todayTime.getDate()\\\\\\\\n  const year = todayTime.getFullYear()\\\\\\\\n  const hours = todayTime.getHours()\\\\\\\\n  const minutes = todayTime.getMinutes()\\\\\\\\n  return month + '/' + day + '/' + year + ' ' + hours + ':' + minutes\\\\\\\\n}\\\\\\\\n\\\\\\\\nexport const withBasic = () => {\\\\\\\\n  const [isFilterOpen, setFilterOpen] = React.useState<boolean>(true)\\\\\\\\n\\\\\\\\n  // state that manages DatePickers value\\\\\\\\n\\\\\\\\n  return (\\\\\\\\n    <ThemeWrapper>\\\\\\\\n      <IconButton\\\\\\\\n        iconVariant='icomoon-funel'\\\\\\\\n        onClick={() => setFilterOpen((f) => !f)}\\\\\\\\n      >\\\\\\\\n        Filter\\\\\\\\n      </IconButton>\\\\\\\\n\\\\\\\\n      <FilterDrawer isOpen={isFilterOpen}>\\\\\\\\n        <Box display='flex' flexDirection='column' fullWidth fullHeight>\\\\\\\\n          <ModalHeader\\\\\\\\n            headerTitle='Analytics Filter'\\\\\\\\n            handleClose={() => setFilterOpen(false)}\\\\\\\\n            width='100%'\\\\\\\\n          />\\\\\\\\n\\\\\\\\n          {/* element that holds DateRangePickers value */}\\\\\\\\n          <Position type='relative'>\\\\\\\\n            <DateRangePicker\\\\\\\\n              onFromChange={action('From Clicked')}\\\\\\\\n              onToChange={action('To Clicked')}\\\\\\\\n              onApply={action('Apply Clicked')}\\\\\\\\n              onCancel={action('Cancel Clicked')}\\\\\\\\n              label={text('Label', 'Date Range')}\\\\\\\\n              variant='daterange'\\\\\\\\n              timeFormat={24}\\\\\\\\n              showTime={boolean('Show time', true)}\\\\\\\\n              startDate={new Date()}\\\\\\\\n              fromDateFormatter={getFormattedDate}\\\\\\\\n              toDateFormatter={getFormattedDate}\\\\\\\\n              style={{\\\\\\\\n                background: '#ccc',\\\\\\\\n                right: '0px',\\\\\\\\n                position: 'fixed'\\\\\\\\n              }}\\\\\\\\n            >\\\\\\\\n              {({ value, open, setOpen }: tDateRangeChildren) => (\\\\\\\\n                <Box fullWidth>\\\\\\\\n                  <TextInput\\\\\\\\n                    id='someId'\\\\\\\\n                    name={name}\\\\\\\\n                    className='someClassname'\\\\\\\\n                    label='Holidays'\\\\\\\\n                    variant='basic'\\\\\\\\n                    labelColor='text.inputLabel.default'\\\\\\\\n                    placeholder='Please Click Here'\\\\\\\\n                    fullWidth\\\\\\\\n                    value={value?.toString()}\\\\\\\\n                    onChange={action('On change clicked')}\\\\\\\\n                    onClick={() => setOpen(!open)}\\\\\\\\n                  />\\\\\\\\n                </Box>\\\\\\\\n              )}\\\\\\\\n            </DateRangePicker>\\\\\\\\n          </Position>\\\\\\\\n\\\\\\\\n          <Box\\\\\\\\n            flexGrow={1}\\\\\\\\n            style={{ overflow: 'auto' }}\\\\\\\\n            p='15px'\\\\\\\\n            fullWidth\\\\\\\\n            mt='50px'\\\\\\\\n          >\\\\\\\\n            <FilterMultiselect\\\\\\\\n              id='branch'\\\\\\\\n              label='Hub'\\\\\\\\n              options={options}\\\\\\\\n              onSelectionChange={action('On Change')}\\\\\\\\n            />\\\\\\\\n          </Box>\\\\\\\\n          <Box\\\\\\\\n            display='flex'\\\\\\\\n            justifyContent='flex-end'\\\\\\\\n            p='15px'\\\\\\\\n            horizontalSpacing='10px'\\\\\\\\n            fullWidth\\\\\\\\n          >\\\\\\\\n            <IconButton iconVariant='icomoon-tick-circled' primary>\\\\\\\\n              Apply\\\\\\\\n            </IconButton>\\\\\\\\n            <IconButton iconVariant='icomoon-back'>Reset</IconButton>\\\\\\\\n          </Box>\\\\\\\\n        </Box>\\\\\\\\n      </FilterDrawer>\\\\\\\\n    </ThemeWrapper>\\\\\\\\n  )\\\\\\\\n}\\\\\\\\n\\\\\\\",\\\\\\\"locationsMap\\\\\\\":{}},},\\\\n  title: `${path}/FilterDrawer`,\\\\n  component: FilterDrawer\\\\n}\\\\n\\\\nconst options: IFilterMultiselectOption[] = [\\\\n  { id: '1', label: 'Powai', value: 'powai' },\\\\n  { id: '2', label: 'Andheri', value: 'andheri' },\\\\n  { id: '3', label: 'Bhandup', value: 'bhandup' }\\\\n]\\\\n\\\\nconst getFormattedDate = (date: Date) => {\\\\n  const todayTime = date\\\\n  const month = todayTime.getMonth() + 1\\\\n  const day = todayTime.getDate()\\\\n  const year = todayTime.getFullYear()\\\\n  const hours = todayTime.getHours()\\\\n  const minutes = todayTime.getMinutes()\\\\n  return month + '/' + day + '/' + year + ' ' + hours + ':' + minutes\\\\n}\\\\n\\\\nexport const withBasic = addSourceDecorator(() => {\\\\n  const [isFilterOpen, setFilterOpen] = React.useState<boolean>(true)\\\\n\\\\n  // state that manages DatePickers value\\\\n\\\\n  return (\\\\n    <ThemeWrapper>\\\\n      <IconButton\\\\n        iconVariant='icomoon-funel'\\\\n        onClick={() => setFilterOpen((f) => !f)}\\\\n      >\\\\n        Filter\\\\n      </IconButton>\\\\n\\\\n      <FilterDrawer isOpen={isFilterOpen}>\\\\n        <Box display='flex' flexDirection='column' fullWidth fullHeight>\\\\n          <ModalHeader\\\\n            headerTitle='Analytics Filter'\\\\n            handleClose={() => setFilterOpen(false)}\\\\n            width='100%'\\\\n          />\\\\n\\\\n          {/* element that holds DateRangePickers value */}\\\\n          <Position type='relative'>\\\\n            <DateRangePicker\\\\n              onFromChange={action('From Clicked')}\\\\n              onToChange={action('To Clicked')}\\\\n              onApply={action('Apply Clicked')}\\\\n              onCancel={action('Cancel Clicked')}\\\\n              label={text('Label', 'Date Range')}\\\\n              variant='daterange'\\\\n              timeFormat={24}\\\\n              showTime={boolean('Show time', true)}\\\\n              startDate={new Date()}\\\\n              fromDateFormatter={getFormattedDate}\\\\n              toDateFormatter={getFormattedDate}\\\\n              style={{\\\\n                background: '#ccc',\\\\n                right: '0px',\\\\n                position: 'fixed'\\\\n              }}\\\\n            >\\\\n              {({ value, open, setOpen }: tDateRangeChildren) => (\\\\n                <Box fullWidth>\\\\n                  <TextInput\\\\n                    id='someId'\\\\n                    name={name}\\\\n                    className='someClassname'\\\\n                    label='Holidays'\\\\n                    variant='basic'\\\\n                    labelColor='text.inputLabel.default'\\\\n                    placeholder='Please Click Here'\\\\n                    fullWidth\\\\n                    value={value?.toString()}\\\\n                    onChange={action('On change clicked')}\\\\n                    onClick={() => setOpen(!open)}\\\\n                  />\\\\n                </Box>\\\\n              )}\\\\n            </DateRangePicker>\\\\n          </Position>\\\\n\\\\n          <Box\\\\n            flexGrow={1}\\\\n            style={{ overflow: 'auto' }}\\\\n            p='15px'\\\\n            fullWidth\\\\n            mt='50px'\\\\n          >\\\\n            <FilterMultiselect\\\\n              id='branch'\\\\n              label='Hub'\\\\n              options={options}\\\\n              onSelectionChange={action('On Change')}\\\\n            />\\\\n          </Box>\\\\n          <Box\\\\n            display='flex'\\\\n            justifyContent='flex-end'\\\\n            p='15px'\\\\n            horizontalSpacing='10px'\\\\n            fullWidth\\\\n          >\\\\n            <IconButton iconVariant='icomoon-tick-circled' primary>\\\\n              Apply\\\\n            </IconButton>\\\\n            <IconButton iconVariant='icomoon-back'>Reset</IconButton>\\\\n          </Box>\\\\n        </Box>\\\\n      </FilterDrawer>\\\\n    </ThemeWrapper>\\\\n  )\\\\n}, {__STORY__, __ADDS_MAP__,__MAIN_FILE_LOCATION__,__MODULE_DEPENDENCIES__,__LOCAL_DEPENDENCIES__,__SOURCE_PREFIX__,__IDS_TO_FRAMEWORKS__});\\\",\\\"locationsMap\\\":{}},\\\"storySource\\\":{\\\"source\\\":\\\"import React from 'react'\\\\nimport FilterDrawer from '.'\\\\nimport { path } from '..'\\\\nimport ThemeWrapper from '../../../utilities/components/ThemeWrapper'\\\\n\\\\nimport ModalHeader from '../../molecules/ModalHeader'\\\\nimport Box from '../Box'\\\\nimport IconButton from '../IconButton'\\\\nimport { IFilterMultiselectOption } from '../../molecules/FilterMultiselect/interfaces'\\\\nimport FilterMultiselect from '../../molecules/FilterMultiselect'\\\\nimport { action } from '@storybook/addon-actions'\\\\nimport { boolean, text } from '@storybook/addon-knobs'\\\\nimport { DateRangePicker } from '../../molecules/DatePicker'\\\\nimport { tDateRangeChildren } from '../../molecules/DatePicker/interfaces'\\\\nimport TextInput from '../../molecules/TextInput'\\\\nimport Position from '../../molecules/Position'\\\\n\\\\nexport default {\\\\n  title: `${path}/FilterDrawer`,\\\\n  component: FilterDrawer\\\\n}\\\\n\\\\nconst options: IFilterMultiselectOption[] = [\\\\n  { id: '1', label: 'Powai', value: 'powai' },\\\\n  { id: '2', label: 'Andheri', value: 'andheri' },\\\\n  { id: '3', label: 'Bhandup', value: 'bhandup' }\\\\n]\\\\n\\\\nconst getFormattedDate = (date: Date) => {\\\\n  const todayTime = date\\\\n  const month = todayTime.getMonth() + 1\\\\n  const day = todayTime.getDate()\\\\n  const year = todayTime.getFullYear()\\\\n  const hours = todayTime.getHours()\\\\n  const minutes = todayTime.getMinutes()\\\\n  return month + '/' + day + '/' + year + ' ' + hours + ':' + minutes\\\\n}\\\\n\\\\nexport const withBasic = () => {\\\\n  const [isFilterOpen, setFilterOpen] = React.useState<boolean>(true)\\\\n\\\\n  // state that manages DatePickers value\\\\n\\\\n  return (\\\\n    <ThemeWrapper>\\\\n      <IconButton\\\\n        iconVariant='icomoon-funel'\\\\n        onClick={() => setFilterOpen((f) => !f)}\\\\n      >\\\\n        Filter\\\\n      </IconButton>\\\\n\\\\n      <FilterDrawer isOpen={isFilterOpen}>\\\\n        <Box display='flex' flexDirection='column' fullWidth fullHeight>\\\\n          <ModalHeader\\\\n            headerTitle='Analytics Filter'\\\\n            handleClose={() => setFilterOpen(false)}\\\\n            width='100%'\\\\n          />\\\\n\\\\n          {/* element that holds DateRangePickers value */}\\\\n          <Position type='relative'>\\\\n            <DateRangePicker\\\\n              onFromChange={action('From Clicked')}\\\\n              onToChange={action('To Clicked')}\\\\n              onApply={action('Apply Clicked')}\\\\n              onCancel={action('Cancel Clicked')}\\\\n              label={text('Label', 'Date Range')}\\\\n              variant='daterange'\\\\n              timeFormat={24}\\\\n              showTime={boolean('Show time', true)}\\\\n              startDate={new Date()}\\\\n              fromDateFormatter={getFormattedDate}\\\\n              toDateFormatter={getFormattedDate}\\\\n              style={{\\\\n                background: '#ccc',\\\\n                right: '0px',\\\\n                position: 'fixed'\\\\n              }}\\\\n            >\\\\n              {({ value, open, setOpen }: tDateRangeChildren) => (\\\\n                <Box fullWidth>\\\\n                  <TextInput\\\\n                    id='someId'\\\\n                    name={name}\\\\n                    className='someClassname'\\\\n                    label='Holidays'\\\\n                    variant='basic'\\\\n                    labelColor='text.inputLabel.default'\\\\n                    placeholder='Please Click Here'\\\\n                    fullWidth\\\\n                    value={value?.toString()}\\\\n                    onChange={action('On change clicked')}\\\\n                    onClick={() => setOpen(!open)}\\\\n                  />\\\\n                </Box>\\\\n              )}\\\\n            </DateRangePicker>\\\\n          </Position>\\\\n\\\\n          <Box\\\\n            flexGrow={1}\\\\n            style={{ overflow: 'auto' }}\\\\n            p='15px'\\\\n            fullWidth\\\\n            mt='50px'\\\\n          >\\\\n            <FilterMultiselect\\\\n              id='branch'\\\\n              label='Hub'\\\\n              options={options}\\\\n              onSelectionChange={action('On Change')}\\\\n            />\\\\n          </Box>\\\\n          <Box\\\\n            display='flex'\\\\n            justifyContent='flex-end'\\\\n            p='15px'\\\\n            horizontalSpacing='10px'\\\\n            fullWidth\\\\n          >\\\\n            <IconButton iconVariant='icomoon-tick-circled' primary>\\\\n              Apply\\\\n            </IconButton>\\\\n            <IconButton iconVariant='icomoon-back'>Reset</IconButton>\\\\n          </Box>\\\\n        </Box>\\\\n      </FilterDrawer>\\\\n    </ThemeWrapper>\\\\n  )\\\\n}\\\\n\\\",\\\"locationsMap\\\":{}},},\\n  title: `${path}/FilterDrawer`,\\n  component: FilterDrawer\\n}\\n\\nconst options: IFilterMultiselectOption[] = [\\n  { id: '1', label: 'Powai', value: 'powai' },\\n  { id: '2', label: 'Andheri', value: 'andheri' },\\n  { id: '3', label: 'Bhandup', value: 'bhandup' }\\n]\\n\\nconst getFormattedDate = (date: Date) => {\\n  const todayTime = date\\n  const month = todayTime.getMonth() + 1\\n  const day = todayTime.getDate()\\n  const year = todayTime.getFullYear()\\n  const hours = todayTime.getHours()\\n  const minutes = todayTime.getMinutes()\\n  return month + '/' + day + '/' + year + ' ' + hours + ':' + minutes\\n}\\n\\nexport const withBasic = addSourceDecorator(addSourceDecorator(() => {\\n  const [isFilterOpen, setFilterOpen] = React.useState<boolean>(true)\\n\\n  // state that manages DatePickers value\\n\\n  return (\\n    <ThemeWrapper>\\n      <IconButton\\n        iconVariant='icomoon-funel'\\n        onClick={() => setFilterOpen((f) => !f)}\\n      >\\n        Filter\\n      </IconButton>\\n\\n      <FilterDrawer isOpen={isFilterOpen}>\\n        <Box display='flex' flexDirection='column' fullWidth fullHeight>\\n          <ModalHeader\\n            headerTitle='Analytics Filter'\\n            handleClose={() => setFilterOpen(false)}\\n            width='100%'\\n          />\\n\\n          {/* element that holds DateRangePickers value */}\\n          <Position type='relative'>\\n            <DateRangePicker\\n              onFromChange={action('From Clicked')}\\n              onToChange={action('To Clicked')}\\n              onApply={action('Apply Clicked')}\\n              onCancel={action('Cancel Clicked')}\\n              label={text('Label', 'Date Range')}\\n              variant='daterange'\\n              timeFormat={24}\\n              showTime={boolean('Show time', true)}\\n              startDate={new Date()}\\n              fromDateFormatter={getFormattedDate}\\n              toDateFormatter={getFormattedDate}\\n              style={{\\n                background: '#ccc',\\n                right: '0px',\\n                position: 'fixed'\\n              }}\\n            >\\n              {({ value, open, setOpen }: tDateRangeChildren) => (\\n                <Box fullWidth>\\n                  <TextInput\\n                    id='someId'\\n                    name={name}\\n                    className='someClassname'\\n                    label='Holidays'\\n                    variant='basic'\\n                    labelColor='text.inputLabel.default'\\n                    placeholder='Please Click Here'\\n                    fullWidth\\n                    value={value?.toString()}\\n                    onChange={action('On change clicked')}\\n                    onClick={() => setOpen(!open)}\\n                  />\\n                </Box>\\n              )}\\n            </DateRangePicker>\\n          </Position>\\n\\n          <Box\\n            flexGrow={1}\\n            style={{ overflow: 'auto' }}\\n            p='15px'\\n            fullWidth\\n            mt='50px'\\n          >\\n            <FilterMultiselect\\n              id='branch'\\n              label='Hub'\\n              options={options}\\n              onSelectionChange={action('On Change')}\\n            />\\n          </Box>\\n          <Box\\n            display='flex'\\n            justifyContent='flex-end'\\n            p='15px'\\n            horizontalSpacing='10px'\\n            fullWidth\\n          >\\n            <IconButton iconVariant='icomoon-tick-circled' primary>\\n              Apply\\n            </IconButton>\\n            <IconButton iconVariant='icomoon-back'>Reset</IconButton>\\n          </Box>\\n        </Box>\\n      </FilterDrawer>\\n    </ThemeWrapper>\\n  )\\n}, {__STORY__, __ADDS_MAP__,__MAIN_FILE_LOCATION__,__MODULE_DEPENDENCIES__,__LOCAL_DEPENDENCIES__,__SOURCE_PREFIX__,__IDS_TO_FRAMEWORKS__}), {__STORY__, __ADDS_MAP__,__MAIN_FILE_LOCATION__,__MODULE_DEPENDENCIES__,__LOCAL_DEPENDENCIES__,__SOURCE_PREFIX__,__IDS_TO_FRAMEWORKS__});\"; // @ts-ignore\n\nvar __ADDS_MAP__ = {}; // @ts-ignore\n\nvar __MAIN_FILE_LOCATION__ = \"/FilterDrawer.stories.tsx\"; // @ts-ignore\n\nvar __MODULE_DEPENDENCIES__ = []; // @ts-ignore\n\nvar __LOCAL_DEPENDENCIES__ = {}; // @ts-ignore\n\nvar __IDS_TO_FRAMEWORKS__ = {};\n/* eslint-disable */\n// @ts-nocheck\n// @ts-ignore\n\nvar withSourceLoader = require('@storybook/source-loader/preview').withSource; // @ts-ignore\n\n\nvar addSourceDecorator = require(\"@storybook/source-loader/preview\").addSource; // @ts-ignore\n\n\nvar __SOURCE_PREFIX__ = \"/Users/farhanansari/Code/ui-library/src/components/atoms/FilterDrawer\"; // @ts-ignore\n\nvar __STORY__ = \"\\n\\n// @ts-nocheck\\n// @ts-ignore\\nvar withSourceLoader = require('@storybook/source-loader/preview').withSource;\\n// @ts-ignore\\nvar addSourceDecorator = require(\\\"@storybook/source-loader/preview\\\").addSource;\\n// @ts-ignore\\nvar __SOURCE_PREFIX__ = \\\"/Users/farhanansari/Code/ui-library/src/components/atoms/FilterDrawer\\\";\\n// @ts-ignore\\nvar __STORY__ = \\\"import React from 'react'\\\\nimport FilterDrawer from '.'\\\\nimport { path } from '..'\\\\nimport ThemeWrapper from '../../../utilities/components/ThemeWrapper'\\\\n\\\\nimport ModalHeader from '../../molecules/ModalHeader'\\\\nimport Box from '../Box'\\\\nimport IconButton from '../IconButton'\\\\nimport { IFilterMultiselectOption } from '../../molecules/FilterMultiselect/interfaces'\\\\nimport FilterMultiselect from '../../molecules/FilterMultiselect'\\\\nimport { action } from '@storybook/addon-actions'\\\\nimport { boolean, text } from '@storybook/addon-knobs'\\\\nimport { DateRangePicker } from '../../molecules/DatePicker'\\\\nimport { tDateRangeChildren } from '../../molecules/DatePicker/interfaces'\\\\nimport TextInput from '../../molecules/TextInput'\\\\nimport Position from '../../molecules/Position'\\\\n\\\\nexport default {\\\\n  title: `${path}/FilterDrawer`,\\\\n  component: FilterDrawer\\\\n}\\\\n\\\\nconst options: IFilterMultiselectOption[] = [\\\\n  { id: '1', label: 'Powai', value: 'powai' },\\\\n  { id: '2', label: 'Andheri', value: 'andheri' },\\\\n  { id: '3', label: 'Bhandup', value: 'bhandup' }\\\\n]\\\\n\\\\nconst getFormattedDate = (date: Date) => {\\\\n  const todayTime = date\\\\n  const month = todayTime.getMonth() + 1\\\\n  const day = todayTime.getDate()\\\\n  const year = todayTime.getFullYear()\\\\n  const hours = todayTime.getHours()\\\\n  const minutes = todayTime.getMinutes()\\\\n  return month + '/' + day + '/' + year + ' ' + hours + ':' + minutes\\\\n}\\\\n\\\\nexport const withBasic = () => {\\\\n  const [isFilterOpen, setFilterOpen] = React.useState<boolean>(true)\\\\n\\\\n  // state that manages DatePickers value\\\\n\\\\n  return (\\\\n    <ThemeWrapper>\\\\n      <IconButton\\\\n        iconVariant='icomoon-funel'\\\\n        onClick={() => setFilterOpen((f) => !f)}\\\\n      >\\\\n        Filter\\\\n      </IconButton>\\\\n\\\\n      <FilterDrawer isOpen={isFilterOpen}>\\\\n        <Box display='flex' flexDirection='column' fullWidth fullHeight>\\\\n          <ModalHeader\\\\n            headerTitle='Analytics Filter'\\\\n            handleClose={() => setFilterOpen(false)}\\\\n            width='100%'\\\\n          />\\\\n\\\\n          {/* element that holds DateRangePickers value */}\\\\n          <Position type='relative'>\\\\n            <DateRangePicker\\\\n              onFromChange={action('From Clicked')}\\\\n              onToChange={action('To Clicked')}\\\\n              onApply={action('Apply Clicked')}\\\\n              onCancel={action('Cancel Clicked')}\\\\n              label={text('Label', 'Date Range')}\\\\n              variant='daterange'\\\\n              timeFormat={24}\\\\n              showTime={boolean('Show time', true)}\\\\n              startDate={new Date()}\\\\n              fromDateFormatter={getFormattedDate}\\\\n              toDateFormatter={getFormattedDate}\\\\n              style={{\\\\n                background: '#ccc',\\\\n                right: '0px',\\\\n                position: 'fixed'\\\\n              }}\\\\n            >\\\\n              {({ value, open, setOpen }: tDateRangeChildren) => (\\\\n                <Box fullWidth>\\\\n                  <TextInput\\\\n                    id='someId'\\\\n                    name={name}\\\\n                    className='someClassname'\\\\n                    label='Holidays'\\\\n                    variant='basic'\\\\n                    labelColor='text.inputLabel.default'\\\\n                    placeholder='Please Click Here'\\\\n                    fullWidth\\\\n                    value={value?.toString()}\\\\n                    onChange={action('On change clicked')}\\\\n                    onClick={() => setOpen(!open)}\\\\n                  />\\\\n                </Box>\\\\n              )}\\\\n            </DateRangePicker>\\\\n          </Position>\\\\n\\\\n          <Box\\\\n            flexGrow={1}\\\\n            style={{ overflow: 'auto' }}\\\\n            p='15px'\\\\n            fullWidth\\\\n            mt='50px'\\\\n          >\\\\n            <FilterMultiselect\\\\n              id='branch'\\\\n              label='Hub'\\\\n              options={options}\\\\n              onSelectionChange={action('On Change')}\\\\n            />\\\\n          </Box>\\\\n          <Box\\\\n            display='flex'\\\\n            justifyContent='flex-end'\\\\n            p='15px'\\\\n            horizontalSpacing='10px'\\\\n            fullWidth\\\\n          >\\\\n            <IconButton iconVariant='icomoon-tick-circled' primary>\\\\n              Apply\\\\n            </IconButton>\\\\n            <IconButton iconVariant='icomoon-back'>Reset</IconButton>\\\\n          </Box>\\\\n        </Box>\\\\n      </FilterDrawer>\\\\n    </ThemeWrapper>\\\\n  )\\\\n}\\\\n\\\";\\n// @ts-ignore\\nvar __ADDS_MAP__ = {};\\n// @ts-ignore\\nvar __MAIN_FILE_LOCATION__ = \\\"/FilterDrawer.stories.tsx\\\";\\n// @ts-ignore\\nvar __MODULE_DEPENDENCIES__ = [];\\n// @ts-ignore\\nvar __LOCAL_DEPENDENCIES__ = {};\\n// @ts-ignore\\nvar __IDS_TO_FRAMEWORKS__ = {};\\n        \\nimport React from 'react'\\nimport FilterDrawer from '.'\\nimport { path } from '..'\\nimport ThemeWrapper from '../../../utilities/components/ThemeWrapper'\\n\\nimport ModalHeader from '../../molecules/ModalHeader'\\nimport Box from '../Box'\\nimport IconButton from '../IconButton'\\nimport { IFilterMultiselectOption } from '../../molecules/FilterMultiselect/interfaces'\\nimport FilterMultiselect from '../../molecules/FilterMultiselect'\\nimport { action } from '@storybook/addon-actions'\\nimport { boolean, text } from '@storybook/addon-knobs'\\nimport { DateRangePicker } from '../../molecules/DatePicker'\\nimport { tDateRangeChildren } from '../../molecules/DatePicker/interfaces'\\nimport TextInput from '../../molecules/TextInput'\\nimport Position from '../../molecules/Position'\\n\\nexport default {parameters: {\\\"storySource\\\":{\\\"source\\\":\\\"import React from 'react'\\\\nimport FilterDrawer from '.'\\\\nimport { path } from '..'\\\\nimport ThemeWrapper from '../../../utilities/components/ThemeWrapper'\\\\n\\\\nimport ModalHeader from '../../molecules/ModalHeader'\\\\nimport Box from '../Box'\\\\nimport IconButton from '../IconButton'\\\\nimport { IFilterMultiselectOption } from '../../molecules/FilterMultiselect/interfaces'\\\\nimport FilterMultiselect from '../../molecules/FilterMultiselect'\\\\nimport { action } from '@storybook/addon-actions'\\\\nimport { boolean, text } from '@storybook/addon-knobs'\\\\nimport { DateRangePicker } from '../../molecules/DatePicker'\\\\nimport { tDateRangeChildren } from '../../molecules/DatePicker/interfaces'\\\\nimport TextInput from '../../molecules/TextInput'\\\\nimport Position from '../../molecules/Position'\\\\n\\\\nexport default {\\\\n  title: `${path}/FilterDrawer`,\\\\n  component: FilterDrawer\\\\n}\\\\n\\\\nconst options: IFilterMultiselectOption[] = [\\\\n  { id: '1', label: 'Powai', value: 'powai' },\\\\n  { id: '2', label: 'Andheri', value: 'andheri' },\\\\n  { id: '3', label: 'Bhandup', value: 'bhandup' }\\\\n]\\\\n\\\\nconst getFormattedDate = (date: Date) => {\\\\n  const todayTime = date\\\\n  const month = todayTime.getMonth() + 1\\\\n  const day = todayTime.getDate()\\\\n  const year = todayTime.getFullYear()\\\\n  const hours = todayTime.getHours()\\\\n  const minutes = todayTime.getMinutes()\\\\n  return month + '/' + day + '/' + year + ' ' + hours + ':' + minutes\\\\n}\\\\n\\\\nexport const withBasic = () => {\\\\n  const [isFilterOpen, setFilterOpen] = React.useState<boolean>(true)\\\\n\\\\n  // state that manages DatePickers value\\\\n\\\\n  return (\\\\n    <ThemeWrapper>\\\\n      <IconButton\\\\n        iconVariant='icomoon-funel'\\\\n        onClick={() => setFilterOpen((f) => !f)}\\\\n      >\\\\n        Filter\\\\n      </IconButton>\\\\n\\\\n      <FilterDrawer isOpen={isFilterOpen}>\\\\n        <Box display='flex' flexDirection='column' fullWidth fullHeight>\\\\n          <ModalHeader\\\\n            headerTitle='Analytics Filter'\\\\n            handleClose={() => setFilterOpen(false)}\\\\n            width='100%'\\\\n          />\\\\n\\\\n          {/* element that holds DateRangePickers value */}\\\\n          <Position type='relative'>\\\\n            <DateRangePicker\\\\n              onFromChange={action('From Clicked')}\\\\n              onToChange={action('To Clicked')}\\\\n              onApply={action('Apply Clicked')}\\\\n              onCancel={action('Cancel Clicked')}\\\\n              label={text('Label', 'Date Range')}\\\\n              variant='daterange'\\\\n              timeFormat={24}\\\\n              showTime={boolean('Show time', true)}\\\\n              startDate={new Date()}\\\\n              fromDateFormatter={getFormattedDate}\\\\n              toDateFormatter={getFormattedDate}\\\\n              style={{\\\\n                background: '#ccc',\\\\n                right: '0px',\\\\n                position: 'fixed'\\\\n              }}\\\\n            >\\\\n              {({ value, open, setOpen }: tDateRangeChildren) => (\\\\n                <Box fullWidth>\\\\n                  <TextInput\\\\n                    id='someId'\\\\n                    name={name}\\\\n                    className='someClassname'\\\\n                    label='Holidays'\\\\n                    variant='basic'\\\\n                    labelColor='text.inputLabel.default'\\\\n                    placeholder='Please Click Here'\\\\n                    fullWidth\\\\n                    value={value?.toString()}\\\\n                    onChange={action('On change clicked')}\\\\n                    onClick={() => setOpen(!open)}\\\\n                  />\\\\n                </Box>\\\\n              )}\\\\n            </DateRangePicker>\\\\n          </Position>\\\\n\\\\n          <Box\\\\n            flexGrow={1}\\\\n            style={{ overflow: 'auto' }}\\\\n            p='15px'\\\\n            fullWidth\\\\n            mt='50px'\\\\n          >\\\\n            <FilterMultiselect\\\\n              id='branch'\\\\n              label='Hub'\\\\n              options={options}\\\\n              onSelectionChange={action('On Change')}\\\\n            />\\\\n          </Box>\\\\n          <Box\\\\n            display='flex'\\\\n            justifyContent='flex-end'\\\\n            p='15px'\\\\n            horizontalSpacing='10px'\\\\n            fullWidth\\\\n          >\\\\n            <IconButton iconVariant='icomoon-tick-circled' primary>\\\\n              Apply\\\\n            </IconButton>\\\\n            <IconButton iconVariant='icomoon-back'>Reset</IconButton>\\\\n          </Box>\\\\n        </Box>\\\\n      </FilterDrawer>\\\\n    </ThemeWrapper>\\\\n  )\\\\n}\\\\n\\\",\\\"locationsMap\\\":{}},},\\n  title: `${path}/FilterDrawer`,\\n  component: FilterDrawer\\n}\\n\\nconst options: IFilterMultiselectOption[] = [\\n  { id: '1', label: 'Powai', value: 'powai' },\\n  { id: '2', label: 'Andheri', value: 'andheri' },\\n  { id: '3', label: 'Bhandup', value: 'bhandup' }\\n]\\n\\nconst getFormattedDate = (date: Date) => {\\n  const todayTime = date\\n  const month = todayTime.getMonth() + 1\\n  const day = todayTime.getDate()\\n  const year = todayTime.getFullYear()\\n  const hours = todayTime.getHours()\\n  const minutes = todayTime.getMinutes()\\n  return month + '/' + day + '/' + year + ' ' + hours + ':' + minutes\\n}\\n\\nexport const withBasic = addSourceDecorator(() => {\\n  const [isFilterOpen, setFilterOpen] = React.useState<boolean>(true)\\n\\n  // state that manages DatePickers value\\n\\n  return (\\n    <ThemeWrapper>\\n      <IconButton\\n        iconVariant='icomoon-funel'\\n        onClick={() => setFilterOpen((f) => !f)}\\n      >\\n        Filter\\n      </IconButton>\\n\\n      <FilterDrawer isOpen={isFilterOpen}>\\n        <Box display='flex' flexDirection='column' fullWidth fullHeight>\\n          <ModalHeader\\n            headerTitle='Analytics Filter'\\n            handleClose={() => setFilterOpen(false)}\\n            width='100%'\\n          />\\n\\n          {/* element that holds DateRangePickers value */}\\n          <Position type='relative'>\\n            <DateRangePicker\\n              onFromChange={action('From Clicked')}\\n              onToChange={action('To Clicked')}\\n              onApply={action('Apply Clicked')}\\n              onCancel={action('Cancel Clicked')}\\n              label={text('Label', 'Date Range')}\\n              variant='daterange'\\n              timeFormat={24}\\n              showTime={boolean('Show time', true)}\\n              startDate={new Date()}\\n              fromDateFormatter={getFormattedDate}\\n              toDateFormatter={getFormattedDate}\\n              style={{\\n                background: '#ccc',\\n                right: '0px',\\n                position: 'fixed'\\n              }}\\n            >\\n              {({ value, open, setOpen }: tDateRangeChildren) => (\\n                <Box fullWidth>\\n                  <TextInput\\n                    id='someId'\\n                    name={name}\\n                    className='someClassname'\\n                    label='Holidays'\\n                    variant='basic'\\n                    labelColor='text.inputLabel.default'\\n                    placeholder='Please Click Here'\\n                    fullWidth\\n                    value={value?.toString()}\\n                    onChange={action('On change clicked')}\\n                    onClick={() => setOpen(!open)}\\n                  />\\n                </Box>\\n              )}\\n            </DateRangePicker>\\n          </Position>\\n\\n          <Box\\n            flexGrow={1}\\n            style={{ overflow: 'auto' }}\\n            p='15px'\\n            fullWidth\\n            mt='50px'\\n          >\\n            <FilterMultiselect\\n              id='branch'\\n              label='Hub'\\n              options={options}\\n              onSelectionChange={action('On Change')}\\n            />\\n          </Box>\\n          <Box\\n            display='flex'\\n            justifyContent='flex-end'\\n            p='15px'\\n            horizontalSpacing='10px'\\n            fullWidth\\n          >\\n            <IconButton iconVariant='icomoon-tick-circled' primary>\\n              Apply\\n            </IconButton>\\n            <IconButton iconVariant='icomoon-back'>Reset</IconButton>\\n          </Box>\\n        </Box>\\n      </FilterDrawer>\\n    </ThemeWrapper>\\n  )\\n}, {__STORY__, __ADDS_MAP__,__MAIN_FILE_LOCATION__,__MODULE_DEPENDENCIES__,__LOCAL_DEPENDENCIES__,__SOURCE_PREFIX__,__IDS_TO_FRAMEWORKS__});\"; // @ts-ignore\n\nvar __ADDS_MAP__ = {}; // @ts-ignore\n\nvar __MAIN_FILE_LOCATION__ = \"/FilterDrawer.stories.tsx\"; // @ts-ignore\n\nvar __MODULE_DEPENDENCIES__ = []; // @ts-ignore\n\nvar __LOCAL_DEPENDENCIES__ = {}; // @ts-ignore\n\nvar __IDS_TO_FRAMEWORKS__ = {};\n/* eslint-disable */\n// @ts-nocheck\n// @ts-ignore\n\nvar withSourceLoader = require('@storybook/source-loader/preview').withSource; // @ts-ignore\n\n\nvar addSourceDecorator = require(\"@storybook/source-loader/preview\").addSource; // @ts-ignore\n\n\nvar __SOURCE_PREFIX__ = \"/Users/farhanansari/Code/ui-library/src/components/atoms/FilterDrawer\"; // @ts-ignore\n\nvar __STORY__ = \"import React from 'react'\\nimport FilterDrawer from '.'\\nimport { path } from '..'\\nimport ThemeWrapper from '../../../utilities/components/ThemeWrapper'\\n\\nimport ModalHeader from '../../molecules/ModalHeader'\\nimport Box from '../Box'\\nimport IconButton from '../IconButton'\\nimport { IFilterMultiselectOption } from '../../molecules/FilterMultiselect/interfaces'\\nimport FilterMultiselect from '../../molecules/FilterMultiselect'\\nimport { action } from '@storybook/addon-actions'\\nimport { boolean, text } from '@storybook/addon-knobs'\\nimport { DateRangePicker } from '../../molecules/DatePicker'\\nimport { tDateRangeChildren } from '../../molecules/DatePicker/interfaces'\\nimport TextInput from '../../molecules/TextInput'\\nimport Position from '../../molecules/Position'\\n\\nexport default {\\n  title: `${path}/FilterDrawer`,\\n  component: FilterDrawer\\n}\\n\\nconst options: IFilterMultiselectOption[] = [\\n  { id: '1', label: 'Powai', value: 'powai' },\\n  { id: '2', label: 'Andheri', value: 'andheri' },\\n  { id: '3', label: 'Bhandup', value: 'bhandup' }\\n]\\n\\nconst getFormattedDate = (date: Date) => {\\n  const todayTime = date\\n  const month = todayTime.getMonth() + 1\\n  const day = todayTime.getDate()\\n  const year = todayTime.getFullYear()\\n  const hours = todayTime.getHours()\\n  const minutes = todayTime.getMinutes()\\n  return month + '/' + day + '/' + year + ' ' + hours + ':' + minutes\\n}\\n\\nexport const withBasic = () => {\\n  const [isFilterOpen, setFilterOpen] = React.useState<boolean>(true)\\n\\n  // state that manages DatePickers value\\n\\n  return (\\n    <ThemeWrapper>\\n      <IconButton\\n        iconVariant='icomoon-funel'\\n        onClick={() => setFilterOpen((f) => !f)}\\n      >\\n        Filter\\n      </IconButton>\\n\\n      <FilterDrawer isOpen={isFilterOpen}>\\n        <Box display='flex' flexDirection='column' fullWidth fullHeight>\\n          <ModalHeader\\n            headerTitle='Analytics Filter'\\n            handleClose={() => setFilterOpen(false)}\\n            width='100%'\\n          />\\n\\n          {/* element that holds DateRangePickers value */}\\n          <Position type='relative'>\\n            <DateRangePicker\\n              onFromChange={action('From Clicked')}\\n              onToChange={action('To Clicked')}\\n              onApply={action('Apply Clicked')}\\n              onCancel={action('Cancel Clicked')}\\n              label={text('Label', 'Date Range')}\\n              variant='daterange'\\n              timeFormat={24}\\n              showTime={boolean('Show time', true)}\\n              startDate={new Date()}\\n              fromDateFormatter={getFormattedDate}\\n              toDateFormatter={getFormattedDate}\\n              style={{\\n                background: '#ccc',\\n                right: '0px',\\n                position: 'fixed'\\n              }}\\n            >\\n              {({ value, open, setOpen }: tDateRangeChildren) => (\\n                <Box fullWidth>\\n                  <TextInput\\n                    id='someId'\\n                    name={name}\\n                    className='someClassname'\\n                    label='Holidays'\\n                    variant='basic'\\n                    labelColor='text.inputLabel.default'\\n                    placeholder='Please Click Here'\\n                    fullWidth\\n                    value={value?.toString()}\\n                    onChange={action('On change clicked')}\\n                    onClick={() => setOpen(!open)}\\n                  />\\n                </Box>\\n              )}\\n            </DateRangePicker>\\n          </Position>\\n\\n          <Box\\n            flexGrow={1}\\n            style={{ overflow: 'auto' }}\\n            p='15px'\\n            fullWidth\\n            mt='50px'\\n          >\\n            <FilterMultiselect\\n              id='branch'\\n              label='Hub'\\n              options={options}\\n              onSelectionChange={action('On Change')}\\n            />\\n          </Box>\\n          <Box\\n            display='flex'\\n            justifyContent='flex-end'\\n            p='15px'\\n            horizontalSpacing='10px'\\n            fullWidth\\n          >\\n            <IconButton iconVariant='icomoon-tick-circled' primary>\\n              Apply\\n            </IconButton>\\n            <IconButton iconVariant='icomoon-back'>Reset</IconButton>\\n          </Box>\\n        </Box>\\n      </FilterDrawer>\\n    </ThemeWrapper>\\n  )\\n}\\n\"; // @ts-ignore\n\nvar __ADDS_MAP__ = {}; // @ts-ignore\n\nvar __MAIN_FILE_LOCATION__ = \"/FilterDrawer.stories.tsx\"; // @ts-ignore\n\nvar __MODULE_DEPENDENCIES__ = []; // @ts-ignore\n\nvar __LOCAL_DEPENDENCIES__ = {}; // @ts-ignore\n\nvar __IDS_TO_FRAMEWORKS__ = {};\nimport React from 'react';\nimport FilterDrawer from '.';\nimport { path } from '..';\nimport ThemeWrapper from '../../../utilities/components/ThemeWrapper';\nimport ModalHeader from '../../molecules/ModalHeader';\nimport Box from '../Box';\nimport IconButton from '../IconButton';\nimport FilterMultiselect from '../../molecules/FilterMultiselect';\nimport { action } from '@storybook/addon-actions';\nimport { boolean as _boolean, text } from '@storybook/addon-knobs';\nimport { DateRangePicker } from '../../molecules/DatePicker';\nimport TextInput from '../../molecules/TextInput';\nimport Position from '../../molecules/Position';\nexport default {\n  parameters: (_parameters = {\n    \"storySource\": {\n      \"source\": \"\\n\\n// @ts-nocheck\\n// @ts-ignore\\nvar withSourceLoader = require('@storybook/source-loader/preview').withSource;\\n// @ts-ignore\\nvar addSourceDecorator = require(\\\"@storybook/source-loader/preview\\\").addSource;\\n// @ts-ignore\\nvar __SOURCE_PREFIX__ = \\\"/Users/farhanansari/Code/ui-library/src/components/atoms/FilterDrawer\\\";\\n// @ts-ignore\\nvar __STORY__ = \\\"\\\\n\\\\n// @ts-nocheck\\\\n// @ts-ignore\\\\nvar withSourceLoader = require('@storybook/source-loader/preview').withSource;\\\\n// @ts-ignore\\\\nvar addSourceDecorator = require(\\\\\\\"@storybook/source-loader/preview\\\\\\\").addSource;\\\\n// @ts-ignore\\\\nvar __SOURCE_PREFIX__ = \\\\\\\"/Users/farhanansari/Code/ui-library/src/components/atoms/FilterDrawer\\\\\\\";\\\\n// @ts-ignore\\\\nvar __STORY__ = \\\\\\\"import React from 'react'\\\\\\\\nimport FilterDrawer from '.'\\\\\\\\nimport { path } from '..'\\\\\\\\nimport ThemeWrapper from '../../../utilities/components/ThemeWrapper'\\\\\\\\n\\\\\\\\nimport ModalHeader from '../../molecules/ModalHeader'\\\\\\\\nimport Box from '../Box'\\\\\\\\nimport IconButton from '../IconButton'\\\\\\\\nimport { IFilterMultiselectOption } from '../../molecules/FilterMultiselect/interfaces'\\\\\\\\nimport FilterMultiselect from '../../molecules/FilterMultiselect'\\\\\\\\nimport { action } from '@storybook/addon-actions'\\\\\\\\nimport { boolean, text } from '@storybook/addon-knobs'\\\\\\\\nimport { DateRangePicker } from '../../molecules/DatePicker'\\\\\\\\nimport { tDateRangeChildren } from '../../molecules/DatePicker/interfaces'\\\\\\\\nimport TextInput from '../../molecules/TextInput'\\\\\\\\nimport Position from '../../molecules/Position'\\\\\\\\n\\\\\\\\nexport default {\\\\\\\\n  title: `${path}/FilterDrawer`,\\\\\\\\n  component: FilterDrawer\\\\\\\\n}\\\\\\\\n\\\\\\\\nconst options: IFilterMultiselectOption[] = [\\\\\\\\n  { id: '1', label: 'Powai', value: 'powai' },\\\\\\\\n  { id: '2', label: 'Andheri', value: 'andheri' },\\\\\\\\n  { id: '3', label: 'Bhandup', value: 'bhandup' }\\\\\\\\n]\\\\\\\\n\\\\\\\\nconst getFormattedDate = (date: Date) => {\\\\\\\\n  const todayTime = date\\\\\\\\n  const month = todayTime.getMonth() + 1\\\\\\\\n  const day = todayTime.getDate()\\\\\\\\n  const year = todayTime.getFullYear()\\\\\\\\n  const hours = todayTime.getHours()\\\\\\\\n  const minutes = todayTime.getMinutes()\\\\\\\\n  return month + '/' + day + '/' + year + ' ' + hours + ':' + minutes\\\\\\\\n}\\\\\\\\n\\\\\\\\nexport const withBasic = () => {\\\\\\\\n  const [isFilterOpen, setFilterOpen] = React.useState<boolean>(true)\\\\\\\\n\\\\\\\\n  // state that manages DatePickers value\\\\\\\\n\\\\\\\\n  return (\\\\\\\\n    <ThemeWrapper>\\\\\\\\n      <IconButton\\\\\\\\n        iconVariant='icomoon-funel'\\\\\\\\n        onClick={() => setFilterOpen((f) => !f)}\\\\\\\\n      >\\\\\\\\n        Filter\\\\\\\\n      </IconButton>\\\\\\\\n\\\\\\\\n      <FilterDrawer isOpen={isFilterOpen}>\\\\\\\\n        <Box display='flex' flexDirection='column' fullWidth fullHeight>\\\\\\\\n          <ModalHeader\\\\\\\\n            headerTitle='Analytics Filter'\\\\\\\\n            handleClose={() => setFilterOpen(false)}\\\\\\\\n            width='100%'\\\\\\\\n          />\\\\\\\\n\\\\\\\\n          {/* element that holds DateRangePickers value */}\\\\\\\\n          <Position type='relative'>\\\\\\\\n            <DateRangePicker\\\\\\\\n              onFromChange={action('From Clicked')}\\\\\\\\n              onToChange={action('To Clicked')}\\\\\\\\n              onApply={action('Apply Clicked')}\\\\\\\\n              onCancel={action('Cancel Clicked')}\\\\\\\\n              label={text('Label', 'Date Range')}\\\\\\\\n              variant='daterange'\\\\\\\\n              timeFormat={24}\\\\\\\\n              showTime={boolean('Show time', true)}\\\\\\\\n              startDate={new Date()}\\\\\\\\n              fromDateFormatter={getFormattedDate}\\\\\\\\n              toDateFormatter={getFormattedDate}\\\\\\\\n              style={{\\\\\\\\n                background: '#ccc',\\\\\\\\n                right: '0px',\\\\\\\\n                position: 'fixed'\\\\\\\\n              }}\\\\\\\\n            >\\\\\\\\n              {({ value, open, setOpen }: tDateRangeChildren) => (\\\\\\\\n                <Box fullWidth>\\\\\\\\n                  <TextInput\\\\\\\\n                    id='someId'\\\\\\\\n                    name={name}\\\\\\\\n                    className='someClassname'\\\\\\\\n                    label='Holidays'\\\\\\\\n                    variant='basic'\\\\\\\\n                    labelColor='text.inputLabel.default'\\\\\\\\n                    placeholder='Please Click Here'\\\\\\\\n                    fullWidth\\\\\\\\n                    value={value?.toString()}\\\\\\\\n                    onChange={action('On change clicked')}\\\\\\\\n                    onClick={() => setOpen(!open)}\\\\\\\\n                  />\\\\\\\\n                </Box>\\\\\\\\n              )}\\\\\\\\n            </DateRangePicker>\\\\\\\\n          </Position>\\\\\\\\n\\\\\\\\n          <Box\\\\\\\\n            flexGrow={1}\\\\\\\\n            style={{ overflow: 'auto' }}\\\\\\\\n            p='15px'\\\\\\\\n            fullWidth\\\\\\\\n            mt='50px'\\\\\\\\n          >\\\\\\\\n            <FilterMultiselect\\\\\\\\n              id='branch'\\\\\\\\n              label='Hub'\\\\\\\\n              options={options}\\\\\\\\n              onSelectionChange={action('On Change')}\\\\\\\\n            />\\\\\\\\n          </Box>\\\\\\\\n          <Box\\\\\\\\n            display='flex'\\\\\\\\n            justifyContent='flex-end'\\\\\\\\n            p='15px'\\\\\\\\n            horizontalSpacing='10px'\\\\\\\\n            fullWidth\\\\\\\\n          >\\\\\\\\n            <IconButton iconVariant='icomoon-tick-circled' primary>\\\\\\\\n              Apply\\\\\\\\n            </IconButton>\\\\\\\\n            <IconButton iconVariant='icomoon-back'>Reset</IconButton>\\\\\\\\n          </Box>\\\\\\\\n        </Box>\\\\\\\\n      </FilterDrawer>\\\\\\\\n    </ThemeWrapper>\\\\\\\\n  )\\\\\\\\n}\\\\\\\\n\\\\\\\";\\\\n// @ts-ignore\\\\nvar __ADDS_MAP__ = {};\\\\n// @ts-ignore\\\\nvar __MAIN_FILE_LOCATION__ = \\\\\\\"/FilterDrawer.stories.tsx\\\\\\\";\\\\n// @ts-ignore\\\\nvar __MODULE_DEPENDENCIES__ = [];\\\\n// @ts-ignore\\\\nvar __LOCAL_DEPENDENCIES__ = {};\\\\n// @ts-ignore\\\\nvar __IDS_TO_FRAMEWORKS__ = {};\\\\n        \\\\nimport React from 'react'\\\\nimport FilterDrawer from '.'\\\\nimport { path } from '..'\\\\nimport ThemeWrapper from '../../../utilities/components/ThemeWrapper'\\\\n\\\\nimport ModalHeader from '../../molecules/ModalHeader'\\\\nimport Box from '../Box'\\\\nimport IconButton from '../IconButton'\\\\nimport { IFilterMultiselectOption } from '../../molecules/FilterMultiselect/interfaces'\\\\nimport FilterMultiselect from '../../molecules/FilterMultiselect'\\\\nimport { action } from '@storybook/addon-actions'\\\\nimport { boolean, text } from '@storybook/addon-knobs'\\\\nimport { DateRangePicker } from '../../molecules/DatePicker'\\\\nimport { tDateRangeChildren } from '../../molecules/DatePicker/interfaces'\\\\nimport TextInput from '../../molecules/TextInput'\\\\nimport Position from '../../molecules/Position'\\\\n\\\\nexport default {parameters: {\\\\\\\"storySource\\\\\\\":{\\\\\\\"source\\\\\\\":\\\\\\\"import React from 'react'\\\\\\\\nimport FilterDrawer from '.'\\\\\\\\nimport { path } from '..'\\\\\\\\nimport ThemeWrapper from '../../../utilities/components/ThemeWrapper'\\\\\\\\n\\\\\\\\nimport ModalHeader from '../../molecules/ModalHeader'\\\\\\\\nimport Box from '../Box'\\\\\\\\nimport IconButton from '../IconButton'\\\\\\\\nimport { IFilterMultiselectOption } from '../../molecules/FilterMultiselect/interfaces'\\\\\\\\nimport FilterMultiselect from '../../molecules/FilterMultiselect'\\\\\\\\nimport { action } from '@storybook/addon-actions'\\\\\\\\nimport { boolean, text } from '@storybook/addon-knobs'\\\\\\\\nimport { DateRangePicker } from '../../molecules/DatePicker'\\\\\\\\nimport { tDateRangeChildren } from '../../molecules/DatePicker/interfaces'\\\\\\\\nimport TextInput from '../../molecules/TextInput'\\\\\\\\nimport Position from '../../molecules/Position'\\\\\\\\n\\\\\\\\nexport default {\\\\\\\\n  title: `${path}/FilterDrawer`,\\\\\\\\n  component: FilterDrawer\\\\\\\\n}\\\\\\\\n\\\\\\\\nconst options: IFilterMultiselectOption[] = [\\\\\\\\n  { id: '1', label: 'Powai', value: 'powai' },\\\\\\\\n  { id: '2', label: 'Andheri', value: 'andheri' },\\\\\\\\n  { id: '3', label: 'Bhandup', value: 'bhandup' }\\\\\\\\n]\\\\\\\\n\\\\\\\\nconst getFormattedDate = (date: Date) => {\\\\\\\\n  const todayTime = date\\\\\\\\n  const month = todayTime.getMonth() + 1\\\\\\\\n  const day = todayTime.getDate()\\\\\\\\n  const year = todayTime.getFullYear()\\\\\\\\n  const hours = todayTime.getHours()\\\\\\\\n  const minutes = todayTime.getMinutes()\\\\\\\\n  return month + '/' + day + '/' + year + ' ' + hours + ':' + minutes\\\\\\\\n}\\\\\\\\n\\\\\\\\nexport const withBasic = () => {\\\\\\\\n  const [isFilterOpen, setFilterOpen] = React.useState<boolean>(true)\\\\\\\\n\\\\\\\\n  // state that manages DatePickers value\\\\\\\\n\\\\\\\\n  return (\\\\\\\\n    <ThemeWrapper>\\\\\\\\n      <IconButton\\\\\\\\n        iconVariant='icomoon-funel'\\\\\\\\n        onClick={() => setFilterOpen((f) => !f)}\\\\\\\\n      >\\\\\\\\n        Filter\\\\\\\\n      </IconButton>\\\\\\\\n\\\\\\\\n      <FilterDrawer isOpen={isFilterOpen}>\\\\\\\\n        <Box display='flex' flexDirection='column' fullWidth fullHeight>\\\\\\\\n          <ModalHeader\\\\\\\\n            headerTitle='Analytics Filter'\\\\\\\\n            handleClose={() => setFilterOpen(false)}\\\\\\\\n            width='100%'\\\\\\\\n          />\\\\\\\\n\\\\\\\\n          {/* element that holds DateRangePickers value */}\\\\\\\\n          <Position type='relative'>\\\\\\\\n            <DateRangePicker\\\\\\\\n              onFromChange={action('From Clicked')}\\\\\\\\n              onToChange={action('To Clicked')}\\\\\\\\n              onApply={action('Apply Clicked')}\\\\\\\\n              onCancel={action('Cancel Clicked')}\\\\\\\\n              label={text('Label', 'Date Range')}\\\\\\\\n              variant='daterange'\\\\\\\\n              timeFormat={24}\\\\\\\\n              showTime={boolean('Show time', true)}\\\\\\\\n              startDate={new Date()}\\\\\\\\n              fromDateFormatter={getFormattedDate}\\\\\\\\n              toDateFormatter={getFormattedDate}\\\\\\\\n              style={{\\\\\\\\n                background: '#ccc',\\\\\\\\n                right: '0px',\\\\\\\\n                position: 'fixed'\\\\\\\\n              }}\\\\\\\\n            >\\\\\\\\n              {({ value, open, setOpen }: tDateRangeChildren) => (\\\\\\\\n                <Box fullWidth>\\\\\\\\n                  <TextInput\\\\\\\\n                    id='someId'\\\\\\\\n                    name={name}\\\\\\\\n                    className='someClassname'\\\\\\\\n                    label='Holidays'\\\\\\\\n                    variant='basic'\\\\\\\\n                    labelColor='text.inputLabel.default'\\\\\\\\n                    placeholder='Please Click Here'\\\\\\\\n                    fullWidth\\\\\\\\n                    value={value?.toString()}\\\\\\\\n                    onChange={action('On change clicked')}\\\\\\\\n                    onClick={() => setOpen(!open)}\\\\\\\\n                  />\\\\\\\\n                </Box>\\\\\\\\n              )}\\\\\\\\n            </DateRangePicker>\\\\\\\\n          </Position>\\\\\\\\n\\\\\\\\n          <Box\\\\\\\\n            flexGrow={1}\\\\\\\\n            style={{ overflow: 'auto' }}\\\\\\\\n            p='15px'\\\\\\\\n            fullWidth\\\\\\\\n            mt='50px'\\\\\\\\n          >\\\\\\\\n            <FilterMultiselect\\\\\\\\n              id='branch'\\\\\\\\n              label='Hub'\\\\\\\\n              options={options}\\\\\\\\n              onSelectionChange={action('On Change')}\\\\\\\\n            />\\\\\\\\n          </Box>\\\\\\\\n          <Box\\\\\\\\n            display='flex'\\\\\\\\n            justifyContent='flex-end'\\\\\\\\n            p='15px'\\\\\\\\n            horizontalSpacing='10px'\\\\\\\\n            fullWidth\\\\\\\\n          >\\\\\\\\n            <IconButton iconVariant='icomoon-tick-circled' primary>\\\\\\\\n              Apply\\\\\\\\n            </IconButton>\\\\\\\\n            <IconButton iconVariant='icomoon-back'>Reset</IconButton>\\\\\\\\n          </Box>\\\\\\\\n        </Box>\\\\\\\\n      </FilterDrawer>\\\\\\\\n    </ThemeWrapper>\\\\\\\\n  )\\\\\\\\n}\\\\\\\\n\\\\\\\",\\\\\\\"locationsMap\\\\\\\":{}},},\\\\n  title: `${path}/FilterDrawer`,\\\\n  component: FilterDrawer\\\\n}\\\\n\\\\nconst options: IFilterMultiselectOption[] = [\\\\n  { id: '1', label: 'Powai', value: 'powai' },\\\\n  { id: '2', label: 'Andheri', value: 'andheri' },\\\\n  { id: '3', label: 'Bhandup', value: 'bhandup' }\\\\n]\\\\n\\\\nconst getFormattedDate = (date: Date) => {\\\\n  const todayTime = date\\\\n  const month = todayTime.getMonth() + 1\\\\n  const day = todayTime.getDate()\\\\n  const year = todayTime.getFullYear()\\\\n  const hours = todayTime.getHours()\\\\n  const minutes = todayTime.getMinutes()\\\\n  return month + '/' + day + '/' + year + ' ' + hours + ':' + minutes\\\\n}\\\\n\\\\nexport const withBasic = addSourceDecorator(() => {\\\\n  const [isFilterOpen, setFilterOpen] = React.useState<boolean>(true)\\\\n\\\\n  // state that manages DatePickers value\\\\n\\\\n  return (\\\\n    <ThemeWrapper>\\\\n      <IconButton\\\\n        iconVariant='icomoon-funel'\\\\n        onClick={() => setFilterOpen((f) => !f)}\\\\n      >\\\\n        Filter\\\\n      </IconButton>\\\\n\\\\n      <FilterDrawer isOpen={isFilterOpen}>\\\\n        <Box display='flex' flexDirection='column' fullWidth fullHeight>\\\\n          <ModalHeader\\\\n            headerTitle='Analytics Filter'\\\\n            handleClose={() => setFilterOpen(false)}\\\\n            width='100%'\\\\n          />\\\\n\\\\n          {/* element that holds DateRangePickers value */}\\\\n          <Position type='relative'>\\\\n            <DateRangePicker\\\\n              onFromChange={action('From Clicked')}\\\\n              onToChange={action('To Clicked')}\\\\n              onApply={action('Apply Clicked')}\\\\n              onCancel={action('Cancel Clicked')}\\\\n              label={text('Label', 'Date Range')}\\\\n              variant='daterange'\\\\n              timeFormat={24}\\\\n              showTime={boolean('Show time', true)}\\\\n              startDate={new Date()}\\\\n              fromDateFormatter={getFormattedDate}\\\\n              toDateFormatter={getFormattedDate}\\\\n              style={{\\\\n                background: '#ccc',\\\\n                right: '0px',\\\\n                position: 'fixed'\\\\n              }}\\\\n            >\\\\n              {({ value, open, setOpen }: tDateRangeChildren) => (\\\\n                <Box fullWidth>\\\\n                  <TextInput\\\\n                    id='someId'\\\\n                    name={name}\\\\n                    className='someClassname'\\\\n                    label='Holidays'\\\\n                    variant='basic'\\\\n                    labelColor='text.inputLabel.default'\\\\n                    placeholder='Please Click Here'\\\\n                    fullWidth\\\\n                    value={value?.toString()}\\\\n                    onChange={action('On change clicked')}\\\\n                    onClick={() => setOpen(!open)}\\\\n                  />\\\\n                </Box>\\\\n              )}\\\\n            </DateRangePicker>\\\\n          </Position>\\\\n\\\\n          <Box\\\\n            flexGrow={1}\\\\n            style={{ overflow: 'auto' }}\\\\n            p='15px'\\\\n            fullWidth\\\\n            mt='50px'\\\\n          >\\\\n            <FilterMultiselect\\\\n              id='branch'\\\\n              label='Hub'\\\\n              options={options}\\\\n              onSelectionChange={action('On Change')}\\\\n            />\\\\n          </Box>\\\\n          <Box\\\\n            display='flex'\\\\n            justifyContent='flex-end'\\\\n            p='15px'\\\\n            horizontalSpacing='10px'\\\\n            fullWidth\\\\n          >\\\\n            <IconButton iconVariant='icomoon-tick-circled' primary>\\\\n              Apply\\\\n            </IconButton>\\\\n            <IconButton iconVariant='icomoon-back'>Reset</IconButton>\\\\n          </Box>\\\\n        </Box>\\\\n      </FilterDrawer>\\\\n    </ThemeWrapper>\\\\n  )\\\\n}, {__STORY__, __ADDS_MAP__,__MAIN_FILE_LOCATION__,__MODULE_DEPENDENCIES__,__LOCAL_DEPENDENCIES__,__SOURCE_PREFIX__,__IDS_TO_FRAMEWORKS__});\\\";\\n// @ts-ignore\\nvar __ADDS_MAP__ = {};\\n// @ts-ignore\\nvar __MAIN_FILE_LOCATION__ = \\\"/FilterDrawer.stories.tsx\\\";\\n// @ts-ignore\\nvar __MODULE_DEPENDENCIES__ = [];\\n// @ts-ignore\\nvar __LOCAL_DEPENDENCIES__ = {};\\n// @ts-ignore\\nvar __IDS_TO_FRAMEWORKS__ = {};\\n        \\n\\n\\n// @ts-nocheck\\n// @ts-ignore\\nvar withSourceLoader = require('@storybook/source-loader/preview').withSource;\\n// @ts-ignore\\nvar addSourceDecorator = require(\\\"@storybook/source-loader/preview\\\").addSource;\\n// @ts-ignore\\nvar __SOURCE_PREFIX__ = \\\"/Users/farhanansari/Code/ui-library/src/components/atoms/FilterDrawer\\\";\\n// @ts-ignore\\nvar __STORY__ = \\\"import React from 'react'\\\\nimport FilterDrawer from '.'\\\\nimport { path } from '..'\\\\nimport ThemeWrapper from '../../../utilities/components/ThemeWrapper'\\\\n\\\\nimport ModalHeader from '../../molecules/ModalHeader'\\\\nimport Box from '../Box'\\\\nimport IconButton from '../IconButton'\\\\nimport { IFilterMultiselectOption } from '../../molecules/FilterMultiselect/interfaces'\\\\nimport FilterMultiselect from '../../molecules/FilterMultiselect'\\\\nimport { action } from '@storybook/addon-actions'\\\\nimport { boolean, text } from '@storybook/addon-knobs'\\\\nimport { DateRangePicker } from '../../molecules/DatePicker'\\\\nimport { tDateRangeChildren } from '../../molecules/DatePicker/interfaces'\\\\nimport TextInput from '../../molecules/TextInput'\\\\nimport Position from '../../molecules/Position'\\\\n\\\\nexport default {\\\\n  title: `${path}/FilterDrawer`,\\\\n  component: FilterDrawer\\\\n}\\\\n\\\\nconst options: IFilterMultiselectOption[] = [\\\\n  { id: '1', label: 'Powai', value: 'powai' },\\\\n  { id: '2', label: 'Andheri', value: 'andheri' },\\\\n  { id: '3', label: 'Bhandup', value: 'bhandup' }\\\\n]\\\\n\\\\nconst getFormattedDate = (date: Date) => {\\\\n  const todayTime = date\\\\n  const month = todayTime.getMonth() + 1\\\\n  const day = todayTime.getDate()\\\\n  const year = todayTime.getFullYear()\\\\n  const hours = todayTime.getHours()\\\\n  const minutes = todayTime.getMinutes()\\\\n  return month + '/' + day + '/' + year + ' ' + hours + ':' + minutes\\\\n}\\\\n\\\\nexport const withBasic = () => {\\\\n  const [isFilterOpen, setFilterOpen] = React.useState<boolean>(true)\\\\n\\\\n  // state that manages DatePickers value\\\\n\\\\n  return (\\\\n    <ThemeWrapper>\\\\n      <IconButton\\\\n        iconVariant='icomoon-funel'\\\\n        onClick={() => setFilterOpen((f) => !f)}\\\\n      >\\\\n        Filter\\\\n      </IconButton>\\\\n\\\\n      <FilterDrawer isOpen={isFilterOpen}>\\\\n        <Box display='flex' flexDirection='column' fullWidth fullHeight>\\\\n          <ModalHeader\\\\n            headerTitle='Analytics Filter'\\\\n            handleClose={() => setFilterOpen(false)}\\\\n            width='100%'\\\\n          />\\\\n\\\\n          {/* element that holds DateRangePickers value */}\\\\n          <Position type='relative'>\\\\n            <DateRangePicker\\\\n              onFromChange={action('From Clicked')}\\\\n              onToChange={action('To Clicked')}\\\\n              onApply={action('Apply Clicked')}\\\\n              onCancel={action('Cancel Clicked')}\\\\n              label={text('Label', 'Date Range')}\\\\n              variant='daterange'\\\\n              timeFormat={24}\\\\n              showTime={boolean('Show time', true)}\\\\n              startDate={new Date()}\\\\n              fromDateFormatter={getFormattedDate}\\\\n              toDateFormatter={getFormattedDate}\\\\n              style={{\\\\n                background: '#ccc',\\\\n                right: '0px',\\\\n                position: 'fixed'\\\\n              }}\\\\n            >\\\\n              {({ value, open, setOpen }: tDateRangeChildren) => (\\\\n                <Box fullWidth>\\\\n                  <TextInput\\\\n                    id='someId'\\\\n                    name={name}\\\\n                    className='someClassname'\\\\n                    label='Holidays'\\\\n                    variant='basic'\\\\n                    labelColor='text.inputLabel.default'\\\\n                    placeholder='Please Click Here'\\\\n                    fullWidth\\\\n                    value={value?.toString()}\\\\n                    onChange={action('On change clicked')}\\\\n                    onClick={() => setOpen(!open)}\\\\n                  />\\\\n                </Box>\\\\n              )}\\\\n            </DateRangePicker>\\\\n          </Position>\\\\n\\\\n          <Box\\\\n            flexGrow={1}\\\\n            style={{ overflow: 'auto' }}\\\\n            p='15px'\\\\n            fullWidth\\\\n            mt='50px'\\\\n          >\\\\n            <FilterMultiselect\\\\n              id='branch'\\\\n              label='Hub'\\\\n              options={options}\\\\n              onSelectionChange={action('On Change')}\\\\n            />\\\\n          </Box>\\\\n          <Box\\\\n            display='flex'\\\\n            justifyContent='flex-end'\\\\n            p='15px'\\\\n            horizontalSpacing='10px'\\\\n            fullWidth\\\\n          >\\\\n            <IconButton iconVariant='icomoon-tick-circled' primary>\\\\n              Apply\\\\n            </IconButton>\\\\n            <IconButton iconVariant='icomoon-back'>Reset</IconButton>\\\\n          </Box>\\\\n        </Box>\\\\n      </FilterDrawer>\\\\n    </ThemeWrapper>\\\\n  )\\\\n}\\\\n\\\";\\n// @ts-ignore\\nvar __ADDS_MAP__ = {};\\n// @ts-ignore\\nvar __MAIN_FILE_LOCATION__ = \\\"/FilterDrawer.stories.tsx\\\";\\n// @ts-ignore\\nvar __MODULE_DEPENDENCIES__ = [];\\n// @ts-ignore\\nvar __LOCAL_DEPENDENCIES__ = {};\\n// @ts-ignore\\nvar __IDS_TO_FRAMEWORKS__ = {};\\n        \\nimport React from 'react'\\nimport FilterDrawer from '.'\\nimport { path } from '..'\\nimport ThemeWrapper from '../../../utilities/components/ThemeWrapper'\\n\\nimport ModalHeader from '../../molecules/ModalHeader'\\nimport Box from '../Box'\\nimport IconButton from '../IconButton'\\nimport { IFilterMultiselectOption } from '../../molecules/FilterMultiselect/interfaces'\\nimport FilterMultiselect from '../../molecules/FilterMultiselect'\\nimport { action } from '@storybook/addon-actions'\\nimport { boolean, text } from '@storybook/addon-knobs'\\nimport { DateRangePicker } from '../../molecules/DatePicker'\\nimport { tDateRangeChildren } from '../../molecules/DatePicker/interfaces'\\nimport TextInput from '../../molecules/TextInput'\\nimport Position from '../../molecules/Position'\\n\\nexport default {parameters: {\\\"storySource\\\":{\\\"source\\\":\\\"\\\\n\\\\n// @ts-nocheck\\\\n// @ts-ignore\\\\nvar withSourceLoader = require('@storybook/source-loader/preview').withSource;\\\\n// @ts-ignore\\\\nvar addSourceDecorator = require(\\\\\\\"@storybook/source-loader/preview\\\\\\\").addSource;\\\\n// @ts-ignore\\\\nvar __SOURCE_PREFIX__ = \\\\\\\"/Users/farhanansari/Code/ui-library/src/components/atoms/FilterDrawer\\\\\\\";\\\\n// @ts-ignore\\\\nvar __STORY__ = \\\\\\\"import React from 'react'\\\\\\\\nimport FilterDrawer from '.'\\\\\\\\nimport { path } from '..'\\\\\\\\nimport ThemeWrapper from '../../../utilities/components/ThemeWrapper'\\\\\\\\n\\\\\\\\nimport ModalHeader from '../../molecules/ModalHeader'\\\\\\\\nimport Box from '../Box'\\\\\\\\nimport IconButton from '../IconButton'\\\\\\\\nimport { IFilterMultiselectOption } from '../../molecules/FilterMultiselect/interfaces'\\\\\\\\nimport FilterMultiselect from '../../molecules/FilterMultiselect'\\\\\\\\nimport { action } from '@storybook/addon-actions'\\\\\\\\nimport { boolean, text } from '@storybook/addon-knobs'\\\\\\\\nimport { DateRangePicker } from '../../molecules/DatePicker'\\\\\\\\nimport { tDateRangeChildren } from '../../molecules/DatePicker/interfaces'\\\\\\\\nimport TextInput from '../../molecules/TextInput'\\\\\\\\nimport Position from '../../molecules/Position'\\\\\\\\n\\\\\\\\nexport default {\\\\\\\\n  title: `${path}/FilterDrawer`,\\\\\\\\n  component: FilterDrawer\\\\\\\\n}\\\\\\\\n\\\\\\\\nconst options: IFilterMultiselectOption[] = [\\\\\\\\n  { id: '1', label: 'Powai', value: 'powai' },\\\\\\\\n  { id: '2', label: 'Andheri', value: 'andheri' },\\\\\\\\n  { id: '3', label: 'Bhandup', value: 'bhandup' }\\\\\\\\n]\\\\\\\\n\\\\\\\\nconst getFormattedDate = (date: Date) => {\\\\\\\\n  const todayTime = date\\\\\\\\n  const month = todayTime.getMonth() + 1\\\\\\\\n  const day = todayTime.getDate()\\\\\\\\n  const year = todayTime.getFullYear()\\\\\\\\n  const hours = todayTime.getHours()\\\\\\\\n  const minutes = todayTime.getMinutes()\\\\\\\\n  return month + '/' + day + '/' + year + ' ' + hours + ':' + minutes\\\\\\\\n}\\\\\\\\n\\\\\\\\nexport const withBasic = () => {\\\\\\\\n  const [isFilterOpen, setFilterOpen] = React.useState<boolean>(true)\\\\\\\\n\\\\\\\\n  // state that manages DatePickers value\\\\\\\\n\\\\\\\\n  return (\\\\\\\\n    <ThemeWrapper>\\\\\\\\n      <IconButton\\\\\\\\n        iconVariant='icomoon-funel'\\\\\\\\n        onClick={() => setFilterOpen((f) => !f)}\\\\\\\\n      >\\\\\\\\n        Filter\\\\\\\\n      </IconButton>\\\\\\\\n\\\\\\\\n      <FilterDrawer isOpen={isFilterOpen}>\\\\\\\\n        <Box display='flex' flexDirection='column' fullWidth fullHeight>\\\\\\\\n          <ModalHeader\\\\\\\\n            headerTitle='Analytics Filter'\\\\\\\\n            handleClose={() => setFilterOpen(false)}\\\\\\\\n            width='100%'\\\\\\\\n          />\\\\\\\\n\\\\\\\\n          {/* element that holds DateRangePickers value */}\\\\\\\\n          <Position type='relative'>\\\\\\\\n            <DateRangePicker\\\\\\\\n              onFromChange={action('From Clicked')}\\\\\\\\n              onToChange={action('To Clicked')}\\\\\\\\n              onApply={action('Apply Clicked')}\\\\\\\\n              onCancel={action('Cancel Clicked')}\\\\\\\\n              label={text('Label', 'Date Range')}\\\\\\\\n              variant='daterange'\\\\\\\\n              timeFormat={24}\\\\\\\\n              showTime={boolean('Show time', true)}\\\\\\\\n              startDate={new Date()}\\\\\\\\n              fromDateFormatter={getFormattedDate}\\\\\\\\n              toDateFormatter={getFormattedDate}\\\\\\\\n              style={{\\\\\\\\n                background: '#ccc',\\\\\\\\n                right: '0px',\\\\\\\\n                position: 'fixed'\\\\\\\\n              }}\\\\\\\\n            >\\\\\\\\n              {({ value, open, setOpen }: tDateRangeChildren) => (\\\\\\\\n                <Box fullWidth>\\\\\\\\n                  <TextInput\\\\\\\\n                    id='someId'\\\\\\\\n                    name={name}\\\\\\\\n                    className='someClassname'\\\\\\\\n                    label='Holidays'\\\\\\\\n                    variant='basic'\\\\\\\\n                    labelColor='text.inputLabel.default'\\\\\\\\n                    placeholder='Please Click Here'\\\\\\\\n                    fullWidth\\\\\\\\n                    value={value?.toString()}\\\\\\\\n                    onChange={action('On change clicked')}\\\\\\\\n                    onClick={() => setOpen(!open)}\\\\\\\\n                  />\\\\\\\\n                </Box>\\\\\\\\n              )}\\\\\\\\n            </DateRangePicker>\\\\\\\\n          </Position>\\\\\\\\n\\\\\\\\n          <Box\\\\\\\\n            flexGrow={1}\\\\\\\\n            style={{ overflow: 'auto' }}\\\\\\\\n            p='15px'\\\\\\\\n            fullWidth\\\\\\\\n            mt='50px'\\\\\\\\n          >\\\\\\\\n            <FilterMultiselect\\\\\\\\n              id='branch'\\\\\\\\n              label='Hub'\\\\\\\\n              options={options}\\\\\\\\n              onSelectionChange={action('On Change')}\\\\\\\\n            />\\\\\\\\n          </Box>\\\\\\\\n          <Box\\\\\\\\n            display='flex'\\\\\\\\n            justifyContent='flex-end'\\\\\\\\n            p='15px'\\\\\\\\n            horizontalSpacing='10px'\\\\\\\\n            fullWidth\\\\\\\\n          >\\\\\\\\n            <IconButton iconVariant='icomoon-tick-circled' primary>\\\\\\\\n              Apply\\\\\\\\n            </IconButton>\\\\\\\\n            <IconButton iconVariant='icomoon-back'>Reset</IconButton>\\\\\\\\n          </Box>\\\\\\\\n        </Box>\\\\\\\\n      </FilterDrawer>\\\\\\\\n    </ThemeWrapper>\\\\\\\\n  )\\\\\\\\n}\\\\\\\\n\\\\\\\";\\\\n// @ts-ignore\\\\nvar __ADDS_MAP__ = {};\\\\n// @ts-ignore\\\\nvar __MAIN_FILE_LOCATION__ = \\\\\\\"/FilterDrawer.stories.tsx\\\\\\\";\\\\n// @ts-ignore\\\\nvar __MODULE_DEPENDENCIES__ = [];\\\\n// @ts-ignore\\\\nvar __LOCAL_DEPENDENCIES__ = {};\\\\n// @ts-ignore\\\\nvar __IDS_TO_FRAMEWORKS__ = {};\\\\n        \\\\nimport React from 'react'\\\\nimport FilterDrawer from '.'\\\\nimport { path } from '..'\\\\nimport ThemeWrapper from '../../../utilities/components/ThemeWrapper'\\\\n\\\\nimport ModalHeader from '../../molecules/ModalHeader'\\\\nimport Box from '../Box'\\\\nimport IconButton from '../IconButton'\\\\nimport { IFilterMultiselectOption } from '../../molecules/FilterMultiselect/interfaces'\\\\nimport FilterMultiselect from '../../molecules/FilterMultiselect'\\\\nimport { action } from '@storybook/addon-actions'\\\\nimport { boolean, text } from '@storybook/addon-knobs'\\\\nimport { DateRangePicker } from '../../molecules/DatePicker'\\\\nimport { tDateRangeChildren } from '../../molecules/DatePicker/interfaces'\\\\nimport TextInput from '../../molecules/TextInput'\\\\nimport Position from '../../molecules/Position'\\\\n\\\\nexport default {parameters: {\\\\\\\"storySource\\\\\\\":{\\\\\\\"source\\\\\\\":\\\\\\\"import React from 'react'\\\\\\\\nimport FilterDrawer from '.'\\\\\\\\nimport { path } from '..'\\\\\\\\nimport ThemeWrapper from '../../../utilities/components/ThemeWrapper'\\\\\\\\n\\\\\\\\nimport ModalHeader from '../../molecules/ModalHeader'\\\\\\\\nimport Box from '../Box'\\\\\\\\nimport IconButton from '../IconButton'\\\\\\\\nimport { IFilterMultiselectOption } from '../../molecules/FilterMultiselect/interfaces'\\\\\\\\nimport FilterMultiselect from '../../molecules/FilterMultiselect'\\\\\\\\nimport { action } from '@storybook/addon-actions'\\\\\\\\nimport { boolean, text } from '@storybook/addon-knobs'\\\\\\\\nimport { DateRangePicker } from '../../molecules/DatePicker'\\\\\\\\nimport { tDateRangeChildren } from '../../molecules/DatePicker/interfaces'\\\\\\\\nimport TextInput from '../../molecules/TextInput'\\\\\\\\nimport Position from '../../molecules/Position'\\\\\\\\n\\\\\\\\nexport default {\\\\\\\\n  title: `${path}/FilterDrawer`,\\\\\\\\n  component: FilterDrawer\\\\\\\\n}\\\\\\\\n\\\\\\\\nconst options: IFilterMultiselectOption[] = [\\\\\\\\n  { id: '1', label: 'Powai', value: 'powai' },\\\\\\\\n  { id: '2', label: 'Andheri', value: 'andheri' },\\\\\\\\n  { id: '3', label: 'Bhandup', value: 'bhandup' }\\\\\\\\n]\\\\\\\\n\\\\\\\\nconst getFormattedDate = (date: Date) => {\\\\\\\\n  const todayTime = date\\\\\\\\n  const month = todayTime.getMonth() + 1\\\\\\\\n  const day = todayTime.getDate()\\\\\\\\n  const year = todayTime.getFullYear()\\\\\\\\n  const hours = todayTime.getHours()\\\\\\\\n  const minutes = todayTime.getMinutes()\\\\\\\\n  return month + '/' + day + '/' + year + ' ' + hours + ':' + minutes\\\\\\\\n}\\\\\\\\n\\\\\\\\nexport const withBasic = () => {\\\\\\\\n  const [isFilterOpen, setFilterOpen] = React.useState<boolean>(true)\\\\\\\\n\\\\\\\\n  // state that manages DatePickers value\\\\\\\\n\\\\\\\\n  return (\\\\\\\\n    <ThemeWrapper>\\\\\\\\n      <IconButton\\\\\\\\n        iconVariant='icomoon-funel'\\\\\\\\n        onClick={() => setFilterOpen((f) => !f)}\\\\\\\\n      >\\\\\\\\n        Filter\\\\\\\\n      </IconButton>\\\\\\\\n\\\\\\\\n      <FilterDrawer isOpen={isFilterOpen}>\\\\\\\\n        <Box display='flex' flexDirection='column' fullWidth fullHeight>\\\\\\\\n          <ModalHeader\\\\\\\\n            headerTitle='Analytics Filter'\\\\\\\\n            handleClose={() => setFilterOpen(false)}\\\\\\\\n            width='100%'\\\\\\\\n          />\\\\\\\\n\\\\\\\\n          {/* element that holds DateRangePickers value */}\\\\\\\\n          <Position type='relative'>\\\\\\\\n            <DateRangePicker\\\\\\\\n              onFromChange={action('From Clicked')}\\\\\\\\n              onToChange={action('To Clicked')}\\\\\\\\n              onApply={action('Apply Clicked')}\\\\\\\\n              onCancel={action('Cancel Clicked')}\\\\\\\\n              label={text('Label', 'Date Range')}\\\\\\\\n              variant='daterange'\\\\\\\\n              timeFormat={24}\\\\\\\\n              showTime={boolean('Show time', true)}\\\\\\\\n              startDate={new Date()}\\\\\\\\n              fromDateFormatter={getFormattedDate}\\\\\\\\n              toDateFormatter={getFormattedDate}\\\\\\\\n              style={{\\\\\\\\n                background: '#ccc',\\\\\\\\n                right: '0px',\\\\\\\\n                position: 'fixed'\\\\\\\\n              }}\\\\\\\\n            >\\\\\\\\n              {({ value, open, setOpen }: tDateRangeChildren) => (\\\\\\\\n                <Box fullWidth>\\\\\\\\n                  <TextInput\\\\\\\\n                    id='someId'\\\\\\\\n                    name={name}\\\\\\\\n                    className='someClassname'\\\\\\\\n                    label='Holidays'\\\\\\\\n                    variant='basic'\\\\\\\\n                    labelColor='text.inputLabel.default'\\\\\\\\n                    placeholder='Please Click Here'\\\\\\\\n                    fullWidth\\\\\\\\n                    value={value?.toString()}\\\\\\\\n                    onChange={action('On change clicked')}\\\\\\\\n                    onClick={() => setOpen(!open)}\\\\\\\\n                  />\\\\\\\\n                </Box>\\\\\\\\n              )}\\\\\\\\n            </DateRangePicker>\\\\\\\\n          </Position>\\\\\\\\n\\\\\\\\n          <Box\\\\\\\\n            flexGrow={1}\\\\\\\\n            style={{ overflow: 'auto' }}\\\\\\\\n            p='15px'\\\\\\\\n            fullWidth\\\\\\\\n            mt='50px'\\\\\\\\n          >\\\\\\\\n            <FilterMultiselect\\\\\\\\n              id='branch'\\\\\\\\n              label='Hub'\\\\\\\\n              options={options}\\\\\\\\n              onSelectionChange={action('On Change')}\\\\\\\\n            />\\\\\\\\n          </Box>\\\\\\\\n          <Box\\\\\\\\n            display='flex'\\\\\\\\n            justifyContent='flex-end'\\\\\\\\n            p='15px'\\\\\\\\n            horizontalSpacing='10px'\\\\\\\\n            fullWidth\\\\\\\\n          >\\\\\\\\n            <IconButton iconVariant='icomoon-tick-circled' primary>\\\\\\\\n              Apply\\\\\\\\n            </IconButton>\\\\\\\\n            <IconButton iconVariant='icomoon-back'>Reset</IconButton>\\\\\\\\n          </Box>\\\\\\\\n        </Box>\\\\\\\\n      </FilterDrawer>\\\\\\\\n    </ThemeWrapper>\\\\\\\\n  )\\\\\\\\n}\\\\\\\\n\\\\\\\",\\\\\\\"locationsMap\\\\\\\":{}},},\\\\n  title: `${path}/FilterDrawer`,\\\\n  component: FilterDrawer\\\\n}\\\\n\\\\nconst options: IFilterMultiselectOption[] = [\\\\n  { id: '1', label: 'Powai', value: 'powai' },\\\\n  { id: '2', label: 'Andheri', value: 'andheri' },\\\\n  { id: '3', label: 'Bhandup', value: 'bhandup' }\\\\n]\\\\n\\\\nconst getFormattedDate = (date: Date) => {\\\\n  const todayTime = date\\\\n  const month = todayTime.getMonth() + 1\\\\n  const day = todayTime.getDate()\\\\n  const year = todayTime.getFullYear()\\\\n  const hours = todayTime.getHours()\\\\n  const minutes = todayTime.getMinutes()\\\\n  return month + '/' + day + '/' + year + ' ' + hours + ':' + minutes\\\\n}\\\\n\\\\nexport const withBasic = addSourceDecorator(() => {\\\\n  const [isFilterOpen, setFilterOpen] = React.useState<boolean>(true)\\\\n\\\\n  // state that manages DatePickers value\\\\n\\\\n  return (\\\\n    <ThemeWrapper>\\\\n      <IconButton\\\\n        iconVariant='icomoon-funel'\\\\n        onClick={() => setFilterOpen((f) => !f)}\\\\n      >\\\\n        Filter\\\\n      </IconButton>\\\\n\\\\n      <FilterDrawer isOpen={isFilterOpen}>\\\\n        <Box display='flex' flexDirection='column' fullWidth fullHeight>\\\\n          <ModalHeader\\\\n            headerTitle='Analytics Filter'\\\\n            handleClose={() => setFilterOpen(false)}\\\\n            width='100%'\\\\n          />\\\\n\\\\n          {/* element that holds DateRangePickers value */}\\\\n          <Position type='relative'>\\\\n            <DateRangePicker\\\\n              onFromChange={action('From Clicked')}\\\\n              onToChange={action('To Clicked')}\\\\n              onApply={action('Apply Clicked')}\\\\n              onCancel={action('Cancel Clicked')}\\\\n              label={text('Label', 'Date Range')}\\\\n              variant='daterange'\\\\n              timeFormat={24}\\\\n              showTime={boolean('Show time', true)}\\\\n              startDate={new Date()}\\\\n              fromDateFormatter={getFormattedDate}\\\\n              toDateFormatter={getFormattedDate}\\\\n              style={{\\\\n                background: '#ccc',\\\\n                right: '0px',\\\\n                position: 'fixed'\\\\n              }}\\\\n            >\\\\n              {({ value, open, setOpen }: tDateRangeChildren) => (\\\\n                <Box fullWidth>\\\\n                  <TextInput\\\\n                    id='someId'\\\\n                    name={name}\\\\n                    className='someClassname'\\\\n                    label='Holidays'\\\\n                    variant='basic'\\\\n                    labelColor='text.inputLabel.default'\\\\n                    placeholder='Please Click Here'\\\\n                    fullWidth\\\\n                    value={value?.toString()}\\\\n                    onChange={action('On change clicked')}\\\\n                    onClick={() => setOpen(!open)}\\\\n                  />\\\\n                </Box>\\\\n              )}\\\\n            </DateRangePicker>\\\\n          </Position>\\\\n\\\\n          <Box\\\\n            flexGrow={1}\\\\n            style={{ overflow: 'auto' }}\\\\n            p='15px'\\\\n            fullWidth\\\\n            mt='50px'\\\\n          >\\\\n            <FilterMultiselect\\\\n              id='branch'\\\\n              label='Hub'\\\\n              options={options}\\\\n              onSelectionChange={action('On Change')}\\\\n            />\\\\n          </Box>\\\\n          <Box\\\\n            display='flex'\\\\n            justifyContent='flex-end'\\\\n            p='15px'\\\\n            horizontalSpacing='10px'\\\\n            fullWidth\\\\n          >\\\\n            <IconButton iconVariant='icomoon-tick-circled' primary>\\\\n              Apply\\\\n            </IconButton>\\\\n            <IconButton iconVariant='icomoon-back'>Reset</IconButton>\\\\n          </Box>\\\\n        </Box>\\\\n      </FilterDrawer>\\\\n    </ThemeWrapper>\\\\n  )\\\\n}, {__STORY__, __ADDS_MAP__,__MAIN_FILE_LOCATION__,__MODULE_DEPENDENCIES__,__LOCAL_DEPENDENCIES__,__SOURCE_PREFIX__,__IDS_TO_FRAMEWORKS__});\\\",\\\"locationsMap\\\":{}},\\\"storySource\\\":{\\\"source\\\":\\\"import React from 'react'\\\\nimport FilterDrawer from '.'\\\\nimport { path } from '..'\\\\nimport ThemeWrapper from '../../../utilities/components/ThemeWrapper'\\\\n\\\\nimport ModalHeader from '../../molecules/ModalHeader'\\\\nimport Box from '../Box'\\\\nimport IconButton from '../IconButton'\\\\nimport { IFilterMultiselectOption } from '../../molecules/FilterMultiselect/interfaces'\\\\nimport FilterMultiselect from '../../molecules/FilterMultiselect'\\\\nimport { action } from '@storybook/addon-actions'\\\\nimport { boolean, text } from '@storybook/addon-knobs'\\\\nimport { DateRangePicker } from '../../molecules/DatePicker'\\\\nimport { tDateRangeChildren } from '../../molecules/DatePicker/interfaces'\\\\nimport TextInput from '../../molecules/TextInput'\\\\nimport Position from '../../molecules/Position'\\\\n\\\\nexport default {\\\\n  title: `${path}/FilterDrawer`,\\\\n  component: FilterDrawer\\\\n}\\\\n\\\\nconst options: IFilterMultiselectOption[] = [\\\\n  { id: '1', label: 'Powai', value: 'powai' },\\\\n  { id: '2', label: 'Andheri', value: 'andheri' },\\\\n  { id: '3', label: 'Bhandup', value: 'bhandup' }\\\\n]\\\\n\\\\nconst getFormattedDate = (date: Date) => {\\\\n  const todayTime = date\\\\n  const month = todayTime.getMonth() + 1\\\\n  const day = todayTime.getDate()\\\\n  const year = todayTime.getFullYear()\\\\n  const hours = todayTime.getHours()\\\\n  const minutes = todayTime.getMinutes()\\\\n  return month + '/' + day + '/' + year + ' ' + hours + ':' + minutes\\\\n}\\\\n\\\\nexport const withBasic = () => {\\\\n  const [isFilterOpen, setFilterOpen] = React.useState<boolean>(true)\\\\n\\\\n  // state that manages DatePickers value\\\\n\\\\n  return (\\\\n    <ThemeWrapper>\\\\n      <IconButton\\\\n        iconVariant='icomoon-funel'\\\\n        onClick={() => setFilterOpen((f) => !f)}\\\\n      >\\\\n        Filter\\\\n      </IconButton>\\\\n\\\\n      <FilterDrawer isOpen={isFilterOpen}>\\\\n        <Box display='flex' flexDirection='column' fullWidth fullHeight>\\\\n          <ModalHeader\\\\n            headerTitle='Analytics Filter'\\\\n            handleClose={() => setFilterOpen(false)}\\\\n            width='100%'\\\\n          />\\\\n\\\\n          {/* element that holds DateRangePickers value */}\\\\n          <Position type='relative'>\\\\n            <DateRangePicker\\\\n              onFromChange={action('From Clicked')}\\\\n              onToChange={action('To Clicked')}\\\\n              onApply={action('Apply Clicked')}\\\\n              onCancel={action('Cancel Clicked')}\\\\n              label={text('Label', 'Date Range')}\\\\n              variant='daterange'\\\\n              timeFormat={24}\\\\n              showTime={boolean('Show time', true)}\\\\n              startDate={new Date()}\\\\n              fromDateFormatter={getFormattedDate}\\\\n              toDateFormatter={getFormattedDate}\\\\n              style={{\\\\n                background: '#ccc',\\\\n                right: '0px',\\\\n                position: 'fixed'\\\\n              }}\\\\n            >\\\\n              {({ value, open, setOpen }: tDateRangeChildren) => (\\\\n                <Box fullWidth>\\\\n                  <TextInput\\\\n                    id='someId'\\\\n                    name={name}\\\\n                    className='someClassname'\\\\n                    label='Holidays'\\\\n                    variant='basic'\\\\n                    labelColor='text.inputLabel.default'\\\\n                    placeholder='Please Click Here'\\\\n                    fullWidth\\\\n                    value={value?.toString()}\\\\n                    onChange={action('On change clicked')}\\\\n                    onClick={() => setOpen(!open)}\\\\n                  />\\\\n                </Box>\\\\n              )}\\\\n            </DateRangePicker>\\\\n          </Position>\\\\n\\\\n          <Box\\\\n            flexGrow={1}\\\\n            style={{ overflow: 'auto' }}\\\\n            p='15px'\\\\n            fullWidth\\\\n            mt='50px'\\\\n          >\\\\n            <FilterMultiselect\\\\n              id='branch'\\\\n              label='Hub'\\\\n              options={options}\\\\n              onSelectionChange={action('On Change')}\\\\n            />\\\\n          </Box>\\\\n          <Box\\\\n            display='flex'\\\\n            justifyContent='flex-end'\\\\n            p='15px'\\\\n            horizontalSpacing='10px'\\\\n            fullWidth\\\\n          >\\\\n            <IconButton iconVariant='icomoon-tick-circled' primary>\\\\n              Apply\\\\n            </IconButton>\\\\n            <IconButton iconVariant='icomoon-back'>Reset</IconButton>\\\\n          </Box>\\\\n        </Box>\\\\n      </FilterDrawer>\\\\n    </ThemeWrapper>\\\\n  )\\\\n}\\\\n\\\",\\\"locationsMap\\\":{}},},\\n  title: `${path}/FilterDrawer`,\\n  component: FilterDrawer\\n}\\n\\nconst options: IFilterMultiselectOption[] = [\\n  { id: '1', label: 'Powai', value: 'powai' },\\n  { id: '2', label: 'Andheri', value: 'andheri' },\\n  { id: '3', label: 'Bhandup', value: 'bhandup' }\\n]\\n\\nconst getFormattedDate = (date: Date) => {\\n  const todayTime = date\\n  const month = todayTime.getMonth() + 1\\n  const day = todayTime.getDate()\\n  const year = todayTime.getFullYear()\\n  const hours = todayTime.getHours()\\n  const minutes = todayTime.getMinutes()\\n  return month + '/' + day + '/' + year + ' ' + hours + ':' + minutes\\n}\\n\\nexport const withBasic = addSourceDecorator(addSourceDecorator(() => {\\n  const [isFilterOpen, setFilterOpen] = React.useState<boolean>(true)\\n\\n  // state that manages DatePickers value\\n\\n  return (\\n    <ThemeWrapper>\\n      <IconButton\\n        iconVariant='icomoon-funel'\\n        onClick={() => setFilterOpen((f) => !f)}\\n      >\\n        Filter\\n      </IconButton>\\n\\n      <FilterDrawer isOpen={isFilterOpen}>\\n        <Box display='flex' flexDirection='column' fullWidth fullHeight>\\n          <ModalHeader\\n            headerTitle='Analytics Filter'\\n            handleClose={() => setFilterOpen(false)}\\n            width='100%'\\n          />\\n\\n          {/* element that holds DateRangePickers value */}\\n          <Position type='relative'>\\n            <DateRangePicker\\n              onFromChange={action('From Clicked')}\\n              onToChange={action('To Clicked')}\\n              onApply={action('Apply Clicked')}\\n              onCancel={action('Cancel Clicked')}\\n              label={text('Label', 'Date Range')}\\n              variant='daterange'\\n              timeFormat={24}\\n              showTime={boolean('Show time', true)}\\n              startDate={new Date()}\\n              fromDateFormatter={getFormattedDate}\\n              toDateFormatter={getFormattedDate}\\n              style={{\\n                background: '#ccc',\\n                right: '0px',\\n                position: 'fixed'\\n              }}\\n            >\\n              {({ value, open, setOpen }: tDateRangeChildren) => (\\n                <Box fullWidth>\\n                  <TextInput\\n                    id='someId'\\n                    name={name}\\n                    className='someClassname'\\n                    label='Holidays'\\n                    variant='basic'\\n                    labelColor='text.inputLabel.default'\\n                    placeholder='Please Click Here'\\n                    fullWidth\\n                    value={value?.toString()}\\n                    onChange={action('On change clicked')}\\n                    onClick={() => setOpen(!open)}\\n                  />\\n                </Box>\\n              )}\\n            </DateRangePicker>\\n          </Position>\\n\\n          <Box\\n            flexGrow={1}\\n            style={{ overflow: 'auto' }}\\n            p='15px'\\n            fullWidth\\n            mt='50px'\\n          >\\n            <FilterMultiselect\\n              id='branch'\\n              label='Hub'\\n              options={options}\\n              onSelectionChange={action('On Change')}\\n            />\\n          </Box>\\n          <Box\\n            display='flex'\\n            justifyContent='flex-end'\\n            p='15px'\\n            horizontalSpacing='10px'\\n            fullWidth\\n          >\\n            <IconButton iconVariant='icomoon-tick-circled' primary>\\n              Apply\\n            </IconButton>\\n            <IconButton iconVariant='icomoon-back'>Reset</IconButton>\\n          </Box>\\n        </Box>\\n      </FilterDrawer>\\n    </ThemeWrapper>\\n  )\\n}, {__STORY__, __ADDS_MAP__,__MAIN_FILE_LOCATION__,__MODULE_DEPENDENCIES__,__LOCAL_DEPENDENCIES__,__SOURCE_PREFIX__,__IDS_TO_FRAMEWORKS__}), {__STORY__, __ADDS_MAP__,__MAIN_FILE_LOCATION__,__MODULE_DEPENDENCIES__,__LOCAL_DEPENDENCIES__,__SOURCE_PREFIX__,__IDS_TO_FRAMEWORKS__});\",\n      \"locationsMap\": {}\n    }\n  }, _defineProperty(_parameters, \"storySource\", {\n    \"source\": \"\\n\\n// @ts-nocheck\\n// @ts-ignore\\nvar withSourceLoader = require('@storybook/source-loader/preview').withSource;\\n// @ts-ignore\\nvar addSourceDecorator = require(\\\"@storybook/source-loader/preview\\\").addSource;\\n// @ts-ignore\\nvar __SOURCE_PREFIX__ = \\\"/Users/farhanansari/Code/ui-library/src/components/atoms/FilterDrawer\\\";\\n// @ts-ignore\\nvar __STORY__ = \\\"import React from 'react'\\\\nimport FilterDrawer from '.'\\\\nimport { path } from '..'\\\\nimport ThemeWrapper from '../../../utilities/components/ThemeWrapper'\\\\n\\\\nimport ModalHeader from '../../molecules/ModalHeader'\\\\nimport Box from '../Box'\\\\nimport IconButton from '../IconButton'\\\\nimport { IFilterMultiselectOption } from '../../molecules/FilterMultiselect/interfaces'\\\\nimport FilterMultiselect from '../../molecules/FilterMultiselect'\\\\nimport { action } from '@storybook/addon-actions'\\\\nimport { boolean, text } from '@storybook/addon-knobs'\\\\nimport { DateRangePicker } from '../../molecules/DatePicker'\\\\nimport { tDateRangeChildren } from '../../molecules/DatePicker/interfaces'\\\\nimport TextInput from '../../molecules/TextInput'\\\\nimport Position from '../../molecules/Position'\\\\n\\\\nexport default {\\\\n  title: `${path}/FilterDrawer`,\\\\n  component: FilterDrawer\\\\n}\\\\n\\\\nconst options: IFilterMultiselectOption[] = [\\\\n  { id: '1', label: 'Powai', value: 'powai' },\\\\n  { id: '2', label: 'Andheri', value: 'andheri' },\\\\n  { id: '3', label: 'Bhandup', value: 'bhandup' }\\\\n]\\\\n\\\\nconst getFormattedDate = (date: Date) => {\\\\n  const todayTime = date\\\\n  const month = todayTime.getMonth() + 1\\\\n  const day = todayTime.getDate()\\\\n  const year = todayTime.getFullYear()\\\\n  const hours = todayTime.getHours()\\\\n  const minutes = todayTime.getMinutes()\\\\n  return month + '/' + day + '/' + year + ' ' + hours + ':' + minutes\\\\n}\\\\n\\\\nexport const withBasic = () => {\\\\n  const [isFilterOpen, setFilterOpen] = React.useState<boolean>(true)\\\\n\\\\n  // state that manages DatePickers value\\\\n\\\\n  return (\\\\n    <ThemeWrapper>\\\\n      <IconButton\\\\n        iconVariant='icomoon-funel'\\\\n        onClick={() => setFilterOpen((f) => !f)}\\\\n      >\\\\n        Filter\\\\n      </IconButton>\\\\n\\\\n      <FilterDrawer isOpen={isFilterOpen}>\\\\n        <Box display='flex' flexDirection='column' fullWidth fullHeight>\\\\n          <ModalHeader\\\\n            headerTitle='Analytics Filter'\\\\n            handleClose={() => setFilterOpen(false)}\\\\n            width='100%'\\\\n          />\\\\n\\\\n          {/* element that holds DateRangePickers value */}\\\\n          <Position type='relative'>\\\\n            <DateRangePicker\\\\n              onFromChange={action('From Clicked')}\\\\n              onToChange={action('To Clicked')}\\\\n              onApply={action('Apply Clicked')}\\\\n              onCancel={action('Cancel Clicked')}\\\\n              label={text('Label', 'Date Range')}\\\\n              variant='daterange'\\\\n              timeFormat={24}\\\\n              showTime={boolean('Show time', true)}\\\\n              startDate={new Date()}\\\\n              fromDateFormatter={getFormattedDate}\\\\n              toDateFormatter={getFormattedDate}\\\\n              style={{\\\\n                background: '#ccc',\\\\n                right: '0px',\\\\n                position: 'fixed'\\\\n              }}\\\\n            >\\\\n              {({ value, open, setOpen }: tDateRangeChildren) => (\\\\n                <Box fullWidth>\\\\n                  <TextInput\\\\n                    id='someId'\\\\n                    name={name}\\\\n                    className='someClassname'\\\\n                    label='Holidays'\\\\n                    variant='basic'\\\\n                    labelColor='text.inputLabel.default'\\\\n                    placeholder='Please Click Here'\\\\n                    fullWidth\\\\n                    value={value?.toString()}\\\\n                    onChange={action('On change clicked')}\\\\n                    onClick={() => setOpen(!open)}\\\\n                  />\\\\n                </Box>\\\\n              )}\\\\n            </DateRangePicker>\\\\n          </Position>\\\\n\\\\n          <Box\\\\n            flexGrow={1}\\\\n            style={{ overflow: 'auto' }}\\\\n            p='15px'\\\\n            fullWidth\\\\n            mt='50px'\\\\n          >\\\\n            <FilterMultiselect\\\\n              id='branch'\\\\n              label='Hub'\\\\n              options={options}\\\\n              onSelectionChange={action('On Change')}\\\\n            />\\\\n          </Box>\\\\n          <Box\\\\n            display='flex'\\\\n            justifyContent='flex-end'\\\\n            p='15px'\\\\n            horizontalSpacing='10px'\\\\n            fullWidth\\\\n          >\\\\n            <IconButton iconVariant='icomoon-tick-circled' primary>\\\\n              Apply\\\\n            </IconButton>\\\\n            <IconButton iconVariant='icomoon-back'>Reset</IconButton>\\\\n          </Box>\\\\n        </Box>\\\\n      </FilterDrawer>\\\\n    </ThemeWrapper>\\\\n  )\\\\n}\\\\n\\\";\\n// @ts-ignore\\nvar __ADDS_MAP__ = {};\\n// @ts-ignore\\nvar __MAIN_FILE_LOCATION__ = \\\"/FilterDrawer.stories.tsx\\\";\\n// @ts-ignore\\nvar __MODULE_DEPENDENCIES__ = [];\\n// @ts-ignore\\nvar __LOCAL_DEPENDENCIES__ = {};\\n// @ts-ignore\\nvar __IDS_TO_FRAMEWORKS__ = {};\\n        \\nimport React from 'react'\\nimport FilterDrawer from '.'\\nimport { path } from '..'\\nimport ThemeWrapper from '../../../utilities/components/ThemeWrapper'\\n\\nimport ModalHeader from '../../molecules/ModalHeader'\\nimport Box from '../Box'\\nimport IconButton from '../IconButton'\\nimport { IFilterMultiselectOption } from '../../molecules/FilterMultiselect/interfaces'\\nimport FilterMultiselect from '../../molecules/FilterMultiselect'\\nimport { action } from '@storybook/addon-actions'\\nimport { boolean, text } from '@storybook/addon-knobs'\\nimport { DateRangePicker } from '../../molecules/DatePicker'\\nimport { tDateRangeChildren } from '../../molecules/DatePicker/interfaces'\\nimport TextInput from '../../molecules/TextInput'\\nimport Position from '../../molecules/Position'\\n\\nexport default {parameters: {\\\"storySource\\\":{\\\"source\\\":\\\"import React from 'react'\\\\nimport FilterDrawer from '.'\\\\nimport { path } from '..'\\\\nimport ThemeWrapper from '../../../utilities/components/ThemeWrapper'\\\\n\\\\nimport ModalHeader from '../../molecules/ModalHeader'\\\\nimport Box from '../Box'\\\\nimport IconButton from '../IconButton'\\\\nimport { IFilterMultiselectOption } from '../../molecules/FilterMultiselect/interfaces'\\\\nimport FilterMultiselect from '../../molecules/FilterMultiselect'\\\\nimport { action } from '@storybook/addon-actions'\\\\nimport { boolean, text } from '@storybook/addon-knobs'\\\\nimport { DateRangePicker } from '../../molecules/DatePicker'\\\\nimport { tDateRangeChildren } from '../../molecules/DatePicker/interfaces'\\\\nimport TextInput from '../../molecules/TextInput'\\\\nimport Position from '../../molecules/Position'\\\\n\\\\nexport default {\\\\n  title: `${path}/FilterDrawer`,\\\\n  component: FilterDrawer\\\\n}\\\\n\\\\nconst options: IFilterMultiselectOption[] = [\\\\n  { id: '1', label: 'Powai', value: 'powai' },\\\\n  { id: '2', label: 'Andheri', value: 'andheri' },\\\\n  { id: '3', label: 'Bhandup', value: 'bhandup' }\\\\n]\\\\n\\\\nconst getFormattedDate = (date: Date) => {\\\\n  const todayTime = date\\\\n  const month = todayTime.getMonth() + 1\\\\n  const day = todayTime.getDate()\\\\n  const year = todayTime.getFullYear()\\\\n  const hours = todayTime.getHours()\\\\n  const minutes = todayTime.getMinutes()\\\\n  return month + '/' + day + '/' + year + ' ' + hours + ':' + minutes\\\\n}\\\\n\\\\nexport const withBasic = () => {\\\\n  const [isFilterOpen, setFilterOpen] = React.useState<boolean>(true)\\\\n\\\\n  // state that manages DatePickers value\\\\n\\\\n  return (\\\\n    <ThemeWrapper>\\\\n      <IconButton\\\\n        iconVariant='icomoon-funel'\\\\n        onClick={() => setFilterOpen((f) => !f)}\\\\n      >\\\\n        Filter\\\\n      </IconButton>\\\\n\\\\n      <FilterDrawer isOpen={isFilterOpen}>\\\\n        <Box display='flex' flexDirection='column' fullWidth fullHeight>\\\\n          <ModalHeader\\\\n            headerTitle='Analytics Filter'\\\\n            handleClose={() => setFilterOpen(false)}\\\\n            width='100%'\\\\n          />\\\\n\\\\n          {/* element that holds DateRangePickers value */}\\\\n          <Position type='relative'>\\\\n            <DateRangePicker\\\\n              onFromChange={action('From Clicked')}\\\\n              onToChange={action('To Clicked')}\\\\n              onApply={action('Apply Clicked')}\\\\n              onCancel={action('Cancel Clicked')}\\\\n              label={text('Label', 'Date Range')}\\\\n              variant='daterange'\\\\n              timeFormat={24}\\\\n              showTime={boolean('Show time', true)}\\\\n              startDate={new Date()}\\\\n              fromDateFormatter={getFormattedDate}\\\\n              toDateFormatter={getFormattedDate}\\\\n              style={{\\\\n                background: '#ccc',\\\\n                right: '0px',\\\\n                position: 'fixed'\\\\n              }}\\\\n            >\\\\n              {({ value, open, setOpen }: tDateRangeChildren) => (\\\\n                <Box fullWidth>\\\\n                  <TextInput\\\\n                    id='someId'\\\\n                    name={name}\\\\n                    className='someClassname'\\\\n                    label='Holidays'\\\\n                    variant='basic'\\\\n                    labelColor='text.inputLabel.default'\\\\n                    placeholder='Please Click Here'\\\\n                    fullWidth\\\\n                    value={value?.toString()}\\\\n                    onChange={action('On change clicked')}\\\\n                    onClick={() => setOpen(!open)}\\\\n                  />\\\\n                </Box>\\\\n              )}\\\\n            </DateRangePicker>\\\\n          </Position>\\\\n\\\\n          <Box\\\\n            flexGrow={1}\\\\n            style={{ overflow: 'auto' }}\\\\n            p='15px'\\\\n            fullWidth\\\\n            mt='50px'\\\\n          >\\\\n            <FilterMultiselect\\\\n              id='branch'\\\\n              label='Hub'\\\\n              options={options}\\\\n              onSelectionChange={action('On Change')}\\\\n            />\\\\n          </Box>\\\\n          <Box\\\\n            display='flex'\\\\n            justifyContent='flex-end'\\\\n            p='15px'\\\\n            horizontalSpacing='10px'\\\\n            fullWidth\\\\n          >\\\\n            <IconButton iconVariant='icomoon-tick-circled' primary>\\\\n              Apply\\\\n            </IconButton>\\\\n            <IconButton iconVariant='icomoon-back'>Reset</IconButton>\\\\n          </Box>\\\\n        </Box>\\\\n      </FilterDrawer>\\\\n    </ThemeWrapper>\\\\n  )\\\\n}\\\\n\\\",\\\"locationsMap\\\":{}},},\\n  title: `${path}/FilterDrawer`,\\n  component: FilterDrawer\\n}\\n\\nconst options: IFilterMultiselectOption[] = [\\n  { id: '1', label: 'Powai', value: 'powai' },\\n  { id: '2', label: 'Andheri', value: 'andheri' },\\n  { id: '3', label: 'Bhandup', value: 'bhandup' }\\n]\\n\\nconst getFormattedDate = (date: Date) => {\\n  const todayTime = date\\n  const month = todayTime.getMonth() + 1\\n  const day = todayTime.getDate()\\n  const year = todayTime.getFullYear()\\n  const hours = todayTime.getHours()\\n  const minutes = todayTime.getMinutes()\\n  return month + '/' + day + '/' + year + ' ' + hours + ':' + minutes\\n}\\n\\nexport const withBasic = addSourceDecorator(() => {\\n  const [isFilterOpen, setFilterOpen] = React.useState<boolean>(true)\\n\\n  // state that manages DatePickers value\\n\\n  return (\\n    <ThemeWrapper>\\n      <IconButton\\n        iconVariant='icomoon-funel'\\n        onClick={() => setFilterOpen((f) => !f)}\\n      >\\n        Filter\\n      </IconButton>\\n\\n      <FilterDrawer isOpen={isFilterOpen}>\\n        <Box display='flex' flexDirection='column' fullWidth fullHeight>\\n          <ModalHeader\\n            headerTitle='Analytics Filter'\\n            handleClose={() => setFilterOpen(false)}\\n            width='100%'\\n          />\\n\\n          {/* element that holds DateRangePickers value */}\\n          <Position type='relative'>\\n            <DateRangePicker\\n              onFromChange={action('From Clicked')}\\n              onToChange={action('To Clicked')}\\n              onApply={action('Apply Clicked')}\\n              onCancel={action('Cancel Clicked')}\\n              label={text('Label', 'Date Range')}\\n              variant='daterange'\\n              timeFormat={24}\\n              showTime={boolean('Show time', true)}\\n              startDate={new Date()}\\n              fromDateFormatter={getFormattedDate}\\n              toDateFormatter={getFormattedDate}\\n              style={{\\n                background: '#ccc',\\n                right: '0px',\\n                position: 'fixed'\\n              }}\\n            >\\n              {({ value, open, setOpen }: tDateRangeChildren) => (\\n                <Box fullWidth>\\n                  <TextInput\\n                    id='someId'\\n                    name={name}\\n                    className='someClassname'\\n                    label='Holidays'\\n                    variant='basic'\\n                    labelColor='text.inputLabel.default'\\n                    placeholder='Please Click Here'\\n                    fullWidth\\n                    value={value?.toString()}\\n                    onChange={action('On change clicked')}\\n                    onClick={() => setOpen(!open)}\\n                  />\\n                </Box>\\n              )}\\n            </DateRangePicker>\\n          </Position>\\n\\n          <Box\\n            flexGrow={1}\\n            style={{ overflow: 'auto' }}\\n            p='15px'\\n            fullWidth\\n            mt='50px'\\n          >\\n            <FilterMultiselect\\n              id='branch'\\n              label='Hub'\\n              options={options}\\n              onSelectionChange={action('On Change')}\\n            />\\n          </Box>\\n          <Box\\n            display='flex'\\n            justifyContent='flex-end'\\n            p='15px'\\n            horizontalSpacing='10px'\\n            fullWidth\\n          >\\n            <IconButton iconVariant='icomoon-tick-circled' primary>\\n              Apply\\n            </IconButton>\\n            <IconButton iconVariant='icomoon-back'>Reset</IconButton>\\n          </Box>\\n        </Box>\\n      </FilterDrawer>\\n    </ThemeWrapper>\\n  )\\n}, {__STORY__, __ADDS_MAP__,__MAIN_FILE_LOCATION__,__MODULE_DEPENDENCIES__,__LOCAL_DEPENDENCIES__,__SOURCE_PREFIX__,__IDS_TO_FRAMEWORKS__});\",\n    \"locationsMap\": {}\n  }), _defineProperty(_parameters, \"storySource\", {\n    \"source\": \"import React from 'react'\\nimport FilterDrawer from '.'\\nimport { path } from '..'\\nimport ThemeWrapper from '../../../utilities/components/ThemeWrapper'\\n\\nimport ModalHeader from '../../molecules/ModalHeader'\\nimport Box from '../Box'\\nimport IconButton from '../IconButton'\\nimport { IFilterMultiselectOption } from '../../molecules/FilterMultiselect/interfaces'\\nimport FilterMultiselect from '../../molecules/FilterMultiselect'\\nimport { action } from '@storybook/addon-actions'\\nimport { boolean, text } from '@storybook/addon-knobs'\\nimport { DateRangePicker } from '../../molecules/DatePicker'\\nimport { tDateRangeChildren } from '../../molecules/DatePicker/interfaces'\\nimport TextInput from '../../molecules/TextInput'\\nimport Position from '../../molecules/Position'\\n\\nexport default {\\n  title: `${path}/FilterDrawer`,\\n  component: FilterDrawer\\n}\\n\\nconst options: IFilterMultiselectOption[] = [\\n  { id: '1', label: 'Powai', value: 'powai' },\\n  { id: '2', label: 'Andheri', value: 'andheri' },\\n  { id: '3', label: 'Bhandup', value: 'bhandup' }\\n]\\n\\nconst getFormattedDate = (date: Date) => {\\n  const todayTime = date\\n  const month = todayTime.getMonth() + 1\\n  const day = todayTime.getDate()\\n  const year = todayTime.getFullYear()\\n  const hours = todayTime.getHours()\\n  const minutes = todayTime.getMinutes()\\n  return month + '/' + day + '/' + year + ' ' + hours + ':' + minutes\\n}\\n\\nexport const withBasic = () => {\\n  const [isFilterOpen, setFilterOpen] = React.useState<boolean>(true)\\n\\n  // state that manages DatePickers value\\n\\n  return (\\n    <ThemeWrapper>\\n      <IconButton\\n        iconVariant='icomoon-funel'\\n        onClick={() => setFilterOpen((f) => !f)}\\n      >\\n        Filter\\n      </IconButton>\\n\\n      <FilterDrawer isOpen={isFilterOpen}>\\n        <Box display='flex' flexDirection='column' fullWidth fullHeight>\\n          <ModalHeader\\n            headerTitle='Analytics Filter'\\n            handleClose={() => setFilterOpen(false)}\\n            width='100%'\\n          />\\n\\n          {/* element that holds DateRangePickers value */}\\n          <Position type='relative'>\\n            <DateRangePicker\\n              onFromChange={action('From Clicked')}\\n              onToChange={action('To Clicked')}\\n              onApply={action('Apply Clicked')}\\n              onCancel={action('Cancel Clicked')}\\n              label={text('Label', 'Date Range')}\\n              variant='daterange'\\n              timeFormat={24}\\n              showTime={boolean('Show time', true)}\\n              startDate={new Date()}\\n              fromDateFormatter={getFormattedDate}\\n              toDateFormatter={getFormattedDate}\\n              style={{\\n                background: '#ccc',\\n                right: '0px',\\n                position: 'fixed'\\n              }}\\n            >\\n              {({ value, open, setOpen }: tDateRangeChildren) => (\\n                <Box fullWidth>\\n                  <TextInput\\n                    id='someId'\\n                    name={name}\\n                    className='someClassname'\\n                    label='Holidays'\\n                    variant='basic'\\n                    labelColor='text.inputLabel.default'\\n                    placeholder='Please Click Here'\\n                    fullWidth\\n                    value={value?.toString()}\\n                    onChange={action('On change clicked')}\\n                    onClick={() => setOpen(!open)}\\n                  />\\n                </Box>\\n              )}\\n            </DateRangePicker>\\n          </Position>\\n\\n          <Box\\n            flexGrow={1}\\n            style={{ overflow: 'auto' }}\\n            p='15px'\\n            fullWidth\\n            mt='50px'\\n          >\\n            <FilterMultiselect\\n              id='branch'\\n              label='Hub'\\n              options={options}\\n              onSelectionChange={action('On Change')}\\n            />\\n          </Box>\\n          <Box\\n            display='flex'\\n            justifyContent='flex-end'\\n            p='15px'\\n            horizontalSpacing='10px'\\n            fullWidth\\n          >\\n            <IconButton iconVariant='icomoon-tick-circled' primary>\\n              Apply\\n            </IconButton>\\n            <IconButton iconVariant='icomoon-back'>Reset</IconButton>\\n          </Box>\\n        </Box>\\n      </FilterDrawer>\\n    </ThemeWrapper>\\n  )\\n}\\n\",\n    \"locationsMap\": {}\n  }), _parameters),\n  title: path + \"/FilterDrawer\",\n  component: FilterDrawer\n};\nvar options = [{\n  id: '1',\n  label: 'Powai',\n  value: 'powai'\n}, {\n  id: '2',\n  label: 'Andheri',\n  value: 'andheri'\n}, {\n  id: '3',\n  label: 'Bhandup',\n  value: 'bhandup'\n}];\n\nvar getFormattedDate = function getFormattedDate(date) {\n  var todayTime = date;\n  var month = todayTime.getMonth() + 1;\n  var day = todayTime.getDate();\n  var year = todayTime.getFullYear();\n  var hours = todayTime.getHours();\n  var minutes = todayTime.getMinutes();\n  return month + '/' + day + '/' + year + ' ' + hours + ':' + minutes;\n};\n\nexport var withBasic = addSourceDecorator(addSourceDecorator(addSourceDecorator(function () {\n  var _a = React.useState(true),\n      isFilterOpen = _a[0],\n      setFilterOpen = _a[1]; // state that manages DatePickers value\n\n\n  return React.createElement(ThemeWrapper, null, React.createElement(IconButton, {\n    iconVariant: 'icomoon-funel',\n    onClick: function onClick() {\n      return setFilterOpen(function (f) {\n        return !f;\n      });\n    }\n  }, \"Filter\"), React.createElement(FilterDrawer, {\n    isOpen: isFilterOpen\n  }, React.createElement(Box, {\n    display: 'flex',\n    flexDirection: 'column',\n    fullWidth: true,\n    fullHeight: true\n  }, React.createElement(ModalHeader, {\n    headerTitle: 'Analytics Filter',\n    handleClose: function handleClose() {\n      return setFilterOpen(false);\n    },\n    width: '100%'\n  }), React.createElement(Position, {\n    type: 'relative'\n  }, React.createElement(DateRangePicker, {\n    onFromChange: action('From Clicked'),\n    onToChange: action('To Clicked'),\n    onApply: action('Apply Clicked'),\n    onCancel: action('Cancel Clicked'),\n    label: text('Label', 'Date Range'),\n    variant: 'daterange',\n    timeFormat: 24,\n    showTime: _boolean('Show time', true),\n    startDate: new Date(),\n    fromDateFormatter: getFormattedDate,\n    toDateFormatter: getFormattedDate,\n    style: {\n      background: '#ccc',\n      right: '0px',\n      position: 'fixed'\n    }\n  }, function (_a) {\n    var value = _a.value,\n        open = _a.open,\n        setOpen = _a.setOpen;\n    return React.createElement(Box, {\n      fullWidth: true\n    }, React.createElement(TextInput, {\n      id: 'someId',\n      name: name,\n      className: 'someClassname',\n      label: 'Holidays',\n      variant: 'basic',\n      labelColor: 'text.inputLabel.default',\n      placeholder: 'Please Click Here',\n      fullWidth: true,\n      value: value === null || value === void 0 ? void 0 : value.toString(),\n      onChange: action('On change clicked'),\n      onClick: function onClick() {\n        return setOpen(!open);\n      }\n    }));\n  })), React.createElement(Box, {\n    flexGrow: 1,\n    style: {\n      overflow: 'auto'\n    },\n    p: '15px',\n    fullWidth: true,\n    mt: '50px'\n  }, React.createElement(FilterMultiselect, {\n    id: 'branch',\n    label: 'Hub',\n    options: options,\n    onSelectionChange: action('On Change')\n  })), React.createElement(Box, {\n    display: 'flex',\n    justifyContent: 'flex-end',\n    p: '15px',\n    horizontalSpacing: '10px',\n    fullWidth: true\n  }, React.createElement(IconButton, {\n    iconVariant: 'icomoon-tick-circled',\n    primary: true\n  }, \"Apply\"), React.createElement(IconButton, {\n    iconVariant: 'icomoon-back'\n  }, \"Reset\")))));\n}, {\n  __STORY__: __STORY__,\n  __ADDS_MAP__: __ADDS_MAP__,\n  __MAIN_FILE_LOCATION__: __MAIN_FILE_LOCATION__,\n  __MODULE_DEPENDENCIES__: __MODULE_DEPENDENCIES__,\n  __LOCAL_DEPENDENCIES__: __LOCAL_DEPENDENCIES__,\n  __SOURCE_PREFIX__: __SOURCE_PREFIX__,\n  __IDS_TO_FRAMEWORKS__: __IDS_TO_FRAMEWORKS__\n}), {\n  __STORY__: __STORY__,\n  __ADDS_MAP__: __ADDS_MAP__,\n  __MAIN_FILE_LOCATION__: __MAIN_FILE_LOCATION__,\n  __MODULE_DEPENDENCIES__: __MODULE_DEPENDENCIES__,\n  __LOCAL_DEPENDENCIES__: __LOCAL_DEPENDENCIES__,\n  __SOURCE_PREFIX__: __SOURCE_PREFIX__,\n  __IDS_TO_FRAMEWORKS__: __IDS_TO_FRAMEWORKS__\n}), {\n  __STORY__: __STORY__,\n  __ADDS_MAP__: __ADDS_MAP__,\n  __MAIN_FILE_LOCATION__: __MAIN_FILE_LOCATION__,\n  __MODULE_DEPENDENCIES__: __MODULE_DEPENDENCIES__,\n  __LOCAL_DEPENDENCIES__: __LOCAL_DEPENDENCIES__,\n  __SOURCE_PREFIX__: __SOURCE_PREFIX__,\n  __IDS_TO_FRAMEWORKS__: __IDS_TO_FRAMEWORKS__\n});","map":{"version":3,"sources":["/Users/farhanansari/Code/ui-library/node_modules/react-docgen-typescript-loader/dist/index.js!/Users/farhanansari/Code/ui-library/node_modules/eslint-loader/dist/cjs.js??ref--6-0!/Users/farhanansari/Code/ui-library/node_modules/@storybook/source-loader/dist/server/index.js??ref--11!/Users/farhanansari/Code/ui-library/node_modules/@storybook/source-loader/dist/server/index.js!/Users/farhanansari/Code/ui-library/node_modules/@storybook/source-loader/dist/server/index.js!/Users/farhanansari/Code/ui-library/src/components/atoms/FilterDrawer/FilterDrawer.stories.tsx"],"names":[],"mappings":";;;;AACA;AACA;AACA;AACA,IAAI,gBAAgB,GAAG,OAAO,CAAC,kCAAD,CAAP,CAA4C,UAAnE,C,CACA;;;AACA,IAAI,kBAAkB,GAAG,OAAO,CAAC,kCAAD,CAAP,CAA4C,SAArE,C,CACA;;;AACA,IAAI,iBAAiB,GAAG,uEAAxB,C,CACA;;AACA,IAAI,SAAS,GAAG,ir4CAAhB,C,CACA;;AACA,IAAI,YAAY,GAAG,EAAnB,C,CACA;;AACA,IAAI,sBAAsB,GAAG,2BAA7B,C,CACA;;AACA,IAAI,uBAAuB,GAAG,EAA9B,C,CACA;;AACA,IAAI,sBAAsB,GAAG,EAA7B,C,CACA;;AACA,IAAI,qBAAqB,GAAG,EAA5B;AAGA;AACA;AACA;;AACA,IAAI,gBAAgB,GAAG,OAAO,CAAC,kCAAD,CAAP,CAA4C,UAAnE,C,CACA;;;AACA,IAAI,kBAAkB,GAAG,OAAO,CAAC,kCAAD,CAAP,CAA4C,SAArE,C,CACA;;;AACA,IAAI,iBAAiB,GAAG,uEAAxB,C,CACA;;AACA,IAAI,SAAS,GAAG,o/bAAhB,C,CACA;;AACA,IAAI,YAAY,GAAG,EAAnB,C,CACA;;AACA,IAAI,sBAAsB,GAAG,2BAA7B,C,CACA;;AACA,IAAI,uBAAuB,GAAG,EAA9B,C,CACA;;AACA,IAAI,sBAAsB,GAAG,EAA7B,C,CACA;;AACA,IAAI,qBAAqB,GAAG,EAA5B;AAGA;AACA;AACA;;AACA,IAAI,gBAAgB,GAAG,OAAO,CAAC,kCAAD,CAAP,CAA4C,UAAnE,C,CACA;;;AACA,IAAI,kBAAkB,GAAG,OAAO,CAAC,kCAAD,CAAP,CAA4C,SAArE,C,CACA;;;AACA,IAAI,iBAAiB,GAAG,uEAAxB,C,CACA;;AACA,IAAI,SAAS,GAAG,izIAAhB,C,CACA;;AACA,IAAI,YAAY,GAAG,EAAnB,C,CACA;;AACA,IAAI,sBAAsB,GAAG,2BAA7B,C,CACA;;AACA,IAAI,uBAAuB,GAAG,EAA9B,C,CACA;;AACA,IAAI,sBAAsB,GAAG,EAA7B,C,CACA;;AACA,IAAI,qBAAqB,GAAG,EAA5B;AAEA,OAAO,KAAP,MAAkB,OAAlB;AACA,OAAO,YAAP,MAAyB,GAAzB;AACA,SAAS,IAAT,QAAqB,IAArB;AACA,OAAO,YAAP,MAAyB,4CAAzB;AAEA,OAAO,WAAP,MAAwB,6BAAxB;AACA,OAAO,GAAP,MAAgB,QAAhB;AACA,OAAO,UAAP,MAAuB,eAAvB;AAEA,OAAO,iBAAP,MAA8B,mCAA9B;AACA,SAAS,MAAT,QAAuB,0BAAvB;AACA,SAAS,OAAO,IAAP,QAAT,EAAkB,IAAlB,QAA8B,wBAA9B;AACA,SAAS,eAAT,QAAgC,4BAAhC;AAEA,OAAO,SAAP,MAAsB,2BAAtB;AACA,OAAO,QAAP,MAAqB,0BAArB;AAEA,eAAe;AAAC,EAAA,UAAU;AAAG,mBAAc;AAAC,gBAAS,ir4CAAV;AAA4r4C,sBAAe;AAA3s4C;AAAjB,iDAA8u4C;AAAC,cAAS,o/bAAV;AAA+/b,oBAAe;AAA9gc,GAA9u4C,+CAA8w0D;AAAC,cAAS,izIAAV;AAA4zI,oBAAe;AAA30I,GAA9w0D,eAAX;AACb,EAAA,KAAK,EAAK,IAAI,GAAA,eADD;AAEb,EAAA,SAAS,EAAE;AAFE,CAAf;AAKA,IAAM,OAAO,GAA+B,CAC1C;AAAE,EAAA,EAAE,EAAE,GAAN;AAAW,EAAA,KAAK,EAAE,OAAlB;AAA2B,EAAA,KAAK,EAAE;AAAlC,CAD0C,EAE1C;AAAE,EAAA,EAAE,EAAE,GAAN;AAAW,EAAA,KAAK,EAAE,SAAlB;AAA6B,EAAA,KAAK,EAAE;AAApC,CAF0C,EAG1C;AAAE,EAAA,EAAE,EAAE,GAAN;AAAW,EAAA,KAAK,EAAE,SAAlB;AAA6B,EAAA,KAAK,EAAE;AAApC,CAH0C,CAA5C;;AAMA,IAAM,gBAAgB,GAAG,SAAnB,gBAAmB,CAAC,IAAD,EAAW;AAClC,MAAM,SAAS,GAAG,IAAlB;AACA,MAAM,KAAK,GAAG,SAAS,CAAC,QAAV,KAAuB,CAArC;AACA,MAAM,GAAG,GAAG,SAAS,CAAC,OAAV,EAAZ;AACA,MAAM,IAAI,GAAG,SAAS,CAAC,WAAV,EAAb;AACA,MAAM,KAAK,GAAG,SAAS,CAAC,QAAV,EAAd;AACA,MAAM,OAAO,GAAG,SAAS,CAAC,UAAV,EAAhB;AACA,SAAO,KAAK,GAAG,GAAR,GAAc,GAAd,GAAoB,GAApB,GAA0B,IAA1B,GAAiC,GAAjC,GAAuC,KAAvC,GAA+C,GAA/C,GAAqD,OAA5D;AACD,CARD;;AAUA,OAAO,IAAM,SAAS,GAAG,kBAAkB,CAAC,kBAAkB,CAAC,kBAAkB,CAAC,YAAA;AAC1E,MAAA,EAAA,GAAgC,KAAK,CAAC,QAAN,CAAwB,IAAxB,CAAhC;AAAA,MAAC,YAAY,GAAA,EAAA,CAAA,CAAA,CAAb;AAAA,MAAe,aAAa,GAAA,EAAA,CAAA,CAAA,CAA5B,CAD0E,CAGhF;;;AAEA,SACE,KAAA,CAAA,aAAA,CAAC,YAAD,EAAa,IAAb,EACE,KAAA,CAAA,aAAA,CAAC,UAAD,EAAW;AACT,IAAA,WAAW,EAAC,eADH;AAET,IAAA,OAAO,EAAE,mBAAA;AAAM,aAAA,aAAa,CAAC,UAAC,CAAD,EAAE;AAAK,eAAA,CAAA,CAAA;AAArB,OAAa,CAAb;AAAwB;AAF9B,GAAX,EAEyC,QAFzC,CADF,EAQE,KAAA,CAAA,aAAA,CAAC,YAAD,EAAa;AAAC,IAAA,MAAM,EAAE;AAAT,GAAb,EACE,KAAA,CAAA,aAAA,CAAC,GAAD,EAAI;AAAC,IAAA,OAAO,EAAC,MAAT;AAAgB,IAAA,aAAa,EAAC,QAA9B;AAAuC,IAAA,SAAS,EAAA,IAAhD;AAAiD,IAAA,UAAU,EAAA;AAA3D,GAAJ,EACE,KAAA,CAAA,aAAA,CAAC,WAAD,EAAY;AACV,IAAA,WAAW,EAAC,kBADF;AAEV,IAAA,WAAW,EAAE,uBAAA;AAAM,aAAA,aAAa,CAAb,KAAa,CAAb;AAAoB,KAF7B;AAGV,IAAA,KAAK,EAAC;AAHI,GAAZ,CADF,EAQE,KAAA,CAAA,aAAA,CAAC,QAAD,EAAS;AAAC,IAAA,IAAI,EAAC;AAAN,GAAT,EACE,KAAA,CAAA,aAAA,CAAC,eAAD,EAAgB;AACd,IAAA,YAAY,EAAE,MAAM,CAAC,cAAD,CADN;AAEd,IAAA,UAAU,EAAE,MAAM,CAAC,YAAD,CAFJ;AAGd,IAAA,OAAO,EAAE,MAAM,CAAC,eAAD,CAHD;AAId,IAAA,QAAQ,EAAE,MAAM,CAAC,gBAAD,CAJF;AAKd,IAAA,KAAK,EAAE,IAAI,CAAC,OAAD,EAAU,YAAV,CALG;AAMd,IAAA,OAAO,EAAC,WANM;AAOd,IAAA,UAAU,EAAE,EAPE;AAQd,IAAA,QAAQ,EAAE,QAAO,CAAC,WAAD,EAAc,IAAd,CARH;AASd,IAAA,SAAS,EAAE,IAAI,IAAJ,EATG;AAUd,IAAA,iBAAiB,EAAE,gBAVL;AAWd,IAAA,eAAe,EAAE,gBAXH;AAYd,IAAA,KAAK,EAAE;AACL,MAAA,UAAU,EAAE,MADP;AAEL,MAAA,KAAK,EAAE,KAFF;AAGL,MAAA,QAAQ,EAAE;AAHL;AAZO,GAAhB,EAkBG,UAAC,EAAD,EAA6C;QAA1C,KAAK,GAAA,EAAA,CAAA,K;QAAE,IAAI,GAAA,EAAA,CAAA,I;QAAE,OAAO,GAAA,EAAA,CAAA,O;AAA2B,WACjD,KAAA,CAAA,aAAA,CAAC,GAAD,EAAI;AAAC,MAAA,SAAS,EAAA;AAAV,KAAJ,EACE,KAAA,CAAA,aAAA,CAAC,SAAD,EAAU;AACR,MAAA,EAAE,EAAC,QADK;AAER,MAAA,IAAI,EAAE,IAFE;AAGR,MAAA,SAAS,EAAC,eAHF;AAIR,MAAA,KAAK,EAAC,UAJE;AAKR,MAAA,OAAO,EAAC,OALA;AAMR,MAAA,UAAU,EAAC,yBANH;AAOR,MAAA,WAAW,EAAC,mBAPJ;AAQR,MAAA,SAAS,EAAA,IARD;AASR,MAAA,KAAK,EAAE,KAAK,KAAA,IAAL,IAAA,KAAK,KAAA,KAAA,CAAL,GAAK,KAAA,CAAL,GAAA,KAAK,CAAE,QAAP,EATC;AAUR,MAAA,QAAQ,EAAE,MAAM,CAAC,mBAAD,CAVR;AAWR,MAAA,OAAO,EAAE,mBAAA;AAAM,eAAA,OAAO,CAAC,CAAR,IAAO,CAAP;AAAc;AAXrB,KAAV,CADF,CADiD;AAgBlD,GAlCH,CADF,CARF,EA+CE,KAAA,CAAA,aAAA,CAAC,GAAD,EAAI;AACF,IAAA,QAAQ,EAAE,CADR;AAEF,IAAA,KAAK,EAAE;AAAE,MAAA,QAAQ,EAAE;AAAZ,KAFL;AAGF,IAAA,CAAC,EAAC,MAHA;AAIF,IAAA,SAAS,EAAA,IAJP;AAKF,IAAA,EAAE,EAAC;AALD,GAAJ,EAOE,KAAA,CAAA,aAAA,CAAC,iBAAD,EAAkB;AAChB,IAAA,EAAE,EAAC,QADa;AAEhB,IAAA,KAAK,EAAC,KAFU;AAGhB,IAAA,OAAO,EAAE,OAHO;AAIhB,IAAA,iBAAiB,EAAE,MAAM,CAAC,WAAD;AAJT,GAAlB,CAPF,CA/CF,EA6DE,KAAA,CAAA,aAAA,CAAC,GAAD,EAAI;AACF,IAAA,OAAO,EAAC,MADN;AAEF,IAAA,cAAc,EAAC,UAFb;AAGF,IAAA,CAAC,EAAC,MAHA;AAIF,IAAA,iBAAiB,EAAC,MAJhB;AAKF,IAAA,SAAS,EAAA;AALP,GAAJ,EAOE,KAAA,CAAA,aAAA,CAAC,UAAD,EAAW;AAAC,IAAA,WAAW,EAAC,sBAAb;AAAoC,IAAA,OAAO,EAAA;AAA3C,GAAX,EAAsD,OAAtD,CAPF,EAUE,KAAA,CAAA,aAAA,CAAC,UAAD,EAAW;AAAC,IAAA,WAAW,EAAC;AAAb,GAAX,EAAsC,OAAtC,CAVF,CA7DF,CADF,CARF,CADF;AAuFD,CA5FgF,EA4F9E;AAAC,EAAA,SAAS,EAAA,SAAV;AAAY,EAAA,YAAY,EAAA,YAAxB;AAAyB,EAAA,sBAAsB,EAAA,sBAA/C;AAAgD,EAAA,uBAAuB,EAAA,uBAAvE;AAAwE,EAAA,sBAAsB,EAAA,sBAA9F;AAA+F,EAAA,iBAAiB,EAAA,iBAAhH;AAAiH,EAAA,qBAAqB,EAAA;AAAtI,CA5F8E,CAAnB,EA4F+E;AAAC,EAAA,SAAS,EAAA,SAAV;AAAY,EAAA,YAAY,EAAA,YAAxB;AAAyB,EAAA,sBAAsB,EAAA,sBAA/C;AAAgD,EAAA,uBAAuB,EAAA,uBAAvE;AAAwE,EAAA,sBAAsB,EAAA,sBAA9F;AAA+F,EAAA,iBAAiB,EAAA,iBAAhH;AAAiH,EAAA,qBAAqB,EAAA;AAAtI,CA5F/E,CAAnB,EA4F4O;AAAC,EAAA,SAAS,EAAA,SAAV;AAAY,EAAA,YAAY,EAAA,YAAxB;AAAyB,EAAA,sBAAsB,EAAA,sBAA/C;AAAgD,EAAA,uBAAuB,EAAA,uBAAvE;AAAwE,EAAA,sBAAsB,EAAA,sBAA9F;AAA+F,EAAA,iBAAiB,EAAA,iBAAhH;AAAiH,EAAA,qBAAqB,EAAA;AAAtI,CA5F5O,CAApC","sourcesContent":["\n/* eslint-disable */\n// @ts-nocheck\n// @ts-ignore\nvar withSourceLoader = require('@storybook/source-loader/preview').withSource;\n// @ts-ignore\nvar addSourceDecorator = require(\"@storybook/source-loader/preview\").addSource;\n// @ts-ignore\nvar __SOURCE_PREFIX__ = \"/Users/farhanansari/Code/ui-library/src/components/atoms/FilterDrawer\";\n// @ts-ignore\nvar __STORY__ = \"\\n\\n// @ts-nocheck\\n// @ts-ignore\\nvar withSourceLoader = require('@storybook/source-loader/preview').withSource;\\n// @ts-ignore\\nvar addSourceDecorator = require(\\\"@storybook/source-loader/preview\\\").addSource;\\n// @ts-ignore\\nvar __SOURCE_PREFIX__ = \\\"/Users/farhanansari/Code/ui-library/src/components/atoms/FilterDrawer\\\";\\n// @ts-ignore\\nvar __STORY__ = \\\"\\\\n\\\\n// @ts-nocheck\\\\n// @ts-ignore\\\\nvar withSourceLoader = require('@storybook/source-loader/preview').withSource;\\\\n// @ts-ignore\\\\nvar addSourceDecorator = require(\\\\\\\"@storybook/source-loader/preview\\\\\\\").addSource;\\\\n// @ts-ignore\\\\nvar __SOURCE_PREFIX__ = \\\\\\\"/Users/farhanansari/Code/ui-library/src/components/atoms/FilterDrawer\\\\\\\";\\\\n// @ts-ignore\\\\nvar __STORY__ = \\\\\\\"import React from 'react'\\\\\\\\nimport FilterDrawer from '.'\\\\\\\\nimport { path } from '..'\\\\\\\\nimport ThemeWrapper from '../../../utilities/components/ThemeWrapper'\\\\\\\\n\\\\\\\\nimport ModalHeader from '../../molecules/ModalHeader'\\\\\\\\nimport Box from '../Box'\\\\\\\\nimport IconButton from '../IconButton'\\\\\\\\nimport { IFilterMultiselectOption } from '../../molecules/FilterMultiselect/interfaces'\\\\\\\\nimport FilterMultiselect from '../../molecules/FilterMultiselect'\\\\\\\\nimport { action } from '@storybook/addon-actions'\\\\\\\\nimport { boolean, text } from '@storybook/addon-knobs'\\\\\\\\nimport { DateRangePicker } from '../../molecules/DatePicker'\\\\\\\\nimport { tDateRangeChildren } from '../../molecules/DatePicker/interfaces'\\\\\\\\nimport TextInput from '../../molecules/TextInput'\\\\\\\\nimport Position from '../../molecules/Position'\\\\\\\\n\\\\\\\\nexport default {\\\\\\\\n  title: `${path}/FilterDrawer`,\\\\\\\\n  component: FilterDrawer\\\\\\\\n}\\\\\\\\n\\\\\\\\nconst options: IFilterMultiselectOption[] = [\\\\\\\\n  { id: '1', label: 'Powai', value: 'powai' },\\\\\\\\n  { id: '2', label: 'Andheri', value: 'andheri' },\\\\\\\\n  { id: '3', label: 'Bhandup', value: 'bhandup' }\\\\\\\\n]\\\\\\\\n\\\\\\\\nconst getFormattedDate = (date: Date) => {\\\\\\\\n  const todayTime = date\\\\\\\\n  const month = todayTime.getMonth() + 1\\\\\\\\n  const day = todayTime.getDate()\\\\\\\\n  const year = todayTime.getFullYear()\\\\\\\\n  const hours = todayTime.getHours()\\\\\\\\n  const minutes = todayTime.getMinutes()\\\\\\\\n  return month + '/' + day + '/' + year + ' ' + hours + ':' + minutes\\\\\\\\n}\\\\\\\\n\\\\\\\\nexport const withBasic = () => {\\\\\\\\n  const [isFilterOpen, setFilterOpen] = React.useState<boolean>(true)\\\\\\\\n\\\\\\\\n  // state that manages DatePickers value\\\\\\\\n\\\\\\\\n  return (\\\\\\\\n    <ThemeWrapper>\\\\\\\\n      <IconButton\\\\\\\\n        iconVariant='icomoon-funel'\\\\\\\\n        onClick={() => setFilterOpen((f) => !f)}\\\\\\\\n      >\\\\\\\\n        Filter\\\\\\\\n      </IconButton>\\\\\\\\n\\\\\\\\n      <FilterDrawer isOpen={isFilterOpen}>\\\\\\\\n        <Box display='flex' flexDirection='column' fullWidth fullHeight>\\\\\\\\n          <ModalHeader\\\\\\\\n            headerTitle='Analytics Filter'\\\\\\\\n            handleClose={() => setFilterOpen(false)}\\\\\\\\n            width='100%'\\\\\\\\n          />\\\\\\\\n\\\\\\\\n          {/* element that holds DateRangePickers value */}\\\\\\\\n          <Position type='relative'>\\\\\\\\n            <DateRangePicker\\\\\\\\n              onFromChange={action('From Clicked')}\\\\\\\\n              onToChange={action('To Clicked')}\\\\\\\\n              onApply={action('Apply Clicked')}\\\\\\\\n              onCancel={action('Cancel Clicked')}\\\\\\\\n              label={text('Label', 'Date Range')}\\\\\\\\n              variant='daterange'\\\\\\\\n              timeFormat={24}\\\\\\\\n              showTime={boolean('Show time', true)}\\\\\\\\n              startDate={new Date()}\\\\\\\\n              fromDateFormatter={getFormattedDate}\\\\\\\\n              toDateFormatter={getFormattedDate}\\\\\\\\n              style={{\\\\\\\\n                background: '#ccc',\\\\\\\\n                right: '0px',\\\\\\\\n                position: 'fixed'\\\\\\\\n              }}\\\\\\\\n            >\\\\\\\\n              {({ value, open, setOpen }: tDateRangeChildren) => (\\\\\\\\n                <Box fullWidth>\\\\\\\\n                  <TextInput\\\\\\\\n                    id='someId'\\\\\\\\n                    name={name}\\\\\\\\n                    className='someClassname'\\\\\\\\n                    label='Holidays'\\\\\\\\n                    variant='basic'\\\\\\\\n                    labelColor='text.inputLabel.default'\\\\\\\\n                    placeholder='Please Click Here'\\\\\\\\n                    fullWidth\\\\\\\\n                    value={value?.toString()}\\\\\\\\n                    onChange={action('On change clicked')}\\\\\\\\n                    onClick={() => setOpen(!open)}\\\\\\\\n                  />\\\\\\\\n                </Box>\\\\\\\\n              )}\\\\\\\\n            </DateRangePicker>\\\\\\\\n          </Position>\\\\\\\\n\\\\\\\\n          <Box\\\\\\\\n            flexGrow={1}\\\\\\\\n            style={{ overflow: 'auto' }}\\\\\\\\n            p='15px'\\\\\\\\n            fullWidth\\\\\\\\n            mt='50px'\\\\\\\\n          >\\\\\\\\n            <FilterMultiselect\\\\\\\\n              id='branch'\\\\\\\\n              label='Hub'\\\\\\\\n              options={options}\\\\\\\\n              onSelectionChange={action('On Change')}\\\\\\\\n            />\\\\\\\\n          </Box>\\\\\\\\n          <Box\\\\\\\\n            display='flex'\\\\\\\\n            justifyContent='flex-end'\\\\\\\\n            p='15px'\\\\\\\\n            horizontalSpacing='10px'\\\\\\\\n            fullWidth\\\\\\\\n          >\\\\\\\\n            <IconButton iconVariant='icomoon-tick-circled' primary>\\\\\\\\n              Apply\\\\\\\\n            </IconButton>\\\\\\\\n            <IconButton iconVariant='icomoon-back'>Reset</IconButton>\\\\\\\\n          </Box>\\\\\\\\n        </Box>\\\\\\\\n      </FilterDrawer>\\\\\\\\n    </ThemeWrapper>\\\\\\\\n  )\\\\\\\\n}\\\\\\\\n\\\\\\\";\\\\n// @ts-ignore\\\\nvar __ADDS_MAP__ = {};\\\\n// @ts-ignore\\\\nvar __MAIN_FILE_LOCATION__ = \\\\\\\"/FilterDrawer.stories.tsx\\\\\\\";\\\\n// @ts-ignore\\\\nvar __MODULE_DEPENDENCIES__ = [];\\\\n// @ts-ignore\\\\nvar __LOCAL_DEPENDENCIES__ = {};\\\\n// @ts-ignore\\\\nvar __IDS_TO_FRAMEWORKS__ = {};\\\\n        \\\\nimport React from 'react'\\\\nimport FilterDrawer from '.'\\\\nimport { path } from '..'\\\\nimport ThemeWrapper from '../../../utilities/components/ThemeWrapper'\\\\n\\\\nimport ModalHeader from '../../molecules/ModalHeader'\\\\nimport Box from '../Box'\\\\nimport IconButton from '../IconButton'\\\\nimport { IFilterMultiselectOption } from '../../molecules/FilterMultiselect/interfaces'\\\\nimport FilterMultiselect from '../../molecules/FilterMultiselect'\\\\nimport { action } from '@storybook/addon-actions'\\\\nimport { boolean, text } from '@storybook/addon-knobs'\\\\nimport { DateRangePicker } from '../../molecules/DatePicker'\\\\nimport { tDateRangeChildren } from '../../molecules/DatePicker/interfaces'\\\\nimport TextInput from '../../molecules/TextInput'\\\\nimport Position from '../../molecules/Position'\\\\n\\\\nexport default {parameters: {\\\\\\\"storySource\\\\\\\":{\\\\\\\"source\\\\\\\":\\\\\\\"import React from 'react'\\\\\\\\nimport FilterDrawer from '.'\\\\\\\\nimport { path } from '..'\\\\\\\\nimport ThemeWrapper from '../../../utilities/components/ThemeWrapper'\\\\\\\\n\\\\\\\\nimport ModalHeader from '../../molecules/ModalHeader'\\\\\\\\nimport Box from '../Box'\\\\\\\\nimport IconButton from '../IconButton'\\\\\\\\nimport { IFilterMultiselectOption } from '../../molecules/FilterMultiselect/interfaces'\\\\\\\\nimport FilterMultiselect from '../../molecules/FilterMultiselect'\\\\\\\\nimport { action } from '@storybook/addon-actions'\\\\\\\\nimport { boolean, text } from '@storybook/addon-knobs'\\\\\\\\nimport { DateRangePicker } from '../../molecules/DatePicker'\\\\\\\\nimport { tDateRangeChildren } from '../../molecules/DatePicker/interfaces'\\\\\\\\nimport TextInput from '../../molecules/TextInput'\\\\\\\\nimport Position from '../../molecules/Position'\\\\\\\\n\\\\\\\\nexport default {\\\\\\\\n  title: `${path}/FilterDrawer`,\\\\\\\\n  component: FilterDrawer\\\\\\\\n}\\\\\\\\n\\\\\\\\nconst options: IFilterMultiselectOption[] = [\\\\\\\\n  { id: '1', label: 'Powai', value: 'powai' },\\\\\\\\n  { id: '2', label: 'Andheri', value: 'andheri' },\\\\\\\\n  { id: '3', label: 'Bhandup', value: 'bhandup' }\\\\\\\\n]\\\\\\\\n\\\\\\\\nconst getFormattedDate = (date: Date) => {\\\\\\\\n  const todayTime = date\\\\\\\\n  const month = todayTime.getMonth() + 1\\\\\\\\n  const day = todayTime.getDate()\\\\\\\\n  const year = todayTime.getFullYear()\\\\\\\\n  const hours = todayTime.getHours()\\\\\\\\n  const minutes = todayTime.getMinutes()\\\\\\\\n  return month + '/' + day + '/' + year + ' ' + hours + ':' + minutes\\\\\\\\n}\\\\\\\\n\\\\\\\\nexport const withBasic = () => {\\\\\\\\n  const [isFilterOpen, setFilterOpen] = React.useState<boolean>(true)\\\\\\\\n\\\\\\\\n  // state that manages DatePickers value\\\\\\\\n\\\\\\\\n  return (\\\\\\\\n    <ThemeWrapper>\\\\\\\\n      <IconButton\\\\\\\\n        iconVariant='icomoon-funel'\\\\\\\\n        onClick={() => setFilterOpen((f) => !f)}\\\\\\\\n      >\\\\\\\\n        Filter\\\\\\\\n      </IconButton>\\\\\\\\n\\\\\\\\n      <FilterDrawer isOpen={isFilterOpen}>\\\\\\\\n        <Box display='flex' flexDirection='column' fullWidth fullHeight>\\\\\\\\n          <ModalHeader\\\\\\\\n            headerTitle='Analytics Filter'\\\\\\\\n            handleClose={() => setFilterOpen(false)}\\\\\\\\n            width='100%'\\\\\\\\n          />\\\\\\\\n\\\\\\\\n          {/* element that holds DateRangePickers value */}\\\\\\\\n          <Position type='relative'>\\\\\\\\n            <DateRangePicker\\\\\\\\n              onFromChange={action('From Clicked')}\\\\\\\\n              onToChange={action('To Clicked')}\\\\\\\\n              onApply={action('Apply Clicked')}\\\\\\\\n              onCancel={action('Cancel Clicked')}\\\\\\\\n              label={text('Label', 'Date Range')}\\\\\\\\n              variant='daterange'\\\\\\\\n              timeFormat={24}\\\\\\\\n              showTime={boolean('Show time', true)}\\\\\\\\n              startDate={new Date()}\\\\\\\\n              fromDateFormatter={getFormattedDate}\\\\\\\\n              toDateFormatter={getFormattedDate}\\\\\\\\n              style={{\\\\\\\\n                background: '#ccc',\\\\\\\\n                right: '0px',\\\\\\\\n                position: 'fixed'\\\\\\\\n              }}\\\\\\\\n            >\\\\\\\\n              {({ value, open, setOpen }: tDateRangeChildren) => (\\\\\\\\n                <Box fullWidth>\\\\\\\\n                  <TextInput\\\\\\\\n                    id='someId'\\\\\\\\n                    name={name}\\\\\\\\n                    className='someClassname'\\\\\\\\n                    label='Holidays'\\\\\\\\n                    variant='basic'\\\\\\\\n                    labelColor='text.inputLabel.default'\\\\\\\\n                    placeholder='Please Click Here'\\\\\\\\n                    fullWidth\\\\\\\\n                    value={value?.toString()}\\\\\\\\n                    onChange={action('On change clicked')}\\\\\\\\n                    onClick={() => setOpen(!open)}\\\\\\\\n                  />\\\\\\\\n                </Box>\\\\\\\\n              )}\\\\\\\\n            </DateRangePicker>\\\\\\\\n          </Position>\\\\\\\\n\\\\\\\\n          <Box\\\\\\\\n            flexGrow={1}\\\\\\\\n            style={{ overflow: 'auto' }}\\\\\\\\n            p='15px'\\\\\\\\n            fullWidth\\\\\\\\n            mt='50px'\\\\\\\\n          >\\\\\\\\n            <FilterMultiselect\\\\\\\\n              id='branch'\\\\\\\\n              label='Hub'\\\\\\\\n              options={options}\\\\\\\\n              onSelectionChange={action('On Change')}\\\\\\\\n            />\\\\\\\\n          </Box>\\\\\\\\n          <Box\\\\\\\\n            display='flex'\\\\\\\\n            justifyContent='flex-end'\\\\\\\\n            p='15px'\\\\\\\\n            horizontalSpacing='10px'\\\\\\\\n            fullWidth\\\\\\\\n          >\\\\\\\\n            <IconButton iconVariant='icomoon-tick-circled' primary>\\\\\\\\n              Apply\\\\\\\\n            </IconButton>\\\\\\\\n            <IconButton iconVariant='icomoon-back'>Reset</IconButton>\\\\\\\\n          </Box>\\\\\\\\n        </Box>\\\\\\\\n      </FilterDrawer>\\\\\\\\n    </ThemeWrapper>\\\\\\\\n  )\\\\\\\\n}\\\\\\\\n\\\\\\\",\\\\\\\"locationsMap\\\\\\\":{}},},\\\\n  title: `${path}/FilterDrawer`,\\\\n  component: FilterDrawer\\\\n}\\\\n\\\\nconst options: IFilterMultiselectOption[] = [\\\\n  { id: '1', label: 'Powai', value: 'powai' },\\\\n  { id: '2', label: 'Andheri', value: 'andheri' },\\\\n  { id: '3', label: 'Bhandup', value: 'bhandup' }\\\\n]\\\\n\\\\nconst getFormattedDate = (date: Date) => {\\\\n  const todayTime = date\\\\n  const month = todayTime.getMonth() + 1\\\\n  const day = todayTime.getDate()\\\\n  const year = todayTime.getFullYear()\\\\n  const hours = todayTime.getHours()\\\\n  const minutes = todayTime.getMinutes()\\\\n  return month + '/' + day + '/' + year + ' ' + hours + ':' + minutes\\\\n}\\\\n\\\\nexport const withBasic = addSourceDecorator(() => {\\\\n  const [isFilterOpen, setFilterOpen] = React.useState<boolean>(true)\\\\n\\\\n  // state that manages DatePickers value\\\\n\\\\n  return (\\\\n    <ThemeWrapper>\\\\n      <IconButton\\\\n        iconVariant='icomoon-funel'\\\\n        onClick={() => setFilterOpen((f) => !f)}\\\\n      >\\\\n        Filter\\\\n      </IconButton>\\\\n\\\\n      <FilterDrawer isOpen={isFilterOpen}>\\\\n        <Box display='flex' flexDirection='column' fullWidth fullHeight>\\\\n          <ModalHeader\\\\n            headerTitle='Analytics Filter'\\\\n            handleClose={() => setFilterOpen(false)}\\\\n            width='100%'\\\\n          />\\\\n\\\\n          {/* element that holds DateRangePickers value */}\\\\n          <Position type='relative'>\\\\n            <DateRangePicker\\\\n              onFromChange={action('From Clicked')}\\\\n              onToChange={action('To Clicked')}\\\\n              onApply={action('Apply Clicked')}\\\\n              onCancel={action('Cancel Clicked')}\\\\n              label={text('Label', 'Date Range')}\\\\n              variant='daterange'\\\\n              timeFormat={24}\\\\n              showTime={boolean('Show time', true)}\\\\n              startDate={new Date()}\\\\n              fromDateFormatter={getFormattedDate}\\\\n              toDateFormatter={getFormattedDate}\\\\n              style={{\\\\n                background: '#ccc',\\\\n                right: '0px',\\\\n                position: 'fixed'\\\\n              }}\\\\n            >\\\\n              {({ value, open, setOpen }: tDateRangeChildren) => (\\\\n                <Box fullWidth>\\\\n                  <TextInput\\\\n                    id='someId'\\\\n                    name={name}\\\\n                    className='someClassname'\\\\n                    label='Holidays'\\\\n                    variant='basic'\\\\n                    labelColor='text.inputLabel.default'\\\\n                    placeholder='Please Click Here'\\\\n                    fullWidth\\\\n                    value={value?.toString()}\\\\n                    onChange={action('On change clicked')}\\\\n                    onClick={() => setOpen(!open)}\\\\n                  />\\\\n                </Box>\\\\n              )}\\\\n            </DateRangePicker>\\\\n          </Position>\\\\n\\\\n          <Box\\\\n            flexGrow={1}\\\\n            style={{ overflow: 'auto' }}\\\\n            p='15px'\\\\n            fullWidth\\\\n            mt='50px'\\\\n          >\\\\n            <FilterMultiselect\\\\n              id='branch'\\\\n              label='Hub'\\\\n              options={options}\\\\n              onSelectionChange={action('On Change')}\\\\n            />\\\\n          </Box>\\\\n          <Box\\\\n            display='flex'\\\\n            justifyContent='flex-end'\\\\n            p='15px'\\\\n            horizontalSpacing='10px'\\\\n            fullWidth\\\\n          >\\\\n            <IconButton iconVariant='icomoon-tick-circled' primary>\\\\n              Apply\\\\n            </IconButton>\\\\n            <IconButton iconVariant='icomoon-back'>Reset</IconButton>\\\\n          </Box>\\\\n        </Box>\\\\n      </FilterDrawer>\\\\n    </ThemeWrapper>\\\\n  )\\\\n}, {__STORY__, __ADDS_MAP__,__MAIN_FILE_LOCATION__,__MODULE_DEPENDENCIES__,__LOCAL_DEPENDENCIES__,__SOURCE_PREFIX__,__IDS_TO_FRAMEWORKS__});\\\";\\n// @ts-ignore\\nvar __ADDS_MAP__ = {};\\n// @ts-ignore\\nvar __MAIN_FILE_LOCATION__ = \\\"/FilterDrawer.stories.tsx\\\";\\n// @ts-ignore\\nvar __MODULE_DEPENDENCIES__ = [];\\n// @ts-ignore\\nvar __LOCAL_DEPENDENCIES__ = {};\\n// @ts-ignore\\nvar __IDS_TO_FRAMEWORKS__ = {};\\n        \\n\\n\\n// @ts-nocheck\\n// @ts-ignore\\nvar withSourceLoader = require('@storybook/source-loader/preview').withSource;\\n// @ts-ignore\\nvar addSourceDecorator = require(\\\"@storybook/source-loader/preview\\\").addSource;\\n// @ts-ignore\\nvar __SOURCE_PREFIX__ = \\\"/Users/farhanansari/Code/ui-library/src/components/atoms/FilterDrawer\\\";\\n// @ts-ignore\\nvar __STORY__ = \\\"import React from 'react'\\\\nimport FilterDrawer from '.'\\\\nimport { path } from '..'\\\\nimport ThemeWrapper from '../../../utilities/components/ThemeWrapper'\\\\n\\\\nimport ModalHeader from '../../molecules/ModalHeader'\\\\nimport Box from '../Box'\\\\nimport IconButton from '../IconButton'\\\\nimport { IFilterMultiselectOption } from '../../molecules/FilterMultiselect/interfaces'\\\\nimport FilterMultiselect from '../../molecules/FilterMultiselect'\\\\nimport { action } from '@storybook/addon-actions'\\\\nimport { boolean, text } from '@storybook/addon-knobs'\\\\nimport { DateRangePicker } from '../../molecules/DatePicker'\\\\nimport { tDateRangeChildren } from '../../molecules/DatePicker/interfaces'\\\\nimport TextInput from '../../molecules/TextInput'\\\\nimport Position from '../../molecules/Position'\\\\n\\\\nexport default {\\\\n  title: `${path}/FilterDrawer`,\\\\n  component: FilterDrawer\\\\n}\\\\n\\\\nconst options: IFilterMultiselectOption[] = [\\\\n  { id: '1', label: 'Powai', value: 'powai' },\\\\n  { id: '2', label: 'Andheri', value: 'andheri' },\\\\n  { id: '3', label: 'Bhandup', value: 'bhandup' }\\\\n]\\\\n\\\\nconst getFormattedDate = (date: Date) => {\\\\n  const todayTime = date\\\\n  const month = todayTime.getMonth() + 1\\\\n  const day = todayTime.getDate()\\\\n  const year = todayTime.getFullYear()\\\\n  const hours = todayTime.getHours()\\\\n  const minutes = todayTime.getMinutes()\\\\n  return month + '/' + day + '/' + year + ' ' + hours + ':' + minutes\\\\n}\\\\n\\\\nexport const withBasic = () => {\\\\n  const [isFilterOpen, setFilterOpen] = React.useState<boolean>(true)\\\\n\\\\n  // state that manages DatePickers value\\\\n\\\\n  return (\\\\n    <ThemeWrapper>\\\\n      <IconButton\\\\n        iconVariant='icomoon-funel'\\\\n        onClick={() => setFilterOpen((f) => !f)}\\\\n      >\\\\n        Filter\\\\n      </IconButton>\\\\n\\\\n      <FilterDrawer isOpen={isFilterOpen}>\\\\n        <Box display='flex' flexDirection='column' fullWidth fullHeight>\\\\n          <ModalHeader\\\\n            headerTitle='Analytics Filter'\\\\n            handleClose={() => setFilterOpen(false)}\\\\n            width='100%'\\\\n          />\\\\n\\\\n          {/* element that holds DateRangePickers value */}\\\\n          <Position type='relative'>\\\\n            <DateRangePicker\\\\n              onFromChange={action('From Clicked')}\\\\n              onToChange={action('To Clicked')}\\\\n              onApply={action('Apply Clicked')}\\\\n              onCancel={action('Cancel Clicked')}\\\\n              label={text('Label', 'Date Range')}\\\\n              variant='daterange'\\\\n              timeFormat={24}\\\\n              showTime={boolean('Show time', true)}\\\\n              startDate={new Date()}\\\\n              fromDateFormatter={getFormattedDate}\\\\n              toDateFormatter={getFormattedDate}\\\\n              style={{\\\\n                background: '#ccc',\\\\n                right: '0px',\\\\n                position: 'fixed'\\\\n              }}\\\\n            >\\\\n              {({ value, open, setOpen }: tDateRangeChildren) => (\\\\n                <Box fullWidth>\\\\n                  <TextInput\\\\n                    id='someId'\\\\n                    name={name}\\\\n                    className='someClassname'\\\\n                    label='Holidays'\\\\n                    variant='basic'\\\\n                    labelColor='text.inputLabel.default'\\\\n                    placeholder='Please Click Here'\\\\n                    fullWidth\\\\n                    value={value?.toString()}\\\\n                    onChange={action('On change clicked')}\\\\n                    onClick={() => setOpen(!open)}\\\\n                  />\\\\n                </Box>\\\\n              )}\\\\n            </DateRangePicker>\\\\n          </Position>\\\\n\\\\n          <Box\\\\n            flexGrow={1}\\\\n            style={{ overflow: 'auto' }}\\\\n            p='15px'\\\\n            fullWidth\\\\n            mt='50px'\\\\n          >\\\\n            <FilterMultiselect\\\\n              id='branch'\\\\n              label='Hub'\\\\n              options={options}\\\\n              onSelectionChange={action('On Change')}\\\\n            />\\\\n          </Box>\\\\n          <Box\\\\n            display='flex'\\\\n            justifyContent='flex-end'\\\\n            p='15px'\\\\n            horizontalSpacing='10px'\\\\n            fullWidth\\\\n          >\\\\n            <IconButton iconVariant='icomoon-tick-circled' primary>\\\\n              Apply\\\\n            </IconButton>\\\\n            <IconButton iconVariant='icomoon-back'>Reset</IconButton>\\\\n          </Box>\\\\n        </Box>\\\\n      </FilterDrawer>\\\\n    </ThemeWrapper>\\\\n  )\\\\n}\\\\n\\\";\\n// @ts-ignore\\nvar __ADDS_MAP__ = {};\\n// @ts-ignore\\nvar __MAIN_FILE_LOCATION__ = \\\"/FilterDrawer.stories.tsx\\\";\\n// @ts-ignore\\nvar __MODULE_DEPENDENCIES__ = [];\\n// @ts-ignore\\nvar __LOCAL_DEPENDENCIES__ = {};\\n// @ts-ignore\\nvar __IDS_TO_FRAMEWORKS__ = {};\\n        \\nimport React from 'react'\\nimport FilterDrawer from '.'\\nimport { path } from '..'\\nimport ThemeWrapper from '../../../utilities/components/ThemeWrapper'\\n\\nimport ModalHeader from '../../molecules/ModalHeader'\\nimport Box from '../Box'\\nimport IconButton from '../IconButton'\\nimport { IFilterMultiselectOption } from '../../molecules/FilterMultiselect/interfaces'\\nimport FilterMultiselect from '../../molecules/FilterMultiselect'\\nimport { action } from '@storybook/addon-actions'\\nimport { boolean, text } from '@storybook/addon-knobs'\\nimport { DateRangePicker } from '../../molecules/DatePicker'\\nimport { tDateRangeChildren } from '../../molecules/DatePicker/interfaces'\\nimport TextInput from '../../molecules/TextInput'\\nimport Position from '../../molecules/Position'\\n\\nexport default {parameters: {\\\"storySource\\\":{\\\"source\\\":\\\"\\\\n\\\\n// @ts-nocheck\\\\n// @ts-ignore\\\\nvar withSourceLoader = require('@storybook/source-loader/preview').withSource;\\\\n// @ts-ignore\\\\nvar addSourceDecorator = require(\\\\\\\"@storybook/source-loader/preview\\\\\\\").addSource;\\\\n// @ts-ignore\\\\nvar __SOURCE_PREFIX__ = \\\\\\\"/Users/farhanansari/Code/ui-library/src/components/atoms/FilterDrawer\\\\\\\";\\\\n// @ts-ignore\\\\nvar __STORY__ = \\\\\\\"import React from 'react'\\\\\\\\nimport FilterDrawer from '.'\\\\\\\\nimport { path } from '..'\\\\\\\\nimport ThemeWrapper from '../../../utilities/components/ThemeWrapper'\\\\\\\\n\\\\\\\\nimport ModalHeader from '../../molecules/ModalHeader'\\\\\\\\nimport Box from '../Box'\\\\\\\\nimport IconButton from '../IconButton'\\\\\\\\nimport { IFilterMultiselectOption } from '../../molecules/FilterMultiselect/interfaces'\\\\\\\\nimport FilterMultiselect from '../../molecules/FilterMultiselect'\\\\\\\\nimport { action } from '@storybook/addon-actions'\\\\\\\\nimport { boolean, text } from '@storybook/addon-knobs'\\\\\\\\nimport { DateRangePicker } from '../../molecules/DatePicker'\\\\\\\\nimport { tDateRangeChildren } from '../../molecules/DatePicker/interfaces'\\\\\\\\nimport TextInput from '../../molecules/TextInput'\\\\\\\\nimport Position from '../../molecules/Position'\\\\\\\\n\\\\\\\\nexport default {\\\\\\\\n  title: `${path}/FilterDrawer`,\\\\\\\\n  component: FilterDrawer\\\\\\\\n}\\\\\\\\n\\\\\\\\nconst options: IFilterMultiselectOption[] = [\\\\\\\\n  { id: '1', label: 'Powai', value: 'powai' },\\\\\\\\n  { id: '2', label: 'Andheri', value: 'andheri' },\\\\\\\\n  { id: '3', label: 'Bhandup', value: 'bhandup' }\\\\\\\\n]\\\\\\\\n\\\\\\\\nconst getFormattedDate = (date: Date) => {\\\\\\\\n  const todayTime = date\\\\\\\\n  const month = todayTime.getMonth() + 1\\\\\\\\n  const day = todayTime.getDate()\\\\\\\\n  const year = todayTime.getFullYear()\\\\\\\\n  const hours = todayTime.getHours()\\\\\\\\n  const minutes = todayTime.getMinutes()\\\\\\\\n  return month + '/' + day + '/' + year + ' ' + hours + ':' + minutes\\\\\\\\n}\\\\\\\\n\\\\\\\\nexport const withBasic = () => {\\\\\\\\n  const [isFilterOpen, setFilterOpen] = React.useState<boolean>(true)\\\\\\\\n\\\\\\\\n  // state that manages DatePickers value\\\\\\\\n\\\\\\\\n  return (\\\\\\\\n    <ThemeWrapper>\\\\\\\\n      <IconButton\\\\\\\\n        iconVariant='icomoon-funel'\\\\\\\\n        onClick={() => setFilterOpen((f) => !f)}\\\\\\\\n      >\\\\\\\\n        Filter\\\\\\\\n      </IconButton>\\\\\\\\n\\\\\\\\n      <FilterDrawer isOpen={isFilterOpen}>\\\\\\\\n        <Box display='flex' flexDirection='column' fullWidth fullHeight>\\\\\\\\n          <ModalHeader\\\\\\\\n            headerTitle='Analytics Filter'\\\\\\\\n            handleClose={() => setFilterOpen(false)}\\\\\\\\n            width='100%'\\\\\\\\n          />\\\\\\\\n\\\\\\\\n          {/* element that holds DateRangePickers value */}\\\\\\\\n          <Position type='relative'>\\\\\\\\n            <DateRangePicker\\\\\\\\n              onFromChange={action('From Clicked')}\\\\\\\\n              onToChange={action('To Clicked')}\\\\\\\\n              onApply={action('Apply Clicked')}\\\\\\\\n              onCancel={action('Cancel Clicked')}\\\\\\\\n              label={text('Label', 'Date Range')}\\\\\\\\n              variant='daterange'\\\\\\\\n              timeFormat={24}\\\\\\\\n              showTime={boolean('Show time', true)}\\\\\\\\n              startDate={new Date()}\\\\\\\\n              fromDateFormatter={getFormattedDate}\\\\\\\\n              toDateFormatter={getFormattedDate}\\\\\\\\n              style={{\\\\\\\\n                background: '#ccc',\\\\\\\\n                right: '0px',\\\\\\\\n                position: 'fixed'\\\\\\\\n              }}\\\\\\\\n            >\\\\\\\\n              {({ value, open, setOpen }: tDateRangeChildren) => (\\\\\\\\n                <Box fullWidth>\\\\\\\\n                  <TextInput\\\\\\\\n                    id='someId'\\\\\\\\n                    name={name}\\\\\\\\n                    className='someClassname'\\\\\\\\n                    label='Holidays'\\\\\\\\n                    variant='basic'\\\\\\\\n                    labelColor='text.inputLabel.default'\\\\\\\\n                    placeholder='Please Click Here'\\\\\\\\n                    fullWidth\\\\\\\\n                    value={value?.toString()}\\\\\\\\n                    onChange={action('On change clicked')}\\\\\\\\n                    onClick={() => setOpen(!open)}\\\\\\\\n                  />\\\\\\\\n                </Box>\\\\\\\\n              )}\\\\\\\\n            </DateRangePicker>\\\\\\\\n          </Position>\\\\\\\\n\\\\\\\\n          <Box\\\\\\\\n            flexGrow={1}\\\\\\\\n            style={{ overflow: 'auto' }}\\\\\\\\n            p='15px'\\\\\\\\n            fullWidth\\\\\\\\n            mt='50px'\\\\\\\\n          >\\\\\\\\n            <FilterMultiselect\\\\\\\\n              id='branch'\\\\\\\\n              label='Hub'\\\\\\\\n              options={options}\\\\\\\\n              onSelectionChange={action('On Change')}\\\\\\\\n            />\\\\\\\\n          </Box>\\\\\\\\n          <Box\\\\\\\\n            display='flex'\\\\\\\\n            justifyContent='flex-end'\\\\\\\\n            p='15px'\\\\\\\\n            horizontalSpacing='10px'\\\\\\\\n            fullWidth\\\\\\\\n          >\\\\\\\\n            <IconButton iconVariant='icomoon-tick-circled' primary>\\\\\\\\n              Apply\\\\\\\\n            </IconButton>\\\\\\\\n            <IconButton iconVariant='icomoon-back'>Reset</IconButton>\\\\\\\\n          </Box>\\\\\\\\n        </Box>\\\\\\\\n      </FilterDrawer>\\\\\\\\n    </ThemeWrapper>\\\\\\\\n  )\\\\\\\\n}\\\\\\\\n\\\\\\\";\\\\n// @ts-ignore\\\\nvar __ADDS_MAP__ = {};\\\\n// @ts-ignore\\\\nvar __MAIN_FILE_LOCATION__ = \\\\\\\"/FilterDrawer.stories.tsx\\\\\\\";\\\\n// @ts-ignore\\\\nvar __MODULE_DEPENDENCIES__ = [];\\\\n// @ts-ignore\\\\nvar __LOCAL_DEPENDENCIES__ = {};\\\\n// @ts-ignore\\\\nvar __IDS_TO_FRAMEWORKS__ = {};\\\\n        \\\\nimport React from 'react'\\\\nimport FilterDrawer from '.'\\\\nimport { path } from '..'\\\\nimport ThemeWrapper from '../../../utilities/components/ThemeWrapper'\\\\n\\\\nimport ModalHeader from '../../molecules/ModalHeader'\\\\nimport Box from '../Box'\\\\nimport IconButton from '../IconButton'\\\\nimport { IFilterMultiselectOption } from '../../molecules/FilterMultiselect/interfaces'\\\\nimport FilterMultiselect from '../../molecules/FilterMultiselect'\\\\nimport { action } from '@storybook/addon-actions'\\\\nimport { boolean, text } from '@storybook/addon-knobs'\\\\nimport { DateRangePicker } from '../../molecules/DatePicker'\\\\nimport { tDateRangeChildren } from '../../molecules/DatePicker/interfaces'\\\\nimport TextInput from '../../molecules/TextInput'\\\\nimport Position from '../../molecules/Position'\\\\n\\\\nexport default {parameters: {\\\\\\\"storySource\\\\\\\":{\\\\\\\"source\\\\\\\":\\\\\\\"import React from 'react'\\\\\\\\nimport FilterDrawer from '.'\\\\\\\\nimport { path } from '..'\\\\\\\\nimport ThemeWrapper from '../../../utilities/components/ThemeWrapper'\\\\\\\\n\\\\\\\\nimport ModalHeader from '../../molecules/ModalHeader'\\\\\\\\nimport Box from '../Box'\\\\\\\\nimport IconButton from '../IconButton'\\\\\\\\nimport { IFilterMultiselectOption } from '../../molecules/FilterMultiselect/interfaces'\\\\\\\\nimport FilterMultiselect from '../../molecules/FilterMultiselect'\\\\\\\\nimport { action } from '@storybook/addon-actions'\\\\\\\\nimport { boolean, text } from '@storybook/addon-knobs'\\\\\\\\nimport { DateRangePicker } from '../../molecules/DatePicker'\\\\\\\\nimport { tDateRangeChildren } from '../../molecules/DatePicker/interfaces'\\\\\\\\nimport TextInput from '../../molecules/TextInput'\\\\\\\\nimport Position from '../../molecules/Position'\\\\\\\\n\\\\\\\\nexport default {\\\\\\\\n  title: `${path}/FilterDrawer`,\\\\\\\\n  component: FilterDrawer\\\\\\\\n}\\\\\\\\n\\\\\\\\nconst options: IFilterMultiselectOption[] = [\\\\\\\\n  { id: '1', label: 'Powai', value: 'powai' },\\\\\\\\n  { id: '2', label: 'Andheri', value: 'andheri' },\\\\\\\\n  { id: '3', label: 'Bhandup', value: 'bhandup' }\\\\\\\\n]\\\\\\\\n\\\\\\\\nconst getFormattedDate = (date: Date) => {\\\\\\\\n  const todayTime = date\\\\\\\\n  const month = todayTime.getMonth() + 1\\\\\\\\n  const day = todayTime.getDate()\\\\\\\\n  const year = todayTime.getFullYear()\\\\\\\\n  const hours = todayTime.getHours()\\\\\\\\n  const minutes = todayTime.getMinutes()\\\\\\\\n  return month + '/' + day + '/' + year + ' ' + hours + ':' + minutes\\\\\\\\n}\\\\\\\\n\\\\\\\\nexport const withBasic = () => {\\\\\\\\n  const [isFilterOpen, setFilterOpen] = React.useState<boolean>(true)\\\\\\\\n\\\\\\\\n  // state that manages DatePickers value\\\\\\\\n\\\\\\\\n  return (\\\\\\\\n    <ThemeWrapper>\\\\\\\\n      <IconButton\\\\\\\\n        iconVariant='icomoon-funel'\\\\\\\\n        onClick={() => setFilterOpen((f) => !f)}\\\\\\\\n      >\\\\\\\\n        Filter\\\\\\\\n      </IconButton>\\\\\\\\n\\\\\\\\n      <FilterDrawer isOpen={isFilterOpen}>\\\\\\\\n        <Box display='flex' flexDirection='column' fullWidth fullHeight>\\\\\\\\n          <ModalHeader\\\\\\\\n            headerTitle='Analytics Filter'\\\\\\\\n            handleClose={() => setFilterOpen(false)}\\\\\\\\n            width='100%'\\\\\\\\n          />\\\\\\\\n\\\\\\\\n          {/* element that holds DateRangePickers value */}\\\\\\\\n          <Position type='relative'>\\\\\\\\n            <DateRangePicker\\\\\\\\n              onFromChange={action('From Clicked')}\\\\\\\\n              onToChange={action('To Clicked')}\\\\\\\\n              onApply={action('Apply Clicked')}\\\\\\\\n              onCancel={action('Cancel Clicked')}\\\\\\\\n              label={text('Label', 'Date Range')}\\\\\\\\n              variant='daterange'\\\\\\\\n              timeFormat={24}\\\\\\\\n              showTime={boolean('Show time', true)}\\\\\\\\n              startDate={new Date()}\\\\\\\\n              fromDateFormatter={getFormattedDate}\\\\\\\\n              toDateFormatter={getFormattedDate}\\\\\\\\n              style={{\\\\\\\\n                background: '#ccc',\\\\\\\\n                right: '0px',\\\\\\\\n                position: 'fixed'\\\\\\\\n              }}\\\\\\\\n            >\\\\\\\\n              {({ value, open, setOpen }: tDateRangeChildren) => (\\\\\\\\n                <Box fullWidth>\\\\\\\\n                  <TextInput\\\\\\\\n                    id='someId'\\\\\\\\n                    name={name}\\\\\\\\n                    className='someClassname'\\\\\\\\n                    label='Holidays'\\\\\\\\n                    variant='basic'\\\\\\\\n                    labelColor='text.inputLabel.default'\\\\\\\\n                    placeholder='Please Click Here'\\\\\\\\n                    fullWidth\\\\\\\\n                    value={value?.toString()}\\\\\\\\n                    onChange={action('On change clicked')}\\\\\\\\n                    onClick={() => setOpen(!open)}\\\\\\\\n                  />\\\\\\\\n                </Box>\\\\\\\\n              )}\\\\\\\\n            </DateRangePicker>\\\\\\\\n          </Position>\\\\\\\\n\\\\\\\\n          <Box\\\\\\\\n            flexGrow={1}\\\\\\\\n            style={{ overflow: 'auto' }}\\\\\\\\n            p='15px'\\\\\\\\n            fullWidth\\\\\\\\n            mt='50px'\\\\\\\\n          >\\\\\\\\n            <FilterMultiselect\\\\\\\\n              id='branch'\\\\\\\\n              label='Hub'\\\\\\\\n              options={options}\\\\\\\\n              onSelectionChange={action('On Change')}\\\\\\\\n            />\\\\\\\\n          </Box>\\\\\\\\n          <Box\\\\\\\\n            display='flex'\\\\\\\\n            justifyContent='flex-end'\\\\\\\\n            p='15px'\\\\\\\\n            horizontalSpacing='10px'\\\\\\\\n            fullWidth\\\\\\\\n          >\\\\\\\\n            <IconButton iconVariant='icomoon-tick-circled' primary>\\\\\\\\n              Apply\\\\\\\\n            </IconButton>\\\\\\\\n            <IconButton iconVariant='icomoon-back'>Reset</IconButton>\\\\\\\\n          </Box>\\\\\\\\n        </Box>\\\\\\\\n      </FilterDrawer>\\\\\\\\n    </ThemeWrapper>\\\\\\\\n  )\\\\\\\\n}\\\\\\\\n\\\\\\\",\\\\\\\"locationsMap\\\\\\\":{}},},\\\\n  title: `${path}/FilterDrawer`,\\\\n  component: FilterDrawer\\\\n}\\\\n\\\\nconst options: IFilterMultiselectOption[] = [\\\\n  { id: '1', label: 'Powai', value: 'powai' },\\\\n  { id: '2', label: 'Andheri', value: 'andheri' },\\\\n  { id: '3', label: 'Bhandup', value: 'bhandup' }\\\\n]\\\\n\\\\nconst getFormattedDate = (date: Date) => {\\\\n  const todayTime = date\\\\n  const month = todayTime.getMonth() + 1\\\\n  const day = todayTime.getDate()\\\\n  const year = todayTime.getFullYear()\\\\n  const hours = todayTime.getHours()\\\\n  const minutes = todayTime.getMinutes()\\\\n  return month + '/' + day + '/' + year + ' ' + hours + ':' + minutes\\\\n}\\\\n\\\\nexport const withBasic = addSourceDecorator(() => {\\\\n  const [isFilterOpen, setFilterOpen] = React.useState<boolean>(true)\\\\n\\\\n  // state that manages DatePickers value\\\\n\\\\n  return (\\\\n    <ThemeWrapper>\\\\n      <IconButton\\\\n        iconVariant='icomoon-funel'\\\\n        onClick={() => setFilterOpen((f) => !f)}\\\\n      >\\\\n        Filter\\\\n      </IconButton>\\\\n\\\\n      <FilterDrawer isOpen={isFilterOpen}>\\\\n        <Box display='flex' flexDirection='column' fullWidth fullHeight>\\\\n          <ModalHeader\\\\n            headerTitle='Analytics Filter'\\\\n            handleClose={() => setFilterOpen(false)}\\\\n            width='100%'\\\\n          />\\\\n\\\\n          {/* element that holds DateRangePickers value */}\\\\n          <Position type='relative'>\\\\n            <DateRangePicker\\\\n              onFromChange={action('From Clicked')}\\\\n              onToChange={action('To Clicked')}\\\\n              onApply={action('Apply Clicked')}\\\\n              onCancel={action('Cancel Clicked')}\\\\n              label={text('Label', 'Date Range')}\\\\n              variant='daterange'\\\\n              timeFormat={24}\\\\n              showTime={boolean('Show time', true)}\\\\n              startDate={new Date()}\\\\n              fromDateFormatter={getFormattedDate}\\\\n              toDateFormatter={getFormattedDate}\\\\n              style={{\\\\n                background: '#ccc',\\\\n                right: '0px',\\\\n                position: 'fixed'\\\\n              }}\\\\n            >\\\\n              {({ value, open, setOpen }: tDateRangeChildren) => (\\\\n                <Box fullWidth>\\\\n                  <TextInput\\\\n                    id='someId'\\\\n                    name={name}\\\\n                    className='someClassname'\\\\n                    label='Holidays'\\\\n                    variant='basic'\\\\n                    labelColor='text.inputLabel.default'\\\\n                    placeholder='Please Click Here'\\\\n                    fullWidth\\\\n                    value={value?.toString()}\\\\n                    onChange={action('On change clicked')}\\\\n                    onClick={() => setOpen(!open)}\\\\n                  />\\\\n                </Box>\\\\n              )}\\\\n            </DateRangePicker>\\\\n          </Position>\\\\n\\\\n          <Box\\\\n            flexGrow={1}\\\\n            style={{ overflow: 'auto' }}\\\\n            p='15px'\\\\n            fullWidth\\\\n            mt='50px'\\\\n          >\\\\n            <FilterMultiselect\\\\n              id='branch'\\\\n              label='Hub'\\\\n              options={options}\\\\n              onSelectionChange={action('On Change')}\\\\n            />\\\\n          </Box>\\\\n          <Box\\\\n            display='flex'\\\\n            justifyContent='flex-end'\\\\n            p='15px'\\\\n            horizontalSpacing='10px'\\\\n            fullWidth\\\\n          >\\\\n            <IconButton iconVariant='icomoon-tick-circled' primary>\\\\n              Apply\\\\n            </IconButton>\\\\n            <IconButton iconVariant='icomoon-back'>Reset</IconButton>\\\\n          </Box>\\\\n        </Box>\\\\n      </FilterDrawer>\\\\n    </ThemeWrapper>\\\\n  )\\\\n}, {__STORY__, __ADDS_MAP__,__MAIN_FILE_LOCATION__,__MODULE_DEPENDENCIES__,__LOCAL_DEPENDENCIES__,__SOURCE_PREFIX__,__IDS_TO_FRAMEWORKS__});\\\",\\\"locationsMap\\\":{}},\\\"storySource\\\":{\\\"source\\\":\\\"import React from 'react'\\\\nimport FilterDrawer from '.'\\\\nimport { path } from '..'\\\\nimport ThemeWrapper from '../../../utilities/components/ThemeWrapper'\\\\n\\\\nimport ModalHeader from '../../molecules/ModalHeader'\\\\nimport Box from '../Box'\\\\nimport IconButton from '../IconButton'\\\\nimport { IFilterMultiselectOption } from '../../molecules/FilterMultiselect/interfaces'\\\\nimport FilterMultiselect from '../../molecules/FilterMultiselect'\\\\nimport { action } from '@storybook/addon-actions'\\\\nimport { boolean, text } from '@storybook/addon-knobs'\\\\nimport { DateRangePicker } from '../../molecules/DatePicker'\\\\nimport { tDateRangeChildren } from '../../molecules/DatePicker/interfaces'\\\\nimport TextInput from '../../molecules/TextInput'\\\\nimport Position from '../../molecules/Position'\\\\n\\\\nexport default {\\\\n  title: `${path}/FilterDrawer`,\\\\n  component: FilterDrawer\\\\n}\\\\n\\\\nconst options: IFilterMultiselectOption[] = [\\\\n  { id: '1', label: 'Powai', value: 'powai' },\\\\n  { id: '2', label: 'Andheri', value: 'andheri' },\\\\n  { id: '3', label: 'Bhandup', value: 'bhandup' }\\\\n]\\\\n\\\\nconst getFormattedDate = (date: Date) => {\\\\n  const todayTime = date\\\\n  const month = todayTime.getMonth() + 1\\\\n  const day = todayTime.getDate()\\\\n  const year = todayTime.getFullYear()\\\\n  const hours = todayTime.getHours()\\\\n  const minutes = todayTime.getMinutes()\\\\n  return month + '/' + day + '/' + year + ' ' + hours + ':' + minutes\\\\n}\\\\n\\\\nexport const withBasic = () => {\\\\n  const [isFilterOpen, setFilterOpen] = React.useState<boolean>(true)\\\\n\\\\n  // state that manages DatePickers value\\\\n\\\\n  return (\\\\n    <ThemeWrapper>\\\\n      <IconButton\\\\n        iconVariant='icomoon-funel'\\\\n        onClick={() => setFilterOpen((f) => !f)}\\\\n      >\\\\n        Filter\\\\n      </IconButton>\\\\n\\\\n      <FilterDrawer isOpen={isFilterOpen}>\\\\n        <Box display='flex' flexDirection='column' fullWidth fullHeight>\\\\n          <ModalHeader\\\\n            headerTitle='Analytics Filter'\\\\n            handleClose={() => setFilterOpen(false)}\\\\n            width='100%'\\\\n          />\\\\n\\\\n          {/* element that holds DateRangePickers value */}\\\\n          <Position type='relative'>\\\\n            <DateRangePicker\\\\n              onFromChange={action('From Clicked')}\\\\n              onToChange={action('To Clicked')}\\\\n              onApply={action('Apply Clicked')}\\\\n              onCancel={action('Cancel Clicked')}\\\\n              label={text('Label', 'Date Range')}\\\\n              variant='daterange'\\\\n              timeFormat={24}\\\\n              showTime={boolean('Show time', true)}\\\\n              startDate={new Date()}\\\\n              fromDateFormatter={getFormattedDate}\\\\n              toDateFormatter={getFormattedDate}\\\\n              style={{\\\\n                background: '#ccc',\\\\n                right: '0px',\\\\n                position: 'fixed'\\\\n              }}\\\\n            >\\\\n              {({ value, open, setOpen }: tDateRangeChildren) => (\\\\n                <Box fullWidth>\\\\n                  <TextInput\\\\n                    id='someId'\\\\n                    name={name}\\\\n                    className='someClassname'\\\\n                    label='Holidays'\\\\n                    variant='basic'\\\\n                    labelColor='text.inputLabel.default'\\\\n                    placeholder='Please Click Here'\\\\n                    fullWidth\\\\n                    value={value?.toString()}\\\\n                    onChange={action('On change clicked')}\\\\n                    onClick={() => setOpen(!open)}\\\\n                  />\\\\n                </Box>\\\\n              )}\\\\n            </DateRangePicker>\\\\n          </Position>\\\\n\\\\n          <Box\\\\n            flexGrow={1}\\\\n            style={{ overflow: 'auto' }}\\\\n            p='15px'\\\\n            fullWidth\\\\n            mt='50px'\\\\n          >\\\\n            <FilterMultiselect\\\\n              id='branch'\\\\n              label='Hub'\\\\n              options={options}\\\\n              onSelectionChange={action('On Change')}\\\\n            />\\\\n          </Box>\\\\n          <Box\\\\n            display='flex'\\\\n            justifyContent='flex-end'\\\\n            p='15px'\\\\n            horizontalSpacing='10px'\\\\n            fullWidth\\\\n          >\\\\n            <IconButton iconVariant='icomoon-tick-circled' primary>\\\\n              Apply\\\\n            </IconButton>\\\\n            <IconButton iconVariant='icomoon-back'>Reset</IconButton>\\\\n          </Box>\\\\n        </Box>\\\\n      </FilterDrawer>\\\\n    </ThemeWrapper>\\\\n  )\\\\n}\\\\n\\\",\\\"locationsMap\\\":{}},},\\n  title: `${path}/FilterDrawer`,\\n  component: FilterDrawer\\n}\\n\\nconst options: IFilterMultiselectOption[] = [\\n  { id: '1', label: 'Powai', value: 'powai' },\\n  { id: '2', label: 'Andheri', value: 'andheri' },\\n  { id: '3', label: 'Bhandup', value: 'bhandup' }\\n]\\n\\nconst getFormattedDate = (date: Date) => {\\n  const todayTime = date\\n  const month = todayTime.getMonth() + 1\\n  const day = todayTime.getDate()\\n  const year = todayTime.getFullYear()\\n  const hours = todayTime.getHours()\\n  const minutes = todayTime.getMinutes()\\n  return month + '/' + day + '/' + year + ' ' + hours + ':' + minutes\\n}\\n\\nexport const withBasic = addSourceDecorator(addSourceDecorator(() => {\\n  const [isFilterOpen, setFilterOpen] = React.useState<boolean>(true)\\n\\n  // state that manages DatePickers value\\n\\n  return (\\n    <ThemeWrapper>\\n      <IconButton\\n        iconVariant='icomoon-funel'\\n        onClick={() => setFilterOpen((f) => !f)}\\n      >\\n        Filter\\n      </IconButton>\\n\\n      <FilterDrawer isOpen={isFilterOpen}>\\n        <Box display='flex' flexDirection='column' fullWidth fullHeight>\\n          <ModalHeader\\n            headerTitle='Analytics Filter'\\n            handleClose={() => setFilterOpen(false)}\\n            width='100%'\\n          />\\n\\n          {/* element that holds DateRangePickers value */}\\n          <Position type='relative'>\\n            <DateRangePicker\\n              onFromChange={action('From Clicked')}\\n              onToChange={action('To Clicked')}\\n              onApply={action('Apply Clicked')}\\n              onCancel={action('Cancel Clicked')}\\n              label={text('Label', 'Date Range')}\\n              variant='daterange'\\n              timeFormat={24}\\n              showTime={boolean('Show time', true)}\\n              startDate={new Date()}\\n              fromDateFormatter={getFormattedDate}\\n              toDateFormatter={getFormattedDate}\\n              style={{\\n                background: '#ccc',\\n                right: '0px',\\n                position: 'fixed'\\n              }}\\n            >\\n              {({ value, open, setOpen }: tDateRangeChildren) => (\\n                <Box fullWidth>\\n                  <TextInput\\n                    id='someId'\\n                    name={name}\\n                    className='someClassname'\\n                    label='Holidays'\\n                    variant='basic'\\n                    labelColor='text.inputLabel.default'\\n                    placeholder='Please Click Here'\\n                    fullWidth\\n                    value={value?.toString()}\\n                    onChange={action('On change clicked')}\\n                    onClick={() => setOpen(!open)}\\n                  />\\n                </Box>\\n              )}\\n            </DateRangePicker>\\n          </Position>\\n\\n          <Box\\n            flexGrow={1}\\n            style={{ overflow: 'auto' }}\\n            p='15px'\\n            fullWidth\\n            mt='50px'\\n          >\\n            <FilterMultiselect\\n              id='branch'\\n              label='Hub'\\n              options={options}\\n              onSelectionChange={action('On Change')}\\n            />\\n          </Box>\\n          <Box\\n            display='flex'\\n            justifyContent='flex-end'\\n            p='15px'\\n            horizontalSpacing='10px'\\n            fullWidth\\n          >\\n            <IconButton iconVariant='icomoon-tick-circled' primary>\\n              Apply\\n            </IconButton>\\n            <IconButton iconVariant='icomoon-back'>Reset</IconButton>\\n          </Box>\\n        </Box>\\n      </FilterDrawer>\\n    </ThemeWrapper>\\n  )\\n}, {__STORY__, __ADDS_MAP__,__MAIN_FILE_LOCATION__,__MODULE_DEPENDENCIES__,__LOCAL_DEPENDENCIES__,__SOURCE_PREFIX__,__IDS_TO_FRAMEWORKS__}), {__STORY__, __ADDS_MAP__,__MAIN_FILE_LOCATION__,__MODULE_DEPENDENCIES__,__LOCAL_DEPENDENCIES__,__SOURCE_PREFIX__,__IDS_TO_FRAMEWORKS__});\";\n// @ts-ignore\nvar __ADDS_MAP__ = {};\n// @ts-ignore\nvar __MAIN_FILE_LOCATION__ = \"/FilterDrawer.stories.tsx\";\n// @ts-ignore\nvar __MODULE_DEPENDENCIES__ = [];\n// @ts-ignore\nvar __LOCAL_DEPENDENCIES__ = {};\n// @ts-ignore\nvar __IDS_TO_FRAMEWORKS__ = {};\n        \n\n/* eslint-disable */\n// @ts-nocheck\n// @ts-ignore\nvar withSourceLoader = require('@storybook/source-loader/preview').withSource;\n// @ts-ignore\nvar addSourceDecorator = require(\"@storybook/source-loader/preview\").addSource;\n// @ts-ignore\nvar __SOURCE_PREFIX__ = \"/Users/farhanansari/Code/ui-library/src/components/atoms/FilterDrawer\";\n// @ts-ignore\nvar __STORY__ = \"\\n\\n// @ts-nocheck\\n// @ts-ignore\\nvar withSourceLoader = require('@storybook/source-loader/preview').withSource;\\n// @ts-ignore\\nvar addSourceDecorator = require(\\\"@storybook/source-loader/preview\\\").addSource;\\n// @ts-ignore\\nvar __SOURCE_PREFIX__ = \\\"/Users/farhanansari/Code/ui-library/src/components/atoms/FilterDrawer\\\";\\n// @ts-ignore\\nvar __STORY__ = \\\"import React from 'react'\\\\nimport FilterDrawer from '.'\\\\nimport { path } from '..'\\\\nimport ThemeWrapper from '../../../utilities/components/ThemeWrapper'\\\\n\\\\nimport ModalHeader from '../../molecules/ModalHeader'\\\\nimport Box from '../Box'\\\\nimport IconButton from '../IconButton'\\\\nimport { IFilterMultiselectOption } from '../../molecules/FilterMultiselect/interfaces'\\\\nimport FilterMultiselect from '../../molecules/FilterMultiselect'\\\\nimport { action } from '@storybook/addon-actions'\\\\nimport { boolean, text } from '@storybook/addon-knobs'\\\\nimport { DateRangePicker } from '../../molecules/DatePicker'\\\\nimport { tDateRangeChildren } from '../../molecules/DatePicker/interfaces'\\\\nimport TextInput from '../../molecules/TextInput'\\\\nimport Position from '../../molecules/Position'\\\\n\\\\nexport default {\\\\n  title: `${path}/FilterDrawer`,\\\\n  component: FilterDrawer\\\\n}\\\\n\\\\nconst options: IFilterMultiselectOption[] = [\\\\n  { id: '1', label: 'Powai', value: 'powai' },\\\\n  { id: '2', label: 'Andheri', value: 'andheri' },\\\\n  { id: '3', label: 'Bhandup', value: 'bhandup' }\\\\n]\\\\n\\\\nconst getFormattedDate = (date: Date) => {\\\\n  const todayTime = date\\\\n  const month = todayTime.getMonth() + 1\\\\n  const day = todayTime.getDate()\\\\n  const year = todayTime.getFullYear()\\\\n  const hours = todayTime.getHours()\\\\n  const minutes = todayTime.getMinutes()\\\\n  return month + '/' + day + '/' + year + ' ' + hours + ':' + minutes\\\\n}\\\\n\\\\nexport const withBasic = () => {\\\\n  const [isFilterOpen, setFilterOpen] = React.useState<boolean>(true)\\\\n\\\\n  // state that manages DatePickers value\\\\n\\\\n  return (\\\\n    <ThemeWrapper>\\\\n      <IconButton\\\\n        iconVariant='icomoon-funel'\\\\n        onClick={() => setFilterOpen((f) => !f)}\\\\n      >\\\\n        Filter\\\\n      </IconButton>\\\\n\\\\n      <FilterDrawer isOpen={isFilterOpen}>\\\\n        <Box display='flex' flexDirection='column' fullWidth fullHeight>\\\\n          <ModalHeader\\\\n            headerTitle='Analytics Filter'\\\\n            handleClose={() => setFilterOpen(false)}\\\\n            width='100%'\\\\n          />\\\\n\\\\n          {/* element that holds DateRangePickers value */}\\\\n          <Position type='relative'>\\\\n            <DateRangePicker\\\\n              onFromChange={action('From Clicked')}\\\\n              onToChange={action('To Clicked')}\\\\n              onApply={action('Apply Clicked')}\\\\n              onCancel={action('Cancel Clicked')}\\\\n              label={text('Label', 'Date Range')}\\\\n              variant='daterange'\\\\n              timeFormat={24}\\\\n              showTime={boolean('Show time', true)}\\\\n              startDate={new Date()}\\\\n              fromDateFormatter={getFormattedDate}\\\\n              toDateFormatter={getFormattedDate}\\\\n              style={{\\\\n                background: '#ccc',\\\\n                right: '0px',\\\\n                position: 'fixed'\\\\n              }}\\\\n            >\\\\n              {({ value, open, setOpen }: tDateRangeChildren) => (\\\\n                <Box fullWidth>\\\\n                  <TextInput\\\\n                    id='someId'\\\\n                    name={name}\\\\n                    className='someClassname'\\\\n                    label='Holidays'\\\\n                    variant='basic'\\\\n                    labelColor='text.inputLabel.default'\\\\n                    placeholder='Please Click Here'\\\\n                    fullWidth\\\\n                    value={value?.toString()}\\\\n                    onChange={action('On change clicked')}\\\\n                    onClick={() => setOpen(!open)}\\\\n                  />\\\\n                </Box>\\\\n              )}\\\\n            </DateRangePicker>\\\\n          </Position>\\\\n\\\\n          <Box\\\\n            flexGrow={1}\\\\n            style={{ overflow: 'auto' }}\\\\n            p='15px'\\\\n            fullWidth\\\\n            mt='50px'\\\\n          >\\\\n            <FilterMultiselect\\\\n              id='branch'\\\\n              label='Hub'\\\\n              options={options}\\\\n              onSelectionChange={action('On Change')}\\\\n            />\\\\n          </Box>\\\\n          <Box\\\\n            display='flex'\\\\n            justifyContent='flex-end'\\\\n            p='15px'\\\\n            horizontalSpacing='10px'\\\\n            fullWidth\\\\n          >\\\\n            <IconButton iconVariant='icomoon-tick-circled' primary>\\\\n              Apply\\\\n            </IconButton>\\\\n            <IconButton iconVariant='icomoon-back'>Reset</IconButton>\\\\n          </Box>\\\\n        </Box>\\\\n      </FilterDrawer>\\\\n    </ThemeWrapper>\\\\n  )\\\\n}\\\\n\\\";\\n// @ts-ignore\\nvar __ADDS_MAP__ = {};\\n// @ts-ignore\\nvar __MAIN_FILE_LOCATION__ = \\\"/FilterDrawer.stories.tsx\\\";\\n// @ts-ignore\\nvar __MODULE_DEPENDENCIES__ = [];\\n// @ts-ignore\\nvar __LOCAL_DEPENDENCIES__ = {};\\n// @ts-ignore\\nvar __IDS_TO_FRAMEWORKS__ = {};\\n        \\nimport React from 'react'\\nimport FilterDrawer from '.'\\nimport { path } from '..'\\nimport ThemeWrapper from '../../../utilities/components/ThemeWrapper'\\n\\nimport ModalHeader from '../../molecules/ModalHeader'\\nimport Box from '../Box'\\nimport IconButton from '../IconButton'\\nimport { IFilterMultiselectOption } from '../../molecules/FilterMultiselect/interfaces'\\nimport FilterMultiselect from '../../molecules/FilterMultiselect'\\nimport { action } from '@storybook/addon-actions'\\nimport { boolean, text } from '@storybook/addon-knobs'\\nimport { DateRangePicker } from '../../molecules/DatePicker'\\nimport { tDateRangeChildren } from '../../molecules/DatePicker/interfaces'\\nimport TextInput from '../../molecules/TextInput'\\nimport Position from '../../molecules/Position'\\n\\nexport default {parameters: {\\\"storySource\\\":{\\\"source\\\":\\\"import React from 'react'\\\\nimport FilterDrawer from '.'\\\\nimport { path } from '..'\\\\nimport ThemeWrapper from '../../../utilities/components/ThemeWrapper'\\\\n\\\\nimport ModalHeader from '../../molecules/ModalHeader'\\\\nimport Box from '../Box'\\\\nimport IconButton from '../IconButton'\\\\nimport { IFilterMultiselectOption } from '../../molecules/FilterMultiselect/interfaces'\\\\nimport FilterMultiselect from '../../molecules/FilterMultiselect'\\\\nimport { action } from '@storybook/addon-actions'\\\\nimport { boolean, text } from '@storybook/addon-knobs'\\\\nimport { DateRangePicker } from '../../molecules/DatePicker'\\\\nimport { tDateRangeChildren } from '../../molecules/DatePicker/interfaces'\\\\nimport TextInput from '../../molecules/TextInput'\\\\nimport Position from '../../molecules/Position'\\\\n\\\\nexport default {\\\\n  title: `${path}/FilterDrawer`,\\\\n  component: FilterDrawer\\\\n}\\\\n\\\\nconst options: IFilterMultiselectOption[] = [\\\\n  { id: '1', label: 'Powai', value: 'powai' },\\\\n  { id: '2', label: 'Andheri', value: 'andheri' },\\\\n  { id: '3', label: 'Bhandup', value: 'bhandup' }\\\\n]\\\\n\\\\nconst getFormattedDate = (date: Date) => {\\\\n  const todayTime = date\\\\n  const month = todayTime.getMonth() + 1\\\\n  const day = todayTime.getDate()\\\\n  const year = todayTime.getFullYear()\\\\n  const hours = todayTime.getHours()\\\\n  const minutes = todayTime.getMinutes()\\\\n  return month + '/' + day + '/' + year + ' ' + hours + ':' + minutes\\\\n}\\\\n\\\\nexport const withBasic = () => {\\\\n  const [isFilterOpen, setFilterOpen] = React.useState<boolean>(true)\\\\n\\\\n  // state that manages DatePickers value\\\\n\\\\n  return (\\\\n    <ThemeWrapper>\\\\n      <IconButton\\\\n        iconVariant='icomoon-funel'\\\\n        onClick={() => setFilterOpen((f) => !f)}\\\\n      >\\\\n        Filter\\\\n      </IconButton>\\\\n\\\\n      <FilterDrawer isOpen={isFilterOpen}>\\\\n        <Box display='flex' flexDirection='column' fullWidth fullHeight>\\\\n          <ModalHeader\\\\n            headerTitle='Analytics Filter'\\\\n            handleClose={() => setFilterOpen(false)}\\\\n            width='100%'\\\\n          />\\\\n\\\\n          {/* element that holds DateRangePickers value */}\\\\n          <Position type='relative'>\\\\n            <DateRangePicker\\\\n              onFromChange={action('From Clicked')}\\\\n              onToChange={action('To Clicked')}\\\\n              onApply={action('Apply Clicked')}\\\\n              onCancel={action('Cancel Clicked')}\\\\n              label={text('Label', 'Date Range')}\\\\n              variant='daterange'\\\\n              timeFormat={24}\\\\n              showTime={boolean('Show time', true)}\\\\n              startDate={new Date()}\\\\n              fromDateFormatter={getFormattedDate}\\\\n              toDateFormatter={getFormattedDate}\\\\n              style={{\\\\n                background: '#ccc',\\\\n                right: '0px',\\\\n                position: 'fixed'\\\\n              }}\\\\n            >\\\\n              {({ value, open, setOpen }: tDateRangeChildren) => (\\\\n                <Box fullWidth>\\\\n                  <TextInput\\\\n                    id='someId'\\\\n                    name={name}\\\\n                    className='someClassname'\\\\n                    label='Holidays'\\\\n                    variant='basic'\\\\n                    labelColor='text.inputLabel.default'\\\\n                    placeholder='Please Click Here'\\\\n                    fullWidth\\\\n                    value={value?.toString()}\\\\n                    onChange={action('On change clicked')}\\\\n                    onClick={() => setOpen(!open)}\\\\n                  />\\\\n                </Box>\\\\n              )}\\\\n            </DateRangePicker>\\\\n          </Position>\\\\n\\\\n          <Box\\\\n            flexGrow={1}\\\\n            style={{ overflow: 'auto' }}\\\\n            p='15px'\\\\n            fullWidth\\\\n            mt='50px'\\\\n          >\\\\n            <FilterMultiselect\\\\n              id='branch'\\\\n              label='Hub'\\\\n              options={options}\\\\n              onSelectionChange={action('On Change')}\\\\n            />\\\\n          </Box>\\\\n          <Box\\\\n            display='flex'\\\\n            justifyContent='flex-end'\\\\n            p='15px'\\\\n            horizontalSpacing='10px'\\\\n            fullWidth\\\\n          >\\\\n            <IconButton iconVariant='icomoon-tick-circled' primary>\\\\n              Apply\\\\n            </IconButton>\\\\n            <IconButton iconVariant='icomoon-back'>Reset</IconButton>\\\\n          </Box>\\\\n        </Box>\\\\n      </FilterDrawer>\\\\n    </ThemeWrapper>\\\\n  )\\\\n}\\\\n\\\",\\\"locationsMap\\\":{}},},\\n  title: `${path}/FilterDrawer`,\\n  component: FilterDrawer\\n}\\n\\nconst options: IFilterMultiselectOption[] = [\\n  { id: '1', label: 'Powai', value: 'powai' },\\n  { id: '2', label: 'Andheri', value: 'andheri' },\\n  { id: '3', label: 'Bhandup', value: 'bhandup' }\\n]\\n\\nconst getFormattedDate = (date: Date) => {\\n  const todayTime = date\\n  const month = todayTime.getMonth() + 1\\n  const day = todayTime.getDate()\\n  const year = todayTime.getFullYear()\\n  const hours = todayTime.getHours()\\n  const minutes = todayTime.getMinutes()\\n  return month + '/' + day + '/' + year + ' ' + hours + ':' + minutes\\n}\\n\\nexport const withBasic = addSourceDecorator(() => {\\n  const [isFilterOpen, setFilterOpen] = React.useState<boolean>(true)\\n\\n  // state that manages DatePickers value\\n\\n  return (\\n    <ThemeWrapper>\\n      <IconButton\\n        iconVariant='icomoon-funel'\\n        onClick={() => setFilterOpen((f) => !f)}\\n      >\\n        Filter\\n      </IconButton>\\n\\n      <FilterDrawer isOpen={isFilterOpen}>\\n        <Box display='flex' flexDirection='column' fullWidth fullHeight>\\n          <ModalHeader\\n            headerTitle='Analytics Filter'\\n            handleClose={() => setFilterOpen(false)}\\n            width='100%'\\n          />\\n\\n          {/* element that holds DateRangePickers value */}\\n          <Position type='relative'>\\n            <DateRangePicker\\n              onFromChange={action('From Clicked')}\\n              onToChange={action('To Clicked')}\\n              onApply={action('Apply Clicked')}\\n              onCancel={action('Cancel Clicked')}\\n              label={text('Label', 'Date Range')}\\n              variant='daterange'\\n              timeFormat={24}\\n              showTime={boolean('Show time', true)}\\n              startDate={new Date()}\\n              fromDateFormatter={getFormattedDate}\\n              toDateFormatter={getFormattedDate}\\n              style={{\\n                background: '#ccc',\\n                right: '0px',\\n                position: 'fixed'\\n              }}\\n            >\\n              {({ value, open, setOpen }: tDateRangeChildren) => (\\n                <Box fullWidth>\\n                  <TextInput\\n                    id='someId'\\n                    name={name}\\n                    className='someClassname'\\n                    label='Holidays'\\n                    variant='basic'\\n                    labelColor='text.inputLabel.default'\\n                    placeholder='Please Click Here'\\n                    fullWidth\\n                    value={value?.toString()}\\n                    onChange={action('On change clicked')}\\n                    onClick={() => setOpen(!open)}\\n                  />\\n                </Box>\\n              )}\\n            </DateRangePicker>\\n          </Position>\\n\\n          <Box\\n            flexGrow={1}\\n            style={{ overflow: 'auto' }}\\n            p='15px'\\n            fullWidth\\n            mt='50px'\\n          >\\n            <FilterMultiselect\\n              id='branch'\\n              label='Hub'\\n              options={options}\\n              onSelectionChange={action('On Change')}\\n            />\\n          </Box>\\n          <Box\\n            display='flex'\\n            justifyContent='flex-end'\\n            p='15px'\\n            horizontalSpacing='10px'\\n            fullWidth\\n          >\\n            <IconButton iconVariant='icomoon-tick-circled' primary>\\n              Apply\\n            </IconButton>\\n            <IconButton iconVariant='icomoon-back'>Reset</IconButton>\\n          </Box>\\n        </Box>\\n      </FilterDrawer>\\n    </ThemeWrapper>\\n  )\\n}, {__STORY__, __ADDS_MAP__,__MAIN_FILE_LOCATION__,__MODULE_DEPENDENCIES__,__LOCAL_DEPENDENCIES__,__SOURCE_PREFIX__,__IDS_TO_FRAMEWORKS__});\";\n// @ts-ignore\nvar __ADDS_MAP__ = {};\n// @ts-ignore\nvar __MAIN_FILE_LOCATION__ = \"/FilterDrawer.stories.tsx\";\n// @ts-ignore\nvar __MODULE_DEPENDENCIES__ = [];\n// @ts-ignore\nvar __LOCAL_DEPENDENCIES__ = {};\n// @ts-ignore\nvar __IDS_TO_FRAMEWORKS__ = {};\n        \n\n/* eslint-disable */\n// @ts-nocheck\n// @ts-ignore\nvar withSourceLoader = require('@storybook/source-loader/preview').withSource;\n// @ts-ignore\nvar addSourceDecorator = require(\"@storybook/source-loader/preview\").addSource;\n// @ts-ignore\nvar __SOURCE_PREFIX__ = \"/Users/farhanansari/Code/ui-library/src/components/atoms/FilterDrawer\";\n// @ts-ignore\nvar __STORY__ = \"import React from 'react'\\nimport FilterDrawer from '.'\\nimport { path } from '..'\\nimport ThemeWrapper from '../../../utilities/components/ThemeWrapper'\\n\\nimport ModalHeader from '../../molecules/ModalHeader'\\nimport Box from '../Box'\\nimport IconButton from '../IconButton'\\nimport { IFilterMultiselectOption } from '../../molecules/FilterMultiselect/interfaces'\\nimport FilterMultiselect from '../../molecules/FilterMultiselect'\\nimport { action } from '@storybook/addon-actions'\\nimport { boolean, text } from '@storybook/addon-knobs'\\nimport { DateRangePicker } from '../../molecules/DatePicker'\\nimport { tDateRangeChildren } from '../../molecules/DatePicker/interfaces'\\nimport TextInput from '../../molecules/TextInput'\\nimport Position from '../../molecules/Position'\\n\\nexport default {\\n  title: `${path}/FilterDrawer`,\\n  component: FilterDrawer\\n}\\n\\nconst options: IFilterMultiselectOption[] = [\\n  { id: '1', label: 'Powai', value: 'powai' },\\n  { id: '2', label: 'Andheri', value: 'andheri' },\\n  { id: '3', label: 'Bhandup', value: 'bhandup' }\\n]\\n\\nconst getFormattedDate = (date: Date) => {\\n  const todayTime = date\\n  const month = todayTime.getMonth() + 1\\n  const day = todayTime.getDate()\\n  const year = todayTime.getFullYear()\\n  const hours = todayTime.getHours()\\n  const minutes = todayTime.getMinutes()\\n  return month + '/' + day + '/' + year + ' ' + hours + ':' + minutes\\n}\\n\\nexport const withBasic = () => {\\n  const [isFilterOpen, setFilterOpen] = React.useState<boolean>(true)\\n\\n  // state that manages DatePickers value\\n\\n  return (\\n    <ThemeWrapper>\\n      <IconButton\\n        iconVariant='icomoon-funel'\\n        onClick={() => setFilterOpen((f) => !f)}\\n      >\\n        Filter\\n      </IconButton>\\n\\n      <FilterDrawer isOpen={isFilterOpen}>\\n        <Box display='flex' flexDirection='column' fullWidth fullHeight>\\n          <ModalHeader\\n            headerTitle='Analytics Filter'\\n            handleClose={() => setFilterOpen(false)}\\n            width='100%'\\n          />\\n\\n          {/* element that holds DateRangePickers value */}\\n          <Position type='relative'>\\n            <DateRangePicker\\n              onFromChange={action('From Clicked')}\\n              onToChange={action('To Clicked')}\\n              onApply={action('Apply Clicked')}\\n              onCancel={action('Cancel Clicked')}\\n              label={text('Label', 'Date Range')}\\n              variant='daterange'\\n              timeFormat={24}\\n              showTime={boolean('Show time', true)}\\n              startDate={new Date()}\\n              fromDateFormatter={getFormattedDate}\\n              toDateFormatter={getFormattedDate}\\n              style={{\\n                background: '#ccc',\\n                right: '0px',\\n                position: 'fixed'\\n              }}\\n            >\\n              {({ value, open, setOpen }: tDateRangeChildren) => (\\n                <Box fullWidth>\\n                  <TextInput\\n                    id='someId'\\n                    name={name}\\n                    className='someClassname'\\n                    label='Holidays'\\n                    variant='basic'\\n                    labelColor='text.inputLabel.default'\\n                    placeholder='Please Click Here'\\n                    fullWidth\\n                    value={value?.toString()}\\n                    onChange={action('On change clicked')}\\n                    onClick={() => setOpen(!open)}\\n                  />\\n                </Box>\\n              )}\\n            </DateRangePicker>\\n          </Position>\\n\\n          <Box\\n            flexGrow={1}\\n            style={{ overflow: 'auto' }}\\n            p='15px'\\n            fullWidth\\n            mt='50px'\\n          >\\n            <FilterMultiselect\\n              id='branch'\\n              label='Hub'\\n              options={options}\\n              onSelectionChange={action('On Change')}\\n            />\\n          </Box>\\n          <Box\\n            display='flex'\\n            justifyContent='flex-end'\\n            p='15px'\\n            horizontalSpacing='10px'\\n            fullWidth\\n          >\\n            <IconButton iconVariant='icomoon-tick-circled' primary>\\n              Apply\\n            </IconButton>\\n            <IconButton iconVariant='icomoon-back'>Reset</IconButton>\\n          </Box>\\n        </Box>\\n      </FilterDrawer>\\n    </ThemeWrapper>\\n  )\\n}\\n\";\n// @ts-ignore\nvar __ADDS_MAP__ = {};\n// @ts-ignore\nvar __MAIN_FILE_LOCATION__ = \"/FilterDrawer.stories.tsx\";\n// @ts-ignore\nvar __MODULE_DEPENDENCIES__ = [];\n// @ts-ignore\nvar __LOCAL_DEPENDENCIES__ = {};\n// @ts-ignore\nvar __IDS_TO_FRAMEWORKS__ = {};\n        \nimport React from 'react'\nimport FilterDrawer from '.'\nimport { path } from '..'\nimport ThemeWrapper from '../../../utilities/components/ThemeWrapper'\n\nimport ModalHeader from '../../molecules/ModalHeader'\nimport Box from '../Box'\nimport IconButton from '../IconButton'\nimport { IFilterMultiselectOption } from '../../molecules/FilterMultiselect/interfaces'\nimport FilterMultiselect from '../../molecules/FilterMultiselect'\nimport { action } from '@storybook/addon-actions'\nimport { boolean, text } from '@storybook/addon-knobs'\nimport { DateRangePicker } from '../../molecules/DatePicker'\nimport { tDateRangeChildren } from '../../molecules/DatePicker/interfaces'\nimport TextInput from '../../molecules/TextInput'\nimport Position from '../../molecules/Position'\n\nexport default {parameters: {\"storySource\":{\"source\":\"\\n\\n// @ts-nocheck\\n// @ts-ignore\\nvar withSourceLoader = require('@storybook/source-loader/preview').withSource;\\n// @ts-ignore\\nvar addSourceDecorator = require(\\\"@storybook/source-loader/preview\\\").addSource;\\n// @ts-ignore\\nvar __SOURCE_PREFIX__ = \\\"/Users/farhanansari/Code/ui-library/src/components/atoms/FilterDrawer\\\";\\n// @ts-ignore\\nvar __STORY__ = \\\"\\\\n\\\\n// @ts-nocheck\\\\n// @ts-ignore\\\\nvar withSourceLoader = require('@storybook/source-loader/preview').withSource;\\\\n// @ts-ignore\\\\nvar addSourceDecorator = require(\\\\\\\"@storybook/source-loader/preview\\\\\\\").addSource;\\\\n// @ts-ignore\\\\nvar __SOURCE_PREFIX__ = \\\\\\\"/Users/farhanansari/Code/ui-library/src/components/atoms/FilterDrawer\\\\\\\";\\\\n// @ts-ignore\\\\nvar __STORY__ = \\\\\\\"import React from 'react'\\\\\\\\nimport FilterDrawer from '.'\\\\\\\\nimport { path } from '..'\\\\\\\\nimport ThemeWrapper from '../../../utilities/components/ThemeWrapper'\\\\\\\\n\\\\\\\\nimport ModalHeader from '../../molecules/ModalHeader'\\\\\\\\nimport Box from '../Box'\\\\\\\\nimport IconButton from '../IconButton'\\\\\\\\nimport { IFilterMultiselectOption } from '../../molecules/FilterMultiselect/interfaces'\\\\\\\\nimport FilterMultiselect from '../../molecules/FilterMultiselect'\\\\\\\\nimport { action } from '@storybook/addon-actions'\\\\\\\\nimport { boolean, text } from '@storybook/addon-knobs'\\\\\\\\nimport { DateRangePicker } from '../../molecules/DatePicker'\\\\\\\\nimport { tDateRangeChildren } from '../../molecules/DatePicker/interfaces'\\\\\\\\nimport TextInput from '../../molecules/TextInput'\\\\\\\\nimport Position from '../../molecules/Position'\\\\\\\\n\\\\\\\\nexport default {\\\\\\\\n  title: `${path}/FilterDrawer`,\\\\\\\\n  component: FilterDrawer\\\\\\\\n}\\\\\\\\n\\\\\\\\nconst options: IFilterMultiselectOption[] = [\\\\\\\\n  { id: '1', label: 'Powai', value: 'powai' },\\\\\\\\n  { id: '2', label: 'Andheri', value: 'andheri' },\\\\\\\\n  { id: '3', label: 'Bhandup', value: 'bhandup' }\\\\\\\\n]\\\\\\\\n\\\\\\\\nconst getFormattedDate = (date: Date) => {\\\\\\\\n  const todayTime = date\\\\\\\\n  const month = todayTime.getMonth() + 1\\\\\\\\n  const day = todayTime.getDate()\\\\\\\\n  const year = todayTime.getFullYear()\\\\\\\\n  const hours = todayTime.getHours()\\\\\\\\n  const minutes = todayTime.getMinutes()\\\\\\\\n  return month + '/' + day + '/' + year + ' ' + hours + ':' + minutes\\\\\\\\n}\\\\\\\\n\\\\\\\\nexport const withBasic = () => {\\\\\\\\n  const [isFilterOpen, setFilterOpen] = React.useState<boolean>(true)\\\\\\\\n\\\\\\\\n  // state that manages DatePickers value\\\\\\\\n\\\\\\\\n  return (\\\\\\\\n    <ThemeWrapper>\\\\\\\\n      <IconButton\\\\\\\\n        iconVariant='icomoon-funel'\\\\\\\\n        onClick={() => setFilterOpen((f) => !f)}\\\\\\\\n      >\\\\\\\\n        Filter\\\\\\\\n      </IconButton>\\\\\\\\n\\\\\\\\n      <FilterDrawer isOpen={isFilterOpen}>\\\\\\\\n        <Box display='flex' flexDirection='column' fullWidth fullHeight>\\\\\\\\n          <ModalHeader\\\\\\\\n            headerTitle='Analytics Filter'\\\\\\\\n            handleClose={() => setFilterOpen(false)}\\\\\\\\n            width='100%'\\\\\\\\n          />\\\\\\\\n\\\\\\\\n          {/* element that holds DateRangePickers value */}\\\\\\\\n          <Position type='relative'>\\\\\\\\n            <DateRangePicker\\\\\\\\n              onFromChange={action('From Clicked')}\\\\\\\\n              onToChange={action('To Clicked')}\\\\\\\\n              onApply={action('Apply Clicked')}\\\\\\\\n              onCancel={action('Cancel Clicked')}\\\\\\\\n              label={text('Label', 'Date Range')}\\\\\\\\n              variant='daterange'\\\\\\\\n              timeFormat={24}\\\\\\\\n              showTime={boolean('Show time', true)}\\\\\\\\n              startDate={new Date()}\\\\\\\\n              fromDateFormatter={getFormattedDate}\\\\\\\\n              toDateFormatter={getFormattedDate}\\\\\\\\n              style={{\\\\\\\\n                background: '#ccc',\\\\\\\\n                right: '0px',\\\\\\\\n                position: 'fixed'\\\\\\\\n              }}\\\\\\\\n            >\\\\\\\\n              {({ value, open, setOpen }: tDateRangeChildren) => (\\\\\\\\n                <Box fullWidth>\\\\\\\\n                  <TextInput\\\\\\\\n                    id='someId'\\\\\\\\n                    name={name}\\\\\\\\n                    className='someClassname'\\\\\\\\n                    label='Holidays'\\\\\\\\n                    variant='basic'\\\\\\\\n                    labelColor='text.inputLabel.default'\\\\\\\\n                    placeholder='Please Click Here'\\\\\\\\n                    fullWidth\\\\\\\\n                    value={value?.toString()}\\\\\\\\n                    onChange={action('On change clicked')}\\\\\\\\n                    onClick={() => setOpen(!open)}\\\\\\\\n                  />\\\\\\\\n                </Box>\\\\\\\\n              )}\\\\\\\\n            </DateRangePicker>\\\\\\\\n          </Position>\\\\\\\\n\\\\\\\\n          <Box\\\\\\\\n            flexGrow={1}\\\\\\\\n            style={{ overflow: 'auto' }}\\\\\\\\n            p='15px'\\\\\\\\n            fullWidth\\\\\\\\n            mt='50px'\\\\\\\\n          >\\\\\\\\n            <FilterMultiselect\\\\\\\\n              id='branch'\\\\\\\\n              label='Hub'\\\\\\\\n              options={options}\\\\\\\\n              onSelectionChange={action('On Change')}\\\\\\\\n            />\\\\\\\\n          </Box>\\\\\\\\n          <Box\\\\\\\\n            display='flex'\\\\\\\\n            justifyContent='flex-end'\\\\\\\\n            p='15px'\\\\\\\\n            horizontalSpacing='10px'\\\\\\\\n            fullWidth\\\\\\\\n          >\\\\\\\\n            <IconButton iconVariant='icomoon-tick-circled' primary>\\\\\\\\n              Apply\\\\\\\\n            </IconButton>\\\\\\\\n            <IconButton iconVariant='icomoon-back'>Reset</IconButton>\\\\\\\\n          </Box>\\\\\\\\n        </Box>\\\\\\\\n      </FilterDrawer>\\\\\\\\n    </ThemeWrapper>\\\\\\\\n  )\\\\\\\\n}\\\\\\\\n\\\\\\\";\\\\n// @ts-ignore\\\\nvar __ADDS_MAP__ = {};\\\\n// @ts-ignore\\\\nvar __MAIN_FILE_LOCATION__ = \\\\\\\"/FilterDrawer.stories.tsx\\\\\\\";\\\\n// @ts-ignore\\\\nvar __MODULE_DEPENDENCIES__ = [];\\\\n// @ts-ignore\\\\nvar __LOCAL_DEPENDENCIES__ = {};\\\\n// @ts-ignore\\\\nvar __IDS_TO_FRAMEWORKS__ = {};\\\\n        \\\\nimport React from 'react'\\\\nimport FilterDrawer from '.'\\\\nimport { path } from '..'\\\\nimport ThemeWrapper from '../../../utilities/components/ThemeWrapper'\\\\n\\\\nimport ModalHeader from '../../molecules/ModalHeader'\\\\nimport Box from '../Box'\\\\nimport IconButton from '../IconButton'\\\\nimport { IFilterMultiselectOption } from '../../molecules/FilterMultiselect/interfaces'\\\\nimport FilterMultiselect from '../../molecules/FilterMultiselect'\\\\nimport { action } from '@storybook/addon-actions'\\\\nimport { boolean, text } from '@storybook/addon-knobs'\\\\nimport { DateRangePicker } from '../../molecules/DatePicker'\\\\nimport { tDateRangeChildren } from '../../molecules/DatePicker/interfaces'\\\\nimport TextInput from '../../molecules/TextInput'\\\\nimport Position from '../../molecules/Position'\\\\n\\\\nexport default {parameters: {\\\\\\\"storySource\\\\\\\":{\\\\\\\"source\\\\\\\":\\\\\\\"import React from 'react'\\\\\\\\nimport FilterDrawer from '.'\\\\\\\\nimport { path } from '..'\\\\\\\\nimport ThemeWrapper from '../../../utilities/components/ThemeWrapper'\\\\\\\\n\\\\\\\\nimport ModalHeader from '../../molecules/ModalHeader'\\\\\\\\nimport Box from '../Box'\\\\\\\\nimport IconButton from '../IconButton'\\\\\\\\nimport { IFilterMultiselectOption } from '../../molecules/FilterMultiselect/interfaces'\\\\\\\\nimport FilterMultiselect from '../../molecules/FilterMultiselect'\\\\\\\\nimport { action } from '@storybook/addon-actions'\\\\\\\\nimport { boolean, text } from '@storybook/addon-knobs'\\\\\\\\nimport { DateRangePicker } from '../../molecules/DatePicker'\\\\\\\\nimport { tDateRangeChildren } from '../../molecules/DatePicker/interfaces'\\\\\\\\nimport TextInput from '../../molecules/TextInput'\\\\\\\\nimport Position from '../../molecules/Position'\\\\\\\\n\\\\\\\\nexport default {\\\\\\\\n  title: `${path}/FilterDrawer`,\\\\\\\\n  component: FilterDrawer\\\\\\\\n}\\\\\\\\n\\\\\\\\nconst options: IFilterMultiselectOption[] = [\\\\\\\\n  { id: '1', label: 'Powai', value: 'powai' },\\\\\\\\n  { id: '2', label: 'Andheri', value: 'andheri' },\\\\\\\\n  { id: '3', label: 'Bhandup', value: 'bhandup' }\\\\\\\\n]\\\\\\\\n\\\\\\\\nconst getFormattedDate = (date: Date) => {\\\\\\\\n  const todayTime = date\\\\\\\\n  const month = todayTime.getMonth() + 1\\\\\\\\n  const day = todayTime.getDate()\\\\\\\\n  const year = todayTime.getFullYear()\\\\\\\\n  const hours = todayTime.getHours()\\\\\\\\n  const minutes = todayTime.getMinutes()\\\\\\\\n  return month + '/' + day + '/' + year + ' ' + hours + ':' + minutes\\\\\\\\n}\\\\\\\\n\\\\\\\\nexport const withBasic = () => {\\\\\\\\n  const [isFilterOpen, setFilterOpen] = React.useState<boolean>(true)\\\\\\\\n\\\\\\\\n  // state that manages DatePickers value\\\\\\\\n\\\\\\\\n  return (\\\\\\\\n    <ThemeWrapper>\\\\\\\\n      <IconButton\\\\\\\\n        iconVariant='icomoon-funel'\\\\\\\\n        onClick={() => setFilterOpen((f) => !f)}\\\\\\\\n      >\\\\\\\\n        Filter\\\\\\\\n      </IconButton>\\\\\\\\n\\\\\\\\n      <FilterDrawer isOpen={isFilterOpen}>\\\\\\\\n        <Box display='flex' flexDirection='column' fullWidth fullHeight>\\\\\\\\n          <ModalHeader\\\\\\\\n            headerTitle='Analytics Filter'\\\\\\\\n            handleClose={() => setFilterOpen(false)}\\\\\\\\n            width='100%'\\\\\\\\n          />\\\\\\\\n\\\\\\\\n          {/* element that holds DateRangePickers value */}\\\\\\\\n          <Position type='relative'>\\\\\\\\n            <DateRangePicker\\\\\\\\n              onFromChange={action('From Clicked')}\\\\\\\\n              onToChange={action('To Clicked')}\\\\\\\\n              onApply={action('Apply Clicked')}\\\\\\\\n              onCancel={action('Cancel Clicked')}\\\\\\\\n              label={text('Label', 'Date Range')}\\\\\\\\n              variant='daterange'\\\\\\\\n              timeFormat={24}\\\\\\\\n              showTime={boolean('Show time', true)}\\\\\\\\n              startDate={new Date()}\\\\\\\\n              fromDateFormatter={getFormattedDate}\\\\\\\\n              toDateFormatter={getFormattedDate}\\\\\\\\n              style={{\\\\\\\\n                background: '#ccc',\\\\\\\\n                right: '0px',\\\\\\\\n                position: 'fixed'\\\\\\\\n              }}\\\\\\\\n            >\\\\\\\\n              {({ value, open, setOpen }: tDateRangeChildren) => (\\\\\\\\n                <Box fullWidth>\\\\\\\\n                  <TextInput\\\\\\\\n                    id='someId'\\\\\\\\n                    name={name}\\\\\\\\n                    className='someClassname'\\\\\\\\n                    label='Holidays'\\\\\\\\n                    variant='basic'\\\\\\\\n                    labelColor='text.inputLabel.default'\\\\\\\\n                    placeholder='Please Click Here'\\\\\\\\n                    fullWidth\\\\\\\\n                    value={value?.toString()}\\\\\\\\n                    onChange={action('On change clicked')}\\\\\\\\n                    onClick={() => setOpen(!open)}\\\\\\\\n                  />\\\\\\\\n                </Box>\\\\\\\\n              )}\\\\\\\\n            </DateRangePicker>\\\\\\\\n          </Position>\\\\\\\\n\\\\\\\\n          <Box\\\\\\\\n            flexGrow={1}\\\\\\\\n            style={{ overflow: 'auto' }}\\\\\\\\n            p='15px'\\\\\\\\n            fullWidth\\\\\\\\n            mt='50px'\\\\\\\\n          >\\\\\\\\n            <FilterMultiselect\\\\\\\\n              id='branch'\\\\\\\\n              label='Hub'\\\\\\\\n              options={options}\\\\\\\\n              onSelectionChange={action('On Change')}\\\\\\\\n            />\\\\\\\\n          </Box>\\\\\\\\n          <Box\\\\\\\\n            display='flex'\\\\\\\\n            justifyContent='flex-end'\\\\\\\\n            p='15px'\\\\\\\\n            horizontalSpacing='10px'\\\\\\\\n            fullWidth\\\\\\\\n          >\\\\\\\\n            <IconButton iconVariant='icomoon-tick-circled' primary>\\\\\\\\n              Apply\\\\\\\\n            </IconButton>\\\\\\\\n            <IconButton iconVariant='icomoon-back'>Reset</IconButton>\\\\\\\\n          </Box>\\\\\\\\n        </Box>\\\\\\\\n      </FilterDrawer>\\\\\\\\n    </ThemeWrapper>\\\\\\\\n  )\\\\\\\\n}\\\\\\\\n\\\\\\\",\\\\\\\"locationsMap\\\\\\\":{}},},\\\\n  title: `${path}/FilterDrawer`,\\\\n  component: FilterDrawer\\\\n}\\\\n\\\\nconst options: IFilterMultiselectOption[] = [\\\\n  { id: '1', label: 'Powai', value: 'powai' },\\\\n  { id: '2', label: 'Andheri', value: 'andheri' },\\\\n  { id: '3', label: 'Bhandup', value: 'bhandup' }\\\\n]\\\\n\\\\nconst getFormattedDate = (date: Date) => {\\\\n  const todayTime = date\\\\n  const month = todayTime.getMonth() + 1\\\\n  const day = todayTime.getDate()\\\\n  const year = todayTime.getFullYear()\\\\n  const hours = todayTime.getHours()\\\\n  const minutes = todayTime.getMinutes()\\\\n  return month + '/' + day + '/' + year + ' ' + hours + ':' + minutes\\\\n}\\\\n\\\\nexport const withBasic = addSourceDecorator(() => {\\\\n  const [isFilterOpen, setFilterOpen] = React.useState<boolean>(true)\\\\n\\\\n  // state that manages DatePickers value\\\\n\\\\n  return (\\\\n    <ThemeWrapper>\\\\n      <IconButton\\\\n        iconVariant='icomoon-funel'\\\\n        onClick={() => setFilterOpen((f) => !f)}\\\\n      >\\\\n        Filter\\\\n      </IconButton>\\\\n\\\\n      <FilterDrawer isOpen={isFilterOpen}>\\\\n        <Box display='flex' flexDirection='column' fullWidth fullHeight>\\\\n          <ModalHeader\\\\n            headerTitle='Analytics Filter'\\\\n            handleClose={() => setFilterOpen(false)}\\\\n            width='100%'\\\\n          />\\\\n\\\\n          {/* element that holds DateRangePickers value */}\\\\n          <Position type='relative'>\\\\n            <DateRangePicker\\\\n              onFromChange={action('From Clicked')}\\\\n              onToChange={action('To Clicked')}\\\\n              onApply={action('Apply Clicked')}\\\\n              onCancel={action('Cancel Clicked')}\\\\n              label={text('Label', 'Date Range')}\\\\n              variant='daterange'\\\\n              timeFormat={24}\\\\n              showTime={boolean('Show time', true)}\\\\n              startDate={new Date()}\\\\n              fromDateFormatter={getFormattedDate}\\\\n              toDateFormatter={getFormattedDate}\\\\n              style={{\\\\n                background: '#ccc',\\\\n                right: '0px',\\\\n                position: 'fixed'\\\\n              }}\\\\n            >\\\\n              {({ value, open, setOpen }: tDateRangeChildren) => (\\\\n                <Box fullWidth>\\\\n                  <TextInput\\\\n                    id='someId'\\\\n                    name={name}\\\\n                    className='someClassname'\\\\n                    label='Holidays'\\\\n                    variant='basic'\\\\n                    labelColor='text.inputLabel.default'\\\\n                    placeholder='Please Click Here'\\\\n                    fullWidth\\\\n                    value={value?.toString()}\\\\n                    onChange={action('On change clicked')}\\\\n                    onClick={() => setOpen(!open)}\\\\n                  />\\\\n                </Box>\\\\n              )}\\\\n            </DateRangePicker>\\\\n          </Position>\\\\n\\\\n          <Box\\\\n            flexGrow={1}\\\\n            style={{ overflow: 'auto' }}\\\\n            p='15px'\\\\n            fullWidth\\\\n            mt='50px'\\\\n          >\\\\n            <FilterMultiselect\\\\n              id='branch'\\\\n              label='Hub'\\\\n              options={options}\\\\n              onSelectionChange={action('On Change')}\\\\n            />\\\\n          </Box>\\\\n          <Box\\\\n            display='flex'\\\\n            justifyContent='flex-end'\\\\n            p='15px'\\\\n            horizontalSpacing='10px'\\\\n            fullWidth\\\\n          >\\\\n            <IconButton iconVariant='icomoon-tick-circled' primary>\\\\n              Apply\\\\n            </IconButton>\\\\n            <IconButton iconVariant='icomoon-back'>Reset</IconButton>\\\\n          </Box>\\\\n        </Box>\\\\n      </FilterDrawer>\\\\n    </ThemeWrapper>\\\\n  )\\\\n}, {__STORY__, __ADDS_MAP__,__MAIN_FILE_LOCATION__,__MODULE_DEPENDENCIES__,__LOCAL_DEPENDENCIES__,__SOURCE_PREFIX__,__IDS_TO_FRAMEWORKS__});\\\";\\n// @ts-ignore\\nvar __ADDS_MAP__ = {};\\n// @ts-ignore\\nvar __MAIN_FILE_LOCATION__ = \\\"/FilterDrawer.stories.tsx\\\";\\n// @ts-ignore\\nvar __MODULE_DEPENDENCIES__ = [];\\n// @ts-ignore\\nvar __LOCAL_DEPENDENCIES__ = {};\\n// @ts-ignore\\nvar __IDS_TO_FRAMEWORKS__ = {};\\n        \\n\\n\\n// @ts-nocheck\\n// @ts-ignore\\nvar withSourceLoader = require('@storybook/source-loader/preview').withSource;\\n// @ts-ignore\\nvar addSourceDecorator = require(\\\"@storybook/source-loader/preview\\\").addSource;\\n// @ts-ignore\\nvar __SOURCE_PREFIX__ = \\\"/Users/farhanansari/Code/ui-library/src/components/atoms/FilterDrawer\\\";\\n// @ts-ignore\\nvar __STORY__ = \\\"import React from 'react'\\\\nimport FilterDrawer from '.'\\\\nimport { path } from '..'\\\\nimport ThemeWrapper from '../../../utilities/components/ThemeWrapper'\\\\n\\\\nimport ModalHeader from '../../molecules/ModalHeader'\\\\nimport Box from '../Box'\\\\nimport IconButton from '../IconButton'\\\\nimport { IFilterMultiselectOption } from '../../molecules/FilterMultiselect/interfaces'\\\\nimport FilterMultiselect from '../../molecules/FilterMultiselect'\\\\nimport { action } from '@storybook/addon-actions'\\\\nimport { boolean, text } from '@storybook/addon-knobs'\\\\nimport { DateRangePicker } from '../../molecules/DatePicker'\\\\nimport { tDateRangeChildren } from '../../molecules/DatePicker/interfaces'\\\\nimport TextInput from '../../molecules/TextInput'\\\\nimport Position from '../../molecules/Position'\\\\n\\\\nexport default {\\\\n  title: `${path}/FilterDrawer`,\\\\n  component: FilterDrawer\\\\n}\\\\n\\\\nconst options: IFilterMultiselectOption[] = [\\\\n  { id: '1', label: 'Powai', value: 'powai' },\\\\n  { id: '2', label: 'Andheri', value: 'andheri' },\\\\n  { id: '3', label: 'Bhandup', value: 'bhandup' }\\\\n]\\\\n\\\\nconst getFormattedDate = (date: Date) => {\\\\n  const todayTime = date\\\\n  const month = todayTime.getMonth() + 1\\\\n  const day = todayTime.getDate()\\\\n  const year = todayTime.getFullYear()\\\\n  const hours = todayTime.getHours()\\\\n  const minutes = todayTime.getMinutes()\\\\n  return month + '/' + day + '/' + year + ' ' + hours + ':' + minutes\\\\n}\\\\n\\\\nexport const withBasic = () => {\\\\n  const [isFilterOpen, setFilterOpen] = React.useState<boolean>(true)\\\\n\\\\n  // state that manages DatePickers value\\\\n\\\\n  return (\\\\n    <ThemeWrapper>\\\\n      <IconButton\\\\n        iconVariant='icomoon-funel'\\\\n        onClick={() => setFilterOpen((f) => !f)}\\\\n      >\\\\n        Filter\\\\n      </IconButton>\\\\n\\\\n      <FilterDrawer isOpen={isFilterOpen}>\\\\n        <Box display='flex' flexDirection='column' fullWidth fullHeight>\\\\n          <ModalHeader\\\\n            headerTitle='Analytics Filter'\\\\n            handleClose={() => setFilterOpen(false)}\\\\n            width='100%'\\\\n          />\\\\n\\\\n          {/* element that holds DateRangePickers value */}\\\\n          <Position type='relative'>\\\\n            <DateRangePicker\\\\n              onFromChange={action('From Clicked')}\\\\n              onToChange={action('To Clicked')}\\\\n              onApply={action('Apply Clicked')}\\\\n              onCancel={action('Cancel Clicked')}\\\\n              label={text('Label', 'Date Range')}\\\\n              variant='daterange'\\\\n              timeFormat={24}\\\\n              showTime={boolean('Show time', true)}\\\\n              startDate={new Date()}\\\\n              fromDateFormatter={getFormattedDate}\\\\n              toDateFormatter={getFormattedDate}\\\\n              style={{\\\\n                background: '#ccc',\\\\n                right: '0px',\\\\n                position: 'fixed'\\\\n              }}\\\\n            >\\\\n              {({ value, open, setOpen }: tDateRangeChildren) => (\\\\n                <Box fullWidth>\\\\n                  <TextInput\\\\n                    id='someId'\\\\n                    name={name}\\\\n                    className='someClassname'\\\\n                    label='Holidays'\\\\n                    variant='basic'\\\\n                    labelColor='text.inputLabel.default'\\\\n                    placeholder='Please Click Here'\\\\n                    fullWidth\\\\n                    value={value?.toString()}\\\\n                    onChange={action('On change clicked')}\\\\n                    onClick={() => setOpen(!open)}\\\\n                  />\\\\n                </Box>\\\\n              )}\\\\n            </DateRangePicker>\\\\n          </Position>\\\\n\\\\n          <Box\\\\n            flexGrow={1}\\\\n            style={{ overflow: 'auto' }}\\\\n            p='15px'\\\\n            fullWidth\\\\n            mt='50px'\\\\n          >\\\\n            <FilterMultiselect\\\\n              id='branch'\\\\n              label='Hub'\\\\n              options={options}\\\\n              onSelectionChange={action('On Change')}\\\\n            />\\\\n          </Box>\\\\n          <Box\\\\n            display='flex'\\\\n            justifyContent='flex-end'\\\\n            p='15px'\\\\n            horizontalSpacing='10px'\\\\n            fullWidth\\\\n          >\\\\n            <IconButton iconVariant='icomoon-tick-circled' primary>\\\\n              Apply\\\\n            </IconButton>\\\\n            <IconButton iconVariant='icomoon-back'>Reset</IconButton>\\\\n          </Box>\\\\n        </Box>\\\\n      </FilterDrawer>\\\\n    </ThemeWrapper>\\\\n  )\\\\n}\\\\n\\\";\\n// @ts-ignore\\nvar __ADDS_MAP__ = {};\\n// @ts-ignore\\nvar __MAIN_FILE_LOCATION__ = \\\"/FilterDrawer.stories.tsx\\\";\\n// @ts-ignore\\nvar __MODULE_DEPENDENCIES__ = [];\\n// @ts-ignore\\nvar __LOCAL_DEPENDENCIES__ = {};\\n// @ts-ignore\\nvar __IDS_TO_FRAMEWORKS__ = {};\\n        \\nimport React from 'react'\\nimport FilterDrawer from '.'\\nimport { path } from '..'\\nimport ThemeWrapper from '../../../utilities/components/ThemeWrapper'\\n\\nimport ModalHeader from '../../molecules/ModalHeader'\\nimport Box from '../Box'\\nimport IconButton from '../IconButton'\\nimport { IFilterMultiselectOption } from '../../molecules/FilterMultiselect/interfaces'\\nimport FilterMultiselect from '../../molecules/FilterMultiselect'\\nimport { action } from '@storybook/addon-actions'\\nimport { boolean, text } from '@storybook/addon-knobs'\\nimport { DateRangePicker } from '../../molecules/DatePicker'\\nimport { tDateRangeChildren } from '../../molecules/DatePicker/interfaces'\\nimport TextInput from '../../molecules/TextInput'\\nimport Position from '../../molecules/Position'\\n\\nexport default {parameters: {\\\"storySource\\\":{\\\"source\\\":\\\"\\\\n\\\\n// @ts-nocheck\\\\n// @ts-ignore\\\\nvar withSourceLoader = require('@storybook/source-loader/preview').withSource;\\\\n// @ts-ignore\\\\nvar addSourceDecorator = require(\\\\\\\"@storybook/source-loader/preview\\\\\\\").addSource;\\\\n// @ts-ignore\\\\nvar __SOURCE_PREFIX__ = \\\\\\\"/Users/farhanansari/Code/ui-library/src/components/atoms/FilterDrawer\\\\\\\";\\\\n// @ts-ignore\\\\nvar __STORY__ = \\\\\\\"import React from 'react'\\\\\\\\nimport FilterDrawer from '.'\\\\\\\\nimport { path } from '..'\\\\\\\\nimport ThemeWrapper from '../../../utilities/components/ThemeWrapper'\\\\\\\\n\\\\\\\\nimport ModalHeader from '../../molecules/ModalHeader'\\\\\\\\nimport Box from '../Box'\\\\\\\\nimport IconButton from '../IconButton'\\\\\\\\nimport { IFilterMultiselectOption } from '../../molecules/FilterMultiselect/interfaces'\\\\\\\\nimport FilterMultiselect from '../../molecules/FilterMultiselect'\\\\\\\\nimport { action } from '@storybook/addon-actions'\\\\\\\\nimport { boolean, text } from '@storybook/addon-knobs'\\\\\\\\nimport { DateRangePicker } from '../../molecules/DatePicker'\\\\\\\\nimport { tDateRangeChildren } from '../../molecules/DatePicker/interfaces'\\\\\\\\nimport TextInput from '../../molecules/TextInput'\\\\\\\\nimport Position from '../../molecules/Position'\\\\\\\\n\\\\\\\\nexport default {\\\\\\\\n  title: `${path}/FilterDrawer`,\\\\\\\\n  component: FilterDrawer\\\\\\\\n}\\\\\\\\n\\\\\\\\nconst options: IFilterMultiselectOption[] = [\\\\\\\\n  { id: '1', label: 'Powai', value: 'powai' },\\\\\\\\n  { id: '2', label: 'Andheri', value: 'andheri' },\\\\\\\\n  { id: '3', label: 'Bhandup', value: 'bhandup' }\\\\\\\\n]\\\\\\\\n\\\\\\\\nconst getFormattedDate = (date: Date) => {\\\\\\\\n  const todayTime = date\\\\\\\\n  const month = todayTime.getMonth() + 1\\\\\\\\n  const day = todayTime.getDate()\\\\\\\\n  const year = todayTime.getFullYear()\\\\\\\\n  const hours = todayTime.getHours()\\\\\\\\n  const minutes = todayTime.getMinutes()\\\\\\\\n  return month + '/' + day + '/' + year + ' ' + hours + ':' + minutes\\\\\\\\n}\\\\\\\\n\\\\\\\\nexport const withBasic = () => {\\\\\\\\n  const [isFilterOpen, setFilterOpen] = React.useState<boolean>(true)\\\\\\\\n\\\\\\\\n  // state that manages DatePickers value\\\\\\\\n\\\\\\\\n  return (\\\\\\\\n    <ThemeWrapper>\\\\\\\\n      <IconButton\\\\\\\\n        iconVariant='icomoon-funel'\\\\\\\\n        onClick={() => setFilterOpen((f) => !f)}\\\\\\\\n      >\\\\\\\\n        Filter\\\\\\\\n      </IconButton>\\\\\\\\n\\\\\\\\n      <FilterDrawer isOpen={isFilterOpen}>\\\\\\\\n        <Box display='flex' flexDirection='column' fullWidth fullHeight>\\\\\\\\n          <ModalHeader\\\\\\\\n            headerTitle='Analytics Filter'\\\\\\\\n            handleClose={() => setFilterOpen(false)}\\\\\\\\n            width='100%'\\\\\\\\n          />\\\\\\\\n\\\\\\\\n          {/* element that holds DateRangePickers value */}\\\\\\\\n          <Position type='relative'>\\\\\\\\n            <DateRangePicker\\\\\\\\n              onFromChange={action('From Clicked')}\\\\\\\\n              onToChange={action('To Clicked')}\\\\\\\\n              onApply={action('Apply Clicked')}\\\\\\\\n              onCancel={action('Cancel Clicked')}\\\\\\\\n              label={text('Label', 'Date Range')}\\\\\\\\n              variant='daterange'\\\\\\\\n              timeFormat={24}\\\\\\\\n              showTime={boolean('Show time', true)}\\\\\\\\n              startDate={new Date()}\\\\\\\\n              fromDateFormatter={getFormattedDate}\\\\\\\\n              toDateFormatter={getFormattedDate}\\\\\\\\n              style={{\\\\\\\\n                background: '#ccc',\\\\\\\\n                right: '0px',\\\\\\\\n                position: 'fixed'\\\\\\\\n              }}\\\\\\\\n            >\\\\\\\\n              {({ value, open, setOpen }: tDateRangeChildren) => (\\\\\\\\n                <Box fullWidth>\\\\\\\\n                  <TextInput\\\\\\\\n                    id='someId'\\\\\\\\n                    name={name}\\\\\\\\n                    className='someClassname'\\\\\\\\n                    label='Holidays'\\\\\\\\n                    variant='basic'\\\\\\\\n                    labelColor='text.inputLabel.default'\\\\\\\\n                    placeholder='Please Click Here'\\\\\\\\n                    fullWidth\\\\\\\\n                    value={value?.toString()}\\\\\\\\n                    onChange={action('On change clicked')}\\\\\\\\n                    onClick={() => setOpen(!open)}\\\\\\\\n                  />\\\\\\\\n                </Box>\\\\\\\\n              )}\\\\\\\\n            </DateRangePicker>\\\\\\\\n          </Position>\\\\\\\\n\\\\\\\\n          <Box\\\\\\\\n            flexGrow={1}\\\\\\\\n            style={{ overflow: 'auto' }}\\\\\\\\n            p='15px'\\\\\\\\n            fullWidth\\\\\\\\n            mt='50px'\\\\\\\\n          >\\\\\\\\n            <FilterMultiselect\\\\\\\\n              id='branch'\\\\\\\\n              label='Hub'\\\\\\\\n              options={options}\\\\\\\\n              onSelectionChange={action('On Change')}\\\\\\\\n            />\\\\\\\\n          </Box>\\\\\\\\n          <Box\\\\\\\\n            display='flex'\\\\\\\\n            justifyContent='flex-end'\\\\\\\\n            p='15px'\\\\\\\\n            horizontalSpacing='10px'\\\\\\\\n            fullWidth\\\\\\\\n          >\\\\\\\\n            <IconButton iconVariant='icomoon-tick-circled' primary>\\\\\\\\n              Apply\\\\\\\\n            </IconButton>\\\\\\\\n            <IconButton iconVariant='icomoon-back'>Reset</IconButton>\\\\\\\\n          </Box>\\\\\\\\n        </Box>\\\\\\\\n      </FilterDrawer>\\\\\\\\n    </ThemeWrapper>\\\\\\\\n  )\\\\\\\\n}\\\\\\\\n\\\\\\\";\\\\n// @ts-ignore\\\\nvar __ADDS_MAP__ = {};\\\\n// @ts-ignore\\\\nvar __MAIN_FILE_LOCATION__ = \\\\\\\"/FilterDrawer.stories.tsx\\\\\\\";\\\\n// @ts-ignore\\\\nvar __MODULE_DEPENDENCIES__ = [];\\\\n// @ts-ignore\\\\nvar __LOCAL_DEPENDENCIES__ = {};\\\\n// @ts-ignore\\\\nvar __IDS_TO_FRAMEWORKS__ = {};\\\\n        \\\\nimport React from 'react'\\\\nimport FilterDrawer from '.'\\\\nimport { path } from '..'\\\\nimport ThemeWrapper from '../../../utilities/components/ThemeWrapper'\\\\n\\\\nimport ModalHeader from '../../molecules/ModalHeader'\\\\nimport Box from '../Box'\\\\nimport IconButton from '../IconButton'\\\\nimport { IFilterMultiselectOption } from '../../molecules/FilterMultiselect/interfaces'\\\\nimport FilterMultiselect from '../../molecules/FilterMultiselect'\\\\nimport { action } from '@storybook/addon-actions'\\\\nimport { boolean, text } from '@storybook/addon-knobs'\\\\nimport { DateRangePicker } from '../../molecules/DatePicker'\\\\nimport { tDateRangeChildren } from '../../molecules/DatePicker/interfaces'\\\\nimport TextInput from '../../molecules/TextInput'\\\\nimport Position from '../../molecules/Position'\\\\n\\\\nexport default {parameters: {\\\\\\\"storySource\\\\\\\":{\\\\\\\"source\\\\\\\":\\\\\\\"import React from 'react'\\\\\\\\nimport FilterDrawer from '.'\\\\\\\\nimport { path } from '..'\\\\\\\\nimport ThemeWrapper from '../../../utilities/components/ThemeWrapper'\\\\\\\\n\\\\\\\\nimport ModalHeader from '../../molecules/ModalHeader'\\\\\\\\nimport Box from '../Box'\\\\\\\\nimport IconButton from '../IconButton'\\\\\\\\nimport { IFilterMultiselectOption } from '../../molecules/FilterMultiselect/interfaces'\\\\\\\\nimport FilterMultiselect from '../../molecules/FilterMultiselect'\\\\\\\\nimport { action } from '@storybook/addon-actions'\\\\\\\\nimport { boolean, text } from '@storybook/addon-knobs'\\\\\\\\nimport { DateRangePicker } from '../../molecules/DatePicker'\\\\\\\\nimport { tDateRangeChildren } from '../../molecules/DatePicker/interfaces'\\\\\\\\nimport TextInput from '../../molecules/TextInput'\\\\\\\\nimport Position from '../../molecules/Position'\\\\\\\\n\\\\\\\\nexport default {\\\\\\\\n  title: `${path}/FilterDrawer`,\\\\\\\\n  component: FilterDrawer\\\\\\\\n}\\\\\\\\n\\\\\\\\nconst options: IFilterMultiselectOption[] = [\\\\\\\\n  { id: '1', label: 'Powai', value: 'powai' },\\\\\\\\n  { id: '2', label: 'Andheri', value: 'andheri' },\\\\\\\\n  { id: '3', label: 'Bhandup', value: 'bhandup' }\\\\\\\\n]\\\\\\\\n\\\\\\\\nconst getFormattedDate = (date: Date) => {\\\\\\\\n  const todayTime = date\\\\\\\\n  const month = todayTime.getMonth() + 1\\\\\\\\n  const day = todayTime.getDate()\\\\\\\\n  const year = todayTime.getFullYear()\\\\\\\\n  const hours = todayTime.getHours()\\\\\\\\n  const minutes = todayTime.getMinutes()\\\\\\\\n  return month + '/' + day + '/' + year + ' ' + hours + ':' + minutes\\\\\\\\n}\\\\\\\\n\\\\\\\\nexport const withBasic = () => {\\\\\\\\n  const [isFilterOpen, setFilterOpen] = React.useState<boolean>(true)\\\\\\\\n\\\\\\\\n  // state that manages DatePickers value\\\\\\\\n\\\\\\\\n  return (\\\\\\\\n    <ThemeWrapper>\\\\\\\\n      <IconButton\\\\\\\\n        iconVariant='icomoon-funel'\\\\\\\\n        onClick={() => setFilterOpen((f) => !f)}\\\\\\\\n      >\\\\\\\\n        Filter\\\\\\\\n      </IconButton>\\\\\\\\n\\\\\\\\n      <FilterDrawer isOpen={isFilterOpen}>\\\\\\\\n        <Box display='flex' flexDirection='column' fullWidth fullHeight>\\\\\\\\n          <ModalHeader\\\\\\\\n            headerTitle='Analytics Filter'\\\\\\\\n            handleClose={() => setFilterOpen(false)}\\\\\\\\n            width='100%'\\\\\\\\n          />\\\\\\\\n\\\\\\\\n          {/* element that holds DateRangePickers value */}\\\\\\\\n          <Position type='relative'>\\\\\\\\n            <DateRangePicker\\\\\\\\n              onFromChange={action('From Clicked')}\\\\\\\\n              onToChange={action('To Clicked')}\\\\\\\\n              onApply={action('Apply Clicked')}\\\\\\\\n              onCancel={action('Cancel Clicked')}\\\\\\\\n              label={text('Label', 'Date Range')}\\\\\\\\n              variant='daterange'\\\\\\\\n              timeFormat={24}\\\\\\\\n              showTime={boolean('Show time', true)}\\\\\\\\n              startDate={new Date()}\\\\\\\\n              fromDateFormatter={getFormattedDate}\\\\\\\\n              toDateFormatter={getFormattedDate}\\\\\\\\n              style={{\\\\\\\\n                background: '#ccc',\\\\\\\\n                right: '0px',\\\\\\\\n                position: 'fixed'\\\\\\\\n              }}\\\\\\\\n            >\\\\\\\\n              {({ value, open, setOpen }: tDateRangeChildren) => (\\\\\\\\n                <Box fullWidth>\\\\\\\\n                  <TextInput\\\\\\\\n                    id='someId'\\\\\\\\n                    name={name}\\\\\\\\n                    className='someClassname'\\\\\\\\n                    label='Holidays'\\\\\\\\n                    variant='basic'\\\\\\\\n                    labelColor='text.inputLabel.default'\\\\\\\\n                    placeholder='Please Click Here'\\\\\\\\n                    fullWidth\\\\\\\\n                    value={value?.toString()}\\\\\\\\n                    onChange={action('On change clicked')}\\\\\\\\n                    onClick={() => setOpen(!open)}\\\\\\\\n                  />\\\\\\\\n                </Box>\\\\\\\\n              )}\\\\\\\\n            </DateRangePicker>\\\\\\\\n          </Position>\\\\\\\\n\\\\\\\\n          <Box\\\\\\\\n            flexGrow={1}\\\\\\\\n            style={{ overflow: 'auto' }}\\\\\\\\n            p='15px'\\\\\\\\n            fullWidth\\\\\\\\n            mt='50px'\\\\\\\\n          >\\\\\\\\n            <FilterMultiselect\\\\\\\\n              id='branch'\\\\\\\\n              label='Hub'\\\\\\\\n              options={options}\\\\\\\\n              onSelectionChange={action('On Change')}\\\\\\\\n            />\\\\\\\\n          </Box>\\\\\\\\n          <Box\\\\\\\\n            display='flex'\\\\\\\\n            justifyContent='flex-end'\\\\\\\\n            p='15px'\\\\\\\\n            horizontalSpacing='10px'\\\\\\\\n            fullWidth\\\\\\\\n          >\\\\\\\\n            <IconButton iconVariant='icomoon-tick-circled' primary>\\\\\\\\n              Apply\\\\\\\\n            </IconButton>\\\\\\\\n            <IconButton iconVariant='icomoon-back'>Reset</IconButton>\\\\\\\\n          </Box>\\\\\\\\n        </Box>\\\\\\\\n      </FilterDrawer>\\\\\\\\n    </ThemeWrapper>\\\\\\\\n  )\\\\\\\\n}\\\\\\\\n\\\\\\\",\\\\\\\"locationsMap\\\\\\\":{}},},\\\\n  title: `${path}/FilterDrawer`,\\\\n  component: FilterDrawer\\\\n}\\\\n\\\\nconst options: IFilterMultiselectOption[] = [\\\\n  { id: '1', label: 'Powai', value: 'powai' },\\\\n  { id: '2', label: 'Andheri', value: 'andheri' },\\\\n  { id: '3', label: 'Bhandup', value: 'bhandup' }\\\\n]\\\\n\\\\nconst getFormattedDate = (date: Date) => {\\\\n  const todayTime = date\\\\n  const month = todayTime.getMonth() + 1\\\\n  const day = todayTime.getDate()\\\\n  const year = todayTime.getFullYear()\\\\n  const hours = todayTime.getHours()\\\\n  const minutes = todayTime.getMinutes()\\\\n  return month + '/' + day + '/' + year + ' ' + hours + ':' + minutes\\\\n}\\\\n\\\\nexport const withBasic = addSourceDecorator(() => {\\\\n  const [isFilterOpen, setFilterOpen] = React.useState<boolean>(true)\\\\n\\\\n  // state that manages DatePickers value\\\\n\\\\n  return (\\\\n    <ThemeWrapper>\\\\n      <IconButton\\\\n        iconVariant='icomoon-funel'\\\\n        onClick={() => setFilterOpen((f) => !f)}\\\\n      >\\\\n        Filter\\\\n      </IconButton>\\\\n\\\\n      <FilterDrawer isOpen={isFilterOpen}>\\\\n        <Box display='flex' flexDirection='column' fullWidth fullHeight>\\\\n          <ModalHeader\\\\n            headerTitle='Analytics Filter'\\\\n            handleClose={() => setFilterOpen(false)}\\\\n            width='100%'\\\\n          />\\\\n\\\\n          {/* element that holds DateRangePickers value */}\\\\n          <Position type='relative'>\\\\n            <DateRangePicker\\\\n              onFromChange={action('From Clicked')}\\\\n              onToChange={action('To Clicked')}\\\\n              onApply={action('Apply Clicked')}\\\\n              onCancel={action('Cancel Clicked')}\\\\n              label={text('Label', 'Date Range')}\\\\n              variant='daterange'\\\\n              timeFormat={24}\\\\n              showTime={boolean('Show time', true)}\\\\n              startDate={new Date()}\\\\n              fromDateFormatter={getFormattedDate}\\\\n              toDateFormatter={getFormattedDate}\\\\n              style={{\\\\n                background: '#ccc',\\\\n                right: '0px',\\\\n                position: 'fixed'\\\\n              }}\\\\n            >\\\\n              {({ value, open, setOpen }: tDateRangeChildren) => (\\\\n                <Box fullWidth>\\\\n                  <TextInput\\\\n                    id='someId'\\\\n                    name={name}\\\\n                    className='someClassname'\\\\n                    label='Holidays'\\\\n                    variant='basic'\\\\n                    labelColor='text.inputLabel.default'\\\\n                    placeholder='Please Click Here'\\\\n                    fullWidth\\\\n                    value={value?.toString()}\\\\n                    onChange={action('On change clicked')}\\\\n                    onClick={() => setOpen(!open)}\\\\n                  />\\\\n                </Box>\\\\n              )}\\\\n            </DateRangePicker>\\\\n          </Position>\\\\n\\\\n          <Box\\\\n            flexGrow={1}\\\\n            style={{ overflow: 'auto' }}\\\\n            p='15px'\\\\n            fullWidth\\\\n            mt='50px'\\\\n          >\\\\n            <FilterMultiselect\\\\n              id='branch'\\\\n              label='Hub'\\\\n              options={options}\\\\n              onSelectionChange={action('On Change')}\\\\n            />\\\\n          </Box>\\\\n          <Box\\\\n            display='flex'\\\\n            justifyContent='flex-end'\\\\n            p='15px'\\\\n            horizontalSpacing='10px'\\\\n            fullWidth\\\\n          >\\\\n            <IconButton iconVariant='icomoon-tick-circled' primary>\\\\n              Apply\\\\n            </IconButton>\\\\n            <IconButton iconVariant='icomoon-back'>Reset</IconButton>\\\\n          </Box>\\\\n        </Box>\\\\n      </FilterDrawer>\\\\n    </ThemeWrapper>\\\\n  )\\\\n}, {__STORY__, __ADDS_MAP__,__MAIN_FILE_LOCATION__,__MODULE_DEPENDENCIES__,__LOCAL_DEPENDENCIES__,__SOURCE_PREFIX__,__IDS_TO_FRAMEWORKS__});\\\",\\\"locationsMap\\\":{}},\\\"storySource\\\":{\\\"source\\\":\\\"import React from 'react'\\\\nimport FilterDrawer from '.'\\\\nimport { path } from '..'\\\\nimport ThemeWrapper from '../../../utilities/components/ThemeWrapper'\\\\n\\\\nimport ModalHeader from '../../molecules/ModalHeader'\\\\nimport Box from '../Box'\\\\nimport IconButton from '../IconButton'\\\\nimport { IFilterMultiselectOption } from '../../molecules/FilterMultiselect/interfaces'\\\\nimport FilterMultiselect from '../../molecules/FilterMultiselect'\\\\nimport { action } from '@storybook/addon-actions'\\\\nimport { boolean, text } from '@storybook/addon-knobs'\\\\nimport { DateRangePicker } from '../../molecules/DatePicker'\\\\nimport { tDateRangeChildren } from '../../molecules/DatePicker/interfaces'\\\\nimport TextInput from '../../molecules/TextInput'\\\\nimport Position from '../../molecules/Position'\\\\n\\\\nexport default {\\\\n  title: `${path}/FilterDrawer`,\\\\n  component: FilterDrawer\\\\n}\\\\n\\\\nconst options: IFilterMultiselectOption[] = [\\\\n  { id: '1', label: 'Powai', value: 'powai' },\\\\n  { id: '2', label: 'Andheri', value: 'andheri' },\\\\n  { id: '3', label: 'Bhandup', value: 'bhandup' }\\\\n]\\\\n\\\\nconst getFormattedDate = (date: Date) => {\\\\n  const todayTime = date\\\\n  const month = todayTime.getMonth() + 1\\\\n  const day = todayTime.getDate()\\\\n  const year = todayTime.getFullYear()\\\\n  const hours = todayTime.getHours()\\\\n  const minutes = todayTime.getMinutes()\\\\n  return month + '/' + day + '/' + year + ' ' + hours + ':' + minutes\\\\n}\\\\n\\\\nexport const withBasic = () => {\\\\n  const [isFilterOpen, setFilterOpen] = React.useState<boolean>(true)\\\\n\\\\n  // state that manages DatePickers value\\\\n\\\\n  return (\\\\n    <ThemeWrapper>\\\\n      <IconButton\\\\n        iconVariant='icomoon-funel'\\\\n        onClick={() => setFilterOpen((f) => !f)}\\\\n      >\\\\n        Filter\\\\n      </IconButton>\\\\n\\\\n      <FilterDrawer isOpen={isFilterOpen}>\\\\n        <Box display='flex' flexDirection='column' fullWidth fullHeight>\\\\n          <ModalHeader\\\\n            headerTitle='Analytics Filter'\\\\n            handleClose={() => setFilterOpen(false)}\\\\n            width='100%'\\\\n          />\\\\n\\\\n          {/* element that holds DateRangePickers value */}\\\\n          <Position type='relative'>\\\\n            <DateRangePicker\\\\n              onFromChange={action('From Clicked')}\\\\n              onToChange={action('To Clicked')}\\\\n              onApply={action('Apply Clicked')}\\\\n              onCancel={action('Cancel Clicked')}\\\\n              label={text('Label', 'Date Range')}\\\\n              variant='daterange'\\\\n              timeFormat={24}\\\\n              showTime={boolean('Show time', true)}\\\\n              startDate={new Date()}\\\\n              fromDateFormatter={getFormattedDate}\\\\n              toDateFormatter={getFormattedDate}\\\\n              style={{\\\\n                background: '#ccc',\\\\n                right: '0px',\\\\n                position: 'fixed'\\\\n              }}\\\\n            >\\\\n              {({ value, open, setOpen }: tDateRangeChildren) => (\\\\n                <Box fullWidth>\\\\n                  <TextInput\\\\n                    id='someId'\\\\n                    name={name}\\\\n                    className='someClassname'\\\\n                    label='Holidays'\\\\n                    variant='basic'\\\\n                    labelColor='text.inputLabel.default'\\\\n                    placeholder='Please Click Here'\\\\n                    fullWidth\\\\n                    value={value?.toString()}\\\\n                    onChange={action('On change clicked')}\\\\n                    onClick={() => setOpen(!open)}\\\\n                  />\\\\n                </Box>\\\\n              )}\\\\n            </DateRangePicker>\\\\n          </Position>\\\\n\\\\n          <Box\\\\n            flexGrow={1}\\\\n            style={{ overflow: 'auto' }}\\\\n            p='15px'\\\\n            fullWidth\\\\n            mt='50px'\\\\n          >\\\\n            <FilterMultiselect\\\\n              id='branch'\\\\n              label='Hub'\\\\n              options={options}\\\\n              onSelectionChange={action('On Change')}\\\\n            />\\\\n          </Box>\\\\n          <Box\\\\n            display='flex'\\\\n            justifyContent='flex-end'\\\\n            p='15px'\\\\n            horizontalSpacing='10px'\\\\n            fullWidth\\\\n          >\\\\n            <IconButton iconVariant='icomoon-tick-circled' primary>\\\\n              Apply\\\\n            </IconButton>\\\\n            <IconButton iconVariant='icomoon-back'>Reset</IconButton>\\\\n          </Box>\\\\n        </Box>\\\\n      </FilterDrawer>\\\\n    </ThemeWrapper>\\\\n  )\\\\n}\\\\n\\\",\\\"locationsMap\\\":{}},},\\n  title: `${path}/FilterDrawer`,\\n  component: FilterDrawer\\n}\\n\\nconst options: IFilterMultiselectOption[] = [\\n  { id: '1', label: 'Powai', value: 'powai' },\\n  { id: '2', label: 'Andheri', value: 'andheri' },\\n  { id: '3', label: 'Bhandup', value: 'bhandup' }\\n]\\n\\nconst getFormattedDate = (date: Date) => {\\n  const todayTime = date\\n  const month = todayTime.getMonth() + 1\\n  const day = todayTime.getDate()\\n  const year = todayTime.getFullYear()\\n  const hours = todayTime.getHours()\\n  const minutes = todayTime.getMinutes()\\n  return month + '/' + day + '/' + year + ' ' + hours + ':' + minutes\\n}\\n\\nexport const withBasic = addSourceDecorator(addSourceDecorator(() => {\\n  const [isFilterOpen, setFilterOpen] = React.useState<boolean>(true)\\n\\n  // state that manages DatePickers value\\n\\n  return (\\n    <ThemeWrapper>\\n      <IconButton\\n        iconVariant='icomoon-funel'\\n        onClick={() => setFilterOpen((f) => !f)}\\n      >\\n        Filter\\n      </IconButton>\\n\\n      <FilterDrawer isOpen={isFilterOpen}>\\n        <Box display='flex' flexDirection='column' fullWidth fullHeight>\\n          <ModalHeader\\n            headerTitle='Analytics Filter'\\n            handleClose={() => setFilterOpen(false)}\\n            width='100%'\\n          />\\n\\n          {/* element that holds DateRangePickers value */}\\n          <Position type='relative'>\\n            <DateRangePicker\\n              onFromChange={action('From Clicked')}\\n              onToChange={action('To Clicked')}\\n              onApply={action('Apply Clicked')}\\n              onCancel={action('Cancel Clicked')}\\n              label={text('Label', 'Date Range')}\\n              variant='daterange'\\n              timeFormat={24}\\n              showTime={boolean('Show time', true)}\\n              startDate={new Date()}\\n              fromDateFormatter={getFormattedDate}\\n              toDateFormatter={getFormattedDate}\\n              style={{\\n                background: '#ccc',\\n                right: '0px',\\n                position: 'fixed'\\n              }}\\n            >\\n              {({ value, open, setOpen }: tDateRangeChildren) => (\\n                <Box fullWidth>\\n                  <TextInput\\n                    id='someId'\\n                    name={name}\\n                    className='someClassname'\\n                    label='Holidays'\\n                    variant='basic'\\n                    labelColor='text.inputLabel.default'\\n                    placeholder='Please Click Here'\\n                    fullWidth\\n                    value={value?.toString()}\\n                    onChange={action('On change clicked')}\\n                    onClick={() => setOpen(!open)}\\n                  />\\n                </Box>\\n              )}\\n            </DateRangePicker>\\n          </Position>\\n\\n          <Box\\n            flexGrow={1}\\n            style={{ overflow: 'auto' }}\\n            p='15px'\\n            fullWidth\\n            mt='50px'\\n          >\\n            <FilterMultiselect\\n              id='branch'\\n              label='Hub'\\n              options={options}\\n              onSelectionChange={action('On Change')}\\n            />\\n          </Box>\\n          <Box\\n            display='flex'\\n            justifyContent='flex-end'\\n            p='15px'\\n            horizontalSpacing='10px'\\n            fullWidth\\n          >\\n            <IconButton iconVariant='icomoon-tick-circled' primary>\\n              Apply\\n            </IconButton>\\n            <IconButton iconVariant='icomoon-back'>Reset</IconButton>\\n          </Box>\\n        </Box>\\n      </FilterDrawer>\\n    </ThemeWrapper>\\n  )\\n}, {__STORY__, __ADDS_MAP__,__MAIN_FILE_LOCATION__,__MODULE_DEPENDENCIES__,__LOCAL_DEPENDENCIES__,__SOURCE_PREFIX__,__IDS_TO_FRAMEWORKS__}), {__STORY__, __ADDS_MAP__,__MAIN_FILE_LOCATION__,__MODULE_DEPENDENCIES__,__LOCAL_DEPENDENCIES__,__SOURCE_PREFIX__,__IDS_TO_FRAMEWORKS__});\",\"locationsMap\":{}},\"storySource\":{\"source\":\"\\n\\n// @ts-nocheck\\n// @ts-ignore\\nvar withSourceLoader = require('@storybook/source-loader/preview').withSource;\\n// @ts-ignore\\nvar addSourceDecorator = require(\\\"@storybook/source-loader/preview\\\").addSource;\\n// @ts-ignore\\nvar __SOURCE_PREFIX__ = \\\"/Users/farhanansari/Code/ui-library/src/components/atoms/FilterDrawer\\\";\\n// @ts-ignore\\nvar __STORY__ = \\\"import React from 'react'\\\\nimport FilterDrawer from '.'\\\\nimport { path } from '..'\\\\nimport ThemeWrapper from '../../../utilities/components/ThemeWrapper'\\\\n\\\\nimport ModalHeader from '../../molecules/ModalHeader'\\\\nimport Box from '../Box'\\\\nimport IconButton from '../IconButton'\\\\nimport { IFilterMultiselectOption } from '../../molecules/FilterMultiselect/interfaces'\\\\nimport FilterMultiselect from '../../molecules/FilterMultiselect'\\\\nimport { action } from '@storybook/addon-actions'\\\\nimport { boolean, text } from '@storybook/addon-knobs'\\\\nimport { DateRangePicker } from '../../molecules/DatePicker'\\\\nimport { tDateRangeChildren } from '../../molecules/DatePicker/interfaces'\\\\nimport TextInput from '../../molecules/TextInput'\\\\nimport Position from '../../molecules/Position'\\\\n\\\\nexport default {\\\\n  title: `${path}/FilterDrawer`,\\\\n  component: FilterDrawer\\\\n}\\\\n\\\\nconst options: IFilterMultiselectOption[] = [\\\\n  { id: '1', label: 'Powai', value: 'powai' },\\\\n  { id: '2', label: 'Andheri', value: 'andheri' },\\\\n  { id: '3', label: 'Bhandup', value: 'bhandup' }\\\\n]\\\\n\\\\nconst getFormattedDate = (date: Date) => {\\\\n  const todayTime = date\\\\n  const month = todayTime.getMonth() + 1\\\\n  const day = todayTime.getDate()\\\\n  const year = todayTime.getFullYear()\\\\n  const hours = todayTime.getHours()\\\\n  const minutes = todayTime.getMinutes()\\\\n  return month + '/' + day + '/' + year + ' ' + hours + ':' + minutes\\\\n}\\\\n\\\\nexport const withBasic = () => {\\\\n  const [isFilterOpen, setFilterOpen] = React.useState<boolean>(true)\\\\n\\\\n  // state that manages DatePickers value\\\\n\\\\n  return (\\\\n    <ThemeWrapper>\\\\n      <IconButton\\\\n        iconVariant='icomoon-funel'\\\\n        onClick={() => setFilterOpen((f) => !f)}\\\\n      >\\\\n        Filter\\\\n      </IconButton>\\\\n\\\\n      <FilterDrawer isOpen={isFilterOpen}>\\\\n        <Box display='flex' flexDirection='column' fullWidth fullHeight>\\\\n          <ModalHeader\\\\n            headerTitle='Analytics Filter'\\\\n            handleClose={() => setFilterOpen(false)}\\\\n            width='100%'\\\\n          />\\\\n\\\\n          {/* element that holds DateRangePickers value */}\\\\n          <Position type='relative'>\\\\n            <DateRangePicker\\\\n              onFromChange={action('From Clicked')}\\\\n              onToChange={action('To Clicked')}\\\\n              onApply={action('Apply Clicked')}\\\\n              onCancel={action('Cancel Clicked')}\\\\n              label={text('Label', 'Date Range')}\\\\n              variant='daterange'\\\\n              timeFormat={24}\\\\n              showTime={boolean('Show time', true)}\\\\n              startDate={new Date()}\\\\n              fromDateFormatter={getFormattedDate}\\\\n              toDateFormatter={getFormattedDate}\\\\n              style={{\\\\n                background: '#ccc',\\\\n                right: '0px',\\\\n                position: 'fixed'\\\\n              }}\\\\n            >\\\\n              {({ value, open, setOpen }: tDateRangeChildren) => (\\\\n                <Box fullWidth>\\\\n                  <TextInput\\\\n                    id='someId'\\\\n                    name={name}\\\\n                    className='someClassname'\\\\n                    label='Holidays'\\\\n                    variant='basic'\\\\n                    labelColor='text.inputLabel.default'\\\\n                    placeholder='Please Click Here'\\\\n                    fullWidth\\\\n                    value={value?.toString()}\\\\n                    onChange={action('On change clicked')}\\\\n                    onClick={() => setOpen(!open)}\\\\n                  />\\\\n                </Box>\\\\n              )}\\\\n            </DateRangePicker>\\\\n          </Position>\\\\n\\\\n          <Box\\\\n            flexGrow={1}\\\\n            style={{ overflow: 'auto' }}\\\\n            p='15px'\\\\n            fullWidth\\\\n            mt='50px'\\\\n          >\\\\n            <FilterMultiselect\\\\n              id='branch'\\\\n              label='Hub'\\\\n              options={options}\\\\n              onSelectionChange={action('On Change')}\\\\n            />\\\\n          </Box>\\\\n          <Box\\\\n            display='flex'\\\\n            justifyContent='flex-end'\\\\n            p='15px'\\\\n            horizontalSpacing='10px'\\\\n            fullWidth\\\\n          >\\\\n            <IconButton iconVariant='icomoon-tick-circled' primary>\\\\n              Apply\\\\n            </IconButton>\\\\n            <IconButton iconVariant='icomoon-back'>Reset</IconButton>\\\\n          </Box>\\\\n        </Box>\\\\n      </FilterDrawer>\\\\n    </ThemeWrapper>\\\\n  )\\\\n}\\\\n\\\";\\n// @ts-ignore\\nvar __ADDS_MAP__ = {};\\n// @ts-ignore\\nvar __MAIN_FILE_LOCATION__ = \\\"/FilterDrawer.stories.tsx\\\";\\n// @ts-ignore\\nvar __MODULE_DEPENDENCIES__ = [];\\n// @ts-ignore\\nvar __LOCAL_DEPENDENCIES__ = {};\\n// @ts-ignore\\nvar __IDS_TO_FRAMEWORKS__ = {};\\n        \\nimport React from 'react'\\nimport FilterDrawer from '.'\\nimport { path } from '..'\\nimport ThemeWrapper from '../../../utilities/components/ThemeWrapper'\\n\\nimport ModalHeader from '../../molecules/ModalHeader'\\nimport Box from '../Box'\\nimport IconButton from '../IconButton'\\nimport { IFilterMultiselectOption } from '../../molecules/FilterMultiselect/interfaces'\\nimport FilterMultiselect from '../../molecules/FilterMultiselect'\\nimport { action } from '@storybook/addon-actions'\\nimport { boolean, text } from '@storybook/addon-knobs'\\nimport { DateRangePicker } from '../../molecules/DatePicker'\\nimport { tDateRangeChildren } from '../../molecules/DatePicker/interfaces'\\nimport TextInput from '../../molecules/TextInput'\\nimport Position from '../../molecules/Position'\\n\\nexport default {parameters: {\\\"storySource\\\":{\\\"source\\\":\\\"import React from 'react'\\\\nimport FilterDrawer from '.'\\\\nimport { path } from '..'\\\\nimport ThemeWrapper from '../../../utilities/components/ThemeWrapper'\\\\n\\\\nimport ModalHeader from '../../molecules/ModalHeader'\\\\nimport Box from '../Box'\\\\nimport IconButton from '../IconButton'\\\\nimport { IFilterMultiselectOption } from '../../molecules/FilterMultiselect/interfaces'\\\\nimport FilterMultiselect from '../../molecules/FilterMultiselect'\\\\nimport { action } from '@storybook/addon-actions'\\\\nimport { boolean, text } from '@storybook/addon-knobs'\\\\nimport { DateRangePicker } from '../../molecules/DatePicker'\\\\nimport { tDateRangeChildren } from '../../molecules/DatePicker/interfaces'\\\\nimport TextInput from '../../molecules/TextInput'\\\\nimport Position from '../../molecules/Position'\\\\n\\\\nexport default {\\\\n  title: `${path}/FilterDrawer`,\\\\n  component: FilterDrawer\\\\n}\\\\n\\\\nconst options: IFilterMultiselectOption[] = [\\\\n  { id: '1', label: 'Powai', value: 'powai' },\\\\n  { id: '2', label: 'Andheri', value: 'andheri' },\\\\n  { id: '3', label: 'Bhandup', value: 'bhandup' }\\\\n]\\\\n\\\\nconst getFormattedDate = (date: Date) => {\\\\n  const todayTime = date\\\\n  const month = todayTime.getMonth() + 1\\\\n  const day = todayTime.getDate()\\\\n  const year = todayTime.getFullYear()\\\\n  const hours = todayTime.getHours()\\\\n  const minutes = todayTime.getMinutes()\\\\n  return month + '/' + day + '/' + year + ' ' + hours + ':' + minutes\\\\n}\\\\n\\\\nexport const withBasic = () => {\\\\n  const [isFilterOpen, setFilterOpen] = React.useState<boolean>(true)\\\\n\\\\n  // state that manages DatePickers value\\\\n\\\\n  return (\\\\n    <ThemeWrapper>\\\\n      <IconButton\\\\n        iconVariant='icomoon-funel'\\\\n        onClick={() => setFilterOpen((f) => !f)}\\\\n      >\\\\n        Filter\\\\n      </IconButton>\\\\n\\\\n      <FilterDrawer isOpen={isFilterOpen}>\\\\n        <Box display='flex' flexDirection='column' fullWidth fullHeight>\\\\n          <ModalHeader\\\\n            headerTitle='Analytics Filter'\\\\n            handleClose={() => setFilterOpen(false)}\\\\n            width='100%'\\\\n          />\\\\n\\\\n          {/* element that holds DateRangePickers value */}\\\\n          <Position type='relative'>\\\\n            <DateRangePicker\\\\n              onFromChange={action('From Clicked')}\\\\n              onToChange={action('To Clicked')}\\\\n              onApply={action('Apply Clicked')}\\\\n              onCancel={action('Cancel Clicked')}\\\\n              label={text('Label', 'Date Range')}\\\\n              variant='daterange'\\\\n              timeFormat={24}\\\\n              showTime={boolean('Show time', true)}\\\\n              startDate={new Date()}\\\\n              fromDateFormatter={getFormattedDate}\\\\n              toDateFormatter={getFormattedDate}\\\\n              style={{\\\\n                background: '#ccc',\\\\n                right: '0px',\\\\n                position: 'fixed'\\\\n              }}\\\\n            >\\\\n              {({ value, open, setOpen }: tDateRangeChildren) => (\\\\n                <Box fullWidth>\\\\n                  <TextInput\\\\n                    id='someId'\\\\n                    name={name}\\\\n                    className='someClassname'\\\\n                    label='Holidays'\\\\n                    variant='basic'\\\\n                    labelColor='text.inputLabel.default'\\\\n                    placeholder='Please Click Here'\\\\n                    fullWidth\\\\n                    value={value?.toString()}\\\\n                    onChange={action('On change clicked')}\\\\n                    onClick={() => setOpen(!open)}\\\\n                  />\\\\n                </Box>\\\\n              )}\\\\n            </DateRangePicker>\\\\n          </Position>\\\\n\\\\n          <Box\\\\n            flexGrow={1}\\\\n            style={{ overflow: 'auto' }}\\\\n            p='15px'\\\\n            fullWidth\\\\n            mt='50px'\\\\n          >\\\\n            <FilterMultiselect\\\\n              id='branch'\\\\n              label='Hub'\\\\n              options={options}\\\\n              onSelectionChange={action('On Change')}\\\\n            />\\\\n          </Box>\\\\n          <Box\\\\n            display='flex'\\\\n            justifyContent='flex-end'\\\\n            p='15px'\\\\n            horizontalSpacing='10px'\\\\n            fullWidth\\\\n          >\\\\n            <IconButton iconVariant='icomoon-tick-circled' primary>\\\\n              Apply\\\\n            </IconButton>\\\\n            <IconButton iconVariant='icomoon-back'>Reset</IconButton>\\\\n          </Box>\\\\n        </Box>\\\\n      </FilterDrawer>\\\\n    </ThemeWrapper>\\\\n  )\\\\n}\\\\n\\\",\\\"locationsMap\\\":{}},},\\n  title: `${path}/FilterDrawer`,\\n  component: FilterDrawer\\n}\\n\\nconst options: IFilterMultiselectOption[] = [\\n  { id: '1', label: 'Powai', value: 'powai' },\\n  { id: '2', label: 'Andheri', value: 'andheri' },\\n  { id: '3', label: 'Bhandup', value: 'bhandup' }\\n]\\n\\nconst getFormattedDate = (date: Date) => {\\n  const todayTime = date\\n  const month = todayTime.getMonth() + 1\\n  const day = todayTime.getDate()\\n  const year = todayTime.getFullYear()\\n  const hours = todayTime.getHours()\\n  const minutes = todayTime.getMinutes()\\n  return month + '/' + day + '/' + year + ' ' + hours + ':' + minutes\\n}\\n\\nexport const withBasic = addSourceDecorator(() => {\\n  const [isFilterOpen, setFilterOpen] = React.useState<boolean>(true)\\n\\n  // state that manages DatePickers value\\n\\n  return (\\n    <ThemeWrapper>\\n      <IconButton\\n        iconVariant='icomoon-funel'\\n        onClick={() => setFilterOpen((f) => !f)}\\n      >\\n        Filter\\n      </IconButton>\\n\\n      <FilterDrawer isOpen={isFilterOpen}>\\n        <Box display='flex' flexDirection='column' fullWidth fullHeight>\\n          <ModalHeader\\n            headerTitle='Analytics Filter'\\n            handleClose={() => setFilterOpen(false)}\\n            width='100%'\\n          />\\n\\n          {/* element that holds DateRangePickers value */}\\n          <Position type='relative'>\\n            <DateRangePicker\\n              onFromChange={action('From Clicked')}\\n              onToChange={action('To Clicked')}\\n              onApply={action('Apply Clicked')}\\n              onCancel={action('Cancel Clicked')}\\n              label={text('Label', 'Date Range')}\\n              variant='daterange'\\n              timeFormat={24}\\n              showTime={boolean('Show time', true)}\\n              startDate={new Date()}\\n              fromDateFormatter={getFormattedDate}\\n              toDateFormatter={getFormattedDate}\\n              style={{\\n                background: '#ccc',\\n                right: '0px',\\n                position: 'fixed'\\n              }}\\n            >\\n              {({ value, open, setOpen }: tDateRangeChildren) => (\\n                <Box fullWidth>\\n                  <TextInput\\n                    id='someId'\\n                    name={name}\\n                    className='someClassname'\\n                    label='Holidays'\\n                    variant='basic'\\n                    labelColor='text.inputLabel.default'\\n                    placeholder='Please Click Here'\\n                    fullWidth\\n                    value={value?.toString()}\\n                    onChange={action('On change clicked')}\\n                    onClick={() => setOpen(!open)}\\n                  />\\n                </Box>\\n              )}\\n            </DateRangePicker>\\n          </Position>\\n\\n          <Box\\n            flexGrow={1}\\n            style={{ overflow: 'auto' }}\\n            p='15px'\\n            fullWidth\\n            mt='50px'\\n          >\\n            <FilterMultiselect\\n              id='branch'\\n              label='Hub'\\n              options={options}\\n              onSelectionChange={action('On Change')}\\n            />\\n          </Box>\\n          <Box\\n            display='flex'\\n            justifyContent='flex-end'\\n            p='15px'\\n            horizontalSpacing='10px'\\n            fullWidth\\n          >\\n            <IconButton iconVariant='icomoon-tick-circled' primary>\\n              Apply\\n            </IconButton>\\n            <IconButton iconVariant='icomoon-back'>Reset</IconButton>\\n          </Box>\\n        </Box>\\n      </FilterDrawer>\\n    </ThemeWrapper>\\n  )\\n}, {__STORY__, __ADDS_MAP__,__MAIN_FILE_LOCATION__,__MODULE_DEPENDENCIES__,__LOCAL_DEPENDENCIES__,__SOURCE_PREFIX__,__IDS_TO_FRAMEWORKS__});\",\"locationsMap\":{}},\"storySource\":{\"source\":\"import React from 'react'\\nimport FilterDrawer from '.'\\nimport { path } from '..'\\nimport ThemeWrapper from '../../../utilities/components/ThemeWrapper'\\n\\nimport ModalHeader from '../../molecules/ModalHeader'\\nimport Box from '../Box'\\nimport IconButton from '../IconButton'\\nimport { IFilterMultiselectOption } from '../../molecules/FilterMultiselect/interfaces'\\nimport FilterMultiselect from '../../molecules/FilterMultiselect'\\nimport { action } from '@storybook/addon-actions'\\nimport { boolean, text } from '@storybook/addon-knobs'\\nimport { DateRangePicker } from '../../molecules/DatePicker'\\nimport { tDateRangeChildren } from '../../molecules/DatePicker/interfaces'\\nimport TextInput from '../../molecules/TextInput'\\nimport Position from '../../molecules/Position'\\n\\nexport default {\\n  title: `${path}/FilterDrawer`,\\n  component: FilterDrawer\\n}\\n\\nconst options: IFilterMultiselectOption[] = [\\n  { id: '1', label: 'Powai', value: 'powai' },\\n  { id: '2', label: 'Andheri', value: 'andheri' },\\n  { id: '3', label: 'Bhandup', value: 'bhandup' }\\n]\\n\\nconst getFormattedDate = (date: Date) => {\\n  const todayTime = date\\n  const month = todayTime.getMonth() + 1\\n  const day = todayTime.getDate()\\n  const year = todayTime.getFullYear()\\n  const hours = todayTime.getHours()\\n  const minutes = todayTime.getMinutes()\\n  return month + '/' + day + '/' + year + ' ' + hours + ':' + minutes\\n}\\n\\nexport const withBasic = () => {\\n  const [isFilterOpen, setFilterOpen] = React.useState<boolean>(true)\\n\\n  // state that manages DatePickers value\\n\\n  return (\\n    <ThemeWrapper>\\n      <IconButton\\n        iconVariant='icomoon-funel'\\n        onClick={() => setFilterOpen((f) => !f)}\\n      >\\n        Filter\\n      </IconButton>\\n\\n      <FilterDrawer isOpen={isFilterOpen}>\\n        <Box display='flex' flexDirection='column' fullWidth fullHeight>\\n          <ModalHeader\\n            headerTitle='Analytics Filter'\\n            handleClose={() => setFilterOpen(false)}\\n            width='100%'\\n          />\\n\\n          {/* element that holds DateRangePickers value */}\\n          <Position type='relative'>\\n            <DateRangePicker\\n              onFromChange={action('From Clicked')}\\n              onToChange={action('To Clicked')}\\n              onApply={action('Apply Clicked')}\\n              onCancel={action('Cancel Clicked')}\\n              label={text('Label', 'Date Range')}\\n              variant='daterange'\\n              timeFormat={24}\\n              showTime={boolean('Show time', true)}\\n              startDate={new Date()}\\n              fromDateFormatter={getFormattedDate}\\n              toDateFormatter={getFormattedDate}\\n              style={{\\n                background: '#ccc',\\n                right: '0px',\\n                position: 'fixed'\\n              }}\\n            >\\n              {({ value, open, setOpen }: tDateRangeChildren) => (\\n                <Box fullWidth>\\n                  <TextInput\\n                    id='someId'\\n                    name={name}\\n                    className='someClassname'\\n                    label='Holidays'\\n                    variant='basic'\\n                    labelColor='text.inputLabel.default'\\n                    placeholder='Please Click Here'\\n                    fullWidth\\n                    value={value?.toString()}\\n                    onChange={action('On change clicked')}\\n                    onClick={() => setOpen(!open)}\\n                  />\\n                </Box>\\n              )}\\n            </DateRangePicker>\\n          </Position>\\n\\n          <Box\\n            flexGrow={1}\\n            style={{ overflow: 'auto' }}\\n            p='15px'\\n            fullWidth\\n            mt='50px'\\n          >\\n            <FilterMultiselect\\n              id='branch'\\n              label='Hub'\\n              options={options}\\n              onSelectionChange={action('On Change')}\\n            />\\n          </Box>\\n          <Box\\n            display='flex'\\n            justifyContent='flex-end'\\n            p='15px'\\n            horizontalSpacing='10px'\\n            fullWidth\\n          >\\n            <IconButton iconVariant='icomoon-tick-circled' primary>\\n              Apply\\n            </IconButton>\\n            <IconButton iconVariant='icomoon-back'>Reset</IconButton>\\n          </Box>\\n        </Box>\\n      </FilterDrawer>\\n    </ThemeWrapper>\\n  )\\n}\\n\",\"locationsMap\":{}},},\n  title: `${path}/FilterDrawer`,\n  component: FilterDrawer\n}\n\nconst options: IFilterMultiselectOption[] = [\n  { id: '1', label: 'Powai', value: 'powai' },\n  { id: '2', label: 'Andheri', value: 'andheri' },\n  { id: '3', label: 'Bhandup', value: 'bhandup' }\n]\n\nconst getFormattedDate = (date: Date) => {\n  const todayTime = date\n  const month = todayTime.getMonth() + 1\n  const day = todayTime.getDate()\n  const year = todayTime.getFullYear()\n  const hours = todayTime.getHours()\n  const minutes = todayTime.getMinutes()\n  return month + '/' + day + '/' + year + ' ' + hours + ':' + minutes\n}\n\nexport const withBasic = addSourceDecorator(addSourceDecorator(addSourceDecorator(() => {\n  const [isFilterOpen, setFilterOpen] = React.useState<boolean>(true)\n\n  // state that manages DatePickers value\n\n  return (\n    <ThemeWrapper>\n      <IconButton\n        iconVariant='icomoon-funel'\n        onClick={() => setFilterOpen((f) => !f)}\n      >\n        Filter\n      </IconButton>\n\n      <FilterDrawer isOpen={isFilterOpen}>\n        <Box display='flex' flexDirection='column' fullWidth fullHeight>\n          <ModalHeader\n            headerTitle='Analytics Filter'\n            handleClose={() => setFilterOpen(false)}\n            width='100%'\n          />\n\n          {/* element that holds DateRangePickers value */}\n          <Position type='relative'>\n            <DateRangePicker\n              onFromChange={action('From Clicked')}\n              onToChange={action('To Clicked')}\n              onApply={action('Apply Clicked')}\n              onCancel={action('Cancel Clicked')}\n              label={text('Label', 'Date Range')}\n              variant='daterange'\n              timeFormat={24}\n              showTime={boolean('Show time', true)}\n              startDate={new Date()}\n              fromDateFormatter={getFormattedDate}\n              toDateFormatter={getFormattedDate}\n              style={{\n                background: '#ccc',\n                right: '0px',\n                position: 'fixed'\n              }}\n            >\n              {({ value, open, setOpen }: tDateRangeChildren) => (\n                <Box fullWidth>\n                  <TextInput\n                    id='someId'\n                    name={name}\n                    className='someClassname'\n                    label='Holidays'\n                    variant='basic'\n                    labelColor='text.inputLabel.default'\n                    placeholder='Please Click Here'\n                    fullWidth\n                    value={value?.toString()}\n                    onChange={action('On change clicked')}\n                    onClick={() => setOpen(!open)}\n                  />\n                </Box>\n              )}\n            </DateRangePicker>\n          </Position>\n\n          <Box\n            flexGrow={1}\n            style={{ overflow: 'auto' }}\n            p='15px'\n            fullWidth\n            mt='50px'\n          >\n            <FilterMultiselect\n              id='branch'\n              label='Hub'\n              options={options}\n              onSelectionChange={action('On Change')}\n            />\n          </Box>\n          <Box\n            display='flex'\n            justifyContent='flex-end'\n            p='15px'\n            horizontalSpacing='10px'\n            fullWidth\n          >\n            <IconButton iconVariant='icomoon-tick-circled' primary>\n              Apply\n            </IconButton>\n            <IconButton iconVariant='icomoon-back'>Reset</IconButton>\n          </Box>\n        </Box>\n      </FilterDrawer>\n    </ThemeWrapper>\n  )\n}, {__STORY__, __ADDS_MAP__,__MAIN_FILE_LOCATION__,__MODULE_DEPENDENCIES__,__LOCAL_DEPENDENCIES__,__SOURCE_PREFIX__,__IDS_TO_FRAMEWORKS__}), {__STORY__, __ADDS_MAP__,__MAIN_FILE_LOCATION__,__MODULE_DEPENDENCIES__,__LOCAL_DEPENDENCIES__,__SOURCE_PREFIX__,__IDS_TO_FRAMEWORKS__}), {__STORY__, __ADDS_MAP__,__MAIN_FILE_LOCATION__,__MODULE_DEPENDENCIES__,__LOCAL_DEPENDENCIES__,__SOURCE_PREFIX__,__IDS_TO_FRAMEWORKS__});"],"sourceRoot":""},"metadata":{},"sourceType":"module"}