{"ast":null,"code":"import _taggedTemplateLiteral from \"/Users/farhanansari/Code/ui-library/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/taggedTemplateLiteral\";\n\nvar _this = this,\n    _jsxFileName = \"/Users/farhanansari/Code/ui-library/src/components/atoms/ProgressBar/index.tsx\";\n\nfunction _templateObject() {\n  var data = _taggedTemplateLiteral([\"\\n  \", \"\\n\"]);\n\n  _templateObject = function _templateObject() {\n    return data;\n  };\n\n  return data;\n}\n\nimport React from 'react';\nimport styled from 'styled-components';\nimport Typography from '../Typography';\nvar ProgressSlider = styled.div(_templateObject(), function (_ref) {\n  var _theme$colors, _theme$colors$primary, _theme$colors2, _theme$colors2$primar;\n\n  var completedColor = _ref.completedColor,\n      _ref$completedPercent = _ref.completedPercent,\n      completedPercent = _ref$completedPercent === void 0 ? 0 : _ref$completedPercent,\n      _ref$thickness = _ref.thickness,\n      thickness = _ref$thickness === void 0 ? 6 : _ref$thickness,\n      theme = _ref.theme,\n      _ref$incompleteColor = _ref.incompleteColor,\n      incompleteColor = _ref$incompleteColor === void 0 ? \"#e9edf0\" : _ref$incompleteColor;\n  return \"\\n    background: linear-gradient(to right, \".concat(completedColor ? completedColor : theme === null || theme === void 0 ? void 0 : (_theme$colors = theme.colors) === null || _theme$colors === void 0 ? void 0 : (_theme$colors$primary = _theme$colors.primary) === null || _theme$colors$primary === void 0 ? void 0 : _theme$colors$primary.main, \" 0%, \").concat(completedColor ? completedColor : theme === null || theme === void 0 ? void 0 : (_theme$colors2 = theme.colors) === null || _theme$colors2 === void 0 ? void 0 : (_theme$colors2$primar = _theme$colors2.primary) === null || _theme$colors2$primar === void 0 ? void 0 : _theme$colors2$primar.main, \" \").concat(completedPercent, \"%, \").concat(incompleteColor, \" \").concat(completedPercent, \"%, \").concat(incompleteColor, \" 100%);\\n    border-radius: 2px;\\n    width: 100%;\\n    height: \").concat(thickness, \"px;\\n    outline: none;\\n    transition: background 450ms ease-in;\\n    -webkit-appearance: none;\\n    \\n  \");\n});\n\nvar ProgressBar = function ProgressBar(_ref2) {\n  var _ref2$incompleteColor = _ref2.incompleteColor,\n      incompleteColor = _ref2$incompleteColor === void 0 ? '#e9edf0' : _ref2$incompleteColor,\n      _ref2$completedColor = _ref2.completedColor,\n      completedColor = _ref2$completedColor === void 0 ? '#5698d3' : _ref2$completedColor,\n      _ref2$completedPercen = _ref2.completedPercent,\n      completedPercent = _ref2$completedPercen === void 0 ? 40 : _ref2$completedPercen,\n      _ref2$thickness = _ref2.thickness,\n      thickness = _ref2$thickness === void 0 ? 6 : _ref2$thickness,\n      _ref2$labelText = _ref2.labelText,\n      labelText = _ref2$labelText === void 0 ? '' : _ref2$labelText,\n      _ref2$labelFontSize = _ref2.labelFontSize,\n      labelFontSize = _ref2$labelFontSize === void 0 ? '11px' : _ref2$labelFontSize,\n      _ref2$labelFontColor = _ref2.labelFontColor,\n      labelFontColor = _ref2$labelFontColor === void 0 ? 'black' : _ref2$labelFontColor,\n      _ref2$labelFontWeight = _ref2.labelFontWeight,\n      labelFontWeight = _ref2$labelFontWeight === void 0 ? 500 : _ref2$labelFontWeight;\n  return /*#__PURE__*/React.createElement(\"div\", {\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 45,\n      columnNumber: 3\n    }\n  }, labelText && labelText.trim() !== \"\" && /*#__PURE__*/React.createElement(Typography, {\n    useStyle: false,\n    fontSize: labelFontSize,\n    fontWeight: labelFontWeight,\n    color: labelFontColor,\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 47,\n      columnNumber: 7\n    }\n  }, labelText), /*#__PURE__*/React.createElement(ProgressSlider, {\n    thickness: thickness,\n    completedColor: completedColor,\n    completedPercent: completedPercent,\n    incompleteColor: incompleteColor,\n    labelText: labelText,\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 55,\n      columnNumber: 5\n    }\n  }));\n};\n\nexport default ProgressBar;","map":{"version":3,"sources":["/Users/farhanansari/Code/ui-library/src/components/atoms/ProgressBar/index.tsx"],"names":["React","styled","Typography","ProgressSlider","div","completedColor","completedPercent","thickness","theme","incompleteColor","colors","primary","main","ProgressBar","labelText","labelFontSize","labelFontColor","labelFontWeight","trim"],"mappings":";;;;;;;;;;;;;;;AAAA,OAAOA,KAAP,MAAkB,OAAlB;AACA,OAAOC,MAAP,MAAmB,mBAAnB;AACA,OAAOC,UAAP,MAAuB,eAAvB;AAiBA,IAAMC,cAAc,GAAGF,MAAM,CAACG,GAAV,oBAChB;AAAA;;AAAA,MAAGC,cAAH,QAAGA,cAAH;AAAA,mCAAmBC,gBAAnB;AAAA,MAAmBA,gBAAnB,sCAAsC,CAAtC;AAAA,4BAAyCC,SAAzC;AAAA,MAAyCA,SAAzC,+BAAqD,CAArD;AAAA,MAAwDC,KAAxD,QAAwDA,KAAxD;AAAA,kCAA+DC,eAA/D;AAAA,MAA+DA,eAA/D,qCAAiF,SAAjF;AAAA,+DAEwCJ,cAAc,GAACA,cAAD,GAAgBG,KAAhB,aAAgBA,KAAhB,wCAAgBA,KAAK,CAAEE,MAAvB,2EAAgB,cAAeC,OAA/B,0DAAgB,sBAAwBC,IAF9F,kBAE0GP,cAAc,GAACA,cAAD,GAAgBG,KAAhB,aAAgBA,KAAhB,yCAAgBA,KAAK,CAAEE,MAAvB,4EAAgB,eAAeC,OAA/B,0DAAgB,sBAAwBC,IAFhK,cAEwKN,gBAFxK,gBAE8LG,eAF9L,cAEiNH,gBAFjN,gBAEuOG,eAFvO,6EAKUF,SALV;AAAA,CADgB,CAApB;;AAeA,IAAMM,WAAW,GAAG,SAAdA,WAAc;AAAA,oCAClBJ,eADkB;AAAA,MAClBA,eADkB,sCACA,SADA;AAAA,mCAElBJ,cAFkB;AAAA,MAElBA,cAFkB,qCAED,SAFC;AAAA,oCAGlBC,gBAHkB;AAAA,MAGlBA,gBAHkB,sCAGC,EAHD;AAAA,8BAIlBC,SAJkB;AAAA,MAIlBA,SAJkB,gCAIN,CAJM;AAAA,8BAKlBO,SALkB;AAAA,MAKlBA,SALkB,gCAKN,EALM;AAAA,kCAMlBC,aANkB;AAAA,MAMlBA,aANkB,oCAMF,MANE;AAAA,mCAOlBC,cAPkB;AAAA,MAOlBA,cAPkB,qCAOD,OAPC;AAAA,oCAQlBC,eARkB;AAAA,MAQlBA,eARkB,sCAQA,GARA;AAAA,sBAUlB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KACGH,SAAS,IAAIA,SAAS,CAACI,IAAV,OAAqB,EAAlC,iBACC,oBAAC,UAAD;AACE,IAAA,QAAQ,EAAE,KADZ;AAEE,IAAA,QAAQ,EAAEH,aAFZ;AAGE,IAAA,UAAU,EAAEE,eAHd;AAIE,IAAA,KAAK,EAAED,cAJT;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KAMGF,SANH,CAFJ,eAUE,oBAAC,cAAD;AACE,IAAA,SAAS,EAAEP,SADb;AAEE,IAAA,cAAc,EAAEF,cAFlB;AAGE,IAAA,gBAAgB,EAAEC,gBAHpB;AAIE,IAAA,eAAe,EAAEG,eAJnB;AAKE,IAAA,SAAS,EAAEK,SALb;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,IAVF,CAVkB;AAAA,CAApB;;AAiCA,eAAeD,WAAf","sourcesContent":["import React from 'react'\nimport styled from 'styled-components'\nimport Typography from '../Typography'\n\nexport interface ProgressBarProps {\n  incompleteColor?: string\n  completedColor?: string\n  completedPercent?: number\n  thickness?: number\n  borderThickness?: number\n  labelText?: string\n  labelFontSize?: string\n  labelFontColor?: string\n  labelFontWeight?: number\n}\n// All Numbers in pixels\nexport type ovalRadiusType = 2 | 5 | 10 | 15\nexport type thicknessType = 2 | 4 | 6 | 8 | 10\n\nconst ProgressSlider = styled.div<ProgressBarProps>`\n  ${({ completedColor, completedPercent = 0, thickness = 6, theme, incompleteColor = \"#e9edf0\" }) =>\n    `\n    background: linear-gradient(to right, ${completedColor?completedColor:theme?.colors?.primary?.main} 0%, ${completedColor?completedColor:theme?.colors?.primary?.main} ${completedPercent}%, ${incompleteColor} ${completedPercent}%, ${incompleteColor} 100%);\n    border-radius: 2px;\n    width: 100%;\n    height: ${thickness}px;\n    outline: none;\n    transition: background 450ms ease-in;\n    -webkit-appearance: none;\n    \n  `}\n`\n\n\nconst ProgressBar = ({\n  incompleteColor = '#e9edf0',\n  completedColor = '#5698d3',\n  completedPercent = 40,\n  thickness = 6,\n  labelText = '',\n  labelFontSize = '11px',\n  labelFontColor = 'black',\n  labelFontWeight = 500\n}: Partial<ProgressBarProps>) => (\n  <div>\n    {labelText && labelText.trim() !== \"\"  && \n      <Typography\n        useStyle={false}\n        fontSize={labelFontSize}\n        fontWeight={labelFontWeight}\n        color={labelFontColor}\n      >\n        {labelText}\n      </Typography> }\n    <ProgressSlider \n      thickness={thickness} \n      completedColor={completedColor}\n      completedPercent={completedPercent}\n      incompleteColor={incompleteColor}\n      labelText={labelText}\n    >\n    </ProgressSlider>\n\n  </div>\n    \n)\n\nexport default ProgressBar\n"]},"metadata":{},"sourceType":"module"}